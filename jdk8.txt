[info] Loading settings from idea.sbt ...
[info] Loading global plugins from /home/andriy/.sbt/1.0/plugins
[info] Loading settings from plugins.sbt ...
[info] Loading project definition from /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/project
[info] Loading settings from release.sbt,build.sbt,version.sbt ...
[info] Set current project to jsoniter-scala (in build file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/)
[info] Setting Scala version to 2.12.6 on 2 projects.
[info] Excluded 2 projects, run ++ 2.12.6 -v for more details.
[info] Reapplying settings...
[info] Set current project to jsoniter-scala (in build file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/)
[success] Total time: 0 s, completed Jun 2, 2018 10:53:30 PM
[info] Updating core...
[info] Done updating.
[info] Updating macros...
[info] Done updating.
[info] Updating benchmark...
[info] Done updating.
[info] Compiling 5 Scala sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/target/scala-2.12/classes ...
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/core/JsonReader.scala:989:79: constructor String in class String is deprecated: see corresponding Javadoc for more information.
[warn]   private[this] def toDouble(pos: Int): Double = java.lang.Double.parseDouble(new String(buf, 0, mark, pos - mark))
[warn]                                                                               ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/core/JsonReader.scala:1075:75: constructor String in class String is deprecated: see corresponding Javadoc for more information.
[warn]   private[this] def toFloat(pos: Int): Float = java.lang.Float.parseFloat(new String(buf, 0, mark, pos - mark))
[warn]                                                                           ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/core/JsonWriter.scala:443:7: method getBytes in class String is deprecated: see corresponding Javadoc for more information.
[warn]     s.getBytes(0, len, buf, pos)
[warn]       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/core/JsonWriter.scala:451:7: method getBytes in class String is deprecated: see corresponding Javadoc for more information.
[warn]     s.getBytes(0, len, buf, pos + 1)
[warn]       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/core/JsonWriter.scala:967:14: method getBytes in class String is deprecated: see corresponding Javadoc for more information.
[warn]       zoneId.getBytes(0, len, buf, pos)
[warn]              ^
[warn] 5 warnings found
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/target/scala-2.12/core_2.12-0.27.3-SNAPSHOT.jar ...
[info] Compiling 1 Scala source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/target/scala-2.12/classes ...
[info] Done packaging.
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/target/scala-2.12/macros_2.12-0.27.3-SNAPSHOT.jar ...
[info] Compiling 59 Scala sources and 1 Java source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes ...
[info] Done packaging.
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:17:48: Generated JSON codec for type 'Int':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Int] {
[info]       def nullValue: Int = 0;
[info]       def decodeValue(in: JsonReader, default: Int): Int = in.readInt();
[info]       def encodeValue(x: Int, out: JsonWriter): Unit = out.writeVal(x)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val intCodec: JsonValueCodec[Int] = make[Int](CodecMakerConfig()) // don't define implicit for supported types
[info]                                                ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:18:57: Generated JSON codec for type 'String':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[String] {
[info]       def nullValue: String = null;
[info]       def decodeValue(in: JsonReader, default: String): String = in.readString(default);
[info]       def encodeValue(x: String, out: JsonWriter): Unit = out.writeVal(x)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val stringCodec: JsonValueCodec[String] = make[String](CodecMakerConfig()) // don't define implicit for supported types
[info]                                                         ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:19:56: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase): com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d1(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.A): com.github.plokhotnyuk.jsoniter_scala.macros.A = if (in.isNextToken('{'))
[info]         {
[info]           var _a: Int = 0;
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 97 => if (in.isCharBufEqualsTo(l, "a"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _a = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(1).!=(0))
[info]             in.requiredFieldError(f0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.A(a = _a)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d2(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.B): com.github.plokhotnyuk.jsoniter_scala.macros.B = if (in.isNextToken('{'))
[info]         {
[info]           var _b: String = null;
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 98 => if (in.isCharBufEqualsTo(l, "b"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _b = in.readString(_b)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(1).!=(0))
[info]             in.requiredFieldError(f1(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.B(b = _b)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d3(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.C): com.github.plokhotnyuk.jsoniter_scala.macros.C = if (in.isNextToken('{'))
[info]         {
[info]           var _l: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = null;
[info]           var _r: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = null;
[info]           var p0 = 3;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 108 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _l = d0(in, _l)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 114 => if (in.isCharBufEqualsTo(l, "r"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _r = d0(in, _r)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(3).!=(0))
[info]             in.requiredFieldError(f2(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.C(l = _l, r = _r)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase): com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = {
[info]         in.setMark();
[info]         if (in.isNextToken('{'))
[info]           if (in.skipToKey("type"))
[info]             {
[info]               val l = in.readStringAsCharBuf();
[info]               (in.charBufToHashCode(l): @switch) match {
[info]                 case 65 => if (in.isCharBufEqualsTo(l, "A"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d1(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case 66 => if (in.isCharBufEqualsTo(l, "B"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d2(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case 67 => if (in.isCharBufEqualsTo(l, "C"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d3(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case _ => in.discriminatorValueError("type")
[info]               }
[info]             }
[info]           else
[info]             in.requiredFieldError("type")
[info]         else
[info]           in.readNullOrTokenError(default, '{')
[info]       };
[info]       private[this] def e1(x: com.github.plokhotnyuk.jsoniter_scala.macros.A, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("A")
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("a");
[info]           out.writeVal(x.a)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e2(x: com.github.plokhotnyuk.jsoniter_scala.macros.B, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("B")
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("b");
[info]           out.writeVal(x.b)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e3(x: com.github.plokhotnyuk.jsoniter_scala.macros.C, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("C")
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("l");
[info]           e0(x.l, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("r");
[info]           e0(x.r, out)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase, out: JsonWriter): Unit = x match {
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.A)) => e1(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.B)) => e2(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.C)) => e3(x, out)
[info]       };
[info]       private[this] def f0(i: Int): String = (i: @switch) match {
[info]         case 0 => "a"
[info]       };
[info]       private[this] def f1(i: Int): String = (i: @switch) match {
[info]         case 0 => "b"
[info]       };
[info]       private[this] def f2(i: Int): String = (i: @switch) match {
[info]         case 0 => "l"
[info]         case 1 => "r"
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val adtCodec: JsonValueCodec[AdtBase] = make[AdtBase](CodecMakerConfig()) // don't define implicit for recursive structures
[info]                                                        ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:20:60: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON): com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d2(in: JsonReader, default: scala.collection.immutable.Map[String,String]): scala.collection.immutable.Map[String,String] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = Map.empty[String, String];
[info]             do 
[info]               x = x.updated(in.readKeyAsString(), in.readString(null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d5(in: JsonReader, default: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Geometry]): IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Geometry] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.Geometry];
[info]             do 
[info]               x.+=(d3(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d4(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.GeometryCollection): com.github.plokhotnyuk.jsoniter_scala.macros.GeometryCollection = if (in.isNextToken('{'))
[info]         {
[info]           var _geometries: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Geometry] = IndexedSeq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Geometry];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 203916432 => if (in.isCharBufEqualsTo(l, "geometries"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _geometries = d5(in, _geometries)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.GeometryCollection(geometries = _geometries)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d8(in: JsonReader, default: (Double, Double)): (Double, Double) = if (in.isNextToken('['))
[info]         {
[info]           val _1: Double = in.readDouble();
[info]           val _2: Double = if (in.isNextToken(','))
[info]             in.readDouble()
[info]           else
[info]             in.commaError();
[info]           if (in.isNextToken(']'))
[info]             new (Double, Double)(_1, _2)
[info]           else
[info]             in.arrayEndError()
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d7(in: JsonReader, default: IndexedSeq[(Double, Double)]): IndexedSeq[(Double, Double)] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[(Double, Double)];
[info]             do 
[info]               x.+=(d8(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d6(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.LineString): com.github.plokhotnyuk.jsoniter_scala.macros.LineString = if (in.isNextToken('{'))
[info]         {
[info]           var _coordinates: IndexedSeq[(Double, Double)] = IndexedSeq.empty[(Double, Double)];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d7(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.LineString(coordinates = _coordinates)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d10(in: JsonReader, default: IndexedSeq[IndexedSeq[(Double, Double)]]): IndexedSeq[IndexedSeq[(Double, Double)]] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[IndexedSeq[(Double, Double)]];
[info]             do 
[info]               x.+=(d7(in, IndexedSeq.empty[(Double, Double)]))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d9(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Polygon): com.github.plokhotnyuk.jsoniter_scala.macros.Polygon = if (in.isNextToken('{'))
[info]         {
[info]           var _coordinates: IndexedSeq[IndexedSeq[(Double, Double)]] = IndexedSeq.empty[IndexedSeq[(Double, Double)]];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d10(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Polygon(coordinates = _coordinates)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d11(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MultiLineString): com.github.plokhotnyuk.jsoniter_scala.macros.MultiLineString = if (in.isNextToken('{'))
[info]         {
[info]           var _coordinates: IndexedSeq[IndexedSeq[(Double, Double)]] = IndexedSeq.empty[IndexedSeq[(Double, Double)]];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d10(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.MultiLineString(coordinates = _coordinates)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d13(in: JsonReader, default: IndexedSeq[IndexedSeq[IndexedSeq[(Double, Double)]]]): IndexedSeq[IndexedSeq[IndexedSeq[(Double, Double)]]] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[IndexedSeq[IndexedSeq[(Double, Double)]]];
[info]             do 
[info]               x.+=(d10(in, IndexedSeq.empty[IndexedSeq[(Double, Double)]]))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d12(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MultiPolygon): com.github.plokhotnyuk.jsoniter_scala.macros.MultiPolygon = if (in.isNextToken('{'))
[info]         {
[info]           var _coordinates: IndexedSeq[IndexedSeq[IndexedSeq[(Double, Double)]]] = IndexedSeq.empty[IndexedSeq[IndexedSeq[(Double, Double)]]];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d13(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.MultiPolygon(coordinates = _coordinates)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d14(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MultiPoint): com.github.plokhotnyuk.jsoniter_scala.macros.MultiPoint = if (in.isNextToken('{'))
[info]         {
[info]           var _coordinates: IndexedSeq[(Double, Double)] = IndexedSeq.empty[(Double, Double)];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d7(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.MultiPoint(coordinates = _coordinates)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d15(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Point): com.github.plokhotnyuk.jsoniter_scala.macros.Point = if (in.isNextToken('{'))
[info]         {
[info]           var _coordinates: (Double, Double) = null;
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d8(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(1).!=(0))
[info]             in.requiredFieldError(f1(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Point(coordinates = _coordinates)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d3(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Geometry): com.github.plokhotnyuk.jsoniter_scala.macros.Geometry = {
[info]         in.setMark();
[info]         if (in.isNextToken('{'))
[info]           if (in.skipToKey("type"))
[info]             {
[info]               val l = in.readStringAsCharBuf();
[info]               (in.charBufToHashCode(l): @switch) match {
[info]                 case 1950410960 => if (in.isCharBufEqualsTo(l, "GeometryCollection"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d4(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case 1806700869 => if (in.isCharBufEqualsTo(l, "LineString"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d6(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case 1267133722 => if (in.isCharBufEqualsTo(l, "Polygon"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d9(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case -627102946 => if (in.isCharBufEqualsTo(l, "MultiLineString"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d11(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case -2116761119 => if (in.isCharBufEqualsTo(l, "MultiPolygon"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d12(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case -1065891849 => if (in.isCharBufEqualsTo(l, "MultiPoint"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d14(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case 77292912 => if (in.isCharBufEqualsTo(l, "Point"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d15(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case _ => in.discriminatorValueError("type")
[info]               }
[info]             }
[info]           else
[info]             in.requiredFieldError("type")
[info]         else
[info]           in.readNullOrTokenError(default, '{')
[info]       };
[info]       private[this] def d1(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Feature): com.github.plokhotnyuk.jsoniter_scala.macros.Feature = if (in.isNextToken('{'))
[info]         {
[info]           var _properties: scala.collection.immutable.Map[String,String] = Map.empty[String, String];
[info]           var _geometry: com.github.plokhotnyuk.jsoniter_scala.macros.Geometry = null;
[info]           var p0 = 3;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -926053069 => if (in.isCharBufEqualsTo(l, "properties"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _properties = d2(in, _properties)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1846020210 => if (in.isCharBufEqualsTo(l, "geometry"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _geometry = d3(in, _geometry)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(2).!=(0))
[info]             in.requiredFieldError(f0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Feature(properties = _properties, geometry = _geometry)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d17(in: JsonReader, default: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON]): IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON];
[info]             do 
[info]               x.+=(d0(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d16(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.FeatureCollection): com.github.plokhotnyuk.jsoniter_scala.macros.FeatureCollection = if (in.isNextToken('{'))
[info]         {
[info]           var _features: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON] = IndexedSeq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -290659267 => if (in.isCharBufEqualsTo(l, "features"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _features = d17(in, _features)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.FeatureCollection(features = _features)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON): com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON = {
[info]         in.setMark();
[info]         if (in.isNextToken('{'))
[info]           if (in.skipToKey("type"))
[info]             {
[info]               val l = in.readStringAsCharBuf();
[info]               (in.charBufToHashCode(l): @switch) match {
[info]                 case 685445846 => if (in.isCharBufEqualsTo(l, "Feature"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d1(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case -1377727980 => if (in.isCharBufEqualsTo(l, "FeatureCollection"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d16(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case _ => in.discriminatorValueError("type")
[info]               }
[info]             }
[info]           else
[info]             in.requiredFieldError("type")
[info]         else
[info]           in.readNullOrTokenError(default, '{')
[info]       };
[info]       private[this] def e2(x: scala.collection.immutable.Map[String,String], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e5(x: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Geometry], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e3(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e4(x: com.github.plokhotnyuk.jsoniter_scala.macros.GeometryCollection, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("GeometryCollection")
[info]         };
[info]         {
[info]           val v = x.geometries;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("geometries");
[info]               e5(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e8(x: (Double, Double), out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         {
[info]           out.writeComma();
[info]           out.writeVal(x._1)
[info]         };
[info]         {
[info]           out.writeComma();
[info]           out.writeVal(x._2)
[info]         };
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e7(x: IndexedSeq[(Double, Double)], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e8(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e6(x: com.github.plokhotnyuk.jsoniter_scala.macros.LineString, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("LineString")
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               e7(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e10(x: IndexedSeq[IndexedSeq[(Double, Double)]], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e7(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e9(x: com.github.plokhotnyuk.jsoniter_scala.macros.Polygon, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("Polygon")
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               e10(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e11(x: com.github.plokhotnyuk.jsoniter_scala.macros.MultiLineString, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("MultiLineString")
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               e10(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e13(x: IndexedSeq[IndexedSeq[IndexedSeq[(Double, Double)]]], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e10(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e12(x: com.github.plokhotnyuk.jsoniter_scala.macros.MultiPolygon, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("MultiPolygon")
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               e13(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e14(x: com.github.plokhotnyuk.jsoniter_scala.macros.MultiPoint, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("MultiPoint")
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               e7(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e15(x: com.github.plokhotnyuk.jsoniter_scala.macros.Point, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("Point")
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("coordinates");
[info]           e8(x.coordinates, out)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e3(x: com.github.plokhotnyuk.jsoniter_scala.macros.Geometry, out: JsonWriter): Unit = x match {
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.GeometryCollection)) => e4(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.LineString)) => e6(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.Polygon)) => e9(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.MultiLineString)) => e11(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.MultiPolygon)) => e12(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.MultiPoint)) => e14(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.Point)) => e15(x, out)
[info]       };
[info]       private[this] def e1(x: com.github.plokhotnyuk.jsoniter_scala.macros.Feature, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("Feature")
[info]         };
[info]         {
[info]           val v = x.properties;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("properties");
[info]               e2(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("geometry");
[info]           e3(x.geometry, out)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e17(x: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e0(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e16(x: com.github.plokhotnyuk.jsoniter_scala.macros.FeatureCollection, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("FeatureCollection")
[info]         };
[info]         {
[info]           val v = x.features;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("features");
[info]               e17(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON, out: JsonWriter): Unit = x match {
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.Feature)) => e1(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.FeatureCollection)) => e16(x, out)
[info]       };
[info]       private[this] def f0(i: Int): String = (i: @switch) match {
[info]         case 0 => "properties"
[info]         case 1 => "geometry"
[info]       };
[info]       private[this] def f1(i: Int): String = (i: @switch) match {
[info]         case 0 => "coordinates"
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val geoJSONCodec: JsonValueCodec[GeoJSON] = make[GeoJSON](CodecMakerConfig()) // don't define implicit for recursive structures
[info]                                                            ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:21:78: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructs':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructs] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructs = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructs): com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructs = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructs, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d1(in: JsonReader, default: Option[com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructs]): Option[com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructs] = if (in.isNextToken('n'))
[info]         in.readNullOrError(default, "expected value or null")
[info]       else
[info]         {
[info]           in.rollbackToken();
[info]           Some(d0(in, null))
[info]         };
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructs): com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructs = if (in.isNextToken('{'))
[info]         {
[info]           var _n: Option[com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructs] = None;
[info]           var p0 = 1;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 110 => if (in.isCharBufEqualsTo(l, "n"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _n = d1(in, _n)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructs(n = _n)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructs, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           val v = x.n;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("n");
[info]               e0(v.get, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val nestedStructsCodec: JsonValueCodec[NestedStructs] = make[NestedStructs](CodecMakerConfig())
[info]                                                                              ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:22:69: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs): com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d1(in: JsonReader, default: Option[String]): Option[String] = if (in.isNextToken('n'))
[info]         in.readNullOrError(default, "expected value or null")
[info]       else
[info]         {
[info]           in.rollbackToken();
[info]           Some(in.readString(null))
[info]         };
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs): com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs = if (in.isNextToken('{'))
[info]         {
[info]           var _s: String = null;
[info]           var _bd: scala.math.BigDecimal = null;
[info]           var _os: Option[String] = None;
[info]           var p0 = 7;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _s = in.readString(_s)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3138 => if (in.isCharBufEqualsTo(l, "bd"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _bd = in.readBigDecimal(_bd, 300)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3556 => if (in.isCharBufEqualsTo(l, "os"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _os = d1(in, _os)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(3).!=(0))
[info]             in.requiredFieldError(f0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs(s = _s, bd = _bd, os = _os)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("s");
[info]           out.writeVal(x.s)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("bd");
[info]           out.writeVal(x.bd)
[info]         };
[info]         {
[info]           val v = x.os;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("os");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def f0(i: Int): String = (i: @switch) match {
[info]         case 0 => "s"
[info]         case 1 => "bd"
[info]         case 2 => "os"
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val anyRefsCodec: JsonValueCodec[AnyRefs] = make[AnyRefs](CodecMakerConfig())
[info]                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:23:97: Generated JSON codec for type 'Array[BigDecimal]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[BigDecimal]] {
[info]       def nullValue: Array[BigDecimal] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[BigDecimal]): Array[BigDecimal] = d0(in, default);
[info]       def encodeValue(x: Array[BigDecimal], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[BigDecimal]): Array[BigDecimal] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[scala.math.BigDecimal](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readBigDecimal(null, 300));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[BigDecimal], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[BigDecimal] = new Array[scala.math.BigDecimal](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val bigDecimalArrayCodec: JsonValueCodec[Array[BigDecimal]] = make[Array[BigDecimal]](CodecMakerConfig())
[info]                                                                                                 ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:24:85: Generated JSON codec for type 'Array[BigInt]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[BigInt]] {
[info]       def nullValue: Array[BigInt] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[BigInt]): Array[BigInt] = d0(in, default);
[info]       def encodeValue(x: Array[BigInt], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[BigInt]): Array[BigInt] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[scala.math.BigInt](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readBigInt(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[BigInt], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[BigInt] = new Array[scala.math.BigInt](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val bigIntArrayCodec: JsonValueCodec[Array[BigInt]] = make[Array[BigInt]](CodecMakerConfig())
[info]                                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:25:122: Generated JSON codec for type 'scala.collection.mutable.ArrayBuffer[Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.mutable.ArrayBuffer[Boolean]] {
[info]       def nullValue: scala.collection.mutable.ArrayBuffer[Boolean] = ArrayBuffer.empty[Boolean];
[info]       def decodeValue(in: JsonReader, default: scala.collection.mutable.ArrayBuffer[Boolean]): scala.collection.mutable.ArrayBuffer[Boolean] = d0(in, default);
[info]       def encodeValue(x: scala.collection.mutable.ArrayBuffer[Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.mutable.ArrayBuffer[Boolean]): scala.collection.mutable.ArrayBuffer[Boolean] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = default;
[info]             if (x.nonEmpty)
[info]               x.clear()
[info]             else
[info]               ();
[info]             do 
[info]               x.+=(in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: scala.collection.mutable.ArrayBuffer[Boolean], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val booleanArrayBufferCodec: JsonValueCodec[mutable.ArrayBuffer[Boolean]] = make[mutable.ArrayBuffer[Boolean]](CodecMakerConfig())
[info]                                                                                                                          ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:26:88: Generated JSON codec for type 'Array[Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Boolean]] {
[info]       def nullValue: Array[Boolean] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Boolean]): Array[Boolean] = d0(in, default);
[info]       def encodeValue(x: Array[Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[Boolean]): Array[Boolean] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Boolean](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readBoolean());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Boolean], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[Boolean] = new Array[Boolean](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val booleanArrayCodec: JsonValueCodec[Array[Boolean]] = make[Array[Boolean]](CodecMakerConfig())
[info]                                                                                        ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:27:85: Generated JSON codec for type 'List[Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[List[Boolean]] {
[info]       def nullValue: List[Boolean] = List.empty[Boolean];
[info]       def decodeValue(in: JsonReader, default: List[Boolean]): List[Boolean] = d0(in, default);
[info]       def encodeValue(x: List[Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: List[Boolean]): List[Boolean] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = new mutable.ListBuffer[Boolean]();
[info]             do 
[info]               x.+=(in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.toList
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: List[Boolean], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         var l = x;
[info]         while (l.isEmpty.`unary_!`) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(l.head);
[info]             l = l.tail
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val booleanListCodec: JsonValueCodec[List[Boolean]] = make[List[Boolean]](CodecMakerConfig())
[info]                                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:28:91: Generated JSON codec for type 'scala.collection.immutable.Vector[Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.immutable.Vector[Boolean]] {
[info]       def nullValue: scala.collection.immutable.Vector[Boolean] = Vector.empty[Boolean];
[info]       def decodeValue(in: JsonReader, default: scala.collection.immutable.Vector[Boolean]): scala.collection.immutable.Vector[Boolean] = d0(in, default);
[info]       def encodeValue(x: scala.collection.immutable.Vector[Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.immutable.Vector[Boolean]): scala.collection.immutable.Vector[Boolean] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Vector.newBuilder[Boolean];
[info]             do 
[info]               x.+=(in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: scala.collection.immutable.Vector[Boolean], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val booleanVectorCodec: JsonValueCodec[Vector[Boolean]] = make[Vector[Boolean]](CodecMakerConfig())
[info]                                                                                           ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:29:79: Generated JSON codec for type 'Array[Byte]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Byte]] {
[info]       def nullValue: Array[Byte] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Byte]): Array[Byte] = d0(in, default);
[info]       def encodeValue(x: Array[Byte], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[Byte]): Array[Byte] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Byte](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readByte());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Byte], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[Byte] = new Array[Byte](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val byteArrayCodec: JsonValueCodec[Array[Byte]] = make[Array[Byte]](CodecMakerConfig())
[info]                                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:30:79: Generated JSON codec for type 'Array[Char]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Char]] {
[info]       def nullValue: Array[Char] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Char]): Array[Char] = d0(in, default);
[info]       def encodeValue(x: Array[Char], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[Char]): Array[Char] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Char](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readChar());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Char], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[Char] = new Array[Char](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val charArrayCodec: JsonValueCodec[Array[Char]] = make[Array[Char]](CodecMakerConfig())
[info]                                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:31:85: Generated JSON codec for type 'Array[Double]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Double]] {
[info]       def nullValue: Array[Double] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Double]): Array[Double] = d0(in, default);
[info]       def encodeValue(x: Array[Double], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[Double]): Array[Double] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Double](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readDouble());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Double], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[Double] = new Array[Double](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val doubleArrayCodec: JsonValueCodec[Array[Double]] = make[Array[Double]](CodecMakerConfig())
[info]                                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:32:91: Generated JSON codec for type 'Array[java.time.Duration]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.Duration]] {
[info]       def nullValue: Array[java.time.Duration] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.Duration]): Array[java.time.Duration] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.Duration], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.Duration]): Array[java.time.Duration] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.Duration](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readDuration(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.Duration], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[java.time.Duration] = new Array[java.time.Duration](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val durationArrayCodec: JsonValueCodec[Array[Duration]] = make[Array[Duration]](CodecMakerConfig())
[info]                                                                                           ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:33:87: Generated JSON codec for type 'Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum]] {
[info]       def nullValue: Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum]): Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum] = d0(in, default);
[info]       def encodeValue(x: Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d1(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.Value): com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.Value = if (in.isNextToken('\"'))
[info]         {
[info]           in.rollbackToken();
[info]           val len = in.readStringAsCharBuf();
[info]           SuitEnum.values.iterator.find(((e) => in.isCharBufEqualsTo(len, e.toString))).getOrElse(in.enumValueError(len))
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '\"');
[info]       private[this] def d0(in: JsonReader, default: Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum]): Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.Value](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, d1(in, null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e1(x: com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.Value, out: JsonWriter): Unit = out.writeVal(x.toString);
[info]       private[this] def e0(x: Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e1(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum] = new Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.Value](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val enumArrayCodec: JsonValueCodec[Array[SuitEnum]] = make[Array[SuitEnum]](CodecMakerConfig())
[info]                                                                                       ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:34:82: Generated JSON codec for type 'Array[Float]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Float]] {
[info]       def nullValue: Array[Float] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Float]): Array[Float] = d0(in, default);
[info]       def encodeValue(x: Array[Float], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[Float]): Array[Float] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Float](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readFloat());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Float], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[Float] = new Array[Float](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val floatArrayCodec: JsonValueCodec[Array[Float]] = make[Array[Float]](CodecMakerConfig())
[info]                                                                                  ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:35:88: Generated JSON codec for type 'Array[java.time.Instant]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.Instant]] {
[info]       def nullValue: Array[java.time.Instant] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.Instant]): Array[java.time.Instant] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.Instant], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.Instant]): Array[java.time.Instant] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.Instant](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readInstant(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.Instant], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[java.time.Instant] = new Array[java.time.Instant](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val instantArrayCodec: JsonValueCodec[Array[Instant]] = make[Array[Instant]](CodecMakerConfig())
[info]                                                                                        ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:36:76: Generated JSON codec for type 'Array[Int]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Int]] {
[info]       def nullValue: Array[Int] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Int]): Array[Int] = d0(in, default);
[info]       def encodeValue(x: Array[Int], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[Int]): Array[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Int](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readInt());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[Int] = new Array[Int](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val intArrayCodec: JsonValueCodec[Array[Int]] = make[Array[Int]](CodecMakerConfig())
[info]                                                                            ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:37:83: Generated JSON codec for type 'Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit]] {
[info]       def nullValue: Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit]): Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit] = d0(in, default);
[info]       def encodeValue(x: Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d1(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Suit): com.github.plokhotnyuk.jsoniter_scala.macros.Suit = if (in.isNextToken('\"'))
[info]         {
[info]           in.rollbackToken();
[info]           val v = in.readString(null);
[info]           try {
[info]             Suit.valueOf(v)
[info]           } catch {
[info]             case ((_): IllegalArgumentException) => in.enumValueError(v)
[info]           }
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '\"');
[info]       private[this] def d0(in: JsonReader, default: Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit]): Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, d1(in, null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e1(x: com.github.plokhotnyuk.jsoniter_scala.macros.Suit, out: JsonWriter): Unit = out.writeVal(x.name);
[info]       private[this] def e0(x: Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e1(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit] = new Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val javaEnumArrayCodec: JsonValueCodec[Array[Suit]] = make[Array[Suit]](CodecMakerConfig())
[info]                                                                                   ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:38:79: Generated JSON codec for type 'Array[Long]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Long]] {
[info]       def nullValue: Array[Long] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Long]): Array[Long] = d0(in, default);
[info]       def encodeValue(x: Array[Long], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[Long]): Array[Long] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Long](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readLong());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Long], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[Long] = new Array[Long](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val longArrayCodec: JsonValueCodec[Array[Long]] = make[Array[Long]](CodecMakerConfig())
[info]                                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:39:94: Generated JSON codec for type 'Array[java.time.LocalDate]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.LocalDate]] {
[info]       def nullValue: Array[java.time.LocalDate] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.LocalDate]): Array[java.time.LocalDate] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.LocalDate], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.LocalDate]): Array[java.time.LocalDate] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.LocalDate](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readLocalDate(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.LocalDate], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[java.time.LocalDate] = new Array[java.time.LocalDate](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val localDateArrayCodec: JsonValueCodec[Array[LocalDate]] = make[Array[LocalDate]](CodecMakerConfig())
[info]                                                                                              ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:40:106: Generated JSON codec for type 'Array[java.time.LocalDateTime]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.LocalDateTime]] {
[info]       def nullValue: Array[java.time.LocalDateTime] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.LocalDateTime]): Array[java.time.LocalDateTime] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.LocalDateTime], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.LocalDateTime]): Array[java.time.LocalDateTime] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.LocalDateTime](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readLocalDateTime(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.LocalDateTime], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[java.time.LocalDateTime] = new Array[java.time.LocalDateTime](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val localDateTimeArrayCodec: JsonValueCodec[Array[LocalDateTime]] = make[Array[LocalDateTime]](CodecMakerConfig())
[info]                                                                                                          ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:41:94: Generated JSON codec for type 'Array[java.time.LocalTime]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.LocalTime]] {
[info]       def nullValue: Array[java.time.LocalTime] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.LocalTime]): Array[java.time.LocalTime] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.LocalTime], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.LocalTime]): Array[java.time.LocalTime] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.LocalTime](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readLocalTime(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.LocalTime], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[java.time.LocalTime] = new Array[java.time.LocalTime](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val localTimeArrayCodec: JsonValueCodec[Array[LocalTime]] = make[Array[LocalTime]](CodecMakerConfig())
[info]                                                                                              ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:42:109: Generated JSON codec for type 'Array[java.time.OffsetDateTime]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.OffsetDateTime]] {
[info]       def nullValue: Array[java.time.OffsetDateTime] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.OffsetDateTime]): Array[java.time.OffsetDateTime] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.OffsetDateTime], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.OffsetDateTime]): Array[java.time.OffsetDateTime] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.OffsetDateTime](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readOffsetDateTime(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.OffsetDateTime], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[java.time.OffsetDateTime] = new Array[java.time.OffsetDateTime](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val offsetDateTimeArrayCodec: JsonValueCodec[Array[OffsetDateTime]] = make[Array[OffsetDateTime]](CodecMakerConfig())
[info]                                                                                                             ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:43:97: Generated JSON codec for type 'Array[java.time.OffsetTime]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.OffsetTime]] {
[info]       def nullValue: Array[java.time.OffsetTime] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.OffsetTime]): Array[java.time.OffsetTime] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.OffsetTime], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.OffsetTime]): Array[java.time.OffsetTime] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.OffsetTime](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readOffsetTime(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.OffsetTime], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[java.time.OffsetTime] = new Array[java.time.OffsetTime](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val offsetTimeArrayCodec: JsonValueCodec[Array[OffsetTime]] = make[Array[OffsetTime]](CodecMakerConfig())
[info]                                                                                                 ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:44:85: Generated JSON codec for type 'Array[java.time.Period]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.Period]] {
[info]       def nullValue: Array[java.time.Period] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.Period]): Array[java.time.Period] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.Period], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.Period]): Array[java.time.Period] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.Period](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readPeriod(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.Period], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[java.time.Period] = new Array[java.time.Period](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val periodArrayCodec: JsonValueCodec[Array[Period]] = make[Array[Period]](CodecMakerConfig())
[info]                                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:45:82: Generated JSON codec for type 'Array[Short]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Short]] {
[info]       def nullValue: Array[Short] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Short]): Array[Short] = d0(in, default);
[info]       def encodeValue(x: Array[Short], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[Short]): Array[Short] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Short](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readShort());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Short], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[Short] = new Array[Short](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val shortArrayCodec: JsonValueCodec[Array[Short]] = make[Array[Short]](CodecMakerConfig())
[info]                                                                                  ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:46:79: Generated JSON codec for type 'Array[java.util.UUID]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.util.UUID]] {
[info]       def nullValue: Array[java.util.UUID] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.util.UUID]): Array[java.util.UUID] = d0(in, default);
[info]       def encodeValue(x: Array[java.util.UUID], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[java.util.UUID]): Array[java.util.UUID] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.util.UUID](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readUUID(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.util.UUID], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[java.util.UUID] = new Array[java.util.UUID](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val uuidArrayCodec: JsonValueCodec[Array[UUID]] = make[Array[UUID]](CodecMakerConfig())
[info]                                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:47:79: Generated JSON codec for type 'Array[java.time.Year]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.Year]] {
[info]       def nullValue: Array[java.time.Year] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.Year]): Array[java.time.Year] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.Year], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.Year]): Array[java.time.Year] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.Year](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readYear(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.Year], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[java.time.Year] = new Array[java.time.Year](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val yearArrayCodec: JsonValueCodec[Array[Year]] = make[Array[Year]](CodecMakerConfig())
[info]                                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:48:94: Generated JSON codec for type 'Array[java.time.YearMonth]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.YearMonth]] {
[info]       def nullValue: Array[java.time.YearMonth] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.YearMonth]): Array[java.time.YearMonth] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.YearMonth], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.YearMonth]): Array[java.time.YearMonth] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.YearMonth](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readYearMonth(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.YearMonth], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[java.time.YearMonth] = new Array[java.time.YearMonth](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val yearMonthArrayCodec: JsonValueCodec[Array[YearMonth]] = make[Array[YearMonth]](CodecMakerConfig())
[info]                                                                                              ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:49:106: Generated JSON codec for type 'Array[java.time.ZonedDateTime]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.ZonedDateTime]] {
[info]       def nullValue: Array[java.time.ZonedDateTime] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.ZonedDateTime]): Array[java.time.ZonedDateTime] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.ZonedDateTime], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.ZonedDateTime]): Array[java.time.ZonedDateTime] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.ZonedDateTime](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readZonedDateTime(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.ZonedDateTime], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[java.time.ZonedDateTime] = new Array[java.time.ZonedDateTime](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val zonedDateTimeArrayCodec: JsonValueCodec[Array[ZonedDateTime]] = make[Array[ZonedDateTime]](CodecMakerConfig())
[info]                                                                                                          ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:50:85: Generated JSON codec for type 'Array[java.time.ZoneId]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.ZoneId]] {
[info]       def nullValue: Array[java.time.ZoneId] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.ZoneId]): Array[java.time.ZoneId] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.ZoneId], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.ZoneId]): Array[java.time.ZoneId] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.ZoneId](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readZoneId(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.ZoneId], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[java.time.ZoneId] = new Array[java.time.ZoneId](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val zoneIdArrayCodec: JsonValueCodec[Array[ZoneId]] = make[Array[ZoneId]](CodecMakerConfig())
[info]                                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:51:97: Generated JSON codec for type 'Array[java.time.ZoneOffset]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.ZoneOffset]] {
[info]       def nullValue: Array[java.time.ZoneOffset] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.ZoneOffset]): Array[java.time.ZoneOffset] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.ZoneOffset], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.ZoneOffset]): Array[java.time.ZoneOffset] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.ZoneOffset](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readZoneOffset(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.ZoneOffset], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[java.time.ZoneOffset] = new Array[java.time.ZoneOffset](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val zoneOffsetArrayCodec: JsonValueCodec[Array[ZoneOffset]] = make[Array[ZoneOffset]](CodecMakerConfig())
[info]                                                                                                 ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:52:66: Generated JSON codec for type 'scala.collection.immutable.BitSet':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.immutable.BitSet] {
[info]       def nullValue: scala.collection.immutable.BitSet = BitSet.empty;
[info]       def decodeValue(in: JsonReader, default: scala.collection.immutable.BitSet): scala.collection.immutable.BitSet = d0(in, default);
[info]       def encodeValue(x: scala.collection.immutable.BitSet, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.immutable.BitSet): scala.collection.immutable.BitSet = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Long](2);
[info]             var mi = 0;
[info]             do 
[info]               {
[info]                 val v = in.readInt();
[info]                 if (v.<(0).||(v.>=(2147483647)))
[info]                   in.decodeError("illegal value for bit set")
[info]                 else
[info]                   ();
[info]                 val i = v.>>>(6);
[info]                 if (i.>(mi))
[info]                   {
[info]                     mi = i;
[info]                     if (i.>=(x.length))
[info]                       x = java.util.Arrays.copyOf(x, java.lang.Integer.highestOneBit(i).<<(1))
[info]                     else
[info]                       ()
[info]                   }
[info]                 else
[info]                   ();
[info]                 x(i).|=(1L.<<(v.&(63)))
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               {
[info]                 if (mi.>(1).&&(mi.+(1).!=(x.length)))
[info]                   x = java.util.Arrays.copyOf(x, mi.+(1))
[info]                 else
[info]                   ();
[info]                 BitSet.fromBitMaskNoCopy(x)
[info]               }
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: scala.collection.immutable.BitSet, out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val bitSetCodec: JsonValueCodec[BitSet] = make[BitSet](CodecMakerConfig(bitSetValueLimit = Int.MaxValue /*WARNING: don't do this for open-system*/))
[info]                                                                  ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:53:87: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields): com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields): com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields = if (in.isNextToken('{'))
[info]         {
[info]           var _s: String = null;
[info]           var _i: Int = 0;
[info]           var p0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _s = in.readString(_s)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 105 => if (in.isCharBufEqualsTo(l, "i"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _i = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(3).!=(0))
[info]             in.requiredFieldError(f0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields(s = _s, i = _i)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("s");
[info]           out.writeVal(x.s)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("i");
[info]           out.writeVal(x.i)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def f0(i: Int): String = (i: @switch) match {
[info]         case 0 => "s"
[info]         case 1 => "i"
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val extractFieldsCodec: JsonValueCodec[ExtractFields] = make[ExtractFields](CodecMakerConfig())
[info]                                                                                       ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:54:94: Generated JSON codec for type 'scala.collection.immutable.IntMap[Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.immutable.IntMap[Boolean]] {
[info]       def nullValue: scala.collection.immutable.IntMap[Boolean] = IntMap.empty[Boolean];
[info]       def decodeValue(in: JsonReader, default: scala.collection.immutable.IntMap[Boolean]): scala.collection.immutable.IntMap[Boolean] = d0(in, default);
[info]       def encodeValue(x: scala.collection.immutable.IntMap[Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.immutable.IntMap[Boolean]): scala.collection.immutable.IntMap[Boolean] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = IntMap.empty[Boolean];
[info]             do 
[info]               x = x.updated(in.readKeyAsInt(), in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: scala.collection.immutable.IntMap[Boolean], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val intMapOfBooleansCodec: JsonValueCodec[IntMap[Boolean]] = make[IntMap[Boolean]](CodecMakerConfig())
[info]                                                                                              ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:55:89: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix): com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d1(in: JsonReader, default: IndexedSeq[String]): IndexedSeq[String] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[String];
[info]             do 
[info]               x.+=(in.readString(null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d6(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Value): com.github.plokhotnyuk.jsoniter_scala.macros.Value = if (in.isNextToken('{'))
[info]         {
[info]           var _text: String = null;
[info]           var _value: Int = 0;
[info]           var p0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 3556653 => if (in.isCharBufEqualsTo(l, "text"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _text = in.readString(_text)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 111972721 => if (in.isCharBufEqualsTo(l, "value"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _value = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(3).!=(0))
[info]             in.requiredFieldError(f2(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Value(text = _text, value = _value)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d5(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Elements): com.github.plokhotnyuk.jsoniter_scala.macros.Elements = if (in.isNextToken('{'))
[info]         {
[info]           var _distance: com.github.plokhotnyuk.jsoniter_scala.macros.Value = null;
[info]           var _duration: com.github.plokhotnyuk.jsoniter_scala.macros.Value = null;
[info]           var _status: String = null;
[info]           var p0 = 7;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 288459765 => if (in.isCharBufEqualsTo(l, "distance"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _distance = d6(in, _distance)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1992012396 => if (in.isCharBufEqualsTo(l, "duration"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _duration = d6(in, _duration)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -892481550 => if (in.isCharBufEqualsTo(l, "status"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _status = in.readString(_status)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(7).!=(0))
[info]             in.requiredFieldError(f1(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Elements(distance = _distance, duration = _duration, status = _status)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d4(in: JsonReader, default: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Elements]): IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Elements] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.Elements];
[info]             do 
[info]               x.+=(d5(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d3(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Rows): com.github.plokhotnyuk.jsoniter_scala.macros.Rows = if (in.isNextToken('{'))
[info]         {
[info]           var _elements: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Elements] = IndexedSeq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Elements];
[info]           var p0 = 1;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -8339209 => if (in.isCharBufEqualsTo(l, "elements"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _elements = d4(in, _elements)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Rows(elements = _elements)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d2(in: JsonReader, default: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Rows]): IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Rows] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.Rows];
[info]             do 
[info]               x.+=(d3(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix): com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix = if (in.isNextToken('{'))
[info]         {
[info]           var _destination_addresses: IndexedSeq[String] = IndexedSeq.empty[String];
[info]           var _origin_addresses: IndexedSeq[String] = IndexedSeq.empty[String];
[info]           var _rows: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Rows] = IndexedSeq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Rows];
[info]           var _status: String = null;
[info]           var p0 = 15;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 715423921 => if (in.isCharBufEqualsTo(l, "destination_addresses"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _destination_addresses = d1(in, _destination_addresses)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1780936137 => if (in.isCharBufEqualsTo(l, "origin_addresses"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _origin_addresses = d1(in, _origin_addresses)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3506649 => if (in.isCharBufEqualsTo(l, "rows"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _rows = d2(in, _rows)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -892481550 => if (in.isCharBufEqualsTo(l, "status"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _status = in.readString(_status)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(8).!=(0))
[info]             in.requiredFieldError(f0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix(destination_addresses = _destination_addresses, origin_addresses = _origin_addresses, rows = _rows, status = _status)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e1(x: IndexedSeq[String], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e6(x: com.github.plokhotnyuk.jsoniter_scala.macros.Value, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("text");
[info]           out.writeVal(x.text)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("value");
[info]           out.writeVal(x.value)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e5(x: com.github.plokhotnyuk.jsoniter_scala.macros.Elements, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("distance");
[info]           e6(x.distance, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("duration");
[info]           e6(x.duration, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("status");
[info]           out.writeVal(x.status)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e4(x: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Elements], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e5(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e3(x: com.github.plokhotnyuk.jsoniter_scala.macros.Rows, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           val v = x.elements;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("elements");
[info]               e4(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e2(x: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Rows], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e3(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           val v = x.destination_addresses;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("destination_addresses");
[info]               e1(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.origin_addresses;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("origin_addresses");
[info]               e1(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.rows;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("rows");
[info]               e2(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("status");
[info]           out.writeVal(x.status)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def f0(i: Int): String = (i: @switch) match {
[info]         case 0 => "destination_addresses"
[info]         case 1 => "origin_addresses"
[info]         case 2 => "rows"
[info]         case 3 => "status"
[info]       };
[info]       private[this] def f1(i: Int): String = (i: @switch) match {
[info]         case 0 => "distance"
[info]         case 1 => "duration"
[info]         case 2 => "status"
[info]       };
[info]       private[this] def f2(i: Int): String = (i: @switch) match {
[info]         case 0 => "text"
[info]         case 1 => "value"
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val googleMapsAPICodec: JsonValueCodec[DistanceMatrix] = make[DistanceMatrix](CodecMakerConfig())
[info]                                                                                         ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:56:101: Generated JSON codec for type 'scala.collection.immutable.Map[Int,Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.immutable.Map[Int,Boolean]] {
[info]       def nullValue: scala.collection.immutable.Map[Int,Boolean] = Map.empty[Int, Boolean];
[info]       def decodeValue(in: JsonReader, default: scala.collection.immutable.Map[Int,Boolean]): scala.collection.immutable.Map[Int,Boolean] = d0(in, default);
[info]       def encodeValue(x: scala.collection.immutable.Map[Int,Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.immutable.Map[Int,Boolean]): scala.collection.immutable.Map[Int,Boolean] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = Map.empty[Int, Boolean];
[info]             do 
[info]               x = x.updated(in.readKeyAsInt(), in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: scala.collection.immutable.Map[Int,Boolean], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val mapOfIntsToBooleansCodec: JsonValueCodec[Map[Int, Boolean]] = make[Map[Int, Boolean]](CodecMakerConfig())
[info]                                                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:57:95: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields): com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields): com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields = if (in.isNextToken('{'))
[info]         {
[info]           var _s: String = null;
[info]           var _i: Int = 0;
[info]           var p0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _s = in.readString(_s)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 105 => if (in.isCharBufEqualsTo(l, "i"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _i = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(3).!=(0))
[info]             in.requiredFieldError(f0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields(s = _s, i = _i)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("s");
[info]           out.writeVal(x.s)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("i");
[info]           out.writeVal(x.i)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def f0(i: Int): String = (i: @switch) match {
[info]         case 0 => "s"
[info]         case 1 => "i"
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val missingReqFieldCodec: JsonValueCodec[MissingReqFields] = make[MissingReqFields](CodecMakerConfig())
[info]                                                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:58:89: Generated JSON codec for type 'scala.collection.mutable.BitSet':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.mutable.BitSet] {
[info]       def nullValue: scala.collection.mutable.BitSet = BitSet.empty;
[info]       def decodeValue(in: JsonReader, default: scala.collection.mutable.BitSet): scala.collection.mutable.BitSet = d0(in, default);
[info]       def encodeValue(x: scala.collection.mutable.BitSet, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.mutable.BitSet): scala.collection.mutable.BitSet = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Long](2);
[info]             do 
[info]               {
[info]                 val v = in.readInt();
[info]                 if (v.<(0).||(v.>=(2147483647)))
[info]                   in.decodeError("illegal value for bit set")
[info]                 else
[info]                   ();
[info]                 val i = v.>>>(6);
[info]                 if (i.>=(x.length))
[info]                   x = java.util.Arrays.copyOf(x, java.lang.Integer.highestOneBit(i).<<(1))
[info]                 else
[info]                   ();
[info]                 x(i).|=(1L.<<(v.&(63)))
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               BitSet.fromBitMaskNoCopy(x)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: scala.collection.mutable.BitSet, out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val mutableBitSetCodec: JsonValueCodec[mutable.BitSet] = make[mutable.BitSet](CodecMakerConfig(bitSetValueLimit = Int.MaxValue /*WARNING: don't do this for open-system*/))
[info]                                                                                         ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:59:120: Generated JSON codec for type 'scala.collection.mutable.LongMap[Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.mutable.LongMap[Boolean]] {
[info]       def nullValue: scala.collection.mutable.LongMap[Boolean] = LongMap.empty[Boolean];
[info]       def decodeValue(in: JsonReader, default: scala.collection.mutable.LongMap[Boolean]): scala.collection.mutable.LongMap[Boolean] = d0(in, default);
[info]       def encodeValue(x: scala.collection.mutable.LongMap[Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.mutable.LongMap[Boolean]): scala.collection.mutable.LongMap[Boolean] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.isEmpty)
[info]               default
[info]             else
[info]               LongMap.empty[Boolean];
[info]             do 
[info]               x.update(in.readKeyAsLong(), in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: scala.collection.mutable.LongMap[Boolean], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val mutableLongMapOfBooleansCodec: JsonValueCodec[mutable.LongMap[Boolean]] = make[mutable.LongMap[Boolean]](CodecMakerConfig())
[info]                                                                                                                        ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:60:124: Generated JSON codec for type 'scala.collection.mutable.Map[Int,Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.mutable.Map[Int,Boolean]] {
[info]       def nullValue: scala.collection.mutable.Map[Int,Boolean] = Map.empty[Int, Boolean];
[info]       def decodeValue(in: JsonReader, default: scala.collection.mutable.Map[Int,Boolean]): scala.collection.mutable.Map[Int,Boolean] = d0(in, default);
[info]       def encodeValue(x: scala.collection.mutable.Map[Int,Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.mutable.Map[Int,Boolean]): scala.collection.mutable.Map[Int,Boolean] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.isEmpty)
[info]               default
[info]             else
[info]               Map.empty[Int, Boolean];
[info]             do 
[info]               x.update(in.readKeyAsInt(), in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: scala.collection.mutable.Map[Int,Boolean], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val mutableMapOfIntsToBooleansCodec: JsonValueCodec[mutable.Map[Int, Boolean]] = make[mutable.Map[Int, Boolean]](CodecMakerConfig())
[info]                                                                                                                            ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:61:96: Generated JSON codec for type 'scala.collection.mutable.Set[Int]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.mutable.Set[Int]] {
[info]       def nullValue: scala.collection.mutable.Set[Int] = Set.empty[Int];
[info]       def decodeValue(in: JsonReader, default: scala.collection.mutable.Set[Int]): scala.collection.mutable.Set[Int] = d0(in, default);
[info]       def encodeValue(x: scala.collection.mutable.Set[Int], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.mutable.Set[Int]): scala.collection.mutable.Set[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = default;
[info]             if (x.nonEmpty)
[info]               x.clear()
[info]             else
[info]               ();
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: scala.collection.mutable.Set[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val mutableSetOfIntsCodec: JsonValueCodec[mutable.Set[Int]] = make[mutable.Set[Int]](CodecMakerConfig())
[info]                                                                                                ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:62:78: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.Primitives':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.Primitives] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives): com.github.plokhotnyuk.jsoniter_scala.macros.Primitives = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives): com.github.plokhotnyuk.jsoniter_scala.macros.Primitives = if (in.isNextToken('{'))
[info]         {
[info]           var _b: Byte = ((0): Byte);
[info]           var _s: Short = ((0): Short);
[info]           var _i: Int = 0;
[info]           var _l: Long = 0L;
[info]           var _bl: Boolean = false;
[info]           var _ch: Char = '\u0000';
[info]           var _dbl: Double = 0.0;
[info]           var _f: Float = 0.0F;
[info]           var p0 = 255;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 98 => if (in.isCharBufEqualsTo(l, "b"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _b = in.readByte()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _s = in.readShort()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 105 => if (in.isCharBufEqualsTo(l, "i"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _i = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 108 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _l = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3146 => if (in.isCharBufEqualsTo(l, "bl"))
[info]                       {
[info]                         if (p0.&(16).!=(0))
[info]                           p0.^=(16)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _bl = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3173 => if (in.isCharBufEqualsTo(l, "ch"))
[info]                       {
[info]                         if (p0.&(32).!=(0))
[info]                           p0.^=(32)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _ch = in.readChar()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 99246 => if (in.isCharBufEqualsTo(l, "dbl"))
[info]                       {
[info]                         if (p0.&(64).!=(0))
[info]                           p0.^=(64)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _dbl = in.readDouble()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 102 => if (in.isCharBufEqualsTo(l, "f"))
[info]                       {
[info]                         if (p0.&(128).!=(0))
[info]                           p0.^=(128)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _f = in.readFloat()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(255).!=(0))
[info]             in.requiredFieldError(f0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Primitives(b = _b, s = _s, i = _i, l = _l, bl = _bl, ch = _ch, dbl = _dbl, f = _f)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("b");
[info]           out.writeVal(x.b)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("s");
[info]           out.writeVal(x.s)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("i");
[info]           out.writeVal(x.i)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("l");
[info]           out.writeVal(x.l)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("bl");
[info]           out.writeVal(x.bl)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("ch");
[info]           out.writeVal(x.ch)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("dbl");
[info]           out.writeVal(x.dbl)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("f");
[info]           out.writeVal(x.f)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def f0(i: Int): String = (i: @switch) match {
[info]         case 0 => "b"
[info]         case 1 => "s"
[info]         case 2 => "i"
[info]         case 3 => "l"
[info]         case 4 => "bl"
[info]         case 5 => "ch"
[info]         case 6 => "dbl"
[info]         case 7 => "f"
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val primitivesCodec: JsonValueCodec[Primitives] = make[Primitives](CodecMakerConfig())
[info]                                                                              ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:63:73: Generated JSON codec for type 'scala.collection.immutable.Set[Int]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.immutable.Set[Int]] {
[info]       def nullValue: scala.collection.immutable.Set[Int] = Set.empty[Int];
[info]       def decodeValue(in: JsonReader, default: scala.collection.immutable.Set[Int]): scala.collection.immutable.Set[Int] = d0(in, default);
[info]       def encodeValue(x: scala.collection.immutable.Set[Int], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.immutable.Set[Int]): scala.collection.immutable.Set[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Set.newBuilder[Int];
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: scala.collection.immutable.Set[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val setOfIntsCodec: JsonValueCodec[Set[Int]] = make[Set[Int]](CodecMakerConfig())
[info]                                                                         ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:64:78: Generated JSON codec for type 'Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet]] {
[info]       def nullValue: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet];
[info]       def decodeValue(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet]): Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet] = d0(in, default);
[info]       def encodeValue(x: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d3(in: JsonReader, default: Seq[String]): Seq[String] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[String];
[info]             do 
[info]               x.+=(in.readString(null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d6(in: JsonReader, default: Seq[Int]): Seq[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[Int];
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d5(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions): com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions = if (in.isNextToken('{'))
[info]         {
[info]           var _screen_name: String = null;
[info]           var _name: String = null;
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _indices: Seq[Int] = Seq.empty[Int];
[info]           var p0 = 31;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -43264386 => if (in.isCharBufEqualsTo(l, "screen_name"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _screen_name = in.readString(_screen_name)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3373707 => if (in.isCharBufEqualsTo(l, "name"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _name = in.readString(_name)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3355 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1193609971 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id_str = in.readString(_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1943391143 => if (in.isCharBufEqualsTo(l, "indices"))
[info]                       {
[info]                         if (p0.&(16).!=(0))
[info]                           p0.^=(16)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _indices = d6(in, _indices)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(15).!=(0))
[info]             in.requiredFieldError(f1(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions(screen_name = _screen_name, name = _name, id = _id, id_str = _id_str, indices = _indices)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d4(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions]): Seq[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions];
[info]             do 
[info]               x.+=(d5(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d8(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Urls): com.github.plokhotnyuk.jsoniter_scala.macros.Urls = if (in.isNextToken('{'))
[info]         {
[info]           var _url: String = null;
[info]           var _expanded_url: String = null;
[info]           var _display_url: String = null;
[info]           var _indices: Seq[Int] = Seq.empty[Int];
[info]           var p0 = 15;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 116079 => if (in.isCharBufEqualsTo(l, "url"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _url = in.readString(_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -518939415 => if (in.isCharBufEqualsTo(l, "expanded_url"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _expanded_url = in.readString(_expanded_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1714674802 => if (in.isCharBufEqualsTo(l, "display_url"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _display_url = in.readString(_display_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1943391143 => if (in.isCharBufEqualsTo(l, "indices"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _indices = d6(in, _indices)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(7).!=(0))
[info]             in.requiredFieldError(f2(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Urls(url = _url, expanded_url = _expanded_url, display_url = _display_url, indices = _indices)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d7(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls]): Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.Urls];
[info]             do 
[info]               x.+=(d8(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d2(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Entities): com.github.plokhotnyuk.jsoniter_scala.macros.Entities = if (in.isNextToken('{'))
[info]         {
[info]           var _hashtags: Seq[String] = Seq.empty[String];
[info]           var _symbols: Seq[String] = Seq.empty[String];
[info]           var _user_mentions: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions];
[info]           var _urls: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Urls];
[info]           var p0 = 15;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 149143079 => if (in.isCharBufEqualsTo(l, "hashtags"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _hashtags = d3(in, _hashtags)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1743438373 => if (in.isCharBufEqualsTo(l, "symbols"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _symbols = d3(in, _symbols)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -553518659 => if (in.isCharBufEqualsTo(l, "user_mentions"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _user_mentions = d4(in, _user_mentions)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3598564 => if (in.isCharBufEqualsTo(l, "urls"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _urls = d7(in, _urls)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Entities(hashtags = _hashtags, symbols = _symbols, user_mentions = _user_mentions, urls = _urls)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d9(in: JsonReader, default: Option[String]): Option[String] = if (in.isNextToken('n'))
[info]         in.readNullOrError(default, "expected value or null")
[info]       else
[info]         {
[info]           in.rollbackToken();
[info]           Some(in.readString(null))
[info]         };
[info]       private[this] def d12(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Url): com.github.plokhotnyuk.jsoniter_scala.macros.Url = if (in.isNextToken('{'))
[info]         {
[info]           var _urls: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Urls];
[info]           var p0 = 1;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 3598564 => if (in.isCharBufEqualsTo(l, "urls"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _urls = d7(in, _urls)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Url(urls = _urls)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d11(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities): com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities = if (in.isNextToken('{'))
[info]         {
[info]           var _url: com.github.plokhotnyuk.jsoniter_scala.macros.Url = null;
[info]           var _description: com.github.plokhotnyuk.jsoniter_scala.macros.Url = null;
[info]           var p0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 116079 => if (in.isCharBufEqualsTo(l, "url"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _url = d12(in, _url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1724546052 => if (in.isCharBufEqualsTo(l, "description"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _description = d12(in, _description)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(3).!=(0))
[info]             in.requiredFieldError(f4(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities(url = _url, description = _description)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d10(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.User): com.github.plokhotnyuk.jsoniter_scala.macros.User = if (in.isNextToken('{'))
[info]         {
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _name: String = null;
[info]           var _screen_name: String = null;
[info]           var _location: String = null;
[info]           var _description: String = null;
[info]           var _url: String = null;
[info]           var _entities: com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities = null;
[info]           var _protected: Boolean = false;
[info]           var _followers_count: Int = 0;
[info]           var _friends_count: Int = 0;
[info]           var _listed_count: Int = 0;
[info]           var _created_at: String = null;
[info]           var _favourites_count: Int = 0;
[info]           var _utc_offset: Int = 0;
[info]           var _time_zone: String = null;
[info]           var _geo_enabled: Boolean = false;
[info]           var _verified: Boolean = false;
[info]           var _statuses_count: Int = 0;
[info]           var _lang: String = null;
[info]           var _contributors_enabled: Boolean = false;
[info]           var _is_translator: Boolean = false;
[info]           var _is_translation_enabled: Boolean = false;
[info]           var _profile_background_color: String = null;
[info]           var _profile_background_image_url: String = null;
[info]           var _profile_background_image_url_https: String = null;
[info]           var _profile_background_tile: Boolean = false;
[info]           var _profile_image_url: String = null;
[info]           var _profile_image_url_https: String = null;
[info]           var _profile_banner_url: String = null;
[info]           var _profile_link_color: String = null;
[info]           var _profile_sidebar_border_color: String = null;
[info]           var _profile_sidebar_fill_color: String = null;
[info]           var _profile_text_color: String = null;
[info]           var _profile_use_background_image: Boolean = false;
[info]           var _has_extended_profile: Boolean = false;
[info]           var _default_profile: Boolean = false;
[info]           var _default_profile_image: Boolean = false;
[info]           var _following: Boolean = false;
[info]           var _follow_request_sent: Boolean = false;
[info]           var _notifications: Boolean = false;
[info]           var _translator_type: String = null;
[info]           var p0 = -1;
[info]           var p1 = 1023;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 3355 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1193609971 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id_str = in.readString(_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3373707 => if (in.isCharBufEqualsTo(l, "name"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _name = in.readString(_name)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -43264386 => if (in.isCharBufEqualsTo(l, "screen_name"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _screen_name = in.readString(_screen_name)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1901043637 => if (in.isCharBufEqualsTo(l, "location"))
[info]                       {
[info]                         if (p0.&(16).!=(0))
[info]                           p0.^=(16)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _location = in.readString(_location)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1724546052 => if (in.isCharBufEqualsTo(l, "description"))
[info]                       {
[info]                         if (p0.&(32).!=(0))
[info]                           p0.^=(32)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _description = in.readString(_description)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 116079 => if (in.isCharBufEqualsTo(l, "url"))
[info]                       {
[info]                         if (p0.&(64).!=(0))
[info]                           p0.^=(64)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _url = in.readString(_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -2102114367 => if (in.isCharBufEqualsTo(l, "entities"))
[info]                       {
[info]                         if (p0.&(128).!=(0))
[info]                           p0.^=(128)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _entities = d11(in, _entities)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -608539730 => if (in.isCharBufEqualsTo(l, "protected"))
[info]                       {
[info]                         if (p0.&(256).!=(0))
[info]                           p0.^=(256)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _protected = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -460163995 => if (in.isCharBufEqualsTo(l, "followers_count"))
[info]                       {
[info]                         if (p0.&(512).!=(0))
[info]                           p0.^=(512)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _followers_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1666926107 => if (in.isCharBufEqualsTo(l, "friends_count"))
[info]                       {
[info]                         if (p0.&(1024).!=(0))
[info]                           p0.^=(1024)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _friends_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1974943731 => if (in.isCharBufEqualsTo(l, "listed_count"))
[info]                       {
[info]                         if (p0.&(2048).!=(0))
[info]                           p0.^=(2048)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _listed_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1369680106 => if (in.isCharBufEqualsTo(l, "created_at"))
[info]                       {
[info]                         if (p0.&(4096).!=(0))
[info]                           p0.^=(4096)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _created_at = in.readString(_created_at)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 226316666 => if (in.isCharBufEqualsTo(l, "favourites_count"))
[info]                       {
[info]                         if (p0.&(8192).!=(0))
[info]                           p0.^=(8192)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _favourites_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1699658638 => if (in.isCharBufEqualsTo(l, "utc_offset"))
[info]                       {
[info]                         if (p0.&(16384).!=(0))
[info]                           p0.^=(16384)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _utc_offset = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 36848094 => if (in.isCharBufEqualsTo(l, "time_zone"))
[info]                       {
[info]                         if (p0.&(32768).!=(0))
[info]                           p0.^=(32768)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _time_zone = in.readString(_time_zone)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1085743021 => if (in.isCharBufEqualsTo(l, "geo_enabled"))
[info]                       {
[info]                         if (p0.&(65536).!=(0))
[info]                           p0.^=(65536)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _geo_enabled = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1994383672 => if (in.isCharBufEqualsTo(l, "verified"))
[info]                       {
[info]                         if (p0.&(131072).!=(0))
[info]                           p0.^=(131072)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _verified = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1824078800 => if (in.isCharBufEqualsTo(l, "statuses_count"))
[info]                       {
[info]                         if (p0.&(262144).!=(0))
[info]                           p0.^=(262144)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _statuses_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3314158 => if (in.isCharBufEqualsTo(l, "lang"))
[info]                       {
[info]                         if (p0.&(524288).!=(0))
[info]                           p0.^=(524288)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _lang = in.readString(_lang)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 647263482 => if (in.isCharBufEqualsTo(l, "contributors_enabled"))
[info]                       {
[info]                         if (p0.&(1048576).!=(0))
[info]                           p0.^=(1048576)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _contributors_enabled = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 583435343 => if (in.isCharBufEqualsTo(l, "is_translator"))
[info]                       {
[info]                         if (p0.&(2097152).!=(0))
[info]                           p0.^=(2097152)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _is_translator = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1690715422 => if (in.isCharBufEqualsTo(l, "is_translation_enabled"))
[info]                       {
[info]                         if (p0.&(4194304).!=(0))
[info]                           p0.^=(4194304)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _is_translation_enabled = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1592986856 => if (in.isCharBufEqualsTo(l, "profile_background_color"))
[info]                       {
[info]                         if (p0.&(8388608).!=(0))
[info]                           p0.^=(8388608)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_background_color = in.readString(_profile_background_color)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1189803120 => if (in.isCharBufEqualsTo(l, "profile_background_image_url"))
[info]                       {
[info]                         if (p0.&(16777216).!=(0))
[info]                           p0.^=(16777216)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_background_image_url = in.readString(_profile_background_image_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 594447228 => if (in.isCharBufEqualsTo(l, "profile_background_image_url_https"))
[info]                       {
[info]                         if (p0.&(33554432).!=(0))
[info]                           p0.^=(33554432)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_background_image_url_https = in.readString(_profile_background_image_url_https)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1021718665 => if (in.isCharBufEqualsTo(l, "profile_background_tile"))
[info]                       {
[info]                         if (p0.&(67108864).!=(0))
[info]                           p0.^=(67108864)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_background_tile = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -174080651 => if (in.isCharBufEqualsTo(l, "profile_image_url"))
[info]                       {
[info]                         if (p0.&(134217728).!=(0))
[info]                           p0.^=(134217728)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_image_url = in.readString(_profile_image_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -782008927 => if (in.isCharBufEqualsTo(l, "profile_image_url_https"))
[info]                       {
[info]                         if (p0.&(268435456).!=(0))
[info]                           p0.^=(268435456)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_image_url_https = in.readString(_profile_image_url_https)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -690137550 => if (in.isCharBufEqualsTo(l, "profile_banner_url"))
[info]                       {
[info]                         if (p0.&(536870912).!=(0))
[info]                           p0.^=(536870912)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_banner_url = in.readString(_profile_banner_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1512257332 => if (in.isCharBufEqualsTo(l, "profile_link_color"))
[info]                       {
[info]                         if (p0.&(1073741824).!=(0))
[info]                           p0.^=(1073741824)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_link_color = in.readString(_profile_link_color)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1412739479 => if (in.isCharBufEqualsTo(l, "profile_sidebar_border_color"))
[info]                       {
[info]                         if (p0.&(-2147483648).!=(0))
[info]                           p0.^=(-2147483648)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_sidebar_border_color = in.readString(_profile_sidebar_border_color)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 486184128 => if (in.isCharBufEqualsTo(l, "profile_sidebar_fill_color"))
[info]                       {
[info]                         if (p1.&(1).!=(0))
[info]                           p1.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_sidebar_fill_color = in.readString(_profile_sidebar_fill_color)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1774134745 => if (in.isCharBufEqualsTo(l, "profile_text_color"))
[info]                       {
[info]                         if (p1.&(2).!=(0))
[info]                           p1.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_text_color = in.readString(_profile_text_color)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -101767272 => if (in.isCharBufEqualsTo(l, "profile_use_background_image"))
[info]                       {
[info]                         if (p1.&(4).!=(0))
[info]                           p1.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_use_background_image = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 284519336 => if (in.isCharBufEqualsTo(l, "has_extended_profile"))
[info]                       {
[info]                         if (p1.&(8).!=(0))
[info]                           p1.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _has_extended_profile = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -312724053 => if (in.isCharBufEqualsTo(l, "default_profile"))
[info]                       {
[info]                         if (p1.&(16).!=(0))
[info]                           p1.^=(16)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _default_profile = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 545330631 => if (in.isCharBufEqualsTo(l, "default_profile_image"))
[info]                       {
[info]                         if (p1.&(32).!=(0))
[info]                           p1.^=(32)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _default_profile_image = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 765915793 => if (in.isCharBufEqualsTo(l, "following"))
[info]                       {
[info]                         if (p1.&(64).!=(0))
[info]                           p1.^=(64)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _following = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 585125142 => if (in.isCharBufEqualsTo(l, "follow_request_sent"))
[info]                       {
[info]                         if (p1.&(128).!=(0))
[info]                           p1.^=(128)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _follow_request_sent = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1272354024 => if (in.isCharBufEqualsTo(l, "notifications"))
[info]                       {
[info]                         if (p1.&(256).!=(0))
[info]                           p1.^=(256)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _notifications = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -475640257 => if (in.isCharBufEqualsTo(l, "translator_type"))
[info]                       {
[info]                         if (p1.&(512).!=(0))
[info]                           p1.^=(512)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _translator_type = in.readString(_translator_type)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(-1).!=(0))
[info]             in.requiredFieldError(f3(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           if (p1.&(1023).!=(0))
[info]             in.requiredFieldError(f3(Integer.numberOfTrailingZeros(p1).+(32)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.User(id = _id, id_str = _id_str, name = _name, screen_name = _screen_name, location = _location, description = _description, url = _url, entities = _entities, `protected` = _protected, followers_count = _followers_count, friends_count = _friends_count, listed_count = _listed_count, created_at = _created_at, favourites_count = _favourites_count, utc_offset = _utc_offset, time_zone = _time_zone, geo_enabled = _geo_enabled, verified = _verified, statuses_count = _statuses_count, lang = _lang, contributors_enabled = _contributors_enabled, is_translator = _is_translator, is_translation_enabled = _is_translation_enabled, profile_background_color = _profile_background_color, profile_background_image_url = _profile_background_image_url, profile_background_image_url_https = _profile_background_image_url_https, profile_background_tile = _profile_background_tile, profile_image_url = _profile_image_url, profile_image_url_https = _profile_image_url_https, profile_banner_url = _profile_banner_url, profile_link_color = _profile_link_color, profile_sidebar_border_color = _profile_sidebar_border_color, profile_sidebar_fill_color = _profile_sidebar_fill_color, profile_text_color = _profile_text_color, profile_use_background_image = _profile_use_background_image, has_extended_profile = _has_extended_profile, default_profile = _default_profile, default_profile_image = _default_profile_image, following = _following, follow_request_sent = _follow_request_sent, notifications = _notifications, translator_type = _translator_type)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d13(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus): com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus = if (in.isNextToken('{'))
[info]         {
[info]           var _created_at: String = null;
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _text: String = null;
[info]           var _truncated: Boolean = false;
[info]           var _entities: com.github.plokhotnyuk.jsoniter_scala.macros.Entities = null;
[info]           var _source: String = null;
[info]           var _in_reply_to_status_id: Option[String] = None;
[info]           var _in_reply_to_status_id_str: Option[String] = None;
[info]           var _in_reply_to_user_id: Option[String] = None;
[info]           var _in_reply_to_user_id_str: Option[String] = None;
[info]           var _in_reply_to_screen_name: Option[String] = None;
[info]           var _user: com.github.plokhotnyuk.jsoniter_scala.macros.User = null;
[info]           var _geo: Option[String] = None;
[info]           var _coordinates: Option[String] = None;
[info]           var _place: Option[String] = None;
[info]           var _contributors: Option[String] = None;
[info]           var _is_quote_status: Boolean = false;
[info]           var _retweet_count: Int = 0;
[info]           var _favorite_count: Int = 0;
[info]           var _favorited: Boolean = false;
[info]           var _retweeted: Boolean = false;
[info]           var _possibly_sensitive: Boolean = false;
[info]           var _lang: String = null;
[info]           var p0 = 16777215;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1369680106 => if (in.isCharBufEqualsTo(l, "created_at"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _created_at = in.readString(_created_at)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3355 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1193609971 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id_str = in.readString(_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3556653 => if (in.isCharBufEqualsTo(l, "text"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _text = in.readString(_text)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1607950270 => if (in.isCharBufEqualsTo(l, "truncated"))
[info]                       {
[info]                         if (p0.&(16).!=(0))
[info]                           p0.^=(16)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _truncated = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -2102114367 => if (in.isCharBufEqualsTo(l, "entities"))
[info]                       {
[info]                         if (p0.&(32).!=(0))
[info]                           p0.^=(32)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _entities = d2(in, _entities)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -896505829 => if (in.isCharBufEqualsTo(l, "source"))
[info]                       {
[info]                         if (p0.&(64).!=(0))
[info]                           p0.^=(64)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _source = in.readString(_source)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1960224851 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id"))
[info]                       {
[info]                         if (p0.&(128).!=(0))
[info]                           p0.^=(128)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_status_id = d9(in, _in_reply_to_status_id)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1577137221 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id_str"))
[info]                       {
[info]                         if (p0.&(256).!=(0))
[info]                           p0.^=(256)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_status_id_str = d9(in, _in_reply_to_status_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 2047002778 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id"))
[info]                       {
[info]                         if (p0.&(512).!=(0))
[info]                           p0.^=(512)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_user_id = d9(in, _in_reply_to_user_id)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1274685172 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id_str"))
[info]                       {
[info]                         if (p0.&(1024).!=(0))
[info]                           p0.^=(1024)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_user_id_str = d9(in, _in_reply_to_user_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -866290807 => if (in.isCharBufEqualsTo(l, "in_reply_to_screen_name"))
[info]                       {
[info]                         if (p0.&(2048).!=(0))
[info]                           p0.^=(2048)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_screen_name = d9(in, _in_reply_to_screen_name)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3599307 => if (in.isCharBufEqualsTo(l, "user"))
[info]                       {
[info]                         if (p0.&(4096).!=(0))
[info]                           p0.^=(4096)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _user = d10(in, _user)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 102225 => if (in.isCharBufEqualsTo(l, "geo"))
[info]                       {
[info]                         if (p0.&(8192).!=(0))
[info]                           p0.^=(8192)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _geo = d9(in, _geo)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(16384).!=(0))
[info]                           p0.^=(16384)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d9(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 106748167 => if (in.isCharBufEqualsTo(l, "place"))
[info]                       {
[info]                         if (p0.&(32768).!=(0))
[info]                           p0.^=(32768)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _place = d9(in, _place)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1375976184 => if (in.isCharBufEqualsTo(l, "contributors"))
[info]                       {
[info]                         if (p0.&(65536).!=(0))
[info]                           p0.^=(65536)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _contributors = d9(in, _contributors)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -920773622 => if (in.isCharBufEqualsTo(l, "is_quote_status"))
[info]                       {
[info]                         if (p0.&(131072).!=(0))
[info]                           p0.^=(131072)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _is_quote_status = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1612760494 => if (in.isCharBufEqualsTo(l, "retweet_count"))
[info]                       {
[info]                         if (p0.&(262144).!=(0))
[info]                           p0.^=(262144)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _retweet_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1435051860 => if (in.isCharBufEqualsTo(l, "favorite_count"))
[info]                       {
[info]                         if (p0.&(524288).!=(0))
[info]                           p0.^=(524288)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _favorite_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1785238968 => if (in.isCharBufEqualsTo(l, "favorited"))
[info]                       {
[info]                         if (p0.&(1048576).!=(0))
[info]                           p0.^=(1048576)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _favorited = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -881681091 => if (in.isCharBufEqualsTo(l, "retweeted"))
[info]                       {
[info]                         if (p0.&(2097152).!=(0))
[info]                           p0.^=(2097152)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _retweeted = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -4566948 => if (in.isCharBufEqualsTo(l, "possibly_sensitive"))
[info]                       {
[info]                         if (p0.&(4194304).!=(0))
[info]                           p0.^=(4194304)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _possibly_sensitive = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3314158 => if (in.isCharBufEqualsTo(l, "lang"))
[info]                       {
[info]                         if (p0.&(8388608).!=(0))
[info]                           p0.^=(8388608)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _lang = in.readString(_lang)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(16650367).!=(0))
[info]             in.requiredFieldError(f5(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus(created_at = _created_at, id = _id, id_str = _id_str, text = _text, truncated = _truncated, entities = _entities, source = _source, in_reply_to_status_id = _in_reply_to_status_id, in_reply_to_status_id_str = _in_reply_to_status_id_str, in_reply_to_user_id = _in_reply_to_user_id, in_reply_to_user_id_str = _in_reply_to_user_id_str, in_reply_to_screen_name = _in_reply_to_screen_name, user = _user, geo = _geo, coordinates = _coordinates, place = _place, contributors = _contributors, is_quote_status = _is_quote_status, retweet_count = _retweet_count, favorite_count = _favorite_count, favorited = _favorited, retweeted = _retweeted, possibly_sensitive = _possibly_sensitive, lang = _lang)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d1(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Tweet): com.github.plokhotnyuk.jsoniter_scala.macros.Tweet = if (in.isNextToken('{'))
[info]         {
[info]           var _created_at: String = null;
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _text: String = null;
[info]           var _truncated: Boolean = false;
[info]           var _entities: com.github.plokhotnyuk.jsoniter_scala.macros.Entities = null;
[info]           var _source: String = null;
[info]           var _in_reply_to_status_id: Option[String] = None;
[info]           var _in_reply_to_status_id_str: Option[String] = None;
[info]           var _in_reply_to_user_id: Option[String] = None;
[info]           var _in_reply_to_user_id_str: Option[String] = None;
[info]           var _in_reply_to_screen_name: Option[String] = None;
[info]           var _user: com.github.plokhotnyuk.jsoniter_scala.macros.User = null;
[info]           var _geo: Option[String] = None;
[info]           var _coordinates: Option[String] = None;
[info]           var _place: Option[String] = None;
[info]           var _contributors: Option[String] = None;
[info]           var _retweeted_status: com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus = null;
[info]           var _is_quote_status: Boolean = false;
[info]           var _retweet_count: Int = 0;
[info]           var _favorite_count: Int = 0;
[info]           var _favorited: Boolean = false;
[info]           var _retweeted: Boolean = false;
[info]           var _possibly_sensitive: Boolean = false;
[info]           var _lang: String = null;
[info]           var p0 = 33554431;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1369680106 => if (in.isCharBufEqualsTo(l, "created_at"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _created_at = in.readString(_created_at)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3355 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1193609971 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id_str = in.readString(_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3556653 => if (in.isCharBufEqualsTo(l, "text"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _text = in.readString(_text)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1607950270 => if (in.isCharBufEqualsTo(l, "truncated"))
[info]                       {
[info]                         if (p0.&(16).!=(0))
[info]                           p0.^=(16)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _truncated = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -2102114367 => if (in.isCharBufEqualsTo(l, "entities"))
[info]                       {
[info]                         if (p0.&(32).!=(0))
[info]                           p0.^=(32)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _entities = d2(in, _entities)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -896505829 => if (in.isCharBufEqualsTo(l, "source"))
[info]                       {
[info]                         if (p0.&(64).!=(0))
[info]                           p0.^=(64)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _source = in.readString(_source)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1960224851 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id"))
[info]                       {
[info]                         if (p0.&(128).!=(0))
[info]                           p0.^=(128)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_status_id = d9(in, _in_reply_to_status_id)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1577137221 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id_str"))
[info]                       {
[info]                         if (p0.&(256).!=(0))
[info]                           p0.^=(256)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_status_id_str = d9(in, _in_reply_to_status_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 2047002778 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id"))
[info]                       {
[info]                         if (p0.&(512).!=(0))
[info]                           p0.^=(512)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_user_id = d9(in, _in_reply_to_user_id)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1274685172 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id_str"))
[info]                       {
[info]                         if (p0.&(1024).!=(0))
[info]                           p0.^=(1024)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_user_id_str = d9(in, _in_reply_to_user_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -866290807 => if (in.isCharBufEqualsTo(l, "in_reply_to_screen_name"))
[info]                       {
[info]                         if (p0.&(2048).!=(0))
[info]                           p0.^=(2048)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_screen_name = d9(in, _in_reply_to_screen_name)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3599307 => if (in.isCharBufEqualsTo(l, "user"))
[info]                       {
[info]                         if (p0.&(4096).!=(0))
[info]                           p0.^=(4096)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _user = d10(in, _user)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 102225 => if (in.isCharBufEqualsTo(l, "geo"))
[info]                       {
[info]                         if (p0.&(8192).!=(0))
[info]                           p0.^=(8192)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _geo = d9(in, _geo)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(16384).!=(0))
[info]                           p0.^=(16384)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d9(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 106748167 => if (in.isCharBufEqualsTo(l, "place"))
[info]                       {
[info]                         if (p0.&(32768).!=(0))
[info]                           p0.^=(32768)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _place = d9(in, _place)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1375976184 => if (in.isCharBufEqualsTo(l, "contributors"))
[info]                       {
[info]                         if (p0.&(65536).!=(0))
[info]                           p0.^=(65536)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _contributors = d9(in, _contributors)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 364396852 => if (in.isCharBufEqualsTo(l, "retweeted_status"))
[info]                       {
[info]                         if (p0.&(131072).!=(0))
[info]                           p0.^=(131072)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _retweeted_status = d13(in, _retweeted_status)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -920773622 => if (in.isCharBufEqualsTo(l, "is_quote_status"))
[info]                       {
[info]                         if (p0.&(262144).!=(0))
[info]                           p0.^=(262144)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _is_quote_status = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1612760494 => if (in.isCharBufEqualsTo(l, "retweet_count"))
[info]                       {
[info]                         if (p0.&(524288).!=(0))
[info]                           p0.^=(524288)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _retweet_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1435051860 => if (in.isCharBufEqualsTo(l, "favorite_count"))
[info]                       {
[info]                         if (p0.&(1048576).!=(0))
[info]                           p0.^=(1048576)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _favorite_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1785238968 => if (in.isCharBufEqualsTo(l, "favorited"))
[info]                       {
[info]                         if (p0.&(2097152).!=(0))
[info]                           p0.^=(2097152)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _favorited = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -881681091 => if (in.isCharBufEqualsTo(l, "retweeted"))
[info]                       {
[info]                         if (p0.&(4194304).!=(0))
[info]                           p0.^=(4194304)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _retweeted = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -4566948 => if (in.isCharBufEqualsTo(l, "possibly_sensitive"))
[info]                       {
[info]                         if (p0.&(8388608).!=(0))
[info]                           p0.^=(8388608)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _possibly_sensitive = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3314158 => if (in.isCharBufEqualsTo(l, "lang"))
[info]                       {
[info]                         if (p0.&(16777216).!=(0))
[info]                           p0.^=(16777216)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _lang = in.readString(_lang)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(33427583).!=(0))
[info]             in.requiredFieldError(f0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Tweet(created_at = _created_at, id = _id, id_str = _id_str, text = _text, truncated = _truncated, entities = _entities, source = _source, in_reply_to_status_id = _in_reply_to_status_id, in_reply_to_status_id_str = _in_reply_to_status_id_str, in_reply_to_user_id = _in_reply_to_user_id, in_reply_to_user_id_str = _in_reply_to_user_id_str, in_reply_to_screen_name = _in_reply_to_screen_name, user = _user, geo = _geo, coordinates = _coordinates, place = _place, contributors = _contributors, retweeted_status = _retweeted_status, is_quote_status = _is_quote_status, retweet_count = _retweet_count, favorite_count = _favorite_count, favorited = _favorited, retweeted = _retweeted, possibly_sensitive = _possibly_sensitive, lang = _lang)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d0(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet]): Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet];
[info]             do 
[info]               x.+=(d1(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e3(x: Seq[String], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e6(x: Seq[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e5(x: com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("screen_name");
[info]           out.writeVal(x.screen_name)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("name");
[info]           out.writeVal(x.name)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id");
[info]           out.writeVal(x.id)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id_str");
[info]           out.writeVal(x.id_str)
[info]         };
[info]         {
[info]           val v = x.indices;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("indices");
[info]               e6(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e4(x: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           e5(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e8(x: com.github.plokhotnyuk.jsoniter_scala.macros.Urls, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("url");
[info]           out.writeVal(x.url)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("expanded_url");
[info]           out.writeVal(x.expanded_url)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("display_url");
[info]           out.writeVal(x.display_url)
[info]         };
[info]         {
[info]           val v = x.indices;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("indices");
[info]               e6(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e7(x: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           e8(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e2(x: com.github.plokhotnyuk.jsoniter_scala.macros.Entities, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           val v = x.hashtags;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("hashtags");
[info]               e3(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.symbols;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("symbols");
[info]               e3(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.user_mentions;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("user_mentions");
[info]               e4(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.urls;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("urls");
[info]               e7(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e11(x: com.github.plokhotnyuk.jsoniter_scala.macros.Url, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           val v = x.urls;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("urls");
[info]               e7(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e10(x: com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("url");
[info]           e11(x.url, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("description");
[info]           e11(x.description, out)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e9(x: com.github.plokhotnyuk.jsoniter_scala.macros.User, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("id");
[info]           out.writeVal(x.id)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id_str");
[info]           out.writeVal(x.id_str)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("name");
[info]           out.writeVal(x.name)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("screen_name");
[info]           out.writeVal(x.screen_name)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("location");
[info]           out.writeVal(x.location)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("description");
[info]           out.writeVal(x.description)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("url");
[info]           out.writeVal(x.url)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("entities");
[info]           e10(x.entities, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("protected");
[info]           out.writeVal(x.`protected`)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("followers_count");
[info]           out.writeVal(x.followers_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("friends_count");
[info]           out.writeVal(x.friends_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("listed_count");
[info]           out.writeVal(x.listed_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("created_at");
[info]           out.writeVal(x.created_at)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("favourites_count");
[info]           out.writeVal(x.favourites_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("utc_offset");
[info]           out.writeVal(x.utc_offset)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("time_zone");
[info]           out.writeVal(x.time_zone)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("geo_enabled");
[info]           out.writeVal(x.geo_enabled)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("verified");
[info]           out.writeVal(x.verified)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("statuses_count");
[info]           out.writeVal(x.statuses_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("lang");
[info]           out.writeVal(x.lang)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("contributors_enabled");
[info]           out.writeVal(x.contributors_enabled)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("is_translator");
[info]           out.writeVal(x.is_translator)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("is_translation_enabled");
[info]           out.writeVal(x.is_translation_enabled)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_background_color");
[info]           out.writeVal(x.profile_background_color)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_background_image_url");
[info]           out.writeVal(x.profile_background_image_url)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_background_image_url_https");
[info]           out.writeVal(x.profile_background_image_url_https)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_background_tile");
[info]           out.writeVal(x.profile_background_tile)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_image_url");
[info]           out.writeVal(x.profile_image_url)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_image_url_https");
[info]           out.writeVal(x.profile_image_url_https)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_banner_url");
[info]           out.writeVal(x.profile_banner_url)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_link_color");
[info]           out.writeVal(x.profile_link_color)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_sidebar_border_color");
[info]           out.writeVal(x.profile_sidebar_border_color)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_sidebar_fill_color");
[info]           out.writeVal(x.profile_sidebar_fill_color)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_text_color");
[info]           out.writeVal(x.profile_text_color)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_use_background_image");
[info]           out.writeVal(x.profile_use_background_image)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("has_extended_profile");
[info]           out.writeVal(x.has_extended_profile)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("default_profile");
[info]           out.writeVal(x.default_profile)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("default_profile_image");
[info]           out.writeVal(x.default_profile_image)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("following");
[info]           out.writeVal(x.following)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("follow_request_sent");
[info]           out.writeVal(x.follow_request_sent)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("notifications");
[info]           out.writeVal(x.notifications)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("translator_type");
[info]           out.writeVal(x.translator_type)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e12(x: com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("created_at");
[info]           out.writeVal(x.created_at)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id");
[info]           out.writeVal(x.id)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id_str");
[info]           out.writeVal(x.id_str)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("text");
[info]           out.writeVal(x.text)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("truncated");
[info]           out.writeVal(x.truncated)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("entities");
[info]           e2(x.entities, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("source");
[info]           out.writeVal(x.source)
[info]         };
[info]         {
[info]           val v = x.in_reply_to_status_id;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_status_id");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_status_id_str;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_status_id_str");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_user_id;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_user_id");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_user_id_str;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_user_id_str");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_screen_name;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_screen_name");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("user");
[info]           e9(x.user, out)
[info]         };
[info]         {
[info]           val v = x.geo;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("geo");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.place;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("place");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.contributors;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("contributors");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("is_quote_status");
[info]           out.writeVal(x.is_quote_status)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("retweet_count");
[info]           out.writeVal(x.retweet_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("favorite_count");
[info]           out.writeVal(x.favorite_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("favorited");
[info]           out.writeVal(x.favorited)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("retweeted");
[info]           out.writeVal(x.retweeted)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("possibly_sensitive");
[info]           out.writeVal(x.possibly_sensitive)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("lang");
[info]           out.writeVal(x.lang)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e1(x: com.github.plokhotnyuk.jsoniter_scala.macros.Tweet, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("created_at");
[info]           out.writeVal(x.created_at)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id");
[info]           out.writeVal(x.id)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id_str");
[info]           out.writeVal(x.id_str)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("text");
[info]           out.writeVal(x.text)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("truncated");
[info]           out.writeVal(x.truncated)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("entities");
[info]           e2(x.entities, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("source");
[info]           out.writeVal(x.source)
[info]         };
[info]         {
[info]           val v = x.in_reply_to_status_id;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_status_id");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_status_id_str;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_status_id_str");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_user_id;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_user_id");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_user_id_str;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_user_id_str");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_screen_name;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_screen_name");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("user");
[info]           e9(x.user, out)
[info]         };
[info]         {
[info]           val v = x.geo;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("geo");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.place;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("place");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.contributors;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("contributors");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("retweeted_status");
[info]           e12(x.retweeted_status, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("is_quote_status");
[info]           out.writeVal(x.is_quote_status)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("retweet_count");
[info]           out.writeVal(x.retweet_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("favorite_count");
[info]           out.writeVal(x.favorite_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("favorited");
[info]           out.writeVal(x.favorited)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("retweeted");
[info]           out.writeVal(x.retweeted)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("possibly_sensitive");
[info]           out.writeVal(x.possibly_sensitive)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("lang");
[info]           out.writeVal(x.lang)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e0(x: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           e1(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def f0(i: Int): String = (i: @switch) match {
[info]         case 0 => "created_at"
[info]         case 1 => "id"
[info]         case 2 => "id_str"
[info]         case 3 => "text"
[info]         case 4 => "truncated"
[info]         case 5 => "entities"
[info]         case 6 => "source"
[info]         case 7 => "in_reply_to_status_id"
[info]         case 8 => "in_reply_to_status_id_str"
[info]         case 9 => "in_reply_to_user_id"
[info]         case 10 => "in_reply_to_user_id_str"
[info]         case 11 => "in_reply_to_screen_name"
[info]         case 12 => "user"
[info]         case 13 => "geo"
[info]         case 14 => "coordinates"
[info]         case 15 => "place"
[info]         case 16 => "contributors"
[info]         case 17 => "retweeted_status"
[info]         case 18 => "is_quote_status"
[info]         case 19 => "retweet_count"
[info]         case 20 => "favorite_count"
[info]         case 21 => "favorited"
[info]         case 22 => "retweeted"
[info]         case 23 => "possibly_sensitive"
[info]         case 24 => "lang"
[info]       };
[info]       private[this] def f1(i: Int): String = (i: @switch) match {
[info]         case 0 => "screen_name"
[info]         case 1 => "name"
[info]         case 2 => "id"
[info]         case 3 => "id_str"
[info]         case 4 => "indices"
[info]       };
[info]       private[this] def f2(i: Int): String = (i: @switch) match {
[info]         case 0 => "url"
[info]         case 1 => "expanded_url"
[info]         case 2 => "display_url"
[info]         case 3 => "indices"
[info]       };
[info]       private[this] def f3(i: Int): String = (i: @switch) match {
[info]         case 0 => "id"
[info]         case 1 => "id_str"
[info]         case 2 => "name"
[info]         case 3 => "screen_name"
[info]         case 4 => "location"
[info]         case 5 => "description"
[info]         case 6 => "url"
[info]         case 7 => "entities"
[info]         case 8 => "protected"
[info]         case 9 => "followers_count"
[info]         case 10 => "friends_count"
[info]         case 11 => "listed_count"
[info]         case 12 => "created_at"
[info]         case 13 => "favourites_count"
[info]         case 14 => "utc_offset"
[info]         case 15 => "time_zone"
[info]         case 16 => "geo_enabled"
[info]         case 17 => "verified"
[info]         case 18 => "statuses_count"
[info]         case 19 => "lang"
[info]         case 20 => "contributors_enabled"
[info]         case 21 => "is_translator"
[info]         case 22 => "is_translation_enabled"
[info]         case 23 => "profile_background_color"
[info]         case 24 => "profile_background_image_url"
[info]         case 25 => "profile_background_image_url_https"
[info]         case 26 => "profile_background_tile"
[info]         case 27 => "profile_image_url"
[info]         case 28 => "profile_image_url_https"
[info]         case 29 => "profile_banner_url"
[info]         case 30 => "profile_link_color"
[info]         case 31 => "profile_sidebar_border_color"
[info]         case 32 => "profile_sidebar_fill_color"
[info]         case 33 => "profile_text_color"
[info]         case 34 => "profile_use_background_image"
[info]         case 35 => "has_extended_profile"
[info]         case 36 => "default_profile"
[info]         case 37 => "default_profile_image"
[info]         case 38 => "following"
[info]         case 39 => "follow_request_sent"
[info]         case 40 => "notifications"
[info]         case 41 => "translator_type"
[info]       };
[info]       private[this] def f4(i: Int): String = (i: @switch) match {
[info]         case 0 => "url"
[info]         case 1 => "description"
[info]       };
[info]       private[this] def f5(i: Int): String = (i: @switch) match {
[info]         case 0 => "created_at"
[info]         case 1 => "id"
[info]         case 2 => "id_str"
[info]         case 3 => "text"
[info]         case 4 => "truncated"
[info]         case 5 => "entities"
[info]         case 6 => "source"
[info]         case 7 => "in_reply_to_status_id"
[info]         case 8 => "in_reply_to_status_id_str"
[info]         case 9 => "in_reply_to_user_id"
[info]         case 10 => "in_reply_to_user_id_str"
[info]         case 11 => "in_reply_to_screen_name"
[info]         case 12 => "user"
[info]         case 13 => "geo"
[info]         case 14 => "coordinates"
[info]         case 15 => "place"
[info]         case 16 => "contributors"
[info]         case 17 => "is_quote_status"
[info]         case 18 => "retweet_count"
[info]         case 19 => "favorite_count"
[info]         case 20 => "favorited"
[info]         case 21 => "retweeted"
[info]         case 22 => "possibly_sensitive"
[info]         case 23 => "lang"
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val twitterAPICodec: JsonValueCodec[Seq[Tweet]] = make[Seq[Tweet]](CodecMakerConfig())
[info]                                                                              ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:36:18: local val v1 in value primitivesFormat is never used
[warn]     implicit val v1: Format[Char] = Format(
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:43:23: local val v1 in value adtFormat is never used
[warn]     implicit lazy val v1: OFormat[A] = Json.format[A]
[warn]                       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:44:23: local val v2 in value adtFormat is never used
[warn]     implicit lazy val v2: OFormat[B] = Json.format[B]
[warn]                       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:45:23: local val v3 in value adtFormat is never used
[warn]     implicit lazy val v3: OFormat[C] = Json.format[C]
[warn]                       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:50:18: local val v1 in value googleMapsAPIFormat is never used
[warn]     implicit val v1: OFormat[Value] = Json.format[Value]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:51:18: local val v2 in value googleMapsAPIFormat is never used
[warn]     implicit val v2: OFormat[Elements] = Json.format[Elements]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:52:18: local val v3 in value googleMapsAPIFormat is never used
[warn]     implicit val v3: OFormat[Rows] = Json.format[Rows]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:56:18: local val v1 in value twitterAPIFormat is never used
[warn]     implicit val v1: OFormat[Urls] = Json.format[Urls]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:57:18: local val v2 in value twitterAPIFormat is never used
[warn]     implicit val v2: OFormat[Url] = Json.format[Url]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:58:18: local val v3 in value twitterAPIFormat is never used
[warn]     implicit val v3: OFormat[UserEntities] = Json.format[UserEntities]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:59:18: local val v4 in value twitterAPIFormat is never used
[warn]     implicit val v4: OFormat[UserMentions] = Json.format[UserMentions]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:60:18: local val v5 in value twitterAPIFormat is never used
[warn]     implicit val v5: OFormat[Entities] = Json.format[Entities]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:61:18: local val v6 in value twitterAPIFormat is never used
[warn]     implicit val v6: Format[User] = Jsonx.formatCaseClass[User]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:62:18: local val v7 in value twitterAPIFormat is never used
[warn]     implicit val v7: Format[RetweetedStatus] = Jsonx.formatCaseClass[RetweetedStatus]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:10:79: dead code following this construct
[warn]   implicit val adtReaderWriter: ReadWriter[AdtBase] = ReadWriter.merge(macroRW[A], macroRW[B], macroRW[C])
[warn]                                                                               ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:10:91: dead code following this construct
[warn]   implicit val adtReaderWriter: ReadWriter[AdtBase] = ReadWriter.merge(macroRW[A], macroRW[B], macroRW[C])
[warn]                                                                                           ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:10:103: dead code following this construct
[warn]   implicit val adtReaderWriter: ReadWriter[AdtBase] = ReadWriter.merge(macroRW[A], macroRW[B], macroRW[C])
[warn]                                                                                                       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:11:66: dead code following this construct
[warn]   implicit val anyRefsReaderWriter: ReadWriter[AnyRefs] = macroRW[AnyRefs]
[warn]                                                                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:12:78: dead code following this construct
[warn]   implicit val extractFieldsReaderWriter: ReadWriter[ExtractFields] = macroRW[ExtractFields]
[warn]                                                                              ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:17:54: dead code following this construct
[warn]     implicit lazy val v1: ReadWriter[Point] = macroRW[Point]
[warn]                                                      ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:18:59: dead code following this construct
[warn]     implicit lazy val v2: ReadWriter[MultiPoint] = macroRW[MultiPoint]
[warn]                                                           ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:19:59: dead code following this construct
[warn]     implicit lazy val v3: ReadWriter[LineString] = macroRW[LineString]
[warn]                                                           ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:20:64: dead code following this construct
[warn]     implicit lazy val v4: ReadWriter[MultiLineString] = macroRW[MultiLineString]
[warn]                                                                ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:21:56: dead code following this construct
[warn]     implicit lazy val v5: ReadWriter[Polygon] = macroRW[Polygon]
[warn]                                                        ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:22:61: dead code following this construct
[warn]     implicit lazy val v6: ReadWriter[MultiPolygon] = macroRW[MultiPolygon]
[warn]                                                             ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:23:67: dead code following this construct
[warn]     implicit lazy val v7: ReadWriter[GeometryCollection] = macroRW[GeometryCollection]
[warn]                                                                   ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:25:66: dead code following this construct
[warn]     implicit lazy val v9: ReadWriter[FeatureCollection] = macroRW[FeatureCollection]
[warn]                                                                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:26:57: dead code following this construct
[warn]     implicit lazy val v10: ReadWriter[Feature] = macroRW[Feature]
[warn]                                                         ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:30:49: dead code following this construct
[warn]     implicit val v1: ReadWriter[Value] = macroRW[Value]
[warn]                                                 ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:31:52: dead code following this construct
[warn]     implicit val v2: ReadWriter[Elements] = macroRW[Elements]
[warn]                                                    ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:32:48: dead code following this construct
[warn]     implicit val v3: ReadWriter[Rows] = macroRW[Rows]
[warn]                                                ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:33:12: dead code following this construct
[warn]     macroRW[DistanceMatrix]
[warn]            ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:41:78: dead code following this construct
[warn]   implicit val nestedStructsReaderWriter: ReadWriter[NestedStructs] = macroRW[NestedStructs]
[warn]                                                                              ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:42:84: dead code following this construct
[warn]   implicit val missingReqFieldsReaderWriter: ReadWriter[MissingReqFields] = macroRW[MissingReqFields]
[warn]                                                                                    ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:48:72: dead code following this construct
[warn]   implicit val primitivesReaderWriter: ReadWriter[Primitives] = macroRW[Primitives]
[warn]                                                                        ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:53:48: dead code following this construct
[warn]     implicit val v1: ReadWriter[Urls] = macroRW[Urls]
[warn]                                                ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:54:47: dead code following this construct
[warn]     implicit val v2: ReadWriter[Url] = macroRW[Url]
[warn]                                               ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:55:56: dead code following this construct
[warn]     implicit val v3: ReadWriter[UserMentions] = macroRW[UserMentions]
[warn]                                                        ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:56:52: dead code following this construct
[warn]     implicit val v4: ReadWriter[Entities] = macroRW[Entities]
[warn]                                                    ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:57:56: dead code following this construct
[warn]     implicit val v5: ReadWriter[UserEntities] = macroRW[UserEntities]
[warn]                                                        ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:58:48: dead code following this construct
[warn]     implicit val v6: ReadWriter[User] = macroRW[User]
[warn]                                                ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:59:59: dead code following this construct
[warn]     implicit val v7: ReadWriter[RetweetedStatus] = macroRW[RetweetedStatus]
[warn]                                                           ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:60:12: dead code following this construct
[warn]     macroRW[Tweet]
[warn]            ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:6:14: Unused import
[warn] import ujson.BytesRenderer
[warn]              ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:17:23: local val v1 in value geoJsonReaderWriter is never used
[warn]     implicit lazy val v1: ReadWriter[Point] = macroRW[Point]
[warn]                       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:18:23: local val v2 in value geoJsonReaderWriter is never used
[warn]     implicit lazy val v2: ReadWriter[MultiPoint] = macroRW[MultiPoint]
[warn]                       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:19:23: local val v3 in value geoJsonReaderWriter is never used
[warn]     implicit lazy val v3: ReadWriter[LineString] = macroRW[LineString]
[warn]                       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:20:23: local val v4 in value geoJsonReaderWriter is never used
[warn]     implicit lazy val v4: ReadWriter[MultiLineString] = macroRW[MultiLineString]
[warn]                       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:21:23: local val v5 in value geoJsonReaderWriter is never used
[warn]     implicit lazy val v5: ReadWriter[Polygon] = macroRW[Polygon]
[warn]                       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:22:23: local val v6 in value geoJsonReaderWriter is never used
[warn]     implicit lazy val v6: ReadWriter[MultiPolygon] = macroRW[MultiPolygon]
[warn]                       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:23:23: local val v7 in value geoJsonReaderWriter is never used
[warn]     implicit lazy val v7: ReadWriter[GeometryCollection] = macroRW[GeometryCollection]
[warn]                       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:24:23: local val v8 in value geoJsonReaderWriter is never used
[warn]     implicit lazy val v8: ReadWriter[Geometry] = macroRW[Geometry]
[warn]                       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:25:23: local val v9 in value geoJsonReaderWriter is never used
[warn]     implicit lazy val v9: ReadWriter[FeatureCollection] = macroRW[FeatureCollection]
[warn]                       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:26:23: local val v10 in value geoJsonReaderWriter is never used
[warn]     implicit lazy val v10: ReadWriter[Feature] = macroRW[Feature]
[warn]                       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:30:18: local val v1 in value googleMApsAPIReaderWriter is never used
[warn]     implicit val v1: ReadWriter[Value] = macroRW[Value]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:31:18: local val v2 in value googleMApsAPIReaderWriter is never used
[warn]     implicit val v2: ReadWriter[Elements] = macroRW[Elements]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:32:18: local val v3 in value googleMApsAPIReaderWriter is never used
[warn]     implicit val v3: ReadWriter[Rows] = macroRW[Rows]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:53:18: local val v1 in value twitterAPIReaderWriter is never used
[warn]     implicit val v1: ReadWriter[Urls] = macroRW[Urls]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:54:18: local val v2 in value twitterAPIReaderWriter is never used
[warn]     implicit val v2: ReadWriter[Url] = macroRW[Url]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:55:18: local val v3 in value twitterAPIReaderWriter is never used
[warn]     implicit val v3: ReadWriter[UserMentions] = macroRW[UserMentions]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:56:18: local val v4 in value twitterAPIReaderWriter is never used
[warn]     implicit val v4: ReadWriter[Entities] = macroRW[Entities]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:57:18: local val v5 in value twitterAPIReaderWriter is never used
[warn]     implicit val v5: ReadWriter[UserEntities] = macroRW[UserEntities]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:58:18: local val v6 in value twitterAPIReaderWriter is never used
[warn]     implicit val v6: ReadWriter[User] = macroRW[User]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:59:18: local val v7 in value twitterAPIReaderWriter is never used
[warn]     implicit val v7: ReadWriter[RetweetedStatus] = macroRW[RetweetedStatus]
[warn]                  ^
[warn] 64 warnings found
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.27.3-SNAPSHOT.jar ...
[info] Compiling 50 Scala sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/test-classes ...
Processing 523 classes from /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes with "reflection" generator
Writing out Java source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/src_managed/jmh and resources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/resource_managed/jmh
[info] Done packaging.
[info] Compiling 694 Java sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes ...
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.27.3-SNAPSHOT-tests.jar ...
[info] Done packaging.
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.27.3-SNAPSHOT-jmh.jar ...
[info] Done packaging.
[info] Running (fork) org.openjdk.jmh.Main -p size=128 -jvm /usr/lib/jvm/java-8-oracle/bin/java -prof gc -rf json -rff jdk8.json .*Benchmark.*
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce
[info] # Run progress: 0.00% complete, ETA 01:23:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 339990.420 ops/s
[info] # Warmup Iteration   2: 761624.143 ops/s
[info] # Warmup Iteration   3: 786329.072 ops/s
[info] # Warmup Iteration   4: 787418.108 ops/s
[info] # Warmup Iteration   5: 761239.548 ops/s
[info] Iteration   1: 777064.400 ops/s
[info]                  ·gc.alloc.rate:                   2046.037 MB/sec
[info]                  ·gc.alloc.rate.norm:              4144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2016.412 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4084.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.126 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 759079.237 ops/s
[info]                  ·gc.alloc.rate:                   1998.655 MB/sec
[info]                  ·gc.alloc.rate.norm:              4144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2020.446 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4189.183 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.216 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 752602.727 ops/s
[info]                  ·gc.alloc.rate:                   1981.607 MB/sec
[info]                  ·gc.alloc.rate.norm:              4144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2024.550 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4233.803 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.131 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 761902.104 ops/s
[info]                  ·gc.alloc.rate:                   2006.122 MB/sec
[info]                  ·gc.alloc.rate.norm:              4144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1351.605 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2791.979 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.043 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 761107.646 ops/s
[info]                  ·gc.alloc.rate:                   2004.017 MB/sec
[info]                  ·gc.alloc.rate.norm:              4144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2029.969 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4197.665 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.129 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce":
[info]   762351.223 ±(99.9%) 34653.914 ops/s [Average]
[info]   (min, avg, max) = (752602.727, 762351.223, 777064.400), stdev = 8999.512
[info]   CI (99.9%): [727697.308, 797005.137] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:·gc.alloc.rate":
[info]   2007.288 ±(99.9%) 91.276 MB/sec [Average]
[info]   (min, avg, max) = (1981.607, 2007.288, 2046.037), stdev = 23.704
[info]   CI (99.9%): [1916.012, 2098.564] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   4144.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4144.001, 4144.001, 4144.001), stdev = 0.001
[info]   CI (99.9%): [4144.000, 4144.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1888.596 ±(99.9%) 1156.076 MB/sec [Average]
[info]   (min, avg, max) = (1351.605, 1888.596, 2029.969), stdev = 300.229
[info]   CI (99.9%): [732.520, 3044.673] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   3899.326 ±(99.9%) 2393.307 B/op [Average]
[info]   (min, avg, max) = (2791.979, 3899.326, 4233.803), stdev = 621.534
[info]   CI (99.9%): [1506.019, 6292.633] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.113 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.062, 0.104), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.129 ±(99.9%) 0.235 B/op [Average]
[info]   (min, avg, max) = (0.043, 0.129, 0.216), stdev = 0.061
[info]   CI (99.9%): [≈ 0, 0.364] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala
[info] # Run progress: 0.20% complete, ETA 02:11:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 520413.406 ops/s
[info] # Warmup Iteration   2: 1602021.255 ops/s
[info] # Warmup Iteration   3: 1585138.856 ops/s
[info] # Warmup Iteration   4: 1644876.470 ops/s
[info] # Warmup Iteration   5: 1643518.070 ops/s
[info] Iteration   1: 1647374.278 ops/s
[info]                  ·gc.alloc.rate:               1172.340 MB/sec
[info]                  ·gc.alloc.rate.norm:          1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      666.186 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 636.443 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 1646147.253 ops/s
[info]                  ·gc.alloc.rate:                   1171.469 MB/sec
[info]                  ·gc.alloc.rate.norm:              1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.698 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1275.101 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.119 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 1651779.973 ops/s
[info]                  ·gc.alloc.rate:                   1175.452 MB/sec
[info]                  ·gc.alloc.rate.norm:              1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.959 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1271.982 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 1565629.040 ops/s
[info]                  ·gc.alloc.rate:               1114.139 MB/sec
[info]                  ·gc.alloc.rate.norm:          1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.477 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 671.994 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 1649554.517 ops/s
[info]                  ·gc.alloc.rate:                   1173.826 MB/sec
[info]                  ·gc.alloc.rate.norm:              1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.221 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1276.857 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala":
[info]   1632097.012 ±(99.9%) 143316.638 ops/s [Average]
[info]   (min, avg, max) = (1565629.040, 1632097.012, 1651779.973), stdev = 37218.876
[info]   CI (99.9%): [1488780.374, 1775413.651] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1161.445 ±(99.9%) 101.997 MB/sec [Average]
[info]   (min, avg, max) = (1114.139, 1161.445, 1175.452), stdev = 26.488
[info]   CI (99.9%): [1059.448, 1263.443] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   1120.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1120.000, 1120.000, 1120.000), stdev = 0.001
[info]   CI (99.9%): [1120.000, 1120.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1068.308 ±(99.9%) 1409.507 MB/sec [Average]
[info]   (min, avg, max) = (666.186, 1068.308, 1338.221), stdev = 366.045
[info]   CI (99.9%): [≈ 0, 2477.815] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1026.476 ±(99.9%) 1309.447 B/op [Average]
[info]   (min, avg, max) = (636.443, 1026.476, 1276.857), stdev = 340.059
[info]   CI (99.9%): [≈ 0, 2335.923] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.196 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.125), stdev = 0.051
[info]   CI (99.9%): [≈ 0, 0.238] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.040 ±(99.9%) 0.188 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.040, 0.119), stdev = 0.049
[info]   CI (99.9%): [≈ 0, 0.227] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala
[info] # Run progress: 0.40% complete, ETA 02:11:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3010665.392 ops/s
[info] # Warmup Iteration   2: 3545824.152 ops/s
[info] # Warmup Iteration   3: 3560656.447 ops/s
[info] # Warmup Iteration   4: 3577882.832 ops/s
[info] # Warmup Iteration   5: 3581217.339 ops/s
[info] Iteration   1: 3588541.599 ops/s
[info]                  ·gc.alloc.rate:      237.128 MB/sec
[info]                  ·gc.alloc.rate.norm: 104.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 3554975.514 ops/s
[info]                  ·gc.alloc.rate:               234.905 MB/sec
[info]                  ·gc.alloc.rate.norm:          104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.588 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 226.497 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 3705356.617 ops/s
[info]                  ·gc.alloc.rate:      244.850 MB/sec
[info]                  ·gc.alloc.rate.norm: 104.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 3694367.638 ops/s
[info]                  ·gc.alloc.rate:                   244.112 MB/sec
[info]                  ·gc.alloc.rate.norm:              104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.589 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     217.955 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.027 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 3681057.839 ops/s
[info]                  ·gc.alloc.rate:      243.242 MB/sec
[info]                  ·gc.alloc.rate.norm: 104.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala":
[info]   3644859.841 ±(99.9%) 263087.433 ops/s [Average]
[info]   (min, avg, max) = (3554975.514, 3644859.841, 3705356.617), stdev = 68322.971
[info]   CI (99.9%): [3381772.408, 3907947.275] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   240.847 ±(99.9%) 17.388 MB/sec [Average]
[info]   (min, avg, max) = (234.905, 240.847, 244.850), stdev = 4.516
[info]   CI (99.9%): [223.460, 258.235] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   104.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (104.000, 104.000, 104.000), stdev = 0.001
[info]   CI (99.9%): [104.000, 104.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   204.635 ±(99.9%) 1078.984 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 204.635, 511.589), stdev = 280.209
[info]   CI (99.9%): [≈ 0, 1283.619] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   88.890 ±(99.9%) 468.837 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 88.890, 226.497), stdev = 121.756
[info]   CI (99.9%): [≈ 0, 557.728] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.005 ±(99.9%) 0.046 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.005, 0.027), stdev = 0.012
[info]   CI (99.9%): [≈ 0, 0.051] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.002 ±(99.9%) 0.020 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.002, 0.011), stdev = 0.005
[info]   CI (99.9%): [≈ 0, 0.022] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:·gc.count":
[info]   2.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.000), stdev = 0.548
[info]   CI (99.9%): [2.000, 2.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:·gc.time":
[info]   4.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 2.000), stdev = 1.095
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson
[info] # Run progress: 0.60% complete, ETA 02:11:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 39377.815 ops/s
[info] # Warmup Iteration   2: 170831.891 ops/s
[info] # Warmup Iteration   3: 173718.649 ops/s
[info] # Warmup Iteration   4: 175164.479 ops/s
[info] # Warmup Iteration   5: 173724.169 ops/s
[info] Iteration   1: 172369.695 ops/s
[info]                  ·gc.alloc.rate:                   1451.000 MB/sec
[info]                  ·gc.alloc.rate.norm:              13248.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.749 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12177.467 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.190 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 173665.284 ops/s
[info]                  ·gc.alloc.rate:                   1461.874 MB/sec
[info]                  ·gc.alloc.rate.norm:              13248.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2003.539 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18156.755 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.943 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 174531.308 ops/s
[info]                  ·gc.alloc.rate:               1469.409 MB/sec
[info]                  ·gc.alloc.rate.norm:          13248.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1338.566 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 12068.341 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 174538.185 ops/s
[info]                  ·gc.alloc.rate:                   1469.089 MB/sec
[info]                  ·gc.alloc.rate.norm:              13248.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.886 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12091.884 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.563 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 175317.893 ops/s
[info]                  ·gc.alloc.rate:               1475.768 MB/sec
[info]                  ·gc.alloc.rate.norm:          13248.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1342.981 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 12055.966 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson":
[info]   174084.473 ±(99.9%) 4323.634 ops/s [Average]
[info]   (min, avg, max) = (172369.695, 174084.473, 175317.893), stdev = 1122.834
[info]   CI (99.9%): [169760.839, 178408.107] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1465.428 ±(99.9%) 36.376 MB/sec [Average]
[info]   (min, avg, max) = (1451.000, 1465.428, 1475.768), stdev = 9.447
[info]   CI (99.9%): [1429.052, 1501.804] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   13248.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (13248.002, 13248.002, 13248.003), stdev = 0.001
[info]   CI (99.9%): [13248.002, 13248.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1471.944 ±(99.9%) 1144.375 MB/sec [Average]
[info]   (min, avg, max) = (1333.749, 1471.944, 2003.539), stdev = 297.191
[info]   CI (99.9%): [327.569, 2616.319] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   13310.082 ±(99.9%) 10434.427 B/op [Average]
[info]   (min, avg, max) = (12055.966, 13310.082, 18156.755), stdev = 2709.787
[info]   CI (99.9%): [2875.656, 23744.509] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.174 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.104), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.211] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.339 ±(99.9%) 1.573 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.339, 0.943), stdev = 0.408
[info]   CI (99.9%): [≈ 0, 1.912] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.400, 4.000), stdev = 1.140
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce
[info] # Run progress: 0.80% complete, ETA 02:11:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 198086.010 ops/s
[info] # Warmup Iteration   2: 571410.610 ops/s
[info] # Warmup Iteration   3: 577835.855 ops/s
[info] # Warmup Iteration   4: 572385.259 ops/s
[info] # Warmup Iteration   5: 578208.433 ops/s
[info] Iteration   1: 567208.694 ops/s
[info]                  ·gc.alloc.rate:                   1850.953 MB/sec
[info]                  ·gc.alloc.rate.norm:              5136.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2014.395 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5589.517 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.058 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 571757.050 ops/s
[info]                  ·gc.alloc.rate:                   1865.732 MB/sec
[info]                  ·gc.alloc.rate.norm:              5136.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2018.376 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5556.200 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.287 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 579960.790 ops/s
[info]                  ·gc.alloc.rate:                   1893.486 MB/sec
[info]                  ·gc.alloc.rate.norm:              5136.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2023.427 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5488.460 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.169 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 565679.527 ops/s
[info]                  ·gc.alloc.rate:                   1846.033 MB/sec
[info]                  ·gc.alloc.rate.norm:              5136.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.331 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3756.869 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.232 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 581184.515 ops/s
[info]                  ·gc.alloc.rate:                   1896.544 MB/sec
[info]                  ·gc.alloc.rate.norm:              5136.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2027.981 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5491.943 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.169 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce":
[info]   573158.115 ±(99.9%) 27498.246 ops/s [Average]
[info]   (min, avg, max) = (565679.527, 573158.115, 581184.515), stdev = 7141.207
[info]   CI (99.9%): [545659.869, 600656.362] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:·gc.alloc.rate":
[info]   1870.550 ±(99.9%) 90.512 MB/sec [Average]
[info]   (min, avg, max) = (1846.033, 1870.550, 1896.544), stdev = 23.506
[info]   CI (99.9%): [1780.037, 1961.062] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   5136.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5136.001, 5136.001, 5136.001), stdev = 0.001
[info]   CI (99.9%): [5136.001, 5136.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1886.902 ±(99.9%) 1155.178 MB/sec [Average]
[info]   (min, avg, max) = (1350.331, 1886.902, 2027.981), stdev = 299.996
[info]   CI (99.9%): [731.724, 3042.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5176.598 ±(99.9%) 3060.554 B/op [Average]
[info]   (min, avg, max) = (3756.869, 5176.598, 5589.517), stdev = 794.816
[info]   CI (99.9%): [2116.044, 8237.152] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.119 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.067, 0.104), stdev = 0.031
[info]   CI (99.9%): [≈ 0, 0.186] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.183 ±(99.9%) 0.329 B/op [Average]
[info]   (min, avg, max) = (0.058, 0.183, 0.287), stdev = 0.085
[info]   CI (99.9%): [≈ 0, 0.512] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala
[info] # Run progress: 1.00% complete, ETA 02:10:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 669647.560 ops/s
[info] # Warmup Iteration   2: 2084874.961 ops/s
[info] # Warmup Iteration   3: 2071103.121 ops/s
[info] # Warmup Iteration   4: 2066583.224 ops/s
[info] # Warmup Iteration   5: 2129465.854 ops/s
[info] Iteration   1: 2047792.190 ops/s
[info]                  ·gc.alloc.rate:                   666.839 MB/sec
[info]                  ·gc.alloc.rate.norm:              512.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1175.861 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     902.828 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.329 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.788 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 2125810.988 ops/s
[info]                  ·gc.alloc.rate:               691.596 MB/sec
[info]                  ·gc.alloc.rate.norm:          512.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      666.555 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 493.462 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 2113537.712 ops/s
[info]                  ·gc.alloc.rate:                   687.784 MB/sec
[info]                  ·gc.alloc.rate.norm:              512.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.061 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     496.573 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 2125741.949 ops/s
[info]                  ·gc.alloc.rate:                   691.545 MB/sec
[info]                  ·gc.alloc.rate.norm:              512.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          666.839 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     493.708 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 2147644.366 ops/s
[info]                  ·gc.alloc.rate:               698.699 MB/sec
[info]                  ·gc.alloc.rate.norm:          512.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      666.866 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 488.674 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala":
[info]   2112105.441 ±(99.9%) 146312.526 ops/s [Average]
[info]   (min, avg, max) = (2047792.190, 2112105.441, 2147644.366), stdev = 37996.898
[info]   CI (99.9%): [1965792.915, 2258417.967] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   687.293 ±(99.9%) 46.579 MB/sec [Average]
[info]   (min, avg, max) = (666.839, 687.293, 698.699), stdev = 12.096
[info]   CI (99.9%): [640.714, 733.871] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   512.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (512.000, 512.000, 512.000), stdev = 0.001
[info]   CI (99.9%): [512.000, 512.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   768.636 ±(99.9%) 876.582 MB/sec [Average]
[info]   (min, avg, max) = (666.555, 768.636, 1175.861), stdev = 227.646
[info]   CI (99.9%): [≈ 0, 1645.218] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   575.049 ±(99.9%) 705.653 B/op [Average]
[info]   (min, avg, max) = (488.674, 575.049, 902.828), stdev = 183.256
[info]   CI (99.9%): [≈ 0, 1280.702] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.474 ±(99.9%) 3.994 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.474, 2.329), stdev = 1.037
[info]   CI (99.9%): [≈ 0, 4.468] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.364 ±(99.9%) 3.067 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.364, 1.788), stdev = 0.796
[info]   CI (99.9%): [≈ 0, 3.431] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.800, 6.000), stdev = 2.387
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala
[info] # Run progress: 1.20% complete, ETA 02:10:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6074412.148 ops/s
[info] # Warmup Iteration   2: 17259348.055 ops/s
[info] # Warmup Iteration   3: 15919301.189 ops/s
[info] # Warmup Iteration   4: 17867175.834 ops/s
[info] # Warmup Iteration   5: 18163857.419 ops/s
[info] Iteration   1: 18221585.407 ops/s
[info]                  ·gc.alloc.rate:               926.208 MB/sec
[info]                  ·gc.alloc.rate.norm:          80.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.490 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 58.172 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 18204173.894 ops/s
[info]                  ·gc.alloc.rate:               925.782 MB/sec
[info]                  ·gc.alloc.rate.norm:          80.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1346.171 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 116.327 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 18723746.307 ops/s
[info]                  ·gc.alloc.rate:               951.724 MB/sec
[info]                  ·gc.alloc.rate.norm:          80.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.451 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 56.609 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 18724280.250 ops/s
[info]                  ·gc.alloc.rate:                   951.761 MB/sec
[info]                  ·gc.alloc.rate.norm:              80.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.473 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     56.609 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 18632363.863 ops/s
[info]                  ·gc.alloc.rate:                   947.076 MB/sec
[info]                  ·gc.alloc.rate.norm:              80.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.941 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     113.777 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala":
[info]   18501229.944 ±(99.9%) 1024054.915 ops/s [Average]
[info]   (min, avg, max) = (18204173.894, 18501229.944, 18724280.250), stdev = 265943.810
[info]   CI (99.9%): [17477175.029, 19525284.859] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   940.510 ±(99.9%) 51.551 MB/sec [Average]
[info]   (min, avg, max) = (925.782, 940.510, 951.761), stdev = 13.388
[info]   CI (99.9%): [888.959, 992.062] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   80.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (80.000, 80.000, 80.000), stdev = 0.001
[info]   CI (99.9%): [80.000, 80.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   942.705 ±(99.9%) 1419.593 MB/sec [Average]
[info]   (min, avg, max) = (673.451, 942.705, 1346.941), stdev = 368.664
[info]   CI (99.9%): [≈ 0, 2362.298] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   80.299 ±(99.9%) 122.237 B/op [Average]
[info]   (min, avg, max) = (56.609, 80.299, 116.327), stdev = 31.745
[info]   CI (99.9%): [≈ 0, 202.536] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.001 ±(99.9%) 0.009 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.005), stdev = 0.002
[info]   CI (99.9%): [≈ 0, 0.010] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 1.41% complete, ETA 02:10:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 9393859.818 ops/s
[info] # Warmup Iteration   2: 13638153.640 ops/s
[info] # Warmup Iteration   3: 13628902.602 ops/s
[info] # Warmup Iteration   4: 13600583.334 ops/s
[info] # Warmup Iteration   5: 13618978.036 ops/s
[info] Iteration   1: 13604651.019 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 13627494.687 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 13640504.016 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 13627289.883 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 13819668.791 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc":
[info]   13663921.679 ±(99.9%) 338918.878 ops/s [Average]
[info]   (min, avg, max) = (13604651.019, 13663921.679, 13819668.791), stdev = 88016.156
[info]   CI (99.9%): [13325002.801, 14002840.557] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁵ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson
[info] # Run progress: 1.61% complete, ETA 02:09:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 56439.350 ops/s
[info] # Warmup Iteration   2: 300873.196 ops/s
[info] # Warmup Iteration   3: 305031.439 ops/s
[info] # Warmup Iteration   4: 307316.011 ops/s
[info] # Warmup Iteration   5: 307237.912 ops/s
[info] Iteration   1: 307539.231 ops/s
[info]                  ·gc.alloc.rate:                   1006.837 MB/sec
[info]                  ·gc.alloc.rate.norm:              5152.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.402 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6823.036 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.320 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 299462.368 ops/s
[info]                  ·gc.alloc.rate:               980.677 MB/sec
[info]                  ·gc.alloc.rate.norm:          5152.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      667.101 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3504.625 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 306919.210 ops/s
[info]                  ·gc.alloc.rate:                   1005.078 MB/sec
[info]                  ·gc.alloc.rate.norm:              5152.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.106 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6838.591 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.213 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 308104.471 ops/s
[info]                  ·gc.alloc.rate:                   1008.563 MB/sec
[info]                  ·gc.alloc.rate.norm:              5152.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.807 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3411.328 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.213 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 306821.657 ops/s
[info]                  ·gc.alloc.rate:               1004.390 MB/sec
[info]                  ·gc.alloc.rate.norm:          5152.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1336.271 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6854.376 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson":
[info]   305769.387 ±(99.9%) 13721.593 ops/s [Average]
[info]   (min, avg, max) = (299462.368, 305769.387, 308104.471), stdev = 3563.454
[info]   CI (99.9%): [292047.795, 319490.980] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1001.109 ±(99.9%) 44.423 MB/sec [Average]
[info]   (min, avg, max) = (980.677, 1001.109, 1008.563), stdev = 11.537
[info]   CI (99.9%): [956.686, 1045.532] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   5152.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5152.001, 5152.001, 5152.002), stdev = 0.001
[info]   CI (99.9%): [5152.001, 5152.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1067.737 ±(99.9%) 1407.059 MB/sec [Average]
[info]   (min, avg, max) = (667.101, 1067.737, 1336.271), stdev = 365.409
[info]   CI (99.9%): [≈ 0, 2474.796] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   5486.391 ±(99.9%) 7131.422 B/op [Average]
[info]   (min, avg, max) = (3411.328, 5486.391, 6854.376), stdev = 1852.008
[info]   CI (99.9%): [≈ 0, 12617.813] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.108 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.137] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.149 ±(99.9%) 0.550 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.149, 0.320), stdev = 0.143
[info]   CI (99.9%): [≈ 0, 0.700] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 3.000), stdev = 0.837
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce
[info] # Run progress: 1.81% complete, ETA 02:09:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 936907.221 ops/s
[info] # Warmup Iteration   2: 1664328.717 ops/s
[info] # Warmup Iteration   3: 1695273.041 ops/s
[info] # Warmup Iteration   4: 1699730.870 ops/s
[info] # Warmup Iteration   5: 1727306.733 ops/s
[info] Iteration   1: 1679512.853 ops/s
[info]                  ·gc.alloc.rate:                   2621.522 MB/sec
[info]                  ·gc.alloc.rate.norm:              2456.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2701.260 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2530.704 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 1731299.798 ops/s
[info]                  ·gc.alloc.rate:                   2701.629 MB/sec
[info]                  ·gc.alloc.rate.norm:              2456.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2705.907 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2459.889 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.095 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 1691422.389 ops/s
[info]                  ·gc.alloc.rate:                   2639.408 MB/sec
[info]                  ·gc.alloc.rate.norm:              2456.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2710.830 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2522.460 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.077 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 1719876.164 ops/s
[info]                  ·gc.alloc.rate:                   2683.853 MB/sec
[info]                  ·gc.alloc.rate.norm:              2456.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2714.943 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2484.451 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.095 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 1732423.979 ops/s
[info]                  ·gc.alloc.rate:                   2703.430 MB/sec
[info]                  ·gc.alloc.rate.norm:              2456.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2717.889 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2469.136 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.057 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce":
[info]   1710907.037 ±(99.9%) 92826.379 ops/s [Average]
[info]   (min, avg, max) = (1679512.853, 1710907.037, 1732423.979), stdev = 24106.716
[info]   CI (99.9%): [1618080.657, 1803733.416] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:·gc.alloc.rate":
[info]   2669.968 ±(99.9%) 144.024 MB/sec [Average]
[info]   (min, avg, max) = (2621.522, 2669.968, 2703.430), stdev = 37.403
[info]   CI (99.9%): [2525.944, 2813.993] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   2456.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2456.000, 2456.000, 2456.000), stdev = 0.001
[info]   CI (99.9%): [2456.000, 2456.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2710.166 ±(99.9%) 25.856 MB/sec [Average]
[info]   (min, avg, max) = (2701.260, 2710.166, 2717.889), stdev = 6.715
[info]   CI (99.9%): [2684.310, 2736.022] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   2493.328 ±(99.9%) 122.191 B/op [Average]
[info]   (min, avg, max) = (2459.889, 2493.328, 2530.704), stdev = 31.733
[info]   CI (99.9%): [2371.137, 2615.519] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.075 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.075, 0.104), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.209] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.069 ±(99.9%) 0.122 B/op [Average]
[info]   (min, avg, max) = (0.020, 0.069, 0.095), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.191] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava
[info] # Run progress: 2.01% complete, ETA 02:09:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.886 ops/s
[info] # Warmup Iteration   2: 9769733.775 ops/s
[info] # Warmup Iteration   3: 10164259.633 ops/s
[info] # Warmup Iteration   4: 10230251.266 ops/s
[info] # Warmup Iteration   5: 10007082.809 ops/s
[info] Iteration   1: 10188528.226 ops/s
[info]                  ·gc.alloc.rate:               1242.973 MB/sec
[info]                  ·gc.alloc.rate.norm:          192.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1331.664 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 205.700 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 10213436.545 ops/s
[info]                  ·gc.alloc.rate:               1245.975 MB/sec
[info]                  ·gc.alloc.rate.norm:          192.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1334.334 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 205.616 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 10191069.112 ops/s
[info]                  ·gc.alloc.rate:                   1243.239 MB/sec
[info]                  ·gc.alloc.rate.norm:              192.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.658 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     206.427 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.003 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 9918035.018 ops/s
[info]                  ·gc.alloc.rate:                   1209.941 MB/sec
[info]                  ·gc.alloc.rate.norm:              192.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.634 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     212.422 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.310 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.367 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 10266392.997 ops/s
[info]                  ·gc.alloc.rate:               1252.377 MB/sec
[info]                  ·gc.alloc.rate.norm:          192.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      669.792 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 102.685 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava":
[info]   10155492.380 ±(99.9%) 525156.202 ops/s [Average]
[info]   (min, avg, max) = (9918035.018, 10155492.380, 10266392.997), stdev = 136381.398
[info]   CI (99.9%): [9630336.178, 10680648.581] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   1238.901 ±(99.9%) 64.021 MB/sec [Average]
[info]   (min, avg, max) = (1209.941, 1238.901, 1252.377), stdev = 16.626
[info]   CI (99.9%): [1174.880, 1302.922] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   192.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (192.000, 192.000, 192.000), stdev = 0.001
[info]   CI (99.9%): [192.000, 192.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   1202.216 ±(99.9%) 1146.128 MB/sec [Average]
[info]   (min, avg, max) = (669.792, 1202.216, 1338.634), stdev = 297.646
[info]   CI (99.9%): [56.089, 2348.344] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   186.570 ±(99.9%) 180.899 B/op [Average]
[info]   (min, avg, max) = (102.685, 186.570, 212.422), stdev = 46.979
[info]   CI (99.9%): [5.671, 367.469] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.466 ±(99.9%) 3.970 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.466, 2.310), stdev = 1.031
[info]   CI (99.9%): [≈ 0, 4.436] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.074 ±(99.9%) 0.630 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.074, 0.367), stdev = 0.164
[info]   CI (99.9%): [≈ 0, 0.704] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.400, 4.000), stdev = 1.342
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala
[info] # Run progress: 2.21% complete, ETA 02:09:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 975331.889 ops/s
[info] # Warmup Iteration   2: 2529913.750 ops/s
[info] # Warmup Iteration   3: 2580240.358 ops/s
[info] # Warmup Iteration   4: 2559374.299 ops/s
[info] # Warmup Iteration   5: 2600876.966 ops/s
[info] Iteration   1: 2554091.662 ops/s
[info]                  ·gc.alloc.rate:               1791.647 MB/sec
[info]                  ·gc.alloc.rate.norm:          1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2005.579 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1235.823 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 2597625.901 ops/s
[info]                  ·gc.alloc.rate:                   1822.105 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.639 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     811.678 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.050 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 2591205.674 ops/s
[info]                  ·gc.alloc.rate:                   1817.958 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2014.798 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1223.536 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 2577747.613 ops/s
[info]                  ·gc.alloc.rate:                   1808.418 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2018.685 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1232.363 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 2600295.094 ops/s
[info]                  ·gc.alloc.rate:                   1823.999 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.973 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     816.484 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala":
[info]   2584193.189 ±(99.9%) 72972.786 ops/s [Average]
[info]   (min, avg, max) = (2554091.662, 2584193.189, 2600295.094), stdev = 18950.801
[info]   CI (99.9%): [2511220.403, 2657165.974] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1812.825 ±(99.9%) 51.129 MB/sec [Average]
[info]   (min, avg, max) = (1791.647, 1812.825, 1823.999), stdev = 13.278
[info]   CI (99.9%): [1761.696, 1863.955] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   1104.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1104.000, 1104.000, 1104.000), stdev = 0.001
[info]   CI (99.9%): [1104.000, 1104.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1745.535 ±(99.9%) 1410.552 MB/sec [Average]
[info]   (min, avg, max) = (1339.639, 1745.535, 2018.685), stdev = 366.316
[info]   CI (99.9%): [334.982, 3156.087] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1063.977 ±(99.9%) 878.614 B/op [Average]
[info]   (min, avg, max) = (811.678, 1063.977, 1235.823), stdev = 228.173
[info]   CI (99.9%): [185.363, 1942.590] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.083), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.178] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.028 ±(99.9%) 0.080 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.028, 0.050), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.108] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 4.000), stdev = 0.837
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala
[info] # Run progress: 2.41% complete, ETA 02:08:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 8753216.685 ops/s
[info] # Warmup Iteration   2: 9190692.316 ops/s
[info] # Warmup Iteration   3: 9441680.929 ops/s
[info] # Warmup Iteration   4: 9467173.268 ops/s
[info] # Warmup Iteration   5: 9504966.541 ops/s
[info] Iteration   1: 9494096.746 ops/s
[info]                  ·gc.alloc.rate:                   1206.462 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.638 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     223.735 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 9507809.115 ops/s
[info]                  ·gc.alloc.rate:               1208.270 MB/sec
[info]                  ·gc.alloc.rate.norm:          200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      674.799 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 111.697 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 9509248.787 ops/s
[info]                  ·gc.alloc.rate:                   1208.823 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.758 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     223.483 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 9462988.096 ops/s
[info]                  ·gc.alloc.rate:               1203.104 MB/sec
[info]                  ·gc.alloc.rate.norm:          200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1351.941 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 224.742 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 9434183.265 ops/s
[info]                  ·gc.alloc.rate:                   1198.865 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1351.985 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     225.544 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala":
[info]   9481665.202 ±(99.9%) 124808.842 ops/s [Average]
[info]   (min, avg, max) = (9434183.265, 9481665.202, 9509248.787), stdev = 32412.460
[info]   CI (99.9%): [9356856.360, 9606474.044] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1205.105 ±(99.9%) 15.950 MB/sec [Average]
[info]   (min, avg, max) = (1198.865, 1205.105, 1208.823), stdev = 4.142
[info]   CI (99.9%): [1189.155, 1221.055] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   200.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (200.000, 200.000, 200.000), stdev = 0.001
[info]   CI (99.9%): [200.000, 200.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1215.824 ±(99.9%) 1164.603 MB/sec [Average]
[info]   (min, avg, max) = (674.799, 1215.824, 1351.985), stdev = 302.444
[info]   CI (99.9%): [51.221, 2380.427] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   201.840 ±(99.9%) 194.066 B/op [Average]
[info]   (min, avg, max) = (111.697, 201.840, 225.544), stdev = 50.398
[info]   CI (99.9%): [7.774, 395.907] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.083), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.181] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.006 ±(99.9%) 0.024 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.006, 0.014), stdev = 0.006
[info]   CI (99.9%): [≈ 0, 0.030] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson
[info] # Run progress: 2.61% complete, ETA 02:08:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 163869.076 ops/s
[info] # Warmup Iteration   2: 602059.514 ops/s
[info] # Warmup Iteration   3: 616224.109 ops/s
[info] # Warmup Iteration   4: 629657.764 ops/s
[info] # Warmup Iteration   5: 628911.517 ops/s
[info] Iteration   1: 631099.957 ops/s
[info]                  ·gc.alloc.rate:                   1668.711 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.132 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3330.901 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.104 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 628736.402 ops/s
[info]                  ·gc.alloc.rate:                   1661.860 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2006.760 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5023.361 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.104 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 629990.955 ops/s
[info]                  ·gc.alloc.rate:                   1665.178 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.962 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3350.035 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.156 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 630106.287 ops/s
[info]                  ·gc.alloc.rate:                   1665.414 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2014.789 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5032.695 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.104 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 615202.519 ops/s
[info]                  ·gc.alloc.rate:                   1626.064 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.248 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3444.139 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.160 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson":
[info]   627027.224 ±(99.9%) 25657.862 ops/s [Average]
[info]   (min, avg, max) = (615202.519, 627027.224, 631099.957), stdev = 6663.265
[info]   CI (99.9%): [601369.362, 652685.085] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1657.445 ±(99.9%) 68.193 MB/sec [Average]
[info]   (min, avg, max) = (1626.064, 1657.445, 1668.711), stdev = 17.709
[info]   CI (99.9%): [1589.253, 1725.638] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   4160.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4160.001, 4160.001, 4160.001), stdev = 0.001
[info]   CI (99.9%): [4160.001, 4160.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1608.978 ±(99.9%) 1412.480 MB/sec [Average]
[info]   (min, avg, max) = (1336.132, 1608.978, 2014.789), stdev = 366.817
[info]   CI (99.9%): [196.498, 3021.458] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   4036.226 ±(99.9%) 3490.250 B/op [Average]
[info]   (min, avg, max) = (3330.901, 4036.226, 5032.695), stdev = 906.407
[info]   CI (99.9%): [545.976, 7526.476] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.050, 0.062), stdev = 0.011
[info]   CI (99.9%): [0.006, 0.094] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.126 ±(99.9%) 0.114 B/op [Average]
[info]   (min, avg, max) = (0.104, 0.126, 0.160), stdev = 0.030
[info]   CI (99.9%): [0.012, 0.239] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 4.000), stdev = 0.837
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce
[info] # Run progress: 2.81% complete, ETA 02:08:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1021507.115 ops/s
[info] # Warmup Iteration   2: 1970564.613 ops/s
[info] # Warmup Iteration   3: 2002458.807 ops/s
[info] # Warmup Iteration   4: 1968930.175 ops/s
[info] # Warmup Iteration   5: 1973468.295 ops/s
[info] Iteration   1: 1953884.464 ops/s
[info]                  ·gc.alloc.rate:                   1926.886 MB/sec
[info]                  ·gc.alloc.rate.norm:              1552.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2016.280 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1624.003 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 1974563.215 ops/s
[info]                  ·gc.alloc.rate:                   1947.529 MB/sec
[info]                  ·gc.alloc.rate.norm:              1552.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2019.781 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1609.578 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.066 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 1972090.136 ops/s
[info]                  ·gc.alloc.rate:                   1945.568 MB/sec
[info]                  ·gc.alloc.rate.norm:              1552.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2025.030 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1615.388 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.083 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 2017660.165 ops/s
[info]                  ·gc.alloc.rate:                   1989.761 MB/sec
[info]                  ·gc.alloc.rate.norm:              1552.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2026.987 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1581.036 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.065 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 2017287.785 ops/s
[info]                  ·gc.alloc.rate:                   1989.532 MB/sec
[info]                  ·gc.alloc.rate.norm:              1552.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2031.032 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1584.373 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.049 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce":
[info]   1987097.153 ±(99.9%) 111119.016 ops/s [Average]
[info]   (min, avg, max) = (1953884.464, 1987097.153, 2017660.165), stdev = 28857.256
[info]   CI (99.9%): [1875978.137, 2098216.170] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1959.855 ±(99.9%) 109.221 MB/sec [Average]
[info]   (min, avg, max) = (1926.886, 1959.855, 1989.761), stdev = 28.364
[info]   CI (99.9%): [1850.634, 2069.076] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   1552.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1552.000, 1552.000, 1552.000), stdev = 0.001
[info]   CI (99.9%): [1552.000, 1552.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   2023.822 ±(99.9%) 22.508 MB/sec [Average]
[info]   (min, avg, max) = (2016.280, 2023.822, 2031.032), stdev = 5.845
[info]   CI (99.9%): [2001.314, 2046.330] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1602.876 ±(99.9%) 73.746 B/op [Average]
[info]   (min, avg, max) = (1581.036, 1602.876, 1624.003), stdev = 19.152
[info]   CI (99.9%): [1529.130, 1676.622] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.071 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.071, 0.104), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.056 ±(99.9%) 0.097 B/op [Average]
[info]   (min, avg, max) = (0.017, 0.056, 0.083), stdev = 0.025
[info]   CI (99.9%): [≈ 0, 0.152] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava
[info] # Run progress: 3.01% complete, ETA 02:08:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.888 ops/s
[info] # Warmup Iteration   2: 18404945.700 ops/s
[info] # Warmup Iteration   3: 17726536.206 ops/s
[info] # Warmup Iteration   4: 19271839.334 ops/s
[info] # Warmup Iteration   5: 19151936.782 ops/s
[info] Iteration   1: 19295591.600 ops/s
[info]                  ·gc.alloc.rate:                   588.499 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.626 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     41.730 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.014 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 19126970.065 ops/s
[info]                  ·gc.alloc.rate:               583.468 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      663.960 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 54.622 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 19149892.012 ops/s
[info]                  ·gc.alloc.rate:                   584.029 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.823 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     54.558 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.007 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 19165943.143 ops/s
[info]                  ·gc.alloc.rate:               584.526 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      665.158 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 54.621 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 19419808.779 ops/s
[info]                  ·gc.alloc.rate:                   592.271 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          665.144 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53.906 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava":
[info]   19231641.119 ±(99.9%) 477277.577 ops/s [Average]
[info]   (min, avg, max) = (19126970.065, 19231641.119, 19419808.779), stdev = 123947.471
[info]   CI (99.9%): [18754363.543, 19708918.696] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   586.559 ±(99.9%) 14.469 MB/sec [Average]
[info]   (min, avg, max) = (583.468, 586.559, 592.271), stdev = 3.758
[info]   CI (99.9%): [572.089, 601.028] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   48.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (48.000, 48.000, 48.000), stdev = 0.001
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   633.942 ±(99.9%) 263.306 MB/sec [Average]
[info]   (min, avg, max) = (511.626, 633.942, 665.158), stdev = 68.380
[info]   CI (99.9%): [370.636, 897.248] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   51.887 ±(99.9%) 21.896 B/op [Average]
[info]   (min, avg, max) = (41.730, 51.887, 54.622), stdev = 5.686
[info]   CI (99.9%): [29.992, 73.783] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.035 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.043] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.001 ±(99.9%) 0.003 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.002), stdev = 0.001
[info]   CI (99.9%): [≈ 0, 0.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala
[info] # Run progress: 3.21% complete, ETA 02:07:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2113600.540 ops/s
[info] # Warmup Iteration   2: 6056331.062 ops/s
[info] # Warmup Iteration   3: 6082523.816 ops/s
[info] # Warmup Iteration   4: 6010341.782 ops/s
[info] # Warmup Iteration   5: 6011134.240 ops/s
[info] Iteration   1: 6140415.067 ops/s
[info]                  ·gc.alloc.rate:                   1685.432 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.643 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     341.831 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 6127176.771 ops/s
[info]                  ·gc.alloc.rate:                   1681.817 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2004.777 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     514.957 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 6140032.409 ops/s
[info]                  ·gc.alloc.rate:                   1685.446 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.675 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     343.375 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 6124091.840 ops/s
[info]                  ·gc.alloc.rate:                   1681.732 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2015.006 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     517.611 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 5971145.323 ops/s
[info]                  ·gc.alloc.rate:                   1638.988 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.594 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     354.668 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala":
[info]   6100572.282 ±(99.9%) 280045.710 ops/s [Average]
[info]   (min, avg, max) = (5971145.323, 6100572.282, 6140415.067), stdev = 72726.982
[info]   CI (99.9%): [5820526.572, 6380617.992] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1674.683 ±(99.9%) 77.160 MB/sec [Average]
[info]   (min, avg, max) = (1638.988, 1674.683, 1685.446), stdev = 20.038
[info]   CI (99.9%): [1597.523, 1751.843] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   432.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (432.000, 432.000, 432.000), stdev = 0.001
[info]   CI (99.9%): [432.000, 432.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1607.739 ±(99.9%) 1413.784 MB/sec [Average]
[info]   (min, avg, max) = (1333.643, 1607.739, 2015.006), stdev = 367.155
[info]   CI (99.9%): [193.955, 3021.523] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   414.488 ±(99.9%) 358.352 B/op [Average]
[info]   (min, avg, max) = (341.831, 414.488, 517.611), stdev = 93.063
[info]   CI (99.9%): [56.136, 772.841] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.083), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.014 ±(99.9%) 0.031 B/op [Average]
[info]   (min, avg, max) = (0.005, 0.014, 0.021), stdev = 0.008
[info]   CI (99.9%): [≈ 0, 0.045] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala
[info] # Run progress: 3.41% complete, ETA 02:07:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 18152070.837 ops/s
[info] # Warmup Iteration   2: 26560649.101 ops/s
[info] # Warmup Iteration   3: 27617224.776 ops/s
[info] # Warmup Iteration   4: 27840000.636 ops/s
[info] # Warmup Iteration   5: 28363625.858 ops/s
[info] Iteration   1: 28332160.125 ops/s
[info]                  ·gc.alloc.rate:                   864.087 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.451 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     37.410 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 27264683.286 ops/s
[info]                  ·gc.alloc.rate:               831.522 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.475 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 38.877 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 27680693.778 ops/s
[info]                  ·gc.alloc.rate:                   844.223 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.956 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     76.584 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 28522505.608 ops/s
[info]                  ·gc.alloc.rate:               870.338 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.860 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 37.164 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 28520659.363 ops/s
[info]                  ·gc.alloc.rate:                   870.059 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.682 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     37.166 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala":
[info]   28064140.432 ±(99.9%) 2175277.962 ops/s [Average]
[info]   (min, avg, max) = (27264683.286, 28064140.432, 28522505.608), stdev = 564912.779
[info]   CI (99.9%): [25888862.470, 30239418.394] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   856.046 ±(99.9%) 66.875 MB/sec [Average]
[info]   (min, avg, max) = (831.522, 856.046, 870.338), stdev = 17.367
[info]   CI (99.9%): [789.170, 922.921] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   48.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (48.000, 48.000, 48.000), stdev = 0.001
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   808.285 ±(99.9%) 1159.530 MB/sec [Average]
[info]   (min, avg, max) = (673.451, 808.285, 1346.956), stdev = 301.126
[info]   CI (99.9%): [≈ 0, 1967.815] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   45.440 ±(99.9%) 67.095 B/op [Average]
[info]   (min, avg, max) = (37.164, 45.440, 76.584), stdev = 17.424
[info]   CI (99.9%): [≈ 0, 112.536] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.083), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.002 ±(99.9%) 0.008 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.002, 0.005), stdev = 0.002
[info]   CI (99.9%): [≈ 0, 0.009] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 0.707
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 3.61% complete, ETA 02:07:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 21705824.493 ops/s
[info] # Warmup Iteration   2: 27691320.180 ops/s
[info] # Warmup Iteration   3: 29308263.822 ops/s
[info] # Warmup Iteration   4: 29318272.445 ops/s
[info] # Warmup Iteration   5: 29316685.752 ops/s
[info] Iteration   1: 29309776.832 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 29314837.245 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 27687383.277 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 29201935.281 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 29321727.616 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc":
[info]   28967132.050 ±(99.9%) 2761298.241 ops/s [Average]
[info]   (min, avg, max) = (27687383.277, 28967132.050, 29321727.616), stdev = 717100.384
[info]   CI (99.9%): [26205833.809, 31728430.291] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁵ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson
[info] # Run progress: 3.82% complete, ETA 02:07:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 360398.387 ops/s
[info] # Warmup Iteration   2: 1141017.477 ops/s
[info] # Warmup Iteration   3: 1148863.414 ops/s
[info] # Warmup Iteration   4: 1154388.252 ops/s
[info] # Warmup Iteration   5: 1155756.206 ops/s
[info] Iteration   1: 1158733.519 ops/s
[info]                  ·gc.alloc.rate:                   1737.816 MB/sec
[info]                  ·gc.alloc.rate.norm:              2360.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2004.775 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2722.538 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.057 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 1157381.180 ops/s
[info]                  ·gc.alloc.rate:                   1735.643 MB/sec
[info]                  ·gc.alloc.rate.norm:              2360.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.684 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1820.245 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.085 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 1153764.436 ops/s
[info]                  ·gc.alloc.rate:                   1730.094 MB/sec
[info]                  ·gc.alloc.rate.norm:              2360.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2012.139 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2744.735 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.114 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 1153412.918 ops/s
[info]                  ·gc.alloc.rate:                   1729.542 MB/sec
[info]                  ·gc.alloc.rate.norm:              2360.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2017.462 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2752.873 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 1155574.923 ops/s
[info]                  ·gc.alloc.rate:               1732.727 MB/sec
[info]                  ·gc.alloc.rate.norm:          2360.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1347.192 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1834.896 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson":
[info]   1155773.395 ±(99.9%) 8821.771 ops/s [Average]
[info]   (min, avg, max) = (1153412.918, 1155773.395, 1158733.519), stdev = 2290.986
[info]   CI (99.9%): [1146951.624, 1164595.166] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1733.164 ±(99.9%) 13.685 MB/sec [Average]
[info]   (min, avg, max) = (1729.542, 1733.164, 1737.816), stdev = 3.554
[info]   CI (99.9%): [1719.480, 1746.849] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   2360.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2360.000, 2360.000, 2360.000), stdev = 0.001
[info]   CI (99.9%): [2360.000, 2360.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1744.050 ±(99.9%) 1410.120 MB/sec [Average]
[info]   (min, avg, max) = (1338.684, 1744.050, 2017.462), stdev = 366.204
[info]   CI (99.9%): [333.930, 3154.170] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   2375.057 ±(99.9%) 1925.072 B/op [Average]
[info]   (min, avg, max) = (1820.245, 2375.057, 2752.873), stdev = 499.935
[info]   CI (99.9%): [449.985, 4300.129] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.127 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.083), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.057 ±(99.9%) 0.173 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.057, 0.114), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.229] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 4.02% complete, ETA 02:06:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 284430.591 ops/s
[info] # Warmup Iteration   2: 332489.533 ops/s
[info] # Warmup Iteration   3: 342794.344 ops/s
[info] # Warmup Iteration   4: 337752.216 ops/s
[info] # Warmup Iteration   5: 340681.040 ops/s
[info] Iteration   1: 343215.397 ops/s
[info]                  ·gc.alloc.rate:                   2051.864 MB/sec
[info]                  ·gc.alloc.rate.norm:              9408.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2023.352 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9277.271 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.477 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 342984.539 ops/s
[info]                  ·gc.alloc.rate:                   2050.265 MB/sec
[info]                  ·gc.alloc.rate.norm:              9408.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2025.695 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9295.258 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.382 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 343882.220 ops/s
[info]                  ·gc.alloc.rate:                   2055.615 MB/sec
[info]                  ·gc.alloc.rate.norm:              9408.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2029.074 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9286.529 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.476 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 342358.650 ops/s
[info]                  ·gc.alloc.rate:                   2046.483 MB/sec
[info]                  ·gc.alloc.rate.norm:              9408.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2031.739 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9340.220 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.191 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 343574.803 ops/s
[info]                  ·gc.alloc.rate:                   2053.754 MB/sec
[info]                  ·gc.alloc.rate.norm:              9408.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2033.991 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9317.468 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.191 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce":
[info]   343203.122 ±(99.9%) 2245.608 ops/s [Average]
[info]   (min, avg, max) = (342358.650, 343203.122, 343882.220), stdev = 583.177
[info]   CI (99.9%): [340957.514, 345448.730] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:·gc.alloc.rate":
[info]   2051.596 ±(99.9%) 13.450 MB/sec [Average]
[info]   (min, avg, max) = (2046.483, 2051.596, 2055.615), stdev = 3.493
[info]   CI (99.9%): [2038.146, 2065.046] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   9408.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (9408.001, 9408.001, 9408.001), stdev = 0.001
[info]   CI (99.9%): [9408.001, 9408.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2028.770 ±(99.9%) 16.671 MB/sec [Average]
[info]   (min, avg, max) = (2023.352, 2028.770, 2033.991), stdev = 4.329
[info]   CI (99.9%): [2012.099, 2045.441] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   9303.349 ±(99.9%) 97.932 B/op [Average]
[info]   (min, avg, max) = (9277.271, 9303.349, 9340.220), stdev = 25.433
[info]   CI (99.9%): [9205.417, 9401.281] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.075 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.075, 0.104), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.197] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.344 ±(99.9%) 0.556 B/op [Average]
[info]   (min, avg, max) = (0.191, 0.344, 0.477), stdev = 0.145
[info]   CI (99.9%): [≈ 0, 0.900] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 4.22% complete, ETA 02:06:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 261842.014 ops/s
[info] # Warmup Iteration   2: 446546.991 ops/s
[info] # Warmup Iteration   3: 471072.399 ops/s
[info] # Warmup Iteration   4: 473639.225 ops/s
[info] # Warmup Iteration   5: 472547.425 ops/s
[info] Iteration   1: 470914.762 ops/s
[info]                  ·gc.alloc.rate:                   641.483 MB/sec
[info]                  ·gc.alloc.rate.norm:              2144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.594 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1709.878 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.035 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 471846.472 ops/s
[info]                  ·gc.alloc.rate:                   642.763 MB/sec
[info]                  ·gc.alloc.rate.norm:              2144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          666.478 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2223.103 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.386 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.958 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 483353.958 ops/s
[info]                  ·gc.alloc.rate:                   658.444 MB/sec
[info]                  ·gc.alloc.rate.norm:              2144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          666.484 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2170.181 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.203 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 482933.791 ops/s
[info]                  ·gc.alloc.rate:                   657.902 MB/sec
[info]                  ·gc.alloc.rate.norm:              2144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          666.831 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2173.100 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.068 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 483330.211 ops/s
[info]                  ·gc.alloc.rate:                   658.379 MB/sec
[info]                  ·gc.alloc.rate.norm:              2144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          666.783 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2171.369 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.136 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala":
[info]   478475.839 ±(99.9%) 24981.207 ops/s [Average]
[info]   (min, avg, max) = (470914.762, 478475.839, 483353.958), stdev = 6487.540
[info]   CI (99.9%): [453494.632, 503457.046] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   651.794 ±(99.9%) 34.049 MB/sec [Average]
[info]   (min, avg, max) = (641.483, 651.794, 658.444), stdev = 8.842
[info]   CI (99.9%): [617.745, 685.843] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   2144.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2144.001, 2144.001, 2144.001), stdev = 0.001
[info]   CI (99.9%): [2144.001, 2144.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   635.634 ±(99.9%) 267.006 MB/sec [Average]
[info]   (min, avg, max) = (511.594, 635.634, 666.831), stdev = 69.341
[info]   CI (99.9%): [368.628, 902.640] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   2089.526 ±(99.9%) 821.740 B/op [Average]
[info]   (min, avg, max) = (1709.878, 2089.526, 2223.103), stdev = 213.403
[info]   CI (99.9%): [1267.787, 2911.266] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.504 ±(99.9%) 4.051 MB/sec [Average]
[info]   (min, avg, max) = (0.010, 0.504, 2.386), stdev = 1.052
[info]   CI (99.9%): [≈ 0, 4.555] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.680 ±(99.9%) 13.516 B/op [Average]
[info]   (min, avg, max) = (0.035, 1.680, 7.958), stdev = 3.510
[info]   CI (99.9%): [≈ 0, 15.196] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 4.000), stdev = 1.414
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 4.42% complete, ETA 02:06:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 957723.719 ops/s
[info] # Warmup Iteration   2: 1024660.861 ops/s
[info] # Warmup Iteration   3: 1022228.837 ops/s
[info] # Warmup Iteration   4: 1005993.875 ops/s
[info] # Warmup Iteration   5: 1025565.851 ops/s
[info] Iteration   1: 1027412.740 ops/s
[info]                  ·gc.alloc.rate:                   684.130 MB/sec
[info]                  ·gc.alloc.rate.norm:              1048.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.150 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1031.181 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.584 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.427 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 1028321.402 ops/s
[info]                  ·gc.alloc.rate:                   684.815 MB/sec
[info]                  ·gc.alloc.rate.norm:              1048.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.218 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1030.253 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.064 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 1030601.944 ops/s
[info]                  ·gc.alloc.rate:                   686.284 MB/sec
[info]                  ·gc.alloc.rate.norm:              1048.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.808 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1027.422 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 1030843.859 ops/s
[info]                  ·gc.alloc.rate:               686.423 MB/sec
[info]                  ·gc.alloc.rate.norm:          1048.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.808 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1027.214 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 1030369.390 ops/s
[info]                  ·gc.alloc.rate:                   686.078 MB/sec
[info]                  ·gc.alloc.rate.norm:              1048.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.113 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1028.195 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.064 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala":
[info]   1029509.867 ±(99.9%) 5940.901 ops/s [Average]
[info]   (min, avg, max) = (1027412.740, 1029509.867, 1030843.859), stdev = 1542.833
[info]   CI (99.9%): [1023568.967, 1035450.768] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   685.546 ±(99.9%) 3.916 MB/sec [Average]
[info]   (min, avg, max) = (684.130, 685.546, 686.423), stdev = 1.017
[info]   CI (99.9%): [681.630, 689.462] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   1048.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1048.000, 1048.000, 1048.000), stdev = 0.001
[info]   CI (99.9%): [1048.000, 1048.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   673.019 ±(99.9%) 0.757 MB/sec [Average]
[info]   (min, avg, max) = (672.808, 673.019, 673.218), stdev = 0.197
[info]   CI (99.9%): [672.262, 673.776] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1028.853 ±(99.9%) 6.819 B/op [Average]
[info]   (min, avg, max) = (1027.214, 1028.853, 1031.181), stdev = 1.771
[info]   CI (99.9%): [1022.034, 1035.672] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.338 ±(99.9%) 2.684 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.338, 1.584), stdev = 0.697
[info]   CI (99.9%): [≈ 0, 3.022] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.517 ±(99.9%) 4.112 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.517, 2.427), stdev = 1.068
[info]   CI (99.9%): [≈ 0, 4.629] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 4.62% complete, ETA 02:06:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 80335.037 ops/s
[info] # Warmup Iteration   2: 117818.504 ops/s
[info] # Warmup Iteration   3: 119265.753 ops/s
[info] # Warmup Iteration   4: 119742.326 ops/s
[info] # Warmup Iteration   5: 121538.131 ops/s
[info] Iteration   1: 121020.950 ops/s
[info]                  ·gc.alloc.rate:                   4189.153 MB/sec
[info]                  ·gc.alloc.rate.norm:              54472.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4068.663 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     52905.268 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.083 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 120430.967 ops/s
[info]                  ·gc.alloc.rate:                   4168.190 MB/sec
[info]                  ·gc.alloc.rate.norm:              54472.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4075.461 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53260.174 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.360 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 120613.948 ops/s
[info]                  ·gc.alloc.rate:                   4174.949 MB/sec
[info]                  ·gc.alloc.rate.norm:              54472.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4081.975 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53258.934 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.358 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 120466.537 ops/s
[info]                  ·gc.alloc.rate:                   4169.355 MB/sec
[info]                  ·gc.alloc.rate.norm:              54472.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4084.708 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53366.101 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.088 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 121151.535 ops/s
[info]                  ·gc.alloc.rate:                   4193.101 MB/sec
[info]                  ·gc.alloc.rate.norm:              54472.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4768.911 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     61952.262 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.541 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson":
[info]   120736.788 ±(99.9%) 1268.983 ops/s [Average]
[info]   (min, avg, max) = (120430.967, 120736.788, 121151.535), stdev = 329.551
[info]   CI (99.9%): [119467.804, 122005.771] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.alloc.rate":
[info]   4178.950 ±(99.9%) 44.249 MB/sec [Average]
[info]   (min, avg, max) = (4168.190, 4178.950, 4193.101), stdev = 11.491
[info]   CI (99.9%): [4134.700, 4223.199] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   54472.004 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (54472.004, 54472.004, 54472.004), stdev = 0.001
[info]   CI (99.9%): [54472.003, 54472.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   4215.943 ±(99.9%) 1190.543 MB/sec [Average]
[info]   (min, avg, max) = (4068.663, 4215.943, 4768.911), stdev = 309.180
[info]   CI (99.9%): [3025.400, 5406.487] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   54948.548 ±(99.9%) 15090.956 B/op [Average]
[info]   (min, avg, max) = (52905.268, 54948.548, 61952.262), stdev = 3919.073
[info]   CI (99.9%): [39857.591, 70039.504] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.083 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.083, 0.104), stdev = 0.025
[info]   CI (99.9%): [≈ 0, 0.181] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.086 ±(99.9%) 1.286 B/op [Average]
[info]   (min, avg, max) = (0.541, 1.086, 1.360), stdev = 0.334
[info]   CI (99.9%): [≈ 0, 2.373] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.count":
[info]   31.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 4.82% complete, ETA 02:06:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 556900.986 ops/s
[info] # Warmup Iteration   2: 595254.024 ops/s
[info] # Warmup Iteration   3: 613913.412 ops/s
[info] # Warmup Iteration   4: 624053.261 ops/s
[info] # Warmup Iteration   5: 623409.849 ops/s
[info] Iteration   1: 622356.904 ops/s
[info]                  ·gc.alloc.rate:                   1904.283 MB/sec
[info]                  ·gc.alloc.rate.norm:              4816.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2023.998 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5118.764 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.158 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 618812.104 ops/s
[info]                  ·gc.alloc.rate:                   1893.515 MB/sec
[info]                  ·gc.alloc.rate.norm:              4816.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.911 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3435.932 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.265 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 625705.809 ops/s
[info]                  ·gc.alloc.rate:                   1914.543 MB/sec
[info]                  ·gc.alloc.rate.norm:              4816.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2029.012 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5103.946 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.209 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 625806.501 ops/s
[info]                  ·gc.alloc.rate:                   1914.932 MB/sec
[info]                  ·gc.alloc.rate.norm:              4816.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2031.700 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5109.668 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.105 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 622424.274 ops/s
[info]                  ·gc.alloc.rate:                   1904.571 MB/sec
[info]                  ·gc.alloc.rate.norm:              4816.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2033.634 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5142.357 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.158 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readUPickle":
[info]   623021.118 ±(99.9%) 11140.134 ops/s [Average]
[info]   (min, avg, max) = (618812.104, 623021.118, 625806.501), stdev = 2893.057
[info]   CI (99.9%): [611880.984, 634161.252] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readUPickle:·gc.alloc.rate":
[info]   1906.369 ±(99.9%) 34.060 MB/sec [Average]
[info]   (min, avg, max) = (1893.515, 1906.369, 1914.932), stdev = 8.845
[info]   CI (99.9%): [1872.309, 1940.429] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readUPickle:·gc.alloc.rate.norm":
[info]   4816.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4816.001, 4816.001, 4816.001), stdev = 0.001
[info]   CI (99.9%): [4816.001, 4816.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readUPickle:·gc.churn.PS_Eden_Space":
[info]   1893.851 ±(99.9%) 1168.802 MB/sec [Average]
[info]   (min, avg, max) = (1350.911, 1893.851, 2033.634), stdev = 303.534
[info]   CI (99.9%): [725.049, 3062.653] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   4782.134 ±(99.9%) 2898.350 B/op [Average]
[info]   (min, avg, max) = (3435.932, 4782.134, 5142.357), stdev = 752.692
[info]   CI (99.9%): [1883.784, 7680.483] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readUPickle:·gc.churn.PS_Survivor_Space":
[info]   0.071 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.071, 0.104), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.162] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   0.179 ±(99.9%) 0.233 B/op [Average]
[info]   (min, avg, max) = (0.105, 0.179, 0.265), stdev = 0.061
[info]   CI (99.9%): [≈ 0, 0.412] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readUPickle:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readUPickle:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 5.02% complete, ETA 02:05:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 240219.239 ops/s
[info] # Warmup Iteration   2: 322986.989 ops/s
[info] # Warmup Iteration   3: 318428.993 ops/s
[info] # Warmup Iteration   4: 326548.317 ops/s
[info] # Warmup Iteration   5: 324999.947 ops/s
[info] Iteration   1: 323750.640 ops/s
[info]                  ·gc.alloc.rate:                   1102.596 MB/sec
[info]                  ·gc.alloc.rate.norm:              5360.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.363 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6515.851 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.304 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 322626.233 ops/s
[info]                  ·gc.alloc.rate:               1098.704 MB/sec
[info]                  ·gc.alloc.rate.norm:          5360.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      670.113 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3269.133 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 321670.596 ops/s
[info]                  ·gc.alloc.rate:                   1095.485 MB/sec
[info]                  ·gc.alloc.rate.norm:              5360.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.632 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6564.356 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.509 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 325493.545 ops/s
[info]                  ·gc.alloc.rate:               1108.508 MB/sec
[info]                  ·gc.alloc.rate.norm:          5360.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      671.473 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3246.794 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 325308.005 ops/s
[info]                  ·gc.alloc.rate:                   1107.824 MB/sec
[info]                  ·gc.alloc.rate.norm:              5360.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.921 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6502.315 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.101 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce":
[info]   323769.804 ±(99.9%) 6400.686 ops/s [Average]
[info]   (min, avg, max) = (321670.596, 323769.804, 325493.545), stdev = 1662.238
[info]   CI (99.9%): [317369.117, 330170.490] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:·gc.alloc.rate":
[info]   1102.623 ±(99.9%) 21.782 MB/sec [Average]
[info]   (min, avg, max) = (1095.485, 1102.623, 1108.508), stdev = 5.657
[info]   CI (99.9%): [1080.841, 1124.406] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   5360.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5360.001, 5360.001, 5360.001), stdev = 0.001
[info]   CI (99.9%): [5360.001, 5360.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1073.501 ±(99.9%) 1415.583 MB/sec [Average]
[info]   (min, avg, max) = (670.113, 1073.501, 1343.921), stdev = 367.622
[info]   CI (99.9%): [≈ 0, 2489.083] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5219.690 ±(99.9%) 6896.383 B/op [Average]
[info]   (min, avg, max) = (3246.794, 5219.690, 6564.356), stdev = 1790.969
[info]   CI (99.9%): [≈ 0, 12116.073] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.174 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.104), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.211] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.183 ±(99.9%) 0.850 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.183, 0.509), stdev = 0.221
[info]   CI (99.9%): [≈ 0, 1.032] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 5.22% complete, ETA 02:05:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 436466.270 ops/s
[info] # Warmup Iteration   2: 655945.299 ops/s
[info] # Warmup Iteration   3: 677254.491 ops/s
[info] # Warmup Iteration   4: 667480.084 ops/s
[info] # Warmup Iteration   5: 671121.866 ops/s
[info] Iteration   1: 669854.118 ops/s
[info]                  ·gc.alloc.rate:               493.700 MB/sec
[info]                  ·gc.alloc.rate.norm:          1160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.585 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1202.023 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 672286.560 ops/s
[info]                  ·gc.alloc.rate:               495.503 MB/sec
[info]                  ·gc.alloc.rate.norm:          1160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.599 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1197.685 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 668467.057 ops/s
[info]                  ·gc.alloc.rate:                   492.700 MB/sec
[info]                  ·gc.alloc.rate.norm:              1160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          666.508 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1569.210 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.365 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.568 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 657292.664 ops/s
[info]                  ·gc.alloc.rate:      484.467 MB/sec
[info]                  ·gc.alloc.rate.norm: 1160.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 670775.829 ops/s
[info]                  ·gc.alloc.rate:                   494.584 MB/sec
[info]                  ·gc.alloc.rate.norm:              1160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          666.728 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1563.749 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.098 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala":
[info]   667735.245 ±(99.9%) 23106.453 ops/s [Average]
[info]   (min, avg, max) = (657292.664, 667735.245, 672286.560), stdev = 6000.673
[info]   CI (99.9%): [644628.792, 690841.699] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   492.191 ±(99.9%) 17.101 MB/sec [Average]
[info]   (min, avg, max) = (484.467, 492.191, 495.503), stdev = 4.441
[info]   CI (99.9%): [475.090, 509.292] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1160.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1160.001, 1160.001, 1160.001), stdev = 0.001
[info]   CI (99.9%): [1160.001, 1160.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   471.284 ±(99.9%) 1057.472 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 471.284, 666.728), stdev = 274.622
[info]   CI (99.9%): [≈ 0, 1528.756] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1106.533 ±(99.9%) 2484.306 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1106.533, 1569.210), stdev = 645.166
[info]   CI (99.9%): [≈ 0, 3590.840] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.481 ±(99.9%) 4.055 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.481, 2.365), stdev = 1.053
[info]   CI (99.9%): [≈ 0, 4.537] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.133 ±(99.9%) 9.548 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.133, 5.568), stdev = 2.480
[info]   CI (99.9%): [≈ 0, 10.681] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.800, 3.000), stdev = 1.304
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 5.42% complete, ETA 02:05:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2022258.971 ops/s
[info] # Warmup Iteration   2: 2181463.360 ops/s
[info] # Warmup Iteration   3: 2183058.937 ops/s
[info] # Warmup Iteration   4: 2187471.946 ops/s
[info] # Warmup Iteration   5: 2153764.343 ops/s
[info] Iteration   1: 2194482.183 ops/s
[info]                  ·gc.alloc.rate:                   1015.053 MB/sec
[info]                  ·gc.alloc.rate.norm:              728.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.623 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     965.086 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.030 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 2198841.861 ops/s
[info]                  ·gc.alloc.rate:               1017.079 MB/sec
[info]                  ·gc.alloc.rate.norm:          728.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.796 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 481.571 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 2194985.669 ops/s
[info]                  ·gc.alloc.rate:                   1015.717 MB/sec
[info]                  ·gc.alloc.rate.norm:              728.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.830 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     965.320 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.060 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 2196328.792 ops/s
[info]                  ·gc.alloc.rate:               1016.287 MB/sec
[info]                  ·gc.alloc.rate.norm:          728.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.700 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 482.594 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 2194532.418 ops/s
[info]                  ·gc.alloc.rate:                   1015.046 MB/sec
[info]                  ·gc.alloc.rate.norm:              728.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.568 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     966.488 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.045 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala":
[info]   2195834.185 ±(99.9%) 7082.788 ops/s [Average]
[info]   (min, avg, max) = (2194482.183, 2195834.185, 2198841.861), stdev = 1839.378
[info]   CI (99.9%): [2188751.397, 2202916.973] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1015.836 ±(99.9%) 3.334 MB/sec [Average]
[info]   (min, avg, max) = (1015.046, 1015.836, 1017.079), stdev = 0.866
[info]   CI (99.9%): [1012.502, 1019.171] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   728.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (728.000, 728.000, 728.000), stdev = 0.001
[info]   CI (99.9%): [728.000, 728.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1077.303 ±(99.9%) 1420.314 MB/sec [Average]
[info]   (min, avg, max) = (672.796, 1077.303, 1347.568), stdev = 368.851
[info]   CI (99.9%): [≈ 0, 2497.617] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   772.212 ±(99.9%) 1019.849 B/op [Average]
[info]   (min, avg, max) = (481.571, 772.212, 966.488), stdev = 264.851
[info]   CI (99.9%): [≈ 0, 1792.060] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.083), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.181] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.027 ±(99.9%) 0.103 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.027, 0.060), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.130] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 5.62% complete, ETA 02:05:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2512854.606 ops/s
[info] # Warmup Iteration   2: 2629722.876 ops/s
[info] # Warmup Iteration   3: 2637221.556 ops/s
[info] # Warmup Iteration   4: 2633031.169 ops/s
[info] # Warmup Iteration   5: 2621047.219 ops/s
[info] Iteration   1: 2644835.557 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 2621258.101 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 2635767.069 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 2635625.958 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 2630182.394 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   2633533.816 ±(99.9%) 33292.989 ops/s [Average]
[info]   (min, avg, max) = (2621258.101, 2633533.816, 2644835.557), stdev = 8646.083
[info]   CI (99.9%): [2600240.827, 2666826.805] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 5.82% complete, ETA 02:04:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 304025.324 ops/s
[info] # Warmup Iteration   2: 377207.917 ops/s
[info] # Warmup Iteration   3: 382902.520 ops/s
[info] # Warmup Iteration   4: 382828.576 ops/s
[info] # Warmup Iteration   5: 382855.431 ops/s
[info] Iteration   1: 383055.068 ops/s
[info]                  ·gc.alloc.rate:                   551.007 MB/sec
[info]                  ·gc.alloc.rate.norm:              2264.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.583 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2102.013 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.043 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 384129.869 ops/s
[info]                  ·gc.alloc.rate:                   552.788 MB/sec
[info]                  ·gc.alloc.rate.norm:              2264.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          670.073 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2744.356 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.991 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.155 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 383640.479 ops/s
[info]                  ·gc.alloc.rate:      551.952 MB/sec
[info]                  ·gc.alloc.rate.norm: 2264.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 394708.629 ops/s
[info]                  ·gc.alloc.rate:                   567.799 MB/sec
[info]                  ·gc.alloc.rate.norm:              2264.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          669.815 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2670.772 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.332 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 388093.298 ops/s
[info]                  ·gc.alloc.rate:               558.262 MB/sec
[info]                  ·gc.alloc.rate.norm:          2264.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      669.471 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2714.999 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson":
[info]   386725.468 ±(99.9%) 18798.079 ops/s [Average]
[info]   (min, avg, max) = (383055.068, 386725.468, 394708.629), stdev = 4881.801
[info]   CI (99.9%): [367927.390, 405523.547] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.alloc.rate":
[info]   556.362 ±(99.9%) 26.908 MB/sec [Average]
[info]   (min, avg, max) = (551.007, 556.362, 567.799), stdev = 6.988
[info]   CI (99.9%): [529.454, 583.269] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   2264.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2264.001, 2264.001, 2264.001), stdev = 0.001
[info]   CI (99.9%): [2264.001, 2264.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   504.188 ±(99.9%) 1116.901 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 504.188, 670.073), stdev = 290.056
[info]   CI (99.9%): [≈ 0, 1621.089] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   2046.428 ±(99.9%) 4521.373 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2046.428, 2744.356), stdev = 1174.186
[info]   CI (99.9%): [≈ 0, 6567.801] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.417 ±(99.9%) 3.391 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.417, 1.991), stdev = 0.881
[info]   CI (99.9%): [≈ 0, 3.808] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.706 ±(99.9%) 13.891 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.706, 8.155), stdev = 3.608
[info]   CI (99.9%): [≈ 0, 15.597] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.600, 3.000), stdev = 1.140
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 6.02% complete, ETA 02:04:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 154100.864 ops/s
[info] # Warmup Iteration   2: 165654.390 ops/s
[info] # Warmup Iteration   3: 166905.513 ops/s
[info] # Warmup Iteration   4: 165682.569 ops/s
[info] # Warmup Iteration   5: 166475.011 ops/s
[info] Iteration   1: 166328.430 ops/s
[info]                  ·gc.alloc.rate:                   973.937 MB/sec
[info]                  ·gc.alloc.rate.norm:              9216.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.927 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12745.464 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.197 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 165169.692 ops/s
[info]                  ·gc.alloc.rate:               967.165 MB/sec
[info]                  ·gc.alloc.rate.norm:          9216.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.457 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6417.288 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 166713.746 ops/s
[info]                  ·gc.alloc.rate:                   976.220 MB/sec
[info]                  ·gc.alloc.rate.norm:              9216.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.608 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12722.094 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.786 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 166648.941 ops/s
[info]                  ·gc.alloc.rate:               975.808 MB/sec
[info]                  ·gc.alloc.rate.norm:          9216.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      674.107 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6366.597 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   5: 166167.800 ops/s
[info]                  ·gc.alloc.rate:               973.042 MB/sec
[info]                  ·gc.alloc.rate.norm:          9216.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      674.426 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6387.717 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeUPickle":
[info]   166205.722 ±(99.9%) 2392.661 ops/s [Average]
[info]   (min, avg, max) = (165169.692, 166205.722, 166713.746), stdev = 621.366
[info]   CI (99.9%): [163813.061, 168598.383] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeUPickle:·gc.alloc.rate":
[info]   973.234 ±(99.9%) 14.004 MB/sec [Average]
[info]   (min, avg, max) = (967.165, 973.234, 976.220), stdev = 3.637
[info]   CI (99.9%): [959.231, 987.238] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeUPickle:·gc.alloc.rate.norm":
[info]   9216.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (9216.003, 9216.003, 9216.003), stdev = 0.001
[info]   CI (99.9%): [9216.003, 9216.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeUPickle:·gc.churn.PS_Eden_Space":
[info]   943.305 ±(99.9%) 1419.985 MB/sec [Average]
[info]   (min, avg, max) = (673.457, 943.305, 1347.608), stdev = 368.766
[info]   CI (99.9%): [≈ 0, 2363.290] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   8927.832 ±(99.9%) 13378.658 B/op [Average]
[info]   (min, avg, max) = (6366.597, 8927.832, 12745.464), stdev = 3474.395
[info]   CI (99.9%): [≈ 0, 22306.490] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.139 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.083), stdev = 0.036
[info]   CI (99.9%): [≈ 0, 0.160] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   0.197 ±(99.9%) 1.311 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.197, 0.786), stdev = 0.340
[info]   CI (99.9%): [≈ 0, 1.507] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeUPickle:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeUPickle:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 0.837
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 6.22% complete, ETA 02:04:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 14738.366 ops/s
[info] # Warmup Iteration   2: 18083.583 ops/s
[info] # Warmup Iteration   3: 17462.897 ops/s
[info] # Warmup Iteration   4: 18088.318 ops/s
[info] # Warmup Iteration   5: 18145.976 ops/s
[info] Iteration   1: 18130.716 ops/s
[info]                  ·gc.alloc.rate:                   1284.218 MB/sec
[info]                  ·gc.alloc.rate.norm:              111448.033 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.677 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     116694.776 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.035 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 17598.314 ops/s
[info]                  ·gc.alloc.rate:                   1246.411 MB/sec
[info]                  ·gc.alloc.rate.norm:              111463.054 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.688 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     120341.090 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.723 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 18160.807 ops/s
[info]                  ·gc.alloc.rate:                   1286.331 MB/sec
[info]                  ·gc.alloc.rate.norm:              111472.024 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.373 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     116675.224 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.608 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 18161.353 ops/s
[info]                  ·gc.alloc.rate:                   1286.365 MB/sec
[info]                  ·gc.alloc.rate.norm:              111472.024 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.667 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     116784.257 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.824 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 18086.745 ops/s
[info]                  ·gc.alloc.rate:               1280.971 MB/sec
[info]                  ·gc.alloc.rate.norm:          111472.024 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1348.838 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 117377.910 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce":
[info]   18027.587 ±(99.9%) 931.449 ops/s [Average]
[info]   (min, avg, max) = (17598.314, 18027.587, 18161.353), stdev = 241.894
[info]   CI (99.9%): [17096.138, 18959.036] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:·gc.alloc.rate":
[info]   1276.859 ±(99.9%) 66.088 MB/sec [Average]
[info]   (min, avg, max) = (1246.411, 1276.859, 1286.365), stdev = 17.163
[info]   CI (99.9%): [1210.772, 1342.947] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   111465.432 ±(99.9%) 40.328 B/op [Average]
[info]   (min, avg, max) = (111448.033, 111465.432, 111472.024), stdev = 10.473
[info]   CI (99.9%): [111425.103, 111505.760] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1346.649 ±(99.9%) 6.304 MB/sec [Average]
[info]   (min, avg, max) = (1344.677, 1346.649, 1348.838), stdev = 1.637
[info]   CI (99.9%): [1340.345, 1352.952] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   117574.651 ±(99.9%) 6057.811 B/op [Average]
[info]   (min, avg, max) = (116675.224, 117574.651, 120341.090), stdev = 1573.194
[info]   CI (99.9%): [111516.840, 123632.463] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.196 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.062, 0.125), stdev = 0.051
[info]   CI (99.9%): [≈ 0, 0.259] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   5.438 ±(99.9%) 16.983 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 5.438, 10.824), stdev = 4.411
[info]   CI (99.9%): [≈ 0, 22.422] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 6.43% complete, ETA 02:04:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 20755.237 ops/s
[info] # Warmup Iteration   2: 31424.278 ops/s
[info] # Warmup Iteration   3: 31903.895 ops/s
[info] # Warmup Iteration   4: 31609.035 ops/s
[info] # Warmup Iteration   5: 32333.584 ops/s
[info] Iteration   1: 32356.028 ops/s
[info]                  ·gc.alloc.rate:                   868.554 MB/sec
[info]                  ·gc.alloc.rate.norm:              42248.013 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.830 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     32484.470 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.025 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 32298.525 ops/s
[info]                  ·gc.alloc.rate:                   867.022 MB/sec
[info]                  ·gc.alloc.rate.norm:              42248.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.283 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     65114.025 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.014 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 32332.112 ops/s
[info]                  ·gc.alloc.rate:               867.916 MB/sec
[info]                  ·gc.alloc.rate.norm:          42248.013 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.148 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 32523.788 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 32328.776 ops/s
[info]                  ·gc.alloc.rate:                   867.841 MB/sec
[info]                  ·gc.alloc.rate.norm:              42248.013 B/op
[info]                  ·gc.churn.PS_Eden_Space:          668.152 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     32526.805 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.054 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 32378.677 ops/s
[info]                  ·gc.alloc.rate:               869.161 MB/sec
[info]                  ·gc.alloc.rate.norm:          42248.013 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1337.643 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 65019.937 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala":
[info]   32338.824 ±(99.9%) 116.387 ops/s [Average]
[info]   (min, avg, max) = (32298.525, 32338.824, 32378.677), stdev = 30.225
[info]   CI (99.9%): [32222.437, 32455.211] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   868.099 ±(99.9%) 3.101 MB/sec [Average]
[info]   (min, avg, max) = (867.022, 868.099, 869.161), stdev = 0.805
[info]   CI (99.9%): [864.998, 871.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   42248.014 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (42248.013, 42248.014, 42248.014), stdev = 0.001
[info]   CI (99.9%): [42248.012, 42248.015] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   935.611 ±(99.9%) 1410.809 MB/sec [Average]
[info]   (min, avg, max) = (667.830, 935.611, 1337.643), stdev = 366.383
[info]   CI (99.9%): [≈ 0, 2346.420] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   45533.805 ±(99.9%) 68662.015 B/op [Average]
[info]   (min, avg, max) = (32484.470, 45533.805, 65114.025), stdev = 17831.307
[info]   CI (99.9%): [≈ 0, 114195.820] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.083), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.419 ±(99.9%) 6.529 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.419, 4.054), stdev = 1.696
[info]   CI (99.9%): [≈ 0, 7.948] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 3.000), stdev = 0.894
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 6.63% complete, ETA 02:04:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 32284.944 ops/s
[info] # Warmup Iteration   2: 35922.474 ops/s
[info] # Warmup Iteration   3: 36015.847 ops/s
[info] # Warmup Iteration   4: 36061.506 ops/s
[info] # Warmup Iteration   5: 34759.629 ops/s
[info] Iteration   1: 35505.279 ops/s
[info]                  ·gc.alloc.rate:               529.110 MB/sec
[info]                  ·gc.alloc.rate.norm:          23448.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.726 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 22677.660 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 35518.806 ops/s
[info]                  ·gc.alloc.rate:                   529.177 MB/sec
[info]                  ·gc.alloc.rate.norm:              23448.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.479 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29842.088 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.595 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 70.665 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 36326.009 ops/s
[info]                  ·gc.alloc.rate:      541.225 MB/sec
[info]                  ·gc.alloc.rate.norm: 23448.012 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 35585.629 ops/s
[info]                  ·gc.alloc.rate:                   530.281 MB/sec
[info]                  ·gc.alloc.rate.norm:              23448.013 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.594 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29785.073 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.683 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 35484.741 ops/s
[info]                  ·gc.alloc.rate:               528.673 MB/sec
[info]                  ·gc.alloc.rate.norm:          23448.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.797 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 29840.291 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala":
[info]   35684.093 ±(99.9%) 1389.419 ops/s [Average]
[info]   (min, avg, max) = (35484.741, 35684.093, 36326.009), stdev = 360.828
[info]   CI (99.9%): [34294.674, 37073.512] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   531.693 ±(99.9%) 20.646 MB/sec [Average]
[info]   (min, avg, max) = (528.673, 531.693, 541.225), stdev = 5.362
[info]   CI (99.9%): [511.047, 552.339] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   23448.012 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (23448.012, 23448.012, 23448.013), stdev = 0.001
[info]   CI (99.9%): [23448.011, 23448.014] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   506.319 ±(99.9%) 1122.690 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 506.319, 673.594), stdev = 291.559
[info]   CI (99.9%): [≈ 0, 1629.009] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   22429.022 ±(99.9%) 49728.304 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 22429.022, 29842.088), stdev = 12914.283
[info]   CI (99.9%): [≈ 0, 72157.327] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.336 ±(99.9%) 2.714 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.336, 1.595), stdev = 0.705
[info]   CI (99.9%): [≈ 0, 3.050] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   14.869 ±(99.9%) 120.260 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 14.869, 70.665), stdev = 31.231
[info]   CI (99.9%): [≈ 0, 135.130] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 3.000), stdev = 1.304
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 6.83% complete, ETA 02:03:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 15995.955 ops/s
[info] # Warmup Iteration   2: 25918.299 ops/s
[info] # Warmup Iteration   3: 26044.757 ops/s
[info] # Warmup Iteration   4: 26052.640 ops/s
[info] # Warmup Iteration   5: 26054.262 ops/s
[info] Iteration   1: 26175.130 ops/s
[info]                  ·gc.alloc.rate:                   1354.720 MB/sec
[info]                  ·gc.alloc.rate.norm:              81456.017 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.632 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     80428.611 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.258 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 25500.609 ops/s
[info]                  ·gc.alloc.rate:                   1319.806 MB/sec
[info]                  ·gc.alloc.rate.norm:              81456.017 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.263 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     82595.145 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.854 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 26203.555 ops/s
[info]                  ·gc.alloc.rate:                   1356.235 MB/sec
[info]                  ·gc.alloc.rate.norm:              81456.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.261 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     80496.582 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.502 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 26167.969 ops/s
[info]                  ·gc.alloc.rate:               1354.872 MB/sec
[info]                  ·gc.alloc.rate.norm:          81456.018 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1342.806 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 80730.576 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 26167.129 ops/s
[info]                  ·gc.alloc.rate:                   1354.338 MB/sec
[info]                  ·gc.alloc.rate.norm:              81456.017 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.275 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     80850.771 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.504 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson":
[info]   26042.878 ±(99.9%) 1168.671 ops/s [Average]
[info]   (min, avg, max) = (25500.609, 26042.878, 26203.555), stdev = 303.500
[info]   CI (99.9%): [24874.207, 27211.550] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1347.994 ±(99.9%) 60.739 MB/sec [Average]
[info]   (min, avg, max) = (1319.806, 1347.994, 1356.235), stdev = 15.774
[info]   CI (99.9%): [1287.255, 1408.734] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   81456.017 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (81456.016, 81456.017, 81456.018), stdev = 0.001
[info]   CI (99.9%): [81456.015, 81456.019] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1340.648 ±(99.9%) 11.017 MB/sec [Average]
[info]   (min, avg, max) = (1337.632, 1340.648, 1344.275), stdev = 2.861
[info]   CI (99.9%): [1329.631, 1351.664] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   81020.337 ±(99.9%) 3453.362 B/op [Average]
[info]   (min, avg, max) = (80428.611, 81020.337, 82595.145), stdev = 896.827
[info]   CI (99.9%): [77566.975, 84473.699] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.191 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.067, 0.125), stdev = 0.050
[info]   CI (99.9%): [≈ 0, 0.258] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   4.024 ±(99.9%) 11.490 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4.024, 7.502), stdev = 2.984
[info]   CI (99.9%): [≈ 0, 15.514] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 7.03% complete, ETA 02:03:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 17405.751 ops/s
[info] # Warmup Iteration   2: 26469.603 ops/s
[info] # Warmup Iteration   3: 27722.700 ops/s
[info] # Warmup Iteration   4: 28041.014 ops/s
[info] # Warmup Iteration   5: 27168.687 ops/s
[info] Iteration   1: 27788.181 ops/s
[info]                  ·gc.alloc.rate:                   1902.112 MB/sec
[info]                  ·gc.alloc.rate.norm:              107728.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2015.509 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     114150.356 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.179 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 27650.417 ops/s
[info]                  ·gc.alloc.rate:                   1893.364 MB/sec
[info]                  ·gc.alloc.rate.norm:              107728.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2019.437 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     114901.272 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.109 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 27707.240 ops/s
[info]                  ·gc.alloc.rate:                   1897.439 MB/sec
[info]                  ·gc.alloc.rate.norm:              107728.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2022.097 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     114805.522 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.362 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 27924.776 ops/s
[info]                  ·gc.alloc.rate:               1911.679 MB/sec
[info]                  ·gc.alloc.rate.norm:          107728.015 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1351.135 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 76139.931 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 27875.559 ops/s
[info]                  ·gc.alloc.rate:                   1908.025 MB/sec
[info]                  ·gc.alloc.rate.norm:              107728.017 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2028.788 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     114546.369 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.175 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce":
[info]   27789.235 ±(99.9%) 438.271 ops/s [Average]
[info]   (min, avg, max) = (27650.417, 27789.235, 27924.776), stdev = 113.818
[info]   CI (99.9%): [27350.964, 28227.506] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1902.524 ±(99.9%) 28.815 MB/sec [Average]
[info]   (min, avg, max) = (1893.364, 1902.524, 1911.679), stdev = 7.483
[info]   CI (99.9%): [1873.709, 1931.340] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   107728.016 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (107728.015, 107728.016, 107728.017), stdev = 0.001
[info]   CI (99.9%): [107728.014, 107728.018] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1887.393 ±(99.9%) 1154.486 MB/sec [Average]
[info]   (min, avg, max) = (1351.135, 1887.393, 2028.788), stdev = 299.816
[info]   CI (99.9%): [732.907, 3041.880] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   106908.690 ±(99.9%) 66241.533 B/op [Average]
[info]   (min, avg, max) = (76139.931, 106908.690, 114901.272), stdev = 17202.716
[info]   CI (99.9%): [40667.157, 173150.223] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.188 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.125), stdev = 0.049
[info]   CI (99.9%): [≈ 0, 0.230] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   2.365 ±(99.9%) 10.706 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.365, 7.109), stdev = 2.780
[info]   CI (99.9%): [≈ 0, 13.071] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 7.23% complete, ETA 02:03:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 13057.000 ops/s
[info] # Warmup Iteration   2: 27712.333 ops/s
[info] # Warmup Iteration   3: 27270.093 ops/s
[info] # Warmup Iteration   4: 27790.916 ops/s
[info] # Warmup Iteration   5: 27800.248 ops/s
[info] Iteration   1: 27962.003 ops/s
[info]                  ·gc.alloc.rate:               1640.174 MB/sec
[info]                  ·gc.alloc.rate.norm:          92312.015 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1334.388 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 75101.828 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 27705.017 ops/s
[info]                  ·gc.alloc.rate:                   1625.090 MB/sec
[info]                  ·gc.alloc.rate.norm:              92312.017 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2006.565 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     113981.411 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.183 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 28112.038 ops/s
[info]                  ·gc.alloc.rate:                   1649.603 MB/sec
[info]                  ·gc.alloc.rate.norm:              92312.015 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.564 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     75018.161 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.165 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 28123.937 ops/s
[info]                  ·gc.alloc.rate:                   1650.239 MB/sec
[info]                  ·gc.alloc.rate.norm:              92312.015 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2014.929 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     112712.228 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.330 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 28308.374 ops/s
[info]                  ·gc.alloc.rate:                   1660.415 MB/sec
[info]                  ·gc.alloc.rate.norm:              92312.015 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.290 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     74848.024 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.315 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala":
[info]   28042.274 ±(99.9%) 866.460 ops/s [Average]
[info]   (min, avg, max) = (27705.017, 28042.274, 28308.374), stdev = 225.017
[info]   CI (99.9%): [27175.813, 28908.734] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1645.104 ±(99.9%) 51.153 MB/sec [Average]
[info]   (min, avg, max) = (1625.090, 1645.104, 1660.415), stdev = 13.284
[info]   CI (99.9%): [1593.951, 1696.257] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   92312.016 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (92312.015, 92312.016, 92312.017), stdev = 0.001
[info]   CI (99.9%): [92312.013, 92312.018] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1608.547 ±(99.9%) 1413.927 MB/sec [Average]
[info]   (min, avg, max) = (1334.388, 1608.547, 2014.929), stdev = 367.192
[info]   CI (99.9%): [194.620, 3022.475] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   90332.330 ±(99.9%) 80918.388 B/op [Average]
[info]   (min, avg, max) = (74848.024, 90332.330, 113981.411), stdev = 21014.248
[info]   CI (99.9%): [9413.943, 171250.718] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.399 ±(99.9%) 3.735 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.399, 2.330), stdev = 0.970
[info]   CI (99.9%): [≈ 0, 5.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 7.43% complete, ETA 02:03:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 24854.331 ops/s
[info] # Warmup Iteration   2: 30662.626 ops/s
[info] # Warmup Iteration   3: 30773.253 ops/s
[info] # Warmup Iteration   4: 30781.136 ops/s
[info] # Warmup Iteration   5: 30929.562 ops/s
[info] Iteration   1: 29742.627 ops/s
[info]                  ·gc.alloc.rate:                   1650.610 MB/sec
[info]                  ·gc.alloc.rate.norm:              87328.015 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2021.452 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     106947.914 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.406 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 30847.055 ops/s
[info]                  ·gc.alloc.rate:                   1712.054 MB/sec
[info]                  ·gc.alloc.rate.norm:              87328.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.291 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     68824.271 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.186 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 30909.199 ops/s
[info]                  ·gc.alloc.rate:                   1715.488 MB/sec
[info]                  ·gc.alloc.rate.norm:              87328.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2026.659 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     103168.373 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.060 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 31008.175 ops/s
[info]                  ·gc.alloc.rate:                   1720.756 MB/sec
[info]                  ·gc.alloc.rate.norm:              87328.015 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.484 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     68638.246 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.113 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 30295.282 ops/s
[info]                  ·gc.alloc.rate:                   1681.713 MB/sec
[info]                  ·gc.alloc.rate.norm:              87328.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2031.550 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     105494.338 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.244 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala":
[info]   30560.467 ±(99.9%) 2058.721 ops/s [Average]
[info]   (min, avg, max) = (29742.627, 30560.467, 31008.175), stdev = 534.643
[info]   CI (99.9%): [28501.747, 32619.188] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1696.124 ±(99.9%) 114.142 MB/sec [Average]
[info]   (min, avg, max) = (1650.610, 1696.124, 1720.756), stdev = 29.642
[info]   CI (99.9%): [1581.983, 1810.266] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   87328.014 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (87328.014, 87328.014, 87328.015), stdev = 0.001
[info]   CI (99.9%): [87328.013, 87328.016] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1756.287 ±(99.9%) 1425.110 MB/sec [Average]
[info]   (min, avg, max) = (1349.291, 1756.287, 2031.550), stdev = 370.097
[info]   CI (99.9%): [331.177, 3181.397] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   90614.628 ±(99.9%) 77098.497 B/op [Average]
[info]   (min, avg, max) = (68638.246, 90614.628, 106947.914), stdev = 20022.235
[info]   CI (99.9%): [13516.132, 167713.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.802 ±(99.9%) 4.881 B/op [Average]
[info]   (min, avg, max) = (1.060, 2.802, 4.406), stdev = 1.267
[info]   CI (99.9%): [≈ 0, 7.683] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 7.63% complete, ETA 02:02:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 26139.414 ops/s
[info] # Warmup Iteration   2: 31888.549 ops/s
[info] # Warmup Iteration   3: 32280.101 ops/s
[info] # Warmup Iteration   4: 32226.305 ops/s
[info] # Warmup Iteration   5: 32466.048 ops/s
[info] Iteration   1: 30722.412 ops/s
[info]                  ·gc.alloc.rate:                   1645.346 MB/sec
[info]                  ·gc.alloc.rate.norm:              84272.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2021.413 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     103533.571 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.133 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 32412.279 ops/s
[info]                  ·gc.alloc.rate:                   1735.798 MB/sec
[info]                  ·gc.alloc.rate.norm:              84272.013 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.132 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     65499.611 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.022 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 31755.813 ops/s
[info]                  ·gc.alloc.rate:                   1700.352 MB/sec
[info]                  ·gc.alloc.rate.norm:              84272.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2026.045 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     100413.838 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.190 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 32337.258 ops/s
[info]                  ·gc.alloc.rate:                   1731.524 MB/sec
[info]                  ·gc.alloc.rate.norm:              84272.013 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2028.726 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     98736.611 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.053 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 32393.331 ops/s
[info]                  ·gc.alloc.rate:                   1734.800 MB/sec
[info]                  ·gc.alloc.rate.norm:              84272.013 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1354.435 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     65794.908 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.011 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc":
[info]   31924.219 ±(99.9%) 2791.100 ops/s [Average]
[info]   (min, avg, max) = (30722.412, 31924.219, 32412.279), stdev = 724.840
[info]   CI (99.9%): [29133.118, 34715.319] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   1709.564 ±(99.9%) 149.335 MB/sec [Average]
[info]   (min, avg, max) = (1645.346, 1709.564, 1735.798), stdev = 38.782
[info]   CI (99.9%): [1560.229, 1858.899] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   84272.014 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (84272.013, 84272.014, 84272.014), stdev = 0.001
[info]   CI (99.9%): [84272.012, 84272.015] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   1755.950 ±(99.9%) 1420.757 MB/sec [Average]
[info]   (min, avg, max) = (1349.132, 1755.950, 2028.726), stdev = 368.966
[info]   CI (99.9%): [335.194, 3176.707] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   86795.708 ±(99.9%) 74635.772 B/op [Average]
[info]   (min, avg, max) = (65499.611, 86795.708, 103533.571), stdev = 19382.673
[info]   CI (99.9%): [12159.936, 161431.480] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.160 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.062, 0.125), stdev = 0.042
[info]   CI (99.9%): [≈ 0, 0.223] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   3.082 ±(99.9%) 7.919 B/op [Average]
[info]   (min, avg, max) = (1.011, 3.082, 6.190), stdev = 2.056
[info]   CI (99.9%): [≈ 0, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 7.83% complete, ETA 02:02:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5349.017 ops/s
[info] # Warmup Iteration   2: 8216.297 ops/s
[info] # Warmup Iteration   3: 8400.507 ops/s
[info] # Warmup Iteration   4: 8549.510 ops/s
[info] # Warmup Iteration   5: 8562.980 ops/s
[info] Iteration   1: 8536.836 ops/s
[info]                  ·gc.alloc.rate:                   1207.202 MB/sec
[info]                  ·gc.alloc.rate.norm:              222544.051 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.915 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     246824.893 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.675 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 8414.772 ops/s
[info]                  ·gc.alloc.rate:                   1189.994 MB/sec
[info]                  ·gc.alloc.rate.norm:              222544.055 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.625 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     250527.069 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11.679 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 8412.614 ops/s
[info]                  ·gc.alloc.rate:                   1190.104 MB/sec
[info]                  ·gc.alloc.rate.norm:              222544.051 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.734 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     250898.131 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19.470 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 8531.969 ops/s
[info]                  ·gc.alloc.rate:               1206.497 MB/sec
[info]                  ·gc.alloc.rate.norm:          222544.051 B/op
[info]                  ·gc.churn.PS_Eden_Space:      671.123 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 123791.929 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 8396.173 ops/s
[info]                  ·gc.alloc.rate:                   1187.264 MB/sec
[info]                  ·gc.alloc.rate.norm:              222544.051 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.572 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     251843.033 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.902 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson":
[info]   8458.473 ±(99.9%) 268.420 ops/s [Average]
[info]   (min, avg, max) = (8396.173, 8458.473, 8536.836), stdev = 69.708
[info]   CI (99.9%): [8190.053, 8726.892] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1196.212 ±(99.9%) 37.660 MB/sec [Average]
[info]   (min, avg, max) = (1187.264, 1196.212, 1207.202), stdev = 9.780
[info]   CI (99.9%): [1158.552, 1233.872] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   222544.052 ±(99.9%) 0.007 B/op [Average]
[info]   (min, avg, max) = (222544.051, 222544.052, 222544.055), stdev = 0.002
[info]   CI (99.9%): [222544.045, 222544.059] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1206.994 ±(99.9%) 1153.523 MB/sec [Average]
[info]   (min, avg, max) = (671.123, 1206.994, 1343.572), stdev = 299.566
[info]   CI (99.9%): [53.471, 2360.517] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   224777.011 ±(99.9%) 217502.114 B/op [Average]
[info]   (min, avg, max) = (123791.929, 224777.011, 251843.033), stdev = 56484.608
[info]   CI (99.9%): [7274.897, 442279.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.154 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.104), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   8.545 ±(99.9%) 28.848 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 8.545, 19.470), stdev = 7.492
[info]   CI (99.9%): [≈ 0, 37.394] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 8.03% complete, ETA 02:02:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 12958.146 ops/s
[info] # Warmup Iteration   2: 17420.111 ops/s
[info] # Warmup Iteration   3: 17474.375 ops/s
[info] # Warmup Iteration   4: 17518.128 ops/s
[info] # Warmup Iteration   5: 17598.929 ops/s
[info] Iteration   1: 17629.193 ops/s
[info]                  ·gc.alloc.rate:                   1520.633 MB/sec
[info]                  ·gc.alloc.rate.norm:              135760.025 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.557 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     120129.510 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.717 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 17696.721 ops/s
[info]                  ·gc.alloc.rate:               1526.558 MB/sec
[info]                  ·gc.alloc.rate.norm:          135760.033 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1346.276 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 119727.237 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 17764.574 ops/s
[info]                  ·gc.alloc.rate:                   1532.423 MB/sec
[info]                  ·gc.alloc.rate.norm:              135760.024 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2022.080 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     179139.602 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.533 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 17809.684 ops/s
[info]                  ·gc.alloc.rate:                   1536.295 MB/sec
[info]                  ·gc.alloc.rate.norm:              135760.026 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.600 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     119262.054 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.358 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 17804.813 ops/s
[info]                  ·gc.alloc.rate:               1536.034 MB/sec
[info]                  ·gc.alloc.rate.norm:          135760.026 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1351.339 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 119436.039 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce":
[info]   17740.997 ±(99.9%) 297.067 ops/s [Average]
[info]   (min, avg, max) = (17629.193, 17740.997, 17809.684), stdev = 77.147
[info]   CI (99.9%): [17443.930, 18038.064] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:·gc.alloc.rate":
[info]   1530.388 ±(99.9%) 25.885 MB/sec [Average]
[info]   (min, avg, max) = (1520.633, 1530.388, 1536.295), stdev = 6.722
[info]   CI (99.9%): [1504.504, 1556.273] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   135760.027 ±(99.9%) 0.015 B/op [Average]
[info]   (min, avg, max) = (135760.024, 135760.027, 135760.033), stdev = 0.004
[info]   CI (99.9%): [135760.012, 135760.041] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1482.970 ±(99.9%) 1160.510 MB/sec [Average]
[info]   (min, avg, max) = (1345.557, 1482.970, 2022.080), stdev = 301.381
[info]   CI (99.9%): [322.461, 2643.480] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   131538.888 ±(99.9%) 102471.933 B/op [Average]
[info]   (min, avg, max) = (119262.054, 131538.888, 179139.602), stdev = 26611.635
[info]   CI (99.9%): [29066.956, 234010.821] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.083), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.181] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   3.322 ±(99.9%) 12.685 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.322, 7.358), stdev = 3.294
[info]   CI (99.9%): [≈ 0, 16.006] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 8.23% complete, ETA 02:02:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 29266.619 ops/s
[info] # Warmup Iteration   2: 41440.699 ops/s
[info] # Warmup Iteration   3: 41886.518 ops/s
[info] # Warmup Iteration   4: 42344.846 ops/s
[info] # Warmup Iteration   5: 42380.473 ops/s
[info] Iteration   1: 41032.858 ops/s
[info]                  ·gc.alloc.rate:                   1132.868 MB/sec
[info]                  ·gc.alloc.rate.norm:              43448.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.422 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     51254.744 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.194 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 41777.236 ops/s
[info]                  ·gc.alloc.rate:                   1153.364 MB/sec
[info]                  ·gc.alloc.rate.norm:              43448.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.039 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     50367.184 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.705 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 42023.274 ops/s
[info]                  ·gc.alloc.rate:               1160.132 MB/sec
[info]                  ·gc.alloc.rate.norm:          43448.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.840 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 25048.664 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 41454.170 ops/s
[info]                  ·gc.alloc.rate:                   1144.400 MB/sec
[info]                  ·gc.alloc.rate.norm:              43448.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.615 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     50859.515 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.581 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 42189.418 ops/s
[info]                  ·gc.alloc.rate:               1164.645 MB/sec
[info]                  ·gc.alloc.rate.norm:          43448.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1340.900 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 50023.308 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala":
[info]   41695.391 ±(99.9%) 1780.695 ops/s [Average]
[info]   (min, avg, max) = (41032.858, 41695.391, 42189.418), stdev = 462.441
[info]   CI (99.9%): [39914.696, 43476.086] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1151.082 ±(99.9%) 48.990 MB/sec [Average]
[info]   (min, avg, max) = (1132.868, 1151.082, 1164.645), stdev = 12.723
[info]   CI (99.9%): [1102.092, 1200.072] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   43448.011 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (43448.010, 43448.011, 43448.011), stdev = 0.001
[info]   CI (99.9%): [43448.009, 43448.012] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1204.563 ±(99.9%) 1153.207 MB/sec [Average]
[info]   (min, avg, max) = (668.840, 1204.563, 1340.900), stdev = 299.484
[info]   CI (99.9%): [51.356, 2357.770] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   45510.683 ±(99.9%) 44083.056 B/op [Average]
[info]   (min, avg, max) = (25048.664, 45510.683, 51254.744), stdev = 11448.230
[info]   CI (99.9%): [1427.627, 89593.738] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.209 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.125), stdev = 0.054
[info]   CI (99.9%): [≈ 0, 0.259] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.896 ±(99.9%) 7.907 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.896, 4.705), stdev = 2.053
[info]   CI (99.9%): [≈ 0, 9.803] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 8.43% complete, ETA 02:01:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 56935.937 ops/s
[info] # Warmup Iteration   2: 60866.948 ops/s
[info] # Warmup Iteration   3: 61612.490 ops/s
[info] # Warmup Iteration   4: 61588.815 ops/s
[info] # Warmup Iteration   5: 61812.261 ops/s
[info] Iteration   1: 61850.434 ops/s
[info]                  ·gc.alloc.rate:                   799.168 MB/sec
[info]                  ·gc.alloc.rate.norm:              20336.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.474 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17137.528 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.589 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 61909.269 ops/s
[info]                  ·gc.alloc.rate:               800.007 MB/sec
[info]                  ·gc.alloc.rate.norm:          20336.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.861 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 17103.987 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   3: 61112.615 ops/s
[info]                  ·gc.alloc.rate:               789.813 MB/sec
[info]                  ·gc.alloc.rate.norm:          20336.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.960 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 17327.298 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 61767.290 ops/s
[info]                  ·gc.alloc.rate:                   798.110 MB/sec
[info]                  ·gc.alloc.rate.norm:              20336.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.283 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     34303.577 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.183 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 61888.132 ops/s
[info]                  ·gc.alloc.rate:               800.011 MB/sec
[info]                  ·gc.alloc.rate.norm:          20336.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.760 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 17126.730 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala":
[info]   61705.548 ±(99.9%) 1293.284 ops/s [Average]
[info]   (min, avg, max) = (61112.615, 61705.548, 61909.269), stdev = 335.862
[info]   CI (99.9%): [60412.264, 62998.832] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   797.422 ±(99.9%) 16.653 MB/sec [Average]
[info]   (min, avg, max) = (789.813, 797.422, 800.011), stdev = 4.325
[info]   CI (99.9%): [780.769, 814.074] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   20336.007 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (20336.007, 20336.007, 20336.007), stdev = 0.001
[info]   CI (99.9%): [20336.006, 20336.008] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   807.867 ±(99.9%) 1158.980 MB/sec [Average]
[info]   (min, avg, max) = (672.861, 807.867, 1346.283), stdev = 300.984
[info]   CI (99.9%): [≈ 0, 1966.848] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   20599.824 ±(99.9%) 29500.371 B/op [Average]
[info]   (min, avg, max) = (17103.987, 20599.824, 34303.577), stdev = 7661.153
[info]   CI (99.9%): [≈ 0, 50100.195] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.215 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.125), stdev = 0.056
[info]   CI (99.9%): [≈ 0, 0.253] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.954 ±(99.9%) 5.480 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.954, 3.183), stdev = 1.423
[info]   CI (99.9%): [≈ 0, 6.434] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 0.707
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 8.63% complete, ETA 02:01:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 14325.364 ops/s
[info] # Warmup Iteration   2: 30938.146 ops/s
[info] # Warmup Iteration   3: 31662.280 ops/s
[info] # Warmup Iteration   4: 31505.119 ops/s
[info] # Warmup Iteration   5: 31248.125 ops/s
[info] Iteration   1: 31787.766 ops/s
[info]                  ·gc.alloc.rate:                   2156.239 MB/sec
[info]                  ·gc.alloc.rate.norm:              106760.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2678.495 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     132618.001 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.184 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 31908.059 ops/s
[info]                  ·gc.alloc.rate:                   2165.342 MB/sec
[info]                  ·gc.alloc.rate.norm:              106760.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2014.868 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     99341.027 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.107 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 31949.979 ops/s
[info]                  ·gc.alloc.rate:                   2167.224 MB/sec
[info]                  ·gc.alloc.rate.norm:              106760.015 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2020.422 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     99528.416 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.076 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 31738.599 ops/s
[info]                  ·gc.alloc.rate:                   2152.859 MB/sec
[info]                  ·gc.alloc.rate.norm:              106760.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2024.241 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     100381.870 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.064 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 31968.905 ops/s
[info]                  ·gc.alloc.rate:                   2168.507 MB/sec
[info]                  ·gc.alloc.rate.norm:              106760.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2028.014 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     99843.299 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.050 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson":
[info]   31870.662 ±(99.9%) 392.944 ops/s [Average]
[info]   (min, avg, max) = (31738.599, 31870.662, 31968.905), stdev = 102.046
[info]   CI (99.9%): [31477.718, 32263.605] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2162.034 ±(99.9%) 27.059 MB/sec [Average]
[info]   (min, avg, max) = (2152.859, 2162.034, 2168.507), stdev = 7.027
[info]   CI (99.9%): [2134.975, 2189.093] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   106760.014 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (106760.014, 106760.014, 106760.015), stdev = 0.001
[info]   CI (99.9%): [106760.012, 106760.015] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2153.208 ±(99.9%) 1130.874 MB/sec [Average]
[info]   (min, avg, max) = (2014.868, 2153.208, 2678.495), stdev = 293.684
[info]   CI (99.9%): [1022.334, 3284.082] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   106342.523 ±(99.9%) 56580.329 B/op [Average]
[info]   (min, avg, max) = (99341.027, 106342.523, 132618.001), stdev = 14693.732
[info]   CI (99.9%): [49762.193, 162922.852] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.071 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.071, 0.125), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.205] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   3.496 ±(99.9%) 6.646 B/op [Average]
[info]   (min, avg, max) = (2.050, 3.496, 6.184), stdev = 1.726
[info]   CI (99.9%): [≈ 0, 10.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 8.84% complete, ETA 02:01:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 16858.853 ops/s
[info] # Warmup Iteration   2: 28881.687 ops/s
[info] # Warmup Iteration   3: 28979.180 ops/s
[info] # Warmup Iteration   4: 28942.811 ops/s
[info] # Warmup Iteration   5: 28998.614 ops/s
[info] Iteration   1: 29012.073 ops/s
[info]                  ·gc.alloc.rate:                   1747.698 MB/sec
[info]                  ·gc.alloc.rate.norm:              94808.015 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2005.430 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     108789.263 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.388 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 29045.356 ops/s
[info]                  ·gc.alloc.rate:                   1749.698 MB/sec
[info]                  ·gc.alloc.rate.norm:              94808.015 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.581 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     72585.671 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.896 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 29029.246 ops/s
[info]                  ·gc.alloc.rate:                   1748.702 MB/sec
[info]                  ·gc.alloc.rate.norm:              94808.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2014.732 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     109231.181 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.643 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 29042.095 ops/s
[info]                  ·gc.alloc.rate:                   1749.510 MB/sec
[info]                  ·gc.alloc.rate.norm:              94808.015 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.616 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     72920.560 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.256 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 29084.224 ops/s
[info]                  ·gc.alloc.rate:                   1751.987 MB/sec
[info]                  ·gc.alloc.rate.norm:              94808.015 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2022.028 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     109421.171 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.253 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala":
[info]   29042.599 ±(99.9%) 102.796 ops/s [Average]
[info]   (min, avg, max) = (29012.073, 29042.599, 29084.224), stdev = 26.696
[info]   CI (99.9%): [28939.803, 29145.394] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1749.519 ±(99.9%) 6.120 MB/sec [Average]
[info]   (min, avg, max) = (1747.698, 1749.519, 1751.987), stdev = 1.589
[info]   CI (99.9%): [1743.399, 1755.639] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   94808.015 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (94808.015, 94808.015, 94808.016), stdev = 0.001
[info]   CI (99.9%): [94808.013, 94808.017] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1745.477 ±(99.9%) 1416.381 MB/sec [Average]
[info]   (min, avg, max) = (1339.581, 1745.477, 2022.028), stdev = 367.830
[info]   CI (99.9%): [329.097, 3161.858] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   94589.569 ±(99.9%) 76764.641 B/op [Average]
[info]   (min, avg, max) = (72585.671, 94589.569, 109421.171), stdev = 19935.534
[info]   CI (99.9%): [17824.928, 171354.211] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.079 ±(99.9%) 0.174 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.079, 0.146), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.253] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   4.287 ±(99.9%) 9.419 B/op [Average]
[info]   (min, avg, max) = (2.253, 4.287, 7.896), stdev = 2.446
[info]   CI (99.9%): [≈ 0, 13.706] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 9.04% complete, ETA 02:01:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 34524.027 ops/s
[info] # Warmup Iteration   2: 37136.046 ops/s
[info] # Warmup Iteration   3: 37978.078 ops/s
[info] # Warmup Iteration   4: 37266.009 ops/s
[info] # Warmup Iteration   5: 37921.438 ops/s
[info] Iteration   1: 37333.751 ops/s
[info]                  ·gc.alloc.rate:               1599.577 MB/sec
[info]                  ·gc.alloc.rate.norm:          67408.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1347.745 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 56795.527 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 37964.205 ops/s
[info]                  ·gc.alloc.rate:                   1625.962 MB/sec
[info]                  ·gc.alloc.rate.norm:              67408.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2022.700 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     83855.703 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.315 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 38158.019 ops/s
[info]                  ·gc.alloc.rate:                   1634.266 MB/sec
[info]                  ·gc.alloc.rate.norm:              67408.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.240 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     55692.893 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.717 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 37679.539 ops/s
[info]                  ·gc.alloc.rate:                   1613.826 MB/sec
[info]                  ·gc.alloc.rate.norm:              67408.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1351.632 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     56456.434 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.739 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 37643.339 ops/s
[info]                  ·gc.alloc.rate:                   1612.245 MB/sec
[info]                  ·gc.alloc.rate.norm:              67408.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2030.064 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     84877.032 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.481 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala":
[info]   37755.771 ±(99.9%) 1220.419 ops/s [Average]
[info]   (min, avg, max) = (37333.751, 37755.771, 38158.019), stdev = 316.939
[info]   CI (99.9%): [36535.351, 38976.190] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1617.175 ±(99.9%) 51.465 MB/sec [Average]
[info]   (min, avg, max) = (1599.577, 1617.175, 1634.266), stdev = 13.365
[info]   CI (99.9%): [1565.710, 1668.640] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   67408.012 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (67408.011, 67408.012, 67408.012), stdev = 0.001
[info]   CI (99.9%): [67408.010, 67408.013] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1620.476 ±(99.9%) 1426.862 MB/sec [Average]
[info]   (min, avg, max) = (1347.745, 1620.476, 2030.064), stdev = 370.552
[info]   CI (99.9%): [193.614, 3047.338] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   67535.517 ±(99.9%) 59199.121 B/op [Average]
[info]   (min, avg, max) = (55692.893, 67535.517, 84877.032), stdev = 15373.824
[info]   CI (99.9%): [8336.397, 126734.638] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.156 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.104), stdev = 0.041
[info]   CI (99.9%): [≈ 0, 0.210] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.251 ±(99.9%) 6.497 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.251, 4.315), stdev = 1.687
[info]   CI (99.9%): [≈ 0, 8.748] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 3.000), stdev = 1.000
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 9.24% complete, ETA 02:00:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 34125.483 ops/s
[info] # Warmup Iteration   2: 37478.251 ops/s
[info] # Warmup Iteration   3: 37646.261 ops/s
[info] # Warmup Iteration   4: 37608.470 ops/s
[info] # Warmup Iteration   5: 37419.287 ops/s
[info] Iteration   1: 36746.992 ops/s
[info]                  ·gc.alloc.rate:                   1629.304 MB/sec
[info]                  ·gc.alloc.rate.norm:              69784.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2021.678 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     86589.616 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.783 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 37734.804 ops/s
[info]                  ·gc.alloc.rate:                   1673.119 MB/sec
[info]                  ·gc.alloc.rate.norm:              69784.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.908 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     56261.530 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.341 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 37719.490 ops/s
[info]                  ·gc.alloc.rate:                   1672.463 MB/sec
[info]                  ·gc.alloc.rate.norm:              69784.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2026.091 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     84539.268 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.606 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 37263.659 ops/s
[info]                  ·gc.alloc.rate:               1652.344 MB/sec
[info]                  ·gc.alloc.rate.norm:          69784.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1352.361 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 57114.741 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 37705.769 ops/s
[info]                  ·gc.alloc.rate:                   1672.610 MB/sec
[info]                  ·gc.alloc.rate.norm:              69784.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2030.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     84700.157 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.605 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc":
[info]   37434.143 ±(99.9%) 1663.864 ops/s [Average]
[info]   (min, avg, max) = (36746.992, 37434.143, 37734.804), stdev = 432.100
[info]   CI (99.9%): [35770.279, 39098.007] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   1659.968 ±(99.9%) 74.251 MB/sec [Average]
[info]   (min, avg, max) = (1629.304, 1659.968, 1673.119), stdev = 19.283
[info]   CI (99.9%): [1585.717, 1734.219] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   69784.012 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (69784.011, 69784.012, 69784.012), stdev = 0.001
[info]   CI (99.9%): [69784.011, 69784.012] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   1755.833 ±(99.9%) 1424.382 MB/sec [Average]
[info]   (min, avg, max) = (1348.908, 1755.833, 2030.125), stdev = 369.908
[info]   CI (99.9%): [331.450, 3180.215] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   73841.063 ±(99.9%) 60385.997 B/op [Average]
[info]   (min, avg, max) = (56261.530, 73841.063, 86589.616), stdev = 15682.052
[info]   CI (99.9%): [13455.066, 134227.059] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.146 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.104), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   2.267 ±(99.9%) 6.059 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.267, 4.341), stdev = 1.574
[info]   CI (99.9%): [≈ 0, 8.326] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.200, 3.000), stdev = 0.837
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 9.44% complete, ETA 02:00:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 272417.895 ops/s
[info] # Warmup Iteration   2: 321406.727 ops/s
[info] # Warmup Iteration   3: 331110.413 ops/s
[info] # Warmup Iteration   4: 328371.394 ops/s
[info] # Warmup Iteration   5: 327835.344 ops/s
[info] Iteration   1: 326122.857 ops/s
[info]                  ·gc.alloc.rate:                   1803.524 MB/sec
[info]                  ·gc.alloc.rate.norm:              8704.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2021.013 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9753.627 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.100 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 332655.452 ops/s
[info]                  ·gc.alloc.rate:                   1840.174 MB/sec
[info]                  ·gc.alloc.rate.norm:              8704.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.291 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6382.130 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.492 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 329795.969 ops/s
[info]                  ·gc.alloc.rate:                   1823.873 MB/sec
[info]                  ·gc.alloc.rate.norm:              8704.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2025.782 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9667.562 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.298 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 332610.789 ops/s
[info]                  ·gc.alloc.rate:                   1840.313 MB/sec
[info]                  ·gc.alloc.rate.norm:              8704.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2030.040 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9601.340 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.197 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 332725.541 ops/s
[info]                  ·gc.alloc.rate:                   1840.179 MB/sec
[info]                  ·gc.alloc.rate.norm:              8704.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2031.916 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9610.915 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.394 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce":
[info]   330782.122 ±(99.9%) 11112.212 ops/s [Average]
[info]   (min, avg, max) = (326122.857, 330782.122, 332725.541), stdev = 2885.806
[info]   CI (99.9%): [319669.909, 341894.334] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:·gc.alloc.rate":
[info]   1829.612 ±(99.9%) 62.424 MB/sec [Average]
[info]   (min, avg, max) = (1803.524, 1829.612, 1840.313), stdev = 16.211
[info]   CI (99.9%): [1767.189, 1892.036] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   8704.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8704.001, 8704.001, 8704.001), stdev = 0.001
[info]   CI (99.9%): [8704.001, 8704.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1891.608 ±(99.9%) 1167.492 MB/sec [Average]
[info]   (min, avg, max) = (1349.291, 1891.608, 2031.916), stdev = 303.194
[info]   CI (99.9%): [724.116, 3059.100] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   9003.115 ±(99.9%) 5646.683 B/op [Average]
[info]   (min, avg, max) = (6382.130, 9003.115, 9753.627), stdev = 1466.426
[info]   CI (99.9%): [3356.432, 14649.798] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.127 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.062, 0.104), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.296 ±(99.9%) 0.597 B/op [Average]
[info]   (min, avg, max) = (0.100, 0.296, 0.492), stdev = 0.155
[info]   CI (99.9%): [≈ 0, 0.894] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 9.64% complete, ETA 02:00:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 42251.465 ops/s
[info] # Warmup Iteration   2: 1302748.429 ops/s
[info] # Warmup Iteration   3: 1310971.239 ops/s
[info] # Warmup Iteration   4: 1313952.363 ops/s
[info] # Warmup Iteration   5: 1311522.145 ops/s
[info] Iteration   1: 1313577.205 ops/s
[info]                  ·gc.alloc.rate:               413.957 MB/sec
[info]                  ·gc.alloc.rate.norm:          496.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.595 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 612.990 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 1316268.365 ops/s
[info]                  ·gc.alloc.rate:                   414.813 MB/sec
[info]                  ·gc.alloc.rate.norm:              496.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.585 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     611.713 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.033 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 1353851.741 ops/s
[info]                  ·gc.alloc.rate:      426.661 MB/sec
[info]                  ·gc.alloc.rate.norm: 496.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1349078.127 ops/s
[info]                  ·gc.alloc.rate:               425.116 MB/sec
[info]                  ·gc.alloc.rate.norm:          496.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      663.743 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 774.416 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 1352588.414 ops/s
[info]                  ·gc.alloc.rate:      426.219 MB/sec
[info]                  ·gc.alloc.rate.norm: 496.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava":
[info]   1337072.770 ±(99.9%) 78236.864 ops/s [Average]
[info]   (min, avg, max) = (1313577.205, 1337072.770, 1353851.741), stdev = 20317.865
[info]   CI (99.9%): [1258835.907, 1415309.634] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   421.353 ±(99.9%) 24.617 MB/sec [Average]
[info]   (min, avg, max) = (413.957, 421.353, 426.661), stdev = 6.393
[info]   CI (99.9%): [396.736, 445.971] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   496.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (496.000, 496.000, 496.000), stdev = 0.001
[info]   CI (99.9%): [496.000, 496.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   337.385 ±(99.9%) 1209.834 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 337.385, 663.743), stdev = 314.190
[info]   CI (99.9%): [≈ 0, 1547.219] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   399.824 ±(99.9%) 1428.343 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 399.824, 774.416), stdev = 370.936
[info]   CI (99.9%): [≈ 0, 1828.167] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.007 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.007, 0.033), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.064] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.008 ±(99.9%) 0.068 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.040), stdev = 0.018
[info]   CI (99.9%): [≈ 0, 0.076] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 1.095
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 9.84% complete, ETA 01:59:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 470175.401 ops/s
[info] # Warmup Iteration   2: 681210.415 ops/s
[info] # Warmup Iteration   3: 680585.968 ops/s
[info] # Warmup Iteration   4: 686239.837 ops/s
[info] # Warmup Iteration   5: 687306.417 ops/s
[info] Iteration   1: 685400.074 ops/s
[info]                  ·gc.alloc.rate:               567.857 MB/sec
[info]                  ·gc.alloc.rate.norm:          1304.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.580 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1174.769 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 686330.748 ops/s
[info]                  ·gc.alloc.rate:                   568.652 MB/sec
[info]                  ·gc.alloc.rate.norm:              1304.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.814 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1531.393 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.094 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.803 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 676682.585 ops/s
[info]                  ·gc.alloc.rate:                   560.784 MB/sec
[info]                  ·gc.alloc.rate.norm:              1304.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.946 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1553.185 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.097 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 690590.705 ops/s
[info]                  ·gc.alloc.rate:      572.160 MB/sec
[info]                  ·gc.alloc.rate.norm: 1304.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 688028.442 ops/s
[info]                  ·gc.alloc.rate:                   570.028 MB/sec
[info]                  ·gc.alloc.rate.norm:              1304.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          668.113 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1528.381 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.095 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala":
[info]   685406.511 ±(99.9%) 20258.151 ops/s [Average]
[info]   (min, avg, max) = (676682.585, 685406.511, 690590.705), stdev = 5260.978
[info]   CI (99.9%): [665148.360, 705664.662] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   567.896 ±(99.9%) 16.548 MB/sec [Average]
[info]   (min, avg, max) = (560.784, 567.896, 572.160), stdev = 4.298
[info]   CI (99.9%): [551.348, 584.445] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   1304.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1304.001, 1304.001, 1304.001), stdev = 0.001
[info]   CI (99.9%): [1304.001, 1304.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   503.091 ±(99.9%) 1113.888 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 503.091, 668.113), stdev = 289.273
[info]   CI (99.9%): [≈ 0, 1616.978] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1157.546 ±(99.9%) 2564.382 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1157.546, 1553.185), stdev = 665.962
[info]   CI (99.9%): [≈ 0, 3721.927] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.436 ±(99.9%) 3.572 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.436, 2.094), stdev = 0.928
[info]   CI (99.9%): [≈ 0, 4.007] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.999 ±(99.9%) 8.190 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.999, 4.803), stdev = 2.127
[info]   CI (99.9%): [≈ 0, 9.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 3.000), stdev = 1.140
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 10.04% complete, ETA 01:59:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1656587.028 ops/s
[info] # Warmup Iteration   2: 1726698.745 ops/s
[info] # Warmup Iteration   3: 1752601.536 ops/s
[info] # Warmup Iteration   4: 1757289.527 ops/s
[info] # Warmup Iteration   5: 1747530.835 ops/s
[info] Iteration   1: 1747464.252 ops/s
[info]                  ·gc.alloc.rate:               337.532 MB/sec
[info]                  ·gc.alloc.rate.norm:          304.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.616 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 460.791 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 1751290.851 ops/s
[info]                  ·gc.alloc.rate:      338.271 MB/sec
[info]                  ·gc.alloc.rate.norm: 304.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1747086.864 ops/s
[info]                  ·gc.alloc.rate:               337.463 MB/sec
[info]                  ·gc.alloc.rate.norm:          304.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.609 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 460.877 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 1746132.980 ops/s
[info]                  ·gc.alloc.rate:                   337.276 MB/sec
[info]                  ·gc.alloc.rate.norm:              304.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.600 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     461.126 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.005 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.004 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 1749516.064 ops/s
[info]                  ·gc.alloc.rate:      337.990 MB/sec
[info]                  ·gc.alloc.rate.norm: 304.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala":
[info]   1748298.202 ±(99.9%) 8005.759 ops/s [Average]
[info]   (min, avg, max) = (1746132.980, 1748298.202, 1751290.851), stdev = 2079.070
[info]   CI (99.9%): [1740292.443, 1756303.961] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   337.706 ±(99.9%) 1.581 MB/sec [Average]
[info]   (min, avg, max) = (337.276, 337.706, 338.271), stdev = 0.410
[info]   CI (99.9%): [336.126, 339.287] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   304.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (304.000, 304.000, 304.000), stdev = 0.001
[info]   CI (99.9%): [304.000, 304.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   306.965 ±(99.9%) 1079.026 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 306.965, 511.616), stdev = 280.220
[info]   CI (99.9%): [≈ 0, 1385.991] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   276.559 ±(99.9%) 972.143 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 276.559, 461.126), stdev = 252.462
[info]   CI (99.9%): [≈ 0, 1248.702] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.001 ±(99.9%) 0.008 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.005), stdev = 0.002
[info]   CI (99.9%): [≈ 0, 0.009] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.001 ±(99.9%) 0.007 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.004), stdev = 0.002
[info]   CI (99.9%): [≈ 0, 0.008] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 1.095
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 10.24% complete, ETA 01:59:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 70550.361 ops/s
[info] # Warmup Iteration   2: 106199.068 ops/s
[info] # Warmup Iteration   3: 107939.119 ops/s
[info] # Warmup Iteration   4: 109866.109 ops/s
[info] # Warmup Iteration   5: 109962.683 ops/s
[info] Iteration   1: 110098.962 ops/s
[info]                  ·gc.alloc.rate:                   3999.540 MB/sec
[info]                  ·gc.alloc.rate.norm:              57176.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4064.601 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     58106.095 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.893 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 108889.669 ops/s
[info]                  ·gc.alloc.rate:                   3957.376 MB/sec
[info]                  ·gc.alloc.rate.norm:              57176.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4075.098 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     58876.850 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.204 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 109502.657 ops/s
[info]                  ·gc.alloc.rate:                   3978.233 MB/sec
[info]                  ·gc.alloc.rate.norm:              57176.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4079.456 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     58630.797 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.197 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 107963.041 ops/s
[info]                  ·gc.alloc.rate:                   3922.206 MB/sec
[info]                  ·gc.alloc.rate.norm:              57176.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4084.138 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     59536.580 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.214 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 107962.717 ops/s
[info]                  ·gc.alloc.rate:                   3936.324 MB/sec
[info]                  ·gc.alloc.rate.norm:              57374.472 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3404.804 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     49627.224 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.214 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson":
[info]   108883.409 ±(99.9%) 3630.560 ops/s [Average]
[info]   (min, avg, max) = (107962.717, 108883.409, 110098.962), stdev = 942.845
[info]   CI (99.9%): [105252.849, 112513.969] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3958.736 ±(99.9%) 119.984 MB/sec [Average]
[info]   (min, avg, max) = (3922.206, 3958.736, 3999.540), stdev = 31.160
[info]   CI (99.9%): [3838.751, 4078.720] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   57215.698 ±(99.9%) 341.774 B/op [Average]
[info]   (min, avg, max) = (57176.004, 57215.698, 57374.472), stdev = 88.758
[info]   CI (99.9%): [56873.923, 57557.472] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3941.619 ±(99.9%) 1155.870 MB/sec [Average]
[info]   (min, avg, max) = (3404.804, 3941.619, 4084.138), stdev = 300.176
[info]   CI (99.9%): [2785.749, 5097.490] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   56955.509 ±(99.9%) 15898.506 B/op [Average]
[info]   (min, avg, max) = (49627.224, 56955.509, 59536.580), stdev = 4128.792
[info]   CI (99.9%): [41057.003, 72854.015] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.079 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 0.079, 0.083), stdev = 0.009
[info]   CI (99.9%): [0.043, 0.115] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.144 ±(99.9%) 0.542 B/op [Average]
[info]   (min, avg, max) = (0.893, 1.144, 1.214), stdev = 0.141
[info]   CI (99.9%): [0.602, 1.686] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.200, 6.000), stdev = 0.837
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 10.44% complete, ETA 01:59:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 566600.530 ops/s
[info] # Warmup Iteration   2: 613066.682 ops/s
[info] # Warmup Iteration   3: 632328.100 ops/s
[info] # Warmup Iteration   4: 633562.166 ops/s
[info] # Warmup Iteration   5: 632137.588 ops/s
[info] Iteration   1: 631913.174 ops/s
[info]                  ·gc.alloc.rate:                   1650.957 MB/sec
[info]                  ·gc.alloc.rate.norm:              4112.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.562 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3358.832 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.052 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 606166.790 ops/s
[info]                  ·gc.alloc.rate:                   1583.688 MB/sec
[info]                  ·gc.alloc.rate.norm:              4112.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2024.096 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5255.506 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.270 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 628319.342 ops/s
[info]                  ·gc.alloc.rate:                   1641.848 MB/sec
[info]                  ·gc.alloc.rate.norm:              4112.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1351.148 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3383.946 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.104 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 621481.869 ops/s
[info]                  ·gc.alloc.rate:                   1624.401 MB/sec
[info]                  ·gc.alloc.rate.norm:              4112.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2029.924 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5138.540 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.105 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 614736.362 ops/s
[info]                  ·gc.alloc.rate:                   1606.100 MB/sec
[info]                  ·gc.alloc.rate.norm:              4112.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1354.215 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3467.114 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readUPickle":
[info]   620523.507 ±(99.9%) 39971.853 ops/s [Average]
[info]   (min, avg, max) = (606166.790, 620523.507, 631913.174), stdev = 10380.563
[info]   CI (99.9%): [580551.654, 660495.361] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readUPickle:·gc.alloc.rate":
[info]   1621.399 ±(99.9%) 104.695 MB/sec [Average]
[info]   (min, avg, max) = (1583.688, 1621.399, 1650.957), stdev = 27.189
[info]   CI (99.9%): [1516.704, 1726.094] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readUPickle:·gc.alloc.rate.norm":
[info]   4112.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4112.001, 4112.001, 4112.001), stdev = 0.001
[info]   CI (99.9%): [4112.001, 4112.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readUPickle:·gc.churn.PS_Eden_Space":
[info]   1621.589 ±(99.9%) 1425.155 MB/sec [Average]
[info]   (min, avg, max) = (1348.562, 1621.589, 2029.924), stdev = 370.108
[info]   CI (99.9%): [196.434, 3046.744] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   4120.788 ±(99.9%) 3789.613 B/op [Average]
[info]   (min, avg, max) = (3358.832, 4120.788, 5255.506), stdev = 984.151
[info]   CI (99.9%): [331.174, 7910.401] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readUPickle:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.104), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.178] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   0.117 ±(99.9%) 0.345 B/op [Average]
[info]   (min, avg, max) = (0.052, 0.117, 0.270), stdev = 0.090
[info]   CI (99.9%): [≈ 0, 0.462] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readUPickle:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readUPickle:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 3.000), stdev = 0.707
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 10.64% complete, ETA 01:58:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 275204.545 ops/s
[info] # Warmup Iteration   2: 363152.053 ops/s
[info] # Warmup Iteration   3: 378284.539 ops/s
[info] # Warmup Iteration   4: 375206.794 ops/s
[info] # Warmup Iteration   5: 380037.257 ops/s
[info] Iteration   1: 380364.882 ops/s
[info]                  ·gc.alloc.rate:                   1297.857 MB/sec
[info]                  ·gc.alloc.rate.norm:              5368.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.832 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5545.746 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.172 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 380654.939 ops/s
[info]                  ·gc.alloc.rate:                   1298.735 MB/sec
[info]                  ·gc.alloc.rate.norm:              5368.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.081 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5547.161 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.430 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 371317.984 ops/s
[info]                  ·gc.alloc.rate:                   1266.511 MB/sec
[info]                  ·gc.alloc.rate.norm:              5368.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.023 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5692.291 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.265 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 379196.137 ops/s
[info]                  ·gc.alloc.rate:                   1293.381 MB/sec
[info]                  ·gc.alloc.rate.norm:              5368.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.007 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5582.267 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.259 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 377128.218 ops/s
[info]                  ·gc.alloc.rate:                   1286.278 MB/sec
[info]                  ·gc.alloc.rate.norm:              5368.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.283 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5618.419 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.174 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce":
[info]   377732.432 ±(99.9%) 14804.148 ops/s [Average]
[info]   (min, avg, max) = (371317.984, 377732.432, 380654.939), stdev = 3844.590
[info]   CI (99.9%): [362928.284, 392536.580] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:·gc.alloc.rate":
[info]   1288.552 ±(99.9%) 51.106 MB/sec [Average]
[info]   (min, avg, max) = (1266.511, 1288.552, 1298.735), stdev = 13.272
[info]   CI (99.9%): [1237.447, 1339.658] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   5368.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5368.001, 5368.001, 5368.001), stdev = 0.001
[info]   CI (99.9%): [5368.001, 5368.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1343.445 ±(99.9%) 8.471 MB/sec [Average]
[info]   (min, avg, max) = (1340.832, 1343.445, 1346.283), stdev = 2.200
[info]   CI (99.9%): [1334.974, 1351.916] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5597.177 ±(99.9%) 234.755 B/op [Average]
[info]   (min, avg, max) = (5545.746, 5597.177, 5692.291), stdev = 60.965
[info]   CI (99.9%): [5362.422, 5831.932] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.062, 0.104), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.161] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.260 ±(99.9%) 0.405 B/op [Average]
[info]   (min, avg, max) = (0.172, 0.260, 0.430), stdev = 0.105
[info]   CI (99.9%): [≈ 0, 0.665] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 10.84% complete, ETA 01:58:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 49454.980 ops/s
[info] # Warmup Iteration   2: 1502860.582 ops/s
[info] # Warmup Iteration   3: 1534522.086 ops/s
[info] # Warmup Iteration   4: 1498634.801 ops/s
[info] # Warmup Iteration   5: 1513271.496 ops/s
[info] Iteration   1: 1500924.861 ops/s
[info]                  ·gc.alloc.rate:               694.267 MB/sec
[info]                  ·gc.alloc.rate.norm:          728.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      663.839 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 696.094 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 1465456.392 ops/s
[info]                  ·gc.alloc.rate:                   678.180 MB/sec
[info]                  ·gc.alloc.rate.norm:              728.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          664.153 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     712.942 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.036 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.039 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 1512071.701 ops/s
[info]                  ·gc.alloc.rate:               699.430 MB/sec
[info]                  ·gc.alloc.rate.norm:          728.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      665.158 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 692.328 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 1514485.160 ops/s
[info]                  ·gc.alloc.rate:               700.543 MB/sec
[info]                  ·gc.alloc.rate.norm:          728.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      665.156 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 691.226 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 1521205.193 ops/s
[info]                  ·gc.alloc.rate:                   703.762 MB/sec
[info]                  ·gc.alloc.rate.norm:              728.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          666.565 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     689.522 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.007 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava":
[info]   1502828.661 ±(99.9%) 85222.755 ops/s [Average]
[info]   (min, avg, max) = (1465456.392, 1502828.661, 1521205.193), stdev = 22132.079
[info]   CI (99.9%): [1417605.907, 1588051.416] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   695.236 ±(99.9%) 38.999 MB/sec [Average]
[info]   (min, avg, max) = (678.180, 695.236, 703.762), stdev = 10.128
[info]   CI (99.9%): [656.238, 734.235] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   728.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (728.000, 728.000, 728.000), stdev = 0.001
[info]   CI (99.9%): [728.000, 728.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   664.974 ±(99.9%) 4.112 MB/sec [Average]
[info]   (min, avg, max) = (663.839, 664.974, 666.565), stdev = 1.068
[info]   CI (99.9%): [660.862, 669.086] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   696.423 ±(99.9%) 36.752 B/op [Average]
[info]   (min, avg, max) = (689.522, 696.423, 712.942), stdev = 9.544
[info]   CI (99.9%): [659.670, 733.175] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.009 ±(99.9%) 0.061 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.009, 0.036), stdev = 0.016
[info]   CI (99.9%): [≈ 0, 0.070] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.009 ±(99.9%) 0.065 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.009, 0.039), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.075] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 11.04% complete, ETA 01:58:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 744419.863 ops/s
[info] # Warmup Iteration   2: 1006758.617 ops/s
[info] # Warmup Iteration   3: 997726.799 ops/s
[info] # Warmup Iteration   4: 985634.339 ops/s
[info] # Warmup Iteration   5: 1028960.806 ops/s
[info] Iteration   1: 1028048.666 ops/s
[info]                  ·gc.alloc.rate:                   726.361 MB/sec
[info]                  ·gc.alloc.rate.norm:              1112.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.829 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1022.393 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.105 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.222 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 1026972.021 ops/s
[info]                  ·gc.alloc.rate:                   725.572 MB/sec
[info]                  ·gc.alloc.rate.norm:              1112.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.793 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1023.449 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   3: 1029952.818 ops/s
[info]                  ·gc.alloc.rate:               727.809 MB/sec
[info]                  ·gc.alloc.rate.norm:          1112.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.256 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1021.011 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 1032473.391 ops/s
[info]                  ·gc.alloc.rate:                   729.578 MB/sec
[info]                  ·gc.alloc.rate.norm:              1112.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          668.242 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1018.513 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.095 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 1026507.198 ops/s
[info]                  ·gc.alloc.rate:                   725.564 MB/sec
[info]                  ·gc.alloc.rate.norm:              1112.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.808 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2048.794 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.160 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala":
[info]   1028790.819 ±(99.9%) 9429.227 ops/s [Average]
[info]   (min, avg, max) = (1026507.198, 1028790.819, 1032473.391), stdev = 2448.740
[info]   CI (99.9%): [1019361.592, 1038220.046] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   726.977 ±(99.9%) 6.615 MB/sec [Average]
[info]   (min, avg, max) = (725.564, 726.977, 729.578), stdev = 1.718
[info]   CI (99.9%): [720.361, 733.592] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1112.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1112.000, 1112.000, 1112.000), stdev = 0.001
[info]   CI (99.9%): [1112.000, 1112.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   801.786 ±(99.9%) 1151.676 MB/sec [Average]
[info]   (min, avg, max) = (667.793, 801.786, 1336.808), stdev = 299.087
[info]   CI (99.9%): [≈ 0, 1953.462] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1226.832 ±(99.9%) 1769.350 B/op [Average]
[info]   (min, avg, max) = (1018.513, 1226.832, 2048.794), stdev = 459.495
[info]   CI (99.9%): [≈ 0, 2996.182] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.458 ±(99.9%) 3.547 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.458, 2.105), stdev = 0.921
[info]   CI (99.9%): [≈ 0, 4.006] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.702 ±(99.9%) 5.431 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.702, 3.222), stdev = 1.410
[info]   CI (99.9%): [≈ 0, 6.132] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 3.000), stdev = 1.140
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 11.24% complete, ETA 01:58:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2085879.519 ops/s
[info] # Warmup Iteration   2: 2259851.575 ops/s
[info] # Warmup Iteration   3: 2631422.973 ops/s
[info] # Warmup Iteration   4: 2624306.816 ops/s
[info] # Warmup Iteration   5: 2623446.392 ops/s
[info] Iteration   1: 2634302.673 ops/s
[info]                  ·gc.alloc.rate:                   1218.685 MB/sec
[info]                  ·gc.alloc.rate.norm:              728.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.842 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     803.960 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.050 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 2606188.186 ops/s
[info]                  ·gc.alloc.rate:                   1205.499 MB/sec
[info]                  ·gc.alloc.rate.norm:              728.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.270 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     813.012 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.050 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 2627724.184 ops/s
[info]                  ·gc.alloc.rate:                   1215.501 MB/sec
[info]                  ·gc.alloc.rate.norm:              728.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.283 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     806.929 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.050 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 2627150.632 ops/s
[info]                  ·gc.alloc.rate:               1215.255 MB/sec
[info]                  ·gc.alloc.rate.norm:          728.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1348.345 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 807.728 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 2618729.412 ops/s
[info]                  ·gc.alloc.rate:               1211.341 MB/sec
[info]                  ·gc.alloc.rate.norm:          728.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      674.504 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 405.368 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala":
[info]   2622819.017 ±(99.9%) 41651.407 ops/s [Average]
[info]   (min, avg, max) = (2606188.186, 2622819.017, 2634302.673), stdev = 10816.738
[info]   CI (99.9%): [2581167.610, 2664470.425] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1213.256 ±(99.9%) 19.477 MB/sec [Average]
[info]   (min, avg, max) = (1205.499, 1213.256, 1218.685), stdev = 5.058
[info]   CI (99.9%): [1193.779, 1232.733] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   728.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (728.000, 728.000, 728.000), stdev = 0.001
[info]   CI (99.9%): [728.000, 728.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1212.449 ±(99.9%) 1157.973 MB/sec [Average]
[info]   (min, avg, max) = (674.504, 1212.449, 1348.345), stdev = 300.722
[info]   CI (99.9%): [54.476, 2370.422] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   727.399 ±(99.9%) 693.310 B/op [Average]
[info]   (min, avg, max) = (405.368, 727.399, 813.012), stdev = 180.051
[info]   CI (99.9%): [34.089, 1420.710] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.176 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.083), stdev = 0.046
[info]   CI (99.9%): [≈ 0, 0.226] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.030 ±(99.9%) 0.105 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.030, 0.050), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.135] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 3.000), stdev = 0.894
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 11.45% complete, ETA 01:57:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2121091.867 ops/s
[info] # Warmup Iteration   2: 2246862.959 ops/s
[info] # Warmup Iteration   3: 2221759.625 ops/s
[info] # Warmup Iteration   4: 2222976.664 ops/s
[info] # Warmup Iteration   5: 2222328.584 ops/s
[info] Iteration   1: 2221161.579 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 2218383.565 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 2228925.345 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 2223435.460 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 2222671.868 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   2222915.563 ±(99.9%) 14921.260 ops/s [Average]
[info]   (min, avg, max) = (2218383.565, 2222915.563, 2228925.345), stdev = 3875.004
[info]   CI (99.9%): [2207994.303, 2237836.824] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 11.65% complete, ETA 01:57:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 387285.040 ops/s
[info] # Warmup Iteration   2: 497988.438 ops/s
[info] # Warmup Iteration   3: 506171.127 ops/s
[info] # Warmup Iteration   4: 505087.891 ops/s
[info] # Warmup Iteration   5: 504773.416 ops/s
[info] Iteration   1: 504808.643 ops/s
[info]                  ·gc.alloc.rate:               590.183 MB/sec
[info]                  ·gc.alloc.rate.norm:          1840.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.619 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1595.064 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 506307.843 ops/s
[info]                  ·gc.alloc.rate:                   591.936 MB/sec
[info]                  ·gc.alloc.rate.norm:              1840.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          669.839 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2082.160 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.022 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.284 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 507336.014 ops/s
[info]                  ·gc.alloc.rate:                   593.129 MB/sec
[info]                  ·gc.alloc.rate.norm:              1840.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          669.827 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2077.933 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.129 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 506002.767 ops/s
[info]                  ·gc.alloc.rate:                   591.559 MB/sec
[info]                  ·gc.alloc.rate.norm:              1840.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          669.477 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2082.358 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.129 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 505254.712 ops/s
[info]                  ·gc.alloc.rate:               590.681 MB/sec
[info]                  ·gc.alloc.rate.norm:          1840.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      669.478 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2085.457 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson":
[info]   505941.996 ±(99.9%) 3771.701 ops/s [Average]
[info]   (min, avg, max) = (504808.643, 505941.996, 507336.014), stdev = 979.499
[info]   CI (99.9%): [502170.294, 509713.697] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:·gc.alloc.rate":
[info]   591.497 ±(99.9%) 4.412 MB/sec [Average]
[info]   (min, avg, max) = (590.183, 591.497, 593.129), stdev = 1.146
[info]   CI (99.9%): [587.085, 595.910] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   1840.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1840.001, 1840.001, 1840.001), stdev = 0.001
[info]   CI (99.9%): [1840.001, 1840.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   638.048 ±(99.9%) 272.148 MB/sec [Average]
[info]   (min, avg, max) = (511.619, 638.048, 669.839), stdev = 70.676
[info]   CI (99.9%): [365.900, 910.196] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   1984.594 ±(99.9%) 838.556 B/op [Average]
[info]   (min, avg, max) = (1595.064, 1984.594, 2085.457), stdev = 217.770
[info]   CI (99.9%): [1146.038, 2823.151] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.421 ±(99.9%) 3.446 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.421, 2.022), stdev = 0.895
[info]   CI (99.9%): [≈ 0, 3.867] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.309 ±(99.9%) 10.713 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.309, 6.284), stdev = 2.782
[info]   CI (99.9%): [≈ 0, 12.021] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 3.000), stdev = 0.894
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 11.85% complete, ETA 01:57:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 164084.021 ops/s
[info] # Warmup Iteration   2: 170670.079 ops/s
[info] # Warmup Iteration   3: 175278.659 ops/s
[info] # Warmup Iteration   4: 175914.867 ops/s
[info] # Warmup Iteration   5: 176452.182 ops/s
[info] Iteration   1: 175545.123 ops/s
[info]                  ·gc.alloc.rate:                   1029.696 MB/sec
[info]                  ·gc.alloc.rate.norm:              9232.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          674.122 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6044.010 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.187 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 176154.570 ops/s
[info]                  ·gc.alloc.rate:                   1033.274 MB/sec
[info]                  ·gc.alloc.rate.norm:              9232.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.282 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12046.509 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.744 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 171673.018 ops/s
[info]                  ·gc.alloc.rate:               1007.412 MB/sec
[info]                  ·gc.alloc.rate.norm:          9232.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      674.425 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6180.488 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   4: 176054.366 ops/s
[info]                  ·gc.alloc.rate:                   1032.888 MB/sec
[info]                  ·gc.alloc.rate.norm:              9232.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.870 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12056.260 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.372 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 176109.213 ops/s
[info]                  ·gc.alloc.rate:               1033.018 MB/sec
[info]                  ·gc.alloc.rate.norm:          9232.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      674.449 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6027.496 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeUPickle":
[info]   175107.258 ±(99.9%) 7452.642 ops/s [Average]
[info]   (min, avg, max) = (171673.018, 175107.258, 176154.570), stdev = 1935.428
[info]   CI (99.9%): [167654.616, 182559.900] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeUPickle:·gc.alloc.rate":
[info]   1027.258 ±(99.9%) 43.089 MB/sec [Average]
[info]   (min, avg, max) = (1007.412, 1027.258, 1033.274), stdev = 11.190
[info]   CI (99.9%): [984.168, 1070.347] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeUPickle:·gc.alloc.rate.norm":
[info]   9232.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (9232.002, 9232.003, 9232.003), stdev = 0.001
[info]   CI (99.9%): [9232.002, 9232.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeUPickle:·gc.churn.PS_Eden_Space":
[info]   944.030 ±(99.9%) 1422.037 MB/sec [Average]
[info]   (min, avg, max) = (674.122, 944.030, 1348.870), stdev = 369.299
[info]   CI (99.9%): [≈ 0, 2366.067] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   8470.953 ±(99.9%) 12587.806 B/op [Average]
[info]   (min, avg, max) = (6027.496, 8470.953, 12056.260), stdev = 3269.013
[info]   CI (99.9%): [≈ 0, 21058.758] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.083), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   0.261 ±(99.9%) 1.198 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.261, 0.744), stdev = 0.311
[info]   CI (99.9%): [≈ 0, 1.459] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeUPickle:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeUPickle:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 0.837
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 12.05% complete, ETA 01:57:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 125720.389 ops/s
[info] # Warmup Iteration   2: 152076.029 ops/s
[info] # Warmup Iteration   3: 153021.058 ops/s
[info] # Warmup Iteration   4: 154532.036 ops/s
[info] # Warmup Iteration   5: 154496.457 ops/s
[info] Iteration   1: 151443.468 ops/s
[info]                  ·gc.alloc.rate:               1863.609 MB/sec
[info]                  ·gc.alloc.rate.norm:          19368.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1346.928 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 13998.275 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 151128.938 ops/s
[info]                  ·gc.alloc.rate:                   1859.728 MB/sec
[info]                  ·gc.alloc.rate.norm:              19368.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2022.678 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21065.034 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.867 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 151611.137 ops/s
[info]                  ·gc.alloc.rate:                   1865.766 MB/sec
[info]                  ·gc.alloc.rate.norm:              19368.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2027.098 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21042.746 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.648 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 154505.775 ops/s
[info]                  ·gc.alloc.rate:                   1901.303 MB/sec
[info]                  ·gc.alloc.rate.norm:              19368.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2029.712 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20676.070 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.212 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 154472.311 ops/s
[info]                  ·gc.alloc.rate:                   1900.878 MB/sec
[info]                  ·gc.alloc.rate.norm:              19368.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2032.690 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20711.029 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.212 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce":
[info]   152632.326 ±(99.9%) 6560.728 ops/s [Average]
[info]   (min, avg, max) = (151128.938, 152632.326, 154505.775), stdev = 1703.800
[info]   CI (99.9%): [146071.597, 159193.054] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:·gc.alloc.rate":
[info]   1878.257 ±(99.9%) 80.696 MB/sec [Average]
[info]   (min, avg, max) = (1859.728, 1878.257, 1901.303), stdev = 20.957
[info]   CI (99.9%): [1797.560, 1958.953] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   19368.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (19368.003, 19368.003, 19368.003), stdev = 0.001
[info]   CI (99.9%): [19368.003, 19368.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1891.821 ±(99.9%) 1173.009 MB/sec [Average]
[info]   (min, avg, max) = (1346.928, 1891.821, 2032.690), stdev = 304.627
[info]   CI (99.9%): [718.812, 3064.831] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   19498.631 ±(99.9%) 11860.374 B/op [Average]
[info]   (min, avg, max) = (13998.275, 19498.631, 21065.034), stdev = 3080.102
[info]   CI (99.9%): [7638.257, 31359.005] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.083), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.169] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.388 ±(99.9%) 1.375 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.388, 0.867), stdev = 0.357
[info]   CI (99.9%): [≈ 0, 1.763] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 12.25% complete, ETA 01:56:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 285181.243 ops/s
[info] # Warmup Iteration   2: 423269.201 ops/s
[info] # Warmup Iteration   3: 429804.781 ops/s
[info] # Warmup Iteration   4: 425728.361 ops/s
[info] # Warmup Iteration   5: 429328.061 ops/s
[info] Iteration   1: 429136.525 ops/s
[info]                  ·gc.alloc.rate:                   355.549 MB/sec
[info]                  ·gc.alloc.rate.norm:              1304.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.594 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1876.305 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.153 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 429911.913 ops/s
[info]                  ·gc.alloc.rate:      356.199 MB/sec
[info]                  ·gc.alloc.rate.norm: 1304.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 428983.774 ops/s
[info]                  ·gc.alloc.rate:               355.433 MB/sec
[info]                  ·gc.alloc.rate.norm:          1304.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.608 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1876.970 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 428775.043 ops/s
[info]                  ·gc.alloc.rate:                   355.273 MB/sec
[info]                  ·gc.alloc.rate.norm:              1304.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.613 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1877.832 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.115 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 430171.559 ops/s
[info]                  ·gc.alloc.rate:      356.405 MB/sec
[info]                  ·gc.alloc.rate.norm: 1304.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala":
[info]   429395.763 ±(99.9%) 2350.551 ops/s [Average]
[info]   (min, avg, max) = (428775.043, 429395.763, 430171.559), stdev = 610.431
[info]   CI (99.9%): [427045.211, 431746.314] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   355.772 ±(99.9%) 1.922 MB/sec [Average]
[info]   (min, avg, max) = (355.273, 355.772, 356.405), stdev = 0.499
[info]   CI (99.9%): [353.850, 357.694] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   1304.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1304.001, 1304.001, 1304.001), stdev = 0.001
[info]   CI (99.9%): [1304.001, 1304.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   306.963 ±(99.9%) 1079.018 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 306.963, 511.613), stdev = 280.217
[info]   CI (99.9%): [≈ 0, 1385.981] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1126.221 ±(99.9%) 3958.827 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1126.221, 1877.832), stdev = 1028.095
[info]   CI (99.9%): [≈ 0, 5085.049] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.015 ±(99.9%) 0.078 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.015, 0.042), stdev = 0.020
[info]   CI (99.9%): [≈ 0, 0.093] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.053 ±(99.9%) 0.287 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.053, 0.153), stdev = 0.074
[info]   CI (99.9%): [≈ 0, 0.340] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.600, 3.000), stdev = 1.517
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 12.45% complete, ETA 01:56:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 957210.105 ops/s
[info] # Warmup Iteration   2: 1007914.678 ops/s
[info] # Warmup Iteration   3: 1006788.724 ops/s
[info] # Warmup Iteration   4: 1014613.450 ops/s
[info] # Warmup Iteration   5: 1014954.970 ops/s
[info] Iteration   1: 1012342.925 ops/s
[info]                  ·gc.alloc.rate:                   195.544 MB/sec
[info]                  ·gc.alloc.rate.norm:              304.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.636 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     795.410 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.715 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.222 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 1013819.187 ops/s
[info]                  ·gc.alloc.rate:      195.837 MB/sec
[info]                  ·gc.alloc.rate.norm: 304.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1011438.213 ops/s
[info]                  ·gc.alloc.rate:               195.375 MB/sec
[info]                  ·gc.alloc.rate.norm:          304.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.654 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 796.124 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 1013163.079 ops/s
[info]                  ·gc.alloc.rate:      195.707 MB/sec
[info]                  ·gc.alloc.rate.norm: 304.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1012810.277 ops/s
[info]                  ·gc.alloc.rate:      195.630 MB/sec
[info]                  ·gc.alloc.rate.norm: 304.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala":
[info]   1012714.736 ±(99.9%) 3442.886 ops/s [Average]
[info]   (min, avg, max) = (1011438.213, 1012714.736, 1013819.187), stdev = 894.107
[info]   CI (99.9%): [1009271.850, 1016157.622] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   195.619 ±(99.9%) 0.668 MB/sec [Average]
[info]   (min, avg, max) = (195.375, 195.619, 195.837), stdev = 0.173
[info]   CI (99.9%): [194.951, 196.286] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   304.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (304.000, 304.000, 304.000), stdev = 0.001
[info]   CI (99.9%): [304.000, 304.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   204.658 ±(99.9%) 1079.102 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 204.658, 511.654), stdev = 280.239
[info]   CI (99.9%): [≈ 0, 1283.760] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   318.307 ±(99.9%) 1678.340 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 318.307, 796.124), stdev = 435.860
[info]   CI (99.9%): [≈ 0, 1996.647] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.543 ±(99.9%) 4.676 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.543, 2.715), stdev = 1.214
[info]   CI (99.9%): [≈ 0, 5.219] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.844 ±(99.9%) 7.270 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.844, 4.222), stdev = 1.888
[info]   CI (99.9%): [≈ 0, 8.114] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:·gc.count":
[info]   2.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.000), stdev = 0.548
[info]   CI (99.9%): [2.000, 2.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:·gc.time":
[info]   4.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 2.000), stdev = 1.095
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 12.65% complete, ETA 01:56:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 51332.083 ops/s
[info] # Warmup Iteration   2: 80896.296 ops/s
[info] # Warmup Iteration   3: 81840.662 ops/s
[info] # Warmup Iteration   4: 82512.279 ops/s
[info] # Warmup Iteration   5: 82975.755 ops/s
[info] Iteration   1: 84165.220 ops/s
[info]                  ·gc.alloc.rate:                   3473.468 MB/sec
[info]                  ·gc.alloc.rate.norm:              64952.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4054.952 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     75825.439 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.168 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 83982.829 ops/s
[info]                  ·gc.alloc.rate:                   3465.905 MB/sec
[info]                  ·gc.alloc.rate.norm:              64952.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3388.986 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     63510.529 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.951 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 84093.281 ops/s
[info]                  ·gc.alloc.rate:                   3470.483 MB/sec
[info]                  ·gc.alloc.rate.norm:              64952.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3395.101 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     63541.182 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.338 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 83406.346 ops/s
[info]                  ·gc.alloc.rate:                   3442.028 MB/sec
[info]                  ·gc.alloc.rate.norm:              64952.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3399.326 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     64146.197 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.357 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 83699.674 ops/s
[info]                  ·gc.alloc.rate:                   3454.079 MB/sec
[info]                  ·gc.alloc.rate.norm:              64952.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3401.911 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     63971.015 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.174 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson":
[info]   83869.470 ±(99.9%) 1208.090 ops/s [Average]
[info]   (min, avg, max) = (83406.346, 83869.470, 84165.220), stdev = 313.737
[info]   CI (99.9%): [82661.381, 85077.560] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3461.193 ±(99.9%) 50.099 MB/sec [Average]
[info]   (min, avg, max) = (3442.028, 3461.193, 3473.468), stdev = 13.010
[info]   CI (99.9%): [3411.094, 3511.291] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   64952.005 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (64952.005, 64952.005, 64952.006), stdev = 0.001
[info]   CI (99.9%): [64952.005, 64952.006] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3528.055 ±(99.9%) 1134.341 MB/sec [Average]
[info]   (min, avg, max) = (3388.986, 3528.055, 4054.952), stdev = 294.585
[info]   CI (99.9%): [2393.714, 4662.397] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   66198.872 ±(99.9%) 20748.693 B/op [Average]
[info]   (min, avg, max) = (63510.529, 66198.872, 75825.439), stdev = 5388.370
[info]   CI (99.9%): [45450.180, 86947.565] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.096 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 0.096, 0.125), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.217] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.797 ±(99.9%) 2.289 B/op [Average]
[info]   (min, avg, max) = (1.168, 1.797, 2.357), stdev = 0.594
[info]   CI (99.9%): [≈ 0, 4.086] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.000, 6.000), stdev = 0.707
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 12.85% complete, ETA 01:56:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 168578.571 ops/s
[info] # Warmup Iteration   2: 187686.268 ops/s
[info] # Warmup Iteration   3: 188888.813 ops/s
[info] # Warmup Iteration   4: 189746.770 ops/s
[info] # Warmup Iteration   5: 189703.595 ops/s
[info] Iteration   1: 185573.629 ops/s
[info]                  ·gc.alloc.rate:                   1450.880 MB/sec
[info]                  ·gc.alloc.rate.norm:              12304.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.709 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11429.068 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.530 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 184759.440 ops/s
[info]                  ·gc.alloc.rate:                   1444.963 MB/sec
[info]                  ·gc.alloc.rate.norm:              12304.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.806 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11485.212 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.887 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 186592.619 ops/s
[info]                  ·gc.alloc.rate:                   1458.723 MB/sec
[info]                  ·gc.alloc.rate.norm:              12304.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.601 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11383.579 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.878 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 188111.007 ops/s
[info]                  ·gc.alloc.rate:                   1470.577 MB/sec
[info]                  ·gc.alloc.rate.norm:              12304.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.901 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11302.698 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.174 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 187630.801 ops/s
[info]                  ·gc.alloc.rate:                   1467.411 MB/sec
[info]                  ·gc.alloc.rate.norm:              12304.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2029.881 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17020.215 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.524 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readUPickle":
[info]   186533.499 ±(99.9%) 5364.962 ops/s [Average]
[info]   (min, avg, max) = (184759.440, 186533.499, 188111.007), stdev = 1393.264
[info]   CI (99.9%): [181168.537, 191898.461] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readUPickle:·gc.alloc.rate":
[info]   1458.511 ±(99.9%) 41.589 MB/sec [Average]
[info]   (min, avg, max) = (1444.963, 1458.511, 1470.577), stdev = 10.801
[info]   CI (99.9%): [1416.922, 1500.100] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readUPickle:·gc.alloc.rate.norm":
[info]   12304.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (12304.002, 12304.002, 12304.002), stdev = 0.001
[info]   CI (99.9%): [12304.002, 12304.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readUPickle:·gc.churn.PS_Eden_Space":
[info]   1485.379 ±(99.9%) 1172.089 MB/sec [Average]
[info]   (min, avg, max) = (1347.709, 1485.379, 2029.881), stdev = 304.388
[info]   CI (99.9%): [313.291, 2657.468] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   12524.154 ±(99.9%) 9681.526 B/op [Average]
[info]   (min, avg, max) = (11302.698, 12524.154, 17020.215), stdev = 2514.262
[info]   CI (99.9%): [2842.628, 22205.681] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readUPickle:·gc.churn.PS_Survivor_Space":
[info]   0.071 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.071, 0.104), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.205] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   0.598 ±(99.9%) 1.141 B/op [Average]
[info]   (min, avg, max) = (0.174, 0.598, 0.887), stdev = 0.296
[info]   CI (99.9%): [≈ 0, 1.740] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readUPickle:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readUPickle:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 13.05% complete, ETA 01:55:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 214597.380 ops/s
[info] # Warmup Iteration   2: 280465.438 ops/s
[info] # Warmup Iteration   3: 281110.643 ops/s
[info] # Warmup Iteration   4: 286149.505 ops/s
[info] # Warmup Iteration   5: 287128.243 ops/s
[info] Iteration   1: 283510.037 ops/s
[info]                  ·gc.alloc.rate:                   1563.603 MB/sec
[info]                  ·gc.alloc.rate.norm:              8680.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2013.384 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11176.858 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.347 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 279353.957 ops/s
[info]                  ·gc.alloc.rate:                   1540.594 MB/sec
[info]                  ·gc.alloc.rate.norm:              8680.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.198 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7573.466 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.235 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 287820.371 ops/s
[info]                  ·gc.alloc.rate:                   1587.405 MB/sec
[info]                  ·gc.alloc.rate.norm:              8680.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.015 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7360.070 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.228 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 287354.072 ops/s
[info]                  ·gc.alloc.rate:                   1584.829 MB/sec
[info]                  ·gc.alloc.rate.norm:              8680.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2022.555 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11077.394 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.228 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 287748.938 ops/s
[info]                  ·gc.alloc.rate:                   1587.340 MB/sec
[info]                  ·gc.alloc.rate.norm:              8680.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.628 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7385.595 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.455 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce":
[info]   285157.475 ±(99.9%) 14282.024 ops/s [Average]
[info]   (min, avg, max) = (279353.957, 285157.475, 287820.371), stdev = 3708.996
[info]   CI (99.9%): [270875.451, 299439.499] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:·gc.alloc.rate":
[info]   1572.754 ±(99.9%) 79.178 MB/sec [Average]
[info]   (min, avg, max) = (1540.594, 1572.754, 1587.405), stdev = 20.562
[info]   CI (99.9%): [1493.577, 1651.932] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   8680.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8680.002, 8680.002, 8680.002), stdev = 0.001
[info]   CI (99.9%): [8680.001, 8680.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1615.356 ±(99.9%) 1415.327 MB/sec [Average]
[info]   (min, avg, max) = (1344.198, 1615.356, 2022.555), stdev = 367.556
[info]   CI (99.9%): [200.029, 3030.683] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   8914.677 ±(99.9%) 7784.718 B/op [Average]
[info]   (min, avg, max) = (7360.070, 8914.677, 11176.858), stdev = 2021.667
[info]   CI (99.9%): [1129.958, 16699.395] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.054, 0.083), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.126] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.298 ±(99.9%) 0.390 B/op [Average]
[info]   (min, avg, max) = (0.228, 0.298, 0.455), stdev = 0.101
[info]   CI (99.9%): [≈ 0, 0.688] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 13.25% complete, ETA 01:55:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1162527.076 ops/s
[info] # Warmup Iteration   2: 1582063.397 ops/s
[info] # Warmup Iteration   3: 1645766.374 ops/s
[info] # Warmup Iteration   4: 1642300.547 ops/s
[info] # Warmup Iteration   5: 1661548.895 ops/s
[info] Iteration   1: 1663145.750 ops/s
[info]                  ·gc.alloc.rate:                   853.807 MB/sec
[info]                  ·gc.alloc.rate.norm:              808.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.773 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     631.947 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.059 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 1658716.235 ops/s
[info]                  ·gc.alloc.rate:                   851.920 MB/sec
[info]                  ·gc.alloc.rate.norm:              808.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.809 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1267.892 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 1662054.213 ops/s
[info]                  ·gc.alloc.rate:               853.492 MB/sec
[info]                  ·gc.alloc.rate.norm:          808.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.647 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 633.008 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 1628778.036 ops/s
[info]                  ·gc.alloc.rate:                   836.215 MB/sec
[info]                  ·gc.alloc.rate.norm:              808.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          668.462 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     645.908 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 1612515.053 ops/s
[info]                  ·gc.alloc.rate:                   827.849 MB/sec
[info]                  ·gc.alloc.rate.norm:              808.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          669.163 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     653.119 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.041 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala":
[info]   1645041.857 ±(99.9%) 88787.713 ops/s [Average]
[info]   (min, avg, max) = (1612515.053, 1645041.857, 1663145.750), stdev = 23057.887
[info]   CI (99.9%): [1556254.144, 1733829.571] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   844.657 ±(99.9%) 45.897 MB/sec [Average]
[info]   (min, avg, max) = (827.849, 844.657, 853.807), stdev = 11.919
[info]   CI (99.9%): [798.759, 890.554] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   808.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (808.000, 808.000, 808.000), stdev = 0.001
[info]   CI (99.9%): [808.000, 808.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   802.171 ±(99.9%) 1150.850 MB/sec [Average]
[info]   (min, avg, max) = (667.773, 802.171, 1336.809), stdev = 298.872
[info]   CI (99.9%): [≈ 0, 1953.020] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   766.375 ±(99.9%) 1080.097 B/op [Average]
[info]   (min, avg, max) = (631.947, 766.375, 1267.892), stdev = 280.498
[info]   CI (99.9%): [≈ 0, 1846.471] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.032 ±(99.9%) 0.087 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.032, 0.059), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 13.45% complete, ETA 01:55:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1891995.702 ops/s
[info] # Warmup Iteration   2: 1954909.788 ops/s
[info] # Warmup Iteration   3: 2007052.014 ops/s
[info] # Warmup Iteration   4: 1997659.661 ops/s
[info] # Warmup Iteration   5: 2007608.692 ops/s
[info] Iteration   1: 2005623.710 ops/s
[info]                  ·gc.alloc.rate:               540.433 MB/sec
[info]                  ·gc.alloc.rate.norm:          424.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.706 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 401.462 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 2007259.830 ops/s
[info]                  ·gc.alloc.rate:                   540.755 MB/sec
[info]                  ·gc.alloc.rate.norm:              424.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.130 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     527.794 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.568 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.229 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 2006404.272 ops/s
[info]                  ·gc.alloc.rate:      540.535 MB/sec
[info]                  ·gc.alloc.rate.norm: 424.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 2005398.194 ops/s
[info]                  ·gc.alloc.rate:                   540.242 MB/sec
[info]                  ·gc.alloc.rate.norm:              424.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.133 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     528.297 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.082 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 2006271.071 ops/s
[info]                  ·gc.alloc.rate:               540.488 MB/sec
[info]                  ·gc.alloc.rate.norm:          424.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.793 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 527.790 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala":
[info]   2006191.416 ±(99.9%) 2819.563 ops/s [Average]
[info]   (min, avg, max) = (2005398.194, 2006191.416, 2007259.830), stdev = 732.232
[info]   CI (99.9%): [2003371.852, 2009010.979] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   540.491 ±(99.9%) 0.712 MB/sec [Average]
[info]   (min, avg, max) = (540.242, 540.491, 540.755), stdev = 0.185
[info]   CI (99.9%): [539.778, 541.203] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   424.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (424.000, 424.000, 424.000), stdev = 0.001
[info]   CI (99.9%): [424.000, 424.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   506.152 ±(99.9%) 1122.239 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 506.152, 673.133), stdev = 291.442
[info]   CI (99.9%): [≈ 0, 1628.392] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   397.069 ±(99.9%) 880.361 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 397.069, 528.297), stdev = 228.627
[info]   CI (99.9%): [≈ 0, 1277.429] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.334 ±(99.9%) 2.661 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.334, 1.568), stdev = 0.691
[info]   CI (99.9%): [≈ 0, 2.995] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.262 ±(99.9%) 2.086 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.262, 1.229), stdev = 0.542
[info]   CI (99.9%): [≈ 0, 2.349] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 0.837
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 13.65% complete, ETA 01:55:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1876125.745 ops/s
[info] # Warmup Iteration   2: 1969090.883 ops/s
[info] # Warmup Iteration   3: 1974892.809 ops/s
[info] # Warmup Iteration   4: 1973117.885 ops/s
[info] # Warmup Iteration   5: 1975334.915 ops/s
[info] Iteration   1: 1966201.215 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1974991.835 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1975368.852 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1974229.261 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1980792.966 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc":
[info]   1974316.826 ±(99.9%) 20135.370 ops/s [Average]
[info]   (min, avg, max) = (1966201.215, 1974316.826, 1980792.966), stdev = 5229.092
[info]   CI (99.9%): [1954181.456, 1994452.196] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 13.86% complete, ETA 01:54:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 27586.743 ops/s
[info] # Warmup Iteration   2: 38679.641 ops/s
[info] # Warmup Iteration   3: 38497.016 ops/s
[info] # Warmup Iteration   4: 39000.138 ops/s
[info] # Warmup Iteration   5: 38789.551 ops/s
[info] Iteration   1: 38122.328 ops/s
[info]                  ·gc.alloc.rate:               1663.318 MB/sec
[info]                  ·gc.alloc.rate.norm:          68656.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1341.577 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 55375.660 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 38470.804 ops/s
[info]                  ·gc.alloc.rate:                   1678.411 MB/sec
[info]                  ·gc.alloc.rate.norm:              68656.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2014.987 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     82423.737 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.258 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 38774.727 ops/s
[info]                  ·gc.alloc.rate:                   1691.597 MB/sec
[info]                  ·gc.alloc.rate.norm:              68656.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.742 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     54618.966 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.380 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 38183.031 ops/s
[info]                  ·gc.alloc.rate:                   1666.032 MB/sec
[info]                  ·gc.alloc.rate.norm:              68656.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2022.538 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     83347.363 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.858 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 38706.031 ops/s
[info]                  ·gc.alloc.rate:               1688.454 MB/sec
[info]                  ·gc.alloc.rate.norm:          68656.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1349.862 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 54888.135 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson":
[info]   38451.384 ±(99.9%) 1139.141 ops/s [Average]
[info]   (min, avg, max) = (38122.328, 38451.384, 38774.727), stdev = 295.831
[info]   CI (99.9%): [37312.243, 39590.526] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1677.562 ±(99.9%) 49.169 MB/sec [Average]
[info]   (min, avg, max) = (1663.318, 1677.562, 1691.597), stdev = 12.769
[info]   CI (99.9%): [1628.394, 1726.731] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   68656.011 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (68656.011, 68656.011, 68656.011), stdev = 0.001
[info]   CI (99.9%): [68656.011, 68656.012] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1614.941 ±(99.9%) 1419.571 MB/sec [Average]
[info]   (min, avg, max) = (1341.577, 1614.941, 2022.538), stdev = 368.658
[info]   CI (99.9%): [195.370, 3034.511] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   66130.772 ±(99.9%) 58918.083 B/op [Average]
[info]   (min, avg, max) = (54618.966, 66130.772, 83347.363), stdev = 15300.839
[info]   CI (99.9%): [7212.689, 125048.855] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.188 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.104), stdev = 0.049
[info]   CI (99.9%): [≈ 0, 0.230] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.699 ±(99.9%) 7.666 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.699, 4.258), stdev = 1.991
[info]   CI (99.9%): [≈ 0, 9.366] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 14.06% complete, ETA 01:54:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 119455.051 ops/s
[info] # Warmup Iteration   2: 127063.359 ops/s
[info] # Warmup Iteration   3: 127190.986 ops/s
[info] # Warmup Iteration   4: 127395.077 ops/s
[info] # Warmup Iteration   5: 127313.025 ops/s
[info] Iteration   1: 127465.963 ops/s
[info]                  ·gc.alloc.rate:                   910.349 MB/sec
[info]                  ·gc.alloc.rate.norm:              11240.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.515 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8315.830 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.257 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 127792.821 ops/s
[info]                  ·gc.alloc.rate:               912.700 MB/sec
[info]                  ·gc.alloc.rate.norm:          11240.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.537 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8294.684 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 127745.400 ops/s
[info]                  ·gc.alloc.rate:                   912.326 MB/sec
[info]                  ·gc.alloc.rate.norm:              11240.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.986 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16595.080 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.026 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 126492.173 ops/s
[info]                  ·gc.alloc.rate:               903.370 MB/sec
[info]                  ·gc.alloc.rate.norm:          11240.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      674.152 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8388.011 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 127633.120 ops/s
[info]                  ·gc.alloc.rate:               911.492 MB/sec
[info]                  ·gc.alloc.rate.norm:          11240.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      674.102 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8312.644 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeUPickle":
[info]   127425.895 ±(99.9%) 2067.461 ops/s [Average]
[info]   (min, avg, max) = (126492.173, 127425.895, 127792.821), stdev = 536.913
[info]   CI (99.9%): [125358.435, 129493.356] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeUPickle:·gc.alloc.rate":
[info]   910.047 ±(99.9%) 14.788 MB/sec [Average]
[info]   (min, avg, max) = (903.370, 910.047, 912.700), stdev = 3.840
[info]   CI (99.9%): [895.259, 924.835] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeUPickle:·gc.alloc.rate.norm":
[info]   11240.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (11240.003, 11240.003, 11240.004), stdev = 0.001
[info]   CI (99.9%): [11240.003, 11240.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeUPickle:·gc.churn.PS_Eden_Space":
[info]   808.458 ±(99.9%) 1159.221 MB/sec [Average]
[info]   (min, avg, max) = (673.515, 808.458, 1346.986), stdev = 301.046
[info]   CI (99.9%): [≈ 0, 1967.679] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   9981.250 ±(99.9%) 14237.432 B/op [Average]
[info]   (min, avg, max) = (8294.684, 9981.250, 16595.080), stdev = 3697.416
[info]   CI (99.9%): [≈ 0, 24218.682] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.139 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.083), stdev = 0.036
[info]   CI (99.9%): [≈ 0, 0.160] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   0.257 ±(99.9%) 1.711 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.257, 1.026), stdev = 0.444
[info]   CI (99.9%): [≈ 0, 1.967] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeUPickle:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeUPickle:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 14.26% complete, ETA 01:54:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 185996.806 ops/s
[info] # Warmup Iteration   2: 217515.762 ops/s
[info] # Warmup Iteration   3: 220734.155 ops/s
[info] # Warmup Iteration   4: 219114.576 ops/s
[info] # Warmup Iteration   5: 216262.663 ops/s
[info] Iteration   1: 218611.641 ops/s
[info]                  ·gc.alloc.rate:                   2326.882 MB/sec
[info]                  ·gc.alloc.rate.norm:              16752.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2025.068 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14579.142 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.300 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 219147.718 ops/s
[info]                  ·gc.alloc.rate:                   2332.657 MB/sec
[info]                  ·gc.alloc.rate.norm:              16752.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2704.527 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19422.592 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.747 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 222402.009 ops/s
[info]                  ·gc.alloc.rate:                   2367.234 MB/sec
[info]                  ·gc.alloc.rate.norm:              16752.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2031.690 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14377.486 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.737 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 221902.306 ops/s
[info]                  ·gc.alloc.rate:                   2361.892 MB/sec
[info]                  ·gc.alloc.rate.norm:              16752.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2712.498 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19238.713 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.443 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 222764.293 ops/s
[info]                  ·gc.alloc.rate:                   2370.980 MB/sec
[info]                  ·gc.alloc.rate.norm:              16752.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2037.019 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14392.423 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.441 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce":
[info]   220965.593 ±(99.9%) 7462.158 ops/s [Average]
[info]   (min, avg, max) = (218611.641, 220965.593, 222764.293), stdev = 1937.899
[info]   CI (99.9%): [213503.436, 228427.751] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:·gc.alloc.rate":
[info]   2351.929 ±(99.9%) 79.271 MB/sec [Average]
[info]   (min, avg, max) = (2326.882, 2351.929, 2370.980), stdev = 20.586
[info]   CI (99.9%): [2272.658, 2431.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   16752.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (16752.002, 16752.002, 16752.002), stdev = 0.001
[info]   CI (99.9%): [16752.002, 16752.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2302.160 ±(99.9%) 1428.519 MB/sec [Average]
[info]   (min, avg, max) = (2025.068, 2302.160, 2712.498), stdev = 370.982
[info]   CI (99.9%): [873.641, 3730.679] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   16402.071 ±(99.9%) 10301.963 B/op [Average]
[info]   (min, avg, max) = (14377.486, 16402.071, 19422.592), stdev = 2675.387
[info]   CI (99.9%): [6100.108, 26704.035] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.075 ±(99.9%) 0.108 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.075, 0.104), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.182] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.534 ±(99.9%) 0.766 B/op [Average]
[info]   (min, avg, max) = (0.300, 0.534, 0.747), stdev = 0.199
[info]   CI (99.9%): [≈ 0, 1.300] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 4.000), stdev = 0.837
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 14.46% complete, ETA 01:54:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 208893.220 ops/s
[info] # Warmup Iteration   2: 310938.793 ops/s
[info] # Warmup Iteration   3: 312775.999 ops/s
[info] # Warmup Iteration   4: 319345.141 ops/s
[info] # Warmup Iteration   5: 321481.251 ops/s
[info] Iteration   1: 321199.210 ops/s
[info]                  ·gc.alloc.rate:                   1608.419 MB/sec
[info]                  ·gc.alloc.rate.norm:              7880.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2007.722 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9836.275 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.306 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 316560.509 ops/s
[info]                  ·gc.alloc.rate:               1585.233 MB/sec
[info]                  ·gc.alloc.rate.norm:          7880.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1340.493 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6663.429 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 314335.605 ops/s
[info]                  ·gc.alloc.rate:                   1574.430 MB/sec
[info]                  ·gc.alloc.rate.norm:              7880.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.810 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6720.743 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.104 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 310559.906 ops/s
[info]                  ·gc.alloc.rate:                   1555.348 MB/sec
[info]                  ·gc.alloc.rate.norm:              7880.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2018.074 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10224.353 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.211 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 314648.388 ops/s
[info]                  ·gc.alloc.rate:                   1575.348 MB/sec
[info]                  ·gc.alloc.rate.norm:              7880.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.525 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6740.415 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.208 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala":
[info]   315460.724 ±(99.9%) 14923.859 ops/s [Average]
[info]   (min, avg, max) = (310559.906, 315460.724, 321199.210), stdev = 3875.679
[info]   CI (99.9%): [300536.864, 330384.583] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1579.756 ±(99.9%) 74.446 MB/sec [Average]
[info]   (min, avg, max) = (1555.348, 1579.756, 1608.419), stdev = 19.333
[info]   CI (99.9%): [1505.310, 1654.202] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   7880.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (7880.001, 7880.001, 7880.001), stdev = 0.001
[info]   CI (99.9%): [7880.001, 7880.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1611.325 ±(99.9%) 1411.690 MB/sec [Average]
[info]   (min, avg, max) = (1340.493, 1611.325, 2018.074), stdev = 366.611
[info]   CI (99.9%): [199.635, 3023.015] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   8037.043 ±(99.9%) 7027.364 B/op [Average]
[info]   (min, avg, max) = (6663.429, 8037.043, 10224.353), stdev = 1824.984
[info]   CI (99.9%): [1009.679, 15064.407] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.166 ±(99.9%) 0.451 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.166, 0.306), stdev = 0.117
[info]   CI (99.9%): [≈ 0, 0.617] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 14.66% complete, ETA 01:53:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1101375.642 ops/s
[info] # Warmup Iteration   2: 1145752.139 ops/s
[info] # Warmup Iteration   3: 1149405.086 ops/s
[info] # Warmup Iteration   4: 1147799.439 ops/s
[info] # Warmup Iteration   5: 1153044.343 ops/s
[info] Iteration   1: 1145022.483 ops/s
[info]                  ·gc.alloc.rate:                   395.762 MB/sec
[info]                  ·gc.alloc.rate.norm:              544.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.577 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     703.197 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.016 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 1149824.319 ops/s
[info]                  ·gc.alloc.rate:               397.433 MB/sec
[info]                  ·gc.alloc.rate.norm:          544.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.602 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 700.273 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 1149382.609 ops/s
[info]                  ·gc.alloc.rate:                   397.284 MB/sec
[info]                  ·gc.alloc.rate.norm:              544.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.607 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     700.544 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.004 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 1152302.499 ops/s
[info]                  ·gc.alloc.rate:      398.288 MB/sec
[info]                  ·gc.alloc.rate.norm: 544.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1141994.594 ops/s
[info]                  ·gc.alloc.rate:                   394.725 MB/sec
[info]                  ·gc.alloc.rate.norm:              544.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.113 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     927.667 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.574 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.169 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala":
[info]   1147705.301 ±(99.9%) 15905.480 ops/s [Average]
[info]   (min, avg, max) = (1141994.594, 1147705.301, 1152302.499), stdev = 4130.603
[info]   CI (99.9%): [1131799.821, 1163610.781] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   396.699 ±(99.9%) 5.507 MB/sec [Average]
[info]   (min, avg, max) = (394.725, 396.699, 398.288), stdev = 1.430
[info]   CI (99.9%): [391.192, 402.205] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   544.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (544.000, 544.000, 544.000), stdev = 0.001
[info]   CI (99.9%): [544.000, 544.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   441.580 ±(99.9%) 987.949 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 441.580, 673.113), stdev = 256.567
[info]   CI (99.9%): [≈ 0, 1429.529] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   606.336 ±(99.9%) 1358.653 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 606.336, 927.667), stdev = 352.838
[info]   CI (99.9%): [≈ 0, 1964.989] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.319 ±(99.9%) 2.701 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.319, 1.574), stdev = 0.702
[info]   CI (99.9%): [≈ 0, 3.020] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.440 ±(99.9%) 3.723 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.440, 2.169), stdev = 0.967
[info]   CI (99.9%): [≈ 0, 4.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.600, 3.000), stdev = 1.140
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 14.86% complete, ETA 01:53:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 37399.155 ops/s
[info] # Warmup Iteration   2: 78823.841 ops/s
[info] # Warmup Iteration   3: 80385.676 ops/s
[info] # Warmup Iteration   4: 80798.120 ops/s
[info] # Warmup Iteration   5: 81012.480 ops/s
[info] Iteration   1: 80240.274 ops/s
[info]                  ·gc.alloc.rate:                   3267.122 MB/sec
[info]                  ·gc.alloc.rate.norm:              64080.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3371.791 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     66132.947 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.042 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 81065.963 ops/s
[info]                  ·gc.alloc.rate:                   3301.307 MB/sec
[info]                  ·gc.alloc.rate.norm:              64080.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3383.397 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     65673.412 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.617 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 80232.658 ops/s
[info]                  ·gc.alloc.rate:                   3267.088 MB/sec
[info]                  ·gc.alloc.rate.norm:              64080.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2712.429 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53201.042 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.042 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 79443.153 ops/s
[info]                  ·gc.alloc.rate:                   3234.178 MB/sec
[info]                  ·gc.alloc.rate.norm:              64080.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3394.499 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     67256.508 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.825 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 80974.930 ops/s
[info]                  ·gc.alloc.rate:                   3297.690 MB/sec
[info]                  ·gc.alloc.rate.norm:              64080.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3400.103 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     66070.076 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.618 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson":
[info]   80391.396 ±(99.9%) 2541.682 ops/s [Average]
[info]   (min, avg, max) = (79443.153, 80391.396, 81065.963), stdev = 660.067
[info]   CI (99.9%): [77849.714, 82933.077] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3273.477 ±(99.9%) 105.215 MB/sec [Average]
[info]   (min, avg, max) = (3234.178, 3273.477, 3301.307), stdev = 27.324
[info]   CI (99.9%): [3168.262, 3378.693] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   64080.005 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (64080.005, 64080.005, 64080.006), stdev = 0.001
[info]   CI (99.9%): [64080.005, 64080.006] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3252.444 ±(99.9%) 1163.174 MB/sec [Average]
[info]   (min, avg, max) = (2712.429, 3252.444, 3400.103), stdev = 302.072
[info]   CI (99.9%): [2089.270, 4415.618] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   63666.797 ±(99.9%) 22642.164 B/op [Average]
[info]   (min, avg, max) = (53201.042, 63666.797, 67256.508), stdev = 5880.098
[info]   CI (99.9%): [41024.633, 86308.961] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.083 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.083, 0.104), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.181] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.629 ±(99.9%) 1.913 B/op [Average]
[info]   (min, avg, max) = (0.825, 1.629, 2.042), stdev = 0.497
[info]   CI (99.9%): [≈ 0, 3.542] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.600, 5.000), stdev = 0.894
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 15.06% complete, ETA 01:53:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 138040.401 ops/s
[info] # Warmup Iteration   2: 154472.424 ops/s
[info] # Warmup Iteration   3: 157400.736 ops/s
[info] # Warmup Iteration   4: 157043.227 ops/s
[info] # Warmup Iteration   5: 156487.837 ops/s
[info] Iteration   1: 157388.553 ops/s
[info]                  ·gc.alloc.rate:                   2179.175 MB/sec
[info]                  ·gc.alloc.rate.norm:              21792.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2025.692 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20257.157 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.625 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 152762.943 ops/s
[info]                  ·gc.alloc.rate:                   2115.343 MB/sec
[info]                  ·gc.alloc.rate.norm:              21792.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2029.210 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20904.674 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.072 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 155240.895 ops/s
[info]                  ·gc.alloc.rate:                   2149.487 MB/sec
[info]                  ·gc.alloc.rate.norm:              21792.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2031.785 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20598.717 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.633 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 156912.259 ops/s
[info]                  ·gc.alloc.rate:                   2172.613 MB/sec
[info]                  ·gc.alloc.rate.norm:              21792.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2711.854 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27200.770 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.418 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 157358.385 ops/s
[info]                  ·gc.alloc.rate:                   2178.808 MB/sec
[info]                  ·gc.alloc.rate.norm:              21792.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2036.781 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20371.469 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.416 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readUPickle":
[info]   155932.607 ±(99.9%) 7613.565 ops/s [Average]
[info]   (min, avg, max) = (152762.943, 155932.607, 157388.553), stdev = 1977.219
[info]   CI (99.9%): [148319.042, 163546.172] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readUPickle:·gc.alloc.rate":
[info]   2159.085 ±(99.9%) 105.121 MB/sec [Average]
[info]   (min, avg, max) = (2115.343, 2159.085, 2179.175), stdev = 27.300
[info]   CI (99.9%): [2053.964, 2264.206] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readUPickle:·gc.alloc.rate.norm":
[info]   21792.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (21792.003, 21792.003, 21792.003), stdev = 0.001
[info]   CI (99.9%): [21792.002, 21792.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readUPickle:·gc.churn.PS_Eden_Space":
[info]   2167.064 ±(99.9%) 1172.805 MB/sec [Average]
[info]   (min, avg, max) = (2025.692, 2167.064, 2711.854), stdev = 304.574
[info]   CI (99.9%): [994.260, 3339.869] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   21866.558 ±(99.9%) 11521.717 B/op [Average]
[info]   (min, avg, max) = (20257.157, 21866.558, 27200.770), stdev = 2992.153
[info]   CI (99.9%): [10344.841, 33388.274] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.062, 0.104), stdev = 0.025
[info]   CI (99.9%): [≈ 0, 0.161] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   0.633 ±(99.9%) 1.030 B/op [Average]
[info]   (min, avg, max) = (0.416, 0.633, 1.072), stdev = 0.268
[info]   CI (99.9%): [≈ 0, 1.663] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readUPickle:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readUPickle:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 15.26% complete, ETA 01:52:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 164497.423 ops/s
[info] # Warmup Iteration   2: 219426.008 ops/s
[info] # Warmup Iteration   3: 223814.018 ops/s
[info] # Warmup Iteration   4: 220407.462 ops/s
[info] # Warmup Iteration   5: 218898.799 ops/s
[info] Iteration   1: 223182.627 ops/s
[info]                  ·gc.alloc.rate:                   2197.797 MB/sec
[info]                  ·gc.alloc.rate.norm:              15496.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2692.337 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18982.854 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.587 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 222748.616 ops/s
[info]                  ·gc.alloc.rate:                   2193.138 MB/sec
[info]                  ·gc.alloc.rate.norm:              15496.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2024.015 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14301.031 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.294 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 224019.673 ops/s
[info]                  ·gc.alloc.rate:                   2205.606 MB/sec
[info]                  ·gc.alloc.rate.norm:              15496.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2026.684 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14238.945 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.878 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 224007.230 ops/s
[info]                  ·gc.alloc.rate:               2205.534 MB/sec
[info]                  ·gc.alloc.rate.norm:          15496.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2031.002 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 14269.747 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 223890.602 ops/s
[info]                  ·gc.alloc.rate:                   2204.427 MB/sec
[info]                  ·gc.alloc.rate.norm:              15496.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2711.524 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19060.634 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.439 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce":
[info]   223569.750 ±(99.9%) 2212.773 ops/s [Average]
[info]   (min, avg, max) = (222748.616, 223569.750, 224019.673), stdev = 574.650
[info]   CI (99.9%): [221356.977, 225782.522] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:·gc.alloc.rate":
[info]   2201.300 ±(99.9%) 21.537 MB/sec [Average]
[info]   (min, avg, max) = (2193.138, 2201.300, 2205.606), stdev = 5.593
[info]   CI (99.9%): [2179.764, 2222.837] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   15496.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (15496.002, 15496.002, 15496.002), stdev = 0.001
[info]   CI (99.9%): [15496.002, 15496.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   2297.112 ±(99.9%) 1423.265 MB/sec [Average]
[info]   (min, avg, max) = (2024.015, 2297.112, 2711.524), stdev = 369.617
[info]   CI (99.9%): [873.847, 3720.378] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   16170.642 ±(99.9%) 10022.940 B/op [Average]
[info]   (min, avg, max) = (14238.945, 16170.642, 19060.634), stdev = 2602.926
[info]   CI (99.9%): [6147.702, 26193.582] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.179 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.062, 0.125), stdev = 0.047
[info]   CI (99.9%): [≈ 0, 0.242] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.440 ±(99.9%) 1.259 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.440, 0.878), stdev = 0.327
[info]   CI (99.9%): [≈ 0, 1.699] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 15.46% complete, ETA 01:52:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 846727.175 ops/s
[info] # Warmup Iteration   2: 1169439.533 ops/s
[info] # Warmup Iteration   3: 1141316.725 ops/s
[info] # Warmup Iteration   4: 1139149.695 ops/s
[info] # Warmup Iteration   5: 1150853.585 ops/s
[info] Iteration   1: 1171126.055 ops/s
[info]                  ·gc.alloc.rate:                   684.582 MB/sec
[info]                  ·gc.alloc.rate.norm:              920.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.800 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     897.448 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.094 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.815 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 1180106.594 ops/s
[info]                  ·gc.alloc.rate:                   689.830 MB/sec
[info]                  ·gc.alloc.rate.norm:              920.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.811 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     890.635 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.056 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 1179915.407 ops/s
[info]                  ·gc.alloc.rate:                   689.720 MB/sec
[info]                  ·gc.alloc.rate.norm:              920.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          668.147 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     891.225 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 1184463.425 ops/s
[info]                  ·gc.alloc.rate:               692.389 MB/sec
[info]                  ·gc.alloc.rate.norm:          920.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.154 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 887.799 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 1174869.139 ops/s
[info]                  ·gc.alloc.rate:                   686.733 MB/sec
[info]                  ·gc.alloc.rate.norm:              920.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          668.438 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     895.491 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.056 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala":
[info]   1178096.124 ±(99.9%) 19905.408 ops/s [Average]
[info]   (min, avg, max) = (1171126.055, 1178096.124, 1184463.425), stdev = 5169.371
[info]   CI (99.9%): [1158190.716, 1198001.532] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   688.651 ±(99.9%) 11.670 MB/sec [Average]
[info]   (min, avg, max) = (684.582, 688.651, 692.389), stdev = 3.031
[info]   CI (99.9%): [676.981, 700.321] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   920.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (920.000, 920.000, 920.000), stdev = 0.001
[info]   CI (99.9%): [920.000, 920.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   668.070 ±(99.9%) 1.033 MB/sec [Average]
[info]   (min, avg, max) = (667.800, 668.070, 668.438), stdev = 0.268
[info]   CI (99.9%): [667.037, 669.104] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   892.519 ±(99.9%) 14.992 B/op [Average]
[info]   (min, avg, max) = (887.799, 892.519, 897.448), stdev = 3.893
[info]   CI (99.9%): [877.527, 907.511] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.440 ±(99.9%) 3.562 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.440, 2.094), stdev = 0.925
[info]   CI (99.9%): [≈ 0, 4.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.591 ±(99.9%) 4.788 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.591, 2.815), stdev = 1.243
[info]   CI (99.9%): [≈ 0, 5.378] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 15.66% complete, ETA 01:52:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2480106.805 ops/s
[info] # Warmup Iteration   2: 2624025.164 ops/s
[info] # Warmup Iteration   3: 2818383.873 ops/s
[info] # Warmup Iteration   4: 2895880.396 ops/s
[info] # Warmup Iteration   5: 2913451.497 ops/s
[info] Iteration   1: 2907723.196 ops/s
[info]                  ·gc.alloc.rate:                   990.262 MB/sec
[info]                  ·gc.alloc.rate.norm:              536.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.806 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     364.171 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 2902382.121 ops/s
[info]                  ·gc.alloc.rate:                   988.465 MB/sec
[info]                  ·gc.alloc.rate.norm:              536.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.601 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     729.659 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 2906888.956 ops/s
[info]                  ·gc.alloc.rate:               989.980 MB/sec
[info]                  ·gc.alloc.rate.norm:          536.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.822 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 364.283 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 2834951.432 ops/s
[info]                  ·gc.alloc.rate:                   965.519 MB/sec
[info]                  ·gc.alloc.rate.norm:              536.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.038 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     747.798 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.035 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 2813752.081 ops/s
[info]                  ·gc.alloc.rate:               958.288 MB/sec
[info]                  ·gc.alloc.rate.norm:          536.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.847 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 376.904 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala":
[info]   2873139.557 ±(99.9%) 174083.420 ops/s [Average]
[info]   (min, avg, max) = (2813752.081, 2873139.557, 2907723.196), stdev = 45208.911
[info]   CI (99.9%): [2699056.137, 3047222.978] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   978.502 ±(99.9%) 59.231 MB/sec [Average]
[info]   (min, avg, max) = (958.288, 978.502, 990.262), stdev = 15.382
[info]   CI (99.9%): [919.271, 1037.734] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   536.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (536.000, 536.000, 536.000), stdev = 0.001
[info]   CI (99.9%): [536.000, 536.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   942.423 ±(99.9%) 1419.755 MB/sec [Average]
[info]   (min, avg, max) = (672.806, 942.423, 1347.038), stdev = 368.706
[info]   CI (99.9%): [≈ 0, 2362.178] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   516.563 ±(99.9%) 781.588 B/op [Average]
[info]   (min, avg, max) = (364.171, 516.563, 747.798), stdev = 202.976
[info]   CI (99.9%): [≈ 0, 1298.151] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.108 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.137] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.016 ±(99.9%) 0.059 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.016, 0.035), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.075] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 15.86% complete, ETA 01:52:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2495801.920 ops/s
[info] # Warmup Iteration   2: 2604241.293 ops/s
[info] # Warmup Iteration   3: 2567630.252 ops/s
[info] # Warmup Iteration   4: 2568939.934 ops/s
[info] # Warmup Iteration   5: 2568116.108 ops/s
[info] Iteration   1: 2566604.747 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 2566920.442 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 2569481.309 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 2567678.647 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 2567110.544 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc":
[info]   2567559.138 ±(99.9%) 4402.658 ops/s [Average]
[info]   (min, avg, max) = (2566604.747, 2567559.138, 2569481.309), stdev = 1143.356
[info]   CI (99.9%): [2563156.479, 2571961.796] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 16.06% complete, ETA 01:51:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 166595.740 ops/s
[info] # Warmup Iteration   2: 278530.334 ops/s
[info] # Warmup Iteration   3: 280552.441 ops/s
[info] # Warmup Iteration   4: 282615.549 ops/s
[info] # Warmup Iteration   5: 281383.204 ops/s
[info] Iteration   1: 281963.387 ops/s
[info]                  ·gc.alloc.rate:                   2307.503 MB/sec
[info]                  ·gc.alloc.rate.norm:              12880.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2012.044 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11230.812 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.465 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 282555.808 ops/s
[info]                  ·gc.alloc.rate:                   2312.950 MB/sec
[info]                  ·gc.alloc.rate.norm:              12880.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2691.266 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14986.707 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.348 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 283424.535 ops/s
[info]                  ·gc.alloc.rate:                   2319.959 MB/sec
[info]                  ·gc.alloc.rate.norm:              12880.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2024.522 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11239.790 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.347 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 277757.467 ops/s
[info]                  ·gc.alloc.rate:                   2273.446 MB/sec
[info]                  ·gc.alloc.rate.norm:              12880.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2704.646 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15322.929 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.472 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 282418.175 ops/s
[info]                  ·gc.alloc.rate:                   2311.204 MB/sec
[info]                  ·gc.alloc.rate.norm:              12880.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2031.690 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11322.312 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.232 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson":
[info]   281623.874 ±(99.9%) 8568.477 ops/s [Average]
[info]   (min, avg, max) = (277757.467, 281623.874, 283424.535), stdev = 2225.206
[info]   CI (99.9%): [273055.398, 290192.351] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   2305.012 ±(99.9%) 70.146 MB/sec [Average]
[info]   (min, avg, max) = (2273.446, 2305.012, 2319.959), stdev = 18.217
[info]   CI (99.9%): [2234.866, 2375.158] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   12880.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (12880.002, 12880.002, 12880.002), stdev = 0.001
[info]   CI (99.9%): [12880.001, 12880.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   2292.834 ±(99.9%) 1424.436 MB/sec [Average]
[info]   (min, avg, max) = (2012.044, 2292.834, 2704.646), stdev = 369.921
[info]   CI (99.9%): [868.398, 3717.270] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   12820.510 ±(99.9%) 8219.326 B/op [Average]
[info]   (min, avg, max) = (11230.812, 12820.510, 15322.929), stdev = 2134.533
[info]   CI (99.9%): [4601.184, 21039.836] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.067, 0.083), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.373 ±(99.9%) 0.382 B/op [Average]
[info]   (min, avg, max) = (0.232, 0.373, 0.472), stdev = 0.099
[info]   CI (99.9%): [≈ 0, 0.755] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 16.27% complete, ETA 01:51:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 83482.657 ops/s
[info] # Warmup Iteration   2: 88654.422 ops/s
[info] # Warmup Iteration   3: 88980.722 ops/s
[info] # Warmup Iteration   4: 88842.514 ops/s
[info] # Warmup Iteration   5: 89082.341 ops/s
[info] Iteration   1: 89094.901 ops/s
[info]                  ·gc.alloc.rate:                   846.861 MB/sec
[info]                  ·gc.alloc.rate.norm:              14960.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.262 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23817.366 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.735 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 88210.347 ops/s
[info]                  ·gc.alloc.rate:               838.832 MB/sec
[info]                  ·gc.alloc.rate.norm:          14960.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:      674.392 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 12027.326 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 89099.699 ops/s
[info]                  ·gc.alloc.rate:                   846.915 MB/sec
[info]                  ·gc.alloc.rate.norm:              14960.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          674.128 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11907.881 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.368 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 89243.163 ops/s
[info]                  ·gc.alloc.rate:               848.296 MB/sec
[info]                  ·gc.alloc.rate.norm:          14960.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:      674.169 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 11889.203 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 89167.025 ops/s
[info]                  ·gc.alloc.rate:                   847.610 MB/sec
[info]                  ·gc.alloc.rate.norm:              14960.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.289 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23796.802 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.102 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeUPickle":
[info]   88963.027 ±(99.9%) 1636.738 ops/s [Average]
[info]   (min, avg, max) = (88210.347, 88963.027, 89243.163), stdev = 425.056
[info]   CI (99.9%): [87326.289, 90599.764] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeUPickle:·gc.alloc.rate":
[info]   845.703 ±(99.9%) 14.961 MB/sec [Average]
[info]   (min, avg, max) = (838.832, 845.703, 848.296), stdev = 3.885
[info]   CI (99.9%): [830.742, 860.663] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeUPickle:·gc.alloc.rate.norm":
[info]   14960.005 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (14960.005, 14960.005, 14960.005), stdev = 0.001
[info]   CI (99.9%): [14960.005, 14960.005] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space":
[info]   943.848 ±(99.9%) 1421.620 MB/sec [Average]
[info]   (min, avg, max) = (674.128, 943.848, 1348.289), stdev = 369.190
[info]   CI (99.9%): [≈ 0, 2365.468] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   16687.716 ±(99.9%) 25026.431 B/op [Average]
[info]   (min, avg, max) = (11889.203, 16687.716, 23817.366), stdev = 6499.285
[info]   CI (99.9%): [≈ 0, 41714.147] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.129] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   0.441 ±(99.9%) 1.845 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.441, 1.102), stdev = 0.479
[info]   CI (99.9%): [≈ 0, 2.286] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeUPickle:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeUPickle:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 16.47% complete, ETA 01:51:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 19837.272 ops/s
[info] # Warmup Iteration   2: 25456.709 ops/s
[info] # Warmup Iteration   3: 25299.594 ops/s
[info] # Warmup Iteration   4: 25656.807 ops/s
[info] # Warmup Iteration   5: 25349.047 ops/s
[info] Iteration   1: 25627.054 ops/s
[info]                  ·gc.alloc.rate:                   1614.009 MB/sec
[info]                  ·gc.alloc.rate.norm:              99120.017 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2018.799 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     123979.149 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.114 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 25677.728 ops/s
[info]                  ·gc.alloc.rate:               1617.128 MB/sec
[info]                  ·gc.alloc.rate.norm:          99120.018 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1346.900 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 82556.681 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 25640.389 ops/s
[info]                  ·gc.alloc.rate:                   1614.864 MB/sec
[info]                  ·gc.alloc.rate.norm:              99120.017 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2022.763 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     124156.796 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.111 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 25651.022 ops/s
[info]                  ·gc.alloc.rate:                   1615.485 MB/sec
[info]                  ·gc.alloc.rate.norm:              99120.017 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.944 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     82888.799 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.277 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 25748.032 ops/s
[info]                  ·gc.alloc.rate:               1621.563 MB/sec
[info]                  ·gc.alloc.rate.norm:          99120.017 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1352.251 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 82658.018 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce":
[info]   25668.845 ±(99.9%) 184.904 ops/s [Average]
[info]   (min, avg, max) = (25627.054, 25668.845, 25748.032), stdev = 48.019
[info]   CI (99.9%): [25483.941, 25853.749] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:·gc.alloc.rate":
[info]   1616.610 ±(99.9%) 11.533 MB/sec [Average]
[info]   (min, avg, max) = (1614.009, 1616.610, 1621.563), stdev = 2.995
[info]   CI (99.9%): [1605.077, 1628.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   99120.017 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (99120.017, 99120.017, 99120.018), stdev = 0.001
[info]   CI (99.9%): [99120.015, 99120.019] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1618.332 ±(99.9%) 1414.698 MB/sec [Average]
[info]   (min, avg, max) = (1346.900, 1618.332, 2022.763), stdev = 367.393
[info]   CI (99.9%): [203.633, 3033.030] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   99247.888 ±(99.9%) 87247.658 B/op [Average]
[info]   (min, avg, max) = (82556.681, 99247.888, 124156.796), stdev = 22657.940
[info]   CI (99.9%): [12000.230, 186495.547] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.164 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.083), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.202] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   2.300 ±(99.9%) 10.086 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.300, 5.114), stdev = 2.619
[info]   CI (99.9%): [≈ 0, 12.387] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 16.67% complete, ETA 01:51:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1203.492 ops/s
[info] # Warmup Iteration   2: 83453.541 ops/s
[info] # Warmup Iteration   3: 90240.998 ops/s
[info] # Warmup Iteration   4: 90225.450 ops/s
[info] # Warmup Iteration   5: 90544.060 ops/s
[info] Iteration   1: 90612.592 ops/s
[info]                  ·gc.alloc.rate:               854.576 MB/sec
[info]                  ·gc.alloc.rate.norm:          14840.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:      663.973 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 11530.124 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 90568.385 ops/s
[info]                  ·gc.alloc.rate:               854.013 MB/sec
[info]                  ·gc.alloc.rate.norm:          14840.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:      665.205 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 11559.133 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 84538.280 ops/s
[info]                  ·gc.alloc.rate:                   797.426 MB/sec
[info]                  ·gc.alloc.rate.norm:              14840.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.204 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24792.168 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.035 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.658 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 90532.114 ops/s
[info]                  ·gc.alloc.rate:                   853.640 MB/sec
[info]                  ·gc.alloc.rate.norm:              14840.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          666.431 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11585.484 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.009 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.157 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 90569.941 ops/s
[info]                  ·gc.alloc.rate:                   853.963 MB/sec
[info]                  ·gc.alloc.rate.norm:              14840.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.780 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11604.542 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.004 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.078 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava":
[info]   89364.262 ±(99.9%) 10388.871 ops/s [Average]
[info]   (min, avg, max) = (84538.280, 89364.262, 90612.592), stdev = 2697.957
[info]   CI (99.9%): [78975.391, 99753.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   842.723 ±(99.9%) 97.516 MB/sec [Average]
[info]   (min, avg, max) = (797.426, 842.723, 854.576), stdev = 25.324
[info]   CI (99.9%): [745.208, 940.239] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   14840.005 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (14840.005, 14840.005, 14840.005), stdev = 0.001
[info]   CI (99.9%): [14840.004, 14840.005] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   799.118 ±(99.9%) 1147.519 MB/sec [Average]
[info]   (min, avg, max) = (663.973, 799.118, 1332.204), stdev = 298.007
[info]   CI (99.9%): [≈ 0, 1946.638] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   14214.290 ±(99.9%) 22769.935 B/op [Average]
[info]   (min, avg, max) = (11530.124, 14214.290, 24792.168), stdev = 5913.280
[info]   CI (99.9%): [≈ 0, 36984.225] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.010 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.010, 0.035), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.067] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.179 ±(99.9%) 1.062 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.179, 0.658), stdev = 0.276
[info]   CI (99.9%): [≈ 0, 1.240] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 4.000), stdev = 0.894
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 16.87% complete, ETA 01:50:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 36977.931 ops/s
[info] # Warmup Iteration   2: 56746.747 ops/s
[info] # Warmup Iteration   3: 55074.910 ops/s
[info] # Warmup Iteration   4: 58304.059 ops/s
[info] # Warmup Iteration   5: 58090.307 ops/s
[info] Iteration   1: 58073.183 ops/s
[info]                  ·gc.alloc.rate:                   1018.216 MB/sec
[info]                  ·gc.alloc.rate.norm:              27584.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.771 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     36213.819 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.128 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 58225.876 ops/s
[info]                  ·gc.alloc.rate:               1020.461 MB/sec
[info]                  ·gc.alloc.rate.norm:          27584.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.122 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 18059.959 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 58453.640 ops/s
[info]                  ·gc.alloc.rate:                   1024.483 MB/sec
[info]                  ·gc.alloc.rate.norm:              27584.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.968 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     35997.606 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.363 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 58476.292 ops/s
[info]                  ·gc.alloc.rate:               1024.892 MB/sec
[info]                  ·gc.alloc.rate.norm:          27584.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.798 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 18000.074 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 58373.274 ops/s
[info]                  ·gc.alloc.rate:                   1023.082 MB/sec
[info]                  ·gc.alloc.rate.norm:              27584.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.611 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     36118.157 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.245 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala":
[info]   58320.453 ±(99.9%) 652.630 ops/s [Average]
[info]   (min, avg, max) = (58073.183, 58320.453, 58476.292), stdev = 169.486
[info]   CI (99.9%): [57667.823, 58973.083] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1022.227 ±(99.9%) 10.913 MB/sec [Average]
[info]   (min, avg, max) = (1018.216, 1022.227, 1024.892), stdev = 2.834
[info]   CI (99.9%): [1011.314, 1033.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   27584.008 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (27584.007, 27584.008, 27584.008), stdev = 0.001
[info]   CI (99.9%): [27584.007, 27584.008] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1070.054 ±(99.9%) 1411.667 MB/sec [Average]
[info]   (min, avg, max) = (668.122, 1070.054, 1339.611), stdev = 366.605
[info]   CI (99.9%): [≈ 0, 2481.721] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   28877.923 ±(99.9%) 38133.148 B/op [Average]
[info]   (min, avg, max) = (18000.074, 28877.923, 36213.819), stdev = 9903.057
[info]   CI (99.9%): [≈ 0, 67011.071] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.209 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.125), stdev = 0.054
[info]   CI (99.9%): [≈ 0, 0.259] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.347 ±(99.9%) 5.629 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.347, 3.363), stdev = 1.462
[info]   CI (99.9%): [≈ 0, 6.976] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 17.07% complete, ETA 01:50:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 102031.030 ops/s
[info] # Warmup Iteration   2: 116004.626 ops/s
[info] # Warmup Iteration   3: 114546.936 ops/s
[info] # Warmup Iteration   4: 115887.048 ops/s
[info] # Warmup Iteration   5: 115815.352 ops/s
[info] Iteration   1: 116316.055 ops/s
[info]                  ·gc.alloc.rate:                   782.249 MB/sec
[info]                  ·gc.alloc.rate.norm:              10584.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.532 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9113.036 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.845 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   2: 116322.114 ops/s
[info]                  ·gc.alloc.rate:               782.276 MB/sec
[info]                  ·gc.alloc.rate.norm:          10584.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.854 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 9103.552 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 116608.178 ops/s
[info]                  ·gc.alloc.rate:                   784.244 MB/sec
[info]                  ·gc.alloc.rate.norm:              10584.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.881 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9081.071 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.843 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 116563.278 ops/s
[info]                  ·gc.alloc.rate:                   783.853 MB/sec
[info]                  ·gc.alloc.rate.norm:              10584.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.133 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9088.996 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.843 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 115738.632 ops/s
[info]                  ·gc.alloc.rate:                   778.600 MB/sec
[info]                  ·gc.alloc.rate.norm:              10584.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.118 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18312.237 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.566 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala":
[info]   116309.651 ±(99.9%) 1333.491 ops/s [Average]
[info]   (min, avg, max) = (115738.632, 116309.651, 116608.178), stdev = 346.303
[info]   CI (99.9%): [114976.161, 117643.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   782.244 ±(99.9%) 8.582 MB/sec [Average]
[info]   (min, avg, max) = (778.600, 782.244, 784.244), stdev = 2.229
[info]   CI (99.9%): [773.663, 790.826] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   10584.004 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10584.004, 10584.004, 10584.004), stdev = 0.001
[info]   CI (99.9%): [10584.003, 10584.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   807.904 ±(99.9%) 1160.701 MB/sec [Average]
[info]   (min, avg, max) = (672.854, 807.904, 1347.118), stdev = 301.430
[info]   CI (99.9%): [≈ 0, 1968.605] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   10939.778 ±(99.9%) 15869.845 B/op [Average]
[info]   (min, avg, max) = (9081.071, 10939.778, 18312.237), stdev = 4121.348
[info]   CI (99.9%): [≈ 0, 26809.624] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.619 ±(99.9%) 1.412 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.619, 0.845), stdev = 0.367
[info]   CI (99.9%): [≈ 0, 2.031] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:·gc.time":
[info]   4.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 17.27% complete, ETA 01:50:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 19584.678 ops/s
[info] # Warmup Iteration   2: 34035.628 ops/s
[info] # Warmup Iteration   3: 34274.535 ops/s
[info] # Warmup Iteration   4: 34043.604 ops/s
[info] # Warmup Iteration   5: 33901.263 ops/s
[info] Iteration   1: 34558.699 ops/s
[info]                  ·gc.alloc.rate:                   1768.495 MB/sec
[info]                  ·gc.alloc.rate.norm:              80536.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2010.464 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     91555.110 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.792 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 34080.251 ops/s
[info]                  ·gc.alloc.rate:                   1744.241 MB/sec
[info]                  ·gc.alloc.rate.norm:              80536.013 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.582 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     61990.395 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.923 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 33808.705 ops/s
[info]                  ·gc.alloc.rate:                   1730.058 MB/sec
[info]                  ·gc.alloc.rate.norm:              80536.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2018.169 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     93947.919 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.876 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 33907.165 ops/s
[info]                  ·gc.alloc.rate:               1735.106 MB/sec
[info]                  ·gc.alloc.rate.norm:          80536.013 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1347.281 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 62534.867 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 34603.393 ops/s
[info]                  ·gc.alloc.rate:                   1770.681 MB/sec
[info]                  ·gc.alloc.rate.norm:              80536.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2024.378 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     92074.965 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.628 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson":
[info]   34191.643 ±(99.9%) 1420.368 ops/s [Average]
[info]   (min, avg, max) = (33808.705, 34191.643, 34603.393), stdev = 368.865
[info]   CI (99.9%): [32771.275, 35612.011] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1749.716 ±(99.9%) 72.603 MB/sec [Average]
[info]   (min, avg, max) = (1730.058, 1749.716, 1770.681), stdev = 18.855
[info]   CI (99.9%): [1677.113, 1822.320] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   80536.013 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (80536.012, 80536.013, 80536.014), stdev = 0.001
[info]   CI (99.9%): [80536.011, 80536.015] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1748.575 ±(99.9%) 1419.005 MB/sec [Average]
[info]   (min, avg, max) = (1342.582, 1748.575, 2024.378), stdev = 368.511
[info]   CI (99.9%): [329.570, 3167.580] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   80420.651 ±(99.9%) 63924.220 B/op [Average]
[info]   (min, avg, max) = (61990.395, 80420.651, 93947.919), stdev = 16600.917
[info]   CI (99.9%): [16496.432, 144344.871] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.071 ±(99.9%) 0.209 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.071, 0.146), stdev = 0.054
[info]   CI (99.9%): [≈ 0, 0.280] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   3.244 ±(99.9%) 9.514 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.244, 6.628), stdev = 2.471
[info]   CI (99.9%): [≈ 0, 12.758] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 17.47% complete, ETA 01:50:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 47463.369 ops/s
[info] # Warmup Iteration   2: 53900.737 ops/s
[info] # Warmup Iteration   3: 52566.992 ops/s
[info] # Warmup Iteration   4: 52916.026 ops/s
[info] # Warmup Iteration   5: 53303.726 ops/s
[info] Iteration   1: 53435.163 ops/s
[info]                  ·gc.alloc.rate:               1189.647 MB/sec
[info]                  ·gc.alloc.rate.norm:          35040.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.476 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 19836.652 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 53851.620 ops/s
[info]                  ·gc.alloc.rate:                   1198.918 MB/sec
[info]                  ·gc.alloc.rate.norm:              35040.009 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.581 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     39384.873 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.434 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 53943.468 ops/s
[info]                  ·gc.alloc.rate:                   1201.029 MB/sec
[info]                  ·gc.alloc.rate.norm:              35040.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.601 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     39345.407 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.037 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 53618.714 ops/s
[info]                  ·gc.alloc.rate:               1193.783 MB/sec
[info]                  ·gc.alloc.rate.norm:          35040.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1349.254 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 39603.399 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 54065.392 ops/s
[info]                  ·gc.alloc.rate:                   1203.706 MB/sec
[info]                  ·gc.alloc.rate.norm:              35040.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.247 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     39305.845 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.030 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readUPickle":
[info]   53782.871 ±(99.9%) 978.291 ops/s [Average]
[info]   (min, avg, max) = (53435.163, 53782.871, 54065.392), stdev = 254.059
[info]   CI (99.9%): [52804.580, 54761.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readUPickle:·gc.alloc.rate":
[info]   1197.417 ±(99.9%) 21.819 MB/sec [Average]
[info]   (min, avg, max) = (1189.647, 1197.417, 1203.706), stdev = 5.666
[info]   CI (99.9%): [1175.598, 1219.236] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readUPickle:·gc.alloc.rate.norm":
[info]   35040.008 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (35040.008, 35040.008, 35040.009), stdev = 0.001
[info]   CI (99.9%): [35040.007, 35040.009] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readUPickle:·gc.churn.PS_Eden_Space":
[info]   1213.832 ±(99.9%) 1163.162 MB/sec [Average]
[info]   (min, avg, max) = (673.476, 1213.832, 1350.247), stdev = 302.070
[info]   CI (99.9%): [50.670, 2376.994] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   35495.235 ±(99.9%) 33709.199 B/op [Average]
[info]   (min, avg, max) = (19836.652, 35495.235, 39603.399), stdev = 8754.172
[info]   CI (99.9%): [1786.036, 69204.434] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readUPickle:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.207 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.058, 0.104), stdev = 0.054
[info]   CI (99.9%): [≈ 0, 0.266] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   1.700 ±(99.9%) 6.050 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.700, 3.037), stdev = 1.571
[info]   CI (99.9%): [≈ 0, 7.750] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readUPickle:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readUPickle:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 17.67% complete, ETA 01:49:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 28490.647 ops/s
[info] # Warmup Iteration   2: 39477.411 ops/s
[info] # Warmup Iteration   3: 39718.726 ops/s
[info] # Warmup Iteration   4: 39401.541 ops/s
[info] # Warmup Iteration   5: 38202.941 ops/s
[info] Iteration   1: 39855.860 ops/s
[info]                  ·gc.alloc.rate:               628.714 MB/sec
[info]                  ·gc.alloc.rate.norm:          24824.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.675 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 20202.864 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 39931.640 ops/s
[info]                  ·gc.alloc.rate:                   629.829 MB/sec
[info]                  ·gc.alloc.rate.norm:              24824.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:          669.819 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     26400.159 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.772 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 69.830 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 39926.731 ops/s
[info]                  ·gc.alloc.rate:                   629.749 MB/sec
[info]                  ·gc.alloc.rate.norm:              24824.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:          669.817 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     26403.465 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.282 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 39965.769 ops/s
[info]                  ·gc.alloc.rate:               630.360 MB/sec
[info]                  ·gc.alloc.rate.norm:          24824.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:      670.147 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 26390.820 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 39938.563 ops/s
[info]                  ·gc.alloc.rate:                   630.052 MB/sec
[info]                  ·gc.alloc.rate.norm:              24824.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:          670.272 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     26408.659 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.461 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce":
[info]   39923.712 ±(99.9%) 157.185 ops/s [Average]
[info]   (min, avg, max) = (39855.860, 39923.712, 39965.769), stdev = 40.820
[info]   CI (99.9%): [39766.527, 40080.898] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:·gc.alloc.rate":
[info]   629.741 ±(99.9%) 2.392 MB/sec [Average]
[info]   (min, avg, max) = (628.714, 629.741, 630.360), stdev = 0.621
[info]   CI (99.9%): [627.349, 632.132] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   24824.011 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (24824.011, 24824.011, 24824.012), stdev = 0.001
[info]   CI (99.9%): [24824.009, 24824.013] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   638.346 ±(99.9%) 272.670 MB/sec [Average]
[info]   (min, avg, max) = (511.675, 638.346, 670.272), stdev = 70.811
[info]   CI (99.9%): [365.676, 911.016] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   25161.193 ±(99.9%) 10673.207 B/op [Average]
[info]   (min, avg, max) = (20202.864, 25161.193, 26408.659), stdev = 2771.798
[info]   CI (99.9%): [14487.987, 35834.400] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.383 ±(99.9%) 2.992 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.383, 1.772), stdev = 0.777
[info]   CI (99.9%): [≈ 0, 3.375] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   15.115 ±(99.9%) 117.914 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 15.115, 69.830), stdev = 30.622
[info]   CI (99.9%): [≈ 0, 133.028] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 3.000), stdev = 1.140
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 17.87% complete, ETA 01:49:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 28291.317 ops/s
[info] # Warmup Iteration   2: 40195.589 ops/s
[info] # Warmup Iteration   3: 41584.583 ops/s
[info] # Warmup Iteration   4: 41663.886 ops/s
[info] # Warmup Iteration   5: 41806.616 ops/s
[info] Iteration   1: 41505.648 ops/s
[info]                  ·gc.alloc.rate:               417.303 MB/sec
[info]                  ·gc.alloc.rate.norm:          15824.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.591 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 19399.363 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 41575.669 ops/s
[info]                  ·gc.alloc.rate:               418.009 MB/sec
[info]                  ·gc.alloc.rate.norm:          15824.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.593 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 19366.706 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 41474.527 ops/s
[info]                  ·gc.alloc.rate:                   417.001 MB/sec
[info]                  ·gc.alloc.rate.norm:              15824.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.602 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19413.861 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.395 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 41646.108 ops/s
[info]                  ·gc.alloc.rate:      418.716 MB/sec
[info]                  ·gc.alloc.rate.norm: 15824.010 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 41598.660 ops/s
[info]                  ·gc.alloc.rate:                   418.228 MB/sec
[info]                  ·gc.alloc.rate.norm:              15824.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.799 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25266.740 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.088 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 79.017 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala":
[info]   41560.123 ±(99.9%) 268.265 ops/s [Average]
[info]   (min, avg, max) = (41474.527, 41560.123, 41646.108), stdev = 69.668
[info]   CI (99.9%): [41291.857, 41828.388] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   417.851 ±(99.9%) 2.680 MB/sec [Average]
[info]   (min, avg, max) = (417.001, 417.851, 418.716), stdev = 0.696
[info]   CI (99.9%): [415.171, 420.532] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   15824.010 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (15824.010, 15824.010, 15824.010), stdev = 0.001
[info]   CI (99.9%): [15824.010, 15824.010] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   440.517 ±(99.9%) 983.364 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 440.517, 667.799), stdev = 255.377
[info]   CI (99.9%): [≈ 0, 1423.881] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   16689.334 ±(99.9%) 37236.015 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 16689.334, 25266.740), stdev = 9670.075
[info]   CI (99.9%): [≈ 0, 53925.349] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.420 ±(99.9%) 3.592 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.420, 2.088), stdev = 0.933
[info]   CI (99.9%): [≈ 0, 4.012] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   15.882 ±(99.9%) 135.904 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 15.882, 79.017), stdev = 35.294
[info]   CI (99.9%): [≈ 0, 151.786] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.800, 3.000), stdev = 1.095
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 18.07% complete, ETA 01:49:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 40012.520 ops/s
[info] # Warmup Iteration   2: 44543.148 ops/s
[info] # Warmup Iteration   3: 44637.206 ops/s
[info] # Warmup Iteration   4: 44908.529 ops/s
[info] # Warmup Iteration   5: 44468.531 ops/s
[info] Iteration   1: 44644.515 ops/s
[info]                  ·gc.alloc.rate:               437.966 MB/sec
[info]                  ·gc.alloc.rate.norm:          15440.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.603 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 18035.977 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 44782.538 ops/s
[info]                  ·gc.alloc.rate:               439.329 MB/sec
[info]                  ·gc.alloc.rate.norm:          15440.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.613 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 17980.405 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 44736.493 ops/s
[info]                  ·gc.alloc.rate:      438.881 MB/sec
[info]                  ·gc.alloc.rate.norm: 15440.010 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 44596.739 ops/s
[info]                  ·gc.alloc.rate:                   437.578 MB/sec
[info]                  ·gc.alloc.rate.norm:              15440.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.241 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23755.404 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.610 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 56.805 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 44624.021 ops/s
[info]                  ·gc.alloc.rate:                   437.803 MB/sec
[info]                  ·gc.alloc.rate.norm:              15440.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.149 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23739.969 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.202 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala":
[info]   44676.861 ±(99.9%) 304.307 ops/s [Average]
[info]   (min, avg, max) = (44596.739, 44676.861, 44782.538), stdev = 79.027
[info]   CI (99.9%): [44372.555, 44981.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   438.311 ±(99.9%) 2.904 MB/sec [Average]
[info]   (min, avg, max) = (437.578, 438.311, 439.329), stdev = 0.754
[info]   CI (99.9%): [435.407, 441.216] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   15440.010 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (15440.010, 15440.010, 15440.010), stdev = 0.001
[info]   CI (99.9%): [15440.009, 15440.011] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   473.921 ±(99.9%) 1066.534 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 473.921, 673.241), stdev = 276.976
[info]   CI (99.9%): [≈ 0, 1540.456] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   16702.351 ±(99.9%) 37613.033 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 16702.351, 23755.404), stdev = 9767.985
[info]   CI (99.9%): [≈ 0, 54315.384] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.334 ±(99.9%) 2.747 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.334, 1.610), stdev = 0.713
[info]   CI (99.9%): [≈ 0, 3.082] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   11.801 ±(99.9%) 96.943 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 11.801, 56.805), stdev = 25.176
[info]   CI (99.9%): [≈ 0, 108.744] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 3.000), stdev = 1.095
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 18.27% complete, ETA 01:48:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 39692.726 ops/s
[info] # Warmup Iteration   2: 43977.057 ops/s
[info] # Warmup Iteration   3: 44356.324 ops/s
[info] # Warmup Iteration   4: 44465.126 ops/s
[info] # Warmup Iteration   5: 44377.003 ops/s
[info] Iteration   1: 42754.658 ops/s
[info]                  ·gc.alloc.rate:                   370.535 MB/sec
[info]                  ·gc.alloc.rate.norm:              13640.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.585 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18832.290 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.149 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 44534.789 ops/s
[info]                  ·gc.alloc.rate:               385.967 MB/sec
[info]                  ·gc.alloc.rate.norm:          13640.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.596 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 18079.708 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 44615.686 ops/s
[info]                  ·gc.alloc.rate:               386.768 MB/sec
[info]                  ·gc.alloc.rate.norm:          13640.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.727 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 18046.890 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 44762.741 ops/s
[info]                  ·gc.alloc.rate:      388.065 MB/sec
[info]                  ·gc.alloc.rate.norm: 13640.010 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 44567.211 ops/s
[info]                  ·gc.alloc.rate:                   386.308 MB/sec
[info]                  ·gc.alloc.rate.norm:              13640.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.246 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23771.392 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.579 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 55.741 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc":
[info]   44247.017 ±(99.9%) 3229.931 ops/s [Average]
[info]   (min, avg, max) = (42754.658, 44247.017, 44762.741), stdev = 838.803
[info]   CI (99.9%): [41017.086, 47476.948] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   383.529 ±(99.9%) 28.137 MB/sec [Average]
[info]   (min, avg, max) = (370.535, 383.529, 388.065), stdev = 7.307
[info]   CI (99.9%): [355.392, 411.666] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   13640.010 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (13640.010, 13640.010, 13640.010), stdev = 0.001
[info]   CI (99.9%): [13640.009, 13640.010] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   441.631 ±(99.9%) 988.097 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 441.631, 673.246), stdev = 256.606
[info]   CI (99.9%): [≈ 0, 1429.727] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   15746.056 ±(99.9%) 35113.192 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 15746.056, 23771.392), stdev = 9118.784
[info]   CI (99.9%): [≈ 0, 50859.248] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space":
[info]   0.322 ±(99.9%) 2.706 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.322, 1.579), stdev = 0.703
[info]   CI (99.9%): [≈ 0, 3.028] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   11.378 ±(99.9%) 95.514 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 11.378, 55.741), stdev = 24.805
[info]   CI (99.9%): [≈ 0, 106.892] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.800, 3.000), stdev = 1.095
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 18.47% complete, ETA 01:48:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 29904.587 ops/s
[info] # Warmup Iteration   2: 34359.441 ops/s
[info] # Warmup Iteration   3: 34424.511 ops/s
[info] # Warmup Iteration   4: 34351.172 ops/s
[info] # Warmup Iteration   5: 34395.813 ops/s
[info] Iteration   1: 34483.987 ops/s
[info]                  ·gc.alloc.rate:                   800.412 MB/sec
[info]                  ·gc.alloc.rate.norm:              36520.013 B/op
[info]                  ·gc.churn.PS_Eden_Space:          674.698 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     30784.134 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.900 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 34508.915 ops/s
[info]                  ·gc.alloc.rate:               801.105 MB/sec
[info]                  ·gc.alloc.rate.norm:          36520.013 B/op
[info]                  ·gc.churn.PS_Eden_Space:      674.440 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 30745.753 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   3: 34514.309 ops/s
[info]                  ·gc.alloc.rate:                   801.152 MB/sec
[info]                  ·gc.alloc.rate.norm:              36520.013 B/op
[info]                  ·gc.churn.PS_Eden_Space:          674.362 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     30740.409 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.898 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 34358.142 ops/s
[info]                  ·gc.alloc.rate:                   797.246 MB/sec
[info]                  ·gc.alloc.rate.norm:              36520.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.243 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     61759.918 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.814 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 34443.617 ops/s
[info]                  ·gc.alloc.rate:               799.218 MB/sec
[info]                  ·gc.alloc.rate.norm:          36520.013 B/op
[info]                  ·gc.churn.PS_Eden_Space:      674.102 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 30802.871 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeUPickle":
[info]   34461.794 ±(99.9%) 247.649 ops/s [Average]
[info]   (min, avg, max) = (34358.142, 34461.794, 34514.309), stdev = 64.314
[info]   CI (99.9%): [34214.145, 34709.443] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeUPickle:·gc.alloc.rate":
[info]   799.827 ±(99.9%) 6.316 MB/sec [Average]
[info]   (min, avg, max) = (797.246, 799.827, 801.152), stdev = 1.640
[info]   CI (99.9%): [793.511, 806.143] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeUPickle:·gc.alloc.rate.norm":
[info]   36520.013 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (36520.013, 36520.013, 36520.014), stdev = 0.001
[info]   CI (99.9%): [36520.011, 36520.014] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeUPickle:·gc.churn.PS_Eden_Space":
[info]   809.169 ±(99.9%) 1160.397 MB/sec [Average]
[info]   (min, avg, max) = (674.102, 809.169, 1348.243), stdev = 301.352
[info]   CI (99.9%): [≈ 0, 1969.567] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   36966.617 ±(99.9%) 53369.545 B/op [Average]
[info]   (min, avg, max) = (30740.409, 36966.617, 61759.918), stdev = 13859.901
[info]   CI (99.9%): [≈ 0, 90336.162] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.083), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.167] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   1.523 ±(99.9%) 6.141 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.523, 3.814), stdev = 1.595
[info]   CI (99.9%): [≈ 0, 7.663] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeUPickle:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeUPickle:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 0.707
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 18.67% complete, ETA 01:48:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 11212.623 ops/s
[info] # Warmup Iteration   2: 15411.923 ops/s
[info] # Warmup Iteration   3: 15310.508 ops/s
[info] # Warmup Iteration   4: 15839.648 ops/s
[info] # Warmup Iteration   5: 15820.000 ops/s
[info] Iteration   1: 15811.758 ops/s
[info]                  ·gc.alloc.rate:               1129.003 MB/sec
[info]                  ·gc.alloc.rate.norm:          112376.027 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1344.229 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 133798.695 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 15824.022 ops/s
[info]                  ·gc.alloc.rate:               1129.888 MB/sec
[info]                  ·gc.alloc.rate.norm:          112376.039 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.131 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 66848.625 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 15603.667 ops/s
[info]                  ·gc.alloc.rate:                   1114.168 MB/sec
[info]                  ·gc.alloc.rate.norm:              112376.028 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.912 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     135649.064 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.299 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 15851.722 ops/s
[info]                  ·gc.alloc.rate:                   1132.131 MB/sec
[info]                  ·gc.alloc.rate.norm:              112376.027 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.551 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     133659.546 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.334 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 15870.082 ops/s
[info]                  ·gc.alloc.rate:               1133.184 MB/sec
[info]                  ·gc.alloc.rate.norm:          112376.029 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.804 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 66820.048 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce":
[info]   15792.250 ±(99.9%) 415.390 ops/s [Average]
[info]   (min, avg, max) = (15603.667, 15792.250, 15870.082), stdev = 107.875
[info]   CI (99.9%): [15376.860, 16207.640] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:·gc.alloc.rate":
[info]   1127.675 ±(99.9%) 29.784 MB/sec [Average]
[info]   (min, avg, max) = (1114.168, 1127.675, 1133.184), stdev = 7.735
[info]   CI (99.9%): [1097.891, 1157.458] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   112376.030 ±(99.9%) 0.020 B/op [Average]
[info]   (min, avg, max) = (112376.027, 112376.030, 112376.039), stdev = 0.005
[info]   CI (99.9%): [112376.010, 112376.050] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1076.325 ±(99.9%) 1417.865 MB/sec [Average]
[info]   (min, avg, max) = (672.131, 1076.325, 1346.551), stdev = 368.215
[info]   CI (99.9%): [≈ 0, 2494.191] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   107355.196 ±(99.9%) 142468.634 B/op [Average]
[info]   (min, avg, max) = (66820.048, 107355.196, 135649.064), stdev = 36998.652
[info]   CI (99.9%): [≈ 0, 249823.830] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.185 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.104), stdev = 0.048
[info]   CI (99.9%): [≈ 0, 0.218] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   3.326 ±(99.9%) 18.380 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.326, 10.334), stdev = 4.773
[info]   CI (99.9%): [≈ 0, 21.706] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 18.88% complete, ETA 01:48:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 9888.132 ops/s
[info] # Warmup Iteration   2: 16605.278 ops/s
[info] # Warmup Iteration   3: 16344.049 ops/s
[info] # Warmup Iteration   4: 16740.308 ops/s
[info] # Warmup Iteration   5: 16723.287 ops/s
[info] Iteration   1: 16367.296 ops/s
[info]                  ·gc.alloc.rate:                   993.086 MB/sec
[info]                  ·gc.alloc.rate.norm:              95496.028 B/op
[info]                  ·gc.churn.PS_Eden_Space:          668.119 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     64246.898 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.005 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 15837.804 ops/s
[info]                  ·gc.alloc.rate:                   961.009 MB/sec
[info]                  ·gc.alloc.rate.norm:              95496.037 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.259 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     132784.765 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.206 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 16564.220 ops/s
[info]                  ·gc.alloc.rate:               1004.779 MB/sec
[info]                  ·gc.alloc.rate.norm:          95468.800 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.138 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 63482.932 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   4: 16640.180 ops/s
[info]                  ·gc.alloc.rate:                   1009.385 MB/sec
[info]                  ·gc.alloc.rate.norm:              95464.026 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.256 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     126567.483 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.844 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 16717.346 ops/s
[info]                  ·gc.alloc.rate:                   1014.036 MB/sec
[info]                  ·gc.alloc.rate.norm:              95464.026 B/op
[info]                  ·gc.churn.PS_Eden_Space:          669.782 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     63055.031 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.960 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala":
[info]   16425.369 ±(99.9%) 1360.426 ops/s [Average]
[info]   (min, avg, max) = (15837.804, 16425.369, 16717.346), stdev = 353.298
[info]   CI (99.9%): [15064.943, 17785.796] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   996.459 ±(99.9%) 81.985 MB/sec [Average]
[info]   (min, avg, max) = (961.009, 996.459, 1014.036), stdev = 21.291
[info]   CI (99.9%): [914.473, 1078.444] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   95477.784 ±(99.9%) 64.586 B/op [Average]
[info]   (min, avg, max) = (95464.026, 95477.784, 95496.037), stdev = 16.773
[info]   CI (99.9%): [95413.197, 95542.370] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   936.110 ±(99.9%) 1410.092 MB/sec [Average]
[info]   (min, avg, max) = (668.119, 936.110, 1338.256), stdev = 366.196
[info]   CI (99.9%): [≈ 0, 2346.203] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   90027.422 ±(99.9%) 139637.241 B/op [Average]
[info]   (min, avg, max) = (63055.031, 90027.422, 132784.765), stdev = 36263.348
[info]   CI (99.9%): [≈ 0, 229664.663] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.156 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.104), stdev = 0.041
[info]   CI (99.9%): [≈ 0, 0.206] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   4.803 ±(99.9%) 14.910 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4.803, 9.844), stdev = 3.872
[info]   CI (99.9%): [≈ 0, 19.713] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 0.837
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 19.08% complete, ETA 01:47:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 74923.458 ops/s
[info] # Warmup Iteration   2: 79106.692 ops/s
[info] # Warmup Iteration   3: 79004.685 ops/s
[info] # Warmup Iteration   4: 79576.087 ops/s
[info] # Warmup Iteration   5: 79283.914 ops/s
[info] Iteration   1: 79582.291 ops/s
[info]                  ·gc.alloc.rate:      207.110 MB/sec
[info]                  ·gc.alloc.rate.norm: 4096.005 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 79479.721 ops/s
[info]                  ·gc.alloc.rate:      206.848 MB/sec
[info]                  ·gc.alloc.rate.norm: 4096.005 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 79213.182 ops/s
[info]                  ·gc.alloc.rate:               206.209 MB/sec
[info]                  ·gc.alloc.rate.norm:          4096.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.737 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 10164.801 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 79503.726 ops/s
[info]                  ·gc.alloc.rate:      206.910 MB/sec
[info]                  ·gc.alloc.rate.norm: 4096.005 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 79369.777 ops/s
[info]                  ·gc.alloc.rate:                   206.578 MB/sec
[info]                  ·gc.alloc.rate.norm:              4096.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.626 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10144.442 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.825 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala":
[info]   79429.739 ±(99.9%) 550.443 ops/s [Average]
[info]   (min, avg, max) = (79213.182, 79429.739, 79582.291), stdev = 142.948
[info]   CI (99.9%): [78879.296, 79980.183] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   206.731 ±(99.9%) 1.341 MB/sec [Average]
[info]   (min, avg, max) = (206.209, 206.731, 207.110), stdev = 0.348
[info]   CI (99.9%): [205.390, 208.072] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   4096.005 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4096.005, 4096.005, 4096.005), stdev = 0.001
[info]   CI (99.9%): [4096.005, 4096.005] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   204.673 ±(99.9%) 1079.179 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 204.673, 511.737), stdev = 280.259
[info]   CI (99.9%): [≈ 0, 1283.852] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   4061.849 ±(99.9%) 21416.973 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4061.849, 10164.801), stdev = 5561.920
[info]   CI (99.9%): [≈ 0, 25478.822] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.165 ±(99.9%) 1.421 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.165, 0.825), stdev = 0.369
[info]   CI (99.9%): [≈ 0, 1.586] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:·gc.count":
[info]   2.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.000), stdev = 0.548
[info]   CI (99.9%): [2.000, 2.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:·gc.time":
[info]   3.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 2.000), stdev = 0.894
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 19.28% complete, ETA 01:47:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7672.953 ops/s
[info] # Warmup Iteration   2: 14119.806 ops/s
[info] # Warmup Iteration   3: 14098.831 ops/s
[info] # Warmup Iteration   4: 14391.275 ops/s
[info] # Warmup Iteration   5: 14246.454 ops/s
[info] Iteration   1: 13983.236 ops/s
[info]                  ·gc.alloc.rate:                   1339.755 MB/sec
[info]                  ·gc.alloc.rate.norm:              150800.033 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.597 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     150557.069 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 14.058 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 13849.364 ops/s
[info]                  ·gc.alloc.rate:               1327.135 MB/sec
[info]                  ·gc.alloc.rate.norm:          150800.031 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1339.051 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 152154.040 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 14388.442 ops/s
[info]                  ·gc.alloc.rate:                   1379.176 MB/sec
[info]                  ·gc.alloc.rate.norm:              150800.041 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.439 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     146673.858 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.277 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 14397.644 ops/s
[info]                  ·gc.alloc.rate:                   1379.518 MB/sec
[info]                  ·gc.alloc.rate.norm:              150800.030 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.266 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     146727.822 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.827 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 14368.920 ops/s
[info]                  ·gc.alloc.rate:               1376.781 MB/sec
[info]                  ·gc.alloc.rate.norm:          150800.030 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1344.876 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 147305.521 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson":
[info]   14197.521 ±(99.9%) 1005.985 ops/s [Average]
[info]   (min, avg, max) = (13849.364, 14197.521, 14397.644), stdev = 261.251
[info]   CI (99.9%): [13191.536, 15203.507] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1360.473 ±(99.9%) 96.633 MB/sec [Average]
[info]   (min, avg, max) = (1327.135, 1360.473, 1379.518), stdev = 25.095
[info]   CI (99.9%): [1263.840, 1457.106] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   150800.033 ±(99.9%) 0.018 B/op [Average]
[info]   (min, avg, max) = (150800.030, 150800.033, 150800.041), stdev = 0.005
[info]   CI (99.9%): [150800.015, 150800.051] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1341.046 ±(99.9%) 10.923 MB/sec [Average]
[info]   (min, avg, max) = (1337.597, 1341.046, 1344.876), stdev = 2.837
[info]   CI (99.9%): [1330.122, 1351.969] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   148683.662 ±(99.9%) 9687.464 B/op [Average]
[info]   (min, avg, max) = (146673.858, 148683.662, 152154.040), stdev = 2515.804
[info]   CI (99.9%): [138996.198, 158371.126] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.204 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.125), stdev = 0.053
[info]   CI (99.9%): [≈ 0, 0.246] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   4.632 ±(99.9%) 22.954 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4.632, 14.058), stdev = 5.961
[info]   CI (99.9%): [≈ 0, 27.586] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 19.48% complete, ETA 01:47:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 11586.727 ops/s
[info] # Warmup Iteration   2: 13888.532 ops/s
[info] # Warmup Iteration   3: 14186.580 ops/s
[info] # Warmup Iteration   4: 14158.829 ops/s
[info] # Warmup Iteration   5: 14212.251 ops/s
[info] Iteration   1: 14172.203 ops/s
[info]                  ·gc.alloc.rate:                   992.932 MB/sec
[info]                  ·gc.alloc.rate.norm:              110216.030 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.513 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     149574.651 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.623 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 14176.462 ops/s
[info]                  ·gc.alloc.rate:               992.799 MB/sec
[info]                  ·gc.alloc.rate.norm:          110216.030 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.476 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 74766.227 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 13910.839 ops/s
[info]                  ·gc.alloc.rate:                   974.180 MB/sec
[info]                  ·gc.alloc.rate.norm:              110214.765 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.878 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     152380.385 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.065 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 13823.293 ops/s
[info]                  ·gc.alloc.rate:               967.816 MB/sec
[info]                  ·gc.alloc.rate.norm:          110192.031 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.486 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 76680.675 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 13815.022 ops/s
[info]                  ·gc.alloc.rate:                   967.247 MB/sec
[info]                  ·gc.alloc.rate.norm:              110192.031 B/op
[info]                  ·gc.churn.PS_Eden_Space:          674.097 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     76795.405 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.743 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readUPickle":
[info]   13979.564 ±(99.9%) 699.759 ops/s [Average]
[info]   (min, avg, max) = (13815.022, 13979.564, 14176.462), stdev = 181.725
[info]   CI (99.9%): [13279.804, 14679.323] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readUPickle:·gc.alloc.rate":
[info]   978.995 ±(99.9%) 49.872 MB/sec [Average]
[info]   (min, avg, max) = (967.247, 978.995, 992.932), stdev = 12.951
[info]   CI (99.9%): [929.123, 1028.866] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readUPickle:·gc.alloc.rate.norm":
[info]   110206.178 ±(99.9%) 49.766 B/op [Average]
[info]   (min, avg, max) = (110192.031, 110206.178, 110216.030), stdev = 12.924
[info]   CI (99.9%): [110156.411, 110255.944] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readUPickle:·gc.churn.PS_Eden_Space":
[info]   943.090 ±(99.9%) 1420.488 MB/sec [Average]
[info]   (min, avg, max) = (673.476, 943.090, 1347.513), stdev = 368.896
[info]   CI (99.9%): [≈ 0, 2363.578] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   106039.469 ±(99.9%) 158040.229 B/op [Average]
[info]   (min, avg, max) = (74766.227, 106039.469, 152380.385), stdev = 41042.546
[info]   CI (99.9%): [≈ 0, 264079.697] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.108 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.137] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   3.286 ±(99.9%) 12.145 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.286, 7.065), stdev = 3.154
[info]   CI (99.9%): [≈ 0, 15.431] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readUPickle:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readUPickle:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 19.68% complete, ETA 01:47:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 39914.313 ops/s
[info] # Warmup Iteration   2: 56881.840 ops/s
[info] # Warmup Iteration   3: 54679.841 ops/s
[info] # Warmup Iteration   4: 57121.476 ops/s
[info] # Warmup Iteration   5: 57306.038 ops/s
[info] Iteration   1: 56628.318 ops/s
[info]                  ·gc.alloc.rate:               1404.431 MB/sec
[info]                  ·gc.alloc.rate.norm:          39016.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1342.246 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 37288.462 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 57084.540 ops/s
[info]                  ·gc.alloc.rate:                   1415.119 MB/sec
[info]                  ·gc.alloc.rate.norm:              39016.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.873 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     37024.121 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.296 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 57137.937 ops/s
[info]                  ·gc.alloc.rate:               1416.491 MB/sec
[info]                  ·gc.alloc.rate.norm:          39016.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1344.331 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 37028.425 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 56158.857 ops/s
[info]                  ·gc.alloc.rate:                   1392.168 MB/sec
[info]                  ·gc.alloc.rate.norm:              39016.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.918 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     37719.837 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.750 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 56913.777 ops/s
[info]                  ·gc.alloc.rate:                   1410.865 MB/sec
[info]                  ·gc.alloc.rate.norm:              39016.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.901 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     37274.802 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.303 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce":
[info]   56784.686 ±(99.9%) 1549.228 ops/s [Average]
[info]   (min, avg, max) = (56158.857, 56784.686, 57137.937), stdev = 402.329
[info]   CI (99.9%): [55235.458, 58333.913] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1407.815 ±(99.9%) 38.226 MB/sec [Average]
[info]   (min, avg, max) = (1392.168, 1407.815, 1416.491), stdev = 9.927
[info]   CI (99.9%): [1369.589, 1446.041] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   39016.008 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (39016.008, 39016.008, 39016.008), stdev = 0.001
[info]   CI (99.9%): [39016.007, 39016.009] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1344.654 ±(99.9%) 8.868 MB/sec [Average]
[info]   (min, avg, max) = (1342.246, 1344.654, 1347.901), stdev = 2.303
[info]   CI (99.9%): [1335.786, 1353.522] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   37267.129 ±(99.9%) 1091.661 B/op [Average]
[info]   (min, avg, max) = (37024.121, 37267.129, 37719.837), stdev = 283.501
[info]   CI (99.9%): [36175.468, 38358.790] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.164 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.083), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.210] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   1.270 ±(99.9%) 4.546 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.270, 2.303), stdev = 1.181
[info]   CI (99.9%): [≈ 0, 5.815] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 19.88% complete, ETA 01:46:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 52906.642 ops/s
[info] # Warmup Iteration   2: 76303.133 ops/s
[info] # Warmup Iteration   3: 76203.320 ops/s
[info] # Warmup Iteration   4: 74869.774 ops/s
[info] # Warmup Iteration   5: 76220.298 ops/s
[info] Iteration   1: 76677.679 ops/s
[info]                  ·gc.alloc.rate:                   1161.075 MB/sec
[info]                  ·gc.alloc.rate.norm:              23832.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.298 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27428.587 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.282 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 77697.676 ops/s
[info]                  ·gc.alloc.rate:                   1176.560 MB/sec
[info]                  ·gc.alloc.rate.norm:              23832.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.258 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27087.055 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.265 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 77682.192 ops/s
[info]                  ·gc.alloc.rate:               1176.288 MB/sec
[info]                  ·gc.alloc.rate.norm:          23832.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:      669.155 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 13557.311 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   4: 77746.186 ops/s
[info]                  ·gc.alloc.rate:                   1177.245 MB/sec
[info]                  ·gc.alloc.rate.norm:              23832.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.628 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27119.275 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.843 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 77715.054 ops/s
[info]                  ·gc.alloc.rate:                   1176.755 MB/sec
[info]                  ·gc.alloc.rate.norm:              23832.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.534 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27169.165 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.108 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala":
[info]   77503.758 ±(99.9%) 1780.550 ops/s [Average]
[info]   (min, avg, max) = (76677.679, 77503.758, 77746.186), stdev = 462.403
[info]   CI (99.9%): [75723.208, 79284.307] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1173.585 ±(99.9%) 26.961 MB/sec [Average]
[info]   (min, avg, max) = (1161.075, 1173.585, 1177.245), stdev = 7.002
[info]   CI (99.9%): [1146.624, 1200.546] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   23832.006 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (23832.006, 23832.006, 23832.006), stdev = 0.001
[info]   CI (99.9%): [23832.005, 23832.006] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1204.775 ±(99.9%) 1152.989 MB/sec [Average]
[info]   (min, avg, max) = (669.155, 1204.775, 1341.534), stdev = 299.427
[info]   CI (99.9%): [51.786, 2357.763] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   24472.279 ±(99.9%) 23501.007 B/op [Average]
[info]   (min, avg, max) = (13557.311, 24472.279, 27428.587), stdev = 6103.137
[info]   CI (99.9%): [971.271, 47973.286] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.146 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.104), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.100 ±(99.9%) 2.953 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.100, 2.108), stdev = 0.767
[info]   CI (99.9%): [≈ 0, 4.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.800, 3.000), stdev = 1.095
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 20.08% complete, ETA 01:46:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 201234.449 ops/s
[info] # Warmup Iteration   2: 212129.608 ops/s
[info] # Warmup Iteration   3: 215131.181 ops/s
[info] # Warmup Iteration   4: 206076.206 ops/s
[info] # Warmup Iteration   5: 214058.214 ops/s
[info] Iteration   1: 213992.636 ops/s
[info]                  ·gc.alloc.rate:               339.377 MB/sec
[info]                  ·gc.alloc.rate.norm:          2496.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.621 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3762.797 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 216542.365 ops/s
[info]                  ·gc.alloc.rate:      343.434 MB/sec
[info]                  ·gc.alloc.rate.norm: 2496.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 215652.350 ops/s
[info]                  ·gc.alloc.rate:               342.021 MB/sec
[info]                  ·gc.alloc.rate.norm:          2496.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.648 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3733.906 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 215332.920 ops/s
[info]                  ·gc.alloc.rate:                   341.533 MB/sec
[info]                  ·gc.alloc.rate.norm:              2496.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.641 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3739.194 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.228 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 213076.126 ops/s
[info]                  ·gc.alloc.rate:      337.912 MB/sec
[info]                  ·gc.alloc.rate.norm: 2496.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala":
[info]   214919.279 ±(99.9%) 5307.320 ops/s [Average]
[info]   (min, avg, max) = (213076.126, 214919.279, 216542.365), stdev = 1378.294
[info]   CI (99.9%): [209611.959, 220226.599] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   340.856 ±(99.9%) 8.462 MB/sec [Average]
[info]   (min, avg, max) = (337.912, 340.856, 343.434), stdev = 2.197
[info]   CI (99.9%): [332.394, 349.317] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   2496.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2496.002, 2496.002, 2496.002), stdev = 0.001
[info]   CI (99.9%): [2496.002, 2496.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   306.982 ±(99.9%) 1079.085 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 306.982, 511.648), stdev = 280.235
[info]   CI (99.9%): [≈ 0, 1386.067] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   2247.179 ±(99.9%) 7899.263 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2247.179, 3762.797), stdev = 2051.414
[info]   CI (99.9%): [≈ 0, 10146.442] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.006 ±(99.9%) 0.054 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.006, 0.031), stdev = 0.014
[info]   CI (99.9%): [≈ 0, 0.060] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.046 ±(99.9%) 0.393 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.228), stdev = 0.102
[info]   CI (99.9%): [≈ 0, 0.438] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 1.095
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 20.28% complete, ETA 01:46:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 215586.299 ops/s
[info] # Warmup Iteration   2: 229365.864 ops/s
[info] # Warmup Iteration   3: 232862.456 ops/s
[info] # Warmup Iteration   4: 233229.598 ops/s
[info] # Warmup Iteration   5: 232425.707 ops/s
[info] Iteration   1: 232822.594 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 232771.136 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 232638.343 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 232950.491 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 228893.600 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc":
[info]   232015.233 ±(99.9%) 6733.340 ops/s [Average]
[info]   (min, avg, max) = (228893.600, 232015.233, 232950.491), stdev = 1748.627
[info]   CI (99.9%): [225281.893, 238748.573] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (0.002, 0.002, 0.002), stdev = 0.001
[info]   CI (99.9%): [0.002, 0.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 20.48% complete, ETA 01:46:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 54465.471 ops/s
[info] # Warmup Iteration   2: 73508.969 ops/s
[info] # Warmup Iteration   3: 73465.181 ops/s
[info] # Warmup Iteration   4: 67628.647 ops/s
[info] # Warmup Iteration   5: 68040.917 ops/s
[info] Iteration   1: 70917.118 ops/s
[info]                  ·gc.alloc.rate:                   1338.874 MB/sec
[info]                  ·gc.alloc.rate.norm:              29712.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.035 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29737.767 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.462 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 70016.477 ops/s
[info]                  ·gc.alloc.rate:                   1321.815 MB/sec
[info]                  ·gc.alloc.rate.norm:              29712.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.296 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     30149.910 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.936 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 67907.599 ops/s
[info]                  ·gc.alloc.rate:               1282.007 MB/sec
[info]                  ·gc.alloc.rate.norm:          29712.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:      671.129 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 15554.186 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 68657.141 ops/s
[info]                  ·gc.alloc.rate:                   1296.741 MB/sec
[info]                  ·gc.alloc.rate.norm:              29712.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.247 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     30800.498 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.386 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 68851.935 ops/s
[info]                  ·gc.alloc.rate:                   1299.986 MB/sec
[info]                  ·gc.alloc.rate.norm:              29712.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.794 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     30758.960 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.952 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson":
[info]   69270.054 ±(99.9%) 4587.253 ops/s [Average]
[info]   (min, avg, max) = (67907.599, 69270.054, 70917.118), stdev = 1191.295
[info]   CI (99.9%): [64682.801, 73857.307] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1307.885 ±(99.9%) 86.331 MB/sec [Average]
[info]   (min, avg, max) = (1282.007, 1307.885, 1338.874), stdev = 22.420
[info]   CI (99.9%): [1221.554, 1394.215] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   29712.006 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (29712.006, 29712.006, 29712.007), stdev = 0.001
[info]   CI (99.9%): [29712.005, 29712.007] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1208.500 ±(99.9%) 1156.766 MB/sec [Average]
[info]   (min, avg, max) = (671.129, 1208.500, 1345.794), stdev = 300.408
[info]   CI (99.9%): [51.734, 2365.266] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   27400.264 ±(99.9%) 25556.535 B/op [Average]
[info]   (min, avg, max) = (15554.186, 27400.264, 30800.498), stdev = 6636.951
[info]   CI (99.9%): [1843.730, 52956.799] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.150 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.104), stdev = 0.039
[info]   CI (99.9%): [≈ 0, 0.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.947 ±(99.9%) 3.446 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.947, 2.386), stdev = 0.895
[info]   CI (99.9%): [≈ 0, 4.393] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 20.68% complete, ETA 01:45:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 15561.134 ops/s
[info] # Warmup Iteration   2: 17607.267 ops/s
[info] # Warmup Iteration   3: 17615.514 ops/s
[info] # Warmup Iteration   4: 17622.618 ops/s
[info] # Warmup Iteration   5: 17092.921 ops/s
[info] Iteration   1: 17617.101 ops/s
[info]                  ·gc.alloc.rate:               612.160 MB/sec
[info]                  ·gc.alloc.rate.norm:          54688.034 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.597 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 45704.107 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 17691.490 ops/s
[info]                  ·gc.alloc.rate:                   614.866 MB/sec
[info]                  ·gc.alloc.rate.norm:              54686.639 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.929 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     59939.792 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.562 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 138.890 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 17636.517 ops/s
[info]                  ·gc.alloc.rate:                   612.838 MB/sec
[info]                  ·gc.alloc.rate.norm:              54688.024 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.822 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60130.088 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.573 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 17648.382 ops/s
[info]                  ·gc.alloc.rate:               613.237 MB/sec
[info]                  ·gc.alloc.rate.norm:          54688.024 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.470 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 60059.506 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 17601.420 ops/s
[info]                  ·gc.alloc.rate:                   611.624 MB/sec
[info]                  ·gc.alloc.rate.norm:              54688.025 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.414 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60213.015 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.584 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeUPickle":
[info]   17638.982 ±(99.9%) 132.571 ops/s [Average]
[info]   (min, avg, max) = (17601.420, 17638.982, 17691.490), stdev = 34.428
[info]   CI (99.9%): [17506.411, 17771.553] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeUPickle:·gc.alloc.rate":
[info]   612.945 ±(99.9%) 4.774 MB/sec [Average]
[info]   (min, avg, max) = (611.624, 612.945, 614.866), stdev = 1.240
[info]   CI (99.9%): [608.171, 617.719] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeUPickle:·gc.alloc.rate.norm":
[info]   54687.749 ±(99.9%) 2.390 B/op [Average]
[info]   (min, avg, max) = (54686.639, 54687.749, 54688.034), stdev = 0.621
[info]   CI (99.9%): [54685.359, 54690.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space":
[info]   641.247 ±(99.9%) 279.081 MB/sec [Average]
[info]   (min, avg, max) = (511.597, 641.247, 673.929), stdev = 72.477
[info]   CI (99.9%): [362.165, 920.328] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   57209.302 ±(99.9%) 24768.803 B/op [Average]
[info]   (min, avg, max) = (45704.107, 57209.302, 60213.015), stdev = 6432.380
[info]   CI (99.9%): [32440.498, 81978.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space":
[info]   0.337 ±(99.9%) 2.638 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.337, 1.562), stdev = 0.685
[info]   CI (99.9%): [≈ 0, 2.975] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   30.009 ±(99.9%) 234.620 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 30.009, 138.890), stdev = 60.930
[info]   CI (99.9%): [≈ 0, 264.630] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeUPickle:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeUPickle:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 20.88% complete, ETA 01:45:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 18236.699 ops/s
[info] # Warmup Iteration   2: 26667.319 ops/s
[info] # Warmup Iteration   3: 26836.454 ops/s
[info] # Warmup Iteration   4: 27069.977 ops/s
[info] # Warmup Iteration   5: 26876.675 ops/s
[info] Iteration   1: 27090.740 ops/s
[info]                  ·gc.alloc.rate:               602.180 MB/sec
[info]                  ·gc.alloc.rate.norm:          34984.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.597 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 29721.586 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 27146.940 ops/s
[info]                  ·gc.alloc.rate:                   603.526 MB/sec
[info]                  ·gc.alloc.rate.norm:              34984.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:          669.229 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     38792.523 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.793 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 103.918 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 27301.839 ops/s
[info]                  ·gc.alloc.rate:                   607.012 MB/sec
[info]                  ·gc.alloc.rate.norm:              34984.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:          669.298 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     38573.742 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.600 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 27304.545 ops/s
[info]                  ·gc.alloc.rate:               606.984 MB/sec
[info]                  ·gc.alloc.rate.norm:          34984.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:      669.551 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 38590.116 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 27279.810 ops/s
[info]                  ·gc.alloc.rate:                   606.451 MB/sec
[info]                  ·gc.alloc.rate.norm:              34984.017 B/op
[info]                  ·gc.churn.PS_Eden_Space:          669.552 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     38624.061 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.402 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce":
[info]   27224.775 ±(99.9%) 381.945 ops/s [Average]
[info]   (min, avg, max) = (27090.740, 27224.775, 27304.545), stdev = 99.190
[info]   CI (99.9%): [26842.829, 27606.720] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.alloc.rate":
[info]   605.231 ±(99.9%) 8.600 MB/sec [Average]
[info]   (min, avg, max) = (602.180, 605.231, 607.012), stdev = 2.233
[info]   CI (99.9%): [596.631, 613.830] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   34984.016 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (34984.016, 34984.016, 34984.017), stdev = 0.001
[info]   CI (99.9%): [34984.014, 34984.018] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   637.845 ±(99.9%) 271.759 MB/sec [Average]
[info]   (min, avg, max) = (511.597, 637.845, 669.552), stdev = 70.575
[info]   CI (99.9%): [366.087, 909.604] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   36860.406 ±(99.9%) 15370.501 B/op [Average]
[info]   (min, avg, max) = (29721.586, 36860.406, 38792.523), stdev = 3991.670
[info]   CI (99.9%): [21489.905, 52230.906] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.379 ±(99.9%) 3.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.379, 1.793), stdev = 0.791
[info]   CI (99.9%): [≈ 0, 3.424] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   21.984 ±(99.9%) 176.470 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 21.984, 103.918), stdev = 45.829
[info]   CI (99.9%): [≈ 0, 198.454] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 3.000), stdev = 0.894
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 21.08% complete, ETA 01:45:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 54948.969 ops/s
[info] # Warmup Iteration   2: 87616.905 ops/s
[info] # Warmup Iteration   3: 82946.958 ops/s
[info] # Warmup Iteration   4: 89647.249 ops/s
[info] # Warmup Iteration   5: 89869.349 ops/s
[info] Iteration   1: 89688.996 ops/s
[info]                  ·gc.alloc.rate:                   1235.624 MB/sec
[info]                  ·gc.alloc.rate.norm:              21680.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1335.489 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23432.225 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.731 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 87991.683 ops/s
[info]                  ·gc.alloc.rate:                   1212.704 MB/sec
[info]                  ·gc.alloc.rate.norm:              21680.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.962 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23901.409 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.234 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 87772.673 ops/s
[info]                  ·gc.alloc.rate:                   1209.094 MB/sec
[info]                  ·gc.alloc.rate.norm:              21680.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.003 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23991.444 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.373 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 87844.910 ops/s
[info]                  ·gc.alloc.rate:                   1210.084 MB/sec
[info]                  ·gc.alloc.rate.norm:              21680.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.908 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24005.948 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.746 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 89179.730 ops/s
[info]                  ·gc.alloc.rate:                   1228.442 MB/sec
[info]                  ·gc.alloc.rate.norm:              21680.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.209 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23687.799 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.735 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala":
[info]   88495.598 ±(99.9%) 3385.601 ops/s [Average]
[info]   (min, avg, max) = (87772.673, 88495.598, 89688.996), stdev = 879.230
[info]   CI (99.9%): [85109.998, 91881.199] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1219.189 ±(99.9%) 46.472 MB/sec [Average]
[info]   (min, avg, max) = (1209.094, 1219.189, 1235.624), stdev = 12.069
[info]   CI (99.9%): [1172.718, 1265.661] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   21680.005 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (21680.005, 21680.005, 21680.005), stdev = 0.001
[info]   CI (99.9%): [21680.005, 21680.005] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1338.514 ±(99.9%) 10.081 MB/sec [Average]
[info]   (min, avg, max) = (1335.489, 1338.514, 1342.209), stdev = 2.618
[info]   CI (99.9%): [1328.433, 1348.595] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   23803.765 ±(99.9%) 937.546 B/op [Average]
[info]   (min, avg, max) = (23432.225, 23803.765, 24005.948), stdev = 243.478
[info]   CI (99.9%): [22866.219, 24741.311] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.156 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.125), stdev = 0.041
[info]   CI (99.9%): [≈ 0, 0.211] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.964 ±(99.9%) 2.801 B/op [Average]
[info]   (min, avg, max) = (0.373, 0.964, 2.234), stdev = 0.727
[info]   CI (99.9%): [≈ 0, 3.765] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 21.29% complete, ETA 01:44:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 109560.296 ops/s
[info] # Warmup Iteration   2: 124233.129 ops/s
[info] # Warmup Iteration   3: 122233.867 ops/s
[info] # Warmup Iteration   4: 124516.117 ops/s
[info] # Warmup Iteration   5: 126062.194 ops/s
[info] Iteration   1: 125718.658 ops/s
[info]                  ·gc.alloc.rate:                   491.009 MB/sec
[info]                  ·gc.alloc.rate.norm:              6144.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.855 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6404.842 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.782 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 125386.572 ops/s
[info]                  ·gc.alloc.rate:               489.471 MB/sec
[info]                  ·gc.alloc.rate.norm:          6144.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.585 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6421.594 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 125650.090 ops/s
[info]                  ·gc.alloc.rate:                   490.513 MB/sec
[info]                  ·gc.alloc.rate.norm:              6144.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.143 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8431.563 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.616 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 20.236 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 125788.071 ops/s
[info]                  ·gc.alloc.rate:                   491.052 MB/sec
[info]                  ·gc.alloc.rate.norm:              6144.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.133 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8422.180 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.260 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 126037.276 ops/s
[info]                  ·gc.alloc.rate:      492.006 MB/sec
[info]                  ·gc.alloc.rate.norm: 6144.003 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala":
[info]   125716.134 ±(99.9%) 905.692 ops/s [Average]
[info]   (min, avg, max) = (125386.572, 125716.134, 126037.276), stdev = 235.205
[info]   CI (99.9%): [124810.441, 126621.826] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   490.810 ±(99.9%) 3.556 MB/sec [Average]
[info]   (min, avg, max) = (489.471, 490.810, 492.006), stdev = 0.924
[info]   CI (99.9%): [487.254, 494.367] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   6144.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (6144.003, 6144.003, 6144.004), stdev = 0.001
[info]   CI (99.9%): [6144.003, 6144.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   473.943 ±(99.9%) 1066.485 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 473.943, 673.143), stdev = 276.963
[info]   CI (99.9%): [≈ 0, 1540.428] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   5936.036 ±(99.9%) 13352.997 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 5936.036, 8431.563), stdev = 3467.731
[info]   CI (99.9%): [≈ 0, 19289.033] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.340 ±(99.9%) 2.748 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.340, 1.616), stdev = 0.714
[info]   CI (99.9%): [≈ 0, 3.088] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   4.256 ±(99.9%) 34.421 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4.256, 20.236), stdev = 8.939
[info]   CI (99.9%): [≈ 0, 38.676] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 3.000), stdev = 1.140
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 21.49% complete, ETA 01:44:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 10335.202 ops/s
[info] # Warmup Iteration   2: 22473.187 ops/s
[info] # Warmup Iteration   3: 21929.839 ops/s
[info] # Warmup Iteration   4: 22469.222 ops/s
[info] # Warmup Iteration   5: 22581.469 ops/s
[info] Iteration   1: 22581.476 ops/s
[info]                  ·gc.alloc.rate:                   1262.185 MB/sec
[info]                  ·gc.alloc.rate.norm:              87944.256 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.285 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     92898.281 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.902 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 22647.422 ops/s
[info]                  ·gc.alloc.rate:                   1265.674 MB/sec
[info]                  ·gc.alloc.rate.norm:              87944.019 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.411 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     92720.189 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.340 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 22582.806 ops/s
[info]                  ·gc.alloc.rate:                   1261.934 MB/sec
[info]                  ·gc.alloc.rate.norm:              87944.019 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1335.962 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     93103.076 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.451 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 22630.468 ops/s
[info]                  ·gc.alloc.rate:               1264.543 MB/sec
[info]                  ·gc.alloc.rate.norm:          87944.020 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1338.217 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 93067.779 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 22613.957 ops/s
[info]                  ·gc.alloc.rate:                   1263.612 MB/sec
[info]                  ·gc.alloc.rate.norm:              87944.019 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.628 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     93304.116 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.449 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson":
[info]   22611.226 ±(99.9%) 111.944 ops/s [Average]
[info]   (min, avg, max) = (22581.476, 22611.226, 22647.422), stdev = 29.072
[info]   CI (99.9%): [22499.282, 22723.170] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1263.589 ±(99.9%) 6.079 MB/sec [Average]
[info]   (min, avg, max) = (1261.934, 1263.589, 1265.674), stdev = 1.579
[info]   CI (99.9%): [1257.510, 1269.669] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   87944.067 ±(99.9%) 0.407 B/op [Average]
[info]   (min, avg, max) = (87944.019, 87944.067, 87944.256), stdev = 0.106
[info]   CI (99.9%): [87943.660, 87944.474] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1336.501 ±(99.9%) 11.386 MB/sec [Average]
[info]   (min, avg, max) = (1333.285, 1336.501, 1340.628), stdev = 2.957
[info]   CI (99.9%): [1325.114, 1347.887] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   93018.688 ±(99.9%) 849.326 B/op [Average]
[info]   (min, avg, max) = (92720.189, 93018.688, 93304.116), stdev = 220.567
[info]   CI (99.9%): [92169.362, 93868.015] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   2.028 ±(99.9%) 6.353 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.028, 4.340), stdev = 1.650
[info]   CI (99.9%): [≈ 0, 8.381] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 21.69% complete, ETA 01:44:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 20096.345 ops/s
[info] # Warmup Iteration   2: 24318.599 ops/s
[info] # Warmup Iteration   3: 24214.243 ops/s
[info] # Warmup Iteration   4: 24325.586 ops/s
[info] # Warmup Iteration   5: 24375.923 ops/s
[info] Iteration   1: 24466.835 ops/s
[info]                  ·gc.alloc.rate:               562.694 MB/sec
[info]                  ·gc.alloc.rate.norm:          36184.018 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.759 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 32908.601 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 24497.757 ops/s
[info]                  ·gc.alloc.rate:                   563.433 MB/sec
[info]                  ·gc.alloc.rate.norm:              36184.018 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.352 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     43243.115 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.652 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 106.081 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 24526.996 ops/s
[info]                  ·gc.alloc.rate:                   563.904 MB/sec
[info]                  ·gc.alloc.rate.norm:              36184.018 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.146 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     43193.757 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.343 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 24554.228 ops/s
[info]                  ·gc.alloc.rate:      564.658 MB/sec
[info]                  ·gc.alloc.rate.norm: 36184.018 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 24522.344 ops/s
[info]                  ·gc.alloc.rate:               563.773 MB/sec
[info]                  ·gc.alloc.rate.norm:          36184.020 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.766 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 43179.425 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readUPickle":
[info]   24513.632 ±(99.9%) 126.904 ops/s [Average]
[info]   (min, avg, max) = (24466.835, 24513.632, 24554.228), stdev = 32.957
[info]   CI (99.9%): [24386.728, 24640.536] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readUPickle:·gc.alloc.rate":
[info]   563.692 ±(99.9%) 2.755 MB/sec [Average]
[info]   (min, avg, max) = (562.694, 563.692, 564.658), stdev = 0.715
[info]   CI (99.9%): [560.938, 566.447] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readUPickle:·gc.alloc.rate.norm":
[info]   36184.018 ±(99.9%) 0.004 B/op [Average]
[info]   (min, avg, max) = (36184.018, 36184.018, 36184.020), stdev = 0.001
[info]   CI (99.9%): [36184.014, 36184.023] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readUPickle:·gc.churn.PS_Eden_Space":
[info]   506.205 ±(99.9%) 1122.356 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 506.205, 673.352), stdev = 291.472
[info]   CI (99.9%): [≈ 0, 1628.561] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   32504.980 ±(99.9%) 72045.072 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 32504.980, 43243.115), stdev = 18709.876
[info]   CI (99.9%): [≈ 0, 104550.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space":
[info]   0.347 ±(99.9%) 2.812 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.347, 1.652), stdev = 0.730
[info]   CI (99.9%): [≈ 0, 3.159] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   22.285 ±(99.9%) 180.597 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 22.285, 106.081), stdev = 46.900
[info]   CI (99.9%): [≈ 0, 202.882] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readUPickle:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readUPickle:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 3.000), stdev = 1.095
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 21.89% complete, ETA 01:44:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 134642.185 ops/s
[info] # Warmup Iteration   2: 173292.877 ops/s
[info] # Warmup Iteration   3: 176637.562 ops/s
[info] # Warmup Iteration   4: 176639.262 ops/s
[info] # Warmup Iteration   5: 177150.885 ops/s
[info] Iteration   1: 176627.692 ops/s
[info]                  ·gc.alloc.rate:                   1158.154 MB/sec
[info]                  ·gc.alloc.rate.norm:              10320.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.273 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11942.820 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.742 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 176258.603 ops/s
[info]                  ·gc.alloc.rate:                   1155.697 MB/sec
[info]                  ·gc.alloc.rate.norm:              10320.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.888 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11973.699 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.744 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 176990.584 ops/s
[info]                  ·gc.alloc.rate:               1160.948 MB/sec
[info]                  ·gc.alloc.rate.norm:          10320.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      671.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5965.088 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 176892.022 ops/s
[info]                  ·gc.alloc.rate:                   1160.126 MB/sec
[info]                  ·gc.alloc.rate.norm:              10320.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.232 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11948.841 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.741 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 176936.311 ops/s
[info]                  ·gc.alloc.rate:                   1160.137 MB/sec
[info]                  ·gc.alloc.rate.norm:              10320.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.826 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11962.903 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.555 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce":
[info]   176741.042 ±(99.9%) 1169.213 ops/s [Average]
[info]   (min, avg, max) = (176258.603, 176741.042, 176990.584), stdev = 303.641
[info]   CI (99.9%): [175571.829, 177910.255] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1159.012 ±(99.9%) 8.164 MB/sec [Average]
[info]   (min, avg, max) = (1155.697, 1159.012, 1160.948), stdev = 2.120
[info]   CI (99.9%): [1150.848, 1167.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   10320.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10320.002, 10320.002, 10320.003), stdev = 0.001
[info]   CI (99.9%): [10320.002, 10320.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1208.052 ±(99.9%) 1155.976 MB/sec [Average]
[info]   (min, avg, max) = (671.042, 1208.052, 1344.826), stdev = 300.203
[info]   CI (99.9%): [52.076, 2364.029] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   10758.670 ±(99.9%) 10318.651 B/op [Average]
[info]   (min, avg, max) = (5965.088, 10758.670, 11973.699), stdev = 2679.721
[info]   CI (99.9%): [440.019, 21077.321] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.139 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.062, 0.083), stdev = 0.036
[info]   CI (99.9%): [≈ 0, 0.201] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.556 ±(99.9%) 1.237 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.556, 0.744), stdev = 0.321
[info]   CI (99.9%): [≈ 0, 1.794] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 22.09% complete, ETA 01:43:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 400862.926 ops/s
[info] # Warmup Iteration   2: 549311.667 ops/s
[info] # Warmup Iteration   3: 552759.572 ops/s
[info] # Warmup Iteration   4: 553618.466 ops/s
[info] # Warmup Iteration   5: 553289.094 ops/s
[info] Iteration   1: 553406.612 ops/s
[info]                  ·gc.alloc.rate:                   559.960 MB/sec
[info]                  ·gc.alloc.rate.norm:              1592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.737 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1454.901 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.030 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 552391.173 ops/s
[info]                  ·gc.alloc.rate:                   558.748 MB/sec
[info]                  ·gc.alloc.rate.norm:              1592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.805 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1902.730 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.094 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.967 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 555034.456 ops/s
[info]                  ·gc.alloc.rate:                   561.431 MB/sec
[info]                  ·gc.alloc.rate.norm:              1592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.811 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1893.654 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.177 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 556179.481 ops/s
[info]                  ·gc.alloc.rate:      562.691 MB/sec
[info]                  ·gc.alloc.rate.norm: 1592.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 554303.015 ops/s
[info]                  ·gc.alloc.rate:                   560.688 MB/sec
[info]                  ·gc.alloc.rate.norm:              1592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.476 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1895.212 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.059 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala":
[info]   554262.947 ±(99.9%) 5615.469 ops/s [Average]
[info]   (min, avg, max) = (552391.173, 554262.947, 556179.481), stdev = 1458.319
[info]   CI (99.9%): [548647.479, 559878.416] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   560.703 ±(99.9%) 5.730 MB/sec [Average]
[info]   (min, avg, max) = (558.748, 560.703, 562.691), stdev = 1.488
[info]   CI (99.9%): [554.974, 566.433] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1592.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1592.001, 1592.001, 1592.001), stdev = 0.001
[info]   CI (99.9%): [1592.001, 1592.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   502.966 ±(99.9%) 1113.464 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 502.966, 667.811), stdev = 289.163
[info]   CI (99.9%): [≈ 0, 1616.430] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1429.299 ±(99.9%) 3163.854 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1429.299, 1902.730), stdev = 821.643
[info]   CI (99.9%): [≈ 0, 4593.153] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.438 ±(99.9%) 3.567 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.438, 2.094), stdev = 0.926
[info]   CI (99.9%): [≈ 0, 4.005] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.247 ±(99.9%) 10.165 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.247, 5.967), stdev = 2.640
[info]   CI (99.9%): [≈ 0, 11.411] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.600, 3.000), stdev = 1.342
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 22.29% complete, ETA 01:43:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 560980.800 ops/s
[info] # Warmup Iteration   2: 589048.722 ops/s
[info] # Warmup Iteration   3: 591061.783 ops/s
[info] # Warmup Iteration   4: 590105.518 ops/s
[info] # Warmup Iteration   5: 571580.707 ops/s
[info] Iteration   1: 588681.610 ops/s
[info]                  ·gc.alloc.rate:               451.925 MB/sec
[info]                  ·gc.alloc.rate.norm:          1208.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.715 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1367.822 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 589194.063 ops/s
[info]                  ·gc.alloc.rate:               452.208 MB/sec
[info]                  ·gc.alloc.rate.norm:          1208.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.590 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1366.631 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 591872.590 ops/s
[info]                  ·gc.alloc.rate:      454.307 MB/sec
[info]                  ·gc.alloc.rate.norm: 1208.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 586285.671 ops/s
[info]                  ·gc.alloc.rate:                   450.074 MB/sec
[info]                  ·gc.alloc.rate.norm:              1208.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.268 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1807.054 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.585 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.253 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 590344.806 ops/s
[info]                  ·gc.alloc.rate:                   453.097 MB/sec
[info]                  ·gc.alloc.rate.norm:              1208.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.133 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1794.637 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.166 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala":
[info]   589275.748 ±(99.9%) 7981.778 ops/s [Average]
[info]   (min, avg, max) = (586285.671, 589275.748, 591872.590), stdev = 2072.842
[info]   CI (99.9%): [581293.970, 597257.526] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   452.322 ±(99.9%) 6.016 MB/sec [Average]
[info]   (min, avg, max) = (450.074, 452.322, 454.307), stdev = 1.562
[info]   CI (99.9%): [446.306, 458.339] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1208.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1208.001, 1208.001, 1208.001), stdev = 0.001
[info]   CI (99.9%): [1208.001, 1208.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   473.941 ±(99.9%) 1066.554 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 473.941, 673.268), stdev = 276.981
[info]   CI (99.9%): [≈ 0, 1540.495] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1267.229 ±(99.9%) 2852.752 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1267.229, 1807.054), stdev = 740.851
[info]   CI (99.9%): [≈ 0, 4119.981] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.329 ±(99.9%) 2.704 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.329, 1.585), stdev = 0.702
[info]   CI (99.9%): [≈ 0, 3.033] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.884 ±(99.9%) 7.258 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.884, 4.253), stdev = 1.885
[info]   CI (99.9%): [≈ 0, 8.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 2.000), stdev = 0.894
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 22.49% complete, ETA 01:43:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 570227.428 ops/s
[info] # Warmup Iteration   2: 597934.540 ops/s
[info] # Warmup Iteration   3: 604341.299 ops/s
[info] # Warmup Iteration   4: 603819.895 ops/s
[info] # Warmup Iteration   5: 604331.864 ops/s
[info] Iteration   1: 603972.100 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 603829.468 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 604312.805 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 604066.379 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 603373.163 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc":
[info]   603910.783 ±(99.9%) 1341.162 ops/s [Average]
[info]   (min, avg, max) = (603373.163, 603910.783, 604312.805), stdev = 348.296
[info]   CI (99.9%): [602569.621, 605251.945] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
[info]   CI (99.9%): [0.001, 0.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 22.69% complete, ETA 01:43:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 200843.669 ops/s
[info] # Warmup Iteration   2: 327398.360 ops/s
[info] # Warmup Iteration   3: 335452.088 ops/s
[info] # Warmup Iteration   4: 335766.639 ops/s
[info] # Warmup Iteration   5: 331178.217 ops/s
[info] Iteration   1: 330635.978 ops/s
[info]                  ·gc.alloc.rate:                   914.250 MB/sec
[info]                  ·gc.alloc.rate.norm:              4352.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.281 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6346.675 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.297 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 333683.421 ops/s
[info]                  ·gc.alloc.rate:               922.743 MB/sec
[info]                  ·gc.alloc.rate.norm:          4352.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      666.818 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3144.961 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 337950.517 ops/s
[info]                  ·gc.alloc.rate:                   934.648 MB/sec
[info]                  ·gc.alloc.rate.norm:              4352.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.511 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6213.880 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.388 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 338542.844 ops/s
[info]                  ·gc.alloc.rate:               936.228 MB/sec
[info]                  ·gc.alloc.rate.norm:          4352.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      667.879 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3104.596 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 338718.752 ops/s
[info]                  ·gc.alloc.rate:               936.997 MB/sec
[info]                  ·gc.alloc.rate.norm:          4352.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.064 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3102.909 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson":
[info]   335906.302 ±(99.9%) 13851.292 ops/s [Average]
[info]   (min, avg, max) = (330635.978, 335906.302, 338718.752), stdev = 3597.137
[info]   CI (99.9%): [322055.010, 349757.595] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   928.973 ±(99.9%) 38.738 MB/sec [Average]
[info]   (min, avg, max) = (914.250, 928.973, 936.997), stdev = 10.060
[info]   CI (99.9%): [890.235, 967.711] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   4352.002 ±(99.9%) 0.004 B/op [Average]
[info]   (min, avg, max) = (4352.001, 4352.002, 4352.003), stdev = 0.001
[info]   CI (99.9%): [4351.998, 4352.005] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   934.111 ±(99.9%) 1405.304 MB/sec [Average]
[info]   (min, avg, max) = (666.818, 934.111, 1334.511), stdev = 364.953
[info]   CI (99.9%): [≈ 0, 2339.415] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   4382.604 ±(99.9%) 6673.353 B/op [Average]
[info]   (min, avg, max) = (3102.909, 4382.604, 6346.675), stdev = 1733.049
[info]   CI (99.9%): [≈ 0, 11055.958] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.156 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.083), stdev = 0.041
[info]   CI (99.9%): [≈ 0, 0.185] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.137 ±(99.9%) 0.733 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.137, 0.388), stdev = 0.190
[info]   CI (99.9%): [≈ 0, 0.870] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 22.89% complete, ETA 01:42:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 37225.127 ops/s
[info] # Warmup Iteration   2: 41364.397 ops/s
[info] # Warmup Iteration   3: 41357.750 ops/s
[info] # Warmup Iteration   4: 41552.482 ops/s
[info] # Warmup Iteration   5: 41498.461 ops/s
[info] Iteration   1: 40975.686 ops/s
[info]                  ·gc.alloc.rate:                   435.723 MB/sec
[info]                  ·gc.alloc.rate.norm:              16736.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.595 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19650.246 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.400 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 41471.721 ops/s
[info]                  ·gc.alloc.rate:               441.013 MB/sec
[info]                  ·gc.alloc.rate.norm:          16736.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.615 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 19415.265 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 41421.798 ops/s
[info]                  ·gc.alloc.rate:      440.555 MB/sec
[info]                  ·gc.alloc.rate.norm: 16736.011 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 41493.608 ops/s
[info]                  ·gc.alloc.rate:                   441.223 MB/sec
[info]                  ·gc.alloc.rate.norm:              16736.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.090 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25530.964 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.647 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 62.459 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 41173.478 ops/s
[info]                  ·gc.alloc.rate:                   437.854 MB/sec
[info]                  ·gc.alloc.rate.norm:              16736.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25728.724 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.387 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeUPickle":
[info]   41307.258 ±(99.9%) 866.888 ops/s [Average]
[info]   (min, avg, max) = (40975.686, 41307.258, 41493.608), stdev = 225.128
[info]   CI (99.9%): [40440.370, 42174.147] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeUPickle:·gc.alloc.rate":
[info]   439.274 ±(99.9%) 9.252 MB/sec [Average]
[info]   (min, avg, max) = (435.723, 439.274, 441.223), stdev = 2.403
[info]   CI (99.9%): [430.022, 448.525] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeUPickle:·gc.alloc.rate.norm":
[info]   16736.011 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (16736.010, 16736.011, 16736.011), stdev = 0.001
[info]   CI (99.9%): [16736.009, 16736.012] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space":
[info]   473.885 ±(99.9%) 1066.412 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 473.885, 673.125), stdev = 276.944
[info]   CI (99.9%): [≈ 0, 1540.297] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   18065.040 ±(99.9%) 40621.726 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 18065.040, 25728.724), stdev = 10549.333
[info]   CI (99.9%): [≈ 0, 58686.766] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space":
[info]   0.344 ±(99.9%) 2.806 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.344, 1.647), stdev = 0.729
[info]   CI (99.9%): [≈ 0, 3.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   13.049 ±(99.9%) 106.427 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 13.049, 62.459), stdev = 27.639
[info]   CI (99.9%): [≈ 0, 119.477] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeUPickle:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeUPickle:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 3.000), stdev = 1.140
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 23.09% complete, ETA 01:42:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 28947.501 ops/s
[info] # Warmup Iteration   2: 35761.484 ops/s
[info] # Warmup Iteration   3: 36623.680 ops/s
[info] # Warmup Iteration   4: 36255.793 ops/s
[info] # Warmup Iteration   5: 36643.473 ops/s
[info] Iteration   1: 35826.843 ops/s
[info]                  ·gc.alloc.rate:                   1688.856 MB/sec
[info]                  ·gc.alloc.rate.norm:              74184.013 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2019.226 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     88695.723 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.658 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 36640.237 ops/s
[info]                  ·gc.alloc.rate:                   1727.148 MB/sec
[info]                  ·gc.alloc.rate.norm:              74184.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.612 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     57882.265 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.894 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 36556.997 ops/s
[info]                  ·gc.alloc.rate:                   1723.181 MB/sec
[info]                  ·gc.alloc.rate.norm:              74184.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2024.406 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     87151.911 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.481 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 36606.819 ops/s
[info]                  ·gc.alloc.rate:               1726.222 MB/sec
[info]                  ·gc.alloc.rate.norm:          74184.013 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1352.213 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 58111.021 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 36459.871 ops/s
[info]                  ·gc.alloc.rate:                   1718.980 MB/sec
[info]                  ·gc.alloc.rate.norm:              74184.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2030.284 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     87618.568 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.696 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce":
[info]   36418.153 ±(99.9%) 1299.531 ops/s [Average]
[info]   (min, avg, max) = (35826.843, 36418.153, 36640.237), stdev = 337.484
[info]   CI (99.9%): [35118.623, 37717.684] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:·gc.alloc.rate":
[info]   1716.878 ±(99.9%) 61.555 MB/sec [Average]
[info]   (min, avg, max) = (1688.856, 1716.878, 1727.148), stdev = 15.986
[info]   CI (99.9%): [1655.322, 1778.433] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   74184.012 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (74184.012, 74184.012, 74184.013), stdev = 0.001
[info]   CI (99.9%): [74184.010, 74184.014] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1754.748 ±(99.9%) 1423.149 MB/sec [Average]
[info]   (min, avg, max) = (1347.612, 1754.748, 2030.284), stdev = 369.587
[info]   CI (99.9%): [331.599, 3177.897] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   75891.898 ±(99.9%) 62942.043 B/op [Average]
[info]   (min, avg, max) = (57882.265, 75891.898, 88695.723), stdev = 16345.849
[info]   CI (99.9%): [12949.855, 138833.941] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.166 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.104), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.220] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   2.346 ±(99.9%) 7.207 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.346, 4.481), stdev = 1.872
[info]   CI (99.9%): [≈ 0, 9.553] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.400, 3.000), stdev = 0.894
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 23.29% complete, ETA 01:42:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 8313.680 ops/s
[info] # Warmup Iteration   2: 285782.436 ops/s
[info] # Warmup Iteration   3: 287325.483 ops/s
[info] # Warmup Iteration   4: 288479.809 ops/s
[info] # Warmup Iteration   5: 288057.858 ops/s
[info] Iteration   1: 288731.631 ops/s
[info]                  ·gc.alloc.rate:               299.541 MB/sec
[info]                  ·gc.alloc.rate.norm:          1632.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.861 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2788.795 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 289303.601 ops/s
[info]                  ·gc.alloc.rate:      300.000 MB/sec
[info]                  ·gc.alloc.rate.norm: 1632.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 288827.406 ops/s
[info]                  ·gc.alloc.rate:               299.560 MB/sec
[info]                  ·gc.alloc.rate.norm:          1632.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.697 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2787.723 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 289307.038 ops/s
[info]                  ·gc.alloc.rate:      299.995 MB/sec
[info]                  ·gc.alloc.rate.norm: 1632.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 288440.402 ops/s
[info]                  ·gc.alloc.rate:                   299.146 MB/sec
[info]                  ·gc.alloc.rate.norm:              1632.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.685 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2791.511 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.034 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.187 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava":
[info]   288922.016 ±(99.9%) 1454.859 ops/s [Average]
[info]   (min, avg, max) = (288440.402, 288922.016, 289307.038), stdev = 377.822
[info]   CI (99.9%): [287467.156, 290376.875] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   299.649 ±(99.9%) 1.382 MB/sec [Average]
[info]   (min, avg, max) = (299.146, 299.649, 300.000), stdev = 0.359
[info]   CI (99.9%): [298.266, 301.031] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   1632.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1632.001, 1632.002, 1632.002), stdev = 0.001
[info]   CI (99.9%): [1632.001, 1632.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   307.049 ±(99.9%) 1079.319 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 307.049, 511.861), stdev = 280.296
[info]   CI (99.9%): [≈ 0, 1386.368] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   1673.606 ±(99.9%) 5882.963 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1673.606, 2791.511), stdev = 1527.787
[info]   CI (99.9%): [≈ 0, 7556.569] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.007 ±(99.9%) 0.059 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.007, 0.034), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.066] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.037 ±(99.9%) 0.323 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.187), stdev = 0.084
[info]   CI (99.9%): [≈ 0, 0.360] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 3.000), stdev = 1.342
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 23.49% complete, ETA 01:42:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 65902.881 ops/s
[info] # Warmup Iteration   2: 92595.331 ops/s
[info] # Warmup Iteration   3: 93839.413 ops/s
[info] # Warmup Iteration   4: 94890.466 ops/s
[info] # Warmup Iteration   5: 96711.772 ops/s
[info] Iteration   1: 96605.463 ops/s
[info]                  ·gc.alloc.rate:               1127.521 MB/sec
[info]                  ·gc.alloc.rate.norm:          18368.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1336.369 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 21770.270 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 96820.632 ops/s
[info]                  ·gc.alloc.rate:               1130.187 MB/sec
[info]                  ·gc.alloc.rate.norm:          18368.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.278 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 10860.967 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 93345.115 ops/s
[info]                  ·gc.alloc.rate:                   1089.479 MB/sec
[info]                  ·gc.alloc.rate.norm:              18368.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.717 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22553.162 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.053 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 96703.696 ops/s
[info]                  ·gc.alloc.rate:                   1128.596 MB/sec
[info]                  ·gc.alloc.rate.norm:              18368.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.632 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21802.644 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.016 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 95904.825 ops/s
[info]                  ·gc.alloc.rate:               1119.285 MB/sec
[info]                  ·gc.alloc.rate.norm:          18368.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:      670.441 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 11002.260 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala":
[info]   95875.946 ±(99.9%) 5618.424 ops/s [Average]
[info]   (min, avg, max) = (93345.115, 95875.946, 96820.632), stdev = 1459.087
[info]   CI (99.9%): [90257.523, 101494.370] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1119.013 ±(99.9%) 65.613 MB/sec [Average]
[info]   (min, avg, max) = (1089.479, 1119.013, 1130.187), stdev = 17.040
[info]   CI (99.9%): [1053.400, 1184.627] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   18368.005 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (18368.004, 18368.005, 18368.005), stdev = 0.001
[info]   CI (99.9%): [18368.004, 18368.005] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1070.487 ±(99.9%) 1410.032 MB/sec [Average]
[info]   (min, avg, max) = (668.278, 1070.487, 1339.632), stdev = 366.181
[info]   CI (99.9%): [≈ 0, 2480.520] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   17597.860 ±(99.9%) 23464.604 B/op [Average]
[info]   (min, avg, max) = (10860.967, 17597.860, 22553.162), stdev = 6093.683
[info]   CI (99.9%): [≈ 0, 41062.465] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.157] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.414 ±(99.9%) 2.183 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.414, 1.053), stdev = 0.567
[info]   CI (99.9%): [≈ 0, 2.597] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 23.69% complete, ETA 01:41:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 374064.461 ops/s
[info] # Warmup Iteration   2: 382001.837 ops/s
[info] # Warmup Iteration   3: 395284.945 ops/s
[info] # Warmup Iteration   4: 392254.087 ops/s
[info] # Warmup Iteration   5: 396159.975 ops/s
[info] Iteration   1: 394973.097 ops/s
[info]                  ·gc.alloc.rate:                   256.969 MB/sec
[info]                  ·gc.alloc.rate.norm:              1024.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.577 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2038.590 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.083 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 396429.828 ops/s
[info]                  ·gc.alloc.rate:      257.972 MB/sec
[info]                  ·gc.alloc.rate.norm: 1024.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 390239.333 ops/s
[info]                  ·gc.alloc.rate:               253.909 MB/sec
[info]                  ·gc.alloc.rate.norm:          1024.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.645 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2063.433 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 390953.886 ops/s
[info]                  ·gc.alloc.rate:      254.364 MB/sec
[info]                  ·gc.alloc.rate.norm: 1024.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 389570.325 ops/s
[info]                  ·gc.alloc.rate:                   253.459 MB/sec
[info]                  ·gc.alloc.rate.norm:              1024.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.569 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2066.791 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.084 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala":
[info]   392433.294 ±(99.9%) 11809.240 ops/s [Average]
[info]   (min, avg, max) = (389570.325, 392433.294, 396429.828), stdev = 3066.822
[info]   CI (99.9%): [380624.054, 404242.533] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   255.335 ±(99.9%) 7.730 MB/sec [Average]
[info]   (min, avg, max) = (253.459, 255.335, 257.972), stdev = 2.007
[info]   CI (99.9%): [247.605, 263.064] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   1024.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1024.001, 1024.001, 1024.001), stdev = 0.001
[info]   CI (99.9%): [1024.001, 1024.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   306.958 ±(99.9%) 1079.001 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 306.958, 511.645), stdev = 280.213
[info]   CI (99.9%): [≈ 0, 1385.959] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1233.763 ±(99.9%) 4337.053 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1233.763, 2066.791), stdev = 1126.319
[info]   CI (99.9%): [≈ 0, 5570.816] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.033 ±(99.9%) 0.176 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.084), stdev = 0.046
[info]   CI (99.9%): [≈ 0, 0.210] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 1.000
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 23.90% complete, ETA 01:41:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 23302.009 ops/s
[info] # Warmup Iteration   2: 38396.578 ops/s
[info] # Warmup Iteration   3: 38931.617 ops/s
[info] # Warmup Iteration   4: 39243.432 ops/s
[info] # Warmup Iteration   5: 39454.570 ops/s
[info] Iteration   1: 39506.102 ops/s
[info]                  ·gc.alloc.rate:                   2071.323 MB/sec
[info]                  ·gc.alloc.rate.norm:              82504.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2013.053 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     80183.038 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.659 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 39531.803 ops/s
[info]                  ·gc.alloc.rate:                   2073.155 MB/sec
[info]                  ·gc.alloc.rate.norm:              82504.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2018.224 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     80317.983 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.486 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 39303.274 ops/s
[info]                  ·gc.alloc.rate:                   2061.253 MB/sec
[info]                  ·gc.alloc.rate.norm:              82504.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2022.327 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     80945.938 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.334 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 39516.540 ops/s
[info]                  ·gc.alloc.rate:                   2072.335 MB/sec
[info]                  ·gc.alloc.rate.norm:              82504.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2026.907 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     80695.408 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.658 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 38984.361 ops/s
[info]                  ·gc.alloc.rate:               2043.894 MB/sec
[info]                  ·gc.alloc.rate.norm:          82504.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2028.926 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 81899.831 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson":
[info]   39368.416 ±(99.9%) 901.691 ops/s [Average]
[info]   (min, avg, max) = (38984.361, 39368.416, 39531.803), stdev = 234.166
[info]   CI (99.9%): [38466.725, 40270.107] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2064.392 ±(99.9%) 47.860 MB/sec [Average]
[info]   (min, avg, max) = (2043.894, 2064.392, 2073.155), stdev = 12.429
[info]   CI (99.9%): [2016.532, 2112.252] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   82504.011 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (82504.011, 82504.011, 82504.012), stdev = 0.001
[info]   CI (99.9%): [82504.010, 82504.013] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2021.887 ±(99.9%) 24.836 MB/sec [Average]
[info]   (min, avg, max) = (2013.053, 2021.887, 2028.926), stdev = 6.450
[info]   CI (99.9%): [1997.051, 2046.723] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   80808.440 ±(99.9%) 2621.898 B/op [Average]
[info]   (min, avg, max) = (80183.038, 80808.440, 81899.831), stdev = 680.899
[info]   CI (99.9%): [78186.541, 83430.338] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.119 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.083), stdev = 0.031
[info]   CI (99.9%): [≈ 0, 0.165] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.828 ±(99.9%) 4.756 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.828, 3.334), stdev = 1.235
[info]   CI (99.9%): [≈ 0, 6.583] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 24.10% complete, ETA 01:41:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 52242.917 ops/s
[info] # Warmup Iteration   2: 57095.766 ops/s
[info] # Warmup Iteration   3: 58438.181 ops/s
[info] # Warmup Iteration   4: 58997.643 ops/s
[info] # Warmup Iteration   5: 58183.191 ops/s
[info] Iteration   1: 58494.436 ops/s
[info]                  ·gc.alloc.rate:                   1297.605 MB/sec
[info]                  ·gc.alloc.rate.norm:              34912.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.033 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     36241.849 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.240 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 57012.269 ops/s
[info]                  ·gc.alloc.rate:                   1264.711 MB/sec
[info]                  ·gc.alloc.rate.norm:              34912.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.675 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     37202.197 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.299 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 58995.844 ops/s
[info]                  ·gc.alloc.rate:                   1308.633 MB/sec
[info]                  ·gc.alloc.rate.norm:              34912.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.209 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     35967.831 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.111 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 59073.778 ops/s
[info]                  ·gc.alloc.rate:                   1310.387 MB/sec
[info]                  ·gc.alloc.rate.norm:              34912.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.566 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     35955.842 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.664 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 59302.966 ops/s
[info]                  ·gc.alloc.rate:                   1315.852 MB/sec
[info]                  ·gc.alloc.rate.norm:              34912.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1351.318 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     35852.983 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.657 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readUPickle":
[info]   58575.859 ±(99.9%) 3552.434 ops/s [Average]
[info]   (min, avg, max) = (57012.269, 58575.859, 59302.966), stdev = 922.556
[info]   CI (99.9%): [55023.425, 62128.293] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readUPickle:·gc.alloc.rate":
[info]   1299.438 ±(99.9%) 78.989 MB/sec [Average]
[info]   (min, avg, max) = (1264.711, 1299.438, 1315.852), stdev = 20.513
[info]   CI (99.9%): [1220.448, 1378.427] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readUPickle:·gc.alloc.rate.norm":
[info]   34912.007 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (34912.007, 34912.007, 34912.008), stdev = 0.001
[info]   CI (99.9%): [34912.006, 34912.009] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readUPickle:·gc.churn.PS_Eden_Space":
[info]   1348.760 ±(99.9%) 6.574 MB/sec [Average]
[info]   (min, avg, max) = (1347.033, 1348.760, 1351.318), stdev = 1.707
[info]   CI (99.9%): [1342.186, 1355.335] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   36244.140 ±(99.9%) 2135.584 B/op [Average]
[info]   (min, avg, max) = (35852.983, 36244.140, 37202.197), stdev = 554.604
[info]   CI (99.9%): [34108.557, 38379.724] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.067, 0.083), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   1.794 ±(99.9%) 1.883 B/op [Average]
[info]   (min, avg, max) = (1.111, 1.794, 2.299), stdev = 0.489
[info]   CI (99.9%): [≈ 0, 3.677] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readUPickle:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readUPickle:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 24.30% complete, ETA 01:40:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 63256.389 ops/s
[info] # Warmup Iteration   2: 84997.463 ops/s
[info] # Warmup Iteration   3: 87245.044 ops/s
[info] # Warmup Iteration   4: 86710.576 ops/s
[info] # Warmup Iteration   5: 84607.679 ops/s
[info] Iteration   1: 85139.557 ops/s
[info]                  ·gc.alloc.rate:                   680.319 MB/sec
[info]                  ·gc.alloc.rate.norm:              12576.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          670.492 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12394.355 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.782 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 32.943 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 87135.130 ops/s
[info]                  ·gc.alloc.rate:                   696.251 MB/sec
[info]                  ·gc.alloc.rate.norm:              12576.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          670.439 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12109.782 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.752 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 87396.133 ops/s
[info]                  ·gc.alloc.rate:                   698.545 MB/sec
[info]                  ·gc.alloc.rate.norm:              12576.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          670.307 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12067.627 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.375 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 87356.685 ops/s
[info]                  ·gc.alloc.rate:               698.026 MB/sec
[info]                  ·gc.alloc.rate.norm:          12576.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:      670.146 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 12073.704 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 87310.763 ops/s
[info]                  ·gc.alloc.rate:                   697.643 MB/sec
[info]                  ·gc.alloc.rate.norm:              12576.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          670.449 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12085.792 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.750 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce":
[info]   86867.654 ±(99.9%) 3739.613 ops/s [Average]
[info]   (min, avg, max) = (85139.557, 86867.654, 87396.133), stdev = 971.166
[info]   CI (99.9%): [83128.041, 90607.267] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:·gc.alloc.rate":
[info]   694.157 ±(99.9%) 29.967 MB/sec [Average]
[info]   (min, avg, max) = (680.319, 694.157, 698.545), stdev = 7.782
[info]   CI (99.9%): [664.190, 724.124] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   12576.005 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (12576.005, 12576.005, 12576.005), stdev = 0.001
[info]   CI (99.9%): [12576.004, 12576.006] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   670.367 ±(99.9%) 0.546 MB/sec [Average]
[info]   (min, avg, max) = (670.146, 670.367, 670.492), stdev = 0.142
[info]   CI (99.9%): [669.821, 670.912] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   12146.252 ±(99.9%) 537.664 B/op [Average]
[info]   (min, avg, max) = (12067.627, 12146.252, 12394.355), stdev = 139.630
[info]   CI (99.9%): [11608.588, 12683.916] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.377 ±(99.9%) 3.025 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.377, 1.782), stdev = 0.786
[info]   CI (99.9%): [≈ 0, 3.402] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   6.964 ±(99.9%) 55.935 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 6.964, 32.943), stdev = 14.526
[info]   CI (99.9%): [≈ 0, 62.899] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 24.50% complete, ETA 01:40:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1042.577 ops/s
[info] # Warmup Iteration   2: 110614.455 ops/s
[info] # Warmup Iteration   3: 110317.027 ops/s
[info] # Warmup Iteration   4: 110925.570 ops/s
[info] # Warmup Iteration   5: 111143.055 ops/s
[info] Iteration   1: 109995.340 ops/s
[info]                  ·gc.alloc.rate:               407.033 MB/sec
[info]                  ·gc.alloc.rate.norm:          5824.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.593 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 7320.102 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 111208.882 ops/s
[info]                  ·gc.alloc.rate:      411.518 MB/sec
[info]                  ·gc.alloc.rate.norm: 5824.004 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 110970.397 ops/s
[info]                  ·gc.alloc.rate:                   410.644 MB/sec
[info]                  ·gc.alloc.rate.norm:              5824.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.603 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7255.862 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.004 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.064 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 110896.671 ops/s
[info]                  ·gc.alloc.rate:                   410.361 MB/sec
[info]                  ·gc.alloc.rate.norm:              5824.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.816 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9421.121 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.036 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.517 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 111233.929 ops/s
[info]                  ·gc.alloc.rate:      411.622 MB/sec
[info]                  ·gc.alloc.rate.norm: 5824.004 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava":
[info]   110861.044 ±(99.9%) 1947.057 ops/s [Average]
[info]   (min, avg, max) = (109995.340, 110861.044, 111233.929), stdev = 505.645
[info]   CI (99.9%): [108913.987, 112808.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   410.235 ±(99.9%) 7.206 MB/sec [Average]
[info]   (min, avg, max) = (407.033, 410.235, 411.622), stdev = 1.871
[info]   CI (99.9%): [403.030, 417.441] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   5824.004 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5824.004, 5824.004, 5824.004), stdev = 0.001
[info]   CI (99.9%): [5824.003, 5824.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   337.402 ±(99.9%) 1209.915 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 337.402, 663.816), stdev = 314.211
[info]   CI (99.9%): [≈ 0, 1547.317] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   4799.417 ±(99.9%) 17200.889 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4799.417, 9421.121), stdev = 4467.016
[info]   CI (99.9%): [≈ 0, 22000.306] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.061 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.036), stdev = 0.016
[info]   CI (99.9%): [≈ 0, 0.069] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.116 ±(99.9%) 0.870 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.116, 0.517), stdev = 0.226
[info]   CI (99.9%): [≈ 0, 0.986] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 3.000), stdev = 1.342
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 24.70% complete, ETA 01:40:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 69255.155 ops/s
[info] # Warmup Iteration   2: 97244.828 ops/s
[info] # Warmup Iteration   3: 97639.229 ops/s
[info] # Warmup Iteration   4: 96661.157 ops/s
[info] # Warmup Iteration   5: 98089.454 ops/s
[info] Iteration   1: 97479.817 ops/s
[info]                  ·gc.alloc.rate:               384.509 MB/sec
[info]                  ·gc.alloc.rate.norm:          6208.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.588 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8259.722 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 98228.733 ops/s
[info]                  ·gc.alloc.rate:               387.463 MB/sec
[info]                  ·gc.alloc.rate.norm:          6208.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.588 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8196.753 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 98512.968 ops/s
[info]                  ·gc.alloc.rate:      388.577 MB/sec
[info]                  ·gc.alloc.rate.norm: 6208.004 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 96626.287 ops/s
[info]                  ·gc.alloc.rate:                   381.256 MB/sec
[info]                  ·gc.alloc.rate.norm:              6208.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.758 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8332.968 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.046 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.752 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 97300.972 ops/s
[info]                  ·gc.alloc.rate:                   383.780 MB/sec
[info]                  ·gc.alloc.rate.norm:              6208.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.775 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10801.897 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.063 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 33.371 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala":
[info]   97629.756 ±(99.9%) 2904.856 ops/s [Average]
[info]   (min, avg, max) = (96626.287, 97629.756, 98512.968), stdev = 754.382
[info]   CI (99.9%): [94724.899, 100534.612] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   385.117 ±(99.9%) 11.316 MB/sec [Average]
[info]   (min, avg, max) = (381.256, 385.117, 388.577), stdev = 2.939
[info]   CI (99.9%): [373.801, 396.433] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   6208.004 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (6208.004, 6208.004, 6208.005), stdev = 0.001
[info]   CI (99.9%): [6208.004, 6208.005] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   440.542 ±(99.9%) 983.383 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 440.542, 667.775), stdev = 255.381
[info]   CI (99.9%): [≈ 0, 1423.924] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   7118.268 ±(99.9%) 15897.658 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 7118.268, 10801.897), stdev = 4128.571
[info]   CI (99.9%): [≈ 0, 23015.926] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.422 ±(99.9%) 3.534 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.422, 2.063), stdev = 0.918
[info]   CI (99.9%): [≈ 0, 3.955] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   6.825 ±(99.9%) 57.157 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 6.825, 33.371), stdev = 14.843
[info]   CI (99.9%): [≈ 0, 63.981] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.800, 3.000), stdev = 1.304
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 24.90% complete, ETA 01:40:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 106007.409 ops/s
[info] # Warmup Iteration   2: 112473.092 ops/s
[info] # Warmup Iteration   3: 111013.864 ops/s
[info] # Warmup Iteration   4: 112806.215 ops/s
[info] # Warmup Iteration   5: 113326.887 ops/s
[info] Iteration   1: 113549.263 ops/s
[info]                  ·gc.alloc.rate:      420.174 MB/sec
[info]                  ·gc.alloc.rate.norm: 5824.004 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 113299.893 ops/s
[info]                  ·gc.alloc.rate:               419.255 MB/sec
[info]                  ·gc.alloc.rate.norm:          5824.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.591 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 7106.669 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 113610.258 ops/s
[info]                  ·gc.alloc.rate:                   420.489 MB/sec
[info]                  ·gc.alloc.rate.norm:              5824.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.679 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7087.031 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.057 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.783 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 113652.519 ops/s
[info]                  ·gc.alloc.rate:                   420.672 MB/sec
[info]                  ·gc.alloc.rate.norm:              5824.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.639 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9326.210 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.595 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 22.084 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 113325.022 ops/s
[info]                  ·gc.alloc.rate:      419.361 MB/sec
[info]                  ·gc.alloc.rate.norm: 5824.004 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala":
[info]   113487.391 ±(99.9%) 631.879 ops/s [Average]
[info]   (min, avg, max) = (113299.893, 113487.391, 113652.519), stdev = 164.097
[info]   CI (99.9%): [112855.512, 114119.270] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   419.990 ±(99.9%) 2.499 MB/sec [Average]
[info]   (min, avg, max) = (419.255, 419.990, 420.672), stdev = 0.649
[info]   CI (99.9%): [417.491, 422.489] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   5824.004 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5824.004, 5824.004, 5824.004), stdev = 0.001
[info]   CI (99.9%): [5824.003, 5824.005] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   339.382 ±(99.9%) 1219.855 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 339.382, 673.639), stdev = 316.793
[info]   CI (99.9%): [≈ 0, 1559.237] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   4703.982 ±(99.9%) 16902.497 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4703.982, 9326.210), stdev = 4389.525
[info]   CI (99.9%): [≈ 0, 21606.479] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.330 ±(99.9%) 2.724 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.330, 1.595), stdev = 0.707
[info]   CI (99.9%): [≈ 0, 3.055] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   4.573 ±(99.9%) 37.715 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4.573, 22.084), stdev = 9.794
[info]   CI (99.9%): [≈ 0, 42.288] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 1.095
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 25.10% complete, ETA 01:39:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 106305.760 ops/s
[info] # Warmup Iteration   2: 113184.386 ops/s
[info] # Warmup Iteration   3: 113480.837 ops/s
[info] # Warmup Iteration   4: 114050.546 ops/s
[info] # Warmup Iteration   5: 113349.493 ops/s
[info] Iteration   1: 113171.820 ops/s
[info]                  ·gc.alloc.rate:      329.619 MB/sec
[info]                  ·gc.alloc.rate.norm: 4584.004 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 113576.060 ops/s
[info]                  ·gc.alloc.rate:               330.793 MB/sec
[info]                  ·gc.alloc.rate.norm:          4584.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.589 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 7089.401 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 111148.607 ops/s
[info]                  ·gc.alloc.rate:                   323.746 MB/sec
[info]                  ·gc.alloc.rate.norm:              4584.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.640 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7244.439 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.443 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 114080.855 ops/s
[info]                  ·gc.alloc.rate:      332.271 MB/sec
[info]                  ·gc.alloc.rate.norm: 4584.004 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 110589.709 ops/s
[info]                  ·gc.alloc.rate:                   322.172 MB/sec
[info]                  ·gc.alloc.rate.norm:              4584.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.716 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7280.922 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.015 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.212 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc":
[info]   112513.410 ±(99.9%) 5960.083 ops/s [Average]
[info]   (min, avg, max) = (110589.709, 112513.410, 114080.855), stdev = 1547.815
[info]   CI (99.9%): [106553.327, 118473.494] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   327.720 ±(99.9%) 17.256 MB/sec [Average]
[info]   (min, avg, max) = (322.172, 327.720, 332.271), stdev = 4.481
[info]   CI (99.9%): [310.464, 344.977] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   4584.004 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4584.004, 4584.004, 4584.004), stdev = 0.001
[info]   CI (99.9%): [4584.004, 4584.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   306.989 ±(99.9%) 1079.109 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 306.989, 511.716), stdev = 280.241
[info]   CI (99.9%): [≈ 0, 1386.098] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   4322.953 ±(99.9%) 15198.310 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4322.953, 7280.922), stdev = 3946.953
[info]   CI (99.9%): [≈ 0, 19521.262] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space":
[info]   0.009 ±(99.9%) 0.054 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.009, 0.031), stdev = 0.014
[info]   CI (99.9%): [≈ 0, 0.063] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   0.131 ±(99.9%) 0.758 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.131, 0.443), stdev = 0.197
[info]   CI (99.9%): [≈ 0, 0.889] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 1.095
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 25.30% complete, ETA 01:39:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6264.060 ops/s
[info] # Warmup Iteration   2: 9272.494 ops/s
[info] # Warmup Iteration   3: 9414.822 ops/s
[info] # Warmup Iteration   4: 9582.634 ops/s
[info] # Warmup Iteration   5: 9576.274 ops/s
[info] Iteration   1: 9605.714 ops/s
[info]                  ·gc.alloc.rate:                   1594.759 MB/sec
[info]                  ·gc.alloc.rate.norm:              261288.045 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.865 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     220345.019 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.410 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 9597.383 ops/s
[info]                  ·gc.alloc.rate:               1593.731 MB/sec
[info]                  ·gc.alloc.rate.norm:          261295.800 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2020.493 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 331264.373 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 9444.134 ops/s
[info]                  ·gc.alloc.rate:                   1568.288 MB/sec
[info]                  ·gc.alloc.rate.norm:              261304.046 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.473 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     224678.999 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.938 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 9590.961 ops/s
[info]                  ·gc.alloc.rate:                   1592.437 MB/sec
[info]                  ·gc.alloc.rate.norm:              261304.045 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.588 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     221454.704 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.416 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 9577.643 ops/s
[info]                  ·gc.alloc.rate:                   1590.199 MB/sec
[info]                  ·gc.alloc.rate.norm:              261304.045 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2027.488 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     333160.148 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.421 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce":
[info]   9563.167 ±(99.9%) 259.255 ops/s [Average]
[info]   (min, avg, max) = (9444.134, 9563.167, 9605.714), stdev = 67.328
[info]   CI (99.9%): [9303.912, 9822.422] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:·gc.alloc.rate":
[info]   1587.883 ±(99.9%) 42.686 MB/sec [Average]
[info]   (min, avg, max) = (1568.288, 1587.883, 1594.759), stdev = 11.085
[info]   CI (99.9%): [1545.197, 1630.569] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   261299.196 ±(99.9%) 27.662 B/op [Average]
[info]   (min, avg, max) = (261288.045, 261299.196, 261304.046), stdev = 7.184
[info]   CI (99.9%): [261271.534, 261326.858] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1618.181 ±(99.9%) 1426.524 MB/sec [Average]
[info]   (min, avg, max) = (1344.865, 1618.181, 2027.488), stdev = 370.464
[info]   CI (99.9%): [191.657, 3044.705] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   266180.649 ±(99.9%) 232205.694 B/op [Average]
[info]   (min, avg, max) = (220345.019, 266180.649, 333160.148), stdev = 60303.081
[info]   CI (99.9%): [33974.954, 498386.343] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.078] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   3.437 ±(99.9%) 9.446 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.437, 6.938), stdev = 2.453
[info]   CI (99.9%): [≈ 0, 12.883] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 3.000), stdev = 0.707
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 25.50% complete, ETA 01:39:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5306.434 ops/s
[info] # Warmup Iteration   2: 9521.600 ops/s
[info] # Warmup Iteration   3: 9723.451 ops/s
[info] # Warmup Iteration   4: 9814.264 ops/s
[info] # Warmup Iteration   5: 9811.037 ops/s
[info] Iteration   1: 9794.406 ops/s
[info]                  ·gc.alloc.rate:                   1508.962 MB/sec
[info]                  ·gc.alloc.rate.norm:              242456.047 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2005.686 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     322268.280 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.034 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 9779.170 ops/s
[info]                  ·gc.alloc.rate:                   1506.585 MB/sec
[info]                  ·gc.alloc.rate.norm:              242463.881 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.601 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     215590.056 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.700 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 9808.490 ops/s
[info]                  ·gc.alloc.rate:               1511.338 MB/sec
[info]                  ·gc.alloc.rate.norm:          242488.044 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1341.582 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 215251.459 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 9657.607 ops/s
[info]                  ·gc.alloc.rate:                   1487.998 MB/sec
[info]                  ·gc.alloc.rate.norm:              242488.045 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.648 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     218964.468 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.392 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 9656.332 ops/s
[info]                  ·gc.alloc.rate:               1488.770 MB/sec
[info]                  ·gc.alloc.rate.norm:          242488.048 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2017.802 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 328655.722 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala":
[info]   9739.201 ±(99.9%) 291.806 ops/s [Average]
[info]   (min, avg, max) = (9656.332, 9739.201, 9808.490), stdev = 75.781
[info]   CI (99.9%): [9447.396, 10031.007] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1500.731 ±(99.9%) 43.892 MB/sec [Average]
[info]   (min, avg, max) = (1487.998, 1500.731, 1511.338), stdev = 11.399
[info]   CI (99.9%): [1456.838, 1544.623] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   242476.813 ±(99.9%) 60.178 B/op [Average]
[info]   (min, avg, max) = (242456.047, 242476.813, 242488.048), stdev = 15.628
[info]   CI (99.9%): [242416.635, 242536.991] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1609.664 ±(99.9%) 1413.475 MB/sec [Average]
[info]   (min, avg, max) = (1339.601, 1609.664, 2017.802), stdev = 367.075
[info]   CI (99.9%): [196.189, 3023.138] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   260145.997 ±(99.9%) 229827.565 B/op [Average]
[info]   (min, avg, max) = (215251.459, 260145.997, 328655.722), stdev = 59685.489
[info]   CI (99.9%): [30318.432, 489973.561] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.129] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   4.025 ±(99.9%) 16.792 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4.025, 10.034), stdev = 4.361
[info]   CI (99.9%): [≈ 0, 20.817] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 25.70% complete, ETA 01:39:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 197293.986 ops/s
[info] # Warmup Iteration   2: 209282.526 ops/s
[info] # Warmup Iteration   3: 210296.119 ops/s
[info] # Warmup Iteration   4: 210122.655 ops/s
[info] # Warmup Iteration   5: 210319.708 ops/s
[info] Iteration   1: 209699.352 ops/s
[info]                  ·gc.alloc.rate:               545.747 MB/sec
[info]                  ·gc.alloc.rate.norm:          4096.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.582 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3839.583 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 210341.617 ops/s
[info]                  ·gc.alloc.rate:                   547.399 MB/sec
[info]                  ·gc.alloc.rate.norm:              4096.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.449 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5039.194 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.530 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11.449 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 210804.745 ops/s
[info]                  ·gc.alloc.rate:                   548.624 MB/sec
[info]                  ·gc.alloc.rate.norm:              4096.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.480 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5028.175 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.622 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 211228.904 ops/s
[info]                  ·gc.alloc.rate:      549.726 MB/sec
[info]                  ·gc.alloc.rate.norm: 4096.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 211513.802 ops/s
[info]                  ·gc.alloc.rate:               550.566 MB/sec
[info]                  ·gc.alloc.rate.norm:          4096.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.576 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5011.157 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala":
[info]   210717.684 ±(99.9%) 2777.511 ops/s [Average]
[info]   (min, avg, max) = (209699.352, 210717.684, 211513.802), stdev = 721.311
[info]   CI (99.9%): [207940.173, 213495.195] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   548.412 ±(99.9%) 7.340 MB/sec [Average]
[info]   (min, avg, max) = (545.747, 548.412, 550.566), stdev = 1.906
[info]   CI (99.9%): [541.072, 555.753] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   4096.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4096.002, 4096.002, 4096.002), stdev = 0.001
[info]   CI (99.9%): [4096.002, 4096.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   506.418 ±(99.9%) 1123.037 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 506.418, 673.576), stdev = 291.649
[info]   CI (99.9%): [≈ 0, 1629.455] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   3783.622 ±(99.9%) 8381.487 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3783.622, 5039.194), stdev = 2176.646
[info]   CI (99.9%): [≈ 0, 12165.109] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.323 ±(99.9%) 2.603 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.323, 1.530), stdev = 0.676
[info]   CI (99.9%): [≈ 0, 2.925] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.414 ±(99.9%) 19.475 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.414, 11.449), stdev = 5.058
[info]   CI (99.9%): [≈ 0, 21.889] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 3.000), stdev = 1.095
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 25.90% complete, ETA 01:38:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2740.900 ops/s
[info] # Warmup Iteration   2: 5480.017 ops/s
[info] # Warmup Iteration   3: 5554.720 ops/s
[info] # Warmup Iteration   4: 5660.949 ops/s
[info] # Warmup Iteration   5: 5657.062 ops/s
[info] Iteration   1: 5619.480 ops/s
[info]                  ·gc.alloc.rate:               1496.920 MB/sec
[info]                  ·gc.alloc.rate.norm:          419032.077 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1338.806 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 374771.248 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 5567.348 ops/s
[info]                  ·gc.alloc.rate:                   1482.289 MB/sec
[info]                  ·gc.alloc.rate.norm:              419032.078 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2010.506 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     568355.310 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 29.425 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 5624.588 ops/s
[info]                  ·gc.alloc.rate:                   1498.139 MB/sec
[info]                  ·gc.alloc.rate.norm:              419032.077 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.703 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     375556.459 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.824 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 5631.548 ops/s
[info]                  ·gc.alloc.rate:                   1499.381 MB/sec
[info]                  ·gc.alloc.rate.norm:              419032.077 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.811 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     375834.359 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.817 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 5529.887 ops/s
[info]                  ·gc.alloc.rate:                   1472.409 MB/sec
[info]                  ·gc.alloc.rate.norm:              419032.078 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.306 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     383144.476 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11.849 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson":
[info]   5594.570 ±(99.9%) 170.192 ops/s [Average]
[info]   (min, avg, max) = (5529.887, 5594.570, 5631.548), stdev = 44.198
[info]   CI (99.9%): [5424.379, 5764.762] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1489.827 ±(99.9%) 46.003 MB/sec [Average]
[info]   (min, avg, max) = (1472.409, 1489.827, 1499.381), stdev = 11.947
[info]   CI (99.9%): [1443.825, 1535.830] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   419032.077 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (419032.077, 419032.077, 419032.078), stdev = 0.001
[info]   CI (99.9%): [419032.075, 419032.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1476.626 ±(99.9%) 1149.268 MB/sec [Average]
[info]   (min, avg, max) = (1338.806, 1476.626, 2010.506), stdev = 298.461
[info]   CI (99.9%): [327.359, 2625.894] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   415532.370 ±(99.9%) 329220.493 B/op [Average]
[info]   (min, avg, max) = (374771.248, 415532.370, 568355.310), stdev = 85497.517
[info]   CI (99.9%): [86311.877, 744752.864] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.154 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.104), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   10.583 ±(99.9%) 43.650 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 10.583, 29.425), stdev = 11.336
[info]   CI (99.9%): [≈ 0, 54.233] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 3.000), stdev = 0.707
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 26.10% complete, ETA 01:38:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6666.416 ops/s
[info] # Warmup Iteration   2: 8858.535 ops/s
[info] # Warmup Iteration   3: 9037.975 ops/s
[info] # Warmup Iteration   4: 9212.085 ops/s
[info] # Warmup Iteration   5: 9375.841 ops/s
[info] Iteration   1: 9375.482 ops/s
[info]                  ·gc.alloc.rate:                   1532.833 MB/sec
[info]                  ·gc.alloc.rate.norm:              257248.046 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.142 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     226084.525 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.494 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 9365.679 ops/s
[info]                  ·gc.alloc.rate:                   1530.958 MB/sec
[info]                  ·gc.alloc.rate.norm:              257249.231 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.257 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     226549.725 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 27.983 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 9373.240 ops/s
[info]                  ·gc.alloc.rate:               1532.238 MB/sec
[info]                  ·gc.alloc.rate.norm:          257272.046 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1348.924 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 226492.416 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 9116.338 ops/s
[info]                  ·gc.alloc.rate:                   1490.219 MB/sec
[info]                  ·gc.alloc.rate.norm:              257272.047 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2026.029 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     349774.501 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.594 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 8982.528 ops/s
[info]                  ·gc.alloc.rate:                   1468.515 MB/sec
[info]                  ·gc.alloc.rate.norm:              257272.052 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.422 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     236933.357 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.295 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readUPickle":
[info]   9242.654 ±(99.9%) 703.342 ops/s [Average]
[info]   (min, avg, max) = (8982.528, 9242.654, 9375.482), stdev = 182.656
[info]   CI (99.9%): [8539.312, 9945.996] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readUPickle:·gc.alloc.rate":
[info]   1510.953 ±(99.9%) 114.922 MB/sec [Average]
[info]   (min, avg, max) = (1468.515, 1510.953, 1532.833), stdev = 29.845
[info]   CI (99.9%): [1396.031, 1625.874] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readUPickle:·gc.alloc.rate.norm":
[info]   257262.684 ±(99.9%) 49.400 B/op [Average]
[info]   (min, avg, max) = (257248.046, 257262.684, 257272.052), stdev = 12.829
[info]   CI (99.9%): [257213.284, 257312.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readUPickle:·gc.churn.PS_Eden_Space":
[info]   1484.555 ±(99.9%) 1165.589 MB/sec [Average]
[info]   (min, avg, max) = (1347.142, 1484.555, 2026.029), stdev = 302.700
[info]   CI (99.9%): [318.966, 2650.144] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   253166.905 ±(99.9%) 208700.050 B/op [Average]
[info]   (min, avg, max) = (226084.525, 253166.905, 349774.501), stdev = 54198.740
[info]   CI (99.9%): [44466.855, 461866.954] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.257 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.167), stdev = 0.067
[info]   CI (99.9%): [≈ 0, 0.307] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   8.473 ±(99.9%) 43.155 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 8.473, 27.983), stdev = 11.207
[info]   CI (99.9%): [≈ 0, 51.628] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readUPickle:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readUPickle:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 3.000), stdev = 0.837
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 26.31% complete, ETA 01:38:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 16848.265 ops/s
[info] # Warmup Iteration   2: 24490.117 ops/s
[info] # Warmup Iteration   3: 24720.118 ops/s
[info] # Warmup Iteration   4: 24973.022 ops/s
[info] # Warmup Iteration   5: 24625.824 ops/s
[info] Iteration   1: 24981.389 ops/s
[info]                  ·gc.alloc.rate:                   1839.535 MB/sec
[info]                  ·gc.alloc.rate.norm:              115896.019 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2015.966 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     127011.737 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.623 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 25015.576 ops/s
[info]                  ·gc.alloc.rate:                   1842.079 MB/sec
[info]                  ·gc.alloc.rate.norm:              115896.017 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.841 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     84674.786 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.548 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 25051.695 ops/s
[info]                  ·gc.alloc.rate:                   1844.808 MB/sec
[info]                  ·gc.alloc.rate.norm:              115896.019 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2022.426 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     127054.467 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.923 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 24828.862 ops/s
[info]                  ·gc.alloc.rate:                   1828.400 MB/sec
[info]                  ·gc.alloc.rate.norm:              115896.017 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2026.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     128422.481 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.278 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 25152.512 ops/s
[info]                  ·gc.alloc.rate:                   1852.091 MB/sec
[info]                  ·gc.alloc.rate.norm:              115896.017 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.223 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     84616.365 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.303 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce":
[info]   25006.007 ±(99.9%) 454.104 ops/s [Average]
[info]   (min, avg, max) = (24828.862, 25006.007, 25152.512), stdev = 117.929
[info]   CI (99.9%): [24551.903, 25460.111] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1841.383 ±(99.9%) 33.283 MB/sec [Average]
[info]   (min, avg, max) = (1828.400, 1841.383, 1852.091), stdev = 8.644
[info]   CI (99.9%): [1808.099, 1874.666] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   115896.018 ±(99.9%) 0.003 B/op [Average]
[info]   (min, avg, max) = (115896.017, 115896.018, 115896.019), stdev = 0.001
[info]   CI (99.9%): [115896.015, 115896.020] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1752.495 ±(99.9%) 1418.326 MB/sec [Average]
[info]   (min, avg, max) = (1345.841, 1752.495, 2026.021), stdev = 368.335
[info]   CI (99.9%): [334.170, 3170.821] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   110355.967 ±(99.9%) 90402.093 B/op [Average]
[info]   (min, avg, max) = (84616.365, 110355.967, 128422.481), stdev = 23477.136
[info]   CI (99.9%): [19953.875, 200758.060] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.127 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.062, 0.104), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   3.935 ±(99.9%) 8.004 B/op [Average]
[info]   (min, avg, max) = (1.303, 3.935, 6.548), stdev = 2.079
[info]   CI (99.9%): [≈ 0, 11.939] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.200, 3.000), stdev = 0.837
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 26.51% complete, ETA 01:38:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 18423.754 ops/s
[info] # Warmup Iteration   2: 27959.278 ops/s
[info] # Warmup Iteration   3: 28806.725 ops/s
[info] # Warmup Iteration   4: 28634.331 ops/s
[info] # Warmup Iteration   5: 29015.590 ops/s
[info] Iteration   1: 29600.760 ops/s
[info]                  ·gc.alloc.rate:                   1831.279 MB/sec
[info]                  ·gc.alloc.rate.norm:              97360.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2008.477 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     106780.715 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.320 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 29482.835 ops/s
[info]                  ·gc.alloc.rate:                   1823.971 MB/sec
[info]                  ·gc.alloc.rate.norm:              97360.015 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2013.531 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     107478.329 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.556 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 29094.852 ops/s
[info]                  ·gc.alloc.rate:                   1799.949 MB/sec
[info]                  ·gc.alloc.rate.norm:              97360.015 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2018.238 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     109167.359 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.504 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 29708.516 ops/s
[info]                  ·gc.alloc.rate:                   1837.837 MB/sec
[info]                  ·gc.alloc.rate.norm:              97360.015 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.600 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     71389.555 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.411 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 29231.858 ops/s
[info]                  ·gc.alloc.rate:                   1808.334 MB/sec
[info]                  ·gc.alloc.rate.norm:              97360.015 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2025.258 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     109039.137 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.362 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala":
[info]   29423.764 ±(99.9%) 983.446 ops/s [Average]
[info]   (min, avg, max) = (29094.852, 29423.764, 29708.516), stdev = 255.398
[info]   CI (99.9%): [28440.319, 30407.210] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1820.274 ±(99.9%) 60.851 MB/sec [Average]
[info]   (min, avg, max) = (1799.949, 1820.274, 1837.837), stdev = 15.803
[info]   CI (99.9%): [1759.423, 1881.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   97360.015 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (97360.015, 97360.015, 97360.016), stdev = 0.001
[info]   CI (99.9%): [97360.013, 97360.017] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1882.621 ±(99.9%) 1151.918 MB/sec [Average]
[info]   (min, avg, max) = (1347.600, 1882.621, 2025.258), stdev = 299.149
[info]   CI (99.9%): [730.703, 3034.539] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   100771.019 ±(99.9%) 63367.233 B/op [Average]
[info]   (min, avg, max) = (71389.555, 100771.019, 109167.359), stdev = 16456.269
[info]   CI (99.9%): [37403.787, 164138.252] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.079 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 0.079, 0.104), stdev = 0.017
[info]   CI (99.9%): [0.012, 0.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   4.231 ±(99.9%) 3.575 B/op [Average]
[info]   (min, avg, max) = (3.320, 4.231, 5.556), stdev = 0.928
[info]   CI (99.9%): [0.656, 7.806] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.400, 6.000), stdev = 1.817
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 26.71% complete, ETA 01:37:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 356011.434 ops/s
[info] # Warmup Iteration   2: 366231.436 ops/s
[info] # Warmup Iteration   3: 362989.798 ops/s
[info] # Warmup Iteration   4: 373733.921 ops/s
[info] # Warmup Iteration   5: 374198.319 ops/s
[info] Iteration   1: 372636.169 ops/s
[info]                  ·gc.alloc.rate:                   823.965 MB/sec
[info]                  ·gc.alloc.rate.norm:              3480.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.525 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2844.620 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.088 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 357129.277 ops/s
[info]                  ·gc.alloc.rate:               789.803 MB/sec
[info]                  ·gc.alloc.rate.norm:          3480.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.632 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2968.133 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 372115.902 ops/s
[info]                  ·gc.alloc.rate:                   822.868 MB/sec
[info]                  ·gc.alloc.rate.norm:              3480.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.140 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5697.205 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.440 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 372453.356 ops/s
[info]                  ·gc.alloc.rate:               823.507 MB/sec
[info]                  ·gc.alloc.rate.norm:          3480.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.454 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2845.903 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 362948.303 ops/s
[info]                  ·gc.alloc.rate:                   802.542 MB/sec
[info]                  ·gc.alloc.rate.norm:              3480.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.472 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2920.326 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.090 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala":
[info]   367456.601 ±(99.9%) 27261.018 ops/s [Average]
[info]   (min, avg, max) = (357129.277, 367456.601, 372636.169), stdev = 7079.600
[info]   CI (99.9%): [340195.583, 394717.620] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   812.537 ±(99.9%) 60.100 MB/sec [Average]
[info]   (min, avg, max) = (789.803, 812.537, 823.965), stdev = 15.608
[info]   CI (99.9%): [752.437, 872.637] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   3480.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3480.001, 3480.001, 3480.001), stdev = 0.001
[info]   CI (99.9%): [3480.001, 3480.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   808.245 ±(99.9%) 1160.012 MB/sec [Average]
[info]   (min, avg, max) = (673.454, 808.245, 1347.140), stdev = 301.252
[info]   CI (99.9%): [≈ 0, 1968.257] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   3455.238 ±(99.9%) 4830.204 B/op [Average]
[info]   (min, avg, max) = (2844.620, 3455.238, 5697.205), stdev = 1254.389
[info]   CI (99.9%): [≈ 0, 8285.441] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.166 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.104), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.195] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.124 ±(99.9%) 0.703 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.124, 0.440), stdev = 0.182
[info]   CI (99.9%): [≈ 0, 0.826] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 26.91% complete, ETA 01:37:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 391966.267 ops/s
[info] # Warmup Iteration   2: 402242.107 ops/s
[info] # Warmup Iteration   3: 418733.603 ops/s
[info] # Warmup Iteration   4: 418750.048 ops/s
[info] # Warmup Iteration   5: 418823.422 ops/s
[info] Iteration   1: 418765.073 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 418862.232 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 418720.147 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 418888.184 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 418676.716 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc":
[info]   418782.470 ±(99.9%) 349.265 ops/s [Average]
[info]   (min, avg, max) = (418676.716, 418782.470, 418888.184), stdev = 90.703
[info]   CI (99.9%): [418433.206, 419131.735] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
[info]   CI (99.9%): [0.001, 0.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 27.11% complete, ETA 01:37:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 20542.561 ops/s
[info] # Warmup Iteration   2: 29061.267 ops/s
[info] # Warmup Iteration   3: 29404.694 ops/s
[info] # Warmup Iteration   4: 29143.949 ops/s
[info] # Warmup Iteration   5: 29470.849 ops/s
[info] Iteration   1: 29628.949 ops/s
[info]                  ·gc.alloc.rate:               1944.184 MB/sec
[info]                  ·gc.alloc.rate.norm:          103240.015 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1343.396 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 71336.996 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 29549.496 ops/s
[info]                  ·gc.alloc.rate:                   1938.403 MB/sec
[info]                  ·gc.alloc.rate.norm:              103240.015 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2017.403 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     107447.553 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.544 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 29596.988 ops/s
[info]                  ·gc.alloc.rate:                   1942.301 MB/sec
[info]                  ·gc.alloc.rate.norm:              103240.015 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2022.846 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     107521.280 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.321 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 29544.257 ops/s
[info]                  ·gc.alloc.rate:               1938.906 MB/sec
[info]                  ·gc.alloc.rate.norm:          103240.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2026.334 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 107895.202 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 29280.875 ops/s
[info]                  ·gc.alloc.rate:                   1920.681 MB/sec
[info]                  ·gc.alloc.rate.norm:              103240.015 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2028.976 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     109061.070 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.357 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson":
[info]   29520.113 ±(99.9%) 532.295 ops/s [Average]
[info]   (min, avg, max) = (29280.875, 29520.113, 29628.949), stdev = 138.235
[info]   CI (99.9%): [28987.818, 30052.408] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1936.895 ±(99.9%) 36.101 MB/sec [Average]
[info]   (min, avg, max) = (1920.681, 1936.895, 1944.184), stdev = 9.375
[info]   CI (99.9%): [1900.795, 1972.996] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   103240.015 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (103240.015, 103240.015, 103240.016), stdev = 0.001
[info]   CI (99.9%): [103240.013, 103240.017] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1887.791 ±(99.9%) 1171.969 MB/sec [Average]
[info]   (min, avg, max) = (1343.396, 1887.791, 2028.976), stdev = 304.357
[info]   CI (99.9%): [715.822, 3059.760] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   100652.420 ±(99.9%) 63152.686 B/op [Average]
[info]   (min, avg, max) = (71336.996, 100652.420, 109061.070), stdev = 16400.552
[info]   CI (99.9%): [37499.735, 163805.106] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.174 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.104), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.220] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   2.444 ±(99.9%) 9.265 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.444, 5.544), stdev = 2.406
[info]   CI (99.9%): [≈ 0, 11.709] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 27.31% complete, ETA 01:36:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 8878.955 ops/s
[info] # Warmup Iteration   2: 10306.964 ops/s
[info] # Warmup Iteration   3: 10292.518 ops/s
[info] # Warmup Iteration   4: 10347.213 ops/s
[info] # Warmup Iteration   5: 10342.550 ops/s
[info] Iteration   1: 10335.102 ops/s
[info]                  ·gc.alloc.rate:                   863.862 MB/sec
[info]                  ·gc.alloc.rate.norm:              131544.042 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.309 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     205160.584 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.680 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 10348.027 ops/s
[info]                  ·gc.alloc.rate:               865.113 MB/sec
[info]                  ·gc.alloc.rate.norm:          131565.891 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.504 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 102426.119 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   3: 10349.463 ops/s
[info]                  ·gc.alloc.rate:                   865.196 MB/sec
[info]                  ·gc.alloc.rate.norm:              131568.042 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.493 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     102416.224 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.331 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 10331.527 ops/s
[info]                  ·gc.alloc.rate:               863.748 MB/sec
[info]                  ·gc.alloc.rate.norm:          131568.042 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.537 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 102594.632 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 10315.503 ops/s
[info]                  ·gc.alloc.rate:                   862.357 MB/sec
[info]                  ·gc.alloc.rate.norm:              131568.057 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.989 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     205507.480 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.528 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeUPickle":
[info]   10335.925 ±(99.9%) 53.315 ops/s [Average]
[info]   (min, avg, max) = (10315.503, 10335.925, 10349.463), stdev = 13.846
[info]   CI (99.9%): [10282.609, 10389.240] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeUPickle:·gc.alloc.rate":
[info]   864.055 ±(99.9%) 4.489 MB/sec [Average]
[info]   (min, avg, max) = (862.357, 864.055, 865.196), stdev = 1.166
[info]   CI (99.9%): [859.566, 868.544] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeUPickle:·gc.alloc.rate.norm":
[info]   131562.815 ±(99.9%) 40.570 B/op [Average]
[info]   (min, avg, max) = (131544.042, 131562.815, 131568.057), stdev = 10.536
[info]   CI (99.9%): [131522.245, 131603.384] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space":
[info]   942.966 ±(99.9%) 1420.759 MB/sec [Average]
[info]   (min, avg, max) = (673.493, 942.966, 1347.309), stdev = 368.967
[info]   CI (99.9%): [≈ 0, 2363.725] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   143621.008 ±(99.9%) 216930.661 B/op [Average]
[info]   (min, avg, max) = (102416.224, 143621.008, 205507.480), stdev = 56336.204
[info]   CI (99.9%): [≈ 0, 360551.669] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.083), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.181] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   5.708 ±(99.9%) 21.847 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 5.708, 12.680), stdev = 5.673
[info]   CI (99.9%): [≈ 0, 27.554] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeUPickle:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeUPickle:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 0.837
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 27.51% complete, ETA 01:36:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 76304.386 ops/s
[info] # Warmup Iteration   2: 92755.186 ops/s
[info] # Warmup Iteration   3: 94598.909 ops/s
[info] # Warmup Iteration   4: 94876.485 ops/s
[info] # Warmup Iteration   5: 96057.422 ops/s
[info] Iteration   1: 95518.159 ops/s
[info]                  ·gc.alloc.rate:               1646.337 MB/sec
[info]                  ·gc.alloc.rate.norm:          27128.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1345.866 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 22176.898 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 94834.372 ops/s
[info]                  ·gc.alloc.rate:                   1634.580 MB/sec
[info]                  ·gc.alloc.rate.norm:              27128.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2020.711 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     33536.345 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.727 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 94944.509 ops/s
[info]                  ·gc.alloc.rate:                   1636.545 MB/sec
[info]                  ·gc.alloc.rate.norm:              27128.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.945 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22360.640 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.380 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 95515.638 ops/s
[info]                  ·gc.alloc.rate:                   1646.863 MB/sec
[info]                  ·gc.alloc.rate.norm:              27128.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1351.293 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22259.218 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.343 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 95468.263 ops/s
[info]                  ·gc.alloc.rate:                   1645.548 MB/sec
[info]                  ·gc.alloc.rate.norm:              27128.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2029.003 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     33449.537 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.373 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce":
[info]   95256.188 ±(99.9%) 1300.116 ops/s [Average]
[info]   (min, avg, max) = (94834.372, 95256.188, 95518.159), stdev = 337.636
[info]   CI (99.9%): [93956.073, 96556.304] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:·gc.alloc.rate":
[info]   1641.975 ±(99.9%) 22.768 MB/sec [Average]
[info]   (min, avg, max) = (1634.580, 1641.975, 1646.863), stdev = 5.913
[info]   CI (99.9%): [1619.206, 1664.743] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   27128.005 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (27128.005, 27128.005, 27128.005), stdev = 0.001
[info]   CI (99.9%): [27128.004, 27128.005] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1619.164 ±(99.9%) 1426.134 MB/sec [Average]
[info]   (min, avg, max) = (1345.866, 1619.164, 2029.003), stdev = 370.362
[info]   CI (99.9%): [193.030, 3045.298] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   26756.528 ±(99.9%) 23681.063 B/op [Average]
[info]   (min, avg, max) = (22176.898, 26756.528, 33536.345), stdev = 6149.897
[info]   CI (99.9%): [3075.465, 50437.591] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.174 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.058, 0.104), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.232] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.965 ±(99.9%) 2.880 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.965, 1.727), stdev = 0.748
[info]   CI (99.9%): [≈ 0, 3.845] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 3.000), stdev = 0.837
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 27.71% complete, ETA 01:36:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 9699.801 ops/s
[info] # Warmup Iteration   2: 426040.883 ops/s
[info] # Warmup Iteration   3: 424877.830 ops/s
[info] # Warmup Iteration   4: 427809.315 ops/s
[info] # Warmup Iteration   5: 429192.876 ops/s
[info] Iteration   1: 429357.917 ops/s
[info]                  ·gc.alloc.rate:                   445.284 MB/sec
[info]                  ·gc.alloc.rate.norm:              1632.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.676 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1875.335 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.034 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.126 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 427455.648 ops/s
[info]                  ·gc.alloc.rate:               443.262 MB/sec
[info]                  ·gc.alloc.rate.norm:          1632.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.618 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1883.674 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 429163.453 ops/s
[info]                  ·gc.alloc.rate:      445.185 MB/sec
[info]                  ·gc.alloc.rate.norm: 1632.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 427621.471 ops/s
[info]                  ·gc.alloc.rate:               443.433 MB/sec
[info]                  ·gc.alloc.rate.norm:          1632.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      663.821 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2443.110 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 428011.975 ops/s
[info]                  ·gc.alloc.rate:               443.820 MB/sec
[info]                  ·gc.alloc.rate.norm:          1632.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      663.807 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2440.930 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava":
[info]   428322.093 ±(99.9%) 3400.028 ops/s [Average]
[info]   (min, avg, max) = (427455.648, 428322.093, 429357.917), stdev = 882.976
[info]   CI (99.9%): [424922.065, 431722.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   444.197 ±(99.9%) 3.731 MB/sec [Average]
[info]   (min, avg, max) = (443.262, 444.197, 445.284), stdev = 0.969
[info]   CI (99.9%): [440.465, 447.928] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   1632.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1632.001, 1632.001, 1632.001), stdev = 0.001
[info]   CI (99.9%): [1632.001, 1632.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   470.184 ±(99.9%) 1053.657 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 470.184, 663.821), stdev = 273.631
[info]   CI (99.9%): [≈ 0, 1523.841] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   1728.610 ±(99.9%) 3875.389 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1728.610, 2443.110), stdev = 1006.426
[info]   CI (99.9%): [≈ 0, 5603.999] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.007 ±(99.9%) 0.059 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.007, 0.034), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.066] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.025 ±(99.9%) 0.217 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.126), stdev = 0.056
[info]   CI (99.9%): [≈ 0, 0.242] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.800, 3.000), stdev = 1.095
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 27.91% complete, ETA 01:36:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 209074.841 ops/s
[info] # Warmup Iteration   2: 300556.216 ops/s
[info] # Warmup Iteration   3: 303010.865 ops/s
[info] # Warmup Iteration   4: 300497.342 ops/s
[info] # Warmup Iteration   5: 302412.045 ops/s
[info] Iteration   1: 304108.134 ops/s
[info]                  ·gc.alloc.rate:      429.729 MB/sec
[info]                  ·gc.alloc.rate.norm: 2224.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 309355.939 ops/s
[info]                  ·gc.alloc.rate:                   437.142 MB/sec
[info]                  ·gc.alloc.rate.norm:              2224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.606 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2602.842 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.016 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.083 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 308106.783 ops/s
[info]                  ·gc.alloc.rate:               435.387 MB/sec
[info]                  ·gc.alloc.rate.norm:          2224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.617 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2613.392 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 309271.138 ops/s
[info]                  ·gc.alloc.rate:                   437.016 MB/sec
[info]                  ·gc.alloc.rate.norm:              2224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.807 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3398.513 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.130 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.840 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 310158.848 ops/s
[info]                  ·gc.alloc.rate:      438.287 MB/sec
[info]                  ·gc.alloc.rate.norm: 2224.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala":
[info]   308200.168 ±(99.9%) 9248.096 ops/s [Average]
[info]   (min, avg, max) = (304108.134, 308200.168, 310158.848), stdev = 2401.701
[info]   CI (99.9%): [298952.072, 317448.265] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   435.512 ±(99.9%) 13.069 MB/sec [Average]
[info]   (min, avg, max) = (429.729, 435.512, 438.287), stdev = 3.394
[info]   CI (99.9%): [422.443, 448.582] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   2224.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2224.001, 2224.001, 2224.001), stdev = 0.001
[info]   CI (99.9%): [2224.001, 2224.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   338.206 ±(99.9%) 1213.934 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 338.206, 667.807), stdev = 315.255
[info]   CI (99.9%): [≈ 0, 1552.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1722.949 ±(99.9%) 6182.569 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1722.949, 3398.513), stdev = 1605.594
[info]   CI (99.9%): [≈ 0, 7905.518] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.429 ±(99.9%) 3.661 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.429, 2.130), stdev = 0.951
[info]   CI (99.9%): [≈ 0, 4.090] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.185 ±(99.9%) 18.632 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.185, 10.840), stdev = 4.839
[info]   CI (99.9%): [≈ 0, 20.817] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.600, 3.000), stdev = 1.517
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 28.11% complete, ETA 01:35:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 661086.958 ops/s
[info] # Warmup Iteration   2: 701016.825 ops/s
[info] # Warmup Iteration   3: 705054.470 ops/s
[info] # Warmup Iteration   4: 704996.692 ops/s
[info] # Warmup Iteration   5: 703707.984 ops/s
[info] Iteration   1: 705175.096 ops/s
[info]                  ·gc.alloc.rate:                   458.803 MB/sec
[info]                  ·gc.alloc.rate.norm:              1024.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.596 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1141.830 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 704789.972 ops/s
[info]                  ·gc.alloc.rate:                   458.665 MB/sec
[info]                  ·gc.alloc.rate.norm:              1024.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.723 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1142.455 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.046 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 707095.022 ops/s
[info]                  ·gc.alloc.rate:      460.071 MB/sec
[info]                  ·gc.alloc.rate.norm: 1024.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 706019.885 ops/s
[info]                  ·gc.alloc.rate:                   459.340 MB/sec
[info]                  ·gc.alloc.rate.norm:              1024.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.445 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1501.301 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.553 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.462 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 705658.596 ops/s
[info]                  ·gc.alloc.rate:                   459.117 MB/sec
[info]                  ·gc.alloc.rate.norm:              1024.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.453 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1502.049 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.046 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala":
[info]   705747.714 ±(99.9%) 3412.994 ops/s [Average]
[info]   (min, avg, max) = (704789.972, 705747.714, 707095.022), stdev = 886.344
[info]   CI (99.9%): [702334.720, 709160.708] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   459.199 ±(99.9%) 2.135 MB/sec [Average]
[info]   (min, avg, max) = (458.665, 459.199, 460.071), stdev = 0.554
[info]   CI (99.9%): [457.065, 461.334] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   1024.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1024.001, 1024.001, 1024.001), stdev = 0.001
[info]   CI (99.9%): [1024.001, 1024.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   474.043 ±(99.9%) 1066.900 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 474.043, 673.453), stdev = 277.071
[info]   CI (99.9%): [≈ 0, 1540.943] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1057.527 ±(99.9%) 2379.326 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1057.527, 1502.049), stdev = 617.903
[info]   CI (99.9%): [≈ 0, 3436.853] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.321 ±(99.9%) 2.652 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.321, 1.553), stdev = 0.689
[info]   CI (99.9%): [≈ 0, 2.973] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.716 ±(99.9%) 5.913 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.716, 3.462), stdev = 1.535
[info]   CI (99.9%): [≈ 0, 6.628] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 3.000), stdev = 1.140
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 28.31% complete, ETA 01:35:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 45441.088 ops/s
[info] # Warmup Iteration   2: 71682.651 ops/s
[info] # Warmup Iteration   3: 72194.331 ops/s
[info] # Warmup Iteration   4: 71400.323 ops/s
[info] # Warmup Iteration   5: 72680.604 ops/s
[info] Iteration   1: 73011.723 ops/s
[info]                  ·gc.alloc.rate:                   3101.360 MB/sec
[info]                  ·gc.alloc.rate.norm:              66856.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3374.893 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     72752.562 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.897 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 73049.510 ops/s
[info]                  ·gc.alloc.rate:                   3103.012 MB/sec
[info]                  ·gc.alloc.rate.norm:              66856.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2706.846 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     58320.402 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.243 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 72927.933 ops/s
[info]                  ·gc.alloc.rate:                   3097.879 MB/sec
[info]                  ·gc.alloc.rate.norm:              66856.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3389.975 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     73159.808 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.797 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 73056.622 ops/s
[info]                  ·gc.alloc.rate:                   3103.320 MB/sec
[info]                  ·gc.alloc.rate.norm:              66856.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3396.023 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     73161.805 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.345 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 73023.808 ops/s
[info]                  ·gc.alloc.rate:                   3101.850 MB/sec
[info]                  ·gc.alloc.rate.norm:              66856.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2719.785 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     58621.133 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.346 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson":
[info]   73013.919 ±(99.9%) 198.097 ops/s [Average]
[info]   (min, avg, max) = (72927.933, 73013.919, 73056.622), stdev = 51.445
[info]   CI (99.9%): [72815.822, 73212.016] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3101.484 ±(99.9%) 8.360 MB/sec [Average]
[info]   (min, avg, max) = (3097.879, 3101.484, 3103.320), stdev = 2.171
[info]   CI (99.9%): [3093.124, 3109.844] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   66856.006 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (66856.006, 66856.006, 66856.006), stdev = 0.001
[info]   CI (99.9%): [66856.005, 66856.007] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3117.504 ±(99.9%) 1421.199 MB/sec [Average]
[info]   (min, avg, max) = (2706.846, 3117.504, 3396.023), stdev = 369.081
[info]   CI (99.9%): [1696.305, 4538.704] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   67203.142 ±(99.9%) 30704.965 B/op [Average]
[info]   (min, avg, max) = (58320.402, 67203.142, 73161.805), stdev = 7973.982
[info]   CI (99.9%): [36498.177, 97908.107] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.071 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.071, 0.104), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.162] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.526 ±(99.9%) 1.970 B/op [Average]
[info]   (min, avg, max) = (0.897, 1.526, 2.243), stdev = 0.512
[info]   CI (99.9%): [≈ 0, 3.496] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 28.51% complete, ETA 01:35:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 115686.465 ops/s
[info] # Warmup Iteration   2: 123635.040 ops/s
[info] # Warmup Iteration   3: 129513.504 ops/s
[info] # Warmup Iteration   4: 128855.756 ops/s
[info] # Warmup Iteration   5: 129556.329 ops/s
[info] Iteration   1: 129957.449 ops/s
[info]                  ·gc.alloc.rate:                   1460.050 MB/sec
[info]                  ·gc.alloc.rate.norm:              17680.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.767 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16320.343 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.756 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 126800.859 ops/s
[info]                  ·gc.alloc.rate:                   1424.996 MB/sec
[info]                  ·gc.alloc.rate.norm:              17680.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.820 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16734.883 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.034 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 129553.499 ops/s
[info]                  ·gc.alloc.rate:                   1455.397 MB/sec
[info]                  ·gc.alloc.rate.norm:              17680.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.627 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16395.127 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.264 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 129880.404 ops/s
[info]                  ·gc.alloc.rate:                   1458.958 MB/sec
[info]                  ·gc.alloc.rate.norm:              17680.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.867 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16370.126 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.252 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 129867.194 ops/s
[info]                  ·gc.alloc.rate:                   1459.010 MB/sec
[info]                  ·gc.alloc.rate.norm:              17680.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.382 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16387.910 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.252 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readUPickle":
[info]   129211.881 ±(99.9%) 5223.963 ops/s [Average]
[info]   (min, avg, max) = (126800.859, 129211.881, 129957.449), stdev = 1356.647
[info]   CI (99.9%): [123987.918, 134435.844] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readUPickle:·gc.alloc.rate":
[info]   1451.682 ±(99.9%) 57.843 MB/sec [Average]
[info]   (min, avg, max) = (1424.996, 1451.682, 1460.050), stdev = 15.022
[info]   CI (99.9%): [1393.840, 1509.525] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readUPickle:·gc.alloc.rate.norm":
[info]   17680.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (17680.003, 17680.003, 17680.003), stdev = 0.001
[info]   CI (99.9%): [17680.003, 17680.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readUPickle:·gc.churn.PS_Eden_Space":
[info]   1349.893 ±(99.9%) 6.912 MB/sec [Average]
[info]   (min, avg, max) = (1347.767, 1349.893, 1352.382), stdev = 1.795
[info]   CI (99.9%): [1342.981, 1356.805] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   16441.678 ±(99.9%) 641.074 B/op [Average]
[info]   (min, avg, max) = (16320.343, 16441.678, 16734.883), stdev = 166.485
[info]   CI (99.9%): [15800.604, 17082.752] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.058, 0.104), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.202] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   0.712 ±(99.9%) 1.757 B/op [Average]
[info]   (min, avg, max) = (0.252, 0.712, 1.264), stdev = 0.456
[info]   CI (99.9%): [≈ 0, 2.469] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readUPickle:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readUPickle:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 28.71% complete, ETA 01:35:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 158413.776 ops/s
[info] # Warmup Iteration   2: 211069.713 ops/s
[info] # Warmup Iteration   3: 215613.721 ops/s
[info] # Warmup Iteration   4: 214912.458 ops/s
[info] # Warmup Iteration   5: 215344.968 ops/s
[info] Iteration   1: 210492.233 ops/s
[info]                  ·gc.alloc.rate:                   1710.865 MB/sec
[info]                  ·gc.alloc.rate.norm:              12792.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2014.539 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15062.555 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.156 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 213569.712 ops/s
[info]                  ·gc.alloc.rate:                   1735.865 MB/sec
[info]                  ·gc.alloc.rate.norm:              12792.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2018.538 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14875.090 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.767 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 214097.649 ops/s
[info]                  ·gc.alloc.rate:                   1740.181 MB/sec
[info]                  ·gc.alloc.rate.norm:              12792.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.043 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9909.413 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.459 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 210386.008 ops/s
[info]                  ·gc.alloc.rate:                   1709.953 MB/sec
[info]                  ·gc.alloc.rate.norm:              12792.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2024.691 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15146.524 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.311 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 210593.688 ops/s
[info]                  ·gc.alloc.rate:                   1711.596 MB/sec
[info]                  ·gc.alloc.rate.norm:              12792.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1351.507 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10100.795 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.156 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce":
[info]   211827.858 ±(99.9%) 7092.927 ops/s [Average]
[info]   (min, avg, max) = (210386.008, 211827.858, 214097.649), stdev = 1842.011
[info]   CI (99.9%): [204734.931, 218920.785] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1721.692 ±(99.9%) 57.749 MB/sec [Average]
[info]   (min, avg, max) = (1709.953, 1721.692, 1740.181), stdev = 14.997
[info]   CI (99.9%): [1663.943, 1779.441] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   12792.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (12792.002, 12792.002, 12792.002), stdev = 0.001
[info]   CI (99.9%): [12792.002, 12792.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1751.464 ±(99.9%) 1412.068 MB/sec [Average]
[info]   (min, avg, max) = (1348.043, 1751.464, 2024.691), stdev = 366.710
[info]   CI (99.9%): [339.395, 3163.532] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   13018.875 ±(99.9%) 10603.788 B/op [Average]
[info]   (min, avg, max) = (9909.413, 13018.875, 15146.524), stdev = 2753.770
[info]   CI (99.9%): [2415.087, 23622.664] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.104), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.184] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.370 ±(99.9%) 0.984 B/op [Average]
[info]   (min, avg, max) = (0.156, 0.370, 0.767), stdev = 0.255
[info]   CI (99.9%): [≈ 0, 1.353] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 28.92% complete, ETA 01:34:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 42487.614 ops/s
[info] # Warmup Iteration   2: 952379.657 ops/s
[info] # Warmup Iteration   3: 942248.043 ops/s
[info] # Warmup Iteration   4: 939637.943 ops/s
[info] # Warmup Iteration   5: 942995.456 ops/s
[info] Iteration   1: 939375.631 ops/s
[info]                  ·gc.alloc.rate:               510.986 MB/sec
[info]                  ·gc.alloc.rate.norm:          856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.690 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 857.179 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 950077.174 ops/s
[info]                  ·gc.alloc.rate:      516.822 MB/sec
[info]                  ·gc.alloc.rate.norm: 856.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 946897.573 ops/s
[info]                  ·gc.alloc.rate:               515.103 MB/sec
[info]                  ·gc.alloc.rate.norm:          856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      663.961 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1103.373 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 943395.701 ops/s
[info]                  ·gc.alloc.rate:                   513.110 MB/sec
[info]                  ·gc.alloc.rate.norm:              856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.842 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1107.461 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.039 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.065 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 945197.936 ops/s
[info]                  ·gc.alloc.rate:               514.042 MB/sec
[info]                  ·gc.alloc.rate.norm:          856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      665.115 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1107.573 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava":
[info]   944988.803 ±(99.9%) 15357.304 ops/s [Average]
[info]   (min, avg, max) = (939375.631, 944988.803, 950077.174), stdev = 3988.243
[info]   CI (99.9%): [929631.499, 960346.108] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   514.012 ±(99.9%) 8.404 MB/sec [Average]
[info]   (min, avg, max) = (510.986, 514.012, 516.822), stdev = 2.183
[info]   CI (99.9%): [505.608, 522.417] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   856.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (856.000, 856.000, 856.000), stdev = 0.001
[info]   CI (99.9%): [856.000, 856.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   500.921 ±(99.9%) 1107.893 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 500.921, 665.115), stdev = 287.716
[info]   CI (99.9%): [≈ 0, 1608.814] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   835.117 ±(99.9%) 1844.969 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 835.117, 1107.573), stdev = 479.132
[info]   CI (99.9%): [≈ 0, 2680.086] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.039), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.075] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.013 ±(99.9%) 0.112 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.013, 0.065), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.800, 3.000), stdev = 1.095
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 29.12% complete, ETA 01:34:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 600831.353 ops/s
[info] # Warmup Iteration   2: 837017.640 ops/s
[info] # Warmup Iteration   3: 839783.714 ops/s
[info] # Warmup Iteration   4: 851190.917 ops/s
[info] # Warmup Iteration   5: 828016.932 ops/s
[info] Iteration   1: 836101.032 ops/s
[info]                  ·gc.alloc.rate:                   658.754 MB/sec
[info]                  ·gc.alloc.rate.norm:              1240.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.840 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1257.105 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.094 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.942 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 835786.605 ops/s
[info]                  ·gc.alloc.rate:                   658.638 MB/sec
[info]                  ·gc.alloc.rate.norm:              1240.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.961 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1257.553 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.039 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 837237.858 ops/s
[info]                  ·gc.alloc.rate:                   659.640 MB/sec
[info]                  ·gc.alloc.rate.norm:              1240.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          668.150 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1255.999 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.039 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 839657.210 ops/s
[info]                  ·gc.alloc.rate:               661.547 MB/sec
[info]                  ·gc.alloc.rate.norm:          1240.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.162 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1252.400 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 835918.162 ops/s
[info]                  ·gc.alloc.rate:                   658.837 MB/sec
[info]                  ·gc.alloc.rate.norm:              1240.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          668.715 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1258.592 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.039 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala":
[info]   836940.173 ±(99.9%) 6253.678 ops/s [Average]
[info]   (min, avg, max) = (835786.605, 836940.173, 839657.210), stdev = 1624.060
[info]   CI (99.9%): [830686.495, 843193.852] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   659.483 ±(99.9%) 4.695 MB/sec [Average]
[info]   (min, avg, max) = (658.638, 659.483, 661.547), stdev = 1.219
[info]   CI (99.9%): [654.788, 664.178] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1240.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1240.001, 1240.001, 1240.001), stdev = 0.001
[info]   CI (99.9%): [1240.000, 1240.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   668.166 ±(99.9%) 1.291 MB/sec [Average]
[info]   (min, avg, max) = (667.840, 668.166, 668.715), stdev = 0.335
[info]   CI (99.9%): [666.875, 669.457] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1256.330 ±(99.9%) 9.187 B/op [Average]
[info]   (min, avg, max) = (1252.400, 1256.330, 1258.592), stdev = 2.386
[info]   CI (99.9%): [1247.143, 1265.517] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.431 ±(99.9%) 3.580 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.431, 2.094), stdev = 0.930
[info]   CI (99.9%): [≈ 0, 4.011] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.812 ±(99.9%) 6.739 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.812, 3.942), stdev = 1.750
[info]   CI (99.9%): [≈ 0, 7.551] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 29.32% complete, ETA 01:34:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 963883.114 ops/s
[info] # Warmup Iteration   2: 1011628.207 ops/s
[info] # Warmup Iteration   3: 1018582.348 ops/s
[info] # Warmup Iteration   4: 1017304.620 ops/s
[info] # Warmup Iteration   5: 1018138.938 ops/s
[info] Iteration   1: 1018337.434 ops/s
[info]                  ·gc.alloc.rate:                   553.972 MB/sec
[info]                  ·gc.alloc.rate.norm:              856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.710 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     790.698 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 1003822.693 ops/s
[info]                  ·gc.alloc.rate:                   545.962 MB/sec
[info]                  ·gc.alloc.rate.norm:              856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.130 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1055.385 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.553 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.435 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 1000552.652 ops/s
[info]                  ·gc.alloc.rate:                   544.263 MB/sec
[info]                  ·gc.alloc.rate.norm:              856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.241 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1058.853 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.098 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 1021797.636 ops/s
[info]                  ·gc.alloc.rate:      555.965 MB/sec
[info]                  ·gc.alloc.rate.norm: 856.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1021674.882 ops/s
[info]                  ·gc.alloc.rate:               555.762 MB/sec
[info]                  ·gc.alloc.rate.norm:          856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.912 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1036.438 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala":
[info]   1013237.059 ±(99.9%) 39458.233 ops/s [Average]
[info]   (min, avg, max) = (1000552.652, 1013237.059, 1021797.636), stdev = 10247.178
[info]   CI (99.9%): [973778.826, 1052695.293] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   551.185 ±(99.9%) 21.676 MB/sec [Average]
[info]   (min, avg, max) = (544.263, 551.185, 555.965), stdev = 5.629
[info]   CI (99.9%): [529.508, 572.861] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   856.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (856.000, 856.000, 856.000), stdev = 0.001
[info]   CI (99.9%): [856.000, 856.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   506.199 ±(99.9%) 1122.365 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 506.199, 673.241), stdev = 291.475
[info]   CI (99.9%): [≈ 0, 1628.564] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   788.275 ±(99.9%) 1751.438 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 788.275, 1058.853), stdev = 454.843
[info]   CI (99.9%): [≈ 0, 2539.713] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.327 ±(99.9%) 2.640 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.327, 1.553), stdev = 0.686
[info]   CI (99.9%): [≈ 0, 2.968] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.513 ±(99.9%) 4.140 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.513, 2.435), stdev = 1.075
[info]   CI (99.9%): [≈ 0, 4.653] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 0.837
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 29.52% complete, ETA 01:34:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 952147.346 ops/s
[info] # Warmup Iteration   2: 998888.848 ops/s
[info] # Warmup Iteration   3: 1000990.507 ops/s
[info] # Warmup Iteration   4: 976986.644 ops/s
[info] # Warmup Iteration   5: 997225.882 ops/s
[info] Iteration   1: 1000310.785 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1000968.366 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1000711.093 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1001127.089 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1000193.557 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc":
[info]   1000662.178 ±(99.9%) 1558.641 ops/s [Average]
[info]   (min, avg, max) = (1000193.557, 1000662.178, 1001127.089), stdev = 404.774
[info]   CI (99.9%): [999103.537, 1002220.819] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻³ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 29.72% complete, ETA 01:33:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 19675.030 ops/s
[info] # Warmup Iteration   2: 27213.556 ops/s
[info] # Warmup Iteration   3: 27367.039 ops/s
[info] # Warmup Iteration   4: 27179.994 ops/s
[info] # Warmup Iteration   5: 27584.253 ops/s
[info] Iteration   1: 26875.029 ops/s
[info]                  ·gc.alloc.rate:                   1733.742 MB/sec
[info]                  ·gc.alloc.rate.norm:              101512.017 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2012.743 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     117847.771 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.438 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 27593.989 ops/s
[info]                  ·gc.alloc.rate:                   1780.462 MB/sec
[info]                  ·gc.alloc.rate.norm:              101512.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2017.205 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     115009.767 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.937 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 27493.135 ops/s
[info]                  ·gc.alloc.rate:                   1773.719 MB/sec
[info]                  ·gc.alloc.rate.norm:              101512.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.914 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     77085.475 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.958 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 27411.166 ops/s
[info]                  ·gc.alloc.rate:                   1767.951 MB/sec
[info]                  ·gc.alloc.rate.norm:              101512.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2022.729 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     116140.836 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.391 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 27398.263 ops/s
[info]                  ·gc.alloc.rate:                   1767.594 MB/sec
[info]                  ·gc.alloc.rate.norm:              101512.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2027.537 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     116440.418 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.392 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson":
[info]   27354.316 ±(99.9%) 1074.724 ops/s [Average]
[info]   (min, avg, max) = (26875.029, 27354.316, 27593.989), stdev = 279.103
[info]   CI (99.9%): [26279.592, 28429.041] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1764.694 ±(99.9%) 69.609 MB/sec [Average]
[info]   (min, avg, max) = (1733.742, 1764.694, 1780.462), stdev = 18.077
[info]   CI (99.9%): [1695.085, 1834.302] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   101512.016 ±(99.9%) 0.003 B/op [Average]
[info]   (min, avg, max) = (101512.016, 101512.016, 101512.017), stdev = 0.001
[info]   CI (99.9%): [101512.013, 101512.019] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1885.426 ±(99.9%) 1159.387 MB/sec [Average]
[info]   (min, avg, max) = (1346.914, 1885.426, 2027.537), stdev = 301.089
[info]   CI (99.9%): [726.039, 3044.812] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   108504.853 ±(99.9%) 67744.603 B/op [Average]
[info]   (min, avg, max) = (77085.475, 108504.853, 117847.771), stdev = 17593.058
[info]   CI (99.9%): [40760.251, 176249.456] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.067, 0.104), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.198] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   3.823 ±(99.9%) 7.468 B/op [Average]
[info]   (min, avg, max) = (2.391, 3.823, 5.958), stdev = 1.939
[info]   CI (99.9%): [≈ 0, 11.291] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.400, 3.000), stdev = 0.894
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 29.92% complete, ETA 01:33:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 99163.999 ops/s
[info] # Warmup Iteration   2: 104830.734 ops/s
[info] # Warmup Iteration   3: 106008.036 ops/s
[info] # Warmup Iteration   4: 107414.655 ops/s
[info] # Warmup Iteration   5: 107356.239 ops/s
[info] Iteration   1: 107182.888 ops/s
[info]                  ·gc.alloc.rate:                   1574.552 MB/sec
[info]                  ·gc.alloc.rate.norm:              23120.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.678 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19803.371 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.306 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 106666.998 ops/s
[info]                  ·gc.alloc.rate:               1567.001 MB/sec
[info]                  ·gc.alloc.rate.norm:          23120.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1349.381 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 19909.173 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 107349.257 ops/s
[info]                  ·gc.alloc.rate:                   1577.042 MB/sec
[info]                  ·gc.alloc.rate.norm:              23120.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2025.877 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29700.082 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.526 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 107398.850 ops/s
[info]                  ·gc.alloc.rate:                   1577.922 MB/sec
[info]                  ·gc.alloc.rate.norm:              23120.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.460 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19816.501 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.610 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 107397.213 ops/s
[info]                  ·gc.alloc.rate:                   1577.868 MB/sec
[info]                  ·gc.alloc.rate.norm:              23120.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1353.734 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19835.840 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.610 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeUPickle":
[info]   107199.041 ±(99.9%) 1194.773 ops/s [Average]
[info]   (min, avg, max) = (106666.998, 107199.041, 107398.850), stdev = 310.279
[info]   CI (99.9%): [106004.269, 108393.814] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeUPickle:·gc.alloc.rate":
[info]   1574.877 ±(99.9%) 17.755 MB/sec [Average]
[info]   (min, avg, max) = (1567.001, 1574.877, 1577.922), stdev = 4.611
[info]   CI (99.9%): [1557.122, 1592.632] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeUPickle:·gc.alloc.rate.norm":
[info]   23120.004 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (23120.004, 23120.004, 23120.004), stdev = 0.001
[info]   CI (99.9%): [23120.004, 23120.005] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space":
[info]   1486.026 ±(99.9%) 1162.098 MB/sec [Average]
[info]   (min, avg, max) = (1348.678, 1486.026, 2025.877), stdev = 301.793
[info]   CI (99.9%): [323.928, 2648.124] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   21812.993 ±(99.9%) 16978.283 B/op [Average]
[info]   (min, avg, max) = (19803.371, 21812.993, 29700.082), stdev = 4409.206
[info]   CI (99.9%): [4834.710, 38791.277] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.150 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.104), stdev = 0.039
[info]   CI (99.9%): [≈ 0, 0.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   0.610 ±(99.9%) 2.198 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.610, 1.526), stdev = 0.571
[info]   CI (99.9%): [≈ 0, 2.809] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeUPickle:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeUPickle:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 30.12% complete, ETA 01:33:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 86930.092 ops/s
[info] # Warmup Iteration   2: 120702.403 ops/s
[info] # Warmup Iteration   3: 123681.155 ops/s
[info] # Warmup Iteration   4: 123671.543 ops/s
[info] # Warmup Iteration   5: 123959.671 ops/s
[info] Iteration   1: 124196.904 ops/s
[info]                  ·gc.alloc.rate:                   1710.862 MB/sec
[info]                  ·gc.alloc.rate.norm:              21672.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2014.558 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25519.021 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.791 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 123683.684 ops/s
[info]                  ·gc.alloc.rate:                   1703.790 MB/sec
[info]                  ·gc.alloc.rate.norm:              21672.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.478 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17114.315 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.589 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 122545.167 ops/s
[info]                  ·gc.alloc.rate:                   1687.470 MB/sec
[info]                  ·gc.alloc.rate.norm:              21672.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2020.393 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25947.694 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.535 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 122600.583 ops/s
[info]                  ·gc.alloc.rate:                   1688.184 MB/sec
[info]                  ·gc.alloc.rate.norm:              21672.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.236 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17320.774 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.267 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 122535.739 ops/s
[info]                  ·gc.alloc.rate:                   1687.266 MB/sec
[info]                  ·gc.alloc.rate.norm:              21672.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2026.658 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     26031.304 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.535 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce":
[info]   123112.415 ±(99.9%) 2994.332 ops/s [Average]
[info]   (min, avg, max) = (122535.739, 123112.415, 124196.904), stdev = 777.619
[info]   CI (99.9%): [120118.083, 126106.748] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:·gc.alloc.rate":
[info]   1695.514 ±(99.9%) 42.641 MB/sec [Average]
[info]   (min, avg, max) = (1687.266, 1695.514, 1710.862), stdev = 11.074
[info]   CI (99.9%): [1652.874, 1738.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   21672.004 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (21672.003, 21672.004, 21672.004), stdev = 0.001
[info]   CI (99.9%): [21672.003, 21672.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1751.265 ±(99.9%) 1419.897 MB/sec [Average]
[info]   (min, avg, max) = (1345.478, 1751.265, 2026.658), stdev = 368.743
[info]   CI (99.9%): [331.368, 3171.161] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   22386.622 ±(99.9%) 18187.609 B/op [Average]
[info]   (min, avg, max) = (17114.315, 22386.622, 26031.304), stdev = 4723.264
[info]   CI (99.9%): [4199.013, 40574.231] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.154 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.058, 0.125), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.213] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.743 ±(99.9%) 1.956 B/op [Average]
[info]   (min, avg, max) = (0.267, 0.743, 1.589), stdev = 0.508
[info]   CI (99.9%): [≈ 0, 2.699] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 30.32% complete, ETA 01:32:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 127479.584 ops/s
[info] # Warmup Iteration   2: 189676.902 ops/s
[info] # Warmup Iteration   3: 186905.048 ops/s
[info] # Warmup Iteration   4: 192888.728 ops/s
[info] # Warmup Iteration   5: 193397.583 ops/s
[info] Iteration   1: 193016.046 ops/s
[info]                  ·gc.alloc.rate:                   1151.826 MB/sec
[info]                  ·gc.alloc.rate.norm:              9392.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.993 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10885.549 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.679 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 191199.919 ops/s
[info]                  ·gc.alloc.rate:               1141.114 MB/sec
[info]                  ·gc.alloc.rate.norm:          9392.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      667.534 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5494.175 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 195745.185 ops/s
[info]                  ·gc.alloc.rate:                   1168.103 MB/sec
[info]                  ·gc.alloc.rate.norm:              9392.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.950 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10749.599 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.837 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 197897.942 ops/s
[info]                  ·gc.alloc.rate:                   1180.941 MB/sec
[info]                  ·gc.alloc.rate.norm:              9392.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.301 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10643.478 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.331 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 198253.791 ops/s
[info]                  ·gc.alloc.rate:                   1183.331 MB/sec
[info]                  ·gc.alloc.rate.norm:              9392.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.260 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10645.468 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.496 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala":
[info]   195222.577 ±(99.9%) 11816.758 ops/s [Average]
[info]   (min, avg, max) = (191199.919, 195222.577, 198253.791), stdev = 3068.775
[info]   CI (99.9%): [183405.818, 207039.335] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1165.063 ±(99.9%) 70.581 MB/sec [Average]
[info]   (min, avg, max) = (1141.114, 1165.063, 1183.331), stdev = 18.330
[info]   CI (99.9%): [1094.482, 1235.644] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   9392.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (9392.002, 9392.002, 9392.002), stdev = 0.001
[info]   CI (99.9%): [9392.002, 9392.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1203.807 ±(99.9%) 1154.403 MB/sec [Average]
[info]   (min, avg, max) = (667.534, 1203.807, 1341.260), stdev = 299.795
[info]   CI (99.9%): [49.405, 2358.210] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   9683.654 ±(99.9%) 9026.223 B/op [Average]
[info]   (min, avg, max) = (5494.175, 9683.654, 10885.549), stdev = 2344.081
[info]   CI (99.9%): [657.431, 18709.877] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.154 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.058, 0.104), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.212] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.469 ±(99.9%) 1.246 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.469, 0.837), stdev = 0.324
[info]   CI (99.9%): [≈ 0, 1.715] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 30.52% complete, ETA 01:32:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 247766.360 ops/s
[info] # Warmup Iteration   2: 269826.225 ops/s
[info] # Warmup Iteration   3: 269789.937 ops/s
[info] # Warmup Iteration   4: 270206.607 ops/s
[info] # Warmup Iteration   5: 270367.422 ops/s
[info] Iteration   1: 270547.159 ops/s
[info]                  ·gc.alloc.rate:                   880.179 MB/sec
[info]                  ·gc.alloc.rate.norm:              5120.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.093 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7830.226 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.848 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 270543.960 ops/s
[info]                  ·gc.alloc.rate:               880.164 MB/sec
[info]                  ·gc.alloc.rate.norm:          5120.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.877 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3914.188 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 270952.265 ops/s
[info]                  ·gc.alloc.rate:                   881.498 MB/sec
[info]                  ·gc.alloc.rate.norm:              5120.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.877 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3908.265 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.121 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 269812.441 ops/s
[info]                  ·gc.alloc.rate:                   878.110 MB/sec
[info]                  ·gc.alloc.rate.norm:              5120.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.840 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7853.032 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.486 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 267006.618 ops/s
[info]                  ·gc.alloc.rate:               868.563 MB/sec
[info]                  ·gc.alloc.rate.norm:          5120.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.429 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3969.722 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala":
[info]   269772.488 ±(99.9%) 6160.666 ops/s [Average]
[info]   (min, avg, max) = (267006.618, 269772.488, 270952.265), stdev = 1599.905
[info]   CI (99.9%): [263611.822, 275933.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   877.703 ±(99.9%) 20.220 MB/sec [Average]
[info]   (min, avg, max) = (868.563, 877.703, 881.498), stdev = 5.251
[info]   CI (99.9%): [857.483, 897.922] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   5120.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5120.002, 5120.002, 5120.002), stdev = 0.001
[info]   CI (99.9%): [5120.002, 5120.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   942.423 ±(99.9%) 1420.271 MB/sec [Average]
[info]   (min, avg, max) = (672.877, 942.423, 1346.840), stdev = 368.840
[info]   CI (99.9%): [≈ 0, 2362.694] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   5495.087 ±(99.9%) 8249.002 B/op [Average]
[info]   (min, avg, max) = (3908.265, 5495.087, 7853.032), stdev = 2142.240
[info]   CI (99.9%): [≈ 0, 13744.089] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.244 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.146), stdev = 0.063
[info]   CI (99.9%): [≈ 0, 0.294] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.291 ±(99.9%) 1.423 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.291, 0.848), stdev = 0.370
[info]   CI (99.9%): [≈ 0, 1.714] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 30.72% complete, ETA 01:32:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 32541.624 ops/s
[info] # Warmup Iteration   2: 67561.614 ops/s
[info] # Warmup Iteration   3: 68188.919 ops/s
[info] # Warmup Iteration   4: 66515.992 ops/s
[info] # Warmup Iteration   5: 67219.701 ops/s
[info] Iteration   1: 68769.395 ops/s
[info]                  ·gc.alloc.rate:                   2858.037 MB/sec
[info]                  ·gc.alloc.rate.norm:              65408.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2689.891 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     61559.877 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.429 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 68064.986 ops/s
[info]                  ·gc.alloc.rate:                   2828.723 MB/sec
[info]                  ·gc.alloc.rate.norm:              65408.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2698.532 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     62397.635 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.963 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 67971.086 ops/s
[info]                  ·gc.alloc.rate:                   2824.909 MB/sec
[info]                  ·gc.alloc.rate.norm:              65408.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3382.668 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     78322.384 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.482 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 68837.622 ops/s
[info]                  ·gc.alloc.rate:                   2860.991 MB/sec
[info]                  ·gc.alloc.rate.norm:              65408.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2712.407 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     62011.085 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.952 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 67594.292 ops/s
[info]                  ·gc.alloc.rate:                   2810.239 MB/sec
[info]                  ·gc.alloc.rate.norm:              65408.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2716.570 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     63227.869 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.485 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson":
[info]   68247.476 ±(99.9%) 2070.965 ops/s [Average]
[info]   (min, avg, max) = (67594.292, 68247.476, 68837.622), stdev = 537.823
[info]   CI (99.9%): [66176.512, 70318.441] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2836.580 ±(99.9%) 84.978 MB/sec [Average]
[info]   (min, avg, max) = (2810.239, 2836.580, 2860.991), stdev = 22.069
[info]   CI (99.9%): [2751.602, 2921.558] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   65408.006 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (65408.006, 65408.006, 65408.007), stdev = 0.001
[info]   CI (99.9%): [65408.006, 65408.007] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2840.014 ±(99.9%) 1168.829 MB/sec [Average]
[info]   (min, avg, max) = (2689.891, 2840.014, 3382.668), stdev = 303.541
[info]   CI (99.9%): [1671.184, 4008.843] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   65503.770 ±(99.9%) 27693.720 B/op [Average]
[info]   (min, avg, max) = (61559.877, 65503.770, 78322.384), stdev = 7191.971
[info]   CI (99.9%): [37810.050, 93197.490] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.037, 0.062), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.862 ±(99.9%) 1.524 B/op [Average]
[info]   (min, avg, max) = (0.482, 0.862, 1.429), stdev = 0.396
[info]   CI (99.9%): [≈ 0, 2.386] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 30.92% complete, ETA 01:32:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 92524.302 ops/s
[info] # Warmup Iteration   2: 104836.549 ops/s
[info] # Warmup Iteration   3: 108487.094 ops/s
[info] # Warmup Iteration   4: 108493.273 ops/s
[info] # Warmup Iteration   5: 107877.563 ops/s
[info] Iteration   1: 106126.540 ops/s
[info]                  ·gc.alloc.rate:               1612.137 MB/sec
[info]                  ·gc.alloc.rate.norm:          23896.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1347.988 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 19980.638 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 108698.649 ops/s
[info]                  ·gc.alloc.rate:                   1650.884 MB/sec
[info]                  ·gc.alloc.rate.norm:              23896.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2023.406 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29288.135 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.507 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 107846.641 ops/s
[info]                  ·gc.alloc.rate:                   1637.460 MB/sec
[info]                  ·gc.alloc.rate.norm:              23896.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.326 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19705.763 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.215 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 107490.525 ops/s
[info]                  ·gc.alloc.rate:                   1631.985 MB/sec
[info]                  ·gc.alloc.rate.norm:              23896.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2027.971 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29694.162 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.610 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 108555.434 ops/s
[info]                  ·gc.alloc.rate:                   1648.148 MB/sec
[info]                  ·gc.alloc.rate.norm:              23896.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1353.545 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19624.644 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.905 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readUPickle":
[info]   107743.558 ±(99.9%) 3974.165 ops/s [Average]
[info]   (min, avg, max) = (106126.540, 107743.558, 108698.649), stdev = 1032.078
[info]   CI (99.9%): [103769.393, 111717.723] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readUPickle:·gc.alloc.rate":
[info]   1636.123 ±(99.9%) 59.552 MB/sec [Average]
[info]   (min, avg, max) = (1612.137, 1636.123, 1650.884), stdev = 15.465
[info]   CI (99.9%): [1576.571, 1695.675] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readUPickle:·gc.alloc.rate.norm":
[info]   23896.004 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (23896.004, 23896.004, 23896.004), stdev = 0.001
[info]   CI (99.9%): [23896.004, 23896.005] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readUPickle:·gc.churn.PS_Eden_Space":
[info]   1620.647 ±(99.9%) 1423.811 MB/sec [Average]
[info]   (min, avg, max) = (1347.988, 1620.647, 2027.971), stdev = 369.759
[info]   CI (99.9%): [196.836, 3044.459] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   23658.668 ±(99.9%) 20515.731 B/op [Average]
[info]   (min, avg, max) = (19624.644, 23658.668, 29694.162), stdev = 5327.870
[info]   CI (99.9%): [3142.938, 44174.399] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.154 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.058, 0.104), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.213] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   0.847 ±(99.9%) 2.236 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.847, 1.507), stdev = 0.581
[info]   CI (99.9%): [≈ 0, 3.083] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readUPickle:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readUPickle:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 3.000), stdev = 0.707
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 31.12% complete, ETA 01:31:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 131145.328 ops/s
[info] # Warmup Iteration   2: 168508.015 ops/s
[info] # Warmup Iteration   3: 167388.859 ops/s
[info] # Warmup Iteration   4: 168875.668 ops/s
[info] # Warmup Iteration   5: 168117.066 ops/s
[info] Iteration   1: 168850.657 ops/s
[info]                  ·gc.alloc.rate:                   1104.610 MB/sec
[info]                  ·gc.alloc.rate.norm:              10296.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.620 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12495.835 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.776 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 168905.840 ops/s
[info]                  ·gc.alloc.rate:               1105.093 MB/sec
[info]                  ·gc.alloc.rate.norm:          10296.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      670.535 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6247.287 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 168728.325 ops/s
[info]                  ·gc.alloc.rate:                   1103.794 MB/sec
[info]                  ·gc.alloc.rate.norm:              10296.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.606 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12514.264 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.777 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 167872.936 ops/s
[info]                  ·gc.alloc.rate:                   1098.183 MB/sec
[info]                  ·gc.alloc.rate.norm:              10296.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.597 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12596.877 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.390 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 168810.378 ops/s
[info]                  ·gc.alloc.rate:               1104.332 MB/sec
[info]                  ·gc.alloc.rate.norm:          10296.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.449 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6269.434 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce":
[info]   168633.627 ±(99.9%) 1656.293 ops/s [Average]
[info]   (min, avg, max) = (167872.936, 168633.627, 168905.840), stdev = 430.134
[info]   CI (99.9%): [166977.334, 170289.921] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1103.203 ±(99.9%) 10.956 MB/sec [Average]
[info]   (min, avg, max) = (1098.183, 1103.203, 1105.093), stdev = 2.845
[info]   CI (99.9%): [1092.247, 1114.158] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   10296.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10296.003, 10296.003, 10296.003), stdev = 0.001
[info]   CI (99.9%): [10296.002, 10296.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1073.761 ±(99.9%) 1414.041 MB/sec [Average]
[info]   (min, avg, max) = (670.535, 1073.761, 1343.597), stdev = 367.222
[info]   CI (99.9%): [≈ 0, 2487.802] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   10024.739 ±(99.9%) 13240.197 B/op [Average]
[info]   (min, avg, max) = (6247.287, 10024.739, 12596.877), stdev = 3438.437
[info]   CI (99.9%): [≈ 0, 23264.937] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.160 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.083), stdev = 0.042
[info]   CI (99.9%): [≈ 0, 0.202] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.389 ±(99.9%) 1.495 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.389, 0.777), stdev = 0.388
[info]   CI (99.9%): [≈ 0, 1.884] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 31.33% complete, ETA 01:31:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 395845.116 ops/s
[info] # Warmup Iteration   2: 569544.009 ops/s
[info] # Warmup Iteration   3: 565599.058 ops/s
[info] # Warmup Iteration   4: 566753.421 ops/s
[info] # Warmup Iteration   5: 577974.943 ops/s
[info] Iteration   1: 570883.416 ops/s
[info]                  ·gc.alloc.rate:               577.450 MB/sec
[info]                  ·gc.alloc.rate.norm:          1592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.600 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1410.455 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 576239.876 ops/s
[info]                  ·gc.alloc.rate:                   583.129 MB/sec
[info]                  ·gc.alloc.rate.norm:              1592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.425 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1822.138 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.147 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.862 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 582152.880 ops/s
[info]                  ·gc.alloc.rate:                   588.954 MB/sec
[info]                  ·gc.alloc.rate.norm:              1592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.243 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1803.623 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.113 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 582244.710 ops/s
[info]                  ·gc.alloc.rate:                   589.016 MB/sec
[info]                  ·gc.alloc.rate.norm:              1592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.542 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1804.242 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.113 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 582910.140 ops/s
[info]                  ·gc.alloc.rate:      589.687 MB/sec
[info]                  ·gc.alloc.rate.norm: 1592.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala":
[info]   578886.204 ±(99.9%) 20118.506 ops/s [Average]
[info]   (min, avg, max) = (570883.416, 578886.204, 582910.140), stdev = 5224.712
[info]   CI (99.9%): [558767.698, 599004.710] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   585.647 ±(99.9%) 20.388 MB/sec [Average]
[info]   (min, avg, max) = (577.450, 585.647, 589.687), stdev = 5.295
[info]   CI (99.9%): [565.259, 606.035] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1592.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1592.001, 1592.001, 1592.001), stdev = 0.001
[info]   CI (99.9%): [1592.001, 1592.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   502.762 ±(99.9%) 1112.976 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 502.762, 667.542), stdev = 289.036
[info]   CI (99.9%): [≈ 0, 1615.738] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1368.092 ±(99.9%) 3019.468 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1368.092, 1822.138), stdev = 784.146
[info]   CI (99.9%): [≈ 0, 4387.560] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.446 ±(99.9%) 3.663 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.446, 2.147), stdev = 0.951
[info]   CI (99.9%): [≈ 0, 4.109] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.217 ±(99.9%) 10.001 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.217, 5.862), stdev = 2.597
[info]   CI (99.9%): [≈ 0, 11.218] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 3.000), stdev = 1.140
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 31.53% complete, ETA 01:31:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 536939.939 ops/s
[info] # Warmup Iteration   2: 564788.020 ops/s
[info] # Warmup Iteration   3: 567979.698 ops/s
[info] # Warmup Iteration   4: 567773.896 ops/s
[info] # Warmup Iteration   5: 554154.025 ops/s
[info] Iteration   1: 570176.432 ops/s
[info]                  ·gc.alloc.rate:               437.678 MB/sec
[info]                  ·gc.alloc.rate.norm:          1208.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.655 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1412.179 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 574441.943 ops/s
[info]                  ·gc.alloc.rate:               440.979 MB/sec
[info]                  ·gc.alloc.rate.norm:          1208.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.686 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1401.696 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 578093.984 ops/s
[info]                  ·gc.alloc.rate:      443.710 MB/sec
[info]                  ·gc.alloc.rate.norm: 1208.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 572271.631 ops/s
[info]                  ·gc.alloc.rate:                   439.218 MB/sec
[info]                  ·gc.alloc.rate.norm:              1208.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.114 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1851.294 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.595 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.386 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 572728.456 ops/s
[info]                  ·gc.alloc.rate:                   439.568 MB/sec
[info]                  ·gc.alloc.rate.norm:              1208.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.126 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1849.852 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.172 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala":
[info]   573542.489 ±(99.9%) 11412.011 ops/s [Average]
[info]   (min, avg, max) = (570176.432, 573542.489, 578093.984), stdev = 2963.663
[info]   CI (99.9%): [562130.479, 584954.500] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   440.231 ±(99.9%) 8.749 MB/sec [Average]
[info]   (min, avg, max) = (437.678, 440.231, 443.710), stdev = 2.272
[info]   CI (99.9%): [431.482, 448.979] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1208.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1208.001, 1208.001, 1208.001), stdev = 0.001
[info]   CI (99.9%): [1208.001, 1208.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   473.916 ±(99.9%) 1066.447 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 473.916, 673.126), stdev = 276.953
[info]   CI (99.9%): [≈ 0, 1540.363] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1303.004 ±(99.9%) 2932.021 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1303.004, 1851.294), stdev = 761.437
[info]   CI (99.9%): [≈ 0, 4235.025] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.331 ±(99.9%) 2.721 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.331, 1.595), stdev = 0.707
[info]   CI (99.9%): [≈ 0, 3.053] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.912 ±(99.9%) 7.484 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.912, 4.386), stdev = 1.944
[info]   CI (99.9%): [≈ 0, 8.396] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 2.000), stdev = 0.894
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 31.73% complete, ETA 01:31:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 559770.548 ops/s
[info] # Warmup Iteration   2: 588413.129 ops/s
[info] # Warmup Iteration   3: 592077.657 ops/s
[info] # Warmup Iteration   4: 590211.383 ops/s
[info] # Warmup Iteration   5: 590161.185 ops/s
[info] Iteration   1: 589755.156 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 590083.879 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 590211.185 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 589949.776 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 589862.520 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc":
[info]   589972.503 ±(99.9%) 692.116 ops/s [Average]
[info]   (min, avg, max) = (589755.156, 589972.503, 590211.185), stdev = 179.740
[info]   CI (99.9%): [589280.387, 590664.619] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
[info]   CI (99.9%): [0.001, 0.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 31.93% complete, ETA 01:30:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 215156.047 ops/s
[info] # Warmup Iteration   2: 344741.843 ops/s
[info] # Warmup Iteration   3: 343195.610 ops/s
[info] # Warmup Iteration   4: 350277.937 ops/s
[info] # Warmup Iteration   5: 348616.363 ops/s
[info] Iteration   1: 350735.870 ops/s
[info]                  ·gc.alloc.rate:                   966.265 MB/sec
[info]                  ·gc.alloc.rate.norm:              4336.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          666.803 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2992.199 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.093 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 343413.967 ops/s
[info]                  ·gc.alloc.rate:               946.124 MB/sec
[info]                  ·gc.alloc.rate.norm:          4336.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1333.688 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6112.170 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 344144.758 ops/s
[info]                  ·gc.alloc.rate:               948.250 MB/sec
[info]                  ·gc.alloc.rate.norm:          4336.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      666.901 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3049.497 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 345617.743 ops/s
[info]                  ·gc.alloc.rate:                   952.137 MB/sec
[info]                  ·gc.alloc.rate.norm:              4336.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.779 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3041.043 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.190 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 343393.647 ops/s
[info]                  ·gc.alloc.rate:                   946.073 MB/sec
[info]                  ·gc.alloc.rate.norm:              4336.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.257 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6124.275 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.095 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson":
[info]   345461.197 ±(99.9%) 11875.602 ops/s [Average]
[info]   (min, avg, max) = (343393.647, 345461.197, 350735.870), stdev = 3084.056
[info]   CI (99.9%): [333585.595, 357336.799] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   951.770 ±(99.9%) 32.614 MB/sec [Average]
[info]   (min, avg, max) = (946.073, 951.770, 966.265), stdev = 8.470
[info]   CI (99.9%): [919.156, 984.384] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   4336.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4336.001, 4336.001, 4336.001), stdev = 0.001
[info]   CI (99.9%): [4336.001, 4336.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   934.286 ±(99.9%) 1408.476 MB/sec [Average]
[info]   (min, avg, max) = (666.803, 934.286, 1336.257), stdev = 365.777
[info]   CI (99.9%): [≈ 0, 2342.762] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   4263.837 ±(99.9%) 6518.991 B/op [Average]
[info]   (min, avg, max) = (2992.199, 4263.837, 6124.275), stdev = 1692.961
[info]   CI (99.9%): [≈ 0, 10782.828] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.076 ±(99.9%) 0.305 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.076, 0.190), stdev = 0.079
[info]   CI (99.9%): [≈ 0, 0.381] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 3.000), stdev = 0.894
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 32.13% complete, ETA 01:30:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 38991.508 ops/s
[info] # Warmup Iteration   2: 42172.627 ops/s
[info] # Warmup Iteration   3: 41636.398 ops/s
[info] # Warmup Iteration   4: 42314.074 ops/s
[info] # Warmup Iteration   5: 41900.121 ops/s
[info] Iteration   1: 42319.248 ops/s
[info]                  ·gc.alloc.rate:                   450.032 MB/sec
[info]                  ·gc.alloc.rate.norm:              16736.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.593 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19025.382 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.387 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 42332.116 ops/s
[info]                  ·gc.alloc.rate:               450.164 MB/sec
[info]                  ·gc.alloc.rate.norm:          16736.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.598 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 19019.990 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 42645.755 ops/s
[info]                  ·gc.alloc.rate:      453.496 MB/sec
[info]                  ·gc.alloc.rate.norm: 16736.010 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 42411.714 ops/s
[info]                  ·gc.alloc.rate:                   450.985 MB/sec
[info]                  ·gc.alloc.rate.norm:              16736.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.427 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24990.814 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.667 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 61.879 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 42495.300 ops/s
[info]                  ·gc.alloc.rate:                   451.887 MB/sec
[info]                  ·gc.alloc.rate.norm:              16736.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.440 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24941.425 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.313 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeUPickle":
[info]   42440.827 ±(99.9%) 518.087 ops/s [Average]
[info]   (min, avg, max) = (42319.248, 42440.827, 42645.755), stdev = 134.546
[info]   CI (99.9%): [41922.739, 42958.914] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeUPickle:·gc.alloc.rate":
[info]   451.313 ±(99.9%) 5.501 MB/sec [Average]
[info]   (min, avg, max) = (450.032, 451.313, 453.496), stdev = 1.429
[info]   CI (99.9%): [445.811, 456.814] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeUPickle:·gc.alloc.rate.norm":
[info]   16736.010 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (16736.010, 16736.010, 16736.011), stdev = 0.001
[info]   CI (99.9%): [16736.009, 16736.012] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space":
[info]   474.012 ±(99.9%) 1066.862 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 474.012, 673.440), stdev = 277.061
[info]   CI (99.9%): [≈ 0, 1540.874] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   17595.522 ±(99.9%) 39566.591 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 17595.522, 24990.814), stdev = 10275.318
[info]   CI (99.9%): [≈ 0, 57162.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space":
[info]   0.348 ±(99.9%) 2.842 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.348, 1.667), stdev = 0.738
[info]   CI (99.9%): [≈ 0, 3.190] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   12.916 ±(99.9%) 105.463 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 12.916, 61.879), stdev = 27.388
[info]   CI (99.9%): [≈ 0, 118.378] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeUPickle:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeUPickle:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.600, 3.000), stdev = 1.140
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 32.33% complete, ETA 01:30:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6729.459 ops/s
[info] # Warmup Iteration   2: 8894.921 ops/s
[info] # Warmup Iteration   3: 9183.077 ops/s
[info] # Warmup Iteration   4: 9311.225 ops/s
[info] # Warmup Iteration   5: 9346.515 ops/s
[info] Iteration   1: 9305.444 ops/s
[info]                  ·gc.alloc.rate:                   1219.067 MB/sec
[info]                  ·gc.alloc.rate.norm:              206184.046 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.059 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     113667.080 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.520 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 9286.902 ops/s
[info]                  ·gc.alloc.rate:                   1217.196 MB/sec
[info]                  ·gc.alloc.rate.norm:              206184.050 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.133 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     227855.599 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.055 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 9142.571 ops/s
[info]                  ·gc.alloc.rate:                   1198.101 MB/sec
[info]                  ·gc.alloc.rate.norm:              206184.047 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.879 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     231615.475 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.583 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 9177.326 ops/s
[info]                  ·gc.alloc.rate:                   1202.591 MB/sec
[info]                  ·gc.alloc.rate.norm:              206184.047 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     230960.858 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.569 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 9279.865 ops/s
[info]                  ·gc.alloc.rate:               1215.751 MB/sec
[info]                  ·gc.alloc.rate.norm:          206184.050 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1348.213 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 228648.764 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce":
[info]   9238.422 ±(99.9%) 282.176 ops/s [Average]
[info]   (min, avg, max) = (9142.571, 9238.422, 9305.444), stdev = 73.280
[info]   CI (99.9%): [8956.246, 9520.598] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:·gc.alloc.rate":
[info]   1210.541 ±(99.9%) 36.636 MB/sec [Average]
[info]   (min, avg, max) = (1198.101, 1210.541, 1219.067), stdev = 9.514
[info]   CI (99.9%): [1173.905, 1247.178] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   206184.048 ±(99.9%) 0.007 B/op [Average]
[info]   (min, avg, max) = (206184.046, 206184.048, 206184.050), stdev = 0.002
[info]   CI (99.9%): [206184.042, 206184.055] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1211.678 ±(99.9%) 1161.579 MB/sec [Average]
[info]   (min, avg, max) = (672.059, 1211.678, 1348.213), stdev = 301.658
[info]   CI (99.9%): [50.099, 2373.256] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   206549.555 ±(99.9%) 200026.856 B/op [Average]
[info]   (min, avg, max) = (113667.080, 206549.555, 231615.475), stdev = 51946.339
[info]   CI (99.9%): [6522.699, 406576.411] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.078] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   3.546 ±(99.9%) 9.606 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.546, 7.055), stdev = 2.495
[info]   CI (99.9%): [≈ 0, 13.151] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 32.53% complete, ETA 01:30:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5984.110 ops/s
[info] # Warmup Iteration   2: 9695.818 ops/s
[info] # Warmup Iteration   3: 9517.415 ops/s
[info] # Warmup Iteration   4: 9835.135 ops/s
[info] # Warmup Iteration   5: 9844.299 ops/s
[info] Iteration   1: 9837.576 ops/s
[info]                  ·gc.alloc.rate:                   1178.821 MB/sec
[info]                  ·gc.alloc.rate.norm:              188592.044 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.166 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     213764.579 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19.980 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 9758.408 ops/s
[info]                  ·gc.alloc.rate:                   1169.544 MB/sec
[info]                  ·gc.alloc.rate.norm:              188602.244 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.110 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     215624.184 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.715 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 9833.162 ops/s
[info]                  ·gc.alloc.rate:               1178.538 MB/sec
[info]                  ·gc.alloc.rate.norm:          188624.307 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.814 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 107043.244 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 9788.399 ops/s
[info]                  ·gc.alloc.rate:                   1173.109 MB/sec
[info]                  ·gc.alloc.rate.norm:              188624.044 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.586 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     215391.863 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13.388 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 9819.762 ops/s
[info]                  ·gc.alloc.rate:               1176.920 MB/sec
[info]                  ·gc.alloc.rate.norm:          188624.044 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1340.755 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 214881.756 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala":
[info]   9807.461 ±(99.9%) 128.987 ops/s [Average]
[info]   (min, avg, max) = (9758.408, 9807.461, 9837.576), stdev = 33.498
[info]   CI (99.9%): [9678.474, 9936.449] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1175.386 ±(99.9%) 15.331 MB/sec [Average]
[info]   (min, avg, max) = (1169.544, 1175.386, 1178.821), stdev = 3.981
[info]   CI (99.9%): [1160.055, 1190.718] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   188613.337 ±(99.9%) 58.590 B/op [Average]
[info]   (min, avg, max) = (188592.044, 188613.337, 188624.307), stdev = 15.216
[info]   CI (99.9%): [188554.746, 188671.927] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1204.486 ±(99.9%) 1153.097 MB/sec [Average]
[info]   (min, avg, max) = (668.814, 1204.486, 1340.755), stdev = 299.456
[info]   CI (99.9%): [51.389, 2357.583] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   193341.125 ±(99.9%) 185783.197 B/op [Average]
[info]   (min, avg, max) = (107043.244, 193341.125, 215624.184), stdev = 48247.306
[info]   CI (99.9%): [7557.928, 379124.322] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.209 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.125), stdev = 0.054
[info]   CI (99.9%): [≈ 0, 0.259] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   8.017 ±(99.9%) 33.471 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 8.017, 19.980), stdev = 8.692
[info]   CI (99.9%): [≈ 0, 41.487] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 32.73% complete, ETA 01:29:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 207847.500 ops/s
[info] # Warmup Iteration   2: 216755.525 ops/s
[info] # Warmup Iteration   3: 215364.246 ops/s
[info] # Warmup Iteration   4: 212822.471 ops/s
[info] # Warmup Iteration   5: 215133.124 ops/s
[info] Iteration   1: 213256.177 ops/s
[info]                  ·gc.alloc.rate:                   1388.062 MB/sec
[info]                  ·gc.alloc.rate.norm:              10240.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.791 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9942.918 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.615 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 210879.960 ops/s
[info]                  ·gc.alloc.rate:                   1372.088 MB/sec
[info]                  ·gc.alloc.rate.norm:              10240.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.943 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10059.803 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.466 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 214713.703 ops/s
[info]                  ·gc.alloc.rate:                   1397.596 MB/sec
[info]                  ·gc.alloc.rate.norm:              10240.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2024.737 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14834.977 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.153 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 224440.185 ops/s
[info]                  ·gc.alloc.rate:                   1460.609 MB/sec
[info]                  ·gc.alloc.rate.norm:              10240.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1351.304 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9473.691 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.292 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 221796.979 ops/s
[info]                  ·gc.alloc.rate:               1443.628 MB/sec
[info]                  ·gc.alloc.rate.norm:          10240.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1352.822 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 9595.894 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala":
[info]   217017.401 ±(99.9%) 22375.530 ops/s [Average]
[info]   (min, avg, max) = (210879.960, 217017.401, 224440.185), stdev = 5810.854
[info]   CI (99.9%): [194641.871, 239392.931] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1412.397 ±(99.9%) 145.814 MB/sec [Average]
[info]   (min, avg, max) = (1372.088, 1412.397, 1460.609), stdev = 37.868
[info]   CI (99.9%): [1266.582, 1558.211] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   10240.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10240.002, 10240.002, 10240.002), stdev = 0.001
[info]   CI (99.9%): [10240.002, 10240.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1484.920 ±(99.9%) 1162.027 MB/sec [Average]
[info]   (min, avg, max) = (1347.791, 1484.920, 2024.737), stdev = 301.775
[info]   CI (99.9%): [322.892, 2646.947] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   10781.457 ±(99.9%) 8774.646 B/op [Average]
[info]   (min, avg, max) = (9473.691, 10781.457, 14834.977), stdev = 2278.748
[info]   CI (99.9%): [2006.811, 19556.103] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.127 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.083), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.305 ±(99.9%) 0.940 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.305, 0.615), stdev = 0.244
[info]   CI (99.9%): [≈ 0, 1.245] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 3.000), stdev = 0.707
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 32.93% complete, ETA 01:29:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4354.759 ops/s
[info] # Warmup Iteration   2: 7273.636 ops/s
[info] # Warmup Iteration   3: 7246.362 ops/s
[info] # Warmup Iteration   4: 7373.836 ops/s
[info] # Warmup Iteration   5: 7526.250 ops/s
[info] Iteration   1: 7348.004 ops/s
[info]                  ·gc.alloc.rate:                   1368.422 MB/sec
[info]                  ·gc.alloc.rate.norm:              293080.063 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2006.992 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     429844.828 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.458 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 7364.286 ops/s
[info]                  ·gc.alloc.rate:                   1371.462 MB/sec
[info]                  ·gc.alloc.rate.norm:              293080.059 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.941 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     286344.098 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.897 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 7394.230 ops/s
[info]                  ·gc.alloc.rate:                   1377.163 MB/sec
[info]                  ·gc.alloc.rate.norm:              293080.058 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.719 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     285537.056 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.431 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 7341.906 ops/s
[info]                  ·gc.alloc.rate:                   1367.139 MB/sec
[info]                  ·gc.alloc.rate.norm:              293080.234 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.564 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     288026.391 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.925 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 7519.615 ops/s
[info]                  ·gc.alloc.rate:               1400.603 MB/sec
[info]                  ·gc.alloc.rate.norm:          293080.057 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1345.695 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 281590.471 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson":
[info]   7393.609 ±(99.9%) 282.247 ops/s [Average]
[info]   (min, avg, max) = (7341.906, 7393.609, 7519.615), stdev = 73.299
[info]   CI (99.9%): [7111.362, 7675.855] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1376.958 ±(99.9%) 53.029 MB/sec [Average]
[info]   (min, avg, max) = (1367.139, 1376.958, 1400.603), stdev = 13.771
[info]   CI (99.9%): [1323.929, 1429.987] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   293080.094 ±(99.9%) 0.301 B/op [Average]
[info]   (min, avg, max) = (293080.057, 293080.094, 293080.234), stdev = 0.078
[info]   CI (99.9%): [293079.793, 293080.396] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1475.582 ±(99.9%) 1143.929 MB/sec [Average]
[info]   (min, avg, max) = (1339.941, 1475.582, 2006.992), stdev = 297.075
[info]   CI (99.9%): [331.653, 2619.511] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   314268.569 ±(99.9%) 248952.823 B/op [Average]
[info]   (min, avg, max) = (281590.471, 314268.569, 429844.828), stdev = 64652.258
[info]   CI (99.9%): [65315.745, 563221.392] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   5.342 ±(99.9%) 14.359 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 5.342, 8.925), stdev = 3.729
[info]   CI (99.9%): [≈ 0, 19.702] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 33.13% complete, ETA 01:29:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7130.323 ops/s
[info] # Warmup Iteration   2: 9322.877 ops/s
[info] # Warmup Iteration   3: 9432.430 ops/s
[info] # Warmup Iteration   4: 9438.505 ops/s
[info] # Warmup Iteration   5: 9460.889 ops/s
[info] Iteration   1: 9468.389 ops/s
[info]                  ·gc.alloc.rate:               1223.432 MB/sec
[info]                  ·gc.alloc.rate.norm:          203352.046 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.421 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 111932.250 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 9457.583 ops/s
[info]                  ·gc.alloc.rate:                   1222.067 MB/sec
[info]                  ·gc.alloc.rate.norm:              203357.838 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.865 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     224124.807 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.464 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 9411.459 ops/s
[info]                  ·gc.alloc.rate:                   1216.245 MB/sec
[info]                  ·gc.alloc.rate.norm:              203376.046 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.544 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     225331.341 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17.404 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 9210.778 ops/s
[info]                  ·gc.alloc.rate:               1190.226 MB/sec
[info]                  ·gc.alloc.rate.norm:          203376.047 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1348.632 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 230443.130 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 9436.149 ops/s
[info]                  ·gc.alloc.rate:                   1219.614 MB/sec
[info]                  ·gc.alloc.rate.norm:              203376.046 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.839 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     225091.648 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.416 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readUPickle":
[info]   9396.872 ±(99.9%) 409.270 ops/s [Average]
[info]   (min, avg, max) = (9210.778, 9396.872, 9468.389), stdev = 106.286
[info]   CI (99.9%): [8987.602, 9806.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readUPickle:·gc.alloc.rate":
[info]   1214.317 ±(99.9%) 52.912 MB/sec [Average]
[info]   (min, avg, max) = (1190.226, 1214.317, 1223.432), stdev = 13.741
[info]   CI (99.9%): [1161.405, 1267.229] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readUPickle:·gc.alloc.rate.norm":
[info]   203367.605 ±(99.9%) 45.204 B/op [Average]
[info]   (min, avg, max) = (203352.046, 203367.605, 203376.047), stdev = 11.739
[info]   CI (99.9%): [203322.401, 203412.808] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readUPickle:·gc.churn.PS_Eden_Space":
[info]   1213.260 ±(99.9%) 1162.054 MB/sec [Average]
[info]   (min, avg, max) = (673.421, 1213.260, 1349.839), stdev = 301.782
[info]   CI (99.9%): [51.207, 2375.314] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   203384.635 ±(99.9%) 197086.662 B/op [Average]
[info]   (min, avg, max) = (111932.250, 203384.635, 230443.130), stdev = 51182.780
[info]   CI (99.9%): [6297.973, 400471.297] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readUPickle:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.174 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.104), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.211] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   6.257 ±(99.9%) 29.049 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 6.257, 17.404), stdev = 7.544
[info]   CI (99.9%): [≈ 0, 35.306] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readUPickle:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readUPickle:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 33.33% complete, ETA 01:28:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 14490.208 ops/s
[info] # Warmup Iteration   2: 20256.472 ops/s
[info] # Warmup Iteration   3: 19731.242 ops/s
[info] # Warmup Iteration   4: 20275.887 ops/s
[info] # Warmup Iteration   5: 20390.170 ops/s
[info] Iteration   1: 19880.201 ops/s
[info]                  ·gc.alloc.rate:               1056.329 MB/sec
[info]                  ·gc.alloc.rate.norm:          83622.402 B/op
[info]                  ·gc.churn.PS_Eden_Space:      670.114 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 53048.401 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   2: 20406.638 ops/s
[info]                  ·gc.alloc.rate:                   1083.961 MB/sec
[info]                  ·gc.alloc.rate.norm:              83576.023 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.255 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     103414.016 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.605 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 20422.906 ops/s
[info]                  ·gc.alloc.rate:                   1084.510 MB/sec
[info]                  ·gc.alloc.rate.norm:              83576.021 B/op
[info]                  ·gc.churn.PS_Eden_Space:          670.775 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     51692.174 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.604 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 20364.749 ops/s
[info]                  ·gc.alloc.rate:                   1081.451 MB/sec
[info]                  ·gc.alloc.rate.norm:              83576.021 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.573 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     103755.949 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.435 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 20261.013 ops/s
[info]                  ·gc.alloc.rate:               1075.930 MB/sec
[info]                  ·gc.alloc.rate.norm:          83576.021 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1344.240 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 104417.783 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce":
[info]   20267.101 ±(99.9%) 867.483 ops/s [Average]
[info]   (min, avg, max) = (19880.201, 20267.101, 20422.906), stdev = 225.283
[info]   CI (99.9%): [19399.618, 21134.585] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.alloc.rate":
[info]   1076.436 ±(99.9%) 45.216 MB/sec [Average]
[info]   (min, avg, max) = (1056.329, 1076.436, 1084.510), stdev = 11.742
[info]   CI (99.9%): [1031.221, 1121.652] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   83585.298 ±(99.9%) 79.870 B/op [Average]
[info]   (min, avg, max) = (83576.021, 83585.298, 83622.402), stdev = 20.742
[info]   CI (99.9%): [83505.428, 83665.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1073.792 ±(99.9%) 1417.828 MB/sec [Average]
[info]   (min, avg, max) = (670.114, 1073.792, 1344.240), stdev = 368.205
[info]   CI (99.9%): [≈ 0, 2491.620] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   83265.665 ±(99.9%) 108626.185 B/op [Average]
[info]   (min, avg, max) = (51692.174, 83265.665, 104417.783), stdev = 28209.875
[info]   CI (99.9%): [≈ 0, 191891.850] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.083), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.157] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   1.929 ±(99.9%) 10.180 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.929, 6.435), stdev = 2.644
[info]   CI (99.9%): [≈ 0, 12.109] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 2.000), stdev = 0.894
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 33.53% complete, ETA 01:28:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 15304.430 ops/s
[info] # Warmup Iteration   2: 22478.009 ops/s
[info] # Warmup Iteration   3: 22421.352 ops/s
[info] # Warmup Iteration   4: 22690.668 ops/s
[info] # Warmup Iteration   5: 22528.577 ops/s
[info] Iteration   1: 22618.412 ops/s
[info]                  ·gc.alloc.rate:               958.521 MB/sec
[info]                  ·gc.alloc.rate.norm:          66696.019 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.147 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 46491.103 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 22401.405 ops/s
[info]                  ·gc.alloc.rate:                   949.341 MB/sec
[info]                  ·gc.alloc.rate.norm:              66696.019 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.313 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     93882.770 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.925 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 22445.475 ops/s
[info]                  ·gc.alloc.rate:               951.532 MB/sec
[info]                  ·gc.alloc.rate.norm:          66696.019 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.386 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 46849.380 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   4: 22456.473 ops/s
[info]                  ·gc.alloc.rate:                   951.852 MB/sec
[info]                  ·gc.alloc.rate.norm:              66696.019 B/op
[info]                  ·gc.churn.PS_Eden_Space:          668.949 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46873.121 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.459 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 22228.461 ops/s
[info]                  ·gc.alloc.rate:               942.018 MB/sec
[info]                  ·gc.alloc.rate.norm:          66696.019 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1338.655 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 94778.404 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala":
[info]   22430.045 ±(99.9%) 537.283 ops/s [Average]
[info]   (min, avg, max) = (22228.461, 22430.045, 22618.412), stdev = 139.531
[info]   CI (99.9%): [21892.762, 22967.328] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   950.653 ±(99.9%) 22.814 MB/sec [Average]
[info]   (min, avg, max) = (942.018, 950.653, 958.521), stdev = 5.925
[info]   CI (99.9%): [927.839, 973.467] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   66696.019 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (66696.019, 66696.019, 66696.019), stdev = 0.001
[info]   CI (99.9%): [66696.019, 66696.020] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   936.090 ±(99.9%) 1410.960 MB/sec [Average]
[info]   (min, avg, max) = (668.147, 936.090, 1338.655), stdev = 366.422
[info]   CI (99.9%): [≈ 0, 2347.050] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   65774.955 ±(99.9%) 100386.165 B/op [Average]
[info]   (min, avg, max) = (46491.103, 65774.955, 94778.404), stdev = 26069.968
[info]   CI (99.9%): [≈ 0, 166161.120] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.877 ±(99.9%) 5.036 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.877, 2.925), stdev = 1.308
[info]   CI (99.9%): [≈ 0, 5.912] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 0.837
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 33.73% complete, ETA 01:28:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 651409.808 ops/s
[info] # Warmup Iteration   2: 722575.667 ops/s
[info] # Warmup Iteration   3: 726816.284 ops/s
[info] # Warmup Iteration   4: 728037.788 ops/s
[info] # Warmup Iteration   5: 727474.501 ops/s
[info] Iteration   1: 726972.216 ops/s
[info]                  ·gc.alloc.rate:                   1311.779 MB/sec
[info]                  ·gc.alloc.rate.norm:              2840.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.923 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2916.088 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.135 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 710860.588 ops/s
[info]                  ·gc.alloc.rate:               1283.228 MB/sec
[info]                  ·gc.alloc.rate.norm:          2840.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.733 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1491.087 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 718223.981 ops/s
[info]                  ·gc.alloc.rate:                   1296.429 MB/sec
[info]                  ·gc.alloc.rate.norm:              2840.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.706 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2954.521 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.228 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 719834.615 ops/s
[info]                  ·gc.alloc.rate:                   1299.138 MB/sec
[info]                  ·gc.alloc.rate.norm:              2840.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.820 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2950.794 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.182 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 721594.772 ops/s
[info]                  ·gc.alloc.rate:                   1302.082 MB/sec
[info]                  ·gc.alloc.rate.norm:              2840.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.880 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2946.434 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.182 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala":
[info]   719497.235 ±(99.9%) 22502.532 ops/s [Average]
[info]   (min, avg, max) = (710860.588, 719497.235, 726972.216), stdev = 5843.836
[info]   CI (99.9%): [696994.702, 741999.767] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1298.531 ±(99.9%) 39.789 MB/sec [Average]
[info]   (min, avg, max) = (1283.228, 1298.531, 1311.779), stdev = 10.333
[info]   CI (99.9%): [1258.742, 1338.321] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   2840.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2840.001, 2840.001, 2840.001), stdev = 0.001
[info]   CI (99.9%): [2840.001, 2840.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1214.012 ±(99.9%) 1163.005 MB/sec [Average]
[info]   (min, avg, max) = (673.733, 1214.012, 1350.880), stdev = 302.029
[info]   CI (99.9%): [51.008, 2377.017] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   2651.785 ±(99.9%) 2499.176 B/op [Average]
[info]   (min, avg, max) = (1491.087, 2651.785, 2954.521), stdev = 649.028
[info]   CI (99.9%): [152.608, 5150.961] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.154 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.067, 0.104), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.221] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.145 ±(99.9%) 0.338 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.145, 0.228), stdev = 0.088
[info]   CI (99.9%): [≈ 0, 0.483] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 33.94% complete, ETA 01:28:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 607365.921 ops/s
[info] # Warmup Iteration   2: 646635.433 ops/s
[info] # Warmup Iteration   3: 644384.035 ops/s
[info] # Warmup Iteration   4: 644640.248 ops/s
[info] # Warmup Iteration   5: 644916.067 ops/s
[info] Iteration   1: 644235.349 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 644603.824 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 644129.595 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 644662.713 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 645694.788 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc":
[info]   644665.254 ±(99.9%) 2385.744 ops/s [Average]
[info]   (min, avg, max) = (644129.595, 644665.254, 645694.788), stdev = 619.570
[info]   CI (99.9%): [642279.510, 647050.998] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
[info]   CI (99.9%): [0.001, 0.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 34.14% complete, ETA 01:27:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 16206.990 ops/s
[info] # Warmup Iteration   2: 21520.976 ops/s
[info] # Warmup Iteration   3: 21464.987 ops/s
[info] # Warmup Iteration   4: 21680.791 ops/s
[info] # Warmup Iteration   5: 21838.055 ops/s
[info] Iteration   1: 21750.311 ops/s
[info]                  ·gc.alloc.rate:                   1003.013 MB/sec
[info]                  ·gc.alloc.rate.norm:              72565.050 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.171 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     96885.068 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.506 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 21989.223 ops/s
[info]                  ·gc.alloc.rate:               1014.162 MB/sec
[info]                  ·gc.alloc.rate.norm:          72560.020 B/op
[info]                  ·gc.churn.PS_Eden_Space:      669.717 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 47916.104 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 21878.778 ops/s
[info]                  ·gc.alloc.rate:               1008.669 MB/sec
[info]                  ·gc.alloc.rate.norm:          72560.020 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1339.542 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 96361.849 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 21920.055 ops/s
[info]                  ·gc.alloc.rate:                   1010.567 MB/sec
[info]                  ·gc.alloc.rate.norm:              72560.020 B/op
[info]                  ·gc.churn.PS_Eden_Space:          670.109 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     48114.735 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.495 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 21694.572 ops/s
[info]                  ·gc.alloc.rate:                   1000.328 MB/sec
[info]                  ·gc.alloc.rate.norm:              72560.021 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.605 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     97314.965 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.510 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson":
[info]   21846.588 ±(99.9%) 468.279 ops/s [Average]
[info]   (min, avg, max) = (21694.572, 21846.588, 21989.223), stdev = 121.611
[info]   CI (99.9%): [21378.309, 22314.867] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1007.348 ±(99.9%) 21.664 MB/sec [Average]
[info]   (min, avg, max) = (1000.328, 1007.348, 1014.162), stdev = 5.626
[info]   CI (99.9%): [985.684, 1029.011] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   72561.026 ±(99.9%) 8.662 B/op [Average]
[info]   (min, avg, max) = (72560.020, 72561.026, 72565.050), stdev = 2.249
[info]   CI (99.9%): [72552.364, 72569.688] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1072.029 ±(99.9%) 1413.498 MB/sec [Average]
[info]   (min, avg, max) = (669.717, 1072.029, 1341.605), stdev = 367.081
[info]   CI (99.9%): [≈ 0, 2485.527] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   77318.544 ±(99.9%) 103013.165 B/op [Average]
[info]   (min, avg, max) = (47916.104, 77318.544, 97314.965), stdev = 26752.192
[info]   CI (99.9%): [≈ 0, 180331.709] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.056] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.902 ±(99.9%) 3.171 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.902, 1.510), stdev = 0.824
[info]   CI (99.9%): [≈ 0, 4.074] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 34.34% complete, ETA 01:27:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 12444.187 ops/s
[info] # Warmup Iteration   2: 13881.005 ops/s
[info] # Warmup Iteration   3: 13917.156 ops/s
[info] # Warmup Iteration   4: 13935.261 ops/s
[info] # Warmup Iteration   5: 13942.145 ops/s
[info] Iteration   1: 13910.361 ops/s
[info]                  ·gc.alloc.rate:                   859.063 MB/sec
[info]                  ·gc.alloc.rate.norm:              97200.033 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.182 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     152429.020 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 14.131 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 13926.508 ops/s
[info]                  ·gc.alloc.rate:               860.092 MB/sec
[info]                  ·gc.alloc.rate.norm:          97200.031 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.457 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 76108.144 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 13892.670 ops/s
[info]                  ·gc.alloc.rate:                   858.009 MB/sec
[info]                  ·gc.alloc.rate.norm:              97200.043 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.469 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     76294.375 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.358 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 13874.789 ops/s
[info]                  ·gc.alloc.rate:                   856.911 MB/sec
[info]                  ·gc.alloc.rate.norm:              97200.033 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.431 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     76387.832 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.722 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 13652.083 ops/s
[info]                  ·gc.alloc.rate:                   843.158 MB/sec
[info]                  ·gc.alloc.rate.norm:              97200.032 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.890 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     155270.646 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.400 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeUPickle":
[info]   13851.282 ±(99.9%) 435.204 ops/s [Average]
[info]   (min, avg, max) = (13652.083, 13851.282, 13926.508), stdev = 113.021
[info]   CI (99.9%): [13416.079, 14286.486] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeUPickle:·gc.alloc.rate":
[info]   855.447 ±(99.9%) 26.842 MB/sec [Average]
[info]   (min, avg, max) = (843.158, 855.447, 860.092), stdev = 6.971
[info]   CI (99.9%): [828.605, 882.288] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeUPickle:·gc.alloc.rate.norm":
[info]   97200.034 ±(99.9%) 0.018 B/op [Average]
[info]   (min, avg, max) = (97200.031, 97200.034, 97200.043), stdev = 0.005
[info]   CI (99.9%): [97200.016, 97200.053] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeUPickle:·gc.churn.PS_Eden_Space":
[info]   942.886 ±(99.9%) 1420.644 MB/sec [Average]
[info]   (min, avg, max) = (673.431, 942.886, 1347.182), stdev = 368.937
[info]   CI (99.9%): [≈ 0, 2363.530] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   107298.003 ±(99.9%) 163682.424 B/op [Average]
[info]   (min, avg, max) = (76108.144, 107298.003, 155270.646), stdev = 42507.806
[info]   CI (99.9%): [≈ 0, 270980.427] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.188 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.125), stdev = 0.049
[info]   CI (99.9%): [≈ 0, 0.230] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   4.722 ±(99.9%) 21.249 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4.722, 14.131), stdev = 5.518
[info]   CI (99.9%): [≈ 0, 25.972] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeUPickle:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeUPickle:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 34.54% complete, ETA 01:27:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 17531.321 ops/s
[info] # Warmup Iteration   2: 23734.798 ops/s
[info] # Warmup Iteration   3: 23706.879 ops/s
[info] # Warmup Iteration   4: 23167.417 ops/s
[info] # Warmup Iteration   5: 22790.572 ops/s
[info] Iteration   1: 23704.184 ops/s
[info]                  ·gc.alloc.rate:               1327.626 MB/sec
[info]                  ·gc.alloc.rate.norm:          88144.018 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1344.340 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 89253.685 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 23449.960 ops/s
[info]                  ·gc.alloc.rate:                   1313.787 MB/sec
[info]                  ·gc.alloc.rate.norm:              88144.018 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.400 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     90264.984 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.191 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 23734.527 ops/s
[info]                  ·gc.alloc.rate:               1329.301 MB/sec
[info]                  ·gc.alloc.rate.norm:          88144.020 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1346.333 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 89273.405 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 23781.684 ops/s
[info]                  ·gc.alloc.rate:                   1331.929 MB/sec
[info]                  ·gc.alloc.rate.norm:              88144.018 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.605 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     89181.420 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.755 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 23859.252 ops/s
[info]                  ·gc.alloc.rate:                   1336.257 MB/sec
[info]                  ·gc.alloc.rate.norm:              88144.018 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.897 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     88977.808 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.373 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce":
[info]   23705.922 ±(99.9%) 595.257 ops/s [Average]
[info]   (min, avg, max) = (23449.960, 23705.922, 23859.252), stdev = 154.586
[info]   CI (99.9%): [23110.665, 24301.178] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:·gc.alloc.rate":
[info]   1327.780 ±(99.9%) 32.630 MB/sec [Average]
[info]   (min, avg, max) = (1313.787, 1327.780, 1336.257), stdev = 8.474
[info]   CI (99.9%): [1295.150, 1360.410] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   88144.018 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (88144.018, 88144.018, 88144.020), stdev = 0.001
[info]   CI (99.9%): [88144.016, 88144.021] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1346.515 ±(99.9%) 6.907 MB/sec [Average]
[info]   (min, avg, max) = (1344.340, 1346.515, 1348.897), stdev = 1.794
[info]   CI (99.9%): [1339.608, 1353.422] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   89390.260 ±(99.9%) 1936.056 B/op [Average]
[info]   (min, avg, max) = (88977.808, 89390.260, 90264.984), stdev = 502.788
[info]   CI (99.9%): [87454.204, 91326.317] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.130] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   1.664 ±(99.9%) 6.995 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.664, 4.191), stdev = 1.817
[info]   CI (99.9%): [≈ 0, 8.659] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 34.74% complete, ETA 01:27:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 16421.399 ops/s
[info] # Warmup Iteration   2: 25773.711 ops/s
[info] # Warmup Iteration   3: 26115.339 ops/s
[info] # Warmup Iteration   4: 25835.256 ops/s
[info] # Warmup Iteration   5: 25791.857 ops/s
[info] Iteration   1: 26009.446 ops/s
[info]                  ·gc.alloc.rate:                   1204.412 MB/sec
[info]                  ·gc.alloc.rate.norm:              72880.017 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.258 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     80858.132 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.558 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 26123.766 ops/s
[info]                  ·gc.alloc.rate:                   1210.202 MB/sec
[info]                  ·gc.alloc.rate.norm:              72880.018 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.490 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     80545.470 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.271 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 26277.205 ops/s
[info]                  ·gc.alloc.rate:                   1216.857 MB/sec
[info]                  ·gc.alloc.rate.norm:              72880.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.630 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     80173.254 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.494 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 26521.305 ops/s
[info]                  ·gc.alloc.rate:               1228.117 MB/sec
[info]                  ·gc.alloc.rate.norm:          72880.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1340.588 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 79554.369 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 26568.420 ops/s
[info]                  ·gc.alloc.rate:                   1230.302 MB/sec
[info]                  ·gc.alloc.rate.norm:              72880.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.546 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     79529.048 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.233 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala":
[info]   26300.028 ±(99.9%) 937.346 ops/s [Average]
[info]   (min, avg, max) = (26009.446, 26300.028, 26568.420), stdev = 243.426
[info]   CI (99.9%): [25362.683, 27237.374] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1217.978 ±(99.9%) 43.071 MB/sec [Average]
[info]   (min, avg, max) = (1204.412, 1217.978, 1230.302), stdev = 11.185
[info]   CI (99.9%): [1174.907, 1261.049] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   72880.017 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (72880.016, 72880.017, 72880.018), stdev = 0.001
[info]   CI (99.9%): [72880.014, 72880.019] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1339.102 ±(99.9%) 9.622 MB/sec [Average]
[info]   (min, avg, max) = (1336.258, 1339.102, 1342.546), stdev = 2.499
[info]   CI (99.9%): [1329.480, 1348.725] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   80132.055 ±(99.9%) 2275.740 B/op [Average]
[info]   (min, avg, max) = (79529.048, 80132.055, 80858.132), stdev = 591.002
[info]   CI (99.9%): [77856.315, 82407.795] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.208 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.058, 0.125), stdev = 0.054
[info]   CI (99.9%): [≈ 0, 0.266] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   3.511 ±(99.9%) 12.558 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.511, 7.558), stdev = 3.261
[info]   CI (99.9%): [≈ 0, 16.069] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 34.94% complete, ETA 01:26:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 376457.289 ops/s
[info] # Warmup Iteration   2: 393867.105 ops/s
[info] # Warmup Iteration   3: 389454.646 ops/s
[info] # Warmup Iteration   4: 396555.684 ops/s
[info] # Warmup Iteration   5: 396412.257 ops/s
[info] Iteration   1: 395475.921 ops/s
[info]                  ·gc.alloc.rate:                   1029.329 MB/sec
[info]                  ·gc.alloc.rate.norm:              4096.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.535 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2680.193 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.166 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 403640.627 ops/s
[info]                  ·gc.alloc.rate:                   1050.460 MB/sec
[info]                  ·gc.alloc.rate.norm:              4096.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.907 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5251.919 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.244 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 402479.920 ops/s
[info]                  ·gc.alloc.rate:               1047.958 MB/sec
[info]                  ·gc.alloc.rate.norm:          4096.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      674.105 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2634.777 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 404579.521 ops/s
[info]                  ·gc.alloc.rate:                   1053.062 MB/sec
[info]                  ·gc.alloc.rate.norm:              4096.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.139 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5243.735 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.324 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 403484.228 ops/s
[info]                  ·gc.alloc.rate:               1050.073 MB/sec
[info]                  ·gc.alloc.rate.norm:          4096.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      674.098 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2629.443 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala":
[info]   401932.043 ±(99.9%) 14189.944 ops/s [Average]
[info]   (min, avg, max) = (395475.921, 401932.043, 404579.521), stdev = 3685.083
[info]   CI (99.9%): [387742.100, 416121.987] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1046.177 ±(99.9%) 36.933 MB/sec [Average]
[info]   (min, avg, max) = (1029.329, 1046.177, 1053.062), stdev = 9.591
[info]   CI (99.9%): [1009.244, 1083.109] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   4096.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4096.001, 4096.001, 4096.001), stdev = 0.001
[info]   CI (99.9%): [4096.001, 4096.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   943.357 ±(99.9%) 1420.703 MB/sec [Average]
[info]   (min, avg, max) = (673.535, 943.357, 1348.139), stdev = 368.952
[info]   CI (99.9%): [≈ 0, 2364.060] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   3688.013 ±(99.9%) 5483.502 B/op [Average]
[info]   (min, avg, max) = (2629.443, 3688.013, 5251.919), stdev = 1424.048
[info]   CI (99.9%): [≈ 0, 9171.515] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.083), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.181] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.147 ±(99.9%) 0.559 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.147, 0.324), stdev = 0.145
[info]   CI (99.9%): [≈ 0, 0.705] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 0.837
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 35.14% complete, ETA 01:26:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 9101.114 ops/s
[info] # Warmup Iteration   2: 15771.446 ops/s
[info] # Warmup Iteration   3: 15837.774 ops/s
[info] # Warmup Iteration   4: 16250.544 ops/s
[info] # Warmup Iteration   5: 15731.737 ops/s
[info] Iteration   1: 15866.774 ops/s
[info]                  ·gc.alloc.rate:                   1622.935 MB/sec
[info]                  ·gc.alloc.rate.norm:              160984.027 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2009.172 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     199296.169 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.065 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 15891.613 ops/s
[info]                  ·gc.alloc.rate:                   1625.849 MB/sec
[info]                  ·gc.alloc.rate.norm:              160984.037 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.911 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     132869.766 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.123 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 15790.683 ops/s
[info]                  ·gc.alloc.rate:                   1615.175 MB/sec
[info]                  ·gc.alloc.rate.norm:              160984.027 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.625 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     133918.685 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.075 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 16145.731 ops/s
[info]                  ·gc.alloc.rate:                   1652.171 MB/sec
[info]                  ·gc.alloc.rate.norm:              160984.029 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2019.611 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     196786.572 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.088 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 16181.466 ops/s
[info]                  ·gc.alloc.rate:                   1655.232 MB/sec
[info]                  ·gc.alloc.rate.norm:              160984.027 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.177 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     131120.587 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.073 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson":
[info]   15975.253 ±(99.9%) 679.112 ops/s [Average]
[info]   (min, avg, max) = (15790.683, 15975.253, 16181.466), stdev = 176.363
[info]   CI (99.9%): [15296.141, 16654.366] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1634.272 ±(99.9%) 70.052 MB/sec [Average]
[info]   (min, avg, max) = (1615.175, 1634.272, 1655.232), stdev = 18.192
[info]   CI (99.9%): [1564.220, 1704.325] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   160984.029 ±(99.9%) 0.017 B/op [Average]
[info]   (min, avg, max) = (160984.027, 160984.029, 160984.037), stdev = 0.004
[info]   CI (99.9%): [160984.012, 160984.046] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1612.499 ±(99.9%) 1412.807 MB/sec [Average]
[info]   (min, avg, max) = (1341.911, 1612.499, 2019.611), stdev = 366.902
[info]   CI (99.9%): [199.692, 3025.306] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   158798.356 ±(99.9%) 138040.700 B/op [Average]
[info]   (min, avg, max) = (131120.587, 158798.356, 199296.169), stdev = 35848.731
[info]   CI (99.9%): [20757.656, 296839.056] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.062), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   4.085 ±(99.9%) 7.723 B/op [Average]
[info]   (min, avg, max) = (2.065, 4.085, 6.088), stdev = 2.006
[info]   CI (99.9%): [≈ 0, 11.807] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.600, 5.000), stdev = 1.517
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 35.34% complete, ETA 01:26:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 17586.333 ops/s
[info] # Warmup Iteration   2: 21471.951 ops/s
[info] # Warmup Iteration   3: 22433.203 ops/s
[info] # Warmup Iteration   4: 22437.161 ops/s
[info] # Warmup Iteration   5: 22409.075 ops/s
[info] Iteration   1: 21922.820 ops/s
[info]                  ·gc.alloc.rate:                   1219.132 MB/sec
[info]                  ·gc.alloc.rate.norm:              87515.539 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.000 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     96694.517 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.494 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 22465.699 ops/s
[info]                  ·gc.alloc.rate:                   1249.215 MB/sec
[info]                  ·gc.alloc.rate.norm:              87512.019 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.937 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     94357.840 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.291 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 22311.564 ops/s
[info]                  ·gc.alloc.rate:               1240.843 MB/sec
[info]                  ·gc.alloc.rate.norm:          87512.019 B/op
[info]                  ·gc.churn.PS_Eden_Space:      674.238 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 47551.484 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 21967.466 ops/s
[info]                  ·gc.alloc.rate:                   1221.478 MB/sec
[info]                  ·gc.alloc.rate.norm:              87512.020 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.942 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     96644.049 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.491 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 22174.817 ops/s
[info]                  ·gc.alloc.rate:                   1232.973 MB/sec
[info]                  ·gc.alloc.rate.norm:              87512.021 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.865 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     95808.615 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.432 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readUPickle":
[info]   22168.473 ±(99.9%) 881.469 ops/s [Average]
[info]   (min, avg, max) = (21922.820, 22168.473, 22465.699), stdev = 228.915
[info]   CI (99.9%): [21287.005, 23049.942] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readUPickle:·gc.alloc.rate":
[info]   1232.728 ±(99.9%) 49.053 MB/sec [Average]
[info]   (min, avg, max) = (1219.132, 1232.728, 1249.215), stdev = 12.739
[info]   CI (99.9%): [1183.675, 1281.781] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readUPickle:·gc.alloc.rate.norm":
[info]   87512.724 ±(99.9%) 6.060 B/op [Average]
[info]   (min, avg, max) = (87512.019, 87512.724, 87515.539), stdev = 1.574
[info]   CI (99.9%): [87506.664, 87518.783] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readUPickle:·gc.churn.PS_Eden_Space":
[info]   1213.396 ±(99.9%) 1160.589 MB/sec [Average]
[info]   (min, avg, max) = (674.238, 1213.396, 1349.865), stdev = 301.401
[info]   CI (99.9%): [52.807, 2373.985] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   86211.301 ±(99.9%) 83297.627 B/op [Average]
[info]   (min, avg, max) = (47551.484, 86211.301, 96694.517), stdev = 21632.129
[info]   CI (99.9%): [2913.674, 169508.928] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readUPickle:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.160 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.104), stdev = 0.042
[info]   CI (99.9%): [≈ 0, 0.202] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   2.942 ±(99.9%) 11.226 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.942, 7.291), stdev = 2.915
[info]   CI (99.9%): [≈ 0, 14.167] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readUPickle:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readUPickle:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 35.54% complete, ETA 01:26:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 32302.078 ops/s
[info] # Warmup Iteration   2: 44522.090 ops/s
[info] # Warmup Iteration   3: 44022.995 ops/s
[info] # Warmup Iteration   4: 44919.790 ops/s
[info] # Warmup Iteration   5: 45134.444 ops/s
[info] Iteration   1: 45072.557 ops/s
[info]                  ·gc.alloc.rate:                   1433.058 MB/sec
[info]                  ·gc.alloc.rate.norm:              50040.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.596 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46846.319 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.181 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 44159.400 ops/s
[info]                  ·gc.alloc.rate:                   1404.031 MB/sec
[info]                  ·gc.alloc.rate.norm:              50040.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.925 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     47862.187 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.484 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 44810.331 ops/s
[info]                  ·gc.alloc.rate:               1424.845 MB/sec
[info]                  ·gc.alloc.rate.norm:          50040.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1344.370 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 47213.762 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 45101.621 ops/s
[info]                  ·gc.alloc.rate:                   1433.914 MB/sec
[info]                  ·gc.alloc.rate.norm:              50040.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2019.296 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     70468.380 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.179 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 44593.290 ops/s
[info]                  ·gc.alloc.rate:               1417.809 MB/sec
[info]                  ·gc.alloc.rate.norm:          50040.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1348.963 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 47610.180 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce":
[info]   44747.440 ±(99.9%) 1497.120 ops/s [Average]
[info]   (min, avg, max) = (44159.400, 44747.440, 45101.621), stdev = 388.797
[info]   CI (99.9%): [43250.320, 46244.560] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:·gc.alloc.rate":
[info]   1422.731 ±(99.9%) 47.556 MB/sec [Average]
[info]   (min, avg, max) = (1404.031, 1422.731, 1433.914), stdev = 12.350
[info]   CI (99.9%): [1375.176, 1470.287] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   50040.010 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (50040.010, 50040.010, 50040.010), stdev = 0.001
[info]   CI (99.9%): [50040.008, 50040.011] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1479.430 ±(99.9%) 1162.151 MB/sec [Average]
[info]   (min, avg, max) = (1341.596, 1479.430, 2019.296), stdev = 301.807
[info]   CI (99.9%): [317.279, 2641.581] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   52000.165 ±(99.9%) 39782.089 B/op [Average]
[info]   (min, avg, max) = (46846.319, 52000.165, 70468.380), stdev = 10331.282
[info]   CI (99.9%): [12218.076, 91782.255] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.062), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   1.169 ±(99.9%) 4.252 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.169, 2.181), stdev = 1.104
[info]   CI (99.9%): [≈ 0, 5.420] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 3.000), stdev = 0.707
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 35.74% complete, ETA 01:25:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 85897.508 ops/s
[info] # Warmup Iteration   2: 123212.443 ops/s
[info] # Warmup Iteration   3: 124308.382 ops/s
[info] # Warmup Iteration   4: 126664.801 ops/s
[info] # Warmup Iteration   5: 126998.175 ops/s
[info] Iteration   1: 127065.338 ops/s
[info]                  ·gc.alloc.rate:                   1242.495 MB/sec
[info]                  ·gc.alloc.rate.norm:              15384.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.797 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16551.599 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.774 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 127331.103 ops/s
[info]                  ·gc.alloc.rate:               1244.808 MB/sec
[info]                  ·gc.alloc.rate.norm:          15384.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.905 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8266.683 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 127201.026 ops/s
[info]                  ·gc.alloc.rate:                   1243.870 MB/sec
[info]                  ·gc.alloc.rate.norm:              15384.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.167 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16562.623 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.030 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 126525.699 ops/s
[info]                  ·gc.alloc.rate:               1236.815 MB/sec
[info]                  ·gc.alloc.rate.norm:          15384.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1340.652 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 16675.563 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 127521.809 ops/s
[info]                  ·gc.alloc.rate:                   1246.475 MB/sec
[info]                  ·gc.alloc.rate.norm:              15384.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.560 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16569.877 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.771 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala":
[info]   127128.995 ±(99.9%) 1451.491 ops/s [Average]
[info]   (min, avg, max) = (126525.699, 127128.995, 127521.809), stdev = 376.948
[info]   CI (99.9%): [125677.504, 128580.485] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1242.893 ±(99.9%) 14.220 MB/sec [Average]
[info]   (min, avg, max) = (1236.815, 1242.893, 1246.475), stdev = 3.693
[info]   CI (99.9%): [1228.673, 1257.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   15384.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (15384.003, 15384.003, 15384.004), stdev = 0.001
[info]   CI (99.9%): [15384.003, 15384.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1205.616 ±(99.9%) 1155.340 MB/sec [Average]
[info]   (min, avg, max) = (668.905, 1205.616, 1342.560), stdev = 300.038
[info]   CI (99.9%): [50.276, 2360.956] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   14925.269 ±(99.9%) 14334.396 B/op [Average]
[info]   (min, avg, max) = (8266.683, 14925.269, 16675.563), stdev = 3722.597
[info]   CI (99.9%): [590.873, 29259.665] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.150 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.083), stdev = 0.039
[info]   CI (99.9%): [≈ 0, 0.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.515 ±(99.9%) 1.855 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.515, 1.030), stdev = 0.482
[info]   CI (99.9%): [≈ 0, 2.370] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 35.94% complete, ETA 01:25:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1061787.277 ops/s
[info] # Warmup Iteration   2: 1167338.692 ops/s
[info] # Warmup Iteration   3: 1142846.818 ops/s
[info] # Warmup Iteration   4: 1177943.939 ops/s
[info] # Warmup Iteration   5: 1181486.280 ops/s
[info] Iteration   1: 1177307.311 ops/s
[info]                  ·gc.alloc.rate:                   1262.664 MB/sec
[info]                  ·gc.alloc.rate.norm:              1688.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.905 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1800.618 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.083 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 1181087.921 ops/s
[info]                  ·gc.alloc.rate:                   1266.747 MB/sec
[info]                  ·gc.alloc.rate.norm:              1688.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.913 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1794.826 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.111 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 1176757.555 ops/s
[info]                  ·gc.alloc.rate:                   1262.149 MB/sec
[info]                  ·gc.alloc.rate.norm:              1688.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.286 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1803.200 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.111 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 1163359.742 ops/s
[info]                  ·gc.alloc.rate:                   1247.785 MB/sec
[info]                  ·gc.alloc.rate.norm:              1688.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.718 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1825.896 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.113 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 1162241.571 ops/s
[info]                  ·gc.alloc.rate:                   1246.574 MB/sec
[info]                  ·gc.alloc.rate.norm:              1688.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1351.005 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1829.412 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.056 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala":
[info]   1172150.820 ±(99.9%) 33522.693 ops/s [Average]
[info]   (min, avg, max) = (1162241.571, 1172150.820, 1181087.921), stdev = 8705.737
[info]   CI (99.9%): [1138628.127, 1205673.513] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1257.184 ±(99.9%) 35.867 MB/sec [Average]
[info]   (min, avg, max) = (1246.574, 1257.184, 1266.747), stdev = 9.315
[info]   CI (99.9%): [1221.317, 1293.051] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1688.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1688.000, 1688.000, 1688.000), stdev = 0.001
[info]   CI (99.9%): [1688.000, 1688.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1348.565 ±(99.9%) 6.901 MB/sec [Average]
[info]   (min, avg, max) = (1346.905, 1348.565, 1351.005), stdev = 1.792
[info]   CI (99.9%): [1341.664, 1355.466] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1810.790 ±(99.9%) 60.606 B/op [Average]
[info]   (min, avg, max) = (1794.826, 1810.790, 1829.412), stdev = 15.739
[info]   CI (99.9%): [1750.184, 1871.396] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.071 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.071, 0.083), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.095 ±(99.9%) 0.095 B/op [Average]
[info]   (min, avg, max) = (0.056, 0.095, 0.113), stdev = 0.025
[info]   CI (99.9%): [≈ 0, 0.190] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 36.14% complete, ETA 01:25:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 806310.095 ops/s
[info] # Warmup Iteration   2: 854338.844 ops/s
[info] # Warmup Iteration   3: 858636.408 ops/s
[info] # Warmup Iteration   4: 858934.936 ops/s
[info] # Warmup Iteration   5: 858734.223 ops/s
[info] Iteration   1: 858669.516 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 858397.001 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 848415.347 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 858700.692 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 858417.195 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc":
[info]   856519.950 ±(99.9%) 17454.052 ops/s [Average]
[info]   (min, avg, max) = (848415.347, 856519.950, 858700.692), stdev = 4532.762
[info]   CI (99.9%): [839065.898, 873974.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
[info]   CI (99.9%): [≈ 10⁻³, 0.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 36.35% complete, ETA 01:24:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 39243.078 ops/s
[info] # Warmup Iteration   2: 50723.522 ops/s
[info] # Warmup Iteration   3: 51434.152 ops/s
[info] # Warmup Iteration   4: 51689.048 ops/s
[info] # Warmup Iteration   5: 51577.677 ops/s
[info] Iteration   1: 51719.644 ops/s
[info]                  ·gc.alloc.rate:                   1370.487 MB/sec
[info]                  ·gc.alloc.rate.norm:              41704.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.933 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     40774.239 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.267 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 51203.132 ops/s
[info]                  ·gc.alloc.rate:                   1356.870 MB/sec
[info]                  ·gc.alloc.rate.norm:              41704.009 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.318 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     41226.012 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.559 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 51725.612 ops/s
[info]                  ·gc.alloc.rate:               1370.645 MB/sec
[info]                  ·gc.alloc.rate.norm:          41704.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1342.955 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 40861.507 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 51784.324 ops/s
[info]                  ·gc.alloc.rate:                   1372.210 MB/sec
[info]                  ·gc.alloc.rate.norm:              41704.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.597 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     40864.785 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.633 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 51673.699 ops/s
[info]                  ·gc.alloc.rate:               1369.478 MB/sec
[info]                  ·gc.alloc.rate.norm:          41704.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1346.826 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 41014.210 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson":
[info]   51621.282 ±(99.9%) 912.731 ops/s [Average]
[info]   (min, avg, max) = (51203.132, 51621.282, 51784.324), stdev = 237.033
[info]   CI (99.9%): [50708.552, 52534.013] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1367.938 ±(99.9%) 24.121 MB/sec [Average]
[info]   (min, avg, max) = (1356.870, 1367.938, 1372.210), stdev = 6.264
[info]   CI (99.9%): [1343.817, 1392.059] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   41704.008 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (41704.008, 41704.008, 41704.009), stdev = 0.001
[info]   CI (99.9%): [41704.007, 41704.010] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1343.126 ±(99.9%) 10.430 MB/sec [Average]
[info]   (min, avg, max) = (1339.933, 1343.126, 1346.826), stdev = 2.709
[info]   CI (99.9%): [1332.695, 1353.556] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   40948.151 ±(99.9%) 684.162 B/op [Average]
[info]   (min, avg, max) = (40774.239, 40948.151, 41226.012), stdev = 177.675
[info]   CI (99.9%): [40263.989, 41632.312] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.083), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.892 ±(99.9%) 4.120 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.892, 2.559), stdev = 1.070
[info]   CI (99.9%): [≈ 0, 5.012] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 36.55% complete, ETA 01:24:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 23866.948 ops/s
[info] # Warmup Iteration   2: 26240.130 ops/s
[info] # Warmup Iteration   3: 26719.685 ops/s
[info] # Warmup Iteration   4: 25770.745 ops/s
[info] # Warmup Iteration   5: 26613.740 ops/s
[info] Iteration   1: 26727.767 ops/s
[info]                  ·gc.alloc.rate:               611.445 MB/sec
[info]                  ·gc.alloc.rate.norm:          36000.017 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.663 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 30125.182 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 26735.721 ops/s
[info]                  ·gc.alloc.rate:                   611.679 MB/sec
[info]                  ·gc.alloc.rate.norm:              36000.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.947 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     39664.720 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.582 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 93.134 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 26766.639 ops/s
[info]                  ·gc.alloc.rate:                   612.351 MB/sec
[info]                  ·gc.alloc.rate.norm:              36000.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.905 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     39618.790 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.896 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 26830.675 ops/s
[info]                  ·gc.alloc.rate:               613.796 MB/sec
[info]                  ·gc.alloc.rate.norm:          36000.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.526 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 39503.292 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 26757.569 ops/s
[info]                  ·gc.alloc.rate:               612.070 MB/sec
[info]                  ·gc.alloc.rate.norm:          36000.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.439 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 39609.563 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeUPickle":
[info]   26763.674 ±(99.9%) 156.484 ops/s [Average]
[info]   (min, avg, max) = (26727.767, 26763.674, 26830.675), stdev = 40.638
[info]   CI (99.9%): [26607.190, 26920.157] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeUPickle:·gc.alloc.rate":
[info]   612.268 ±(99.9%) 3.552 MB/sec [Average]
[info]   (min, avg, max) = (611.445, 612.268, 613.796), stdev = 0.922
[info]   CI (99.9%): [608.716, 615.820] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeUPickle:·gc.alloc.rate.norm":
[info]   36000.016 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (36000.016, 36000.016, 36000.017), stdev = 0.001
[info]   CI (99.9%): [36000.014, 36000.018] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeUPickle:·gc.churn.PS_Eden_Space":
[info]   641.296 ±(99.9%) 279.045 MB/sec [Average]
[info]   (min, avg, max) = (511.663, 641.296, 673.947), stdev = 72.467
[info]   CI (99.9%): [362.251, 920.341] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   37704.309 ±(99.9%) 16316.231 B/op [Average]
[info]   (min, avg, max) = (30125.182, 37704.309, 39664.720), stdev = 4237.273
[info]   CI (99.9%): [21388.078, 54020.541] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space":
[info]   0.333 ±(99.9%) 2.693 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.333, 1.582), stdev = 0.699
[info]   CI (99.9%): [≈ 0, 3.026] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   19.606 ±(99.9%) 158.485 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 19.606, 93.134), stdev = 41.158
[info]   CI (99.9%): [≈ 0, 178.091] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeUPickle:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeUPickle:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 3.000), stdev = 1.140
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 36.75% complete, ETA 01:24:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 11410.651 ops/s
[info] # Warmup Iteration   2: 15014.102 ops/s
[info] # Warmup Iteration   3: 15014.166 ops/s
[info] # Warmup Iteration   4: 15147.663 ops/s
[info] # Warmup Iteration   5: 15146.679 ops/s
[info] Iteration   1: 15161.740 ops/s
[info]                  ·gc.alloc.rate:                   1377.165 MB/sec
[info]                  ·gc.alloc.rate.norm:              142952.028 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.654 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     139577.332 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.483 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 15120.305 ops/s
[info]                  ·gc.alloc.rate:               1373.378 MB/sec
[info]                  ·gc.alloc.rate.norm:          142952.039 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1345.591 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 140059.745 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 14888.655 ops/s
[info]                  ·gc.alloc.rate:                   1352.333 MB/sec
[info]                  ·gc.alloc.rate.norm:              142952.031 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.947 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     142382.692 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.201 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 15164.377 ops/s
[info]                  ·gc.alloc.rate:                   1377.434 MB/sec
[info]                  ·gc.alloc.rate.norm:              142952.028 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.315 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     139929.968 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.642 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 15095.058 ops/s
[info]                  ·gc.alloc.rate:               1371.083 MB/sec
[info]                  ·gc.alloc.rate.norm:          142952.029 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1349.564 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 140708.370 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce":
[info]   15086.027 ±(99.9%) 439.393 ops/s [Average]
[info]   (min, avg, max) = (14888.655, 15086.027, 15164.377), stdev = 114.109
[info]   CI (99.9%): [14646.633, 15525.420] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:·gc.alloc.rate":
[info]   1370.279 ±(99.9%) 39.968 MB/sec [Average]
[info]   (min, avg, max) = (1352.333, 1370.279, 1377.434), stdev = 10.380
[info]   CI (99.9%): [1330.311, 1410.246] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   142952.031 ±(99.9%) 0.018 B/op [Average]
[info]   (min, avg, max) = (142952.028, 142952.031, 142952.039), stdev = 0.005
[info]   CI (99.9%): [142952.013, 142952.049] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1347.014 ±(99.9%) 7.651 MB/sec [Average]
[info]   (min, avg, max) = (1344.654, 1347.014, 1349.564), stdev = 1.987
[info]   CI (99.9%): [1339.363, 1354.665] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   140531.621 ±(99.9%) 4284.881 B/op [Average]
[info]   (min, avg, max) = (139577.332, 140531.621, 142382.692), stdev = 1112.770
[info]   CI (99.9%): [136246.741, 144816.502] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.146 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.083), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.179] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   3.465 ±(99.9%) 15.101 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.465, 8.642), stdev = 3.922
[info]   CI (99.9%): [≈ 0, 18.566] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 36.95% complete, ETA 01:24:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 10109.168 ops/s
[info] # Warmup Iteration   2: 15988.982 ops/s
[info] # Warmup Iteration   3: 16136.478 ops/s
[info] # Warmup Iteration   4: 16196.139 ops/s
[info] # Warmup Iteration   5: 16146.215 ops/s
[info] Iteration   1: 16088.148 ops/s
[info]                  ·gc.alloc.rate:                   1310.590 MB/sec
[info]                  ·gc.alloc.rate.norm:              128208.027 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.286 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     130721.736 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.073 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 15902.407 ops/s
[info]                  ·gc.alloc.rate:                   1295.852 MB/sec
[info]                  ·gc.alloc.rate.norm:              128208.037 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.043 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     132382.308 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.120 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 15866.428 ops/s
[info]                  ·gc.alloc.rate:               1292.368 MB/sec
[info]                  ·gc.alloc.rate.norm:          128184.926 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1339.712 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 132880.858 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 16010.253 ops/s
[info]                  ·gc.alloc.rate:                   1304.254 MB/sec
[info]                  ·gc.alloc.rate.norm:              128176.027 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.967 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     131882.350 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.139 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 16229.205 ops/s
[info]                  ·gc.alloc.rate:                   1321.822 MB/sec
[info]                  ·gc.alloc.rate.norm:              128176.027 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.610 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     130288.782 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.056 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala":
[info]   16019.288 ±(99.9%) 564.339 ops/s [Average]
[info]   (min, avg, max) = (15866.428, 16019.288, 16229.205), stdev = 146.557
[info]   CI (99.9%): [15454.949, 16583.627] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1304.977 ±(99.9%) 45.481 MB/sec [Average]
[info]   (min, avg, max) = (1292.368, 1304.977, 1321.822), stdev = 11.811
[info]   CI (99.9%): [1259.496, 1350.458] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   128190.609 ±(99.9%) 62.823 B/op [Average]
[info]   (min, avg, max) = (128176.027, 128190.609, 128208.037), stdev = 16.315
[info]   CI (99.9%): [128127.786, 128253.432] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1339.924 ±(99.9%) 11.321 MB/sec [Average]
[info]   (min, avg, max) = (1336.286, 1339.924, 1343.610), stdev = 2.940
[info]   CI (99.9%): [1328.603, 1351.245] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   131631.207 ±(99.9%) 4226.113 B/op [Average]
[info]   (min, avg, max) = (130288.782, 131631.207, 132880.858), stdev = 1097.508
[info]   CI (99.9%): [127405.094, 135857.320] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.062), stdev = 0.025
[info]   CI (99.9%): [≈ 0, 0.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   4.078 ±(99.9%) 9.586 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4.078, 6.139), stdev = 2.490
[info]   CI (99.9%): [≈ 0, 13.664] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 37.15% complete, ETA 01:23:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 424136.884 ops/s
[info] # Warmup Iteration   2: 447627.608 ops/s
[info] # Warmup Iteration   3: 432343.131 ops/s
[info] # Warmup Iteration   4: 445007.454 ops/s
[info] # Warmup Iteration   5: 451720.680 ops/s
[info] Iteration   1: 455638.528 ops/s
[info]                  ·gc.alloc.rate:               1185.769 MB/sec
[info]                  ·gc.alloc.rate.norm:          4096.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.439 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2326.262 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 452347.132 ops/s
[info]                  ·gc.alloc.rate:                   1177.254 MB/sec
[info]                  ·gc.alloc.rate.norm:              4096.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.330 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4687.744 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.072 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 452842.042 ops/s
[info]                  ·gc.alloc.rate:                   1178.533 MB/sec
[info]                  ·gc.alloc.rate.norm:              4096.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.986 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4684.936 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.217 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 441363.246 ops/s
[info]                  ·gc.alloc.rate:               1149.155 MB/sec
[info]                  ·gc.alloc.rate.norm:          4096.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1349.595 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4810.439 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 443539.704 ops/s
[info]                  ·gc.alloc.rate:               1154.458 MB/sec
[info]                  ·gc.alloc.rate.norm:          4096.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      674.905 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2394.554 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala":
[info]   449146.130 ±(99.9%) 24205.723 ops/s [Average]
[info]   (min, avg, max) = (441363.246, 449146.130, 455638.528), stdev = 6286.149
[info]   CI (99.9%): [424940.407, 473351.853] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1169.034 ±(99.9%) 62.253 MB/sec [Average]
[info]   (min, avg, max) = (1149.155, 1169.034, 1185.769), stdev = 16.167
[info]   CI (99.9%): [1106.780, 1231.287] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   4096.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4096.001, 4096.001, 4096.001), stdev = 0.001
[info]   CI (99.9%): [4096.001, 4096.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1078.651 ±(99.9%) 1421.805 MB/sec [Average]
[info]   (min, avg, max) = (673.439, 1078.651, 1349.595), stdev = 369.238
[info]   CI (99.9%): [≈ 0, 2500.456] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   3780.787 ±(99.9%) 4997.509 B/op [Average]
[info]   (min, avg, max) = (2326.262, 3780.787, 4810.439), stdev = 1297.837
[info]   CI (99.9%): [≈ 0, 8778.296] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.058 ±(99.9%) 0.363 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.058, 0.217), stdev = 0.094
[info]   CI (99.9%): [≈ 0, 0.421] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 37.35% complete, ETA 01:23:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6699.024 ops/s
[info] # Warmup Iteration   2: 11063.340 ops/s
[info] # Warmup Iteration   3: 11131.819 ops/s
[info] # Warmup Iteration   4: 11248.887 ops/s
[info] # Warmup Iteration   5: 11256.019 ops/s
[info] Iteration   1: 11420.855 ops/s
[info]                  ·gc.alloc.rate:                   1569.492 MB/sec
[info]                  ·gc.alloc.rate.norm:              216282.611 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.916 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     184508.252 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.606 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 11451.082 ops/s
[info]                  ·gc.alloc.rate:                   1573.706 MB/sec
[info]                  ·gc.alloc.rate.norm:              216280.038 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.892 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     184283.524 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.861 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 11440.936 ops/s
[info]                  ·gc.alloc.rate:                   1572.270 MB/sec
[info]                  ·gc.alloc.rate.norm:              216280.038 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2014.765 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     277149.184 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.864 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 11299.211 ops/s
[info]                  ·gc.alloc.rate:                   1552.844 MB/sec
[info]                  ·gc.alloc.rate.norm:              216280.038 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.573 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     187411.389 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 14.497 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 11444.405 ops/s
[info]                  ·gc.alloc.rate:                   1573.052 MB/sec
[info]                  ·gc.alloc.rate.norm:              216280.055 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.483 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     185266.442 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.863 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson":
[info]   11411.298 ±(99.9%) 245.144 ops/s [Average]
[info]   (min, avg, max) = (11299.211, 11411.298, 11451.082), stdev = 63.663
[info]   CI (99.9%): [11166.154, 11656.442] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1568.273 ±(99.9%) 33.783 MB/sec [Average]
[info]   (min, avg, max) = (1552.844, 1568.273, 1573.706), stdev = 8.773
[info]   CI (99.9%): [1534.490, 1602.056] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   216280.556 ±(99.9%) 4.424 B/op [Average]
[info]   (min, avg, max) = (216280.038, 216280.556, 216282.611), stdev = 1.149
[info]   CI (99.9%): [216276.132, 216284.980] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1477.526 ±(99.9%) 1156.524 MB/sec [Average]
[info]   (min, avg, max) = (1338.916, 1477.526, 2014.765), stdev = 300.346
[info]   CI (99.9%): [321.002, 2634.050] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   203723.758 ±(99.9%) 158125.293 B/op [Average]
[info]   (min, avg, max) = (184283.524, 203723.758, 277149.184), stdev = 41064.636
[info]   CI (99.9%): [45598.466, 361849.051] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.104), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   6.338 ±(99.9%) 20.003 B/op [Average]
[info]   (min, avg, max) = (2.861, 6.338, 14.497), stdev = 5.195
[info]   CI (99.9%): [≈ 0, 26.341] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 37.55% complete, ETA 01:23:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 11536.482 ops/s
[info] # Warmup Iteration   2: 14413.214 ops/s
[info] # Warmup Iteration   3: 14838.392 ops/s
[info] # Warmup Iteration   4: 14817.207 ops/s
[info] # Warmup Iteration   5: 14782.423 ops/s
[info] Iteration   1: 14786.420 ops/s
[info]                  ·gc.alloc.rate:                   1293.839 MB/sec
[info]                  ·gc.alloc.rate.norm:              137648.029 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.574 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     143364.708 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.216 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 14769.124 ops/s
[info]                  ·gc.alloc.rate:                   1291.769 MB/sec
[info]                  ·gc.alloc.rate.norm:              137648.029 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.057 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     143539.413 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13.310 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 14746.552 ops/s
[info]                  ·gc.alloc.rate:                   1289.693 MB/sec
[info]                  ·gc.alloc.rate.norm:              137639.681 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.403 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     143905.467 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.666 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 14585.598 ops/s
[info]                  ·gc.alloc.rate:                   1275.435 MB/sec
[info]                  ·gc.alloc.rate.norm:              137624.030 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.941 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     145555.690 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.985 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 14569.456 ops/s
[info]                  ·gc.alloc.rate:                   1274.016 MB/sec
[info]                  ·gc.alloc.rate.norm:              137624.030 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.161 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     145849.417 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.249 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readUPickle":
[info]   14691.430 ±(99.9%) 404.666 ops/s [Average]
[info]   (min, avg, max) = (14569.456, 14691.430, 14786.420), stdev = 105.090
[info]   CI (99.9%): [14286.764, 15096.096] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readUPickle:·gc.alloc.rate":
[info]   1284.950 ±(99.9%) 36.434 MB/sec [Average]
[info]   (min, avg, max) = (1274.016, 1284.950, 1293.839), stdev = 9.462
[info]   CI (99.9%): [1248.516, 1321.384] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readUPickle:·gc.alloc.rate.norm":
[info]   137636.760 ±(99.9%) 46.633 B/op [Average]
[info]   (min, avg, max) = (137624.030, 137636.760, 137648.029), stdev = 12.110
[info]   CI (99.9%): [137590.127, 137683.393] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readUPickle:·gc.churn.PS_Eden_Space":
[info]   1348.427 ±(99.9%) 4.666 MB/sec [Average]
[info]   (min, avg, max) = (1347.057, 1348.427, 1350.161), stdev = 1.212
[info]   CI (99.9%): [1343.761, 1353.094] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   144442.939 ±(99.9%) 4508.794 B/op [Average]
[info]   (min, avg, max) = (143364.708, 144442.939, 145849.417), stdev = 1170.920
[info]   CI (99.9%): [139934.145, 148951.733] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readUPickle:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.170 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.062, 0.125), stdev = 0.044
[info]   CI (99.9%): [≈ 0, 0.233] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   6.685 ±(99.9%) 18.147 B/op [Average]
[info]   (min, avg, max) = (2.216, 6.685, 13.310), stdev = 4.713
[info]   CI (99.9%): [≈ 0, 24.832] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readUPickle:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readUPickle:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 37.75% complete, ETA 01:23:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 24521.969 ops/s
[info] # Warmup Iteration   2: 35277.485 ops/s
[info] # Warmup Iteration   3: 35024.838 ops/s
[info] # Warmup Iteration   4: 34666.340 ops/s
[info] # Warmup Iteration   5: 34987.572 ops/s
[info] Iteration   1: 35288.501 ops/s
[info]                  ·gc.alloc.rate:                   1340.264 MB/sec
[info]                  ·gc.alloc.rate.norm:              59768.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.034 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     59802.343 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.785 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 35061.613 ops/s
[info]                  ·gc.alloc.rate:                   1331.537 MB/sec
[info]                  ·gc.alloc.rate.norm:              59768.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.258 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60249.241 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.869 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 34949.598 ops/s
[info]                  ·gc.alloc.rate:                   1327.316 MB/sec
[info]                  ·gc.alloc.rate.norm:              59768.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.622 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60502.268 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.812 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 35000.156 ops/s
[info]                  ·gc.alloc.rate:                   1329.184 MB/sec
[info]                  ·gc.alloc.rate.norm:              59768.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.923 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60475.760 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.616 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 34782.245 ops/s
[info]                  ·gc.alloc.rate:                   1321.315 MB/sec
[info]                  ·gc.alloc.rate.norm:              59768.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.377 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60946.898 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.884 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce":
[info]   35016.423 ±(99.9%) 709.079 ops/s [Average]
[info]   (min, avg, max) = (34782.245, 35016.423, 35288.501), stdev = 184.146
[info]   CI (99.9%): [34307.343, 35725.502] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:·gc.alloc.rate":
[info]   1329.923 ±(99.9%) 26.607 MB/sec [Average]
[info]   (min, avg, max) = (1321.315, 1329.923, 1340.264), stdev = 6.910
[info]   CI (99.9%): [1303.316, 1356.530] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   59768.012 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (59768.012, 59768.012, 59768.012), stdev = 0.001
[info]   CI (99.9%): [59768.012, 59768.013] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1343.843 ±(99.9%) 9.454 MB/sec [Average]
[info]   (min, avg, max) = (1341.034, 1343.843, 1347.377), stdev = 2.455
[info]   CI (99.9%): [1334.388, 1353.297] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   60395.302 ±(99.9%) 1605.201 B/op [Average]
[info]   (min, avg, max) = (59802.343, 60395.302, 60946.898), stdev = 416.866
[info]   CI (99.9%): [58790.101, 62000.503] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.067, 0.125), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.198] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   2.993 ±(99.9%) 5.919 B/op [Average]
[info]   (min, avg, max) = (1.869, 2.993, 5.616), stdev = 1.537
[info]   CI (99.9%): [≈ 0, 8.912] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 37.95% complete, ETA 01:22:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 32574.243 ops/s
[info] # Warmup Iteration   2: 46123.645 ops/s
[info] # Warmup Iteration   3: 46230.152 ops/s
[info] # Warmup Iteration   4: 47466.414 ops/s
[info] # Warmup Iteration   5: 47024.786 ops/s
[info] Iteration   1: 46599.842 ops/s
[info]                  ·gc.alloc.rate:                   1387.819 MB/sec
[info]                  ·gc.alloc.rate.norm:              46872.009 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.255 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     45164.271 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.812 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 46598.873 ops/s
[info]                  ·gc.alloc.rate:                   1387.755 MB/sec
[info]                  ·gc.alloc.rate.norm:              46872.009 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.916 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     45222.455 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.812 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 46939.513 ops/s
[info]                  ·gc.alloc.rate:               1398.316 MB/sec
[info]                  ·gc.alloc.rate.norm:          46872.009 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1341.000 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 44950.777 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 47812.078 ops/s
[info]                  ·gc.alloc.rate:                   1423.950 MB/sec
[info]                  ·gc.alloc.rate.norm:              46872.009 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.680 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     44196.849 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.741 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 47816.713 ops/s
[info]                  ·gc.alloc.rate:                   1424.657 MB/sec
[info]                  ·gc.alloc.rate.norm:              46872.009 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.510 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     44268.044 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.370 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala":
[info]   47153.404 ±(99.9%) 2384.225 ops/s [Average]
[info]   (min, avg, max) = (46598.873, 47153.404, 47816.713), stdev = 619.176
[info]   CI (99.9%): [44769.179, 49537.628] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1404.499 ±(99.9%) 71.562 MB/sec [Average]
[info]   (min, avg, max) = (1387.755, 1404.499, 1424.657), stdev = 18.584
[info]   CI (99.9%): [1332.937, 1476.061] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   46872.009 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (46872.009, 46872.009, 46872.009), stdev = 0.001
[info]   CI (99.9%): [46872.009, 46872.010] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1341.072 ±(99.9%) 12.404 MB/sec [Average]
[info]   (min, avg, max) = (1337.255, 1341.072, 1345.510), stdev = 3.221
[info]   CI (99.9%): [1328.668, 1353.477] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   44760.479 ±(99.9%) 1899.010 B/op [Average]
[info]   (min, avg, max) = (44196.849, 44760.479, 45222.455), stdev = 493.167
[info]   CI (99.9%): [42861.469, 46659.489] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.058, 0.083), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.202] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.947 ±(99.9%) 4.814 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.947, 2.812), stdev = 1.250
[info]   CI (99.9%): [≈ 0, 6.761] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 38.15% complete, ETA 01:22:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1209121.757 ops/s
[info] # Warmup Iteration   2: 1268336.122 ops/s
[info] # Warmup Iteration   3: 1277895.518 ops/s
[info] # Warmup Iteration   4: 1290668.824 ops/s
[info] # Warmup Iteration   5: 1287602.186 ops/s
[info] Iteration   1: 1262767.677 ops/s
[info]                  ·gc.alloc.rate:               1149.231 MB/sec
[info]                  ·gc.alloc.rate.norm:          1432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.629 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 839.377 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 1293147.002 ops/s
[info]                  ·gc.alloc.rate:                   1176.626 MB/sec
[info]                  ·gc.alloc.rate.norm:              1432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.281 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1639.693 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.101 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 1291563.764 ops/s
[info]                  ·gc.alloc.rate:                   1175.173 MB/sec
[info]                  ·gc.alloc.rate.norm:              1432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.975 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1642.568 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.101 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 1293686.498 ops/s
[info]                  ·gc.alloc.rate:               1177.580 MB/sec
[info]                  ·gc.alloc.rate.norm:          1432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1349.456 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1641.011 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 1297513.603 ops/s
[info]                  ·gc.alloc.rate:               1181.009 MB/sec
[info]                  ·gc.alloc.rate.norm:          1432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      675.058 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 818.524 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala":
[info]   1287735.709 ±(99.9%) 54400.409 ops/s [Average]
[info]   (min, avg, max) = (1262767.677, 1287735.709, 1297513.603), stdev = 14127.613
[info]   CI (99.9%): [1233335.300, 1342136.117] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1171.924 ±(99.9%) 49.544 MB/sec [Average]
[info]   (min, avg, max) = (1149.231, 1171.924, 1181.009), stdev = 12.866
[info]   CI (99.9%): [1122.379, 1221.468] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1432.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1432.000, 1432.000, 1432.000), stdev = 0.001
[info]   CI (99.9%): [1432.000, 1432.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1078.680 ±(99.9%) 1421.303 MB/sec [Average]
[info]   (min, avg, max) = (673.629, 1078.680, 1349.456), stdev = 369.108
[info]   CI (99.9%): [≈ 0, 2499.983] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1316.235 ±(99.9%) 1713.112 B/op [Average]
[info]   (min, avg, max) = (818.524, 1316.235, 1642.568), stdev = 444.890
[info]   CI (99.9%): [≈ 0, 3029.347] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.176 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.083), stdev = 0.046
[info]   CI (99.9%): [≈ 0, 0.209] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.041 ±(99.9%) 0.214 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.041, 0.101), stdev = 0.056
[info]   CI (99.9%): [≈ 0, 0.254] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 38.35% complete, ETA 01:22:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1212559.802 ops/s
[info] # Warmup Iteration   2: 1248658.887 ops/s
[info] # Warmup Iteration   3: 1252741.999 ops/s
[info] # Warmup Iteration   4: 1252024.557 ops/s
[info] # Warmup Iteration   5: 1252113.024 ops/s
[info] Iteration   1: 1253088.402 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1252754.620 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1254763.940 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1252863.833 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1252672.382 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc":
[info]   1253228.635 ±(99.9%) 3359.131 ops/s [Average]
[info]   (min, avg, max) = (1252672.382, 1253228.635, 1254763.940), stdev = 872.356
[info]   CI (99.9%): [1249869.504, 1256587.766] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻³ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 38.55% complete, ETA 01:22:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2664.901 ops/s
[info] # Warmup Iteration   2: 3292.118 ops/s
[info] # Warmup Iteration   3: 3554.776 ops/s
[info] # Warmup Iteration   4: 3541.509 ops/s
[info] # Warmup Iteration   5: 3512.904 ops/s
[info] Iteration   1: 3553.882 ops/s
[info]                  ·gc.alloc.rate:                   479.874 MB/sec
[info]                  ·gc.alloc.rate.norm:              212496.122 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.561 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     226527.811 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.217 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 3528.497 ops/s
[info]                  ·gc.alloc.rate:               476.451 MB/sec
[info]                  ·gc.alloc.rate.norm:          212496.122 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.510 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 228132.116 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 3524.757 ops/s
[info]                  ·gc.alloc.rate:                   475.948 MB/sec
[info]                  ·gc.alloc.rate.norm:              212496.132 B/op
[info]                  ·gc.churn.PS_Eden_Space:          669.743 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     299019.617 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.032 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 907.086 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 3601.934 ops/s
[info]                  ·gc.alloc.rate:      486.317 MB/sec
[info]                  ·gc.alloc.rate.norm: 212496.120 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 3581.904 ops/s
[info]                  ·gc.alloc.rate:                   483.677 MB/sec
[info]                  ·gc.alloc.rate.norm:              212496.121 B/op
[info]                  ·gc.churn.PS_Eden_Space:          669.791 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     294262.676 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 18.291 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson":
[info]   3558.195 ±(99.9%) 129.067 ops/s [Average]
[info]   (min, avg, max) = (3524.757, 3558.195, 3601.934), stdev = 33.518
[info]   CI (99.9%): [3429.128, 3687.262] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:·gc.alloc.rate":
[info]   480.453 ±(99.9%) 17.373 MB/sec [Average]
[info]   (min, avg, max) = (475.948, 480.453, 486.317), stdev = 4.512
[info]   CI (99.9%): [463.080, 497.827] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   212496.123 ±(99.9%) 0.018 B/op [Average]
[info]   (min, avg, max) = (212496.120, 212496.123, 212496.132), stdev = 0.005
[info]   CI (99.9%): [212496.105, 212496.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   472.521 ±(99.9%) 1061.780 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 472.521, 669.791), stdev = 275.741
[info]   CI (99.9%): [≈ 0, 1534.301] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   209588.444 ±(99.9%) 470526.732 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 209588.444, 299019.617), stdev = 122194.298
[info]   CI (99.9%): [≈ 0, 680115.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.419 ±(99.9%) 3.472 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.419, 2.032), stdev = 0.902
[info]   CI (99.9%): [≈ 0, 3.891] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   186.919 ±(99.9%) 1550.489 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 186.919, 907.086), stdev = 402.657
[info]   CI (99.9%): [≈ 0, 1737.408] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.600, 3.000), stdev = 1.140
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 38.76% complete, ETA 01:21:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 27032.811 ops/s
[info] # Warmup Iteration   2: 29896.712 ops/s
[info] # Warmup Iteration   3: 29852.041 ops/s
[info] # Warmup Iteration   4: 29324.313 ops/s
[info] # Warmup Iteration   5: 29582.520 ops/s
[info] Iteration   1: 29358.963 ops/s
[info]                  ·gc.alloc.rate:                   662.028 MB/sec
[info]                  ·gc.alloc.rate.norm:              35488.015 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.822 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     36120.236 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.593 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 85.370 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 30008.359 ops/s
[info]                  ·gc.alloc.rate:                   676.594 MB/sec
[info]                  ·gc.alloc.rate.norm:              35488.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.734 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     35337.996 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.092 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 30097.843 ops/s
[info]                  ·gc.alloc.rate:                   678.672 MB/sec
[info]                  ·gc.alloc.rate.norm:              35488.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.472 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     35216.103 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.177 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 30083.570 ops/s
[info]                  ·gc.alloc.rate:               678.350 MB/sec
[info]                  ·gc.alloc.rate.norm:          35488.015 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.466 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 35232.488 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 29788.384 ops/s
[info]                  ·gc.alloc.rate:                   671.772 MB/sec
[info]                  ·gc.alloc.rate.norm:              35488.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.516 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     35580.142 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.100 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeUPickle":
[info]   29867.424 ±(99.9%) 1193.784 ops/s [Average]
[info]   (min, avg, max) = (29358.963, 29867.424, 30097.843), stdev = 310.022
[info]   CI (99.9%): [28673.639, 31061.208] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeUPickle:·gc.alloc.rate":
[info]   673.483 ±(99.9%) 26.847 MB/sec [Average]
[info]   (min, avg, max) = (662.028, 673.483, 678.672), stdev = 6.972
[info]   CI (99.9%): [646.637, 700.330] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeUPickle:·gc.alloc.rate.norm":
[info]   35488.015 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (35488.014, 35488.015, 35488.015), stdev = 0.001
[info]   CI (99.9%): [35488.013, 35488.016] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeUPickle:·gc.churn.PS_Eden_Space":
[info]   673.602 ±(99.9%) 0.634 MB/sec [Average]
[info]   (min, avg, max) = (673.466, 673.602, 673.822), stdev = 0.165
[info]   CI (99.9%): [672.968, 674.236] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   35497.393 ±(99.9%) 1452.933 B/op [Average]
[info]   (min, avg, max) = (35216.103, 35497.393, 36120.236), stdev = 377.322
[info]   CI (99.9%): [34044.460, 36950.326] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space":
[info]   0.335 ±(99.9%) 2.707 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.335, 1.593), stdev = 0.703
[info]   CI (99.9%): [≈ 0, 3.042] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   17.948 ±(99.9%) 145.162 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 17.948, 85.370), stdev = 37.698
[info]   CI (99.9%): [≈ 0, 163.109] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeUPickle:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeUPickle:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 38.96% complete, ETA 01:21:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 66572.309 ops/s
[info] # Warmup Iteration   2: 77506.915 ops/s
[info] # Warmup Iteration   3: 78677.063 ops/s
[info] # Warmup Iteration   4: 78735.286 ops/s
[info] # Warmup Iteration   5: 77948.595 ops/s
[info] Iteration   1: 77722.784 ops/s
[info]                  ·gc.alloc.rate:                   1445.751 MB/sec
[info]                  ·gc.alloc.rate.norm:              29264.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.153 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27248.003 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.265 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 76738.516 ops/s
[info]                  ·gc.alloc.rate:                   1426.857 MB/sec
[info]                  ·gc.alloc.rate.norm:              29264.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.277 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27611.363 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.281 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 77870.251 ops/s
[info]                  ·gc.alloc.rate:               1447.880 MB/sec
[info]                  ·gc.alloc.rate.norm:          29264.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1347.589 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 27236.964 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 79038.469 ops/s
[info]                  ·gc.alloc.rate:                   1469.695 MB/sec
[info]                  ·gc.alloc.rate.norm:              29264.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.998 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     26860.715 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.244 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 78852.323 ops/s
[info]                  ·gc.alloc.rate:                   1466.325 MB/sec
[info]                  ·gc.alloc.rate.norm:              29264.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1351.093 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     26964.295 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.416 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce":
[info]   78044.468 ±(99.9%) 3591.646 ops/s [Average]
[info]   (min, avg, max) = (76738.516, 78044.468, 79038.469), stdev = 932.739
[info]   CI (99.9%): [74452.822, 81636.115] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:·gc.alloc.rate":
[info]   1451.302 ±(99.9%) 66.809 MB/sec [Average]
[info]   (min, avg, max) = (1426.857, 1451.302, 1469.695), stdev = 17.350
[info]   CI (99.9%): [1384.493, 1518.110] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   29264.006 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (29264.005, 29264.006, 29264.006), stdev = 0.001
[info]   CI (99.9%): [29264.005, 29264.006] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1348.022 ±(99.9%) 7.964 MB/sec [Average]
[info]   (min, avg, max) = (1346.153, 1348.022, 1351.093), stdev = 2.068
[info]   CI (99.9%): [1340.058, 1355.986] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   27184.268 ±(99.9%) 1126.476 B/op [Average]
[info]   (min, avg, max) = (26860.715, 27184.268, 27611.363), stdev = 292.542
[info]   CI (99.9%): [26057.792, 28310.744] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.113 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.062), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.841 ±(99.9%) 2.297 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.841, 1.281), stdev = 0.597
[info]   CI (99.9%): [≈ 0, 3.138] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 39.16% complete, ETA 01:21:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 11436.589 ops/s
[info] # Warmup Iteration   2: 338969.109 ops/s
[info] # Warmup Iteration   3: 339433.621 ops/s
[info] # Warmup Iteration   4: 337478.422 ops/s
[info] # Warmup Iteration   5: 335432.145 ops/s
[info] Iteration   1: 336477.621 ops/s
[info]                  ·gc.alloc.rate:                   673.861 MB/sec
[info]                  ·gc.alloc.rate.norm:              3152.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          664.119 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3106.435 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.043 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.199 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 335118.583 ops/s
[info]                  ·gc.alloc.rate:               671.305 MB/sec
[info]                  ·gc.alloc.rate.norm:          3152.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      664.279 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3119.011 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 339643.019 ops/s
[info]                  ·gc.alloc.rate:               680.232 MB/sec
[info]                  ·gc.alloc.rate.norm:          3152.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      665.814 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3085.191 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 336956.192 ops/s
[info]                  ·gc.alloc.rate:               674.822 MB/sec
[info]                  ·gc.alloc.rate.norm:          3152.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      665.803 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3109.872 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 338389.302 ops/s
[info]                  ·gc.alloc.rate:               677.676 MB/sec
[info]                  ·gc.alloc.rate.norm:          3152.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      666.802 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3101.425 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava":
[info]   337316.943 ±(99.9%) 6732.566 ops/s [Average]
[info]   (min, avg, max) = (335118.583, 337316.943, 339643.019), stdev = 1748.426
[info]   CI (99.9%): [330584.378, 344049.509] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   675.579 ±(99.9%) 13.316 MB/sec [Average]
[info]   (min, avg, max) = (671.305, 675.579, 680.232), stdev = 3.458
[info]   CI (99.9%): [662.263, 688.895] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   3152.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3152.001, 3152.001, 3152.001), stdev = 0.001
[info]   CI (99.9%): [3152.001, 3152.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   665.363 ±(99.9%) 4.386 MB/sec [Average]
[info]   (min, avg, max) = (664.119, 665.363, 666.802), stdev = 1.139
[info]   CI (99.9%): [660.978, 669.749] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   3104.387 ±(99.9%) 48.149 B/op [Average]
[info]   (min, avg, max) = (3085.191, 3104.387, 3119.011), stdev = 12.504
[info]   CI (99.9%): [3056.238, 3152.536] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.009 ±(99.9%) 0.073 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.009, 0.043), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.082] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.040 ±(99.9%) 0.343 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.040, 0.199), stdev = 0.089
[info]   CI (99.9%): [≈ 0, 0.383] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 39.36% complete, ETA 01:20:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 168300.833 ops/s
[info] # Warmup Iteration   2: 253995.554 ops/s
[info] # Warmup Iteration   3: 250636.710 ops/s
[info] # Warmup Iteration   4: 244648.931 ops/s
[info] # Warmup Iteration   5: 254729.288 ops/s
[info] Iteration   1: 254593.072 ops/s
[info]                  ·gc.alloc.rate:                   559.100 MB/sec
[info]                  ·gc.alloc.rate.norm:              3456.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.621 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3162.517 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.027 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.165 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 255104.032 ops/s
[info]                  ·gc.alloc.rate:                   560.182 MB/sec
[info]                  ·gc.alloc.rate.norm:              3456.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.817 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4120.049 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.068 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.756 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 254290.869 ops/s
[info]                  ·gc.alloc.rate:      558.394 MB/sec
[info]                  ·gc.alloc.rate.norm: 3456.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 254216.248 ops/s
[info]                  ·gc.alloc.rate:                   558.225 MB/sec
[info]                  ·gc.alloc.rate.norm:              3456.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.801 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4134.389 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.129 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 254069.476 ops/s
[info]                  ·gc.alloc.rate:                   557.953 MB/sec
[info]                  ·gc.alloc.rate.norm:              3456.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          668.189 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4138.812 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.129 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala":
[info]   254454.739 ±(99.9%) 1579.322 ops/s [Average]
[info]   (min, avg, max) = (254069.476, 254454.739, 255104.032), stdev = 410.145
[info]   CI (99.9%): [252875.417, 256034.062] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   558.771 ±(99.9%) 3.449 MB/sec [Average]
[info]   (min, avg, max) = (557.953, 558.771, 560.182), stdev = 0.896
[info]   CI (99.9%): [555.322, 562.220] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   3456.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3456.002, 3456.002, 3456.002), stdev = 0.001
[info]   CI (99.9%): [3456.002, 3456.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   503.086 ±(99.9%) 1113.853 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 503.086, 668.189), stdev = 289.264
[info]   CI (99.9%): [≈ 0, 1616.938] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   3111.153 ±(99.9%) 6889.015 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3111.153, 4138.812), stdev = 1789.055
[info]   CI (99.9%): [≈ 0, 10000.169] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.427 ±(99.9%) 3.531 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.427, 2.068), stdev = 0.917
[info]   CI (99.9%): [≈ 0, 3.959] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.636 ±(99.9%) 21.786 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.636, 12.756), stdev = 5.658
[info]   CI (99.9%): [≈ 0, 24.422] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 3.000), stdev = 1.140
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 39.56% complete, ETA 01:20:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 468582.511 ops/s
[info] # Warmup Iteration   2: 489227.328 ops/s
[info] # Warmup Iteration   3: 492916.275 ops/s
[info] # Warmup Iteration   4: 492783.411 ops/s
[info] # Warmup Iteration   5: 485914.231 ops/s
[info] Iteration   1: 492432.558 ops/s
[info]                  ·gc.alloc.rate:                   620.759 MB/sec
[info]                  ·gc.alloc.rate.norm:              1984.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.478 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2152.495 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.589 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.078 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 496255.376 ops/s
[info]                  ·gc.alloc.rate:      625.687 MB/sec
[info]                  ·gc.alloc.rate.norm: 1984.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 493332.165 ops/s
[info]                  ·gc.alloc.rate:                   621.893 MB/sec
[info]                  ·gc.alloc.rate.norm:              1984.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.455 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2148.499 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.066 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 494360.125 ops/s
[info]                  ·gc.alloc.rate:                   623.271 MB/sec
[info]                  ·gc.alloc.rate.norm:              1984.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.538 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2144.011 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.066 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 493005.265 ops/s
[info]                  ·gc.alloc.rate:                   621.481 MB/sec
[info]                  ·gc.alloc.rate.norm:              1984.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.454 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2149.920 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.133 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala":
[info]   493877.098 ±(99.9%) 5786.630 ops/s [Average]
[info]   (min, avg, max) = (492432.558, 493877.098, 496255.376), stdev = 1502.770
[info]   CI (99.9%): [488090.467, 499663.728] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   622.618 ±(99.9%) 7.487 MB/sec [Average]
[info]   (min, avg, max) = (620.759, 622.618, 625.687), stdev = 1.944
[info]   CI (99.9%): [615.131, 630.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   1984.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1984.001, 1984.001, 1984.001), stdev = 0.001
[info]   CI (99.9%): [1984.001, 1984.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   538.785 ±(99.9%) 1159.775 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 538.785, 673.538), stdev = 301.190
[info]   CI (99.9%): [≈ 0, 1698.560] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1718.985 ±(99.9%) 3700.264 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1718.985, 2152.495), stdev = 960.947
[info]   CI (99.9%): [≈ 0, 5419.249] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.334 ±(99.9%) 2.701 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.334, 1.589), stdev = 0.701
[info]   CI (99.9%): [≈ 0, 3.035] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.069 ±(99.9%) 8.632 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.069, 5.078), stdev = 2.242
[info]   CI (99.9%): [≈ 0, 9.701] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:·gc.time":
[info]   4.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 39.76% complete, ETA 01:20:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 44562.478 ops/s
[info] # Warmup Iteration   2: 70032.992 ops/s
[info] # Warmup Iteration   3: 70530.565 ops/s
[info] # Warmup Iteration   4: 70135.645 ops/s
[info] # Warmup Iteration   5: 70250.821 ops/s
[info] Iteration   1: 71286.008 ops/s
[info]                  ·gc.alloc.rate:                   3088.049 MB/sec
[info]                  ·gc.alloc.rate.norm:              68168.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3374.756 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     74497.002 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.838 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 70182.891 ops/s
[info]                  ·gc.alloc.rate:                   3039.838 MB/sec
[info]                  ·gc.alloc.rate.norm:              68168.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2706.886 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60701.607 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.334 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 71459.342 ops/s
[info]                  ·gc.alloc.rate:                   3095.019 MB/sec
[info]                  ·gc.alloc.rate.norm:              68168.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3389.934 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     74663.541 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.917 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 70823.381 ops/s
[info]                  ·gc.alloc.rate:                   3068.821 MB/sec
[info]                  ·gc.alloc.rate.norm:              68168.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2717.629 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60366.950 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.925 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 70475.532 ops/s
[info]                  ·gc.alloc.rate:                   3066.857 MB/sec
[info]                  ·gc.alloc.rate.norm:              68471.448 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3400.217 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     75914.129 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.789 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson":
[info]   70845.431 ±(99.9%) 2062.222 ops/s [Average]
[info]   (min, avg, max) = (70182.891, 70845.431, 71459.342), stdev = 535.553
[info]   CI (99.9%): [68783.209, 72907.653] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3071.717 ±(99.9%) 82.990 MB/sec [Average]
[info]   (min, avg, max) = (3039.838, 3071.717, 3095.019), stdev = 21.552
[info]   CI (99.9%): [2988.726, 3154.707] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   68228.695 ±(99.9%) 522.545 B/op [Average]
[info]   (min, avg, max) = (68168.006, 68228.695, 68471.448), stdev = 135.703
[info]   CI (99.9%): [67706.149, 68751.240] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3117.884 ±(99.9%) 1426.337 MB/sec [Average]
[info]   (min, avg, max) = (2706.886, 3117.884, 3400.217), stdev = 370.415
[info]   CI (99.9%): [1691.547, 4544.222] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   69228.646 ±(99.9%) 30638.001 B/op [Average]
[info]   (min, avg, max) = (60366.950, 69228.646, 75914.129), stdev = 7956.592
[info]   CI (99.9%): [38590.645, 99866.647] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.079 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.079, 0.125), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.223] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.761 ±(99.9%) 3.223 B/op [Average]
[info]   (min, avg, max) = (0.917, 1.761, 2.789), stdev = 0.837
[info]   CI (99.9%): [≈ 0, 4.984] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 39.96% complete, ETA 01:20:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 130600.102 ops/s
[info] # Warmup Iteration   2: 167779.932 ops/s
[info] # Warmup Iteration   3: 171164.062 ops/s
[info] # Warmup Iteration   4: 174476.972 ops/s
[info] # Warmup Iteration   5: 174519.088 ops/s
[info] Iteration   1: 173880.614 ops/s
[info]                  ·gc.alloc.rate:                   1773.874 MB/sec
[info]                  ·gc.alloc.rate.norm:              16056.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.566 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12161.125 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.188 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 173268.914 ops/s
[info]                  ·gc.alloc.rate:                   1767.613 MB/sec
[info]                  ·gc.alloc.rate.norm:              16056.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2018.325 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18333.335 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.756 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 174779.601 ops/s
[info]                  ·gc.alloc.rate:                   1782.956 MB/sec
[info]                  ·gc.alloc.rate.norm:              16056.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.907 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12138.268 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.375 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 172924.235 ops/s
[info]                  ·gc.alloc.rate:                   1764.113 MB/sec
[info]                  ·gc.alloc.rate.norm:              16056.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2024.828 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18428.886 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.568 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 174641.830 ops/s
[info]                  ·gc.alloc.rate:                   1782.410 MB/sec
[info]                  ·gc.alloc.rate.norm:              16056.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2028.910 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18276.482 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.375 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce":
[info]   173899.039 ±(99.9%) 3148.810 ops/s [Average]
[info]   (min, avg, max) = (172924.235, 173899.039, 174779.601), stdev = 817.736
[info]   CI (99.9%): [170750.229, 177047.848] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1774.193 ±(99.9%) 32.749 MB/sec [Average]
[info]   (min, avg, max) = (1764.113, 1774.193, 1782.956), stdev = 8.505
[info]   CI (99.9%): [1741.445, 1806.942] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   16056.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (16056.002, 16056.003, 16056.003), stdev = 0.001
[info]   CI (99.9%): [16056.002, 16056.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1752.707 ±(99.9%) 1430.646 MB/sec [Average]
[info]   (min, avg, max) = (1343.566, 1752.707, 2028.910), stdev = 371.534
[info]   CI (99.9%): [322.062, 3183.353] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   15867.619 ±(99.9%) 13070.741 B/op [Average]
[info]   (min, avg, max) = (12138.268, 15867.619, 18428.886), stdev = 3394.430
[info]   CI (99.9%): [2796.879, 28938.360] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.453 ±(99.9%) 0.834 B/op [Average]
[info]   (min, avg, max) = (0.188, 0.453, 0.756), stdev = 0.216
[info]   CI (99.9%): [≈ 0, 1.286] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.200, 3.000), stdev = 1.095
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 40.16% complete, ETA 01:19:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 12400.203 ops/s
[info] # Warmup Iteration   2: 752921.695 ops/s
[info] # Warmup Iteration   3: 761289.830 ops/s
[info] # Warmup Iteration   4: 755867.297 ops/s
[info] # Warmup Iteration   5: 757347.203 ops/s
[info] Iteration   1: 758193.755 ops/s
[info]                  ·gc.alloc.rate:               593.504 MB/sec
[info]                  ·gc.alloc.rate.norm:          1232.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.583 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1061.949 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 754618.505 ops/s
[info]                  ·gc.alloc.rate:               590.829 MB/sec
[info]                  ·gc.alloc.rate.norm:          1232.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      663.955 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1384.482 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 761219.588 ops/s
[info]                  ·gc.alloc.rate:                   595.973 MB/sec
[info]                  ·gc.alloc.rate.norm:              1232.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.905 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1372.431 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.033 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.067 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 763918.197 ops/s
[info]                  ·gc.alloc.rate:               597.987 MB/sec
[info]                  ·gc.alloc.rate.norm:          1232.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      665.830 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1371.774 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 761799.347 ops/s
[info]                  ·gc.alloc.rate:                   596.332 MB/sec
[info]                  ·gc.alloc.rate.norm:              1232.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          665.795 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1375.510 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.023 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.047 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava":
[info]   759949.878 ±(99.9%) 13922.056 ops/s [Average]
[info]   (min, avg, max) = (754618.505, 759949.878, 763918.197), stdev = 3615.514
[info]   CI (99.9%): [746027.822, 773871.935] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   594.925 ±(99.9%) 10.762 MB/sec [Average]
[info]   (min, avg, max) = (590.829, 594.925, 597.987), stdev = 2.795
[info]   CI (99.9%): [584.163, 605.687] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   1232.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1232.001, 1232.001, 1232.001), stdev = 0.001
[info]   CI (99.9%): [1232.001, 1232.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   634.214 ±(99.9%) 263.997 MB/sec [Average]
[info]   (min, avg, max) = (511.583, 634.214, 665.830), stdev = 68.559
[info]   CI (99.9%): [370.217, 898.210] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   1313.229 ±(99.9%) 541.252 B/op [Average]
[info]   (min, avg, max) = (1061.949, 1313.229, 1384.482), stdev = 140.562
[info]   CI (99.9%): [771.977, 1854.481] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.011 ±(99.9%) 0.060 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.011, 0.033), stdev = 0.016
[info]   CI (99.9%): [≈ 0, 0.071] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.023 ±(99.9%) 0.123 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.023, 0.067), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 40.36% complete, ETA 01:19:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 349649.593 ops/s
[info] # Warmup Iteration   2: 485411.539 ops/s
[info] # Warmup Iteration   3: 487988.282 ops/s
[info] # Warmup Iteration   4: 467384.478 ops/s
[info] # Warmup Iteration   5: 479688.780 ops/s
[info] Iteration   1: 479313.098 ops/s
[info]                  ·gc.alloc.rate:                   492.168 MB/sec
[info]                  ·gc.alloc.rate.norm:              1616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.641 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1679.937 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.068 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 483452.987 ops/s
[info]                  ·gc.alloc.rate:               496.479 MB/sec
[info]                  ·gc.alloc.rate.norm:          1616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.708 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1665.570 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 485139.615 ops/s
[info]                  ·gc.alloc.rate:                   498.157 MB/sec
[info]                  ·gc.alloc.rate.norm:              1616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.879 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2166.573 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.095 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.795 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 485635.931 ops/s
[info]                  ·gc.alloc.rate:                   498.659 MB/sec
[info]                  ·gc.alloc.rate.norm:              1616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.854 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2164.312 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.135 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 488047.791 ops/s
[info]                  ·gc.alloc.rate:      501.128 MB/sec
[info]                  ·gc.alloc.rate.norm: 1616.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala":
[info]   484317.884 ±(99.9%) 12495.416 ops/s [Average]
[info]   (min, avg, max) = (479313.098, 484317.884, 488047.791), stdev = 3245.020
[info]   CI (99.9%): [471822.468, 496813.301] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   497.318 ±(99.9%) 12.805 MB/sec [Average]
[info]   (min, avg, max) = (492.168, 497.318, 501.128), stdev = 3.326
[info]   CI (99.9%): [484.513, 510.123] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1616.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1616.001, 1616.001, 1616.001), stdev = 0.001
[info]   CI (99.9%): [1616.001, 1616.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   471.816 ±(99.9%) 1059.206 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 471.816, 667.879), stdev = 275.072
[info]   CI (99.9%): [≈ 0, 1531.022] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1535.278 ±(99.9%) 3438.302 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1535.278, 2166.573), stdev = 892.916
[info]   CI (99.9%): [≈ 0, 4973.581] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.431 ±(99.9%) 3.581 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.431, 2.095), stdev = 0.930
[info]   CI (99.9%): [≈ 0, 4.012] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.400 ±(99.9%) 11.615 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.400, 6.795), stdev = 3.016
[info]   CI (99.9%): [≈ 0, 13.015] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.600, 3.000), stdev = 1.140
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 40.56% complete, ETA 01:19:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 625096.686 ops/s
[info] # Warmup Iteration   2: 660454.935 ops/s
[info] # Warmup Iteration   3: 609020.138 ops/s
[info] # Warmup Iteration   4: 601945.465 ops/s
[info] # Warmup Iteration   5: 605578.354 ops/s
[info] Iteration   1: 603492.202 ops/s
[info]                  ·gc.alloc.rate:                   472.397 MB/sec
[info]                  ·gc.alloc.rate.norm:              1232.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.574 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1334.174 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.054 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 600235.888 ops/s
[info]                  ·gc.alloc.rate:               470.065 MB/sec
[info]                  ·gc.alloc.rate.norm:          1232.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.811 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1341.413 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 603059.295 ops/s
[info]                  ·gc.alloc.rate:                   472.126 MB/sec
[info]                  ·gc.alloc.rate.norm:              1232.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.205 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1756.710 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.599 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.174 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 607078.840 ops/s
[info]                  ·gc.alloc.rate:      475.263 MB/sec
[info]                  ·gc.alloc.rate.norm: 1232.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 600004.828 ops/s
[info]                  ·gc.alloc.rate:                   469.874 MB/sec
[info]                  ·gc.alloc.rate.norm:              1232.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.418 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1765.691 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.164 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala":
[info]   602774.211 ±(99.9%) 11100.142 ops/s [Average]
[info]   (min, avg, max) = (600004.828, 602774.211, 607078.840), stdev = 2882.672
[info]   CI (99.9%): [591674.068, 613874.353] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   471.945 ±(99.9%) 8.408 MB/sec [Average]
[info]   (min, avg, max) = (469.874, 471.945, 475.263), stdev = 2.183
[info]   CI (99.9%): [463.537, 480.353] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1232.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1232.001, 1232.001, 1232.001), stdev = 0.001
[info]   CI (99.9%): [1232.001, 1232.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   474.002 ±(99.9%) 1066.718 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 474.002, 673.418), stdev = 277.023
[info]   CI (99.9%): [≈ 0, 1540.720] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1239.598 ±(99.9%) 2790.119 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1239.598, 1765.691), stdev = 724.585
[info]   CI (99.9%): [≈ 0, 4029.716] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.337 ±(99.9%) 2.720 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.337, 1.599), stdev = 0.706
[info]   CI (99.9%): [≈ 0, 3.057] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.878 ±(99.9%) 7.098 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.878, 4.174), stdev = 1.843
[info]   CI (99.9%): [≈ 0, 7.976] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 3.000), stdev = 1.140
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 40.76% complete, ETA 01:19:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 655424.697 ops/s
[info] # Warmup Iteration   2: 614681.767 ops/s
[info] # Warmup Iteration   3: 699132.531 ops/s
[info] # Warmup Iteration   4: 698955.701 ops/s
[info] # Warmup Iteration   5: 699178.489 ops/s
[info] Iteration   1: 698373.703 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 698704.261 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 698937.606 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 699333.864 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 698383.936 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc":
[info]   698746.674 ±(99.9%) 1556.695 ops/s [Average]
[info]   (min, avg, max) = (698373.703, 698746.674, 699333.864), stdev = 404.269
[info]   CI (99.9%): [697189.979, 700303.369] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
[info]   CI (99.9%): [0.001, 0.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 40.96% complete, ETA 01:18:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 19421.600 ops/s
[info] # Warmup Iteration   2: 27042.509 ops/s
[info] # Warmup Iteration   3: 27618.405 ops/s
[info] # Warmup Iteration   4: 27666.060 ops/s
[info] # Warmup Iteration   5: 27581.657 ops/s
[info] Iteration   1: 27583.298 ops/s
[info]                  ·gc.alloc.rate:                   1517.094 MB/sec
[info]                  ·gc.alloc.rate.norm:              86528.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.798 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     76472.920 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.188 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 27634.738 ops/s
[info]                  ·gc.alloc.rate:                   1519.625 MB/sec
[info]                  ·gc.alloc.rate.norm:              86528.017 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.507 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     76442.860 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.371 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 27800.786 ops/s
[info]                  ·gc.alloc.rate:                   1528.415 MB/sec
[info]                  ·gc.alloc.rate.norm:              86528.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.592 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     76064.657 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.535 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 27754.911 ops/s
[info]                  ·gc.alloc.rate:                   1525.922 MB/sec
[info]                  ·gc.alloc.rate.norm:              86528.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2019.432 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     114512.704 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.541 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 27572.369 ops/s
[info]                  ·gc.alloc.rate:                   1515.873 MB/sec
[info]                  ·gc.alloc.rate.norm:              86528.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.296 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     76962.497 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.377 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson":
[info]   27669.220 ±(99.9%) 397.402 ops/s [Average]
[info]   (min, avg, max) = (27572.369, 27669.220, 27800.786), stdev = 103.204
[info]   CI (99.9%): [27271.818, 28066.622] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1521.386 ±(99.9%) 21.256 MB/sec [Average]
[info]   (min, avg, max) = (1515.873, 1521.386, 1528.415), stdev = 5.520
[info]   CI (99.9%): [1500.129, 1542.642] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   86528.016 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (86528.016, 86528.016, 86528.017), stdev = 0.001
[info]   CI (99.9%): [86528.014, 86528.018] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1478.925 ±(99.9%) 1163.531 MB/sec [Average]
[info]   (min, avg, max) = (1340.798, 1478.925, 2019.432), stdev = 302.165
[info]   CI (99.9%): [315.394, 2642.456] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   84091.128 ±(99.9%) 65496.244 B/op [Average]
[info]   (min, avg, max) = (76064.657, 84091.128, 114512.704), stdev = 17009.167
[info]   CI (99.9%): [18594.884, 149587.371] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.062), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   2.602 ±(99.9%) 3.782 B/op [Average]
[info]   (min, avg, max) = (1.188, 2.602, 3.541), stdev = 0.982
[info]   CI (99.9%): [≈ 0, 6.384] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 41.16% complete, ETA 01:18:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5029.953 ops/s
[info] # Warmup Iteration   2: 7023.163 ops/s
[info] # Warmup Iteration   3: 7157.184 ops/s
[info] # Warmup Iteration   4: 7246.773 ops/s
[info] # Warmup Iteration   5: 7235.672 ops/s
[info] Iteration   1: 7221.307 ops/s
[info]                  ·gc.alloc.rate:                   1141.924 MB/sec
[info]                  ·gc.alloc.rate.norm:              248864.060 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.245 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     292956.717 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.537 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 7249.596 ops/s
[info]                  ·gc.alloc.rate:               1146.897 MB/sec
[info]                  ·gc.alloc.rate.norm:          248864.060 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.350 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 145892.607 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 7234.044 ops/s
[info]                  ·gc.alloc.rate:                   1143.984 MB/sec
[info]                  ·gc.alloc.rate.norm:              248864.060 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.917 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     292575.310 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.528 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 7063.374 ops/s
[info]                  ·gc.alloc.rate:                   1116.979 MB/sec
[info]                  ·gc.alloc.rate.norm:              248869.892 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.253 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     299953.588 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.638 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 7205.250 ops/s
[info]                  ·gc.alloc.rate:               1139.457 MB/sec
[info]                  ·gc.alloc.rate.norm:          248882.734 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.774 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 147167.285 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce":
[info]   7194.714 ±(99.9%) 289.615 ops/s [Average]
[info]   (min, avg, max) = (7063.374, 7194.714, 7249.596), stdev = 75.212
[info]   CI (99.9%): [6905.099, 7484.329] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.alloc.rate":
[info]   1137.848 ±(99.9%) 46.137 MB/sec [Average]
[info]   (min, avg, max) = (1116.979, 1137.848, 1146.897), stdev = 11.982
[info]   CI (99.9%): [1091.711, 1183.985] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   248868.961 ±(99.9%) 31.202 B/op [Average]
[info]   (min, avg, max) = (248864.060, 248868.961, 248882.734), stdev = 8.103
[info]   CI (99.9%): [248837.759, 248900.162] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1076.308 ±(99.9%) 1417.470 MB/sec [Average]
[info]   (min, avg, max) = (672.350, 1076.308, 1346.253), stdev = 368.112
[info]   CI (99.9%): [≈ 0, 2493.778] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   235709.101 ±(99.9%) 313686.092 B/op [Average]
[info]   (min, avg, max) = (145892.607, 235709.101, 299953.588), stdev = 81463.282
[info]   CI (99.9%): [≈ 0, 549395.193] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.056] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   2.741 ±(99.9%) 9.635 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.741, 4.638), stdev = 2.502
[info]   CI (99.9%): [≈ 0, 12.376] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 2.000), stdev = 0.894
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 41.37% complete, ETA 01:18:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4132.028 ops/s
[info] # Warmup Iteration   2: 7255.220 ops/s
[info] # Warmup Iteration   3: 7271.344 ops/s
[info] # Warmup Iteration   4: 7500.534 ops/s
[info] # Warmup Iteration   5: 7438.381 ops/s
[info] Iteration   1: 7366.794 ops/s
[info]                  ·gc.alloc.rate:                   1075.885 MB/sec
[info]                  ·gc.alloc.rate.norm:              229848.059 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.307 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     285483.640 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13.342 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 7344.889 ops/s
[info]                  ·gc.alloc.rate:                   1072.674 MB/sec
[info]                  ·gc.alloc.rate.norm:              229848.059 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.309 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     286338.614 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.461 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 7478.298 ops/s
[info]                  ·gc.alloc.rate:               1092.203 MB/sec
[info]                  ·gc.alloc.rate.norm:          229848.058 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.798 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 140744.693 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 7515.246 ops/s
[info]                  ·gc.alloc.rate:                   1097.626 MB/sec
[info]                  ·gc.alloc.rate.norm:              229858.513 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.557 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     280313.087 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17.437 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 7426.478 ops/s
[info]                  ·gc.alloc.rate:               1084.712 MB/sec
[info]                  ·gc.alloc.rate.norm:          229880.058 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1340.532 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 284095.207 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala":
[info]   7426.341 ±(99.9%) 277.567 ops/s [Average]
[info]   (min, avg, max) = (7344.889, 7426.341, 7515.246), stdev = 72.083
[info]   CI (99.9%): [7148.774, 7703.908] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1084.620 ±(99.9%) 40.645 MB/sec [Average]
[info]   (min, avg, max) = (1072.674, 1084.620, 1097.626), stdev = 10.555
[info]   CI (99.9%): [1043.975, 1125.265] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   229856.549 ±(99.9%) 53.523 B/op [Average]
[info]   (min, avg, max) = (229848.058, 229856.549, 229880.058), stdev = 13.900
[info]   CI (99.9%): [229803.026, 229910.072] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1204.101 ±(99.9%) 1152.300 MB/sec [Average]
[info]   (min, avg, max) = (668.798, 1204.101, 1340.532), stdev = 299.249
[info]   CI (99.9%): [51.801, 2356.400] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   255395.048 ±(99.9%) 246953.141 B/op [Average]
[info]   (min, avg, max) = (140744.693, 255395.048, 286338.614), stdev = 64132.946
[info]   CI (99.9%): [8441.907, 502348.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.146 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.083), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.179] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   7.048 ±(99.9%) 30.659 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 7.048, 17.437), stdev = 7.962
[info]   CI (99.9%): [≈ 0, 37.707] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 41.57% complete, ETA 01:18:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 145769.375 ops/s
[info] # Warmup Iteration   2: 153972.994 ops/s
[info] # Warmup Iteration   3: 153924.835 ops/s
[info] # Warmup Iteration   4: 154785.517 ops/s
[info] # Warmup Iteration   5: 158162.896 ops/s
[info] Iteration   1: 155860.051 ops/s
[info]                  ·gc.alloc.rate:                   1510.584 MB/sec
[info]                  ·gc.alloc.rate.norm:              15248.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.147 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13608.348 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.631 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 156613.895 ops/s
[info]                  ·gc.alloc.rate:                   1517.401 MB/sec
[info]                  ·gc.alloc.rate.norm:              15248.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2023.183 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20330.477 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.255 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 158770.702 ops/s
[info]                  ·gc.alloc.rate:                   1538.228 MB/sec
[info]                  ·gc.alloc.rate.norm:              15248.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.325 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13385.374 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.619 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 157666.449 ops/s
[info]                  ·gc.alloc.rate:                   1527.551 MB/sec
[info]                  ·gc.alloc.rate.norm:              15248.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1351.604 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13491.704 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.416 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 154297.795 ops/s
[info]                  ·gc.alloc.rate:               1495.193 MB/sec
[info]                  ·gc.alloc.rate.norm:          15248.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1352.819 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 13796.069 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala":
[info]   156641.779 ±(99.9%) 6582.348 ops/s [Average]
[info]   (min, avg, max) = (154297.795, 156641.779, 158770.702), stdev = 1709.415
[info]   CI (99.9%): [150059.430, 163224.127] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1517.791 ±(99.9%) 63.146 MB/sec [Average]
[info]   (min, avg, max) = (1495.193, 1517.791, 1538.228), stdev = 16.399
[info]   CI (99.9%): [1454.646, 1580.937] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   15248.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (15248.003, 15248.003, 15248.003), stdev = 0.001
[info]   CI (99.9%): [15248.003, 15248.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1485.216 ±(99.9%) 1158.034 MB/sec [Average]
[info]   (min, avg, max) = (1348.147, 1485.216, 2023.183), stdev = 300.738
[info]   CI (99.9%): [327.181, 2643.250] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   14922.394 ±(99.9%) 11656.071 B/op [Average]
[info]   (min, avg, max) = (13385.374, 14922.394, 20330.477), stdev = 3027.045
[info]   CI (99.9%): [3266.324, 26578.465] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.174 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.058, 0.125), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.232] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.584 ±(99.9%) 1.747 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.584, 1.255), stdev = 0.454
[info]   CI (99.9%): [≈ 0, 2.331] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 3.000), stdev = 0.837
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 41.77% complete, ETA 01:17:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3604.751 ops/s
[info] # Warmup Iteration   2: 6604.752 ops/s
[info] # Warmup Iteration   3: 6616.736 ops/s
[info] # Warmup Iteration   4: 6706.947 ops/s
[info] # Warmup Iteration   5: 6736.251 ops/s
[info] Iteration   1: 6722.483 ops/s
[info]                  ·gc.alloc.rate:                   1226.901 MB/sec
[info]                  ·gc.alloc.rate.norm:              287232.069 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.557 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     313138.104 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.747 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 6734.305 ops/s
[info]                  ·gc.alloc.rate:                   1229.110 MB/sec
[info]                  ·gc.alloc.rate.norm:              287232.064 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.244 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     312735.924 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 29.188 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 6721.156 ops/s
[info]                  ·gc.alloc.rate:                   1226.748 MB/sec
[info]                  ·gc.alloc.rate.norm:              287232.064 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.589 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     313652.586 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.874 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 6731.662 ops/s
[info]                  ·gc.alloc.rate:               1228.519 MB/sec
[info]                  ·gc.alloc.rate.norm:          287232.064 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1341.195 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 313576.084 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 6706.738 ops/s
[info]                  ·gc.alloc.rate:                   1223.972 MB/sec
[info]                  ·gc.alloc.rate.norm:              287232.283 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.208 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     315213.701 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.885 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson":
[info]   6723.269 ±(99.9%) 41.766 ops/s [Average]
[info]   (min, avg, max) = (6706.738, 6723.269, 6734.305), stdev = 10.847
[info]   CI (99.9%): [6681.503, 6765.035] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1227.050 ±(99.9%) 7.698 MB/sec [Average]
[info]   (min, avg, max) = (1223.972, 1227.050, 1229.110), stdev = 1.999
[info]   CI (99.9%): [1219.352, 1234.748] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   287232.109 ±(99.9%) 0.374 B/op [Average]
[info]   (min, avg, max) = (287232.064, 287232.109, 287232.283), stdev = 0.097
[info]   CI (99.9%): [287231.735, 287232.483] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1339.959 ±(99.9%) 8.808 MB/sec [Average]
[info]   (min, avg, max) = (1337.557, 1339.959, 1343.208), stdev = 2.287
[info]   CI (99.9%): [1331.151, 1348.767] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   313663.280 ±(99.9%) 3626.216 B/op [Average]
[info]   (min, avg, max) = (312735.924, 313663.280, 315213.701), stdev = 941.717
[info]   CI (99.9%): [310037.064, 317289.495] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.188 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.125), stdev = 0.049
[info]   CI (99.9%): [≈ 0, 0.230] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   9.739 ±(99.9%) 43.918 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 9.739, 29.188), stdev = 11.405
[info]   CI (99.9%): [≈ 0, 53.657] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 41.97% complete, ETA 01:17:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5537.567 ops/s
[info] # Warmup Iteration   2: 7721.371 ops/s
[info] # Warmup Iteration   3: 7709.412 ops/s
[info] # Warmup Iteration   4: 7792.026 ops/s
[info] # Warmup Iteration   5: 7752.813 ops/s
[info] Iteration   1: 7669.598 ops/s
[info]                  ·gc.alloc.rate:                   1102.415 MB/sec
[info]                  ·gc.alloc.rate.norm:              226208.056 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.487 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     276289.935 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.813 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 7614.666 ops/s
[info]                  ·gc.alloc.rate:               1094.455 MB/sec
[info]                  ·gc.alloc.rate.norm:          226208.057 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.130 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 139126.319 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 7782.969 ops/s
[info]                  ·gc.alloc.rate:                   1118.712 MB/sec
[info]                  ·gc.alloc.rate.norm:              226208.060 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.891 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     272346.907 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16.836 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 7785.276 ops/s
[info]                  ·gc.alloc.rate:               1119.228 MB/sec
[info]                  ·gc.alloc.rate.norm:          226226.348 B/op
[info]                  ·gc.churn.PS_Eden_Space:      674.195 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 136273.136 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 7627.701 ops/s
[info]                  ·gc.alloc.rate:                   1096.920 MB/sec
[info]                  ·gc.alloc.rate.norm:              226232.057 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.184 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     278259.551 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.590 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readUPickle":
[info]   7696.042 ±(99.9%) 319.342 ops/s [Average]
[info]   (min, avg, max) = (7614.666, 7696.042, 7785.276), stdev = 82.932
[info]   CI (99.9%): [7376.700, 8015.384] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readUPickle:·gc.alloc.rate":
[info]   1106.346 ±(99.9%) 45.746 MB/sec [Average]
[info]   (min, avg, max) = (1094.455, 1106.346, 1119.228), stdev = 11.880
[info]   CI (99.9%): [1060.600, 1152.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readUPickle:·gc.alloc.rate.norm":
[info]   226216.515 ±(99.9%) 45.268 B/op [Average]
[info]   (min, avg, max) = (226208.056, 226216.515, 226232.057), stdev = 11.756
[info]   CI (99.9%): [226171.248, 226261.783] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readUPickle:·gc.churn.PS_Eden_Space":
[info]   1077.977 ±(99.9%) 1421.230 MB/sec [Average]
[info]   (min, avg, max) = (673.130, 1077.977, 1349.184), stdev = 369.089
[info]   CI (99.9%): [≈ 0, 2499.207] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   220459.170 ±(99.9%) 291052.498 B/op [Average]
[info]   (min, avg, max) = (136273.136, 220459.170, 278259.551), stdev = 75585.409
[info]   CI (99.9%): [≈ 0, 511511.668] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readUPickle:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.083), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.181] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   7.648 ±(99.9%) 29.134 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 7.648, 16.836), stdev = 7.566
[info]   CI (99.9%): [≈ 0, 36.782] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readUPickle:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readUPickle:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 42.17% complete, ETA 01:17:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 11902.720 ops/s
[info] # Warmup Iteration   2: 17026.136 ops/s
[info] # Warmup Iteration   3: 16568.562 ops/s
[info] # Warmup Iteration   4: 17016.933 ops/s
[info] # Warmup Iteration   5: 17061.809 ops/s
[info] Iteration   1: 17066.810 ops/s
[info]                  ·gc.alloc.rate:                   1007.091 MB/sec
[info]                  ·gc.alloc.rate.norm:              92872.025 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.226 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     123593.141 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.839 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 16735.193 ops/s
[info]                  ·gc.alloc.rate:                   987.383 MB/sec
[info]                  ·gc.alloc.rate.norm:              92857.395 B/op
[info]                  ·gc.churn.PS_Eden_Space:          670.390 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     63046.102 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.957 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 17103.448 ops/s
[info]                  ·gc.alloc.rate:                   1009.016 MB/sec
[info]                  ·gc.alloc.rate.norm:              92808.025 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.808 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     123417.769 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.577 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 16921.882 ops/s
[info]                  ·gc.alloc.rate:               997.841 MB/sec
[info]                  ·gc.alloc.rate.norm:          92808.026 B/op
[info]                  ·gc.churn.PS_Eden_Space:      670.774 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 62387.949 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 17002.261 ops/s
[info]                  ·gc.alloc.rate:                   1002.588 MB/sec
[info]                  ·gc.alloc.rate.norm:              92808.025 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.588 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     124373.878 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.781 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce":
[info]   16965.919 ±(99.9%) 563.260 ops/s [Average]
[info]   (min, avg, max) = (16735.193, 16965.919, 17103.448), stdev = 146.277
[info]   CI (99.9%): [16402.659, 17529.178] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.alloc.rate":
[info]   1000.784 ±(99.9%) 33.294 MB/sec [Average]
[info]   (min, avg, max) = (987.383, 1000.784, 1009.016), stdev = 8.646
[info]   CI (99.9%): [967.489, 1034.078] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   92830.699 ±(99.9%) 121.200 B/op [Average]
[info]   (min, avg, max) = (92808.025, 92830.699, 92872.025), stdev = 31.475
[info]   CI (99.9%): [92709.499, 92951.900] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1073.357 ±(99.9%) 1415.819 MB/sec [Average]
[info]   (min, avg, max) = (670.390, 1073.357, 1343.588), stdev = 367.684
[info]   CI (99.9%): [≈ 0, 2489.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   99363.768 ±(99.9%) 128829.034 B/op [Average]
[info]   (min, avg, max) = (62387.949, 99363.768, 124373.878), stdev = 33456.491
[info]   CI (99.9%): [≈ 0, 228192.801] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.154 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.104), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   4.231 ±(99.9%) 14.176 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4.231, 9.577), stdev = 3.681
[info]   CI (99.9%): [≈ 0, 18.407] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 42.37% complete, ETA 01:16:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 12686.058 ops/s
[info] # Warmup Iteration   2: 18873.435 ops/s
[info] # Warmup Iteration   3: 18892.764 ops/s
[info] # Warmup Iteration   4: 18558.653 ops/s
[info] # Warmup Iteration   5: 18637.631 ops/s
[info] Iteration   1: 18682.416 ops/s
[info]                  ·gc.alloc.rate:                   876.162 MB/sec
[info]                  ·gc.alloc.rate.norm:              73808.032 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1335.940 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     112539.825 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.014 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 18511.558 ops/s
[info]                  ·gc.alloc.rate:               868.505 MB/sec
[info]                  ·gc.alloc.rate.norm:          73808.025 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.414 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 56803.766 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 18651.082 ops/s
[info]                  ·gc.alloc.rate:                   874.673 MB/sec
[info]                  ·gc.alloc.rate.norm:              73808.023 B/op
[info]                  ·gc.churn.PS_Eden_Space:          668.145 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     56380.494 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.757 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 18702.690 ops/s
[info]                  ·gc.alloc.rate:                   877.063 MB/sec
[info]                  ·gc.alloc.rate.norm:              73808.023 B/op
[info]                  ·gc.churn.PS_Eden_Space:          668.109 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     56223.764 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.503 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 18679.244 ops/s
[info]                  ·gc.alloc.rate:                   876.019 MB/sec
[info]                  ·gc.alloc.rate.norm:              73808.023 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.459 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     112686.144 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.261 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala":
[info]   18645.398 ±(99.9%) 296.673 ops/s [Average]
[info]   (min, avg, max) = (18511.558, 18645.398, 18702.690), stdev = 77.045
[info]   CI (99.9%): [18348.724, 18942.071] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   874.484 ±(99.9%) 13.284 MB/sec [Average]
[info]   (min, avg, max) = (868.505, 874.484, 877.063), stdev = 3.450
[info]   CI (99.9%): [861.200, 887.769] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   73808.025 ±(99.9%) 0.014 B/op [Average]
[info]   (min, avg, max) = (73808.023, 73808.025, 73808.032), stdev = 0.004
[info]   CI (99.9%): [73808.011, 73808.039] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   935.613 ±(99.9%) 1409.875 MB/sec [Average]
[info]   (min, avg, max) = (668.109, 935.613, 1337.459), stdev = 366.140
[info]   CI (99.9%): [≈ 0, 2345.488] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   78926.799 ±(99.9%) 118414.676 B/op [Average]
[info]   (min, avg, max) = (56223.764, 78926.799, 112686.144), stdev = 30751.915
[info]   CI (99.9%): [≈ 0, 197341.475] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.127 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.083), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   3.507 ±(99.9%) 10.675 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.507, 7.014), stdev = 2.772
[info]   CI (99.9%): [≈ 0, 14.182] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 42.57% complete, ETA 01:16:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 429377.201 ops/s
[info] # Warmup Iteration   2: 487656.197 ops/s
[info] # Warmup Iteration   3: 491829.468 ops/s
[info] # Warmup Iteration   4: 490790.987 ops/s
[info] # Warmup Iteration   5: 491340.807 ops/s
[info] Iteration   1: 487613.776 ops/s
[info]                  ·gc.alloc.rate:                   1105.598 MB/sec
[info]                  ·gc.alloc.rate.norm:              3568.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.180 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4347.637 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.202 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 492034.958 ops/s
[info]                  ·gc.alloc.rate:               1115.525 MB/sec
[info]                  ·gc.alloc.rate.norm:          3568.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.509 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2154.214 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 491447.485 ops/s
[info]                  ·gc.alloc.rate:                   1114.124 MB/sec
[info]                  ·gc.alloc.rate.norm:              3568.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.971 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4313.697 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.267 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 476041.851 ops/s
[info]                  ·gc.alloc.rate:                   1079.170 MB/sec
[info]                  ·gc.alloc.rate.norm:              3568.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.268 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4457.705 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.069 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 492364.932 ops/s
[info]                  ·gc.alloc.rate:               1116.325 MB/sec
[info]                  ·gc.alloc.rate.norm:          3568.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      674.855 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2156.972 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala":
[info]   487900.600 ±(99.9%) 26560.775 ops/s [Average]
[info]   (min, avg, max) = (476041.851, 487900.600, 492364.932), stdev = 6897.749
[info]   CI (99.9%): [461339.825, 514461.376] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1106.149 ±(99.9%) 60.371 MB/sec [Average]
[info]   (min, avg, max) = (1079.170, 1106.149, 1116.325), stdev = 15.678
[info]   CI (99.9%): [1045.777, 1166.520] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   3568.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3568.001, 3568.001, 3568.001), stdev = 0.001
[info]   CI (99.9%): [3568.001, 3568.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1078.157 ±(99.9%) 1420.031 MB/sec [Average]
[info]   (min, avg, max) = (673.509, 1078.157, 1348.268), stdev = 368.777
[info]   CI (99.9%): [≈ 0, 2498.187] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   3486.045 ±(99.9%) 4681.217 B/op [Average]
[info]   (min, avg, max) = (2154.214, 3486.045, 4457.705), stdev = 1215.697
[info]   CI (99.9%): [≈ 0, 8167.262] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.146 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.083), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.179] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.107 ±(99.9%) 0.467 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.107, 0.267), stdev = 0.121
[info]   CI (99.9%): [≈ 0, 0.574] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 42.77% complete, ETA 01:16:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 458916.213 ops/s
[info] # Warmup Iteration   2: 481608.479 ops/s
[info] # Warmup Iteration   3: 494311.141 ops/s
[info] # Warmup Iteration   4: 495719.476 ops/s
[info] # Warmup Iteration   5: 496431.719 ops/s
[info] Iteration   1: 495225.344 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 494983.737 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 495160.533 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 489795.894 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 474198.512 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc":
[info]   489872.804 ±(99.9%) 34891.420 ops/s [Average]
[info]   (min, avg, max) = (474198.512, 489872.804, 495225.344), stdev = 9061.191
[info]   CI (99.9%): [454981.384, 524764.224] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
[info]   CI (99.9%): [0.001, 0.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 42.97% complete, ETA 01:16:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 13670.413 ops/s
[info] # Warmup Iteration   2: 18011.468 ops/s
[info] # Warmup Iteration   3: 17867.585 ops/s
[info] # Warmup Iteration   4: 18070.186 ops/s
[info] # Warmup Iteration   5: 18278.596 ops/s
[info] Iteration   1: 18031.436 ops/s
[info]                  ·gc.alloc.rate:               913.029 MB/sec
[info]                  ·gc.alloc.rate.norm:          79688.033 B/op
[info]                  ·gc.churn.PS_Eden_Space:      669.486 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 58431.876 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 18317.983 ops/s
[info]                  ·gc.alloc.rate:               927.519 MB/sec
[info]                  ·gc.alloc.rate.norm:          79676.932 B/op
[info]                  ·gc.churn.PS_Eden_Space:      669.551 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 57516.586 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 18249.512 ops/s
[info]                  ·gc.alloc.rate:                   923.866 MB/sec
[info]                  ·gc.alloc.rate.norm:              79672.025 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.951 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     115468.020 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.386 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 18098.929 ops/s
[info]                  ·gc.alloc.rate:                   916.200 MB/sec
[info]                  ·gc.alloc.rate.norm:              79672.024 B/op
[info]                  ·gc.churn.PS_Eden_Space:          670.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     58273.531 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.810 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 18432.051 ops/s
[info]                  ·gc.alloc.rate:               933.043 MB/sec
[info]                  ·gc.alloc.rate.norm:          79672.023 B/op
[info]                  ·gc.churn.PS_Eden_Space:      670.117 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 57220.909 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson":
[info]   18225.982 ±(99.9%) 625.279 ops/s [Average]
[info]   (min, avg, max) = (18031.436, 18225.982, 18432.051), stdev = 162.383
[info]   CI (99.9%): [17600.703, 18851.261] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.alloc.rate":
[info]   922.731 ±(99.9%) 31.479 MB/sec [Average]
[info]   (min, avg, max) = (913.029, 922.731, 933.043), stdev = 8.175
[info]   CI (99.9%): [891.252, 954.211] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   79676.208 ±(99.9%) 26.738 B/op [Average]
[info]   (min, avg, max) = (79672.023, 79676.208, 79688.033), stdev = 6.944
[info]   CI (99.9%): [79649.470, 79702.945] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   803.646 ±(99.9%) 1152.285 MB/sec [Average]
[info]   (min, avg, max) = (669.486, 803.646, 1338.951), stdev = 299.245
[info]   CI (99.9%): [≈ 0, 1955.931] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   69382.184 ±(99.9%) 99222.373 B/op [Average]
[info]   (min, avg, max) = (57220.909, 69382.184, 115468.020), stdev = 25767.735
[info]   CI (99.9%): [≈ 0, 168604.557] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.439 ±(99.9%) 9.015 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.439, 5.386), stdev = 2.341
[info]   CI (99.9%): [≈ 0, 10.454] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 43.17% complete, ETA 01:15:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 9425.720 ops/s
[info] # Warmup Iteration   2: 10459.751 ops/s
[info] # Warmup Iteration   3: 10261.406 ops/s
[info] # Warmup Iteration   4: 10498.264 ops/s
[info] # Warmup Iteration   5: 10526.351 ops/s
[info] Iteration   1: 10525.403 ops/s
[info]                  ·gc.alloc.rate:                   877.246 MB/sec
[info]                  ·gc.alloc.rate.norm:              131176.041 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.130 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     201438.541 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15.562 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 10527.392 ops/s
[info]                  ·gc.alloc.rate:               877.648 MB/sec
[info]                  ·gc.alloc.rate.norm:          131176.041 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.579 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 100675.246 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 10536.348 ops/s
[info]                  ·gc.alloc.rate:               878.179 MB/sec
[info]                  ·gc.alloc.rate.norm:          131176.044 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.475 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 100598.817 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 10481.744 ops/s
[info]                  ·gc.alloc.rate:                   873.898 MB/sec
[info]                  ·gc.alloc.rate.norm:              131176.041 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.288 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     202233.944 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.502 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 10490.731 ops/s
[info]                  ·gc.alloc.rate:               874.534 MB/sec
[info]                  ·gc.alloc.rate.norm:          131176.056 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.556 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 101030.243 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeUPickle":
[info]   10512.324 ±(99.9%) 93.860 ops/s [Average]
[info]   (min, avg, max) = (10481.744, 10512.324, 10536.348), stdev = 24.375
[info]   CI (99.9%): [10418.463, 10606.184] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeUPickle:·gc.alloc.rate":
[info]   876.301 ±(99.9%) 7.488 MB/sec [Average]
[info]   (min, avg, max) = (873.898, 876.301, 878.179), stdev = 1.945
[info]   CI (99.9%): [868.813, 883.789] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeUPickle:·gc.alloc.rate.norm":
[info]   131176.045 ±(99.9%) 0.026 B/op [Average]
[info]   (min, avg, max) = (131176.041, 131176.045, 131176.056), stdev = 0.007
[info]   CI (99.9%): [131176.019, 131176.070] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeUPickle:·gc.churn.PS_Eden_Space":
[info]   943.005 ±(99.9%) 1420.832 MB/sec [Average]
[info]   (min, avg, max) = (673.475, 943.005, 1347.288), stdev = 368.986
[info]   CI (99.9%): [≈ 0, 2363.837] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   141195.358 ±(99.9%) 213164.926 B/op [Average]
[info]   (min, avg, max) = (100598.817, 141195.358, 202233.944), stdev = 55358.254
[info]   CI (99.9%): [≈ 0, 354360.284] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.200 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.104), stdev = 0.052
[info]   CI (99.9%): [≈ 0, 0.237] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   5.613 ±(99.9%) 29.887 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 5.613, 15.562), stdev = 7.762
[info]   CI (99.9%): [≈ 0, 35.500] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeUPickle:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeUPickle:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 43.37% complete, ETA 01:15:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 8599.597 ops/s
[info] # Warmup Iteration   2: 11785.980 ops/s
[info] # Warmup Iteration   3: 11665.496 ops/s
[info] # Warmup Iteration   4: 11692.960 ops/s
[info] # Warmup Iteration   5: 11729.324 ops/s
[info] Iteration   1: 11907.747 ops/s
[info]                  ·gc.alloc.rate:               1228.232 MB/sec
[info]                  ·gc.alloc.rate.norm:          162288.036 B/op
[info]                  ·gc.churn.PS_Eden_Space:      671.982 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 88790.000 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 11920.957 ops/s
[info]                  ·gc.alloc.rate:                   1229.214 MB/sec
[info]                  ·gc.alloc.rate.norm:              162288.039 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.906 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     177430.351 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.497 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 11912.912 ops/s
[info]                  ·gc.alloc.rate:               1228.639 MB/sec
[info]                  ·gc.alloc.rate.norm:          162288.036 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1345.065 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 177666.578 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 11762.071 ops/s
[info]                  ·gc.alloc.rate:                   1213.330 MB/sec
[info]                  ·gc.alloc.rate.norm:              162288.050 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.802 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     180140.437 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.785 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 11861.757 ops/s
[info]                  ·gc.alloc.rate:               1223.418 MB/sec
[info]                  ·gc.alloc.rate.norm:          162288.036 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1347.992 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 178812.872 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce":
[info]   11873.089 ±(99.9%) 254.928 ops/s [Average]
[info]   (min, avg, max) = (11762.071, 11873.089, 11920.957), stdev = 66.204
[info]   CI (99.9%): [11618.160, 12128.017] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:·gc.alloc.rate":
[info]   1224.567 ±(99.9%) 25.773 MB/sec [Average]
[info]   (min, avg, max) = (1213.330, 1224.567, 1229.214), stdev = 6.693
[info]   CI (99.9%): [1198.794, 1250.339] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   162288.040 ±(99.9%) 0.023 B/op [Average]
[info]   (min, avg, max) = (162288.036, 162288.040, 162288.050), stdev = 0.006
[info]   CI (99.9%): [162288.016, 162288.063] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1211.149 ±(99.9%) 1160.613 MB/sec [Average]
[info]   (min, avg, max) = (671.982, 1211.149, 1347.992), stdev = 301.408
[info]   CI (99.9%): [50.536, 2371.763] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   160568.047 ±(99.9%) 154563.154 B/op [Average]
[info]   (min, avg, max) = (88790.000, 160568.047, 180140.437), stdev = 40139.560
[info]   CI (99.9%): [6004.893, 315131.202] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   1.656 ±(99.9%) 9.482 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.656, 5.497), stdev = 2.462
[info]   CI (99.9%): [≈ 0, 11.138] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 43.57% complete, ETA 01:15:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7327.045 ops/s
[info] # Warmup Iteration   2: 12110.625 ops/s
[info] # Warmup Iteration   3: 12126.878 ops/s
[info] # Warmup Iteration   4: 12116.600 ops/s
[info] # Warmup Iteration   5: 12160.901 ops/s
[info] Iteration   1: 12099.794 ops/s
[info]                  ·gc.alloc.rate:                   1122.971 MB/sec
[info]                  ·gc.alloc.rate.norm:              146067.521 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.253 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     173809.573 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.415 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 12199.120 ops/s
[info]                  ·gc.alloc.rate:               1132.304 MB/sec
[info]                  ·gc.alloc.rate.norm:          146080.035 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.101 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 86192.569 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   3: 12192.004 ops/s
[info]                  ·gc.alloc.rate:                   1132.133 MB/sec
[info]                  ·gc.alloc.rate.norm:              146080.038 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.209 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     172670.216 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.062 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 12176.640 ops/s
[info]                  ·gc.alloc.rate:                   1130.588 MB/sec
[info]                  ·gc.alloc.rate.norm:              146080.049 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.028 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     173141.172 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.762 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 12179.626 ops/s
[info]                  ·gc.alloc.rate:               1130.572 MB/sec
[info]                  ·gc.alloc.rate.norm:          146065.026 B/op
[info]                  ·gc.churn.PS_Eden_Space:      670.519 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 86628.231 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala":
[info]   12169.437 ±(99.9%) 153.979 ops/s [Average]
[info]   (min, avg, max) = (12099.794, 12169.437, 12199.120), stdev = 39.988
[info]   CI (99.9%): [12015.458, 12323.416] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1129.714 ±(99.9%) 14.855 MB/sec [Average]
[info]   (min, avg, max) = (1122.971, 1129.714, 1132.304), stdev = 3.858
[info]   CI (99.9%): [1114.859, 1144.568] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   146074.534 ±(99.9%) 29.233 B/op [Average]
[info]   (min, avg, max) = (146065.026, 146074.534, 146080.049), stdev = 7.592
[info]   CI (99.9%): [146045.301, 146103.767] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1070.622 ±(99.9%) 1410.681 MB/sec [Average]
[info]   (min, avg, max) = (668.101, 1070.622, 1340.028), stdev = 366.349
[info]   CI (99.9%): [≈ 0, 2481.303] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   138488.352 ±(99.9%) 183068.937 B/op [Average]
[info]   (min, avg, max) = (86192.569, 138488.352, 173809.573), stdev = 47542.422
[info]   CI (99.9%): [≈ 0, 321557.290] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.083), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.181] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   4.848 ±(99.9%) 18.530 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4.848, 10.762), stdev = 4.812
[info]   CI (99.9%): [≈ 0, 23.378] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 2.000), stdev = 0.894
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 43.78% complete, ETA 01:15:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 259020.170 ops/s
[info] # Warmup Iteration   2: 275231.080 ops/s
[info] # Warmup Iteration   3: 278409.288 ops/s
[info] # Warmup Iteration   4: 278292.392 ops/s
[info] # Warmup Iteration   5: 278679.355 ops/s
[info] Iteration   1: 277563.896 ops/s
[info]                  ·gc.alloc.rate:                   1605.822 MB/sec
[info]                  ·gc.alloc.rate.norm:              9104.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.463 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7639.268 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.354 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 278223.830 ops/s
[info]                  ·gc.alloc.rate:                   1609.387 MB/sec
[info]                  ·gc.alloc.rate.norm:              9104.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2022.695 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11442.005 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.118 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 277402.037 ops/s
[info]                  ·gc.alloc.rate:                   1604.626 MB/sec
[info]                  ·gc.alloc.rate.norm:              9104.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.272 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7660.902 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.354 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 272988.563 ops/s
[info]                  ·gc.alloc.rate:                   1579.057 MB/sec
[info]                  ·gc.alloc.rate.norm:              9104.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1351.561 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7792.378 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.240 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 278592.556 ops/s
[info]                  ·gc.alloc.rate:                   1611.457 MB/sec
[info]                  ·gc.alloc.rate.norm:              9104.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2030.065 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11468.947 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.353 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala":
[info]   276954.176 ±(99.9%) 8737.385 ops/s [Average]
[info]   (min, avg, max) = (272988.563, 276954.176, 278592.556), stdev = 2269.071
[info]   CI (99.9%): [268216.791, 285691.561] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1602.070 ±(99.9%) 50.642 MB/sec [Average]
[info]   (min, avg, max) = (1579.057, 1602.070, 1611.457), stdev = 13.152
[info]   CI (99.9%): [1551.428, 1652.712] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   9104.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (9104.002, 9104.002, 9104.002), stdev = 0.001
[info]   CI (99.9%): [9104.001, 9104.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1620.411 ±(99.9%) 1427.084 MB/sec [Average]
[info]   (min, avg, max) = (1347.463, 1620.411, 2030.065), stdev = 370.609
[info]   CI (99.9%): [193.327, 3047.495] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   9200.700 ±(99.9%) 7929.151 B/op [Average]
[info]   (min, avg, max) = (7639.268, 9200.700, 11468.947), stdev = 2059.175
[info]   CI (99.9%): [1271.549, 17129.851] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.062), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.284 ±(99.9%) 0.405 B/op [Average]
[info]   (min, avg, max) = (0.118, 0.284, 0.354), stdev = 0.105
[info]   CI (99.9%): [≈ 0, 0.688] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 3.000), stdev = 0.707
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 43.98% complete, ETA 01:14:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4838.099 ops/s
[info] # Warmup Iteration   2: 11016.974 ops/s
[info] # Warmup Iteration   3: 11324.919 ops/s
[info] # Warmup Iteration   4: 11362.039 ops/s
[info] # Warmup Iteration   5: 11339.123 ops/s
[info] Iteration   1: 11350.269 ops/s
[info]                  ·gc.alloc.rate:                   1420.682 MB/sec
[info]                  ·gc.alloc.rate.norm:              196944.038 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2001.620 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     277477.300 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.773 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 11300.163 ops/s
[info]                  ·gc.alloc.rate:                   1414.094 MB/sec
[info]                  ·gc.alloc.rate.norm:              196944.357 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1335.987 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     186066.109 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.899 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 11382.743 ops/s
[info]                  ·gc.alloc.rate:               1424.451 MB/sec
[info]                  ·gc.alloc.rate.norm:          196944.038 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1338.294 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 185031.988 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 11354.086 ops/s
[info]                  ·gc.alloc.rate:                   1420.759 MB/sec
[info]                  ·gc.alloc.rate.norm:              196944.038 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.566 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     185827.686 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.657 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 11299.433 ops/s
[info]                  ·gc.alloc.rate:                   1413.889 MB/sec
[info]                  ·gc.alloc.rate.norm:              196944.055 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.574 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     187010.435 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11.598 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson":
[info]   11337.339 ±(99.9%) 140.536 ops/s [Average]
[info]   (min, avg, max) = (11299.433, 11337.339, 11382.743), stdev = 36.497
[info]   CI (99.9%): [11196.802, 11477.875] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1418.775 ±(99.9%) 17.810 MB/sec [Average]
[info]   (min, avg, max) = (1413.889, 1418.775, 1424.451), stdev = 4.625
[info]   CI (99.9%): [1400.965, 1436.586] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   196944.105 ±(99.9%) 0.542 B/op [Average]
[info]   (min, avg, max) = (196944.038, 196944.105, 196944.357), stdev = 0.141
[info]   CI (99.9%): [196943.563, 196944.647] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1471.808 ±(99.9%) 1140.499 MB/sec [Average]
[info]   (min, avg, max) = (1335.987, 1471.808, 2001.620), stdev = 296.184
[info]   CI (99.9%): [331.309, 2612.307] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   204282.704 ±(99.9%) 157580.307 B/op [Average]
[info]   (min, avg, max) = (185031.988, 204282.704, 277477.300), stdev = 40923.105
[info]   CI (99.9%): [46702.397, 361863.010] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.127 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.083), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   5.785 ±(99.9%) 17.628 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 5.785, 11.598), stdev = 4.578
[info]   CI (99.9%): [≈ 0, 23.414] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 44.18% complete, ETA 01:14:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 9017.966 ops/s
[info] # Warmup Iteration   2: 11596.745 ops/s
[info] # Warmup Iteration   3: 11716.082 ops/s
[info] # Warmup Iteration   4: 11696.488 ops/s
[info] # Warmup Iteration   5: 11727.782 ops/s
[info] Iteration   1: 11720.191 ops/s
[info]                  ·gc.alloc.rate:                   1174.749 MB/sec
[info]                  ·gc.alloc.rate.norm:              157684.409 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.188 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     180696.427 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.795 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 11744.238 ops/s
[info]                  ·gc.alloc.rate:                   1176.791 MB/sec
[info]                  ·gc.alloc.rate.norm:              157696.037 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.892 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     180356.500 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13.947 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 11747.850 ops/s
[info]                  ·gc.alloc.rate:                   1177.195 MB/sec
[info]                  ·gc.alloc.rate.norm:              157696.037 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.677 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     180399.692 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.578 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 11813.099 ops/s
[info]                  ·gc.alloc.rate:               1183.673 MB/sec
[info]                  ·gc.alloc.rate.norm:          157696.050 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.486 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 89725.801 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 11802.461 ops/s
[info]                  ·gc.alloc.rate:                   1182.508 MB/sec
[info]                  ·gc.alloc.rate.norm:              157685.809 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.205 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     179781.264 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13.879 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readUPickle":
[info]   11765.568 ±(99.9%) 154.604 ops/s [Average]
[info]   (min, avg, max) = (11720.191, 11765.568, 11813.099), stdev = 40.150
[info]   CI (99.9%): [11610.964, 11920.172] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readUPickle:·gc.alloc.rate":
[info]   1178.983 ±(99.9%) 14.958 MB/sec [Average]
[info]   (min, avg, max) = (1174.749, 1178.983, 1183.673), stdev = 3.884
[info]   CI (99.9%): [1164.026, 1193.941] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readUPickle:·gc.alloc.rate.norm":
[info]   157691.668 ±(99.9%) 23.135 B/op [Average]
[info]   (min, avg, max) = (157684.409, 157691.668, 157696.050), stdev = 6.008
[info]   CI (99.9%): [157668.533, 157714.803] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readUPickle:·gc.churn.PS_Eden_Space":
[info]   1212.090 ±(99.9%) 1159.391 MB/sec [Average]
[info]   (min, avg, max) = (673.486, 1212.090, 1348.205), stdev = 301.090
[info]   CI (99.9%): [52.699, 2371.481] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   162191.937 ±(99.9%) 155994.039 B/op [Average]
[info]   (min, avg, max) = (89725.801, 162191.937, 180696.427), stdev = 40511.156
[info]   CI (99.9%): [6197.898, 318185.976] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readUPickle:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.185 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.104), stdev = 0.048
[info]   CI (99.9%): [≈ 0, 0.239] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   7.240 ±(99.9%) 24.656 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 7.240, 13.947), stdev = 6.403
[info]   CI (99.9%): [≈ 0, 31.896] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readUPickle:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readUPickle:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 44.38% complete, ETA 01:14:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 19637.783 ops/s
[info] # Warmup Iteration   2: 27051.658 ops/s
[info] # Warmup Iteration   3: 26995.823 ops/s
[info] # Warmup Iteration   4: 27238.249 ops/s
[info] # Warmup Iteration   5: 27072.477 ops/s
[info] Iteration   1: 26740.809 ops/s
[info]                  ·gc.alloc.rate:                   1173.320 MB/sec
[info]                  ·gc.alloc.rate.norm:              69056.017 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.295 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     78883.339 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.676 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 27236.146 ops/s
[info]                  ·gc.alloc.rate:                   1195.009 MB/sec
[info]                  ·gc.alloc.rate.norm:              69056.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.881 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     77485.536 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.203 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 27140.828 ops/s
[info]                  ·gc.alloc.rate:                   1191.345 MB/sec
[info]                  ·gc.alloc.rate.norm:              69056.017 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.781 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     77833.959 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.207 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 26687.112 ops/s
[info]                  ·gc.alloc.rate:               1170.968 MB/sec
[info]                  ·gc.alloc.rate.norm:          69056.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1343.928 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 79256.035 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 27193.059 ops/s
[info]                  ·gc.alloc.rate:                   1193.444 MB/sec
[info]                  ·gc.alloc.rate.norm:              69056.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.595 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     38918.250 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.410 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce":
[info]   26999.591 ±(99.9%) 1015.043 ops/s [Average]
[info]   (min, avg, max) = (26687.112, 26999.591, 27236.146), stdev = 263.603
[info]   CI (99.9%): [25984.548, 28014.633] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:·gc.alloc.rate":
[info]   1184.817 ±(99.9%) 44.942 MB/sec [Average]
[info]   (min, avg, max) = (1170.968, 1184.817, 1195.009), stdev = 11.671
[info]   CI (99.9%): [1139.875, 1229.760] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   69056.016 ±(99.9%) 0.003 B/op [Average]
[info]   (min, avg, max) = (69056.016, 69056.016, 69056.017), stdev = 0.001
[info]   CI (99.9%): [69056.014, 69056.019] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1208.096 ±(99.9%) 1152.719 MB/sec [Average]
[info]   (min, avg, max) = (672.595, 1208.096, 1343.928), stdev = 299.358
[info]   CI (99.9%): [55.377, 2360.815] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   70475.424 ±(99.9%) 67986.963 B/op [Average]
[info]   (min, avg, max) = (38918.250, 70475.424, 79256.035), stdev = 17655.998
[info]   CI (99.9%): [2488.461, 138462.387] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   1.699 ±(99.9%) 5.372 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.699, 3.676), stdev = 1.395
[info]   CI (99.9%): [≈ 0, 7.071] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 44.58% complete, ETA 01:13:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 54115.558 ops/s
[info] # Warmup Iteration   2: 79744.614 ops/s
[info] # Warmup Iteration   3: 81103.283 ops/s
[info] # Warmup Iteration   4: 81064.385 ops/s
[info] # Warmup Iteration   5: 79553.513 ops/s
[info] Iteration   1: 81031.530 ops/s
[info]                  ·gc.alloc.rate:               1814.347 MB/sec
[info]                  ·gc.alloc.rate.norm:          35240.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1339.568 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 26018.389 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 79378.082 ops/s
[info]                  ·gc.alloc.rate:                   1778.073 MB/sec
[info]                  ·gc.alloc.rate.norm:              35240.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2014.126 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     39918.395 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.064 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 80783.188 ops/s
[info]                  ·gc.alloc.rate:                   1808.814 MB/sec
[info]                  ·gc.alloc.rate.norm:              35240.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2017.466 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     39305.053 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.217 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 80674.831 ops/s
[info]                  ·gc.alloc.rate:                   1806.370 MB/sec
[info]                  ·gc.alloc.rate.norm:              35240.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.590 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     26289.774 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.812 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 81230.632 ops/s
[info]                  ·gc.alloc.rate:                   1819.085 MB/sec
[info]                  ·gc.alloc.rate.norm:              35240.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2025.579 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     39240.293 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.807 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala":
[info]   80619.653 ±(99.9%) 2799.489 ops/s [Average]
[info]   (min, avg, max) = (79378.082, 80619.653, 81230.632), stdev = 727.018
[info]   CI (99.9%): [77820.164, 83419.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1805.338 ±(99.9%) 61.691 MB/sec [Average]
[info]   (min, avg, max) = (1778.073, 1805.338, 1819.085), stdev = 16.021
[info]   CI (99.9%): [1743.647, 1867.028] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   35240.006 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (35240.005, 35240.006, 35240.006), stdev = 0.001
[info]   CI (99.9%): [35240.005, 35240.006] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1748.866 ±(99.9%) 1424.773 MB/sec [Average]
[info]   (min, avg, max) = (1339.568, 1748.866, 2025.579), stdev = 370.009
[info]   CI (99.9%): [324.093, 3173.639] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   34154.381 ±(99.9%) 28143.057 B/op [Average]
[info]   (min, avg, max) = (26018.389, 34154.381, 39918.395), stdev = 7308.663
[info]   CI (99.9%): [6011.323, 62297.438] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.146 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.104), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.196] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.980 ±(99.9%) 2.887 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.980, 2.064), stdev = 0.750
[info]   CI (99.9%): [≈ 0, 3.867] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 44.78% complete, ETA 01:13:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 669768.407 ops/s
[info] # Warmup Iteration   2: 696078.425 ops/s
[info] # Warmup Iteration   3: 678934.456 ops/s
[info] # Warmup Iteration   4: 699922.462 ops/s
[info] # Warmup Iteration   5: 684206.661 ops/s
[info] Iteration   1: 701935.981 ops/s
[info]                  ·gc.alloc.rate:                   963.371 MB/sec
[info]                  ·gc.alloc.rate.norm:              2160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.798 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1508.500 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.047 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 700120.568 ops/s
[info]                  ·gc.alloc.rate:                   960.846 MB/sec
[info]                  ·gc.alloc.rate.norm:              2160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.600 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3024.936 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.187 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 702465.704 ops/s
[info]                  ·gc.alloc.rate:               964.105 MB/sec
[info]                  ·gc.alloc.rate.norm:          2160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.808 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1507.372 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 699703.243 ops/s
[info]                  ·gc.alloc.rate:                   960.265 MB/sec
[info]                  ·gc.alloc.rate.norm:              2160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.907 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3029.705 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.140 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 702602.137 ops/s
[info]                  ·gc.alloc.rate:               964.263 MB/sec
[info]                  ·gc.alloc.rate.norm:          2160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.770 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1509.280 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala":
[info]   701365.527 ±(99.9%) 5229.694 ops/s [Average]
[info]   (min, avg, max) = (699703.243, 701365.527, 702602.137), stdev = 1358.135
[info]   CI (99.9%): [696135.832, 706595.221] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   962.570 ±(99.9%) 7.242 MB/sec [Average]
[info]   (min, avg, max) = (960.265, 962.570, 964.263), stdev = 1.881
[info]   CI (99.9%): [955.328, 969.813] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   2160.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2160.001, 2160.001, 2160.001), stdev = 0.001
[info]   CI (99.9%): [2160.001, 2160.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   942.377 ±(99.9%) 1419.686 MB/sec [Average]
[info]   (min, avg, max) = (672.798, 942.377, 1346.907), stdev = 368.688
[info]   CI (99.9%): [≈ 0, 2362.063] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   2115.959 ±(99.9%) 3203.572 B/op [Average]
[info]   (min, avg, max) = (1507.372, 2115.959, 3029.705), stdev = 831.958
[info]   CI (99.9%): [≈ 0, 5319.531] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.146 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.083), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.179] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.075 ±(99.9%) 0.327 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.075, 0.187), stdev = 0.085
[info]   CI (99.9%): [≈ 0, 0.402] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 44.98% complete, ETA 01:13:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 721814.233 ops/s
[info] # Warmup Iteration   2: 750075.241 ops/s
[info] # Warmup Iteration   3: 766244.664 ops/s
[info] # Warmup Iteration   4: 765754.503 ops/s
[info] # Warmup Iteration   5: 767036.998 ops/s
[info] Iteration   1: 766053.818 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 767760.629 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 764701.839 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 768019.737 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 750222.700 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc":
[info]   763351.745 ±(99.9%) 28733.401 ops/s [Average]
[info]   (min, avg, max) = (750222.700, 763351.745, 768019.737), stdev = 7461.973
[info]   CI (99.9%): [734618.344, 792085.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
[info]   CI (99.9%): [0.001, 0.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 45.18% complete, ETA 01:13:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 41308.687 ops/s
[info] # Warmup Iteration   2: 72538.452 ops/s
[info] # Warmup Iteration   3: 73141.564 ops/s
[info] # Warmup Iteration   4: 73467.915 ops/s
[info] # Warmup Iteration   5: 72548.093 ops/s
[info] Iteration   1: 73393.655 ops/s
[info]                  ·gc.alloc.rate:                   1914.879 MB/sec
[info]                  ·gc.alloc.rate.norm:              41056.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2007.698 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     43046.082 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.893 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 73343.419 ops/s
[info]                  ·gc.alloc.rate:                   1913.256 MB/sec
[info]                  ·gc.alloc.rate.norm:              41056.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2012.026 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     43175.482 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.787 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 73342.917 ops/s
[info]                  ·gc.alloc.rate:                   1913.771 MB/sec
[info]                  ·gc.alloc.rate.norm:              41056.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2017.953 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     43291.015 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.340 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 72875.785 ops/s
[info]                  ·gc.alloc.rate:                   1901.136 MB/sec
[info]                  ·gc.alloc.rate.norm:              41056.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.611 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29102.336 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.899 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 72494.231 ops/s
[info]                  ·gc.alloc.rate:                   1891.092 MB/sec
[info]                  ·gc.alloc.rate.norm:              41056.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2024.660 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     43955.795 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.904 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson":
[info]   73090.001 ±(99.9%) 1517.494 ops/s [Average]
[info]   (min, avg, max) = (72494.231, 73090.001, 73393.655), stdev = 394.088
[info]   CI (99.9%): [71572.507, 74607.495] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1906.827 ±(99.9%) 40.126 MB/sec [Average]
[info]   (min, avg, max) = (1891.092, 1906.827, 1914.879), stdev = 10.421
[info]   CI (99.9%): [1866.701, 1946.953] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   41056.006 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (41056.006, 41056.006, 41056.006), stdev = 0.001
[info]   CI (99.9%): [41056.005, 41056.007] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1881.990 ±(99.9%) 1150.553 MB/sec [Average]
[info]   (min, avg, max) = (1347.611, 1881.990, 2024.660), stdev = 298.795
[info]   CI (99.9%): [731.436, 3032.543] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   40514.142 ±(99.9%) 24601.876 B/op [Average]
[info]   (min, avg, max) = (29102.336, 40514.142, 43955.795), stdev = 6389.029
[info]   CI (99.9%): [15912.266, 65116.018] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.054, 0.083), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.126] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.165 ±(99.9%) 1.528 B/op [Average]
[info]   (min, avg, max) = (0.893, 1.165, 1.787), stdev = 0.397
[info]   CI (99.9%): [≈ 0, 2.693] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.000, 4.000), stdev = 0.707
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 45.38% complete, ETA 01:12:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 17956.172 ops/s
[info] # Warmup Iteration   2: 20201.138 ops/s
[info] # Warmup Iteration   3: 20084.542 ops/s
[info] # Warmup Iteration   4: 20122.517 ops/s
[info] # Warmup Iteration   5: 20127.133 ops/s
[info] Iteration   1: 20124.177 ops/s
[info]                  ·gc.alloc.rate:                   666.322 MB/sec
[info]                  ·gc.alloc.rate.norm:              52110.810 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.452 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     52668.439 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.699 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 132.855 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 20250.315 ops/s
[info]                  ·gc.alloc.rate:                   670.709 MB/sec
[info]                  ·gc.alloc.rate.norm:              52112.021 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.653 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     52340.789 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.236 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 19776.097 ops/s
[info]                  ·gc.alloc.rate:                   655.102 MB/sec
[info]                  ·gc.alloc.rate.norm:              52112.022 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.079 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53542.051 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.657 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 20236.910 ops/s
[info]                  ·gc.alloc.rate:               670.126 MB/sec
[info]                  ·gc.alloc.rate.norm:          52112.021 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.834 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 52322.601 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   5: 20199.375 ops/s
[info]                  ·gc.alloc.rate:                   668.768 MB/sec
[info]                  ·gc.alloc.rate.norm:              52112.021 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.733 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     52421.015 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.244 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeUPickle":
[info]   20117.375 ±(99.9%) 758.495 ops/s [Average]
[info]   (min, avg, max) = (19776.097, 20117.375, 20250.315), stdev = 196.979
[info]   CI (99.9%): [19358.879, 20875.870] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeUPickle:·gc.alloc.rate":
[info]   666.205 ±(99.9%) 24.770 MB/sec [Average]
[info]   (min, avg, max) = (655.102, 666.205, 670.709), stdev = 6.433
[info]   CI (99.9%): [641.436, 690.975] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeUPickle:·gc.alloc.rate.norm":
[info]   52111.779 ±(99.9%) 2.087 B/op [Average]
[info]   (min, avg, max) = (52110.810, 52111.779, 52112.022), stdev = 0.542
[info]   CI (99.9%): [52109.692, 52113.866] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeUPickle:·gc.churn.PS_Eden_Space":
[info]   673.150 ±(99.9%) 1.520 MB/sec [Average]
[info]   (min, avg, max) = (672.733, 673.150, 673.653), stdev = 0.395
[info]   CI (99.9%): [671.631, 674.670] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   52658.979 ±(99.9%) 1973.739 B/op [Average]
[info]   (min, avg, max) = (52322.601, 52658.979, 53542.051), stdev = 512.574
[info]   CI (99.9%): [50685.240, 54632.718] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space":
[info]   0.361 ±(99.9%) 2.881 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.361, 1.699), stdev = 0.748
[info]   CI (99.9%): [≈ 0, 3.242] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   28.198 ±(99.9%) 225.340 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 28.198, 132.855), stdev = 58.520
[info]   CI (99.9%): [≈ 0, 253.538] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeUPickle:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeUPickle:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 0.707
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 45.58% complete, ETA 01:12:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4284.134 ops/s
[info] # Warmup Iteration   2: 13941.550 ops/s
[info] # Warmup Iteration   3: 14617.035 ops/s
[info] # Warmup Iteration   4: 14687.239 ops/s
[info] # Warmup Iteration   5: 14826.265 ops/s
[info] Iteration   1: 14812.849 ops/s
[info]                  ·gc.alloc.rate:                   781.205 MB/sec
[info]                  ·gc.alloc.rate.norm:              83001.113 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.111 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     71410.177 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.665 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 176.935 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 14831.621 ops/s
[info]                  ·gc.alloc.rate:               782.361 MB/sec
[info]                  ·gc.alloc.rate.norm:          83000.029 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.253 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 71318.718 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 14816.790 ops/s
[info]                  ·gc.alloc.rate:                   781.390 MB/sec
[info]                  ·gc.alloc.rate.norm:              83000.042 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.143 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     71395.721 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.422 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 14786.038 ops/s
[info]                  ·gc.alloc.rate:                   779.785 MB/sec
[info]                  ·gc.alloc.rate.norm:              83000.029 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.246 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     143081.099 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.647 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 14852.708 ops/s
[info]                  ·gc.alloc.rate:               783.268 MB/sec
[info]                  ·gc.alloc.rate.norm:          83000.029 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.126 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 71222.698 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce":
[info]   14820.001 ±(99.9%) 94.709 ops/s [Average]
[info]   (min, avg, max) = (14786.038, 14820.001, 14852.708), stdev = 24.596
[info]   CI (99.9%): [14725.292, 14914.710] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:·gc.alloc.rate":
[info]   781.602 ±(99.9%) 5.042 MB/sec [Average]
[info]   (min, avg, max) = (779.785, 781.602, 783.268), stdev = 1.309
[info]   CI (99.9%): [776.560, 786.643] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   83000.248 ±(99.9%) 1.861 B/op [Average]
[info]   (min, avg, max) = (83000.029, 83000.248, 83001.113), stdev = 0.483
[info]   CI (99.9%): [82998.388, 83002.109] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   806.576 ±(99.9%) 1157.376 MB/sec [Average]
[info]   (min, avg, max) = (672.111, 806.576, 1344.246), stdev = 300.567
[info]   CI (99.9%): [≈ 0, 1963.952] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   85685.683 ±(99.9%) 123548.294 B/op [Average]
[info]   (min, avg, max) = (71222.698, 85685.683, 143081.099), stdev = 32085.099
[info]   CI (99.9%): [≈ 0, 209233.976] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.354 ±(99.9%) 2.825 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.354, 1.665), stdev = 0.734
[info]   CI (99.9%): [≈ 0, 3.179] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   37.601 ±(99.9%) 300.132 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 37.601, 176.935), stdev = 77.943
[info]   CI (99.9%): [≈ 0, 337.733] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 45.78% complete, ETA 01:12:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3525.187 ops/s
[info] # Warmup Iteration   2: 15551.090 ops/s
[info] # Warmup Iteration   3: 16135.572 ops/s
[info] # Warmup Iteration   4: 16100.069 ops/s
[info] # Warmup Iteration   5: 16128.023 ops/s
[info] Iteration   1: 16105.406 ops/s
[info]                  ·gc.alloc.rate:               687.202 MB/sec
[info]                  ·gc.alloc.rate.norm:          67152.027 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.616 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 49994.187 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 16179.386 ops/s
[info]                  ·gc.alloc.rate:                   690.314 MB/sec
[info]                  ·gc.alloc.rate.norm:              67152.027 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.790 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     64960.910 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.120 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 206.190 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 16126.864 ops/s
[info]                  ·gc.alloc.rate:                   688.020 MB/sec
[info]                  ·gc.alloc.rate.norm:              67142.371 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.812 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     65170.331 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.094 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 16195.684 ops/s
[info]                  ·gc.alloc.rate:               690.683 MB/sec
[info]                  ·gc.alloc.rate.norm:          67120.029 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1336.276 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 129858.221 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 16265.319 ops/s
[info]                  ·gc.alloc.rate:                   693.958 MB/sec
[info]                  ·gc.alloc.rate.norm:              67120.027 B/op
[info]                  ·gc.churn.PS_Eden_Space:          668.376 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     64645.751 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.057 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala":
[info]   16174.532 ±(99.9%) 241.733 ops/s [Average]
[info]   (min, avg, max) = (16105.406, 16174.532, 16265.319), stdev = 62.777
[info]   CI (99.9%): [15932.799, 16416.265] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   690.035 ±(99.9%) 10.183 MB/sec [Average]
[info]   (min, avg, max) = (687.202, 690.035, 693.958), stdev = 2.645
[info]   CI (99.9%): [679.852, 700.218] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   67137.296 ±(99.9%) 62.570 B/op [Average]
[info]   (min, avg, max) = (67120.027, 67137.296, 67152.027), stdev = 16.249
[info]   CI (99.9%): [67074.726, 67199.866] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   770.374 ±(99.9%) 1245.739 MB/sec [Average]
[info]   (min, avg, max) = (511.616, 770.374, 1336.276), stdev = 323.514
[info]   CI (99.9%): [≈ 0, 2016.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   74925.880 ±(99.9%) 120840.663 B/op [Average]
[info]   (min, avg, max) = (49994.187, 74925.880, 129858.221), stdev = 31381.937
[info]   CI (99.9%): [≈ 0, 195766.543] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.453 ±(99.9%) 3.590 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.453, 2.120), stdev = 0.932
[info]   CI (99.9%): [≈ 0, 4.043] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   44.068 ±(99.9%) 349.255 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 44.068, 206.190), stdev = 90.700
[info]   CI (99.9%): [≈ 0, 393.323] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 4.000), stdev = 1.225
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 45.98% complete, ETA 01:12:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 96409.615 ops/s
[info] # Warmup Iteration   2: 99820.069 ops/s
[info] # Warmup Iteration   3: 100951.236 ops/s
[info] # Warmup Iteration   4: 100594.871 ops/s
[info] # Warmup Iteration   5: 100943.586 ops/s
[info] Iteration   1: 100205.189 ops/s
[info]                  ·gc.alloc.rate:                   251.732 MB/sec
[info]                  ·gc.alloc.rate.norm:              3952.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.843 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8035.546 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.327 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 99516.358 ops/s
[info]                  ·gc.alloc.rate:      249.934 MB/sec
[info]                  ·gc.alloc.rate.norm: 3952.004 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 99305.963 ops/s
[info]                  ·gc.alloc.rate:               249.446 MB/sec
[info]                  ·gc.alloc.rate.norm:          3952.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.790 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8108.363 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 100934.284 ops/s
[info]                  ·gc.alloc.rate:      253.445 MB/sec
[info]                  ·gc.alloc.rate.norm: 3952.004 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 100611.687 ops/s
[info]                  ·gc.alloc.rate:               252.648 MB/sec
[info]                  ·gc.alloc.rate.norm:          3952.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.617 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8002.886 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala":
[info]   100114.696 ±(99.9%) 2680.952 ops/s [Average]
[info]   (min, avg, max) = (99305.963, 100114.696, 100934.284), stdev = 696.235
[info]   CI (99.9%): [97433.744, 102795.648] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   251.441 ±(99.9%) 6.616 MB/sec [Average]
[info]   (min, avg, max) = (249.446, 251.441, 253.445), stdev = 1.718
[info]   CI (99.9%): [244.825, 258.057] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   3952.004 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3952.004, 3952.004, 3952.005), stdev = 0.001
[info]   CI (99.9%): [3952.004, 3952.005] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   307.050 ±(99.9%) 1079.324 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 307.050, 511.843), stdev = 280.297
[info]   CI (99.9%): [≈ 0, 1386.373] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   4829.359 ±(99.9%) 16976.514 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4829.359, 8108.363), stdev = 4408.747
[info]   CI (99.9%): [≈ 0, 21805.873] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.004 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.065 ±(99.9%) 0.563 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.065, 0.327), stdev = 0.146
[info]   CI (99.9%): [≈ 0, 0.628] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 3.000), stdev = 1.225
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 46.18% complete, ETA 01:11:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2128.296 ops/s
[info] # Warmup Iteration   2: 13496.640 ops/s
[info] # Warmup Iteration   3: 13754.690 ops/s
[info] # Warmup Iteration   4: 14130.804 ops/s
[info] # Warmup Iteration   5: 13754.856 ops/s
[info] Iteration   1: 14193.415 ops/s
[info]                  ·gc.alloc.rate:                   1104.667 MB/sec
[info]                  ·gc.alloc.rate.norm:              122483.436 B/op
[info]                  ·gc.churn.PS_Eden_Space:          668.839 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     74159.644 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.308 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 14361.604 ops/s
[info]                  ·gc.alloc.rate:                   1117.734 MB/sec
[info]                  ·gc.alloc.rate.norm:              122488.030 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.621 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     146584.559 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11.406 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 14295.226 ops/s
[info]                  ·gc.alloc.rate:                   1112.541 MB/sec
[info]                  ·gc.alloc.rate.norm:              122488.030 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.218 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     147334.535 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.292 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 14334.809 ops/s
[info]                  ·gc.alloc.rate:               1115.595 MB/sec
[info]                  ·gc.alloc.rate.norm:          122486.900 B/op
[info]                  ·gc.churn.PS_Eden_Space:      669.414 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 73498.318 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 14378.541 ops/s
[info]                  ·gc.alloc.rate:                   1118.998 MB/sec
[info]                  ·gc.alloc.rate.norm:              122488.032 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.695 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     146755.440 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.278 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson":
[info]   14312.719 ±(99.9%) 283.943 ops/s [Average]
[info]   (min, avg, max) = (14193.415, 14312.719, 14378.541), stdev = 73.739
[info]   CI (99.9%): [14028.776, 14596.662] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1113.907 ±(99.9%) 22.008 MB/sec [Average]
[info]   (min, avg, max) = (1104.667, 1113.907, 1118.998), stdev = 5.715
[info]   CI (99.9%): [1091.899, 1135.915] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   122486.886 ±(99.9%) 7.661 B/op [Average]
[info]   (min, avg, max) = (122483.436, 122486.886, 122488.032), stdev = 1.989
[info]   CI (99.9%): [122479.225, 122494.546] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1070.957 ±(99.9%) 1412.500 MB/sec [Average]
[info]   (min, avg, max) = (668.839, 1070.957, 1340.695), stdev = 366.822
[info]   CI (99.9%): [≈ 0, 2483.457] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   117666.499 ±(99.9%) 154101.400 B/op [Average]
[info]   (min, avg, max) = (73498.318, 117666.499, 147334.535), stdev = 40019.644
[info]   CI (99.9%): [≈ 0, 271767.899] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.156 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.104), stdev = 0.041
[info]   CI (99.9%): [≈ 0, 0.190] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   3.657 ±(99.9%) 17.114 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.657, 11.406), stdev = 4.444
[info]   CI (99.9%): [≈ 0, 20.771] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 46.39% complete, ETA 01:11:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4235.124 ops/s
[info] # Warmup Iteration   2: 14941.948 ops/s
[info] # Warmup Iteration   3: 15162.812 ops/s
[info] # Warmup Iteration   4: 14679.237 ops/s
[info] # Warmup Iteration   5: 15142.012 ops/s
[info] Iteration   1: 15192.937 ops/s
[info]                  ·gc.alloc.rate:                   761.304 MB/sec
[info]                  ·gc.alloc.rate.norm:              78864.028 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.488 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     69767.051 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.593 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 164.975 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 15222.972 ops/s
[info]                  ·gc.alloc.rate:                   763.111 MB/sec
[info]                  ·gc.alloc.rate.norm:              78864.028 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.711 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     69625.006 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.152 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 15220.171 ops/s
[info]                  ·gc.alloc.rate:               762.703 MB/sec
[info]                  ·gc.alloc.rate.norm:          78863.652 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.487 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 69638.727 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   4: 15205.429 ops/s
[info]                  ·gc.alloc.rate:                   761.698 MB/sec
[info]                  ·gc.alloc.rate.norm:              78840.028 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.465 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     69707.413 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.155 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 14876.226 ops/s
[info]                  ·gc.alloc.rate:                   745.218 MB/sec
[info]                  ·gc.alloc.rate.norm:              78840.029 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.464 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     71248.762 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.202 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readUPickle":
[info]   15143.547 ±(99.9%) 577.304 ops/s [Average]
[info]   (min, avg, max) = (14876.226, 15143.547, 15222.972), stdev = 149.924
[info]   CI (99.9%): [14566.243, 15720.851] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readUPickle:·gc.alloc.rate":
[info]   758.807 ±(99.9%) 29.385 MB/sec [Average]
[info]   (min, avg, max) = (745.218, 758.807, 763.111), stdev = 7.631
[info]   CI (99.9%): [729.422, 788.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readUPickle:·gc.alloc.rate.norm":
[info]   78854.353 ±(99.9%) 50.356 B/op [Average]
[info]   (min, avg, max) = (78840.028, 78854.353, 78864.028), stdev = 13.077
[info]   CI (99.9%): [78803.997, 78904.709] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readUPickle:·gc.churn.PS_Eden_Space":
[info]   673.523 ±(99.9%) 0.408 MB/sec [Average]
[info]   (min, avg, max) = (673.464, 673.523, 673.711), stdev = 0.106
[info]   CI (99.9%): [673.115, 673.931] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   69997.392 ±(99.9%) 2702.582 B/op [Average]
[info]   (min, avg, max) = (69625.006, 69997.392, 71248.762), stdev = 701.852
[info]   CI (99.9%): [67294.809, 72699.974] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space":
[info]   0.331 ±(99.9%) 2.716 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.331, 1.593), stdev = 0.705
[info]   CI (99.9%): [≈ 0, 3.047] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   34.297 ±(99.9%) 281.318 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 34.297, 164.975), stdev = 73.058
[info]   CI (99.9%): [≈ 0, 315.615] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readUPickle:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readUPickle:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 0.707
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 46.59% complete, ETA 01:11:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 36224.247 ops/s
[info] # Warmup Iteration   2: 48741.437 ops/s
[info] # Warmup Iteration   3: 48531.085 ops/s
[info] # Warmup Iteration   4: 50078.106 ops/s
[info] # Warmup Iteration   5: 49139.470 ops/s
[info] Iteration   1: 49996.659 ops/s
[info]                  ·gc.alloc.rate:                   1405.623 MB/sec
[info]                  ·gc.alloc.rate.norm:              44248.009 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.594 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     42232.418 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.276 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 49949.974 ops/s
[info]                  ·gc.alloc.rate:                   1404.280 MB/sec
[info]                  ·gc.alloc.rate.norm:              44248.009 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.906 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     42314.128 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.968 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 50180.425 ops/s
[info]                  ·gc.alloc.rate:               1410.825 MB/sec
[info]                  ·gc.alloc.rate.norm:          44248.009 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1344.261 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 42160.318 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 50282.401 ops/s
[info]                  ·gc.alloc.rate:                   1413.622 MB/sec
[info]                  ·gc.alloc.rate.norm:              44248.009 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.886 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     42127.773 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.955 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 50314.424 ops/s
[info]                  ·gc.alloc.rate:                   1414.569 MB/sec
[info]                  ·gc.alloc.rate.norm:              44248.009 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.622 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     42153.914 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.605 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce":
[info]   50144.777 ±(99.9%) 635.293 ops/s [Average]
[info]   (min, avg, max) = (49949.974, 50144.777, 50314.424), stdev = 164.984
[info]   CI (99.9%): [49509.483, 50780.070] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1409.784 ±(99.9%) 17.887 MB/sec [Average]
[info]   (min, avg, max) = (1404.280, 1409.784, 1414.569), stdev = 4.645
[info]   CI (99.9%): [1391.897, 1427.671] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   44248.009 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (44248.009, 44248.009, 44248.009), stdev = 0.001
[info]   CI (99.9%): [44248.008, 44248.010] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1344.454 ±(99.9%) 9.174 MB/sec [Average]
[info]   (min, avg, max) = (1341.594, 1344.454, 1347.622), stdev = 2.382
[info]   CI (99.9%): [1335.280, 1353.627] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   42197.710 ±(99.9%) 291.770 B/op [Average]
[info]   (min, avg, max) = (42127.773, 42197.710, 42314.128), stdev = 75.772
[info]   CI (99.9%): [41905.941, 42489.480] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.150 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.062, 0.104), stdev = 0.039
[info]   CI (99.9%): [≈ 0, 0.212] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   1.961 ±(99.9%) 4.712 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.961, 3.276), stdev = 1.224
[info]   CI (99.9%): [≈ 0, 6.673] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 46.79% complete, ETA 01:11:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 50571.250 ops/s
[info] # Warmup Iteration   2: 69904.509 ops/s
[info] # Warmup Iteration   3: 72796.398 ops/s
[info] # Warmup Iteration   4: 73703.833 ops/s
[info] # Warmup Iteration   5: 73214.933 ops/s
[info] Iteration   1: 73752.226 ops/s
[info]                  ·gc.alloc.rate:                   1521.235 MB/sec
[info]                  ·gc.alloc.rate.norm:              32464.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.227 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28558.500 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.444 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 73712.020 ops/s
[info]                  ·gc.alloc.rate:                   1520.757 MB/sec
[info]                  ·gc.alloc.rate.norm:              32464.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.846 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28602.053 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.222 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 73569.980 ops/s
[info]                  ·gc.alloc.rate:                   1517.543 MB/sec
[info]                  ·gc.alloc.rate.norm:              32464.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.277 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28714.640 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.336 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 73618.646 ops/s
[info]                  ·gc.alloc.rate:                   1518.539 MB/sec
[info]                  ·gc.alloc.rate.norm:              32464.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2016.727 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     43114.501 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.890 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 73665.391 ops/s
[info]                  ·gc.alloc.rate:                   1519.660 MB/sec
[info]                  ·gc.alloc.rate.norm:              32464.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.081 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28777.239 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.890 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala":
[info]   73663.653 ±(99.9%) 278.924 ops/s [Average]
[info]   (min, avg, max) = (73569.980, 73663.653, 73752.226), stdev = 72.436
[info]   CI (99.9%): [73384.728, 73942.577] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1519.547 ±(99.9%) 5.891 MB/sec [Average]
[info]   (min, avg, max) = (1517.543, 1519.547, 1521.235), stdev = 1.530
[info]   CI (99.9%): [1513.656, 1525.438] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   32464.006 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (32464.006, 32464.006, 32464.006), stdev = 0.001
[info]   CI (99.9%): [32464.005, 32464.007] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1476.832 ±(99.9%) 1162.237 MB/sec [Average]
[info]   (min, avg, max) = (1338.227, 1476.832, 2016.727), stdev = 301.829
[info]   CI (99.9%): [314.594, 2639.069] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   31553.387 ±(99.9%) 24888.431 B/op [Average]
[info]   (min, avg, max) = (28558.500, 31553.387, 43114.501), stdev = 6463.447
[info]   CI (99.9%): [6664.955, 56441.818] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.104), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.156 ±(99.9%) 2.596 B/op [Average]
[info]   (min, avg, max) = (0.444, 1.156, 2.222), stdev = 0.674
[info]   CI (99.9%): [≈ 0, 3.752] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 3.000), stdev = 0.707
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 46.99% complete, ETA 01:10:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 258805.238 ops/s
[info] # Warmup Iteration   2: 270799.368 ops/s
[info] # Warmup Iteration   3: 274250.658 ops/s
[info] # Warmup Iteration   4: 275135.219 ops/s
[info] # Warmup Iteration   5: 277246.420 ops/s
[info] Iteration   1: 277261.862 ops/s
[info]                  ·gc.alloc.rate:               531.319 MB/sec
[info]                  ·gc.alloc.rate.norm:          3016.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.585 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2903.983 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 277783.944 ops/s
[info]                  ·gc.alloc.rate:      532.319 MB/sec
[info]                  ·gc.alloc.rate.norm: 3016.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 277364.151 ops/s
[info]                  ·gc.alloc.rate:                   531.589 MB/sec
[info]                  ·gc.alloc.rate.norm:              3016.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.562 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3821.498 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.468 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.328 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 275878.757 ops/s
[info]                  ·gc.alloc.rate:                   528.629 MB/sec
[info]                  ·gc.alloc.rate.norm:              3016.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.432 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3842.149 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.475 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 274655.453 ops/s
[info]                  ·gc.alloc.rate:               526.306 MB/sec
[info]                  ·gc.alloc.rate.norm:          3016.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.460 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3859.269 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala":
[info]   276588.833 ±(99.9%) 4992.692 ops/s [Average]
[info]   (min, avg, max) = (274655.453, 276588.833, 277783.944), stdev = 1296.586
[info]   CI (99.9%): [271596.142, 281581.525] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   530.032 ±(99.9%) 9.658 MB/sec [Average]
[info]   (min, avg, max) = (526.306, 530.032, 532.319), stdev = 2.508
[info]   CI (99.9%): [520.375, 539.690] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   3016.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3016.002, 3016.002, 3016.002), stdev = 0.001
[info]   CI (99.9%): [3016.001, 3016.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   506.408 ±(99.9%) 1123.009 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 506.408, 673.562), stdev = 291.642
[info]   CI (99.9%): [≈ 0, 1629.416] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   2885.380 ±(99.9%) 6404.683 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2885.380, 3859.269), stdev = 1663.276
[info]   CI (99.9%): [≈ 0, 9290.063] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.310 ±(99.9%) 2.496 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.310, 1.468), stdev = 0.648
[info]   CI (99.9%): [≈ 0, 2.806] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.761 ±(99.9%) 14.159 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.761, 8.328), stdev = 3.677
[info]   CI (99.9%): [≈ 0, 15.919] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 3.000), stdev = 1.095
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 47.19% complete, ETA 01:10:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 253231.206 ops/s
[info] # Warmup Iteration   2: 269103.625 ops/s
[info] # Warmup Iteration   3: 277430.714 ops/s
[info] # Warmup Iteration   4: 277396.066 ops/s
[info] # Warmup Iteration   5: 277076.988 ops/s
[info] Iteration   1: 277205.893 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 278146.795 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 277179.383 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 277620.471 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 277390.378 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc":
[info]   277508.584 ±(99.9%) 1532.780 ops/s [Average]
[info]   (min, avg, max) = (277179.383, 277508.584, 278146.795), stdev = 398.058
[info]   CI (99.9%): [275975.804, 279041.364] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (0.002, 0.002, 0.002), stdev = 0.001
[info]   CI (99.9%): [0.002, 0.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 47.39% complete, ETA 01:10:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 52862.161 ops/s
[info] # Warmup Iteration   2: 69497.702 ops/s
[info] # Warmup Iteration   3: 69662.574 ops/s
[info] # Warmup Iteration   4: 68651.767 ops/s
[info] # Warmup Iteration   5: 68785.018 ops/s
[info] Iteration   1: 68697.806 ops/s
[info]                  ·gc.alloc.rate:               1539.614 MB/sec
[info]                  ·gc.alloc.rate.norm:          35272.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1340.281 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 30705.365 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 68382.679 ops/s
[info]                  ·gc.alloc.rate:                   1532.498 MB/sec
[info]                  ·gc.alloc.rate.norm:              35272.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2014.039 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46355.176 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.916 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 68830.988 ops/s
[info]                  ·gc.alloc.rate:               1542.611 MB/sec
[info]                  ·gc.alloc.rate.norm:          35272.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1344.626 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 30745.049 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 67940.866 ops/s
[info]                  ·gc.alloc.rate:                   1522.983 MB/sec
[info]                  ·gc.alloc.rate.norm:              35272.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.903 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     31194.025 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.964 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 67615.451 ops/s
[info]                  ·gc.alloc.rate:               1515.356 MB/sec
[info]                  ·gc.alloc.rate.norm:          35272.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1348.224 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 31381.771 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson":
[info]   68293.558 ±(99.9%) 1967.610 ops/s [Average]
[info]   (min, avg, max) = (67615.451, 68293.558, 68830.988), stdev = 510.982
[info]   CI (99.9%): [66325.949, 70261.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1530.612 ±(99.9%) 43.883 MB/sec [Average]
[info]   (min, avg, max) = (1515.356, 1530.612, 1542.611), stdev = 11.396
[info]   CI (99.9%): [1486.729, 1574.496] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   35272.007 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (35272.006, 35272.007, 35272.007), stdev = 0.001
[info]   CI (99.9%): [35272.005, 35272.008] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1478.815 ±(99.9%) 1152.169 MB/sec [Average]
[info]   (min, avg, max) = (1340.281, 1478.815, 2014.039), stdev = 299.215
[info]   CI (99.9%): [326.645, 2630.984] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   34076.277 ±(99.9%) 26454.738 B/op [Average]
[info]   (min, avg, max) = (30705.365, 34076.277, 46355.176), stdev = 6870.211
[info]   CI (99.9%): [7621.539, 60531.015] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.083), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.576 ±(99.9%) 3.303 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.576, 1.916), stdev = 0.858
[info]   CI (99.9%): [≈ 0, 3.879] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 3.000), stdev = 0.707
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 47.59% complete, ETA 01:09:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 13385.942 ops/s
[info] # Warmup Iteration   2: 14864.447 ops/s
[info] # Warmup Iteration   3: 14952.634 ops/s
[info] # Warmup Iteration   4: 14930.358 ops/s
[info] # Warmup Iteration   5: 15232.024 ops/s
[info] Iteration   1: 14930.172 ops/s
[info]                  ·gc.alloc.rate:               596.247 MB/sec
[info]                  ·gc.alloc.rate.norm:          62848.029 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.587 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 53924.358 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 14870.437 ops/s
[info]                  ·gc.alloc.rate:                   593.815 MB/sec
[info]                  ·gc.alloc.rate.norm:              62848.040 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.793 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     71312.756 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.561 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 165.243 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 14900.555 ops/s
[info]                  ·gc.alloc.rate:                   595.009 MB/sec
[info]                  ·gc.alloc.rate.norm:              62846.384 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.807 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     71169.202 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.398 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 15026.530 ops/s
[info]                  ·gc.alloc.rate:                   600.035 MB/sec
[info]                  ·gc.alloc.rate.norm:              62848.029 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.451 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     70537.650 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.361 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 14975.376 ops/s
[info]                  ·gc.alloc.rate:                   598.035 MB/sec
[info]                  ·gc.alloc.rate.norm:              62848.029 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.401 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     70768.380 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.187 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeUPickle":
[info]   14940.614 ±(99.9%) 237.592 ops/s [Average]
[info]   (min, avg, max) = (14870.437, 14940.614, 15026.530), stdev = 61.702
[info]   CI (99.9%): [14703.022, 15178.206] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeUPickle:·gc.alloc.rate":
[info]   596.628 ±(99.9%) 9.483 MB/sec [Average]
[info]   (min, avg, max) = (593.815, 596.628, 600.035), stdev = 2.463
[info]   CI (99.9%): [587.145, 606.112] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeUPickle:·gc.alloc.rate.norm":
[info]   62847.702 ±(99.9%) 2.838 B/op [Average]
[info]   (min, avg, max) = (62846.384, 62847.702, 62848.040), stdev = 0.737
[info]   CI (99.9%): [62844.864, 62850.540] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space":
[info]   641.208 ±(99.9%) 279.020 MB/sec [Average]
[info]   (min, avg, max) = (511.587, 641.208, 673.807), stdev = 72.461
[info]   CI (99.9%): [362.188, 920.228] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   67542.469 ±(99.9%) 29338.193 B/op [Average]
[info]   (min, avg, max) = (53924.358, 67542.469, 71312.756), stdev = 7619.036
[info]   CI (99.9%): [38204.277, 96880.662] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space":
[info]   0.333 ±(99.9%) 2.645 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.333, 1.561), stdev = 0.687
[info]   CI (99.9%): [≈ 0, 2.978] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   35.238 ±(99.9%) 279.934 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 35.238, 165.243), stdev = 72.698
[info]   CI (99.9%): [≈ 0, 315.172] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeUPickle:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeUPickle:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 3.000), stdev = 0.894
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 47.79% complete, ETA 01:09:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 105326.357 ops/s
[info] # Warmup Iteration   2: 126097.428 ops/s
[info] # Warmup Iteration   3: 130166.843 ops/s
[info] # Warmup Iteration   4: 130543.307 ops/s
[info] # Warmup Iteration   5: 130394.443 ops/s
[info] Iteration   1: 130195.861 ops/s
[info]                  ·gc.alloc.rate:               1948.941 MB/sec
[info]                  ·gc.alloc.rate.norm:          23560.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2020.705 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 24427.530 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 130716.346 ops/s
[info]                  ·gc.alloc.rate:                   1956.851 MB/sec
[info]                  ·gc.alloc.rate.norm:              23560.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2024.407 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24373.365 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.504 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 129737.899 ops/s
[info]                  ·gc.alloc.rate:                   1942.161 MB/sec
[info]                  ·gc.alloc.rate.norm:              23560.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2027.794 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24598.791 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.758 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 130199.557 ops/s
[info]                  ·gc.alloc.rate:                   1949.006 MB/sec
[info]                  ·gc.alloc.rate.norm:              23560.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1353.600 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16362.611 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.755 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 130666.873 ops/s
[info]                  ·gc.alloc.rate:                   1956.006 MB/sec
[info]                  ·gc.alloc.rate.norm:              23560.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2032.665 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24483.355 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.501 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce":
[info]   130303.307 ±(99.9%) 1545.995 ops/s [Average]
[info]   (min, avg, max) = (129737.899, 130303.307, 130716.346), stdev = 401.490
[info]   CI (99.9%): [128757.313, 131849.302] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:·gc.alloc.rate":
[info]   1950.593 ±(99.9%) 23.168 MB/sec [Average]
[info]   (min, avg, max) = (1942.161, 1950.593, 1956.851), stdev = 6.017
[info]   CI (99.9%): [1927.425, 1973.761] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   23560.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (23560.003, 23560.003, 23560.004), stdev = 0.001
[info]   CI (99.9%): [23560.003, 23560.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1891.834 ±(99.9%) 1158.714 MB/sec [Average]
[info]   (min, avg, max) = (1353.600, 1891.834, 2032.665), stdev = 300.914
[info]   CI (99.9%): [733.120, 3050.548] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   22849.130 ±(99.9%) 13966.427 B/op [Average]
[info]   (min, avg, max) = (16362.611, 22849.130, 24598.791), stdev = 3627.037
[info]   CI (99.9%): [8882.704, 36815.557] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.174 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.058, 0.125), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.232] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.704 ±(99.9%) 2.093 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.704, 1.504), stdev = 0.544
[info]   CI (99.9%): [≈ 0, 2.797] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.400, 3.000), stdev = 0.894
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 47.99% complete, ETA 01:09:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 8064.540 ops/s
[info] # Warmup Iteration   2: 615205.490 ops/s
[info] # Warmup Iteration   3: 609923.201 ops/s
[info] # Warmup Iteration   4: 616508.932 ops/s
[info] # Warmup Iteration   5: 615155.147 ops/s
[info] Iteration   1: 617769.097 ops/s
[info]                  ·gc.alloc.rate:               342.345 MB/sec
[info]                  ·gc.alloc.rate.norm:          872.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.705 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1303.384 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 617869.659 ops/s
[info]                  ·gc.alloc.rate:               342.342 MB/sec
[info]                  ·gc.alloc.rate.norm:          872.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.617 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1303.173 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 619237.334 ops/s
[info]                  ·gc.alloc.rate:      343.168 MB/sec
[info]                  ·gc.alloc.rate.norm: 872.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 629245.114 ops/s
[info]                  ·gc.alloc.rate:                   348.629 MB/sec
[info]                  ·gc.alloc.rate.norm:              872.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.589 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1279.603 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.025 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.063 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 631250.348 ops/s
[info]                  ·gc.alloc.rate:      349.724 MB/sec
[info]                  ·gc.alloc.rate.norm: 872.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava":
[info]   623074.311 ±(99.9%) 25461.062 ops/s [Average]
[info]   (min, avg, max) = (617769.097, 623074.311, 631250.348), stdev = 6612.157
[info]   CI (99.9%): [597613.248, 648535.373] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   345.242 ±(99.9%) 13.972 MB/sec [Average]
[info]   (min, avg, max) = (342.342, 345.242, 349.724), stdev = 3.628
[info]   CI (99.9%): [331.270, 359.213] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   872.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (872.001, 872.001, 872.001), stdev = 0.001
[info]   CI (99.9%): [872.001, 872.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   306.982 ±(99.9%) 1079.086 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 306.982, 511.705), stdev = 280.235
[info]   CI (99.9%): [≈ 0, 1386.069] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   777.232 ±(99.9%) 2732.334 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 777.232, 1303.384), stdev = 709.578
[info]   CI (99.9%): [≈ 0, 3509.566] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.005 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.005, 0.025), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.049] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.013 ±(99.9%) 0.109 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.013, 0.063), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 3.000), stdev = 1.304
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 48.19% complete, ETA 01:09:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 266441.591 ops/s
[info] # Warmup Iteration   2: 389660.190 ops/s
[info] # Warmup Iteration   3: 396160.157 ops/s
[info] # Warmup Iteration   4: 393623.836 ops/s
[info] # Warmup Iteration   5: 396509.039 ops/s
[info] Iteration   1: 385845.201 ops/s
[info]                  ·gc.alloc.rate:               394.214 MB/sec
[info]                  ·gc.alloc.rate.norm:          1608.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.598 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2086.810 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 392395.472 ops/s
[info]                  ·gc.alloc.rate:               400.924 MB/sec
[info]                  ·gc.alloc.rate.norm:          1608.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.631 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2052.018 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 389184.355 ops/s
[info]                  ·gc.alloc.rate:                   397.648 MB/sec
[info]                  ·gc.alloc.rate.norm:              1608.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.653 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2069.010 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 396495.430 ops/s
[info]                  ·gc.alloc.rate:      405.082 MB/sec
[info]                  ·gc.alloc.rate.norm: 1608.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 394917.640 ops/s
[info]                  ·gc.alloc.rate:                   403.474 MB/sec
[info]                  ·gc.alloc.rate.norm:              1608.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.784 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2661.381 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.136 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.512 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala":
[info]   391767.620 ±(99.9%) 16608.881 ops/s [Average]
[info]   (min, avg, max) = (385845.201, 391767.620, 396495.430), stdev = 4313.274
[info]   CI (99.9%): [375158.739, 408376.500] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   400.268 ±(99.9%) 16.938 MB/sec [Average]
[info]   (min, avg, max) = (394.214, 400.268, 405.082), stdev = 4.399
[info]   CI (99.9%): [383.331, 417.206] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   1608.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1608.001, 1608.001, 1608.001), stdev = 0.001
[info]   CI (99.9%): [1608.001, 1608.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   440.533 ±(99.9%) 983.377 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 440.533, 667.784), stdev = 255.380
[info]   CI (99.9%): [≈ 0, 1423.910] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1773.844 ±(99.9%) 3944.183 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1773.844, 2661.381), stdev = 1024.292
[info]   CI (99.9%): [≈ 0, 5718.027] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.429 ±(99.9%) 3.674 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.429, 2.136), stdev = 0.954
[info]   CI (99.9%): [≈ 0, 4.103] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.711 ±(99.9%) 14.641 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.711, 8.512), stdev = 3.802
[info]   CI (99.9%): [≈ 0, 16.352] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.000, 3.000), stdev = 1.225
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 48.39% complete, ETA 01:08:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 873958.476 ops/s
[info] # Warmup Iteration   2: 919247.330 ops/s
[info] # Warmup Iteration   3: 936457.284 ops/s
[info] # Warmup Iteration   4: 916261.630 ops/s
[info] # Warmup Iteration   5: 927704.389 ops/s
[info] Iteration   1: 932001.740 ops/s
[info]                  ·gc.alloc.rate:      322.148 MB/sec
[info]                  ·gc.alloc.rate.norm: 544.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 932696.986 ops/s
[info]                  ·gc.alloc.rate:               322.380 MB/sec
[info]                  ·gc.alloc.rate.norm:          544.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.593 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 863.288 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 934105.581 ops/s
[info]                  ·gc.alloc.rate:                   322.910 MB/sec
[info]                  ·gc.alloc.rate.norm:              544.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.648 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     861.963 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.036 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.060 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 904349.512 ops/s
[info]                  ·gc.alloc.rate:      312.717 MB/sec
[info]                  ·gc.alloc.rate.norm: 544.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 932896.600 ops/s
[info]                  ·gc.alloc.rate:                   322.442 MB/sec
[info]                  ·gc.alloc.rate.norm:              544.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.594 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     863.123 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala":
[info]   927210.084 ±(99.9%) 49295.618 ops/s [Average]
[info]   (min, avg, max) = (904349.512, 927210.084, 934105.581), stdev = 12801.915
[info]   CI (99.9%): [877914.466, 976505.701] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   320.520 ±(99.9%) 16.828 MB/sec [Average]
[info]   (min, avg, max) = (312.717, 320.520, 322.910), stdev = 4.370
[info]   CI (99.9%): [303.691, 337.348] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   544.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (544.000, 544.000, 544.000), stdev = 0.001
[info]   CI (99.9%): [544.000, 544.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   306.967 ±(99.9%) 1079.032 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 306.967, 511.648), stdev = 280.221
[info]   CI (99.9%): [≈ 0, 1386.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   517.675 ±(99.9%) 1819.701 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 517.675, 863.288), stdev = 472.571
[info]   CI (99.9%): [≈ 0, 2337.376] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.009 ±(99.9%) 0.060 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.009, 0.036), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.069] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.016 ±(99.9%) 0.100 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.016, 0.060), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.116] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 3.000), stdev = 1.304
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 48.59% complete, ETA 01:08:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 45753.078 ops/s
[info] # Warmup Iteration   2: 75280.922 ops/s
[info] # Warmup Iteration   3: 75981.512 ops/s
[info] # Warmup Iteration   4: 77677.288 ops/s
[info] # Warmup Iteration   5: 77945.025 ops/s
[info] Iteration   1: 77895.127 ops/s
[info]                  ·gc.alloc.rate:                   3237.337 MB/sec
[info]                  ·gc.alloc.rate.norm:              65408.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3376.157 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     68212.759 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.524 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 77184.586 ops/s
[info]                  ·gc.alloc.rate:                   3207.728 MB/sec
[info]                  ·gc.alloc.rate.norm:              65408.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2708.634 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     55231.106 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.273 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 76854.575 ops/s
[info]                  ·gc.alloc.rate:                   3195.207 MB/sec
[info]                  ·gc.alloc.rate.norm:              65408.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3392.632 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     69449.437 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.410 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 76725.519 ops/s
[info]                  ·gc.alloc.rate:                   3188.760 MB/sec
[info]                  ·gc.alloc.rate.norm:              65408.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3396.852 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     69676.410 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.708 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 77355.611 ops/s
[info]                  ·gc.alloc.rate:                   3215.384 MB/sec
[info]                  ·gc.alloc.rate.norm:              65408.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3401.144 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     69186.771 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.118 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson":
[info]   77203.084 ±(99.9%) 1777.206 ops/s [Average]
[info]   (min, avg, max) = (76725.519, 77203.084, 77895.127), stdev = 461.535
[info]   CI (99.9%): [75425.878, 78980.290] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3208.883 ±(99.9%) 73.194 MB/sec [Average]
[info]   (min, avg, max) = (3188.760, 3208.883, 3237.337), stdev = 19.008
[info]   CI (99.9%): [3135.690, 3282.077] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   65408.006 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (65408.006, 65408.006, 65408.006), stdev = 0.001
[info]   CI (99.9%): [65408.005, 65408.006] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3255.084 ±(99.9%) 1176.838 MB/sec [Average]
[info]   (min, avg, max) = (2708.634, 3255.084, 3401.144), stdev = 305.621
[info]   CI (99.9%): [2078.245, 4431.922] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   66351.297 ±(99.9%) 24033.266 B/op [Average]
[info]   (min, avg, max) = (55231.106, 66351.297, 69676.410), stdev = 6241.363
[info]   CI (99.9%): [42318.030, 90384.563] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.108 ±(99.9%) 0.154 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 0.108, 0.167), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.263] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   2.207 ±(99.9%) 3.150 B/op [Average]
[info]   (min, avg, max) = (1.273, 2.207, 3.410), stdev = 0.818
[info]   CI (99.9%): [≈ 0, 5.357] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.800, 6.000), stdev = 1.095
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 48.80% complete, ETA 01:08:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 128590.701 ops/s
[info] # Warmup Iteration   2: 140779.315 ops/s
[info] # Warmup Iteration   3: 141899.213 ops/s
[info] # Warmup Iteration   4: 142477.679 ops/s
[info] # Warmup Iteration   5: 142946.782 ops/s
[info] Iteration   1: 140876.900 ops/s
[info]                  ·gc.alloc.rate:                   1366.276 MB/sec
[info]                  ·gc.alloc.rate.norm:              15264.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.562 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15054.926 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.930 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 140731.358 ops/s
[info]                  ·gc.alloc.rate:                   1365.439 MB/sec
[info]                  ·gc.alloc.rate.norm:              15264.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.162 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15082.038 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.164 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 142786.207 ops/s
[info]                  ·gc.alloc.rate:               1384.841 MB/sec
[info]                  ·gc.alloc.rate.norm:          15264.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1349.308 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 14872.351 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 142889.474 ops/s
[info]                  ·gc.alloc.rate:                   1386.002 MB/sec
[info]                  ·gc.alloc.rate.norm:              15264.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.455 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14872.534 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.688 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 142691.964 ops/s
[info]                  ·gc.alloc.rate:                   1384.059 MB/sec
[info]                  ·gc.alloc.rate.norm:              15264.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1351.728 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14907.445 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.230 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readUPickle":
[info]   141995.181 ±(99.9%) 4200.022 ops/s [Average]
[info]   (min, avg, max) = (140731.358, 141995.181, 142889.474), stdev = 1090.732
[info]   CI (99.9%): [137795.158, 146195.203] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readUPickle:·gc.alloc.rate":
[info]   1377.323 ±(99.9%) 40.407 MB/sec [Average]
[info]   (min, avg, max) = (1365.439, 1377.323, 1386.002), stdev = 10.494
[info]   CI (99.9%): [1336.916, 1417.730] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readUPickle:·gc.alloc.rate.norm":
[info]   15264.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (15264.003, 15264.003, 15264.003), stdev = 0.001
[info]   CI (99.9%): [15264.003, 15264.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readUPickle:·gc.churn.PS_Eden_Space":
[info]   1349.643 ±(99.9%) 5.991 MB/sec [Average]
[info]   (min, avg, max) = (1347.562, 1349.643, 1351.728), stdev = 1.556
[info]   CI (99.9%): [1343.652, 1355.634] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   14957.859 ±(99.9%) 394.462 B/op [Average]
[info]   (min, avg, max) = (14872.351, 14957.859, 15082.038), stdev = 102.440
[info]   CI (99.9%): [14563.397, 15352.320] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.166 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.104), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.220] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   0.602 ±(99.9%) 1.859 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.602, 1.164), stdev = 0.483
[info]   CI (99.9%): [≈ 0, 2.461] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readUPickle:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readUPickle:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 49.00% complete, ETA 01:08:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 186148.781 ops/s
[info] # Warmup Iteration   2: 245822.058 ops/s
[info] # Warmup Iteration   3: 246875.328 ops/s
[info] # Warmup Iteration   4: 250585.674 ops/s
[info] # Warmup Iteration   5: 249179.893 ops/s
[info] Iteration   1: 250409.663 ops/s
[info]                  ·gc.alloc.rate:               1652.808 MB/sec
[info]                  ·gc.alloc.rate.norm:          10384.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1343.091 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8438.161 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 251500.941 ops/s
[info]                  ·gc.alloc.rate:                   1659.742 MB/sec
[info]                  ·gc.alloc.rate.norm:              10384.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2017.210 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12620.463 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.912 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 253490.644 ops/s
[info]                  ·gc.alloc.rate:                   1672.844 MB/sec
[info]                  ·gc.alloc.rate.norm:              10384.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.232 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8362.800 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.517 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 252837.731 ops/s
[info]                  ·gc.alloc.rate:                   1668.202 MB/sec
[info]                  ·gc.alloc.rate.norm:              10384.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2023.498 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12595.601 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.389 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 253309.845 ops/s
[info]                  ·gc.alloc.rate:               1671.279 MB/sec
[info]                  ·gc.alloc.rate.norm:          10384.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1350.994 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8394.005 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce":
[info]   252309.765 ±(99.9%) 5071.302 ops/s [Average]
[info]   (min, avg, max) = (250409.663, 252309.765, 253490.644), stdev = 1317.001
[info]   CI (99.9%): [247238.462, 257381.067] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1664.975 ±(99.9%) 32.646 MB/sec [Average]
[info]   (min, avg, max) = (1652.808, 1664.975, 1672.844), stdev = 8.478
[info]   CI (99.9%): [1632.329, 1697.620] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   10384.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10384.002, 10384.002, 10384.002), stdev = 0.001
[info]   CI (99.9%): [10384.001, 10384.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1616.405 ±(99.9%) 1420.004 MB/sec [Average]
[info]   (min, avg, max) = (1343.091, 1616.405, 2023.498), stdev = 368.771
[info]   CI (99.9%): [196.400, 3036.409] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   10082.206 ±(99.9%) 8879.297 B/op [Average]
[info]   (min, avg, max) = (8362.800, 10082.206, 12620.463), stdev = 2305.925
[info]   CI (99.9%): [1202.909, 18961.503] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.236 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.058, 0.146), stdev = 0.061
[info]   CI (99.9%): [≈ 0, 0.295] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.364 ±(99.9%) 1.478 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.364, 0.912), stdev = 0.384
[info]   CI (99.9%): [≈ 0, 1.841] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 3.000), stdev = 0.707
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 49.20% complete, ETA 01:07:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 31674.760 ops/s
[info] # Warmup Iteration   2: 1398778.575 ops/s
[info] # Warmup Iteration   3: 1369914.490 ops/s
[info] # Warmup Iteration   4: 1346582.998 ops/s
[info] # Warmup Iteration   5: 1362167.905 ops/s
[info] Iteration   1: 1344987.304 ops/s
[info]                  ·gc.alloc.rate:               458.064 MB/sec
[info]                  ·gc.alloc.rate.norm:          536.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.604 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 598.649 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 1394362.607 ops/s
[info]                  ·gc.alloc.rate:               474.900 MB/sec
[info]                  ·gc.alloc.rate.norm:          536.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.608 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 577.431 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 1398470.954 ops/s
[info]                  ·gc.alloc.rate:               476.279 MB/sec
[info]                  ·gc.alloc.rate.norm:          536.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      663.833 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 747.072 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 1382260.047 ops/s
[info]                  ·gc.alloc.rate:      470.759 MB/sec
[info]                  ·gc.alloc.rate.norm: 536.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1380372.334 ops/s
[info]                  ·gc.alloc.rate:                   470.188 MB/sec
[info]                  ·gc.alloc.rate.norm:              536.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.952 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     756.886 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.015 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava":
[info]   1380090.649 ±(99.9%) 81196.442 ops/s [Average]
[info]   (min, avg, max) = (1344987.304, 1380090.649, 1398470.954), stdev = 21086.458
[info]   CI (99.9%): [1298894.208, 1461287.091] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   470.038 ±(99.9%) 27.667 MB/sec [Average]
[info]   (min, avg, max) = (458.064, 470.038, 476.279), stdev = 7.185
[info]   CI (99.9%): [442.371, 497.705] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   536.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (536.000, 536.000, 536.000), stdev = 0.001
[info]   CI (99.9%): [536.000, 536.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   470.199 ±(99.9%) 1053.752 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 470.199, 663.952), stdev = 273.656
[info]   CI (99.9%): [≈ 0, 1523.951] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   536.007 ±(99.9%) 1196.614 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 536.007, 756.886), stdev = 310.757
[info]   CI (99.9%): [≈ 0, 1732.621] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.003 ±(99.9%) 0.025 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.003, 0.015), stdev = 0.006
[info]   CI (99.9%): [≈ 0, 0.028] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.003 ±(99.9%) 0.029 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.003, 0.017), stdev = 0.007
[info]   CI (99.9%): [≈ 0, 0.032] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.800, 3.000), stdev = 1.095
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 49.40% complete, ETA 01:07:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 923678.241 ops/s
[info] # Warmup Iteration   2: 1312772.577 ops/s
[info] # Warmup Iteration   3: 1285881.517 ops/s
[info] # Warmup Iteration   4: 1298765.491 ops/s
[info] # Warmup Iteration   5: 1297226.404 ops/s
[info] Iteration   1: 1290248.158 ops/s
[info]                  ·gc.alloc.rate:                   754.206 MB/sec
[info]                  ·gc.alloc.rate.norm:              920.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1335.611 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1629.214 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.120 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.586 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 1305617.682 ops/s
[info]                  ·gc.alloc.rate:               763.185 MB/sec
[info]                  ·gc.alloc.rate.norm:          920.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.136 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 805.421 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   3: 1300276.898 ops/s
[info]                  ·gc.alloc.rate:                   760.148 MB/sec
[info]                  ·gc.alloc.rate.norm:              920.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          668.208 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     808.726 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.050 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 1284220.857 ops/s
[info]                  ·gc.alloc.rate:               750.787 MB/sec
[info]                  ·gc.alloc.rate.norm:          920.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.221 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 818.826 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 1327824.958 ops/s
[info]                  ·gc.alloc.rate:                   776.502 MB/sec
[info]                  ·gc.alloc.rate.norm:              920.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          668.438 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     791.966 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala":
[info]   1301637.711 ±(99.9%) 64907.415 ops/s [Average]
[info]   (min, avg, max) = (1284220.857, 1301637.711, 1327824.958), stdev = 16856.250
[info]   CI (99.9%): [1236730.295, 1366545.126] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   760.966 ±(99.9%) 38.327 MB/sec [Average]
[info]   (min, avg, max) = (750.787, 760.966, 776.502), stdev = 9.953
[info]   CI (99.9%): [722.639, 799.293] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   920.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (920.000, 920.000, 920.000), stdev = 0.001
[info]   CI (99.9%): [920.000, 920.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   801.723 ±(99.9%) 1149.234 MB/sec [Average]
[info]   (min, avg, max) = (668.136, 801.723, 1335.611), stdev = 298.453
[info]   CI (99.9%): [≈ 0, 1950.957] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   970.830 ±(99.9%) 1417.703 B/op [Average]
[info]   (min, avg, max) = (791.966, 970.830, 1629.214), stdev = 368.173
[info]   CI (99.9%): [≈ 0, 2388.533] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.436 ±(99.9%) 3.624 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.436, 2.120), stdev = 0.941
[info]   CI (99.9%): [≈ 0, 4.060] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.532 ±(99.9%) 4.421 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.532, 2.586), stdev = 1.148
[info]   CI (99.9%): [≈ 0, 4.953] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 4.000), stdev = 1.517
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 49.60% complete, ETA 01:07:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1310080.001 ops/s
[info] # Warmup Iteration   2: 1370177.657 ops/s
[info] # Warmup Iteration   3: 1381382.297 ops/s
[info] # Warmup Iteration   4: 1383511.269 ops/s
[info] # Warmup Iteration   5: 1375835.458 ops/s
[info] Iteration   1: 1382203.295 ops/s
[info]                  ·gc.alloc.rate:               470.747 MB/sec
[info]                  ·gc.alloc.rate.norm:          536.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.622 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 582.541 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 1341936.479 ops/s
[info]                  ·gc.alloc.rate:               457.017 MB/sec
[info]                  ·gc.alloc.rate.norm:          536.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.604 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 600.022 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 1383799.698 ops/s
[info]                  ·gc.alloc.rate:                   471.278 MB/sec
[info]                  ·gc.alloc.rate.norm:              536.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.152 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     765.599 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.553 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.766 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 1386268.222 ops/s
[info]                  ·gc.alloc.rate:      472.094 MB/sec
[info]                  ·gc.alloc.rate.norm: 536.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1377890.144 ops/s
[info]                  ·gc.alloc.rate:                   469.237 MB/sec
[info]                  ·gc.alloc.rate.norm:              536.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.105 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     768.874 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.071 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala":
[info]   1374419.568 ±(99.9%) 70902.052 ops/s [Average]
[info]   (min, avg, max) = (1341936.479, 1374419.568, 1386268.222), stdev = 18413.038
[info]   CI (99.9%): [1303517.516, 1445321.619] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   468.075 ±(99.9%) 24.139 MB/sec [Average]
[info]   (min, avg, max) = (457.017, 468.075, 472.094), stdev = 6.269
[info]   CI (99.9%): [443.936, 492.214] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   536.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (536.000, 536.000, 536.000), stdev = 0.001
[info]   CI (99.9%): [536.000, 536.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   473.897 ±(99.9%) 1066.444 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 473.897, 673.152), stdev = 276.952
[info]   CI (99.9%): [≈ 0, 1540.341] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   543.407 ±(99.9%) 1218.034 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 543.407, 768.874), stdev = 316.320
[info]   CI (99.9%): [≈ 0, 1761.441] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.323 ±(99.9%) 2.650 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.323, 1.553), stdev = 0.688
[info]   CI (99.9%): [≈ 0, 2.973] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.368 ±(99.9%) 3.014 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.368, 1.766), stdev = 0.783
[info]   CI (99.9%): [≈ 0, 3.381] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 3.000), stdev = 1.140
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 49.80% complete, ETA 01:07:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1346501.571 ops/s
[info] # Warmup Iteration   2: 1417510.517 ops/s
[info] # Warmup Iteration   3: 1412052.482 ops/s
[info] # Warmup Iteration   4: 1402749.386 ops/s
[info] # Warmup Iteration   5: 1420139.954 ops/s
[info] Iteration   1: 1422082.807 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1415233.396 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1421047.340 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1420613.066 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1420673.963 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc":
[info]   1419930.115 ±(99.9%) 10361.235 ops/s [Average]
[info]   (min, avg, max) = (1415233.396, 1419930.115, 1422082.807), stdev = 2690.780
[info]   CI (99.9%): [1409568.880, 1430291.349] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 50.00% complete, ETA 01:06:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 25227.723 ops/s
[info] # Warmup Iteration   2: 35303.448 ops/s
[info] # Warmup Iteration   3: 34930.234 ops/s
[info] # Warmup Iteration   4: 35114.127 ops/s
[info] # Warmup Iteration   5: 34624.210 ops/s
[info] Iteration   1: 35450.081 ops/s
[info]                  ·gc.alloc.rate:                   1710.624 MB/sec
[info]                  ·gc.alloc.rate.norm:              75944.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2012.435 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     89343.076 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.848 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 35447.355 ops/s
[info]                  ·gc.alloc.rate:                   1710.457 MB/sec
[info]                  ·gc.alloc.rate.norm:              75944.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.604 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     59655.820 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.773 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 35644.779 ops/s
[info]                  ·gc.alloc.rate:                   1720.228 MB/sec
[info]                  ·gc.alloc.rate.norm:              75944.013 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2019.716 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     89165.726 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.677 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 35605.444 ops/s
[info]                  ·gc.alloc.rate:               1718.515 MB/sec
[info]                  ·gc.alloc.rate.norm:          75944.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1348.609 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 59597.254 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 35145.300 ops/s
[info]                  ·gc.alloc.rate:                   1695.861 MB/sec
[info]                  ·gc.alloc.rate.norm:              75944.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2025.368 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     90699.989 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.661 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson":
[info]   35458.592 ±(99.9%) 756.978 ops/s [Average]
[info]   (min, avg, max) = (35145.300, 35458.592, 35644.779), stdev = 196.585
[info]   CI (99.9%): [34701.614, 36215.569] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1711.137 ±(99.9%) 37.093 MB/sec [Average]
[info]   (min, avg, max) = (1695.861, 1711.137, 1720.228), stdev = 9.633
[info]   CI (99.9%): [1674.044, 1748.230] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   75944.012 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (75944.012, 75944.012, 75944.013), stdev = 0.001
[info]   CI (99.9%): [75944.011, 75944.014] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1749.946 ±(99.9%) 1419.680 MB/sec [Average]
[info]   (min, avg, max) = (1343.604, 1749.946, 2025.368), stdev = 368.686
[info]   CI (99.9%): [330.266, 3169.626] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   77692.373 ±(99.9%) 63545.115 B/op [Average]
[info]   (min, avg, max) = (59597.254, 77692.373, 90699.989), stdev = 16502.465
[info]   CI (99.9%): [14147.258, 141237.488] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.154 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.058, 0.104), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.212] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   2.592 ±(99.9%) 6.878 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.592, 4.661), stdev = 1.786
[info]   CI (99.9%): [≈ 0, 9.470] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 6.000), stdev = 1.342
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 50.20% complete, ETA 01:06:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 113754.017 ops/s
[info] # Warmup Iteration   2: 120002.059 ops/s
[info] # Warmup Iteration   3: 122204.494 ops/s
[info] # Warmup Iteration   4: 122676.093 ops/s
[info] # Warmup Iteration   5: 122275.622 ops/s
[info] Iteration   1: 122793.172 ops/s
[info]                  ·gc.alloc.rate:                   1102.271 MB/sec
[info]                  ·gc.alloc.rate.norm:              14128.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.904 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17276.339 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.267 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 122502.266 ops/s
[info]                  ·gc.alloc.rate:               1099.644 MB/sec
[info]                  ·gc.alloc.rate.norm:          14128.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.793 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8656.758 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 122510.132 ops/s
[info]                  ·gc.alloc.rate:                   1099.769 MB/sec
[info]                  ·gc.alloc.rate.norm:              14128.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.240 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17319.954 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.802 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 117979.057 ops/s
[info]                  ·gc.alloc.rate:                   1059.017 MB/sec
[info]                  ·gc.alloc.rate.norm:              14128.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.889 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17995.088 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.555 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 122724.709 ops/s
[info]                  ·gc.alloc.rate:               1101.761 MB/sec
[info]                  ·gc.alloc.rate.norm:          14128.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:      674.852 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8653.703 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeUPickle":
[info]   121701.867 ±(99.9%) 8028.938 ops/s [Average]
[info]   (min, avg, max) = (117979.057, 121701.867, 122793.172), stdev = 2085.090
[info]   CI (99.9%): [113672.929, 129730.805] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeUPickle:·gc.alloc.rate":
[info]   1092.492 ±(99.9%) 72.198 MB/sec [Average]
[info]   (min, avg, max) = (1059.017, 1092.492, 1102.271), stdev = 18.750
[info]   CI (99.9%): [1020.294, 1164.690] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeUPickle:·gc.alloc.rate.norm":
[info]   14128.004 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (14128.004, 14128.004, 14128.004), stdev = 0.001
[info]   CI (99.9%): [14128.003, 14128.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space":
[info]   1078.736 ±(99.9%) 1421.571 MB/sec [Average]
[info]   (min, avg, max) = (673.793, 1078.736, 1348.889), stdev = 369.177
[info]   CI (99.9%): [≈ 0, 2500.306] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   13980.368 ±(99.9%) 18750.739 B/op [Average]
[info]   (min, avg, max) = (8653.703, 13980.368, 17995.088), stdev = 4869.507
[info]   CI (99.9%): [≈ 0, 32731.108] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.129] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   0.325 ±(99.9%) 1.355 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.325, 0.802), stdev = 0.352
[info]   CI (99.9%): [≈ 0, 1.680] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeUPickle:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeUPickle:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 0.837
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 50.40% complete, ETA 01:06:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 15007.570 ops/s
[info] # Warmup Iteration   2: 18774.637 ops/s
[info] # Warmup Iteration   3: 18827.439 ops/s
[info] # Warmup Iteration   4: 18924.734 ops/s
[info] # Warmup Iteration   5: 18932.835 ops/s
[info] Iteration   1: 18647.761 ops/s
[info]                  ·gc.alloc.rate:                   1957.221 MB/sec
[info]                  ·gc.alloc.rate.norm:              165176.032 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2020.745 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     170536.956 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.757 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 18953.224 ops/s
[info]                  ·gc.alloc.rate:                   1989.503 MB/sec
[info]                  ·gc.alloc.rate.norm:              165176.023 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2024.690 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     168097.403 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.643 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 18695.589 ops/s
[info]                  ·gc.alloc.rate:                   1962.131 MB/sec
[info]                  ·gc.alloc.rate.norm:              165176.025 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2027.716 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     170697.114 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.257 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 18752.987 ops/s
[info]                  ·gc.alloc.rate:                   1968.071 MB/sec
[info]                  ·gc.alloc.rate.norm:              165176.023 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2031.005 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     170457.892 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.241 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 18682.216 ops/s
[info]                  ·gc.alloc.rate:                   1961.399 MB/sec
[info]                  ·gc.alloc.rate.norm:              165176.023 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2033.701 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     171264.795 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.754 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce":
[info]   18746.355 ±(99.9%) 468.650 ops/s [Average]
[info]   (min, avg, max) = (18647.761, 18746.355, 18953.224), stdev = 121.707
[info]   CI (99.9%): [18277.705, 19215.006] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:·gc.alloc.rate":
[info]   1967.665 ±(99.9%) 49.313 MB/sec [Average]
[info]   (min, avg, max) = (1957.221, 1967.665, 1989.503), stdev = 12.807
[info]   CI (99.9%): [1918.352, 2016.978] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   165176.025 ±(99.9%) 0.015 B/op [Average]
[info]   (min, avg, max) = (165176.023, 165176.025, 165176.032), stdev = 0.004
[info]   CI (99.9%): [165176.010, 165176.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2027.571 ±(99.9%) 19.661 MB/sec [Average]
[info]   (min, avg, max) = (2020.745, 2027.571, 2033.701), stdev = 5.106
[info]   CI (99.9%): [2007.910, 2047.232] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   170210.832 ±(99.9%) 4708.696 B/op [Average]
[info]   (min, avg, max) = (168097.403, 170210.832, 171264.795), stdev = 1222.833
[info]   CI (99.9%): [165502.136, 174919.528] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.104), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.188] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   4.530 ±(99.9%) 11.118 B/op [Average]
[info]   (min, avg, max) = (1.754, 4.530, 8.643), stdev = 2.887
[info]   CI (99.9%): [≈ 0, 15.649] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 50.60% complete, ETA 01:05:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 67432.835 ops/s
[info] # Warmup Iteration   2: 96602.094 ops/s
[info] # Warmup Iteration   3: 97502.506 ops/s
[info] # Warmup Iteration   4: 97651.192 ops/s
[info] # Warmup Iteration   5: 97482.659 ops/s
[info] Iteration   1: 94591.752 ops/s
[info]                  ·gc.alloc.rate:                   1241.463 MB/sec
[info]                  ·gc.alloc.rate.norm:              20656.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.329 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22234.427 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.732 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 97390.546 ops/s
[info]                  ·gc.alloc.rate:                   1278.213 MB/sec
[info]                  ·gc.alloc.rate.norm:              20656.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.640 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21616.350 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.673 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 97640.352 ops/s
[info]                  ·gc.alloc.rate:                   1281.511 MB/sec
[info]                  ·gc.alloc.rate.norm:              20656.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.616 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21592.561 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.342 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 95242.932 ops/s
[info]                  ·gc.alloc.rate:                   1249.947 MB/sec
[info]                  ·gc.alloc.rate.norm:              20656.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.914 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22159.293 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.344 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 95065.584 ops/s
[info]                  ·gc.alloc.rate:                   1247.633 MB/sec
[info]                  ·gc.alloc.rate.norm:              20656.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          671.780 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11122.096 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.345 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala":
[info]   95986.233 ±(99.9%) 5463.599 ops/s [Average]
[info]   (min, avg, max) = (94591.752, 95986.233, 97640.352), stdev = 1418.879
[info]   CI (99.9%): [90522.634, 101449.832] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1259.753 ±(99.9%) 71.826 MB/sec [Average]
[info]   (min, avg, max) = (1241.463, 1259.753, 1281.511), stdev = 18.653
[info]   CI (99.9%): [1187.927, 1331.580] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   20656.005 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (20656.004, 20656.005, 20656.005), stdev = 0.001
[info]   CI (99.9%): [20656.004, 20656.005] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1205.256 ±(99.9%) 1148.367 MB/sec [Average]
[info]   (min, avg, max) = (671.780, 1205.256, 1340.914), stdev = 298.227
[info]   CI (99.9%): [56.889, 2353.623] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   19744.946 ±(99.9%) 18596.653 B/op [Average]
[info]   (min, avg, max) = (11122.096, 19744.946, 22234.427), stdev = 4829.492
[info]   CI (99.9%): [1148.292, 38341.599] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.146 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.104), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.887 ±(99.9%) 2.402 B/op [Average]
[info]   (min, avg, max) = (0.344, 0.887, 1.732), stdev = 0.624
[info]   CI (99.9%): [≈ 0, 3.289] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 50.80% complete, ETA 01:05:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 267838.281 ops/s
[info] # Warmup Iteration   2: 280677.411 ops/s
[info] # Warmup Iteration   3: 278293.321 ops/s
[info] # Warmup Iteration   4: 282304.605 ops/s
[info] # Warmup Iteration   5: 282563.939 ops/s
[info] Iteration   1: 281380.967 ops/s
[info]                  ·gc.alloc.rate:               915.376 MB/sec
[info]                  ·gc.alloc.rate.norm:          5120.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.477 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3766.977 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 278073.872 ops/s
[info]                  ·gc.alloc.rate:                   905.095 MB/sec
[info]                  ·gc.alloc.rate.norm:              5120.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.846 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7613.274 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.235 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 280493.333 ops/s
[info]                  ·gc.alloc.rate:               912.649 MB/sec
[info]                  ·gc.alloc.rate.norm:          5120.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.596 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3778.901 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   4: 282567.207 ops/s
[info]                  ·gc.alloc.rate:                   919.213 MB/sec
[info]                  ·gc.alloc.rate.norm:              5120.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.452 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3751.116 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.232 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 281856.762 ops/s
[info]                  ·gc.alloc.rate:                   916.990 MB/sec
[info]                  ·gc.alloc.rate.norm:              5120.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.759 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7525.193 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.349 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala":
[info]   280874.428 ±(99.9%) 6690.434 ops/s [Average]
[info]   (min, avg, max) = (278073.872, 280874.428, 282567.207), stdev = 1737.484
[info]   CI (99.9%): [274183.994, 287564.862] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   913.865 ±(99.9%) 21.007 MB/sec [Average]
[info]   (min, avg, max) = (905.095, 913.865, 919.213), stdev = 5.455
[info]   CI (99.9%): [892.858, 934.871] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   5120.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5120.002, 5120.002, 5120.002), stdev = 0.001
[info]   CI (99.9%): [5120.001, 5120.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   942.826 ±(99.9%) 1420.037 MB/sec [Average]
[info]   (min, avg, max) = (673.452, 942.826, 1347.759), stdev = 368.779
[info]   CI (99.9%): [≈ 0, 2362.863] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   5287.092 ±(99.9%) 8023.034 B/op [Average]
[info]   (min, avg, max) = (3751.116, 5287.092, 7613.274), stdev = 2083.556
[info]   CI (99.9%): [≈ 0, 13310.127] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.108 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.137] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.163 ±(99.9%) 0.602 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.163, 0.349), stdev = 0.156
[info]   CI (99.9%): [≈ 0, 0.765] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 0.837
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 51.00% complete, ETA 01:05:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 10417.744 ops/s
[info] # Warmup Iteration   2: 16422.451 ops/s
[info] # Warmup Iteration   3: 16807.662 ops/s
[info] # Warmup Iteration   4: 16861.371 ops/s
[info] # Warmup Iteration   5: 17068.316 ops/s
[info] Iteration   1: 17139.754 ops/s
[info]                  ·gc.alloc.rate:                   2207.727 MB/sec
[info]                  ·gc.alloc.rate.norm:              202704.027 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2015.000 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     185008.640 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.735 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 16990.490 ops/s
[info]                  ·gc.alloc.rate:                   2188.968 MB/sec
[info]                  ·gc.alloc.rate.norm:              202704.035 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2693.747 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     249447.919 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.642 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 17052.896 ops/s
[info]                  ·gc.alloc.rate:                   2196.339 MB/sec
[info]                  ·gc.alloc.rate.norm:              202704.025 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2024.372 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     186832.931 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.764 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 16830.538 ops/s
[info]                  ·gc.alloc.rate:                   2167.754 MB/sec
[info]                  ·gc.alloc.rate.norm:              202704.026 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2028.039 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     189639.398 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.786 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 17093.692 ops/s
[info]                  ·gc.alloc.rate:                   2201.593 MB/sec
[info]                  ·gc.alloc.rate.norm:              202704.027 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2030.559 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     186956.599 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.916 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson":
[info]   17021.474 ±(99.9%) 462.114 ops/s [Average]
[info]   (min, avg, max) = (16830.538, 17021.474, 17139.754), stdev = 120.010
[info]   CI (99.9%): [16559.360, 17483.588] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2192.476 ±(99.9%) 59.470 MB/sec [Average]
[info]   (min, avg, max) = (2167.754, 2192.476, 2207.727), stdev = 15.444
[info]   CI (99.9%): [2133.006, 2251.947] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   202704.028 ±(99.9%) 0.015 B/op [Average]
[info]   (min, avg, max) = (202704.025, 202704.028, 202704.035), stdev = 0.004
[info]   CI (99.9%): [202704.013, 202704.043] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2158.343 ±(99.9%) 1152.722 MB/sec [Average]
[info]   (min, avg, max) = (2015.000, 2158.343, 2693.747), stdev = 299.358
[info]   CI (99.9%): [1005.622, 3311.065] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   199577.097 ±(99.9%) 107538.968 B/op [Average]
[info]   (min, avg, max) = (185008.640, 199577.097, 249447.919), stdev = 27927.528
[info]   CI (99.9%): [92038.130, 307116.065] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.119 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.067, 0.104), stdev = 0.031
[info]   CI (99.9%): [≈ 0, 0.186] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   6.169 ±(99.9%) 11.079 B/op [Average]
[info]   (min, avg, max) = (1.916, 6.169, 9.642), stdev = 2.877
[info]   CI (99.9%): [≈ 0, 17.247] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 4.000), stdev = 0.837
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 51.20% complete, ETA 01:05:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 13573.284 ops/s
[info] # Warmup Iteration   2: 15238.874 ops/s
[info] # Warmup Iteration   3: 15562.979 ops/s
[info] # Warmup Iteration   4: 15631.211 ops/s
[info] # Warmup Iteration   5: 15576.333 ops/s
[info] Iteration   1: 15360.671 ops/s
[info]                  ·gc.alloc.rate:                   1563.771 MB/sec
[info]                  ·gc.alloc.rate.norm:              160152.028 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.219 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     138178.879 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.399 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 15280.993 ops/s
[info]                  ·gc.alloc.rate:                   1554.973 MB/sec
[info]                  ·gc.alloc.rate.norm:              160152.039 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.317 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     138970.797 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.432 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 15457.408 ops/s
[info]                  ·gc.alloc.rate:                   1572.756 MB/sec
[info]                  ·gc.alloc.rate.norm:              160133.196 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.281 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     137481.472 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.598 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 15513.598 ops/s
[info]                  ·gc.alloc.rate:               1579.016 MB/sec
[info]                  ·gc.alloc.rate.norm:          160128.028 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2028.541 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 205714.446 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 15392.120 ops/s
[info]                  ·gc.alloc.rate:                   1566.102 MB/sec
[info]                  ·gc.alloc.rate.norm:              160128.028 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1353.532 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     138393.507 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.642 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readUPickle":
[info]   15400.958 ±(99.9%) 344.235 ops/s [Average]
[info]   (min, avg, max) = (15280.993, 15400.958, 15513.598), stdev = 89.397
[info]   CI (99.9%): [15056.723, 15745.193] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readUPickle:·gc.alloc.rate":
[info]   1567.324 ±(99.9%) 35.127 MB/sec [Average]
[info]   (min, avg, max) = (1554.973, 1567.324, 1579.016), stdev = 9.122
[info]   CI (99.9%): [1532.197, 1602.450] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readUPickle:·gc.alloc.rate.norm":
[info]   160138.664 ±(99.9%) 47.693 B/op [Average]
[info]   (min, avg, max) = (160128.028, 160138.664, 160152.039), stdev = 12.386
[info]   CI (99.9%): [160090.971, 160186.357] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readUPickle:·gc.churn.PS_Eden_Space":
[info]   1486.178 ±(99.9%) 1167.498 MB/sec [Average]
[info]   (min, avg, max) = (1349.219, 1486.178, 2028.541), stdev = 303.196
[info]   CI (99.9%): [318.680, 2653.676] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   151747.820 ±(99.9%) 116185.350 B/op [Average]
[info]   (min, avg, max) = (137481.472, 151747.820, 205714.446), stdev = 30172.966
[info]   CI (99.9%): [35562.470, 267933.170] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.164 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.067, 0.104), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.231] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   6.814 ±(99.9%) 16.753 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 6.814, 10.642), stdev = 4.351
[info]   CI (99.9%): [≈ 0, 23.567] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readUPickle:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readUPickle:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 3.000), stdev = 0.837
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 51.41% complete, ETA 01:04:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 14707.401 ops/s
[info] # Warmup Iteration   2: 20953.387 ops/s
[info] # Warmup Iteration   3: 20877.842 ops/s
[info] # Warmup Iteration   4: 21004.355 ops/s
[info] # Warmup Iteration   5: 20965.535 ops/s
[info] Iteration   1: 20696.374 ops/s
[info]                  ·gc.alloc.rate:                   1674.994 MB/sec
[info]                  ·gc.alloc.rate.norm:              127374.499 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.589 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     102096.856 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.166 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 21128.096 ops/s
[info]                  ·gc.alloc.rate:                   1709.630 MB/sec
[info]                  ·gc.alloc.rate.norm:              127352.020 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2016.693 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     150225.433 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.203 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 21101.366 ops/s
[info]                  ·gc.alloc.rate:                   1707.491 MB/sec
[info]                  ·gc.alloc.rate.norm:              127352.020 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2021.409 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     150765.405 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.553 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 21149.046 ops/s
[info]                  ·gc.alloc.rate:               1711.339 MB/sec
[info]                  ·gc.alloc.rate.norm:          127352.020 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1349.577 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 100430.907 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 21146.315 ops/s
[info]                  ·gc.alloc.rate:                   1711.012 MB/sec
[info]                  ·gc.alloc.rate.norm:              127352.020 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2026.501 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     150834.120 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.197 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce":
[info]   21044.240 ±(99.9%) 752.379 ops/s [Average]
[info]   (min, avg, max) = (20696.374, 21044.240, 21149.046), stdev = 195.390
[info]   CI (99.9%): [20291.860, 21796.619] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1702.893 ±(99.9%) 60.339 MB/sec [Average]
[info]   (min, avg, max) = (1674.994, 1702.893, 1711.339), stdev = 15.670
[info]   CI (99.9%): [1642.554, 1763.232] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   127356.516 ±(99.9%) 38.710 B/op [Average]
[info]   (min, avg, max) = (127352.020, 127356.516, 127374.499), stdev = 10.053
[info]   CI (99.9%): [127317.806, 127395.226] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1751.354 ±(99.9%) 1424.679 MB/sec [Average]
[info]   (min, avg, max) = (1342.589, 1751.354, 2026.501), stdev = 369.985
[info]   CI (99.9%): [326.675, 3176.033] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   130870.544 ±(99.9%) 104100.259 B/op [Average]
[info]   (min, avg, max) = (100430.907, 130870.544, 150834.120), stdev = 27034.507
[info]   CI (99.9%): [26770.286, 234970.803] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.083), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   3.424 ±(99.9%) 10.668 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.424, 6.203), stdev = 2.770
[info]   CI (99.9%): [≈ 0, 14.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 51.61% complete, ETA 01:04:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 65857.775 ops/s
[info] # Warmup Iteration   2: 97057.327 ops/s
[info] # Warmup Iteration   3: 98702.403 ops/s
[info] # Warmup Iteration   4: 98211.706 ops/s
[info] # Warmup Iteration   5: 99250.399 ops/s
[info] Iteration   1: 99151.533 ops/s
[info]                  ·gc.alloc.rate:                   1358.273 MB/sec
[info]                  ·gc.alloc.rate.norm:              21560.025 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2004.105 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     31811.398 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.991 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 98965.852 ops/s
[info]                  ·gc.alloc.rate:                   1355.709 MB/sec
[info]                  ·gc.alloc.rate.norm:              21559.984 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.611 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21272.169 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.324 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 98651.758 ops/s
[info]                  ·gc.alloc.rate:               1351.439 MB/sec
[info]                  ·gc.alloc.rate.norm:          21560.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1339.597 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 21371.099 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 98941.423 ops/s
[info]                  ·gc.alloc.rate:                   1355.376 MB/sec
[info]                  ·gc.alloc.rate.norm:              21560.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.922 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21345.989 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.662 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 98832.838 ops/s
[info]                  ·gc.alloc.rate:                   1354.084 MB/sec
[info]                  ·gc.alloc.rate.norm:              21560.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.024 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21399.835 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.331 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala":
[info]   98908.681 ±(99.9%) 707.616 ops/s [Average]
[info]   (min, avg, max) = (98651.758, 98908.681, 99151.533), stdev = 183.766
[info]   CI (99.9%): [98201.064, 99616.297] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1354.976 ±(99.9%) 9.603 MB/sec [Average]
[info]   (min, avg, max) = (1351.439, 1354.976, 1358.273), stdev = 2.494
[info]   CI (99.9%): [1345.373, 1364.579] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   21560.004 ±(99.9%) 0.055 B/op [Average]
[info]   (min, avg, max) = (21559.984, 21560.004, 21560.025), stdev = 0.014
[info]   CI (99.9%): [21559.949, 21560.059] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1473.452 ±(99.9%) 1142.309 MB/sec [Average]
[info]   (min, avg, max) = (1337.611, 1473.452, 2004.105), stdev = 296.654
[info]   CI (99.9%): [331.143, 2615.761] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   23440.098 ±(99.9%) 18020.777 B/op [Average]
[info]   (min, avg, max) = (21272.169, 23440.098, 31811.398), stdev = 4679.939
[info]   CI (99.9%): [5419.321, 41460.875] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.127 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.083), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.662 ±(99.9%) 2.014 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.662, 1.324), stdev = 0.523
[info]   CI (99.9%): [≈ 0, 2.676] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 3.000), stdev = 0.707
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 51.81% complete, ETA 01:04:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 320470.588 ops/s
[info] # Warmup Iteration   2: 336079.495 ops/s
[info] # Warmup Iteration   3: 323494.954 ops/s
[info] # Warmup Iteration   4: 325975.032 ops/s
[info] # Warmup Iteration   5: 325816.878 ops/s
[info] Iteration   1: 325892.637 ops/s
[info]                  ·gc.alloc.rate:                   1039.013 MB/sec
[info]                  ·gc.alloc.rate.norm:              5016.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.060 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3249.304 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.101 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   2: 325898.581 ops/s
[info]                  ·gc.alloc.rate:                   1038.643 MB/sec
[info]                  ·gc.alloc.rate.norm:              5016.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.257 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6501.585 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.402 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 326113.486 ops/s
[info]                  ·gc.alloc.rate:               1039.351 MB/sec
[info]                  ·gc.alloc.rate.norm:          5016.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.491 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3250.327 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 323444.982 ops/s
[info]                  ·gc.alloc.rate:                   1030.816 MB/sec
[info]                  ·gc.alloc.rate.norm:              5016.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.267 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6555.869 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.304 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 325525.711 ops/s
[info]                  ·gc.alloc.rate:                   1037.825 MB/sec
[info]                  ·gc.alloc.rate.norm:              5016.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.173 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6511.136 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.201 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala":
[info]   325375.079 ±(99.9%) 4233.576 ops/s [Average]
[info]   (min, avg, max) = (323444.982, 325375.079, 326113.486), stdev = 1099.446
[info]   CI (99.9%): [321141.503, 329608.656] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1037.130 ±(99.9%) 13.766 MB/sec [Average]
[info]   (min, avg, max) = (1030.816, 1037.130, 1039.351), stdev = 3.575
[info]   CI (99.9%): [1023.363, 1050.896] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   5016.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5016.001, 5016.001, 5016.001), stdev = 0.001
[info]   CI (99.9%): [5016.001, 5016.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1077.449 ±(99.9%) 1420.730 MB/sec [Average]
[info]   (min, avg, max) = (673.060, 1077.449, 1347.267), stdev = 368.959
[info]   CI (99.9%): [≈ 0, 2498.180] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   5213.644 ±(99.9%) 6903.586 B/op [Average]
[info]   (min, avg, max) = (3249.304, 5213.644, 6555.869), stdev = 1792.839
[info]   CI (99.9%): [≈ 0, 12117.230] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.127 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.083), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.202 ±(99.9%) 0.613 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.202, 0.402), stdev = 0.159
[info]   CI (99.9%): [≈ 0, 0.815] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 0.837
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 52.01% complete, ETA 01:04:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 350904.125 ops/s
[info] # Warmup Iteration   2: 350967.053 ops/s
[info] # Warmup Iteration   3: 381074.107 ops/s
[info] # Warmup Iteration   4: 380843.246 ops/s
[info] # Warmup Iteration   5: 380523.480 ops/s
[info] Iteration   1: 380942.638 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 380761.848 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 381085.767 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 380923.168 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 380963.803 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc":
[info]   380935.445 ±(99.9%) 446.324 ops/s [Average]
[info]   (min, avg, max) = (380761.848, 380935.445, 381085.767), stdev = 115.909
[info]   CI (99.9%): [380489.121, 381381.769] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
[info]   CI (99.9%): [0.001, 0.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 52.21% complete, ETA 01:03:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 17930.100 ops/s
[info] # Warmup Iteration   2: 25398.960 ops/s
[info] # Warmup Iteration   3: 26022.293 ops/s
[info] # Warmup Iteration   4: 26272.641 ops/s
[info] # Warmup Iteration   5: 26097.452 ops/s
[info] Iteration   1: 26109.822 ops/s
[info]                  ·gc.alloc.rate:                   1779.909 MB/sec
[info]                  ·gc.alloc.rate.norm:              107287.940 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2012.368 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     121299.946 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.764 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 26191.179 ops/s
[info]                  ·gc.alloc.rate:                   1785.439 MB/sec
[info]                  ·gc.alloc.rate.norm:              107288.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2016.375 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     121165.046 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.254 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 26238.087 ops/s
[info]                  ·gc.alloc.rate:                   1788.705 MB/sec
[info]                  ·gc.alloc.rate.norm:              107288.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.577 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     80768.800 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.746 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 26206.002 ops/s
[info]                  ·gc.alloc.rate:                   1786.457 MB/sec
[info]                  ·gc.alloc.rate.norm:              107288.094 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2022.696 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     121475.755 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.001 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 25758.701 ops/s
[info]                  ·gc.alloc.rate:                   1755.909 MB/sec
[info]                  ·gc.alloc.rate.norm:              107287.939 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2027.013 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     123852.687 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.272 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson":
[info]   26100.758 ±(99.9%) 758.482 ops/s [Average]
[info]   (min, avg, max) = (25758.701, 26100.758, 26238.087), stdev = 196.975
[info]   CI (99.9%): [25342.277, 26859.240] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1779.284 ±(99.9%) 51.837 MB/sec [Average]
[info]   (min, avg, max) = (1755.909, 1779.284, 1788.705), stdev = 13.462
[info]   CI (99.9%): [1727.447, 1831.120] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   107288.001 ±(99.9%) 0.249 B/op [Average]
[info]   (min, avg, max) = (107287.939, 107288.001, 107288.094), stdev = 0.065
[info]   CI (99.9%): [107287.753, 107288.250] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1885.006 ±(99.9%) 1159.212 MB/sec [Average]
[info]   (min, avg, max) = (1346.577, 1885.006, 2027.013), stdev = 301.044
[info]   CI (99.9%): [725.794, 3044.218] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   113712.447 ±(99.9%) 71041.215 B/op [Average]
[info]   (min, avg, max) = (80768.800, 113712.447, 123852.687), stdev = 18449.178
[info]   CI (99.9%): [42671.231, 184753.662] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.119 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.067, 0.104), stdev = 0.031
[info]   CI (99.9%): [≈ 0, 0.186] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   4.007 ±(99.9%) 7.112 B/op [Average]
[info]   (min, avg, max) = (1.272, 4.007, 6.254), stdev = 1.847
[info]   CI (99.9%): [≈ 0, 11.120] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 4.000), stdev = 0.894
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 52.41% complete, ETA 01:03:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7318.260 ops/s
[info] # Warmup Iteration   2: 8003.325 ops/s
[info] # Warmup Iteration   3: 7964.456 ops/s
[info] # Warmup Iteration   4: 8010.477 ops/s
[info] # Warmup Iteration   5: 8023.306 ops/s
[info] Iteration   1: 7983.462 ops/s
[info]                  ·gc.alloc.rate:                   819.106 MB/sec
[info]                  ·gc.alloc.rate.norm:              161472.054 B/op
[info]                  ·gc.churn.PS_Eden_Space:          674.386 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     132943.050 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.206 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 7976.478 ops/s
[info]                  ·gc.alloc.rate:               818.607 MB/sec
[info]                  ·gc.alloc.rate.norm:          161472.058 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1348.635 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 266021.287 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 8061.398 ops/s
[info]                  ·gc.alloc.rate:                   827.387 MB/sec
[info]                  ·gc.alloc.rate.norm:              161472.054 B/op
[info]                  ·gc.churn.PS_Eden_Space:          674.365 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     131608.447 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.192 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 8013.161 ops/s
[info]                  ·gc.alloc.rate:               822.497 MB/sec
[info]                  ·gc.alloc.rate.norm:          161472.054 B/op
[info]                  ·gc.churn.PS_Eden_Space:      674.395 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 132396.620 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   5: 7995.455 ops/s
[info]                  ·gc.alloc.rate:                   820.609 MB/sec
[info]                  ·gc.alloc.rate.norm:              161472.054 B/op
[info]                  ·gc.churn.PS_Eden_Space:          674.361 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     132694.624 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.098 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeUPickle":
[info]   8005.991 ±(99.9%) 130.737 ops/s [Average]
[info]   (min, avg, max) = (7976.478, 8005.991, 8061.398), stdev = 33.952
[info]   CI (99.9%): [7875.254, 8136.728] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeUPickle:·gc.alloc.rate":
[info]   821.641 ±(99.9%) 13.675 MB/sec [Average]
[info]   (min, avg, max) = (818.607, 821.641, 827.387), stdev = 3.551
[info]   CI (99.9%): [807.966, 835.317] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeUPickle:·gc.alloc.rate.norm":
[info]   161472.055 ±(99.9%) 0.007 B/op [Average]
[info]   (min, avg, max) = (161472.054, 161472.055, 161472.058), stdev = 0.002
[info]   CI (99.9%): [161472.047, 161472.062] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space":
[info]   809.228 ±(99.9%) 1161.113 MB/sec [Average]
[info]   (min, avg, max) = (674.361, 809.228, 1348.635), stdev = 301.537
[info]   CI (99.9%): [≈ 0, 1970.341] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   159132.806 ±(99.9%) 230093.632 B/op [Average]
[info]   (min, avg, max) = (131608.447, 159132.806, 266021.287), stdev = 59754.585
[info]   CI (99.9%): [≈ 0, 389226.438] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.130] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   4.899 ±(99.9%) 20.446 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4.899, 12.192), stdev = 5.310
[info]   CI (99.9%): [≈ 0, 25.345] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeUPickle:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeUPickle:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 0.707
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 52.61% complete, ETA 01:03:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 17914.628 ops/s
[info] # Warmup Iteration   2: 23754.082 ops/s
[info] # Warmup Iteration   3: 24122.608 ops/s
[info] # Warmup Iteration   4: 24190.622 ops/s
[info] # Warmup Iteration   5: 24156.594 ops/s
[info] Iteration   1: 24218.394 ops/s
[info]                  ·gc.alloc.rate:               1297.923 MB/sec
[info]                  ·gc.alloc.rate.norm:          84328.019 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1343.918 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 87316.398 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 23941.912 ops/s
[info]                  ·gc.alloc.rate:                   1283.179 MB/sec
[info]                  ·gc.alloc.rate.norm:              84328.018 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.688 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     88370.281 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.474 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 23980.664 ops/s
[info]                  ·gc.alloc.rate:                   1284.983 MB/sec
[info]                  ·gc.alloc.rate.norm:              84328.018 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.721 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     88314.023 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.465 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 23516.367 ops/s
[info]                  ·gc.alloc.rate:                   1260.030 MB/sec
[info]                  ·gc.alloc.rate.norm:              84328.018 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.897 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     90141.604 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.573 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 24202.132 ops/s
[info]                  ·gc.alloc.rate:               1296.748 MB/sec
[info]                  ·gc.alloc.rate.norm:          84328.018 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1348.141 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 87670.102 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce":
[info]   23971.894 ±(99.9%) 1092.953 ops/s [Average]
[info]   (min, avg, max) = (23516.367, 23971.894, 24218.394), stdev = 283.837
[info]   CI (99.9%): [22878.941, 25064.847] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:·gc.alloc.rate":
[info]   1284.573 ±(99.9%) 58.744 MB/sec [Average]
[info]   (min, avg, max) = (1260.030, 1284.573, 1297.923), stdev = 15.256
[info]   CI (99.9%): [1225.829, 1343.317] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   84328.018 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (84328.018, 84328.018, 84328.019), stdev = 0.001
[info]   CI (99.9%): [84328.016, 84328.020] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1345.873 ±(99.9%) 6.512 MB/sec [Average]
[info]   (min, avg, max) = (1343.918, 1345.873, 1348.141), stdev = 1.691
[info]   CI (99.9%): [1339.361, 1352.385] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   88362.481 ±(99.9%) 4192.327 B/op [Average]
[info]   (min, avg, max) = (87316.398, 88362.481, 90141.604), stdev = 1088.734
[info]   CI (99.9%): [84170.154, 92554.808] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.176 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.083), stdev = 0.046
[info]   CI (99.9%): [≈ 0, 0.226] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   3.302 ±(99.9%) 11.609 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.302, 5.573), stdev = 3.015
[info]   CI (99.9%): [≈ 0, 14.911] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 3.000), stdev = 0.837
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 52.81% complete, ETA 01:03:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 17738.568 ops/s
[info] # Warmup Iteration   2: 27432.690 ops/s
[info] # Warmup Iteration   3: 27591.074 ops/s
[info] # Warmup Iteration   4: 27858.126 ops/s
[info] # Warmup Iteration   5: 27928.886 ops/s
[info] Iteration   1: 28066.902 ops/s
[info]                  ·gc.alloc.rate:               1117.117 MB/sec
[info]                  ·gc.alloc.rate.norm:          62640.015 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.127 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 37463.817 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 28034.736 ops/s
[info]                  ·gc.alloc.rate:                   1115.809 MB/sec
[info]                  ·gc.alloc.rate.norm:              62640.015 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.259 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     75015.815 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.012 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 27627.724 ops/s
[info]                  ·gc.alloc.rate:               1099.647 MB/sec
[info]                  ·gc.alloc.rate.norm:          62640.017 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1337.633 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 76196.599 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 28075.497 ops/s
[info]                  ·gc.alloc.rate:                   1117.430 MB/sec
[info]                  ·gc.alloc.rate.norm:              62640.015 B/op
[info]                  ·gc.churn.PS_Eden_Space:          669.836 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     37549.171 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.167 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 28055.783 ops/s
[info]                  ·gc.alloc.rate:                   1116.631 MB/sec
[info]                  ·gc.alloc.rate.norm:              62640.015 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.335 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     75189.241 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.168 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala":
[info]   27972.128 ±(99.9%) 743.680 ops/s [Average]
[info]   (min, avg, max) = (27627.724, 27972.128, 28075.497), stdev = 193.131
[info]   CI (99.9%): [27228.448, 28715.809] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1113.327 ±(99.9%) 29.541 MB/sec [Average]
[info]   (min, avg, max) = (1099.647, 1113.327, 1117.430), stdev = 7.672
[info]   CI (99.9%): [1083.786, 1142.868] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   62640.016 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (62640.015, 62640.016, 62640.017), stdev = 0.001
[info]   CI (99.9%): [62640.013, 62640.018] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1070.438 ±(99.9%) 1411.190 MB/sec [Average]
[info]   (min, avg, max) = (668.127, 1070.438, 1340.335), stdev = 366.481
[info]   CI (99.9%): [≈ 0, 2481.628] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   60282.928 ±(99.9%) 80081.281 B/op [Average]
[info]   (min, avg, max) = (37463.817, 60282.928, 76196.599), stdev = 20796.854
[info]   CI (99.9%): [≈ 0, 140364.209] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.201 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.125), stdev = 0.052
[info]   CI (99.9%): [≈ 0, 0.234] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.869 ±(99.9%) 11.295 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.869, 7.012), stdev = 2.933
[info]   CI (99.9%): [≈ 0, 13.165] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 53.01% complete, ETA 01:02:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 483448.867 ops/s
[info] # Warmup Iteration   2: 512690.443 ops/s
[info] # Warmup Iteration   3: 507665.514 ops/s
[info] # Warmup Iteration   4: 517454.183 ops/s
[info] # Warmup Iteration   5: 517720.040 ops/s
[info] Iteration   1: 517783.824 ops/s
[info]                  ·gc.alloc.rate:                   1347.711 MB/sec
[info]                  ·gc.alloc.rate.norm:              4096.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.750 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4093.081 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.127 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 509436.287 ops/s
[info]                  ·gc.alloc.rate:                   1326.244 MB/sec
[info]                  ·gc.alloc.rate.norm:              4096.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.718 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4162.323 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.257 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 517269.013 ops/s
[info]                  ·gc.alloc.rate:               1346.222 MB/sec
[info]                  ·gc.alloc.rate.norm:          4096.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1348.332 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4102.421 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 519203.204 ops/s
[info]                  ·gc.alloc.rate:                   1351.266 MB/sec
[info]                  ·gc.alloc.rate.norm:              4096.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.692 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4091.228 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.252 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 517177.338 ops/s
[info]                  ·gc.alloc.rate:                   1345.923 MB/sec
[info]                  ·gc.alloc.rate.norm:              4096.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.931 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4111.244 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.127 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala":
[info]   516173.933 ±(99.9%) 14834.994 ops/s [Average]
[info]   (min, avg, max) = (509436.287, 516173.933, 519203.204), stdev = 3852.601
[info]   CI (99.9%): [501338.939, 531008.928] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1343.473 ±(99.9%) 37.978 MB/sec [Average]
[info]   (min, avg, max) = (1326.244, 1343.473, 1351.266), stdev = 9.863
[info]   CI (99.9%): [1305.495, 1381.451] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   4096.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4096.001, 4096.001, 4096.001), stdev = 0.001
[info]   CI (99.9%): [4096.001, 4096.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1348.685 ±(99.9%) 6.345 MB/sec [Average]
[info]   (min, avg, max) = (1346.750, 1348.685, 1350.931), stdev = 1.648
[info]   CI (99.9%): [1342.340, 1355.030] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   4112.059 ±(99.9%) 112.497 B/op [Average]
[info]   (min, avg, max) = (4091.228, 4112.059, 4162.323), stdev = 29.215
[info]   CI (99.9%): [3999.563, 4224.556] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.083), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.184] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.153 ±(99.9%) 0.411 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.153, 0.257), stdev = 0.107
[info]   CI (99.9%): [≈ 0, 0.564] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 53.21% complete, ETA 01:02:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 11171.060 ops/s
[info] # Warmup Iteration   2: 23822.340 ops/s
[info] # Warmup Iteration   3: 23699.433 ops/s
[info] # Warmup Iteration   4: 24215.398 ops/s
[info] # Warmup Iteration   5: 24375.612 ops/s
[info] Iteration   1: 24058.348 ops/s
[info]                  ·gc.alloc.rate:                   1813.425 MB/sec
[info]                  ·gc.alloc.rate.norm:              118632.018 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2004.417 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     131126.473 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.362 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 24122.188 ops/s
[info]                  ·gc.alloc.rate:                   1818.272 MB/sec
[info]                  ·gc.alloc.rate.norm:              118632.018 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2010.771 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     131191.522 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.149 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 24410.533 ops/s
[info]                  ·gc.alloc.rate:                   1840.517 MB/sec
[info]                  ·gc.alloc.rate.norm:              118632.018 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.296 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     86583.216 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.026 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 24235.859 ops/s
[info]                  ·gc.alloc.rate:                   1827.235 MB/sec
[info]                  ·gc.alloc.rate.norm:              118632.018 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2018.593 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     131055.778 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.407 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 24348.053 ops/s
[info]                  ·gc.alloc.rate:                   1835.571 MB/sec
[info]                  ·gc.alloc.rate.norm:              118632.019 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2023.722 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     130792.116 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.346 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson":
[info]   24234.996 ±(99.9%) 569.603 ops/s [Average]
[info]   (min, avg, max) = (24058.348, 24234.996, 24410.533), stdev = 147.924
[info]   CI (99.9%): [23665.394, 24804.599] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1827.004 ±(99.9%) 43.764 MB/sec [Average]
[info]   (min, avg, max) = (1813.425, 1827.004, 1840.517), stdev = 11.365
[info]   CI (99.9%): [1783.240, 1870.769] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   118632.018 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (118632.018, 118632.018, 118632.019), stdev = 0.001
[info]   CI (99.9%): [118632.016, 118632.020] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1880.160 ±(99.9%) 1155.989 MB/sec [Average]
[info]   (min, avg, max) = (1343.296, 1880.160, 2023.722), stdev = 300.207
[info]   CI (99.9%): [724.171, 3036.148] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   122149.821 ±(99.9%) 76562.029 B/op [Average]
[info]   (min, avg, max) = (86583.216, 122149.821, 131191.522), stdev = 19882.916
[info]   CI (99.9%): [45587.792, 198711.849] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.170 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.062, 0.125), stdev = 0.044
[info]   CI (99.9%): [≈ 0, 0.233] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   4.058 ±(99.9%) 11.091 B/op [Average]
[info]   (min, avg, max) = (1.346, 4.058, 8.149), stdev = 2.880
[info]   CI (99.9%): [≈ 0, 15.149] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.000, 4.000), stdev = 0.707
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 53.41% complete, ETA 01:02:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 20956.124 ops/s
[info] # Warmup Iteration   2: 25189.570 ops/s
[info] # Warmup Iteration   3: 25741.434 ops/s
[info] # Warmup Iteration   4: 25787.512 ops/s
[info] # Warmup Iteration   5: 25613.808 ops/s
[info] Iteration   1: 25190.388 ops/s
[info]                  ·gc.alloc.rate:               1235.848 MB/sec
[info]                  ·gc.alloc.rate.norm:          77176.017 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1346.231 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 84069.201 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 24297.345 ops/s
[info]                  ·gc.alloc.rate:                   1191.664 MB/sec
[info]                  ·gc.alloc.rate.norm:              77176.019 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.133 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     87244.699 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.697 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 26108.940 ops/s
[info]                  ·gc.alloc.rate:                   1280.349 MB/sec
[info]                  ·gc.alloc.rate.norm:              77176.017 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.623 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     81231.112 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.274 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 26213.510 ops/s
[info]                  ·gc.alloc.rate:               1285.637 MB/sec
[info]                  ·gc.alloc.rate.norm:          77176.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:      674.577 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 40494.439 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 26217.014 ops/s
[info]                  ·gc.alloc.rate:                   1285.552 MB/sec
[info]                  ·gc.alloc.rate.norm:              77176.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.524 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     81016.512 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.499 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readUPickle":
[info]   25605.439 ±(99.9%) 3267.757 ops/s [Average]
[info]   (min, avg, max) = (24297.345, 25605.439, 26217.014), stdev = 848.626
[info]   CI (99.9%): [22337.682, 28873.197] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readUPickle:·gc.alloc.rate":
[info]   1255.810 ±(99.9%) 159.807 MB/sec [Average]
[info]   (min, avg, max) = (1191.664, 1255.810, 1285.637), stdev = 41.501
[info]   CI (99.9%): [1096.003, 1415.617] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readUPickle:·gc.alloc.rate.norm":
[info]   77176.017 ±(99.9%) 0.004 B/op [Average]
[info]   (min, avg, max) = (77176.016, 77176.017, 77176.019), stdev = 0.001
[info]   CI (99.9%): [77176.013, 77176.021] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readUPickle:·gc.churn.PS_Eden_Space":
[info]   1213.018 ±(99.9%) 1159.044 MB/sec [Average]
[info]   (min, avg, max) = (674.577, 1213.018, 1349.524), stdev = 301.000
[info]   CI (99.9%): [53.974, 2372.062] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   74811.192 ±(99.9%) 74509.307 B/op [Average]
[info]   (min, avg, max) = (40494.439, 74811.192, 87244.699), stdev = 19349.830
[info]   CI (99.9%): [301.886, 149320.499] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.164 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.104), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.202] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   2.294 ±(99.9%) 9.924 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.294, 6.274), stdev = 2.577
[info]   CI (99.9%): [≈ 0, 12.218] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readUPickle:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readUPickle:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 53.61% complete, ETA 01:01:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 43285.930 ops/s
[info] # Warmup Iteration   2: 58373.797 ops/s
[info] # Warmup Iteration   3: 58425.019 ops/s
[info] # Warmup Iteration   4: 59066.390 ops/s
[info] # Warmup Iteration   5: 58874.078 ops/s
[info] Iteration   1: 59126.533 ops/s
[info]                  ·gc.alloc.rate:                   1639.467 MB/sec
[info]                  ·gc.alloc.rate.norm:              43640.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.318 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     35730.386 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.662 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 59073.110 ops/s
[info]                  ·gc.alloc.rate:                   1637.962 MB/sec
[info]                  ·gc.alloc.rate.norm:              43640.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.887 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     35804.991 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.555 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 58567.799 ops/s
[info]                  ·gc.alloc.rate:                   1624.050 MB/sec
[info]                  ·gc.alloc.rate.norm:              43640.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2018.804 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     54247.492 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.356 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 59009.757 ops/s
[info]                  ·gc.alloc.rate:                   1636.187 MB/sec
[info]                  ·gc.alloc.rate.norm:              43640.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.239 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     35959.908 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.666 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 58306.980 ops/s
[info]                  ·gc.alloc.rate:                   1617.167 MB/sec
[info]                  ·gc.alloc.rate.norm:              43640.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2026.539 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     54687.128 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.686 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce":
[info]   58816.836 ±(99.9%) 1389.410 ops/s [Average]
[info]   (min, avg, max) = (58306.980, 58816.836, 59126.533), stdev = 360.825
[info]   CI (99.9%): [57427.425, 60206.246] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1630.966 ±(99.9%) 37.862 MB/sec [Average]
[info]   (min, avg, max) = (1617.167, 1630.966, 1639.467), stdev = 9.833
[info]   CI (99.9%): [1593.104, 1668.829] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   43640.007 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (43640.007, 43640.007, 43640.008), stdev = 0.001
[info]   CI (99.9%): [43640.007, 43640.008] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1615.957 ±(99.9%) 1429.721 MB/sec [Average]
[info]   (min, avg, max) = (1342.318, 1615.957, 2026.539), stdev = 371.294
[info]   CI (99.9%): [186.236, 3045.679] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   43285.981 ±(99.9%) 39309.796 B/op [Average]
[info]   (min, avg, max) = (35730.386, 43285.981, 54687.128), stdev = 10208.629
[info]   CI (99.9%): [3976.185, 82595.776] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.067, 0.125), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.210] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   1.785 ±(99.9%) 3.861 B/op [Average]
[info]   (min, avg, max) = (0.555, 1.785, 3.356), stdev = 1.003
[info]   CI (99.9%): [≈ 0, 5.646] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 3.000), stdev = 0.707
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 53.82% complete, ETA 01:01:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 110978.840 ops/s
[info] # Warmup Iteration   2: 155461.208 ops/s
[info] # Warmup Iteration   3: 157159.551 ops/s
[info] # Warmup Iteration   4: 156437.626 ops/s
[info] # Warmup Iteration   5: 156780.855 ops/s
[info] Iteration   1: 155589.723 ops/s
[info]                  ·gc.alloc.rate:                   1381.693 MB/sec
[info]                  ·gc.alloc.rate.norm:              13976.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.953 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13523.449 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.632 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 153546.389 ops/s
[info]                  ·gc.alloc.rate:                   1363.504 MB/sec
[info]                  ·gc.alloc.rate.norm:              13976.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.613 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13720.867 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.427 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 156253.009 ops/s
[info]                  ·gc.alloc.rate:               1387.556 MB/sec
[info]                  ·gc.alloc.rate.norm:          13976.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1340.620 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 13503.239 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 157295.427 ops/s
[info]                  ·gc.alloc.rate:                   1397.401 MB/sec
[info]                  ·gc.alloc.rate.norm:              13976.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.171 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13433.626 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.208 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 154239.249 ops/s
[info]                  ·gc.alloc.rate:                   1369.636 MB/sec
[info]                  ·gc.alloc.rate.norm:              13976.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.544 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13719.959 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.212 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala":
[info]   155384.759 ±(99.9%) 5820.181 ops/s [Average]
[info]   (min, avg, max) = (153546.389, 155384.759, 157295.427), stdev = 1511.482
[info]   CI (99.9%): [149564.579, 161204.940] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1379.958 ±(99.9%) 52.455 MB/sec [Average]
[info]   (min, avg, max) = (1363.504, 1379.958, 1397.401), stdev = 13.622
[info]   CI (99.9%): [1327.503, 1432.414] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   13976.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (13976.003, 13976.003, 13976.003), stdev = 0.001
[info]   CI (99.9%): [13976.002, 13976.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1340.780 ±(99.9%) 12.063 MB/sec [Average]
[info]   (min, avg, max) = (1336.953, 1340.780, 1344.544), stdev = 3.133
[info]   CI (99.9%): [1328.717, 1352.844] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   13580.228 ±(99.9%) 509.200 B/op [Average]
[info]   (min, avg, max) = (13433.626, 13580.228, 13720.867), stdev = 132.238
[info]   CI (99.9%): [13071.027, 14089.428] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.296 ±(99.9%) 0.928 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.296, 0.632), stdev = 0.241
[info]   CI (99.9%): [≈ 0, 1.223] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 54.02% complete, ETA 01:01:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1301284.226 ops/s
[info] # Warmup Iteration   2: 1333576.759 ops/s
[info] # Warmup Iteration   3: 1369167.894 ops/s
[info] # Warmup Iteration   4: 1375882.218 ops/s
[info] # Warmup Iteration   5: 1369124.159 ops/s
[info] Iteration   1: 1376896.776 ops/s
[info]                  ·gc.alloc.rate:                   1140.879 MB/sec
[info]                  ·gc.alloc.rate.norm:              1304.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.696 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1538.102 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.024 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 1377325.014 ops/s
[info]                  ·gc.alloc.rate:                   1141.427 MB/sec
[info]                  ·gc.alloc.rate.norm:              1304.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.632 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1538.432 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.119 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 1377833.166 ops/s
[info]                  ·gc.alloc.rate:               1141.816 MB/sec
[info]                  ·gc.alloc.rate.norm:          1304.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.630 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 769.313 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 1375961.336 ops/s
[info]                  ·gc.alloc.rate:                   1140.014 MB/sec
[info]                  ·gc.alloc.rate.norm:              1304.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.579 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1541.423 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.048 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 1373428.184 ops/s
[info]                  ·gc.alloc.rate:                   1137.801 MB/sec
[info]                  ·gc.alloc.rate.norm:              1304.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.747 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1545.759 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.119 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala":
[info]   1376288.895 ±(99.9%) 6702.444 ops/s [Average]
[info]   (min, avg, max) = (1373428.184, 1376288.895, 1377833.166), stdev = 1740.603
[info]   CI (99.9%): [1369586.451, 1382991.339] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1140.387 ±(99.9%) 6.147 MB/sec [Average]
[info]   (min, avg, max) = (1137.801, 1140.387, 1141.816), stdev = 1.596
[info]   CI (99.9%): [1134.240, 1146.535] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1304.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1304.000, 1304.000, 1304.000), stdev = 0.001
[info]   CI (99.9%): [1304.000, 1304.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1212.457 ±(99.9%) 1159.874 MB/sec [Average]
[info]   (min, avg, max) = (673.630, 1212.457, 1348.747), stdev = 301.216
[info]   CI (99.9%): [52.583, 2372.331] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1386.606 ±(99.9%) 1328.823 B/op [Average]
[info]   (min, avg, max) = (769.313, 1386.606, 1545.759), stdev = 345.091
[info]   CI (99.9%): [57.783, 2715.429] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.185 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.104), stdev = 0.048
[info]   CI (99.9%): [≈ 0, 0.239] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.062 ±(99.9%) 0.211 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.062, 0.119), stdev = 0.055
[info]   CI (99.9%): [≈ 0, 0.273] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 54.22% complete, ETA 01:01:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1367567.291 ops/s
[info] # Warmup Iteration   2: 1470384.068 ops/s
[info] # Warmup Iteration   3: 1478832.598 ops/s
[info] # Warmup Iteration   4: 1478750.197 ops/s
[info] # Warmup Iteration   5: 1479544.172 ops/s
[info] Iteration   1: 1479290.873 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1479575.327 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1479627.479 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1483488.787 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1482932.714 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc":
[info]   1480983.036 ±(99.9%) 7882.690 ops/s [Average]
[info]   (min, avg, max) = (1479290.873, 1480983.036, 1483488.787), stdev = 2047.109
[info]   CI (99.9%): [1473100.346, 1488865.725] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 54.42% complete, ETA 01:00:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 87357.107 ops/s
[info] # Warmup Iteration   2: 142091.894 ops/s
[info] # Warmup Iteration   3: 143250.305 ops/s
[info] # Warmup Iteration   4: 143139.252 ops/s
[info] # Warmup Iteration   5: 142633.044 ops/s
[info] Iteration   1: 143191.068 ops/s
[info]                  ·gc.alloc.rate:                   1521.217 MB/sec
[info]                  ·gc.alloc.rate.norm:              16720.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1335.631 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14680.196 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.458 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 143018.979 ops/s
[info]                  ·gc.alloc.rate:                   1519.409 MB/sec
[info]                  ·gc.alloc.rate.norm:              16720.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.943 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14712.098 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.916 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 142861.316 ops/s
[info]                  ·gc.alloc.rate:                   1517.745 MB/sec
[info]                  ·gc.alloc.rate.norm:              16720.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.592 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14757.410 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.688 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 142832.745 ops/s
[info]                  ·gc.alloc.rate:                   1517.375 MB/sec
[info]                  ·gc.alloc.rate.norm:              16720.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2014.387 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22196.590 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.459 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 143174.866 ops/s
[info]                  ·gc.alloc.rate:                   1521.013 MB/sec
[info]                  ·gc.alloc.rate.norm:              16720.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.232 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14787.704 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.458 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson":
[info]   143015.795 ±(99.9%) 648.366 ops/s [Average]
[info]   (min, avg, max) = (142832.745, 143015.795, 143191.068), stdev = 168.379
[info]   CI (99.9%): [142367.429, 143664.161] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1519.352 ±(99.9%) 6.869 MB/sec [Average]
[info]   (min, avg, max) = (1517.375, 1519.352, 1521.217), stdev = 1.784
[info]   CI (99.9%): [1512.483, 1526.221] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   16720.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (16720.003, 16720.003, 16720.003), stdev = 0.001
[info]   CI (99.9%): [16720.003, 16720.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1474.357 ±(99.9%) 1162.541 MB/sec [Average]
[info]   (min, avg, max) = (1335.631, 1474.357, 2014.387), stdev = 301.908
[info]   CI (99.9%): [311.816, 2636.898] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   16226.800 ±(99.9%) 12851.405 B/op [Average]
[info]   (min, avg, max) = (14680.196, 16226.800, 22196.590), stdev = 3337.469
[info]   CI (99.9%): [3375.394, 29078.205] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.054, 0.083), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.126] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.596 ±(99.9%) 0.790 B/op [Average]
[info]   (min, avg, max) = (0.458, 0.596, 0.916), stdev = 0.205
[info]   CI (99.9%): [≈ 0, 1.385] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 54.62% complete, ETA 01:00:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 30093.500 ops/s
[info] # Warmup Iteration   2: 32989.625 ops/s
[info] # Warmup Iteration   3: 33218.948 ops/s
[info] # Warmup Iteration   4: 32733.248 ops/s
[info] # Warmup Iteration   5: 33317.707 ops/s
[info] Iteration   1: 33313.968 ops/s
[info]                  ·gc.alloc.rate:                   691.566 MB/sec
[info]                  ·gc.alloc.rate.norm:              32672.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.468 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     31816.991 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.626 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 76.816 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 33359.853 ops/s
[info]                  ·gc.alloc.rate:                   692.529 MB/sec
[info]                  ·gc.alloc.rate.norm:              32672.013 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.455 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     31772.173 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.946 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 33280.496 ops/s
[info]                  ·gc.alloc.rate:               690.876 MB/sec
[info]                  ·gc.alloc.rate.norm:          32672.013 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.816 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 31817.989 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   4: 33300.691 ops/s
[info]                  ·gc.alloc.rate:                   691.280 MB/sec
[info]                  ·gc.alloc.rate.norm:              32672.013 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.786 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     31797.927 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.984 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 33228.625 ops/s
[info]                  ·gc.alloc.rate:               689.784 MB/sec
[info]                  ·gc.alloc.rate.norm:          32672.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.744 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 31864.898 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeUPickle":
[info]   33296.726 ±(99.9%) 184.661 ops/s [Average]
[info]   (min, avg, max) = (33228.625, 33296.726, 33359.853), stdev = 47.956
[info]   CI (99.9%): [33112.065, 33481.388] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeUPickle:·gc.alloc.rate":
[info]   691.207 ±(99.9%) 3.858 MB/sec [Average]
[info]   (min, avg, max) = (689.784, 691.207, 692.529), stdev = 1.002
[info]   CI (99.9%): [687.349, 695.065] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeUPickle:·gc.alloc.rate.norm":
[info]   32672.013 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (32672.013, 32672.013, 32672.014), stdev = 0.001
[info]   CI (99.9%): [32672.011, 32672.015] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space":
[info]   673.054 ±(99.9%) 1.437 MB/sec [Average]
[info]   (min, avg, max) = (672.744, 673.054, 673.468), stdev = 0.373
[info]   CI (99.9%): [671.617, 674.491] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   31813.996 ±(99.9%) 130.912 B/op [Average]
[info]   (min, avg, max) = (31772.173, 31813.996, 31864.898), stdev = 33.997
[info]   CI (99.9%): [31683.084, 31944.908] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space":
[info]   0.342 ±(99.9%) 2.766 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.342, 1.626), stdev = 0.718
[info]   CI (99.9%): [≈ 0, 3.108] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   16.149 ±(99.9%) 130.672 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 16.149, 76.816), stdev = 33.935
[info]   CI (99.9%): [≈ 0, 146.821] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeUPickle:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeUPickle:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 1.000
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 54.82% complete, ETA 01:00:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 22150.721 ops/s
[info] # Warmup Iteration   2: 33904.012 ops/s
[info] # Warmup Iteration   3: 34483.947 ops/s
[info] # Warmup Iteration   4: 34582.628 ops/s
[info] # Warmup Iteration   5: 35328.504 ops/s
[info] Iteration   1: 35328.398 ops/s
[info]                  ·gc.alloc.rate:                   1268.173 MB/sec
[info]                  ·gc.alloc.rate.norm:              56496.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.246 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     59528.611 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.927 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 35348.800 ops/s
[info]                  ·gc.alloc.rate:                   1268.954 MB/sec
[info]                  ·gc.alloc.rate.norm:              56496.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.607 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     59552.568 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.707 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 35046.865 ops/s
[info]                  ·gc.alloc.rate:               1258.039 MB/sec
[info]                  ·gc.alloc.rate.norm:          56496.013 B/op
[info]                  ·gc.churn.PS_Eden_Space:      669.801 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 30079.401 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 34570.527 ops/s
[info]                  ·gc.alloc.rate:               1241.485 MB/sec
[info]                  ·gc.alloc.rate.norm:          56496.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1340.801 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 61015.557 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 35021.622 ops/s
[info]                  ·gc.alloc.rate:                   1257.178 MB/sec
[info]                  ·gc.alloc.rate.norm:              56496.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.304 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60321.485 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.936 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala":
[info]   35063.242 ±(99.9%) 1212.524 ops/s [Average]
[info]   (min, avg, max) = (34570.527, 35063.242, 35348.800), stdev = 314.889
[info]   CI (99.9%): [33850.719, 36275.766] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1258.766 ±(99.9%) 42.791 MB/sec [Average]
[info]   (min, avg, max) = (1241.485, 1258.766, 1268.954), stdev = 11.113
[info]   CI (99.9%): [1215.974, 1301.557] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   56496.013 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (56496.012, 56496.013, 56496.013), stdev = 0.001
[info]   CI (99.9%): [56496.011, 56496.014] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1205.352 ±(99.9%) 1152.852 MB/sec [Average]
[info]   (min, avg, max) = (669.801, 1205.352, 1342.304), stdev = 299.392
[info]   CI (99.9%): [52.500, 2358.203] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   54099.524 ±(99.9%) 51759.347 B/op [Average]
[info]   (min, avg, max) = (30079.401, 54099.524, 61015.557), stdev = 13441.738
[info]   CI (99.9%): [2340.177, 105858.871] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.083), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.157] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.114 ±(99.9%) 5.863 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.114, 3.707), stdev = 1.523
[info]   CI (99.9%): [≈ 0, 6.977] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 55.02% complete, ETA 01:00:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 507431.942 ops/s
[info] # Warmup Iteration   2: 543401.526 ops/s
[info] # Warmup Iteration   3: 536742.509 ops/s
[info] # Warmup Iteration   4: 539389.378 ops/s
[info] # Warmup Iteration   5: 542707.471 ops/s
[info] Iteration   1: 533564.784 ops/s
[info]                  ·gc.alloc.rate:               1041.775 MB/sec
[info]                  ·gc.alloc.rate.norm:          3072.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.030 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1984.641 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   2: 550959.593 ops/s
[info]                  ·gc.alloc.rate:                   1075.433 MB/sec
[info]                  ·gc.alloc.rate.norm:              3072.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.347 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3845.873 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.238 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 551510.949 ops/s
[info]                  ·gc.alloc.rate:                   1076.489 MB/sec
[info]                  ·gc.alloc.rate.norm:              3072.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.989 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3843.932 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.178 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 551322.771 ops/s
[info]                  ·gc.alloc.rate:               1076.367 MB/sec
[info]                  ·gc.alloc.rate.norm:          3072.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.974 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1923.551 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 538202.849 ops/s
[info]                  ·gc.alloc.rate:               1050.446 MB/sec
[info]                  ·gc.alloc.rate.norm:          3072.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1348.214 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3942.813 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala":
[info]   545112.189 ±(99.9%) 33056.670 ops/s [Average]
[info]   (min, avg, max) = (533564.784, 545112.189, 551510.949), stdev = 8584.712
[info]   CI (99.9%): [512055.519, 578168.859] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1064.102 ±(99.9%) 64.354 MB/sec [Average]
[info]   (min, avg, max) = (1041.775, 1064.102, 1076.489), stdev = 16.712
[info]   CI (99.9%): [999.748, 1128.456] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   3072.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3072.001, 3072.001, 3072.001), stdev = 0.001
[info]   CI (99.9%): [3072.001, 3072.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1077.711 ±(99.9%) 1420.853 MB/sec [Average]
[info]   (min, avg, max) = (673.030, 1077.711, 1348.214), stdev = 368.991
[info]   CI (99.9%): [≈ 0, 2498.564] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   3108.162 ±(99.9%) 4060.477 B/op [Average]
[info]   (min, avg, max) = (1923.551, 3108.162, 3942.813), stdev = 1054.493
[info]   CI (99.9%): [≈ 0, 7168.639] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.156 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.083), stdev = 0.041
[info]   CI (99.9%): [≈ 0, 0.185] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.083 ±(99.9%) 0.446 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.083, 0.238), stdev = 0.116
[info]   CI (99.9%): [≈ 0, 0.529] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 0.837
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 55.22% complete, ETA 00:59:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 11814.467 ops/s
[info] # Warmup Iteration   2: 25838.154 ops/s
[info] # Warmup Iteration   3: 26120.235 ops/s
[info] # Warmup Iteration   4: 25787.519 ops/s
[info] # Warmup Iteration   5: 25762.942 ops/s
[info] Iteration   1: 26189.399 ops/s
[info]                  ·gc.alloc.rate:                   1873.110 MB/sec
[info]                  ·gc.alloc.rate.norm:              112512.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2005.325 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     120453.737 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.753 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 26282.431 ops/s
[info]                  ·gc.alloc.rate:                   1879.002 MB/sec
[info]                  ·gc.alloc.rate.norm:              112512.018 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2010.768 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     120401.957 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.233 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 26045.293 ops/s
[info]                  ·gc.alloc.rate:                   1862.817 MB/sec
[info]                  ·gc.alloc.rate.norm:              112512.017 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2015.737 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     121748.171 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.032 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 26249.189 ops/s
[info]                  ·gc.alloc.rate:                   1876.570 MB/sec
[info]                  ·gc.alloc.rate.norm:              112512.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2020.424 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     121137.008 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.496 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 25970.900 ops/s
[info]                  ·gc.alloc.rate:               1856.522 MB/sec
[info]                  ·gc.alloc.rate.norm:          112512.017 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1349.204 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 81766.725 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson":
[info]   26147.442 ±(99.9%) 516.390 ops/s [Average]
[info]   (min, avg, max) = (25970.900, 26147.442, 26282.431), stdev = 134.105
[info]   CI (99.9%): [25631.052, 26663.832] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1869.604 ±(99.9%) 36.851 MB/sec [Average]
[info]   (min, avg, max) = (1856.522, 1869.604, 1879.002), stdev = 9.570
[info]   CI (99.9%): [1832.753, 1906.455] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   112512.017 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (112512.016, 112512.017, 112512.018), stdev = 0.001
[info]   CI (99.9%): [112512.015, 112512.019] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1880.292 ±(99.9%) 1143.410 MB/sec [Average]
[info]   (min, avg, max) = (1349.204, 1880.292, 2020.424), stdev = 296.940
[info]   CI (99.9%): [736.881, 3023.702] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   113101.520 ±(99.9%) 67483.963 B/op [Average]
[info]   (min, avg, max) = (81766.725, 113101.520, 121748.171), stdev = 17525.371
[info]   CI (99.9%): [45617.557, 180585.482] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.154 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.058, 0.104), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.213] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   3.503 ±(99.9%) 9.260 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.503, 6.233), stdev = 2.405
[info]   CI (99.9%): [≈ 0, 12.763] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.000, 4.000), stdev = 0.707
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 55.42% complete, ETA 00:59:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 23663.156 ops/s
[info] # Warmup Iteration   2: 28966.883 ops/s
[info] # Warmup Iteration   3: 29509.432 ops/s
[info] # Warmup Iteration   4: 29748.758 ops/s
[info] # Warmup Iteration   5: 29834.999 ops/s
[info] Iteration   1: 29870.714 ops/s
[info]                  ·gc.alloc.rate:                   1344.481 MB/sec
[info]                  ·gc.alloc.rate.norm:              70840.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.277 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     70934.631 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.484 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 29704.576 ops/s
[info]                  ·gc.alloc.rate:                   1337.616 MB/sec
[info]                  ·gc.alloc.rate.norm:              70840.015 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.840 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     71381.520 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.515 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 29106.906 ops/s
[info]                  ·gc.alloc.rate:               1310.180 MB/sec
[info]                  ·gc.alloc.rate.norm:          70840.015 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.823 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 36432.901 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 29728.963 ops/s
[info]                  ·gc.alloc.rate:                   1338.136 MB/sec
[info]                  ·gc.alloc.rate.norm:              70840.015 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.942 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     71412.067 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.204 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 29895.499 ops/s
[info]                  ·gc.alloc.rate:                   1346.011 MB/sec
[info]                  ·gc.alloc.rate.norm:              70840.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.499 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     71076.229 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.096 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readUPickle":
[info]   29661.332 ±(99.9%) 1236.572 ops/s [Average]
[info]   (min, avg, max) = (29106.906, 29661.332, 29895.499), stdev = 321.134
[info]   CI (99.9%): [28424.760, 30897.904] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readUPickle:·gc.alloc.rate":
[info]   1335.285 ±(99.9%) 55.916 MB/sec [Average]
[info]   (min, avg, max) = (1310.180, 1335.285, 1346.011), stdev = 14.521
[info]   CI (99.9%): [1279.369, 1391.201] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readUPickle:·gc.alloc.rate.norm":
[info]   70840.015 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (70840.014, 70840.015, 70840.016), stdev = 0.001
[info]   CI (99.9%): [70840.013, 70840.016] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readUPickle:·gc.churn.PS_Eden_Space":
[info]   1213.476 ±(99.9%) 1161.660 MB/sec [Average]
[info]   (min, avg, max) = (673.823, 1213.476, 1350.499), stdev = 301.679
[info]   CI (99.9%): [51.817, 2375.136] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   64247.470 ±(99.9%) 59878.021 B/op [Average]
[info]   (min, avg, max) = (36432.901, 64247.470, 71412.067), stdev = 15550.132
[info]   CI (99.9%): [4369.448, 124125.491] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.185 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.104), stdev = 0.048
[info]   CI (99.9%): [≈ 0, 0.239] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   2.860 ±(99.9%) 9.752 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.860, 5.515), stdev = 2.533
[info]   CI (99.9%): [≈ 0, 12.612] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readUPickle:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readUPickle:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 55.62% complete, ETA 00:59:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 170322.353 ops/s
[info] # Warmup Iteration   2: 237336.679 ops/s
[info] # Warmup Iteration   3: 234212.665 ops/s
[info] # Warmup Iteration   4: 237496.273 ops/s
[info] # Warmup Iteration   5: 236258.773 ops/s
[info] Iteration   1: 237456.405 ops/s
[info]                  ·gc.alloc.rate:                   660.230 MB/sec
[info]                  ·gc.alloc.rate.norm:              4376.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.790 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4426.113 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.161 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 14.325 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 238155.166 ops/s
[info]                  ·gc.alloc.rate:                   662.169 MB/sec
[info]                  ·gc.alloc.rate.norm:              4376.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.808 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4413.273 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.138 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 238951.007 ops/s
[info]                  ·gc.alloc.rate:                   664.500 MB/sec
[info]                  ·gc.alloc.rate.norm:              4376.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          668.247 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4400.675 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.137 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 237910.254 ops/s
[info]                  ·gc.alloc.rate:               661.499 MB/sec
[info]                  ·gc.alloc.rate.norm:          4376.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.150 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4420.002 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   5: 238290.517 ops/s
[info]                  ·gc.alloc.rate:                   662.533 MB/sec
[info]                  ·gc.alloc.rate.norm:              4376.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          668.122 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4412.917 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.137 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala":
[info]   238152.670 ±(99.9%) 2108.998 ops/s [Average]
[info]   (min, avg, max) = (237456.405, 238152.670, 238951.007), stdev = 547.700
[info]   CI (99.9%): [236043.672, 240261.668] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   662.186 ±(99.9%) 6.020 MB/sec [Average]
[info]   (min, avg, max) = (660.230, 662.186, 664.500), stdev = 1.563
[info]   CI (99.9%): [656.166, 668.206] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   4376.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4376.002, 4376.002, 4376.002), stdev = 0.001
[info]   CI (99.9%): [4376.002, 4376.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   668.023 ±(99.9%) 0.809 MB/sec [Average]
[info]   (min, avg, max) = (667.790, 668.023, 668.247), stdev = 0.210
[info]   CI (99.9%): [667.215, 668.832] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   4414.596 ±(99.9%) 36.542 B/op [Average]
[info]   (min, avg, max) = (4400.675, 4414.596, 4426.113), stdev = 9.490
[info]   CI (99.9%): [4378.054, 4451.138] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.445 ±(99.9%) 3.695 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.445, 2.161), stdev = 0.960
[info]   CI (99.9%): [≈ 0, 4.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.947 ±(99.9%) 24.492 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.947, 14.325), stdev = 6.360
[info]   CI (99.9%): [≈ 0, 27.439] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 0.707
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 55.82% complete, ETA 00:58:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1574628.523 ops/s
[info] # Warmup Iteration   2: 1606434.142 ops/s
[info] # Warmup Iteration   3: 1660885.279 ops/s
[info] # Warmup Iteration   4: 1663077.901 ops/s
[info] # Warmup Iteration   5: 1658297.364 ops/s
[info] Iteration   1: 1656663.050 ops/s
[info]                  ·gc.alloc.rate:                   968.382 MB/sec
[info]                  ·gc.alloc.rate.norm:              920.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.561 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1278.335 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 1659368.197 ops/s
[info]                  ·gc.alloc.rate:               969.997 MB/sec
[info]                  ·gc.alloc.rate.norm:          920.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.804 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 638.125 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 1624781.037 ops/s
[info]                  ·gc.alloc.rate:               949.775 MB/sec
[info]                  ·gc.alloc.rate.norm:          920.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.815 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 651.723 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 1651538.482 ops/s
[info]                  ·gc.alloc.rate:                   965.412 MB/sec
[info]                  ·gc.alloc.rate.norm:              920.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.974 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1283.615 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.060 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 1653503.978 ops/s
[info]                  ·gc.alloc.rate:               966.588 MB/sec
[info]                  ·gc.alloc.rate.norm:          920.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.835 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 641.357 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala":
[info]   1649170.949 ±(99.9%) 53749.376 ops/s [Average]
[info]   (min, avg, max) = (1624781.037, 1649170.949, 1659368.197), stdev = 13958.542
[info]   CI (99.9%): [1595421.573, 1702920.324] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   964.031 ±(99.9%) 31.413 MB/sec [Average]
[info]   (min, avg, max) = (949.775, 964.031, 969.997), stdev = 8.158
[info]   CI (99.9%): [932.618, 995.444] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   920.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (920.000, 920.000, 920.000), stdev = 0.001
[info]   CI (99.9%): [920.000, 920.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   942.398 ±(99.9%) 1419.662 MB/sec [Average]
[info]   (min, avg, max) = (672.804, 942.398, 1346.974), stdev = 368.682
[info]   CI (99.9%): [≈ 0, 2362.060] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   898.631 ±(99.9%) 1344.151 B/op [Average]
[info]   (min, avg, max) = (638.125, 898.631, 1283.615), stdev = 349.072
[info]   CI (99.9%): [≈ 0, 2242.782] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.016 ±(99.9%) 0.100 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.016, 0.060), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.115] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 56.02% complete, ETA 00:58:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1456867.836 ops/s
[info] # Warmup Iteration   2: 1542040.184 ops/s
[info] # Warmup Iteration   3: 1553089.177 ops/s
[info] # Warmup Iteration   4: 1553354.524 ops/s
[info] # Warmup Iteration   5: 1552108.486 ops/s
[info] Iteration   1: 1552376.191 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1552574.130 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1552634.510 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1557232.628 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1553520.089 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc":
[info]   1553667.510 ±(99.9%) 7858.963 ops/s [Average]
[info]   (min, avg, max) = (1552376.191, 1553667.510, 1557232.628), stdev = 2040.948
[info]   CI (99.9%): [1545808.546, 1561526.473] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 56.22% complete, ETA 00:58:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 102224.971 ops/s
[info] # Warmup Iteration   2: 178237.250 ops/s
[info] # Warmup Iteration   3: 179574.354 ops/s
[info] # Warmup Iteration   4: 180945.687 ops/s
[info] # Warmup Iteration   5: 181699.183 ops/s
[info] Iteration   1: 182024.109 ops/s
[info]                  ·gc.alloc.rate:                   1179.232 MB/sec
[info]                  ·gc.alloc.rate.norm:              10192.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.501 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11533.985 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.180 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 181042.064 ops/s
[info]                  ·gc.alloc.rate:                   1172.490 MB/sec
[info]                  ·gc.alloc.rate.norm:              10192.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1335.023 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11604.839 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.724 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 180343.210 ops/s
[info]                  ·gc.alloc.rate:               1167.925 MB/sec
[info]                  ·gc.alloc.rate.norm:          10192.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      667.819 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5827.780 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 181894.857 ops/s
[info]                  ·gc.alloc.rate:                   1178.018 MB/sec
[info]                  ·gc.alloc.rate.norm:              10192.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.700 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11573.547 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.720 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 181830.093 ops/s
[info]                  ·gc.alloc.rate:                   1177.981 MB/sec
[info]                  ·gc.alloc.rate.norm:              10192.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.129 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11594.917 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.721 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson":
[info]   181426.867 ±(99.9%) 2763.819 ops/s [Average]
[info]   (min, avg, max) = (180343.210, 181426.867, 182024.109), stdev = 717.755
[info]   CI (99.9%): [178663.047, 184190.686] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1175.129 ±(99.9%) 18.484 MB/sec [Average]
[info]   (min, avg, max) = (1167.925, 1175.129, 1179.232), stdev = 4.800
[info]   CI (99.9%): [1156.645, 1193.614] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   10192.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10192.002, 10192.002, 10192.003), stdev = 0.001
[info]   CI (99.9%): [10192.002, 10192.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1203.034 ±(99.9%) 1152.125 MB/sec [Average]
[info]   (min, avg, max) = (667.819, 1203.034, 1340.129), stdev = 299.203
[info]   CI (99.9%): [50.910, 2355.159] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   10427.013 ±(99.9%) 9900.751 B/op [Average]
[info]   (min, avg, max) = (5827.780, 10427.013, 11604.839), stdev = 2571.194
[info]   CI (99.9%): [526.263, 20327.764] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.156 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.083), stdev = 0.041
[info]   CI (99.9%): [≈ 0, 0.210] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.469 ±(99.9%) 1.355 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.469, 0.724), stdev = 0.352
[info]   CI (99.9%): [≈ 0, 1.824] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.200, 3.000), stdev = 0.837
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 56.43% complete, ETA 00:58:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 45973.245 ops/s
[info] # Warmup Iteration   2: 50408.125 ops/s
[info] # Warmup Iteration   3: 49986.915 ops/s
[info] # Warmup Iteration   4: 50391.363 ops/s
[info] # Warmup Iteration   5: 50361.425 ops/s
[info] Iteration   1: 50111.229 ops/s
[info]                  ·gc.alloc.rate:               526.265 MB/sec
[info]                  ·gc.alloc.rate.norm:          16528.009 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.625 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 16068.206 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 50336.676 ops/s
[info]                  ·gc.alloc.rate:      528.607 MB/sec
[info]                  ·gc.alloc.rate.norm: 16528.009 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 50382.656 ops/s
[info]                  ·gc.alloc.rate:                   529.118 MB/sec
[info]                  ·gc.alloc.rate.norm:              16528.009 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.474 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21037.274 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.616 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 50.465 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 50497.497 ops/s
[info]                  ·gc.alloc.rate:                   530.373 MB/sec
[info]                  ·gc.alloc.rate.norm:              16528.009 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.535 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20989.374 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.946 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 50480.784 ops/s
[info]                  ·gc.alloc.rate:               530.236 MB/sec
[info]                  ·gc.alloc.rate.norm:          16528.009 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.575 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 20996.026 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeUPickle":
[info]   50361.768 ±(99.9%) 597.852 ops/s [Average]
[info]   (min, avg, max) = (50111.229, 50361.768, 50497.497), stdev = 155.260
[info]   CI (99.9%): [49763.917, 50959.620] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeUPickle:·gc.alloc.rate":
[info]   528.920 ±(99.9%) 6.394 MB/sec [Average]
[info]   (min, avg, max) = (526.265, 528.920, 530.373), stdev = 1.660
[info]   CI (99.9%): [522.526, 535.313] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeUPickle:·gc.alloc.rate.norm":
[info]   16528.009 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (16528.009, 16528.009, 16528.009), stdev = 0.001
[info]   CI (99.9%): [16528.008, 16528.010] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space":
[info]   506.442 ±(99.9%) 1123.081 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 506.442, 673.575), stdev = 291.661
[info]   CI (99.9%): [≈ 0, 1629.523] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   15818.176 ±(99.9%) 35031.741 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 15818.176, 21037.274), stdev = 9097.632
[info]   CI (99.9%): [≈ 0, 50849.917] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space":
[info]   0.336 ±(99.9%) 2.757 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.336, 1.616), stdev = 0.716
[info]   CI (99.9%): [≈ 0, 3.093] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   10.482 ±(99.9%) 86.127 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 10.482, 50.465), stdev = 22.367
[info]   CI (99.9%): [≈ 0, 96.609] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeUPickle:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeUPickle:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 0.837
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 56.63% complete, ETA 00:57:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 53686.272 ops/s
[info] # Warmup Iteration   2: 72439.684 ops/s
[info] # Warmup Iteration   3: 72599.563 ops/s
[info] # Warmup Iteration   4: 71759.131 ops/s
[info] # Warmup Iteration   5: 71749.697 ops/s
[info] Iteration   1: 73631.370 ops/s
[info]                  ·gc.alloc.rate:               1561.442 MB/sec
[info]                  ·gc.alloc.rate.norm:          33376.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1341.571 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 28676.227 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 73548.843 ops/s
[info]                  ·gc.alloc.rate:                   1560.197 MB/sec
[info]                  ·gc.alloc.rate.norm:              33376.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2015.713 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     43120.479 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.336 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 73202.828 ops/s
[info]                  ·gc.alloc.rate:               1552.397 MB/sec
[info]                  ·gc.alloc.rate.norm:          33376.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1345.278 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 28923.024 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 73351.423 ops/s
[info]                  ·gc.alloc.rate:                   1555.560 MB/sec
[info]                  ·gc.alloc.rate.norm:              33376.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.929 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28899.621 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.787 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 73245.548 ops/s
[info]                  ·gc.alloc.rate:               1553.478 MB/sec
[info]                  ·gc.alloc.rate.norm:          33376.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1348.683 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 28976.033 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce":
[info]   73396.003 ±(99.9%) 722.184 ops/s [Average]
[info]   (min, avg, max) = (73202.828, 73396.003, 73631.370), stdev = 187.549
[info]   CI (99.9%): [72673.819, 74118.186] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:·gc.alloc.rate":
[info]   1556.615 ±(99.9%) 15.508 MB/sec [Average]
[info]   (min, avg, max) = (1552.397, 1556.615, 1561.442), stdev = 4.027
[info]   CI (99.9%): [1541.107, 1572.123] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   33376.006 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (33376.006, 33376.006, 33376.006), stdev = 0.001
[info]   CI (99.9%): [33376.005, 33376.007] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1479.635 ±(99.9%) 1153.993 MB/sec [Average]
[info]   (min, avg, max) = (1341.571, 1479.635, 2015.713), stdev = 299.688
[info]   CI (99.9%): [325.641, 2633.628] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   31719.077 ±(99.9%) 24546.340 B/op [Average]
[info]   (min, avg, max) = (28676.227, 31719.077, 43120.479), stdev = 6374.606
[info]   CI (99.9%): [7172.737, 56265.416] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.156 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.083), stdev = 0.041
[info]   CI (99.9%): [≈ 0, 0.185] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.625 ±(99.9%) 3.350 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.625, 1.787), stdev = 0.870
[info]   CI (99.9%): [≈ 0, 3.974] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 3.000), stdev = 0.707
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 56.83% complete, ETA 00:57:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 59543.274 ops/s
[info] # Warmup Iteration   2: 91729.962 ops/s
[info] # Warmup Iteration   3: 90617.861 ops/s
[info] # Warmup Iteration   4: 92737.103 ops/s
[info] # Warmup Iteration   5: 92071.347 ops/s
[info] Iteration   1: 92512.628 ops/s
[info]                  ·gc.alloc.rate:                   1152.532 MB/sec
[info]                  ·gc.alloc.rate.norm:              19608.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.582 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22688.208 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.708 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 92925.963 ops/s
[info]                  ·gc.alloc.rate:                   1157.748 MB/sec
[info]                  ·gc.alloc.rate.norm:              19608.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.274 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22597.697 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.410 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 93751.188 ops/s
[info]                  ·gc.alloc.rate:               1168.032 MB/sec
[info]                  ·gc.alloc.rate.norm:          19608.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:      667.509 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 11205.626 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 92810.881 ops/s
[info]                  ·gc.alloc.rate:                   1156.704 MB/sec
[info]                  ·gc.alloc.rate.norm:              19608.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.430 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22671.608 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.765 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 92651.865 ops/s
[info]                  ·gc.alloc.rate:               1154.492 MB/sec
[info]                  ·gc.alloc.rate.norm:          19608.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1339.119 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 22743.720 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala":
[info]   92930.505 ±(99.9%) 1866.781 ops/s [Average]
[info]   (min, avg, max) = (92512.628, 92930.505, 93751.188), stdev = 484.797
[info]   CI (99.9%): [91063.724, 94797.286] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1157.902 ±(99.9%) 23.147 MB/sec [Average]
[info]   (min, avg, max) = (1152.532, 1157.902, 1168.032), stdev = 6.011
[info]   CI (99.9%): [1134.755, 1181.048] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   19608.005 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (19608.005, 19608.005, 19608.005), stdev = 0.001
[info]   CI (99.9%): [19608.004, 19608.006] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1202.383 ±(99.9%) 1151.389 MB/sec [Average]
[info]   (min, avg, max) = (667.509, 1202.383, 1339.119), stdev = 299.012
[info]   CI (99.9%): [50.994, 2353.772] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   20381.372 ±(99.9%) 19752.505 B/op [Average]
[info]   (min, avg, max) = (11205.626, 20381.372, 22743.720), stdev = 5129.663
[info]   CI (99.9%): [628.867, 40133.877] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.183 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.104), stdev = 0.047
[info]   CI (99.9%): [≈ 0, 0.229] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.777 ±(99.9%) 3.098 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.777, 1.765), stdev = 0.805
[info]   CI (99.9%): [≈ 0, 3.875] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 57.03% complete, ETA 00:57:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 93652.365 ops/s
[info] # Warmup Iteration   2: 103556.701 ops/s
[info] # Warmup Iteration   3: 106013.920 ops/s
[info] # Warmup Iteration   4: 105619.829 ops/s
[info] # Warmup Iteration   5: 104408.021 ops/s
[info] Iteration   1: 104256.707 ops/s
[info]                  ·gc.alloc.rate:                   1253.073 MB/sec
[info]                  ·gc.alloc.rate.norm:              18912.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.264 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20273.220 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.886 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 104496.470 ops/s
[info]                  ·gc.alloc.rate:                   1255.691 MB/sec
[info]                  ·gc.alloc.rate.norm:              18912.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.582 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20235.730 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.568 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 104788.593 ops/s
[info]                  ·gc.alloc.rate:               1259.156 MB/sec
[info]                  ·gc.alloc.rate.norm:          18912.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1344.932 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 20200.326 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 105310.705 ops/s
[info]                  ·gc.alloc.rate:                   1265.437 MB/sec
[info]                  ·gc.alloc.rate.norm:              18912.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.262 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20119.932 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.867 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 105789.171 ops/s
[info]                  ·gc.alloc.rate:                   1271.169 MB/sec
[info]                  ·gc.alloc.rate.norm:              18912.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.595 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20049.046 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.310 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala":
[info]   104928.329 ±(99.9%) 2392.646 ops/s [Average]
[info]   (min, avg, max) = (104256.707, 104928.329, 105789.171), stdev = 621.363
[info]   CI (99.9%): [102535.684, 107320.975] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1260.905 ±(99.9%) 28.394 MB/sec [Average]
[info]   (min, avg, max) = (1253.073, 1260.905, 1271.169), stdev = 7.374
[info]   CI (99.9%): [1232.512, 1289.299] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   18912.004 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (18912.004, 18912.004, 18912.004), stdev = 0.001
[info]   CI (99.9%): [18912.004, 18912.005] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1345.127 ±(99.9%) 7.016 MB/sec [Average]
[info]   (min, avg, max) = (1343.264, 1345.127, 1347.595), stdev = 1.822
[info]   CI (99.9%): [1338.112, 1352.143] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   20175.651 ±(99.9%) 349.071 B/op [Average]
[info]   (min, avg, max) = (20049.046, 20175.651, 20273.220), stdev = 90.653
[info]   CI (99.9%): [19826.580, 20524.721] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.075 ±(99.9%) 0.231 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.075, 0.125), stdev = 0.060
[info]   CI (99.9%): [≈ 0, 0.306] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.126 ±(99.9%) 3.473 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.126, 1.886), stdev = 0.902
[info]   CI (99.9%): [≈ 0, 4.599] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 57.23% complete, ETA 00:57:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 27428.294 ops/s
[info] # Warmup Iteration   2: 48127.276 ops/s
[info] # Warmup Iteration   3: 47458.602 ops/s
[info] # Warmup Iteration   4: 49328.659 ops/s
[info] # Warmup Iteration   5: 49051.257 ops/s
[info] Iteration   1: 48544.590 ops/s
[info]                  ·gc.alloc.rate:                   2312.267 MB/sec
[info]                  ·gc.alloc.rate.norm:              74944.009 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2012.505 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     65228.269 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.675 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 48398.641 ops/s
[info]                  ·gc.alloc.rate:                   2305.029 MB/sec
[info]                  ·gc.alloc.rate.norm:              74944.009 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2690.892 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     87489.639 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.708 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 48511.093 ops/s
[info]                  ·gc.alloc.rate:                   2310.272 MB/sec
[info]                  ·gc.alloc.rate.norm:              74944.009 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2023.753 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     65649.468 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.026 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 49117.680 ops/s
[info]                  ·gc.alloc.rate:                   2339.875 MB/sec
[info]                  ·gc.alloc.rate.norm:              74944.009 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2704.808 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     86632.447 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.668 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 49321.267 ops/s
[info]                  ·gc.alloc.rate:                   2348.567 MB/sec
[info]                  ·gc.alloc.rate.norm:              74944.009 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2031.760 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     64834.512 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.657 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson":
[info]   48778.654 ±(99.9%) 1587.840 ops/s [Average]
[info]   (min, avg, max) = (48398.641, 48778.654, 49321.267), stdev = 412.357
[info]   CI (99.9%): [47190.815, 50366.494] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2323.202 ±(99.9%) 75.516 MB/sec [Average]
[info]   (min, avg, max) = (2305.029, 2323.202, 2348.567), stdev = 19.611
[info]   CI (99.9%): [2247.686, 2398.718] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   74944.009 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (74944.009, 74944.009, 74944.009), stdev = 0.001
[info]   CI (99.9%): [74944.009, 74944.009] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2292.743 ±(99.9%) 1424.375 MB/sec [Average]
[info]   (min, avg, max) = (2012.505, 2292.743, 2704.808), stdev = 369.906
[info]   CI (99.9%): [868.368, 3717.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   73966.867 ±(99.9%) 46056.037 B/op [Average]
[info]   (min, avg, max) = (64834.512, 73966.867, 87489.639), stdev = 11960.606
[info]   CI (99.9%): [27910.830, 120022.904] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.067, 0.083), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.171] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   2.147 ±(99.9%) 3.350 B/op [Average]
[info]   (min, avg, max) = (0.675, 2.147, 2.708), stdev = 0.870
[info]   CI (99.9%): [≈ 0, 5.497] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.200, 4.000), stdev = 0.837
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 57.43% complete, ETA 00:56:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 57811.086 ops/s
[info] # Warmup Iteration   2: 67876.951 ops/s
[info] # Warmup Iteration   3: 69730.825 ops/s
[info] # Warmup Iteration   4: 70748.931 ops/s
[info] # Warmup Iteration   5: 71116.704 ops/s
[info] Iteration   1: 69082.942 ops/s
[info]                  ·gc.alloc.rate:               1526.732 MB/sec
[info]                  ·gc.alloc.rate.norm:          34776.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1343.843 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 30610.151 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 69214.181 ops/s
[info]                  ·gc.alloc.rate:                   1529.344 MB/sec
[info]                  ·gc.alloc.rate.norm:              34776.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2018.057 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     45888.927 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.420 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 70106.351 ops/s
[info]                  ·gc.alloc.rate:                   1549.364 MB/sec
[info]                  ·gc.alloc.rate.norm:              34776.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.199 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     30238.326 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.271 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 70365.542 ops/s
[info]                  ·gc.alloc.rate:               1555.034 MB/sec
[info]                  ·gc.alloc.rate.norm:          34776.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1348.484 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 30156.841 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 70305.219 ops/s
[info]                  ·gc.alloc.rate:                   1554.027 MB/sec
[info]                  ·gc.alloc.rate.norm:              34776.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2026.026 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     45338.386 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.330 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readUPickle":
[info]   69814.847 ±(99.9%) 2377.746 ops/s [Average]
[info]   (min, avg, max) = (69082.942, 69814.847, 70365.542), stdev = 617.493
[info]   CI (99.9%): [67437.102, 72192.593] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readUPickle:·gc.alloc.rate":
[info]   1542.900 ±(99.9%) 53.007 MB/sec [Average]
[info]   (min, avg, max) = (1526.732, 1542.900, 1555.034), stdev = 13.766
[info]   CI (99.9%): [1489.893, 1595.908] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readUPickle:·gc.alloc.rate.norm":
[info]   34776.006 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (34776.006, 34776.006, 34776.007), stdev = 0.001
[info]   CI (99.9%): [34776.005, 34776.007] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readUPickle:·gc.churn.PS_Eden_Space":
[info]   1616.722 ±(99.9%) 1424.812 MB/sec [Average]
[info]   (min, avg, max) = (1343.843, 1616.722, 2026.026), stdev = 370.019
[info]   CI (99.9%): [191.910, 3041.533] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   36446.526 ±(99.9%) 32239.186 B/op [Average]
[info]   (min, avg, max) = (30156.841, 36446.526, 45888.927), stdev = 8372.414
[info]   CI (99.9%): [4207.340, 68685.713] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.247 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.062, 0.146), stdev = 0.064
[info]   CI (99.9%): [≈ 0, 0.310] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   1.404 ±(99.9%) 5.542 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.404, 3.271), stdev = 1.439
[info]   CI (99.9%): [≈ 0, 6.947] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readUPickle:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readUPickle:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.200, 3.000), stdev = 0.837
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 57.63% complete, ETA 00:56:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 89527.418 ops/s
[info] # Warmup Iteration   2: 116745.321 ops/s
[info] # Warmup Iteration   3: 120846.023 ops/s
[info] # Warmup Iteration   4: 120338.349 ops/s
[info] # Warmup Iteration   5: 120812.146 ops/s
[info] Iteration   1: 120410.214 ops/s
[info]                  ·gc.alloc.rate:                   1130.103 MB/sec
[info]                  ·gc.alloc.rate.norm:              14768.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.905 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17483.522 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.544 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 120668.872 ops/s
[info]                  ·gc.alloc.rate:               1132.238 MB/sec
[info]                  ·gc.alloc.rate.norm:          14768.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.783 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8723.074 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 120167.003 ops/s
[info]                  ·gc.alloc.rate:                   1127.562 MB/sec
[info]                  ·gc.alloc.rate.norm:              14768.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.273 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17527.742 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.545 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 119906.136 ops/s
[info]                  ·gc.alloc.rate:                   1125.120 MB/sec
[info]                  ·gc.alloc.rate.norm:              14768.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.612 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17583.376 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.546 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 119890.577 ops/s
[info]                  ·gc.alloc.rate:               1125.142 MB/sec
[info]                  ·gc.alloc.rate.norm:          14768.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:      671.252 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8810.497 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce":
[info]   120208.560 ±(99.9%) 1287.020 ops/s [Average]
[info]   (min, avg, max) = (119890.577, 120208.560, 120668.872), stdev = 334.235
[info]   CI (99.9%): [118921.541, 121495.580] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1128.033 ±(99.9%) 12.029 MB/sec [Average]
[info]   (min, avg, max) = (1125.120, 1128.033, 1132.238), stdev = 3.124
[info]   CI (99.9%): [1116.004, 1140.062] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   14768.004 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (14768.004, 14768.004, 14768.004), stdev = 0.001
[info]   CI (99.9%): [14768.004, 14768.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1071.165 ±(99.9%) 1410.095 MB/sec [Average]
[info]   (min, avg, max) = (668.783, 1071.165, 1339.612), stdev = 366.197
[info]   CI (99.9%): [≈ 0, 2481.261] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   14025.642 ±(99.9%) 18486.507 B/op [Average]
[info]   (min, avg, max) = (8723.074, 14025.642, 17583.376), stdev = 4800.887
[info]   CI (99.9%): [≈ 0, 32512.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.042), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.327 ±(99.9%) 1.150 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.327, 0.546), stdev = 0.299
[info]   CI (99.9%): [≈ 0, 1.477] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 57.83% complete, ETA 00:56:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 245207.294 ops/s
[info] # Warmup Iteration   2: 340689.469 ops/s
[info] # Warmup Iteration   3: 345185.559 ops/s
[info] # Warmup Iteration   4: 344440.839 ops/s
[info] # Warmup Iteration   5: 341562.178 ops/s
[info] Iteration   1: 346525.254 ops/s
[info]                  ·gc.alloc.rate:                   514.329 MB/sec
[info]                  ·gc.alloc.rate.norm:              2336.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.599 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2323.600 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.095 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 348475.477 ops/s
[info]                  ·gc.alloc.rate:               517.230 MB/sec
[info]                  ·gc.alloc.rate.norm:          2336.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.605 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2310.593 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 345549.965 ops/s
[info]                  ·gc.alloc.rate:                   512.876 MB/sec
[info]                  ·gc.alloc.rate.norm:              2336.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          666.800 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3037.082 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.552 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11.625 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 343592.619 ops/s
[info]                  ·gc.alloc.rate:                   509.957 MB/sec
[info]                  ·gc.alloc.rate.norm:              2336.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          666.779 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3054.369 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.286 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 344809.378 ops/s
[info]                  ·gc.alloc.rate:      511.881 MB/sec
[info]                  ·gc.alloc.rate.norm: 2336.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala":
[info]   345790.539 ±(99.9%) 7100.264 ops/s [Average]
[info]   (min, avg, max) = (343592.619, 345790.539, 348475.477), stdev = 1843.916
[info]   CI (99.9%): [338690.275, 352890.803] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   513.255 ±(99.9%) 10.522 MB/sec [Average]
[info]   (min, avg, max) = (509.957, 513.255, 517.230), stdev = 2.733
[info]   CI (99.9%): [502.732, 523.777] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   2336.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2336.001, 2336.001, 2336.001), stdev = 0.001
[info]   CI (99.9%): [2336.001, 2336.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   471.356 ±(99.9%) 1057.709 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 471.356, 666.800), stdev = 274.684
[info]   CI (99.9%): [≈ 0, 1529.065] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   2145.129 ±(99.9%) 4826.036 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2145.129, 3054.369), stdev = 1253.306
[info]   CI (99.9%): [≈ 0, 6971.164] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.527 ±(99.9%) 4.360 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.527, 2.552), stdev = 1.132
[info]   CI (99.9%): [≈ 0, 4.888] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.401 ±(99.9%) 19.860 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.401, 11.625), stdev = 5.158
[info]   CI (99.9%): [≈ 0, 22.261] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.800, 3.000), stdev = 1.304
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 58.03% complete, ETA 00:56:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 628240.355 ops/s
[info] # Warmup Iteration   2: 686756.078 ops/s
[info] # Warmup Iteration   3: 678632.091 ops/s
[info] # Warmup Iteration   4: 671524.040 ops/s
[info] # Warmup Iteration   5: 684831.874 ops/s
[info] Iteration   1: 672051.713 ops/s
[info]                  ·gc.alloc.rate:                   833.526 MB/sec
[info]                  ·gc.alloc.rate.norm:              1952.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          671.798 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1573.256 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.146 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 661258.054 ops/s
[info]                  ·gc.alloc.rate:               820.099 MB/sec
[info]                  ·gc.alloc.rate.norm:          1952.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1342.899 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3196.370 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 676052.493 ops/s
[info]                  ·gc.alloc.rate:                   838.464 MB/sec
[info]                  ·gc.alloc.rate.norm:              1952.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          671.478 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1563.245 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.048 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 662860.716 ops/s
[info]                  ·gc.alloc.rate:                   822.430 MB/sec
[info]                  ·gc.alloc.rate.norm:              1952.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          671.743 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1594.352 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.099 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 661385.290 ops/s
[info]                  ·gc.alloc.rate:                   820.609 MB/sec
[info]                  ·gc.alloc.rate.norm:              1952.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.040 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1598.596 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.050 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala":
[info]   666721.653 ±(99.9%) 26448.390 ops/s [Average]
[info]   (min, avg, max) = (661258.054, 666721.653, 676052.493), stdev = 6868.563
[info]   CI (99.9%): [640273.263, 693170.043] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   827.025 ±(99.9%) 32.411 MB/sec [Average]
[info]   (min, avg, max) = (820.099, 827.025, 838.464), stdev = 8.417
[info]   CI (99.9%): [794.615, 859.436] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1952.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1952.001, 1952.001, 1952.001), stdev = 0.001
[info]   CI (99.9%): [1952.001, 1952.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   805.991 ±(99.9%) 1155.734 MB/sec [Average]
[info]   (min, avg, max) = (671.478, 805.991, 1342.899), stdev = 300.140
[info]   CI (99.9%): [≈ 0, 1961.725] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1905.164 ±(99.9%) 2779.990 B/op [Average]
[info]   (min, avg, max) = (1563.245, 1905.164, 3196.370), stdev = 721.955
[info]   CI (99.9%): [≈ 0, 4685.154] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.069 ±(99.9%) 0.215 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.069, 0.146), stdev = 0.056
[info]   CI (99.9%): [≈ 0, 0.283] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 58.23% complete, ETA 00:55:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 674597.069 ops/s
[info] # Warmup Iteration   2: 734558.494 ops/s
[info] # Warmup Iteration   3: 710888.191 ops/s
[info] # Warmup Iteration   4: 717863.662 ops/s
[info] # Warmup Iteration   5: 733696.086 ops/s
[info] Iteration   1: 713675.569 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 717197.116 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 710743.029 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 723654.030 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 712167.708 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc":
[info]   715487.490 ±(99.9%) 19862.485 ops/s [Average]
[info]   (min, avg, max) = (710743.029, 715487.490, 723654.030), stdev = 5158.224
[info]   CI (99.9%): [695625.005, 735349.975] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
[info]   CI (99.9%): [0.001, 0.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 58.43% complete, ETA 00:55:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 192723.147 ops/s
[info] # Warmup Iteration   2: 246167.197 ops/s
[info] # Warmup Iteration   3: 197961.542 ops/s
[info] # Warmup Iteration   4: 203597.942 ops/s
[info] # Warmup Iteration   5: 198389.479 ops/s
[info] Iteration   1: 202622.177 ops/s
[info]                  ·gc.alloc.rate:                   662.265 MB/sec
[info]                  ·gc.alloc.rate.norm:              5144.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          668.520 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5192.584 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.448 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19.017 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 204440.276 ops/s
[info]                  ·gc.alloc.rate:                   668.184 MB/sec
[info]                  ·gc.alloc.rate.norm:              5144.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          668.484 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5146.313 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.321 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 205685.615 ops/s
[info]                  ·gc.alloc.rate:               672.253 MB/sec
[info]                  ·gc.alloc.rate.norm:          5144.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.132 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5112.469 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 204767.939 ops/s
[info]                  ·gc.alloc.rate:                   669.388 MB/sec
[info]                  ·gc.alloc.rate.norm:              5144.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          668.260 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5135.335 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.160 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 205295.180 ops/s
[info]                  ·gc.alloc.rate:               671.050 MB/sec
[info]                  ·gc.alloc.rate.norm:          5144.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.203 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5122.179 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson":
[info]   204562.237 ±(99.9%) 4564.355 ops/s [Average]
[info]   (min, avg, max) = (202622.177, 204562.237, 205685.615), stdev = 1185.348
[info]   CI (99.9%): [199997.882, 209126.592] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   668.628 ±(99.9%) 14.946 MB/sec [Average]
[info]   (min, avg, max) = (662.265, 668.628, 672.253), stdev = 3.881
[info]   CI (99.9%): [653.682, 683.574] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   5144.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5144.002, 5144.002, 5144.002), stdev = 0.001
[info]   CI (99.9%): [5144.002, 5144.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   668.320 ±(99.9%) 0.665 MB/sec [Average]
[info]   (min, avg, max) = (668.132, 668.320, 668.520), stdev = 0.173
[info]   CI (99.9%): [667.654, 668.985] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   5141.776 ±(99.9%) 120.028 B/op [Average]
[info]   (min, avg, max) = (5112.469, 5141.776, 5192.584), stdev = 31.171
[info]   CI (99.9%): [5021.748, 5261.804] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.502 ±(99.9%) 4.190 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.502, 2.448), stdev = 1.088
[info]   CI (99.9%): [≈ 0, 4.692] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   3.900 ±(99.9%) 32.546 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.900, 19.017), stdev = 8.452
[info]   CI (99.9%): [≈ 0, 36.446] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 58.63% complete, ETA 00:55:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 24544.409 ops/s
[info] # Warmup Iteration   2: 26655.622 ops/s
[info] # Warmup Iteration   3: 26806.985 ops/s
[info] # Warmup Iteration   4: 26844.337 ops/s
[info] # Warmup Iteration   5: 26741.148 ops/s
[info] Iteration   1: 26882.984 ops/s
[info]                  ·gc.alloc.rate:                   362.328 MB/sec
[info]                  ·gc.alloc.rate.norm:              21208.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.686 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29950.400 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.016 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.954 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 26798.712 ops/s
[info]                  ·gc.alloc.rate:               361.119 MB/sec
[info]                  ·gc.alloc.rate.norm:          21208.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.596 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 30045.382 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 26889.401 ops/s
[info]                  ·gc.alloc.rate:      362.350 MB/sec
[info]                  ·gc.alloc.rate.norm: 21208.017 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 26664.153 ops/s
[info]                  ·gc.alloc.rate:                   359.308 MB/sec
[info]                  ·gc.alloc.rate.norm:              21208.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.588 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     30196.347 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.842 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 26959.567 ops/s
[info]                  ·gc.alloc.rate:      363.317 MB/sec
[info]                  ·gc.alloc.rate.norm: 21208.016 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeUPickle":
[info]   26838.963 ±(99.9%) 435.675 ops/s [Average]
[info]   (min, avg, max) = (26664.153, 26838.963, 26959.567), stdev = 113.143
[info]   CI (99.9%): [26403.288, 27274.639] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeUPickle:·gc.alloc.rate":
[info]   361.684 ±(99.9%) 5.932 MB/sec [Average]
[info]   (min, avg, max) = (359.308, 361.684, 363.317), stdev = 1.541
[info]   CI (99.9%): [355.752, 367.616] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeUPickle:·gc.alloc.rate.norm":
[info]   21208.016 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (21208.016, 21208.016, 21208.017), stdev = 0.001
[info]   CI (99.9%): [21208.014, 21208.018] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space":
[info]   306.974 ±(99.9%) 1079.058 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 306.974, 511.686), stdev = 280.228
[info]   CI (99.9%): [≈ 0, 1386.032] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   18038.426 ±(99.9%) 63408.508 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 18038.426, 30196.347), stdev = 16466.988
[info]   CI (99.9%): [≈ 0, 81446.933] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space":
[info]   0.010 ±(99.9%) 0.054 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.010, 0.031), stdev = 0.014
[info]   CI (99.9%): [≈ 0, 0.064] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   0.559 ±(99.9%) 3.188 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.559, 1.842), stdev = 0.828
[info]   CI (99.9%): [≈ 0, 3.747] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeUPickle:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeUPickle:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 3.000), stdev = 1.342
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 58.84% complete, ETA 00:54:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 89791.551 ops/s
[info] # Warmup Iteration   2: 124389.532 ops/s
[info] # Warmup Iteration   3: 124981.491 ops/s
[info] # Warmup Iteration   4: 122918.301 ops/s
[info] # Warmup Iteration   5: 124110.572 ops/s
[info] Iteration   1: 122445.403 ops/s
[info]                  ·gc.alloc.rate:                   1679.207 MB/sec
[info]                  ·gc.alloc.rate.norm:              21584.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2013.384 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25879.402 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.803 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 125142.926 ops/s
[info]                  ·gc.alloc.rate:                   1716.124 MB/sec
[info]                  ·gc.alloc.rate.norm:              21584.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.204 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16906.300 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.047 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 123980.995 ops/s
[info]                  ·gc.alloc.rate:                   1700.292 MB/sec
[info]                  ·gc.alloc.rate.norm:              21584.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2020.040 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25642.982 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.264 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 123073.814 ops/s
[info]                  ·gc.alloc.rate:               1687.814 MB/sec
[info]                  ·gc.alloc.rate.norm:          21584.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1348.591 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 17245.980 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 125108.430 ops/s
[info]                  ·gc.alloc.rate:                   1716.099 MB/sec
[info]                  ·gc.alloc.rate.norm:              21584.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2026.738 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25491.023 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.786 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce":
[info]   123950.314 ±(99.9%) 4635.794 ops/s [Average]
[info]   (min, avg, max) = (122445.403, 123950.314, 125142.926), stdev = 1203.901
[info]   CI (99.9%): [119314.520, 128586.108] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:·gc.alloc.rate":
[info]   1699.907 ±(99.9%) 63.857 MB/sec [Average]
[info]   (min, avg, max) = (1679.207, 1699.907, 1716.124), stdev = 16.583
[info]   CI (99.9%): [1636.050, 1763.764] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   21584.004 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (21584.003, 21584.004, 21584.004), stdev = 0.001
[info]   CI (99.9%): [21584.003, 21584.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1750.591 ±(99.9%) 1420.926 MB/sec [Average]
[info]   (min, avg, max) = (1344.204, 1750.591, 2026.738), stdev = 369.010
[info]   CI (99.9%): [329.665, 3171.518] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   22233.137 ±(99.9%) 18141.299 B/op [Average]
[info]   (min, avg, max) = (16906.300, 22233.137, 25879.402), stdev = 4711.238
[info]   CI (99.9%): [4091.839, 40374.436] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.083), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.178] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.580 ±(99.9%) 1.663 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.580, 1.047), stdev = 0.432
[info]   CI (99.9%): [≈ 0, 2.243] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.200, 3.000), stdev = 0.837
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 59.04% complete, ETA 00:54:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 117106.092 ops/s
[info] # Warmup Iteration   2: 186284.285 ops/s
[info] # Warmup Iteration   3: 186325.540 ops/s
[info] # Warmup Iteration   4: 187956.654 ops/s
[info] # Warmup Iteration   5: 188138.608 ops/s
[info] Iteration   1: 181488.609 ops/s
[info]                  ·gc.alloc.rate:               1082.114 MB/sec
[info]                  ·gc.alloc.rate.norm:          9384.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.175 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5794.355 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   2: 186079.789 ops/s
[info]                  ·gc.alloc.rate:                   1109.481 MB/sec
[info]                  ·gc.alloc.rate.norm:              9384.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.287 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11302.334 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.528 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 188116.786 ops/s
[info]                  ·gc.alloc.rate:                   1121.633 MB/sec
[info]                  ·gc.alloc.rate.norm:              9384.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.623 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11191.053 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.174 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 187352.167 ops/s
[info]                  ·gc.alloc.rate:                   1117.069 MB/sec
[info]                  ·gc.alloc.rate.norm:              9384.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          669.837 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5627.005 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.350 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 185890.588 ops/s
[info]                  ·gc.alloc.rate:               1108.314 MB/sec
[info]                  ·gc.alloc.rate.norm:          9384.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1340.250 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 11347.786 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala":
[info]   185785.588 ±(99.9%) 9901.895 ops/s [Average]
[info]   (min, avg, max) = (181488.609, 185785.588, 188116.786), stdev = 2571.491
[info]   CI (99.9%): [175883.693, 195687.484] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1107.722 ±(99.9%) 59.033 MB/sec [Average]
[info]   (min, avg, max) = (1082.114, 1107.722, 1121.633), stdev = 15.331
[info]   CI (99.9%): [1048.689, 1166.755] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   9384.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (9384.002, 9384.002, 9384.002), stdev = 0.001
[info]   CI (99.9%): [9384.002, 9384.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1070.434 ±(99.9%) 1411.091 MB/sec [Average]
[info]   (min, avg, max) = (668.175, 1070.434, 1340.250), stdev = 366.456
[info]   CI (99.9%): [≈ 0, 2481.525] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   9052.506 ±(99.9%) 11751.252 B/op [Average]
[info]   (min, avg, max) = (5627.005, 9052.506, 11347.786), stdev = 3051.763
[info]   CI (99.9%): [≈ 0, 20803.758] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.129] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.210 ±(99.9%) 0.883 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.210, 0.528), stdev = 0.229
[info]   CI (99.9%): [≈ 0, 1.093] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 2.000), stdev = 0.894
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 59.24% complete, ETA 00:54:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 480837.653 ops/s
[info] # Warmup Iteration   2: 514352.697 ops/s
[info] # Warmup Iteration   3: 516403.844 ops/s
[info] # Warmup Iteration   4: 514607.757 ops/s
[info] # Warmup Iteration   5: 518859.874 ops/s
[info] Iteration   1: 515243.757 ops/s
[info]                  ·gc.alloc.rate:                   1000.441 MB/sec
[info]                  ·gc.alloc.rate.norm:              3056.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.631 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4110.435 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.127 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 504958.949 ops/s
[info]                  ·gc.alloc.rate:               980.521 MB/sec
[info]                  ·gc.alloc.rate.norm:          3056.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.804 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2096.936 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 507847.786 ops/s
[info]                  ·gc.alloc.rate:                   986.126 MB/sec
[info]                  ·gc.alloc.rate.norm:              3056.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.279 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4172.116 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.258 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 516812.374 ops/s
[info]                  ·gc.alloc.rate:               1003.471 MB/sec
[info]                  ·gc.alloc.rate.norm:          3056.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.448 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2050.940 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 517144.596 ops/s
[info]                  ·gc.alloc.rate:                   1004.073 MB/sec
[info]                  ·gc.alloc.rate.norm:              3056.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.464 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4101.147 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.127 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala":
[info]   512401.492 ±(99.9%) 21625.323 ops/s [Average]
[info]   (min, avg, max) = (504958.949, 512401.492, 517144.596), stdev = 5616.028
[info]   CI (99.9%): [490776.169, 534026.816] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   994.926 ±(99.9%) 41.831 MB/sec [Average]
[info]   (min, avg, max) = (980.521, 994.926, 1004.073), stdev = 10.863
[info]   CI (99.9%): [953.095, 1036.757] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   3056.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3056.001, 3056.001, 3056.001), stdev = 0.001
[info]   CI (99.9%): [3056.001, 3056.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1077.125 ±(99.9%) 1420.117 MB/sec [Average]
[info]   (min, avg, max) = (672.804, 1077.125, 1347.464), stdev = 368.800
[info]   CI (99.9%): [≈ 0, 2497.242] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   3306.315 ±(99.9%) 4333.704 B/op [Average]
[info]   (min, avg, max) = (2050.940, 3306.315, 4172.116), stdev = 1125.449
[info]   CI (99.9%): [≈ 0, 7640.019] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.083), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.167] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.102 ±(99.9%) 0.415 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.102, 0.258), stdev = 0.108
[info]   CI (99.9%): [≈ 0, 0.517] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 59.44% complete, ETA 00:54:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 33824.922 ops/s
[info] # Warmup Iteration   2: 68510.993 ops/s
[info] # Warmup Iteration   3: 69792.652 ops/s
[info] # Warmup Iteration   4: 70207.430 ops/s
[info] # Warmup Iteration   5: 69651.260 ops/s
[info] Iteration   1: 68619.833 ops/s
[info]                  ·gc.alloc.rate:                   2852.228 MB/sec
[info]                  ·gc.alloc.rate.norm:              65400.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3364.843 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     77153.975 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.432 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 70439.121 ops/s
[info]                  ·gc.alloc.rate:                   2927.345 MB/sec
[info]                  ·gc.alloc.rate.norm:              65400.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2700.430 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60330.478 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.860 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 70155.463 ops/s
[info]                  ·gc.alloc.rate:                   2915.196 MB/sec
[info]                  ·gc.alloc.rate.norm:              65400.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2706.768 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60724.099 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.401 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 69651.443 ops/s
[info]                  ·gc.alloc.rate:                   2895.576 MB/sec
[info]                  ·gc.alloc.rate.norm:              65400.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3392.034 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     76613.103 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.470 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 70131.388 ops/s
[info]                  ·gc.alloc.rate:                   2914.145 MB/sec
[info]                  ·gc.alloc.rate.norm:              65400.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2716.416 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60962.504 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.869 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson":
[info]   69799.450 ±(99.9%) 2763.028 ops/s [Average]
[info]   (min, avg, max) = (68619.833, 69799.450, 70439.121), stdev = 717.550
[info]   CI (99.9%): [67036.421, 72562.478] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2900.898 ±(99.9%) 113.520 MB/sec [Average]
[info]   (min, avg, max) = (2852.228, 2900.898, 2927.345), stdev = 29.481
[info]   CI (99.9%): [2787.379, 3014.418] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   65400.006 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (65400.006, 65400.006, 65400.007), stdev = 0.001
[info]   CI (99.9%): [65400.006, 65400.007] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2976.098 ±(99.9%) 1414.937 MB/sec [Average]
[info]   (min, avg, max) = (2700.430, 2976.098, 3392.034), stdev = 367.455
[info]   CI (99.9%): [1561.161, 4391.035] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   67156.832 ±(99.9%) 34209.716 B/op [Average]
[info]   (min, avg, max) = (60330.478, 67156.832, 77153.975), stdev = 8884.155
[info]   CI (99.9%): [32947.116, 101366.548] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.062, 0.083), stdev = 0.025
[info]   CI (99.9%): [≈ 0, 0.161] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.407 ±(99.9%) 2.192 B/op [Average]
[info]   (min, avg, max) = (0.470, 1.407, 1.869), stdev = 0.569
[info]   CI (99.9%): [≈ 0, 3.599] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 59.64% complete, ETA 00:53:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 81743.709 ops/s
[info] # Warmup Iteration   2: 93437.942 ops/s
[info] # Warmup Iteration   3: 90979.804 ops/s
[info] # Warmup Iteration   4: 88423.773 ops/s
[info] # Warmup Iteration   5: 88387.405 ops/s
[info] Iteration   1: 87110.978 ops/s
[info]                  ·gc.alloc.rate:                   1320.680 MB/sec
[info]                  ·gc.alloc.rate.norm:              23856.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.886 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24329.370 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.752 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 87136.352 ops/s
[info]                  ·gc.alloc.rate:                   1320.842 MB/sec
[info]                  ·gc.alloc.rate.norm:              23856.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.300 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24333.865 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.880 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 88387.761 ops/s
[info]                  ·gc.alloc.rate:                   1339.726 MB/sec
[info]                  ·gc.alloc.rate.norm:              23856.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.254 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24007.849 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.371 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 86726.707 ops/s
[info]                  ·gc.alloc.rate:                   1315.191 MB/sec
[info]                  ·gc.alloc.rate.norm:              23856.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.241 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24491.757 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.378 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 92772.321 ops/s
[info]                  ·gc.alloc.rate:                   1406.239 MB/sec
[info]                  ·gc.alloc.rate.norm:              23856.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1351.046 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22919.694 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.060 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readUPickle":
[info]   88426.824 ±(99.9%) 9659.675 ops/s [Average]
[info]   (min, avg, max) = (86726.707, 88426.824, 92772.321), stdev = 2508.587
[info]   CI (99.9%): [78767.149, 98086.499] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readUPickle:·gc.alloc.rate":
[info]   1340.536 ±(99.9%) 145.892 MB/sec [Average]
[info]   (min, avg, max) = (1315.191, 1340.536, 1406.239), stdev = 37.888
[info]   CI (99.9%): [1194.643, 1486.428] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readUPickle:·gc.alloc.rate.norm":
[info]   23856.005 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (23856.005, 23856.005, 23856.005), stdev = 0.001
[info]   CI (99.9%): [23856.005, 23856.005] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readUPickle:·gc.churn.PS_Eden_Space":
[info]   1348.745 ±(99.9%) 7.026 MB/sec [Average]
[info]   (min, avg, max) = (1346.886, 1348.745, 1351.046), stdev = 1.825
[info]   CI (99.9%): [1341.720, 1355.771] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   24016.507 ±(99.9%) 2456.227 B/op [Average]
[info]   (min, avg, max) = (22919.694, 24016.507, 24491.757), stdev = 637.874
[info]   CI (99.9%): [21560.279, 26472.734] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.104), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.184] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   0.888 ±(99.9%) 2.405 B/op [Average]
[info]   (min, avg, max) = (0.371, 0.888, 1.880), stdev = 0.624
[info]   CI (99.9%): [≈ 0, 3.293] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readUPickle:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readUPickle:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 59.84% complete, ETA 00:53:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 131987.099 ops/s
[info] # Warmup Iteration   2: 170287.085 ops/s
[info] # Warmup Iteration   3: 169178.650 ops/s
[info] # Warmup Iteration   4: 165806.028 ops/s
[info] # Warmup Iteration   5: 171078.393 ops/s
[info] Iteration   1: 171162.712 ops/s
[info]                  ·gc.alloc.rate:               1094.748 MB/sec
[info]                  ·gc.alloc.rate.norm:          10064.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      670.306 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6162.113 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 170614.644 ops/s
[info]                  ·gc.alloc.rate:                   1090.956 MB/sec
[info]                  ·gc.alloc.rate.norm:              10064.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.251 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12363.732 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.576 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 170231.091 ops/s
[info]                  ·gc.alloc.rate:                   1088.673 MB/sec
[info]                  ·gc.alloc.rate.norm:              10064.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.803 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12404.009 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.385 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 170188.372 ops/s
[info]                  ·gc.alloc.rate:               1088.226 MB/sec
[info]                  ·gc.alloc.rate.norm:          10064.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      671.462 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6209.731 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 170636.601 ops/s
[info]                  ·gc.alloc.rate:                   1091.105 MB/sec
[info]                  ·gc.alloc.rate.norm:              10064.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.831 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12395.060 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.576 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce":
[info]   170566.684 ±(99.9%) 1513.774 ops/s [Average]
[info]   (min, avg, max) = (170188.372, 170566.684, 171162.712), stdev = 393.122
[info]   CI (99.9%): [169052.910, 172080.458] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1090.742 ±(99.9%) 9.974 MB/sec [Average]
[info]   (min, avg, max) = (1088.226, 1090.742, 1094.748), stdev = 2.590
[info]   CI (99.9%): [1080.767, 1100.716] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   10064.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10064.003, 10064.003, 10064.003), stdev = 0.001
[info]   CI (99.9%): [10064.002, 10064.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1073.530 ±(99.9%) 1415.369 MB/sec [Average]
[info]   (min, avg, max) = (670.306, 1073.530, 1343.831), stdev = 367.567
[info]   CI (99.9%): [≈ 0, 2488.899] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   9906.929 ±(99.9%) 13080.151 B/op [Average]
[info]   (min, avg, max) = (6162.113, 9906.929, 12404.009), stdev = 3396.874
[info]   CI (99.9%): [≈ 0, 22987.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.062), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.307 ±(99.9%) 1.122 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.307, 0.576), stdev = 0.291
[info]   CI (99.9%): [≈ 0, 1.429] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 60.04% complete, ETA 00:53:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 391643.049 ops/s
[info] # Warmup Iteration   2: 536808.942 ops/s
[info] # Warmup Iteration   3: 539389.373 ops/s
[info] # Warmup Iteration   4: 536201.833 ops/s
[info] # Warmup Iteration   5: 535210.203 ops/s
[info] Iteration   1: 531027.630 ops/s
[info]                  ·gc.alloc.rate:               523.855 MB/sec
[info]                  ·gc.alloc.rate.norm:          1552.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.781 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1516.228 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 540223.099 ops/s
[info]                  ·gc.alloc.rate:      532.729 MB/sec
[info]                  ·gc.alloc.rate.norm: 1552.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 541856.430 ops/s
[info]                  ·gc.alloc.rate:                   534.322 MB/sec
[info]                  ·gc.alloc.rate.norm:              1552.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.801 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1939.708 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.084 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.053 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 543403.817 ops/s
[info]                  ·gc.alloc.rate:                   535.849 MB/sec
[info]                  ·gc.alloc.rate.norm:              1552.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.799 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1934.172 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.241 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   5: 541991.625 ops/s
[info]                  ·gc.alloc.rate:               534.439 MB/sec
[info]                  ·gc.alloc.rate.norm:          1552.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.120 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1940.210 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala":
[info]   539700.520 ±(99.9%) 19166.736 ops/s [Average]
[info]   (min, avg, max) = (531027.630, 539700.520, 543403.817), stdev = 4977.540
[info]   CI (99.9%): [520533.784, 558867.256] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   532.239 ±(99.9%) 18.541 MB/sec [Average]
[info]   (min, avg, max) = (523.855, 532.239, 535.849), stdev = 4.815
[info]   CI (99.9%): [513.698, 550.780] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1552.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1552.001, 1552.001, 1552.001), stdev = 0.001
[info]   CI (99.9%): [1552.001, 1552.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   503.100 ±(99.9%) 1113.810 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 503.100, 668.120), stdev = 289.253
[info]   CI (99.9%): [≈ 0, 1616.910] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1466.063 ±(99.9%) 3233.244 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1466.063, 1940.210), stdev = 839.663
[info]   CI (99.9%): [≈ 0, 4699.308] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.433 ±(99.9%) 3.555 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.433, 2.084), stdev = 0.923
[info]   CI (99.9%): [≈ 0, 3.989] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.259 ±(99.9%) 10.328 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.259, 6.053), stdev = 2.682
[info]   CI (99.9%): [≈ 0, 11.586] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 3.000), stdev = 1.304
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 60.24% complete, ETA 00:53:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1080764.464 ops/s
[info] # Warmup Iteration   2: 1118284.893 ops/s
[info] # Warmup Iteration   3: 1146334.823 ops/s
[info] # Warmup Iteration   4: 1143283.131 ops/s
[info] # Warmup Iteration   5: 1124194.362 ops/s
[info] Iteration   1: 1157082.650 ops/s
[info]                  ·gc.alloc.rate:                   858.680 MB/sec
[info]                  ·gc.alloc.rate.norm:              1168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.931 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1830.772 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.113 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 1163706.216 ops/s
[info]                  ·gc.alloc.rate:               863.793 MB/sec
[info]                  ·gc.alloc.rate.norm:          1168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.926 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 909.914 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 1160271.438 ops/s
[info]                  ·gc.alloc.rate:                   861.231 MB/sec
[info]                  ·gc.alloc.rate.norm:              1168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.940 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     912.640 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 1138922.156 ops/s
[info]                  ·gc.alloc.rate:                   845.504 MB/sec
[info]                  ·gc.alloc.rate.norm:              1168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.033 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     929.744 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.086 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   5: 1109380.965 ops/s
[info]                  ·gc.alloc.rate:                   823.637 MB/sec
[info]                  ·gc.alloc.rate.norm:              1168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.479 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1910.861 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.030 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala":
[info]   1145872.685 ±(99.9%) 86767.272 ops/s [Average]
[info]   (min, avg, max) = (1109380.965, 1145872.685, 1163706.216), stdev = 22533.185
[info]   CI (99.9%): [1059105.413, 1232639.957] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   850.569 ±(99.9%) 64.010 MB/sec [Average]
[info]   (min, avg, max) = (823.637, 850.569, 863.793), stdev = 16.623
[info]   CI (99.9%): [786.559, 914.579] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1168.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1168.000, 1168.000, 1168.000), stdev = 0.001
[info]   CI (99.9%): [1168.000, 1168.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   942.462 ±(99.9%) 1420.974 MB/sec [Average]
[info]   (min, avg, max) = (672.926, 942.462, 1347.479), stdev = 369.022
[info]   CI (99.9%): [≈ 0, 2363.435] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1298.786 ±(99.9%) 2013.934 B/op [Average]
[info]   (min, avg, max) = (909.914, 1298.786, 1910.861), stdev = 523.012
[info]   CI (99.9%): [≈ 0, 3312.720] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.083), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.169] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.051 ±(99.9%) 0.180 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.051, 0.113), stdev = 0.047
[info]   CI (99.9%): [≈ 0, 0.231] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 0.707
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 60.44% complete, ETA 00:52:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1073987.475 ops/s
[info] # Warmup Iteration   2: 1126999.914 ops/s
[info] # Warmup Iteration   3: 1119927.173 ops/s
[info] # Warmup Iteration   4: 1123578.064 ops/s
[info] # Warmup Iteration   5: 1124889.011 ops/s
[info] Iteration   1: 1126853.262 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1120405.541 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1133641.303 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1132395.927 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1132582.677 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc":
[info]   1129175.742 ±(99.9%) 21459.211 ops/s [Average]
[info]   (min, avg, max) = (1120405.541, 1129175.742, 1133641.303), stdev = 5572.889
[info]   CI (99.9%): [1107716.531, 1150634.953] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻³ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 60.64% complete, ETA 00:52:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 183365.420 ops/s
[info] # Warmup Iteration   2: 325740.443 ops/s
[info] # Warmup Iteration   3: 319225.271 ops/s
[info] # Warmup Iteration   4: 324524.927 ops/s
[info] # Warmup Iteration   5: 328607.126 ops/s
[info] Iteration   1: 328743.706 ops/s
[info]                  ·gc.alloc.rate:                   897.366 MB/sec
[info]                  ·gc.alloc.rate.norm:              4296.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          666.463 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3190.588 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.199 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 318248.627 ops/s
[info]                  ·gc.alloc.rate:                   868.691 MB/sec
[info]                  ·gc.alloc.rate.norm:              4296.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.600 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6595.149 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.103 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 328207.882 ops/s
[info]                  ·gc.alloc.rate:               895.881 MB/sec
[info]                  ·gc.alloc.rate.norm:          4296.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      667.155 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3199.196 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 318435.321 ops/s
[info]                  ·gc.alloc.rate:                   869.183 MB/sec
[info]                  ·gc.alloc.rate.norm:              4296.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.142 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3297.398 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.206 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 327033.414 ops/s
[info]                  ·gc.alloc.rate:                   892.661 MB/sec
[info]                  ·gc.alloc.rate.norm:              4296.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1335.524 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6427.318 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.200 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson":
[info]   324133.790 ±(99.9%) 20499.486 ops/s [Average]
[info]   (min, avg, max) = (318248.627, 324133.790, 328743.706), stdev = 5323.651
[info]   CI (99.9%): [303634.304, 344633.276] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   884.756 ±(99.9%) 55.996 MB/sec [Average]
[info]   (min, avg, max) = (868.691, 884.756, 897.366), stdev = 14.542
[info]   CI (99.9%): [828.760, 940.753] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   4296.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4296.001, 4296.001, 4296.001), stdev = 0.001
[info]   CI (99.9%): [4296.001, 4296.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   933.977 ±(99.9%) 1408.117 MB/sec [Average]
[info]   (min, avg, max) = (666.463, 933.977, 1335.524), stdev = 365.683
[info]   CI (99.9%): [≈ 0, 2342.093] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   4541.930 ±(99.9%) 6928.034 B/op [Average]
[info]   (min, avg, max) = (3190.588, 4541.930, 6595.149), stdev = 1799.188
[info]   CI (99.9%): [≈ 0, 11469.964] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.142 ±(99.9%) 0.347 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.142, 0.206), stdev = 0.090
[info]   CI (99.9%): [≈ 0, 0.488] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 3.000), stdev = 0.894
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 60.84% complete, ETA 00:52:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 40883.551 ops/s
[info] # Warmup Iteration   2: 43351.197 ops/s
[info] # Warmup Iteration   3: 44509.863 ops/s
[info] # Warmup Iteration   4: 44689.016 ops/s
[info] # Warmup Iteration   5: 44621.438 ops/s
[info] Iteration   1: 44553.851 ops/s
[info]                  ·gc.alloc.rate:                   336.311 MB/sec
[info]                  ·gc.alloc.rate.norm:              11880.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.601 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18071.999 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.006 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.208 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 43676.018 ops/s
[info]                  ·gc.alloc.rate:      329.672 MB/sec
[info]                  ·gc.alloc.rate.norm: 11880.010 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 44602.428 ops/s
[info]                  ·gc.alloc.rate:               336.669 MB/sec
[info]                  ·gc.alloc.rate.norm:          11880.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.594 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 18052.554 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 44657.217 ops/s
[info]                  ·gc.alloc.rate:      337.235 MB/sec
[info]                  ·gc.alloc.rate.norm: 11880.010 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 44612.619 ops/s
[info]                  ·gc.alloc.rate:                   336.758 MB/sec
[info]                  ·gc.alloc.rate.norm:              11880.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.557 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18046.485 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.052 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.836 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeUPickle":
[info]   44420.426 ±(99.9%) 1608.627 ops/s [Average]
[info]   (min, avg, max) = (43676.018, 44420.426, 44657.217), stdev = 417.755
[info]   CI (99.9%): [42811.799, 46029.053] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeUPickle:·gc.alloc.rate":
[info]   335.329 ±(99.9%) 12.243 MB/sec [Average]
[info]   (min, avg, max) = (329.672, 335.329, 337.235), stdev = 3.179
[info]   CI (99.9%): [323.086, 347.572] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeUPickle:·gc.alloc.rate.norm":
[info]   11880.010 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (11880.010, 11880.010, 11880.010), stdev = 0.001
[info]   CI (99.9%): [11880.009, 11880.011] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space":
[info]   306.950 ±(99.9%) 1078.974 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 306.950, 511.601), stdev = 280.206
[info]   CI (99.9%): [≈ 0, 1385.924] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   10834.208 ±(99.9%) 38083.784 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 10834.208, 18071.999), stdev = 9890.238
[info]   CI (99.9%): [≈ 0, 48917.992] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.052), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.099] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   0.409 ±(99.9%) 3.092 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.409, 1.836), stdev = 0.803
[info]   CI (99.9%): [≈ 0, 3.501] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeUPickle:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeUPickle:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 3.000), stdev = 1.304
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 61.04% complete, ETA 00:52:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 478.734 ops/s
[info] # Warmup Iteration   2: 697.683 ops/s
[info] # Warmup Iteration   3: 699.910 ops/s
[info] # Warmup Iteration   4: 692.607 ops/s
[info] # Warmup Iteration   5: 711.016 ops/s
[info] Iteration   1: 711.044 ops/s
[info]                  ·gc.alloc.rate:                   1484.391 MB/sec
[info]                  ·gc.alloc.rate.norm:              3283720.607 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1996.543 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4416684.584 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 138.067 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 707.843 ops/s
[info]                  ·gc.alloc.rate:                   1477.554 MB/sec
[info]                  ·gc.alloc.rate.norm:              3283720.610 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.160 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2965041.175 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 92.565 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 705.661 ops/s
[info]                  ·gc.alloc.rate:                   1485.892 MB/sec
[info]                  ·gc.alloc.rate.norm:              3313455.751 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1335.413 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2977896.431 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 46.414 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 703.482 ops/s
[info]                  ·gc.alloc.rate:               1468.017 MB/sec
[info]                  ·gc.alloc.rate.norm:          3283722.148 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1337.741 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2992314.182 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 705.553 ops/s
[info]                  ·gc.alloc.rate:                   1472.281 MB/sec
[info]                  ·gc.alloc.rate.norm:              3283720.827 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.489 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2989778.312 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 46.414 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce":
[info]   706.717 ±(99.9%) 11.049 ops/s [Average]
[info]   (min, avg, max) = (703.482, 706.717, 711.044), stdev = 2.869
[info]   CI (99.9%): [695.668, 717.765] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:·gc.alloc.rate":
[info]   1477.627 ±(99.9%) 29.515 MB/sec [Average]
[info]   (min, avg, max) = (1468.017, 1477.627, 1485.892), stdev = 7.665
[info]   CI (99.9%): [1448.112, 1507.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   3289667.989 ±(99.9%) 51204.952 B/op [Average]
[info]   (min, avg, max) = (3283720.607, 3289667.989, 3313455.751), stdev = 13297.763
[info]   CI (99.9%): [3238463.037, 3340872.940] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1468.869 ±(99.9%) 1135.895 MB/sec [Average]
[info]   (min, avg, max) = (1334.160, 1468.869, 1996.543), stdev = 294.988
[info]   CI (99.9%): [332.974, 2604.764] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   3268342.937 ±(99.9%) 2472243.699 B/op [Average]
[info]   (min, avg, max) = (2965041.175, 3268342.937, 4416684.584), stdev = 642033.838
[info]   CI (99.9%): [796099.238, 5740586.636] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.120] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   64.692 ±(99.9%) 202.059 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 64.692, 138.067), stdev = 52.474
[info]   CI (99.9%): [≈ 0, 266.751] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 61.24% complete, ETA 00:51:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 371.831 ops/s
[info] # Warmup Iteration   2: 660.433 ops/s
[info] # Warmup Iteration   3: 673.157 ops/s
[info] # Warmup Iteration   4: 665.612 ops/s
[info] # Warmup Iteration   5: 664.192 ops/s
[info] Iteration   1: 664.143 ops/s
[info]                  ·gc.alloc.rate:                   1377.687 MB/sec
[info]                  ·gc.alloc.rate.norm:              3263536.734 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.961 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3136267.164 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 49.275 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 664.790 ops/s
[info]                  ·gc.alloc.rate:                   1378.981 MB/sec
[info]                  ·gc.alloc.rate.norm:              3263536.698 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1326.870 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3140209.179 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 98.550 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 665.190 ops/s
[info]                  ·gc.alloc.rate:               1380.033 MB/sec
[info]                  ·gc.alloc.rate.norm:          3263536.649 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1328.219 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3141004.685 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 635.665 ops/s
[info]                  ·gc.alloc.rate:                   1318.282 MB/sec
[info]                  ·gc.alloc.rate.norm:              3263566.314 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1331.286 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3295760.101 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 103.044 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 624.485 ops/s
[info]                  ·gc.alloc.rate:                   1295.199 MB/sec
[info]                  ·gc.alloc.rate.norm:              3263475.610 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.697 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3360476.365 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 157.286 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala":
[info]   650.854 ±(99.9%) 74.626 ops/s [Average]
[info]   (min, avg, max) = (624.485, 650.854, 665.190), stdev = 19.380
[info]   CI (99.9%): [576.229, 725.480] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1350.037 ±(99.9%) 155.435 MB/sec [Average]
[info]   (min, avg, max) = (1295.199, 1350.037, 1380.033), stdev = 40.366
[info]   CI (99.9%): [1194.601, 1505.472] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   3263530.401 ±(99.9%) 127.866 B/op [Average]
[info]   (min, avg, max) = (3263475.610, 3263530.401, 3263566.314), stdev = 33.206
[info]   CI (99.9%): [3263402.535, 3263658.267] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1328.807 ±(99.9%) 14.617 MB/sec [Average]
[info]   (min, avg, max) = (1323.961, 1328.807, 1333.697), stdev = 3.796
[info]   CI (99.9%): [1314.190, 1343.423] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   3214743.499 ±(99.9%) 408209.443 B/op [Average]
[info]   (min, avg, max) = (3136267.164, 3214743.499, 3360476.365), stdev = 106010.696
[info]   CI (99.9%): [2806534.056, 3622952.942] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   81.631 ±(99.9%) 229.259 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 81.631, 157.286), stdev = 59.538
[info]   CI (99.9%): [≈ 0, 310.890] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 61.45% complete, ETA 00:51:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 25245.269 ops/s
[info] # Warmup Iteration   2: 39609.694 ops/s
[info] # Warmup Iteration   3: 40108.397 ops/s
[info] # Warmup Iteration   4: 38116.018 ops/s
[info] # Warmup Iteration   5: 39133.450 ops/s
[info] Iteration   1: 39515.986 ops/s
[info]                  ·gc.alloc.rate:                   695.682 MB/sec
[info]                  ·gc.alloc.rate.norm:              27704.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:          669.219 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     26650.168 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3.594 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 143.106 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 39759.730 ops/s
[info]                  ·gc.alloc.rate:               699.893 MB/sec
[info]                  ·gc.alloc.rate.norm:          27704.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:      669.172 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 26487.982 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   3: 39373.721 ops/s
[info]                  ·gc.alloc.rate:               693.121 MB/sec
[info]                  ·gc.alloc.rate.norm:          27704.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:      667.545 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 26681.730 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 39341.055 ops/s
[info]                  ·gc.alloc.rate:               692.525 MB/sec
[info]                  ·gc.alloc.rate.norm:          27704.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:      667.513 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 26703.430 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 39228.844 ops/s
[info]                  ·gc.alloc.rate:                   690.505 MB/sec
[info]                  ·gc.alloc.rate.norm:              27704.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:          666.783 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     26752.251 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.506 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala":
[info]   39443.867 ±(99.9%) 786.078 ops/s [Average]
[info]   (min, avg, max) = (39228.844, 39443.867, 39759.730), stdev = 204.142
[info]   CI (99.9%): [38657.789, 40229.945] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   694.345 ±(99.9%) 13.900 MB/sec [Average]
[info]   (min, avg, max) = (690.505, 694.345, 699.893), stdev = 3.610
[info]   CI (99.9%): [680.445, 708.245] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   27704.011 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (27704.011, 27704.011, 27704.012), stdev = 0.001
[info]   CI (99.9%): [27704.010, 27704.013] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   668.046 ±(99.9%) 4.207 MB/sec [Average]
[info]   (min, avg, max) = (666.783, 668.046, 669.219), stdev = 1.092
[info]   CI (99.9%): [663.839, 672.253] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   26655.112 ±(99.9%) 387.158 B/op [Average]
[info]   (min, avg, max) = (26487.982, 26655.112, 26752.251), stdev = 100.544
[info]   CI (99.9%): [26267.954, 27042.270] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.731 ±(99.9%) 6.162 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.731, 3.594), stdev = 1.600
[info]   CI (99.9%): [≈ 0, 6.894] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   29.122 ±(99.9%) 245.394 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 29.122, 143.106), stdev = 63.728
[info]   CI (99.9%): [≈ 0, 274.517] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 3.000), stdev = 1.095
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 61.65% complete, ETA 00:51:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 367.328 ops/s
[info] # Warmup Iteration   2: 638.634 ops/s
[info] # Warmup Iteration   3: 661.574 ops/s
[info] # Warmup Iteration   4: 639.219 ops/s
[info] # Warmup Iteration   5: 626.803 ops/s
[info] Iteration   1: 634.343 ops/s
[info]                  ·gc.alloc.rate:                   1356.591 MB/sec
[info]                  ·gc.alloc.rate.norm:              3364920.680 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1325.142 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3286914.217 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 51.603 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 623.338 ops/s
[info]                  ·gc.alloc.rate:                   1333.668 MB/sec
[info]                  ·gc.alloc.rate.norm:              3364920.692 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1327.381 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3349057.641 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 105.026 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 634.979 ops/s
[info]                  ·gc.alloc.rate:               1358.330 MB/sec
[info]                  ·gc.alloc.rate.norm:          3364920.679 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1329.081 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3292462.692 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 641.843 ops/s
[info]                  ·gc.alloc.rate:                   1372.328 MB/sec
[info]                  ·gc.alloc.rate.norm:              3364931.813 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.887 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3268225.196 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 51.040 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 634.900 ops/s
[info]                  ·gc.alloc.rate:                   1358.441 MB/sec
[info]                  ·gc.alloc.rate.norm:              3364940.038 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.507 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3305652.327 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 51.522 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson":
[info]   633.881 ±(99.9%) 25.616 ops/s [Average]
[info]   (min, avg, max) = (623.338, 633.881, 641.843), stdev = 6.652
[info]   CI (99.9%): [608.265, 659.496] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1355.872 ±(99.9%) 53.666 MB/sec [Average]
[info]   (min, avg, max) = (1333.668, 1355.872, 1372.328), stdev = 13.937
[info]   CI (99.9%): [1302.206, 1409.538] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   3364926.781 ±(99.9%) 34.040 B/op [Average]
[info]   (min, avg, max) = (3364920.679, 3364926.781, 3364940.038), stdev = 8.840
[info]   CI (99.9%): [3364892.741, 3364960.820] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1329.800 ±(99.9%) 14.882 MB/sec [Average]
[info]   (min, avg, max) = (1325.142, 1329.800, 1334.507), stdev = 3.865
[info]   CI (99.9%): [1314.918, 1344.682] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   3300462.415 ±(99.9%) 116719.914 B/op [Average]
[info]   (min, avg, max) = (3268225.196, 3300462.415, 3349057.641), stdev = 30311.791
[info]   CI (99.9%): [3183742.501, 3417182.328] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.077] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   51.838 ±(99.9%) 143.005 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 51.838, 105.026), stdev = 37.138
[info]   CI (99.9%): [≈ 0, 194.843] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 61.85% complete, ETA 00:50:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 479.343 ops/s
[info] # Warmup Iteration   2: 667.302 ops/s
[info] # Warmup Iteration   3: 659.502 ops/s
[info] # Warmup Iteration   4: 660.775 ops/s
[info] # Warmup Iteration   5: 657.194 ops/s
[info] Iteration   1: 660.548 ops/s
[info]                  ·gc.alloc.rate:                   1374.822 MB/sec
[info]                  ·gc.alloc.rate.norm:              3275304.702 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.084 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3175868.611 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 99.147 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 662.341 ops/s
[info]                  ·gc.alloc.rate:                   1378.949 MB/sec
[info]                  ·gc.alloc.rate.norm:              3275304.652 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.050 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3168660.658 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 98.848 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 662.386 ops/s
[info]                  ·gc.alloc.rate:               1378.785 MB/sec
[info]                  ·gc.alloc.rate.norm:          3275304.652 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1335.556 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3172614.564 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 658.143 ops/s
[info]                  ·gc.alloc.rate:               1370.187 MB/sec
[info]                  ·gc.alloc.rate.norm:          3275276.455 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1337.292 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3196645.196 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 661.759 ops/s
[info]                  ·gc.alloc.rate:                   1377.239 MB/sec
[info]                  ·gc.alloc.rate.norm:              3275256.653 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.423 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3187702.719 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 98.997 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readUPickle":
[info]   661.035 ±(99.9%) 6.849 ops/s [Average]
[info]   (min, avg, max) = (658.143, 661.035, 662.386), stdev = 1.779
[info]   CI (99.9%): [654.187, 667.884] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readUPickle:·gc.alloc.rate":
[info]   1375.996 ±(99.9%) 14.039 MB/sec [Average]
[info]   (min, avg, max) = (1370.187, 1375.996, 1378.949), stdev = 3.646
[info]   CI (99.9%): [1361.958, 1390.035] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readUPickle:·gc.alloc.rate.norm":
[info]   3275289.423 ±(99.9%) 84.787 B/op [Average]
[info]   (min, avg, max) = (3275256.653, 3275289.423, 3275304.702), stdev = 22.019
[info]   CI (99.9%): [3275204.636, 3275374.210] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readUPickle:·gc.churn.PS_Eden_Space":
[info]   1336.081 ±(99.9%) 11.177 MB/sec [Average]
[info]   (min, avg, max) = (1333.084, 1336.081, 1340.423), stdev = 2.903
[info]   CI (99.9%): [1324.904, 1347.258] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   3180298.350 ±(99.9%) 44580.375 B/op [Average]
[info]   (min, avg, max) = (3168660.658, 3180298.350, 3196645.196), stdev = 11577.382
[info]   CI (99.9%): [3135717.974, 3224878.725] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readUPickle:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.042), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   59.398 ±(99.9%) 208.794 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 59.398, 99.147), stdev = 54.223
[info]   CI (99.9%): [≈ 0, 268.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readUPickle:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readUPickle:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 62.05% complete, ETA 00:50:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 8566.621 ops/s
[info] # Warmup Iteration   2: 13174.069 ops/s
[info] # Warmup Iteration   3: 13213.305 ops/s
[info] # Warmup Iteration   4: 12676.717 ops/s
[info] # Warmup Iteration   5: 13096.036 ops/s
[info] Iteration   1: 13115.502 ops/s
[info]                  ·gc.alloc.rate:               1068.621 MB/sec
[info]                  ·gc.alloc.rate.norm:          128228.585 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1328.301 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 159388.668 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 13132.119 ops/s
[info]                  ·gc.alloc.rate:                   1069.910 MB/sec
[info]                  ·gc.alloc.rate.norm:              128232.033 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1328.145 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     159182.379 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 14.968 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 13128.787 ops/s
[info]                  ·gc.alloc.rate:               1069.949 MB/sec
[info]                  ·gc.alloc.rate.norm:          128232.033 B/op
[info]                  ·gc.churn.PS_Eden_Space:      664.632 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 79655.362 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 12881.346 ops/s
[info]                  ·gc.alloc.rate:                   1049.792 MB/sec
[info]                  ·gc.alloc.rate.norm:              128215.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1330.505 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     162499.572 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.544 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 13028.552 ops/s
[info]                  ·gc.alloc.rate:               1061.237 MB/sec
[info]                  ·gc.alloc.rate.norm:          128168.033 B/op
[info]                  ·gc.churn.PS_Eden_Space:      665.560 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 80381.171 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce":
[info]   13057.261 ±(99.9%) 412.405 ops/s [Average]
[info]   (min, avg, max) = (12881.346, 13057.261, 13132.119), stdev = 107.100
[info]   CI (99.9%): [12644.856, 13469.666] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.alloc.rate":
[info]   1063.902 ±(99.9%) 33.410 MB/sec [Average]
[info]   (min, avg, max) = (1049.792, 1063.902, 1069.949), stdev = 8.677
[info]   CI (99.9%): [1030.492, 1097.312] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   128215.137 ±(99.9%) 104.936 B/op [Average]
[info]   (min, avg, max) = (128168.033, 128215.137, 128232.033), stdev = 27.252
[info]   CI (99.9%): [128110.201, 128320.073] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1063.429 ±(99.9%) 1400.200 MB/sec [Average]
[info]   (min, avg, max) = (664.632, 1063.429, 1330.505), stdev = 363.627
[info]   CI (99.9%): [≈ 0, 2463.628] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   128221.430 ±(99.9%) 169519.339 B/op [Average]
[info]   (min, avg, max) = (79655.362, 128221.430, 162499.572), stdev = 44023.634
[info]   CI (99.9%): [≈ 0, 297740.769] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.209 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.125), stdev = 0.054
[info]   CI (99.9%): [≈ 0, 0.238] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   3.502 ±(99.9%) 25.043 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.502, 14.968), stdev = 6.504
[info]   CI (99.9%): [≈ 0, 28.545] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.200, 5.000), stdev = 1.643
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 62.25% complete, ETA 00:50:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 10305.188 ops/s
[info] # Warmup Iteration   2: 15360.186 ops/s
[info] # Warmup Iteration   3: 14863.132 ops/s
[info] # Warmup Iteration   4: 15356.166 ops/s
[info] # Warmup Iteration   5: 15345.023 ops/s
[info] Iteration   1: 15365.166 ops/s
[info]                  ·gc.alloc.rate:                   967.780 MB/sec
[info]                  ·gc.alloc.rate.norm:              99120.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.859 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     67889.974 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.132 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 15376.627 ops/s
[info]                  ·gc.alloc.rate:                   968.591 MB/sec
[info]                  ·gc.alloc.rate.norm:              99119.929 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1325.461 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     135639.919 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.392 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 15406.489 ops/s
[info]                  ·gc.alloc.rate:               970.295 MB/sec
[info]                  ·gc.alloc.rate.norm:          99120.138 B/op
[info]                  ·gc.churn.PS_Eden_Space:      662.479 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 67675.309 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 14870.722 ops/s
[info]                  ·gc.alloc.rate:                   936.841 MB/sec
[info]                  ·gc.alloc.rate.norm:              99120.033 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1326.624 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     140360.012 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.609 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 15431.850 ops/s
[info]                  ·gc.alloc.rate:               971.965 MB/sec
[info]                  ·gc.alloc.rate.norm:          99120.030 B/op
[info]                  ·gc.churn.PS_Eden_Space:      663.835 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 67697.181 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala":
[info]   15290.171 ±(99.9%) 908.456 ops/s [Average]
[info]   (min, avg, max) = (14870.722, 15290.171, 15431.850), stdev = 235.923
[info]   CI (99.9%): [14381.715, 16198.626] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   963.095 ±(99.9%) 56.852 MB/sec [Average]
[info]   (min, avg, max) = (936.841, 963.095, 971.965), stdev = 14.764
[info]   CI (99.9%): [906.243, 1019.946] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   99120.028 ±(99.9%) 0.287 B/op [Average]
[info]   (min, avg, max) = (99119.929, 99120.028, 99120.138), stdev = 0.074
[info]   CI (99.9%): [99119.741, 99120.315] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   928.252 ±(99.9%) 1398.294 MB/sec [Average]
[info]   (min, avg, max) = (662.479, 928.252, 1326.624), stdev = 363.133
[info]   CI (99.9%): [≈ 0, 2326.546] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   95852.479 ±(99.9%) 148293.996 B/op [Average]
[info]   (min, avg, max) = (67675.309, 95852.479, 140360.012), stdev = 38511.480
[info]   CI (99.9%): [≈ 0, 244146.474] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.151] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   3.027 ±(99.9%) 12.666 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.027, 6.609), stdev = 3.289
[info]   CI (99.9%): [≈ 0, 15.693] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 62.45% complete, ETA 00:50:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 259217.291 ops/s
[info] # Warmup Iteration   2: 282201.841 ops/s
[info] # Warmup Iteration   3: 276897.878 ops/s
[info] # Warmup Iteration   4: 278237.793 ops/s
[info] # Warmup Iteration   5: 279079.088 ops/s
[info] Iteration   1: 278078.841 ops/s
[info]                  ·gc.alloc.rate:                   1008.221 MB/sec
[info]                  ·gc.alloc.rate.norm:              5704.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1335.488 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7555.511 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.236 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 279733.458 ops/s
[info]                  ·gc.alloc.rate:                   1013.819 MB/sec
[info]                  ·gc.alloc.rate.norm:              5704.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.637 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7503.375 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.703 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 279686.257 ops/s
[info]                  ·gc.alloc.rate:               1013.661 MB/sec
[info]                  ·gc.alloc.rate.norm:          5704.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      667.157 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3754.179 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 274301.491 ops/s
[info]                  ·gc.alloc.rate:                   994.077 MB/sec
[info]                  ·gc.alloc.rate.norm:              5704.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.881 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7659.531 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.597 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 279451.250 ops/s
[info]                  ·gc.alloc.rate:               1013.055 MB/sec
[info]                  ·gc.alloc.rate.norm:          5704.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      667.980 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3761.060 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala":
[info]   278250.259 ±(99.9%) 8891.258 ops/s [Average]
[info]   (min, avg, max) = (274301.491, 278250.259, 279733.458), stdev = 2309.031
[info]   CI (99.9%): [269359.002, 287141.517] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1008.567 ±(99.9%) 32.432 MB/sec [Average]
[info]   (min, avg, max) = (994.077, 1008.567, 1013.819), stdev = 8.423
[info]   CI (99.9%): [976.134, 1040.999] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   5704.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5704.002, 5704.002, 5704.002), stdev = 0.001
[info]   CI (99.9%): [5704.001, 5704.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1067.828 ±(99.9%) 1406.973 MB/sec [Average]
[info]   (min, avg, max) = (667.157, 1067.828, 1335.488), stdev = 365.386
[info]   CI (99.9%): [≈ 0, 2474.801] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   6046.731 ±(99.9%) 8049.467 B/op [Average]
[info]   (min, avg, max) = (3754.179, 6046.731, 7659.531), stdev = 2090.421
[info]   CI (99.9%): [≈ 0, 14096.198] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.224 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.125), stdev = 0.058
[info]   CI (99.9%): [≈ 0, 0.278] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.307 ±(99.9%) 1.269 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.307, 0.703), stdev = 0.330
[info]   CI (99.9%): [≈ 0, 1.576] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 62.65% complete, ETA 00:49:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 262372.144 ops/s
[info] # Warmup Iteration   2: 279741.034 ops/s
[info] # Warmup Iteration   3: 286461.581 ops/s
[info] # Warmup Iteration   4: 287476.418 ops/s
[info] # Warmup Iteration   5: 284953.314 ops/s
[info] Iteration   1: 285681.666 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 285009.316 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 285981.594 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 287477.717 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 286371.482 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc":
[info]   286104.355 ±(99.9%) 3524.089 ops/s [Average]
[info]   (min, avg, max) = (285009.316, 286104.355, 287477.717), stdev = 915.195
[info]   CI (99.9%): [282580.266, 289628.445] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (0.002, 0.002, 0.002), stdev = 0.001
[info]   CI (99.9%): [0.001, 0.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 62.85% complete, ETA 00:49:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 10650.342 ops/s
[info] # Warmup Iteration   2: 14891.643 ops/s
[info] # Warmup Iteration   3: 15015.996 ops/s
[info] # Warmup Iteration   4: 14832.204 ops/s
[info] # Warmup Iteration   5: 15118.307 ops/s
[info] Iteration   1: 15092.560 ops/s
[info]                  ·gc.alloc.rate:               1026.305 MB/sec
[info]                  ·gc.alloc.rate.norm:          107024.029 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1328.184 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 138504.276 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 15109.514 ops/s
[info]                  ·gc.alloc.rate:               1027.511 MB/sec
[info]                  ·gc.alloc.rate.norm:          107024.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:      663.459 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 69104.856 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   3: 15029.618 ops/s
[info]                  ·gc.alloc.rate:                   1022.041 MB/sec
[info]                  ·gc.alloc.rate.norm:              107017.449 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1327.624 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     139014.965 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.899 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 14641.045 ops/s
[info]                  ·gc.alloc.rate:               995.853 MB/sec
[info]                  ·gc.alloc.rate.norm:          107008.048 B/op
[info]                  ·gc.churn.PS_Eden_Space:      664.376 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 71389.666 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 14587.388 ops/s
[info]                  ·gc.alloc.rate:                   991.837 MB/sec
[info]                  ·gc.alloc.rate.norm:              107007.896 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1330.292 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     143523.391 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.246 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson":
[info]   14892.025 ±(99.9%) 985.949 ops/s [Average]
[info]   (min, avg, max) = (14587.388, 14892.025, 15109.514), stdev = 256.048
[info]   CI (99.9%): [13906.076, 15877.974] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1012.709 ±(99.9%) 66.995 MB/sec [Average]
[info]   (min, avg, max) = (991.837, 1012.709, 1027.511), stdev = 17.398
[info]   CI (99.9%): [945.714, 1079.704] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   107016.286 ±(99.9%) 31.000 B/op [Average]
[info]   (min, avg, max) = (107007.896, 107016.286, 107024.029), stdev = 8.051
[info]   CI (99.9%): [106985.287, 107047.286] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1062.787 ±(99.9%) 1402.089 MB/sec [Average]
[info]   (min, avg, max) = (663.459, 1062.787, 1330.292), stdev = 364.118
[info]   CI (99.9%): [≈ 0, 2464.876] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   112307.431 ±(99.9%) 148071.268 B/op [Average]
[info]   (min, avg, max) = (69104.856, 112307.431, 143523.391), stdev = 38453.638
[info]   CI (99.9%): [≈ 0, 260378.699] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.174 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.104), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.199] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   2.629 ±(99.9%) 18.191 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.629, 10.899), stdev = 4.724
[info]   CI (99.9%): [≈ 0, 20.820] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.600, 2.000), stdev = 0.894
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 63.05% complete, ETA 00:49:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5876.345 ops/s
[info] # Warmup Iteration   2: 6943.085 ops/s
[info] # Warmup Iteration   3: 6749.142 ops/s
[info] # Warmup Iteration   4: 6939.809 ops/s
[info] # Warmup Iteration   5: 6899.886 ops/s
[info] Iteration   1: 6962.690 ops/s
[info]                  ·gc.alloc.rate:                   775.975 MB/sec
[info]                  ·gc.alloc.rate.norm:              175400.062 B/op
[info]                  ·gc.churn.PS_Eden_Space:          669.128 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     151248.505 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.705 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 6976.729 ops/s
[info]                  ·gc.alloc.rate:               777.677 MB/sec
[info]                  ·gc.alloc.rate.norm:          175400.062 B/op
[info]                  ·gc.churn.PS_Eden_Space:      667.489 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 150547.808 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   3: 6981.082 ops/s
[info]                  ·gc.alloc.rate:                   778.136 MB/sec
[info]                  ·gc.alloc.rate.norm:              175400.062 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.500 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     150461.571 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.385 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 6930.111 ops/s
[info]                  ·gc.alloc.rate:                   772.572 MB/sec
[info]                  ·gc.alloc.rate.norm:              175400.062 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.603 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     151568.545 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.727 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 6982.283 ops/s
[info]                  ·gc.alloc.rate:               778.121 MB/sec
[info]                  ·gc.alloc.rate.norm:          175400.066 B/op
[info]                  ·gc.churn.PS_Eden_Space:      667.392 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 150440.027 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeUPickle":
[info]   6966.579 ±(99.9%) 84.033 ops/s [Average]
[info]   (min, avg, max) = (6930.111, 6966.579, 6982.283), stdev = 21.823
[info]   CI (99.9%): [6882.546, 7050.613] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeUPickle:·gc.alloc.rate":
[info]   776.496 ±(99.9%) 9.112 MB/sec [Average]
[info]   (min, avg, max) = (772.572, 776.496, 778.136), stdev = 2.366
[info]   CI (99.9%): [767.385, 785.608] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeUPickle:·gc.alloc.rate.norm":
[info]   175400.063 ±(99.9%) 0.008 B/op [Average]
[info]   (min, avg, max) = (175400.062, 175400.063, 175400.066), stdev = 0.002
[info]   CI (99.9%): [175400.055, 175400.071] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeUPickle:·gc.churn.PS_Eden_Space":
[info]   667.822 ±(99.9%) 2.825 MB/sec [Average]
[info]   (min, avg, max) = (667.392, 667.822, 669.128), stdev = 0.734
[info]   CI (99.9%): [664.997, 670.647] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   150853.291 ±(99.9%) 2005.788 B/op [Average]
[info]   (min, avg, max) = (150440.027, 150853.291, 151568.545), stdev = 520.897
[info]   CI (99.9%): [148847.504, 152859.079] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   3.763 ±(99.9%) 15.129 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.763, 9.385), stdev = 3.929
[info]   CI (99.9%): [≈ 0, 18.892] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeUPickle:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeUPickle:·gc.time":
[info]   4.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 63.25% complete, ETA 00:49:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1019746.406 ops/s
[info] # Warmup Iteration   2: 1085682.473 ops/s
[info] # Warmup Iteration   3: 1088591.349 ops/s
[info] # Warmup Iteration   4: 1088833.183 ops/s
[info] # Warmup Iteration   5: 1088525.571 ops/s
[info] Iteration   1: 1088659.354 ops/s
[info]                  ·gc.alloc.rate:      44.272 MB/sec
[info]                  ·gc.alloc.rate.norm: 64.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1089313.751 ops/s
[info]                  ·gc.alloc.rate:      44.300 MB/sec
[info]                  ·gc.alloc.rate.norm: 64.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1088678.826 ops/s
[info]                  ·gc.alloc.rate:      44.270 MB/sec
[info]                  ·gc.alloc.rate.norm: 64.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1088086.908 ops/s
[info]                  ·gc.alloc.rate:      44.246 MB/sec
[info]                  ·gc.alloc.rate.norm: 64.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1088332.156 ops/s
[info]                  ·gc.alloc.rate:      44.253 MB/sec
[info]                  ·gc.alloc.rate.norm: 64.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala":
[info]   1088614.199 ±(99.9%) 1778.369 ops/s [Average]
[info]   (min, avg, max) = (1088086.908, 1088614.199, 1089313.751), stdev = 461.837
[info]   CI (99.9%): [1086835.830, 1090392.568] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   44.268 ±(99.9%) 0.082 MB/sec [Average]
[info]   (min, avg, max) = (44.246, 44.268, 44.300), stdev = 0.021
[info]   CI (99.9%): [44.186, 44.350] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   64.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (64.000, 64.000, 64.000), stdev = 0.001
[info]   CI (99.9%): [64.000, 64.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 63.45% complete, ETA 00:48:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 34441.354 ops/s
[info] # Warmup Iteration   2: 70747.165 ops/s
[info] # Warmup Iteration   3: 72715.793 ops/s
[info] # Warmup Iteration   4: 72293.006 ops/s
[info] # Warmup Iteration   5: 73226.645 ops/s
[info] Iteration   1: 73289.928 ops/s
[info]                  ·gc.alloc.rate:                   3210.865 MB/sec
[info]                  ·gc.alloc.rate.norm:              68944.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3370.012 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     72361.214 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.894 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 72683.134 ops/s
[info]                  ·gc.alloc.rate:                   3183.981 MB/sec
[info]                  ·gc.alloc.rate.norm:              68944.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3380.311 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     73195.209 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.803 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 73257.639 ops/s
[info]                  ·gc.alloc.rate:                   3209.428 MB/sec
[info]                  ·gc.alloc.rate.norm:              68944.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2711.361 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     58244.682 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.789 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 73194.232 ops/s
[info]                  ·gc.alloc.rate:                   3207.599 MB/sec
[info]                  ·gc.alloc.rate.norm:              68944.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3395.183 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     72975.928 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.238 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 72829.129 ops/s
[info]                  ·gc.alloc.rate:                   3190.339 MB/sec
[info]                  ·gc.alloc.rate.norm:              68944.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3398.637 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     73445.378 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.450 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson":
[info]   73050.812 ±(99.9%) 1063.040 ops/s [Average]
[info]   (min, avg, max) = (72683.134, 73050.812, 73289.928), stdev = 276.068
[info]   CI (99.9%): [71987.773, 74113.852] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3200.443 ±(99.9%) 47.694 MB/sec [Average]
[info]   (min, avg, max) = (3183.981, 3200.443, 3210.865), stdev = 12.386
[info]   CI (99.9%): [3152.749, 3248.137] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   68944.006 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (68944.006, 68944.006, 68944.006), stdev = 0.001
[info]   CI (99.9%): [68944.005, 68944.007] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3251.101 ±(99.9%) 1162.678 MB/sec [Average]
[info]   (min, avg, max) = (2711.361, 3251.101, 3398.637), stdev = 301.944
[info]   CI (99.9%): [2088.423, 4413.779] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   70044.482 ±(99.9%) 25446.980 B/op [Average]
[info]   (min, avg, max) = (58244.682, 70044.482, 73445.378), stdev = 6608.500
[info]   CI (99.9%): [44597.502, 95491.462] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.067, 0.104), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.198] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.435 ±(99.9%) 2.835 B/op [Average]
[info]   (min, avg, max) = (0.450, 1.435, 2.238), stdev = 0.736
[info]   CI (99.9%): [≈ 0, 4.270] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 63.65% complete, ETA 00:48:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1038440.281 ops/s
[info] # Warmup Iteration   2: 1595498.667 ops/s
[info] # Warmup Iteration   3: 1593400.961 ops/s
[info] # Warmup Iteration   4: 1590847.151 ops/s
[info] # Warmup Iteration   5: 1600814.700 ops/s
[info] Iteration   1: 1602185.002 ops/s
[info]                  ·gc.alloc.rate:                   896.198 MB/sec
[info]                  ·gc.alloc.rate.norm:              880.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1335.832 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1311.688 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.082 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 1603305.372 ops/s
[info]                  ·gc.alloc.rate:               896.552 MB/sec
[info]                  ·gc.alloc.rate.norm:          880.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      667.528 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 655.204 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 1580375.142 ops/s
[info]                  ·gc.alloc.rate:                   883.740 MB/sec
[info]                  ·gc.alloc.rate.norm:              880.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.862 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     665.035 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.062 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 1581812.908 ops/s
[info]                  ·gc.alloc.rate:                   884.510 MB/sec
[info]                  ·gc.alloc.rate.norm:              880.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.378 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1329.565 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.062 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 1562368.302 ops/s
[info]                  ·gc.alloc.rate:               873.550 MB/sec
[info]                  ·gc.alloc.rate.norm:          880.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.459 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 673.395 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala":
[info]   1586009.345 ±(99.9%) 65829.617 ops/s [Average]
[info]   (min, avg, max) = (1562368.302, 1586009.345, 1603305.372), stdev = 17095.743
[info]   CI (99.9%): [1520179.728, 1651838.963] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   886.910 ±(99.9%) 37.212 MB/sec [Average]
[info]   (min, avg, max) = (873.550, 886.910, 896.552), stdev = 9.664
[info]   CI (99.9%): [849.698, 924.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   880.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (880.000, 880.000, 880.000), stdev = 0.001
[info]   CI (99.9%): [880.000, 880.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   935.212 ±(99.9%) 1409.197 MB/sec [Average]
[info]   (min, avg, max) = (667.528, 935.212, 1336.378), stdev = 365.964
[info]   CI (99.9%): [≈ 0, 2344.409] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   926.977 ±(99.9%) 1384.168 B/op [Average]
[info]   (min, avg, max) = (655.204, 926.977, 1329.565), stdev = 359.464
[info]   CI (99.9%): [≈ 0, 2311.145] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.150 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.083), stdev = 0.039
[info]   CI (99.9%): [≈ 0, 0.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.041 ±(99.9%) 0.148 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.041, 0.082), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 0.837
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 63.86% complete, ETA 00:48:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1603738.623 ops/s
[info] # Warmup Iteration   2: 1743561.642 ops/s
[info] # Warmup Iteration   3: 1738313.201 ops/s
[info] # Warmup Iteration   4: 1743333.574 ops/s
[info] # Warmup Iteration   5: 1824974.054 ops/s
[info] Iteration   1: 1830188.387 ops/s
[info]                  ·gc.alloc.rate:                   511.740 MB/sec
[info]                  ·gc.alloc.rate.norm:              440.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.678 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     439.948 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 1823806.655 ops/s
[info]                  ·gc.alloc.rate:               509.879 MB/sec
[info]                  ·gc.alloc.rate.norm:          440.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.602 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 441.487 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 1826997.129 ops/s
[info]                  ·gc.alloc.rate:                   510.893 MB/sec
[info]                  ·gc.alloc.rate.norm:              440.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.261 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     579.838 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.616 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.392 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 1830048.135 ops/s
[info]                  ·gc.alloc.rate:                   511.681 MB/sec
[info]                  ·gc.alloc.rate.norm:              440.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.221 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     578.910 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   5: 1830970.345 ops/s
[info]                  ·gc.alloc.rate:      511.904 MB/sec
[info]                  ·gc.alloc.rate.norm: 440.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala":
[info]   1828402.130 ±(99.9%) 11485.669 ops/s [Average]
[info]   (min, avg, max) = (1823806.655, 1828402.130, 1830970.345), stdev = 2982.792
[info]   CI (99.9%): [1816916.461, 1839887.800] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   511.219 ±(99.9%) 3.253 MB/sec [Average]
[info]   (min, avg, max) = (509.879, 511.219, 511.904), stdev = 0.845
[info]   CI (99.9%): [507.966, 514.473] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   440.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (440.000, 440.000, 440.000), stdev = 0.001
[info]   CI (99.9%): [440.000, 440.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   473.952 ±(99.9%) 1066.607 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 473.952, 673.261), stdev = 276.994
[info]   CI (99.9%): [≈ 0, 1540.559] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   408.037 ±(99.9%) 918.006 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 408.037, 579.838), stdev = 238.403
[info]   CI (99.9%): [≈ 0, 1326.043] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.331 ±(99.9%) 2.765 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.331, 1.616), stdev = 0.718
[info]   CI (99.9%): [≈ 0, 3.096] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.285 ±(99.9%) 2.381 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.285, 1.392), stdev = 0.618
[info]   CI (99.9%): [≈ 0, 2.667] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 1.095
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 64.06% complete, ETA 00:48:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1741914.656 ops/s
[info] # Warmup Iteration   2: 1880391.274 ops/s
[info] # Warmup Iteration   3: 1939518.190 ops/s
[info] # Warmup Iteration   4: 1939133.917 ops/s
[info] # Warmup Iteration   5: 1939568.027 ops/s
[info] Iteration   1: 1940223.830 ops/s
[info]                  ·gc.alloc.rate:      19.725 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1939379.174 ops/s
[info]                  ·gc.alloc.rate:      19.716 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1939978.518 ops/s
[info]                  ·gc.alloc.rate:      19.722 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1940519.014 ops/s
[info]                  ·gc.alloc.rate:      19.731 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1939019.246 ops/s
[info]                  ·gc.alloc.rate:      19.714 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc":
[info]   1939823.957 ±(99.9%) 2367.663 ops/s [Average]
[info]   (min, avg, max) = (1939019.246, 1939823.957, 1940519.014), stdev = 614.875
[info]   CI (99.9%): [1937456.294, 1942191.620] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   19.722 ±(99.9%) 0.027 MB/sec [Average]
[info]   (min, avg, max) = (19.714, 19.722, 19.731), stdev = 0.007
[info]   CI (99.9%): [19.695, 19.749] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   16.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (16.000, 16.000, 16.000), stdev = 0.001
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 64.26% complete, ETA 00:47:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 20676.571 ops/s
[info] # Warmup Iteration   2: 36730.403 ops/s
[info] # Warmup Iteration   3: 37315.283 ops/s
[info] # Warmup Iteration   4: 37785.192 ops/s
[info] # Warmup Iteration   5: 37808.410 ops/s
[info] Iteration   1: 37641.737 ops/s
[info]                  ·gc.alloc.rate:                   1641.901 MB/sec
[info]                  ·gc.alloc.rate.norm:              68648.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2004.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     83790.828 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.611 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 37936.542 ops/s
[info]                  ·gc.alloc.rate:               1654.737 MB/sec
[info]                  ·gc.alloc.rate.norm:          68648.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1338.287 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 55519.837 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 37796.915 ops/s
[info]                  ·gc.alloc.rate:                   1648.629 MB/sec
[info]                  ·gc.alloc.rate.norm:              68648.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2012.090 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     83782.340 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.334 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 37686.035 ops/s
[info]                  ·gc.alloc.rate:               1643.724 MB/sec
[info]                  ·gc.alloc.rate.norm:          68648.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1344.263 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 56141.423 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 37683.408 ops/s
[info]                  ·gc.alloc.rate:                   1644.113 MB/sec
[info]                  ·gc.alloc.rate.norm:              68648.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.616 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     56226.376 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.739 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson":
[info]   37748.927 ±(99.9%) 460.632 ops/s [Average]
[info]   (min, avg, max) = (37641.737, 37748.927, 37936.542), stdev = 119.625
[info]   CI (99.9%): [37288.296, 38209.559] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1646.621 ±(99.9%) 19.903 MB/sec [Average]
[info]   (min, avg, max) = (1641.901, 1646.621, 1654.737), stdev = 5.169
[info]   CI (99.9%): [1626.718, 1666.523] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   68648.012 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (68648.011, 68648.012, 68648.012), stdev = 0.001
[info]   CI (99.9%): [68648.010, 68648.013] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1609.068 ±(99.9%) 1402.698 MB/sec [Average]
[info]   (min, avg, max) = (1338.287, 1609.068, 2012.090), stdev = 364.276
[info]   CI (99.9%): [206.370, 3011.766] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   67092.161 ±(99.9%) 58692.650 B/op [Average]
[info]   (min, avg, max) = (55519.837, 67092.161, 83790.828), stdev = 15242.295
[info]   CI (99.9%): [8399.511, 125784.811] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.170 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.104), stdev = 0.044
[info]   CI (99.9%): [≈ 0, 0.212] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.737 ±(99.9%) 7.085 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.737, 4.334), stdev = 1.840
[info]   CI (99.9%): [≈ 0, 8.822] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce
[info] # Run progress: 64.46% complete, ETA 00:47:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 419110.055 ops/s
[info] # Warmup Iteration   2: 754959.363 ops/s
[info] # Warmup Iteration   3: 778796.972 ops/s
[info] # Warmup Iteration   4: 784088.026 ops/s
[info] # Warmup Iteration   5: 787594.277 ops/s
[info] Iteration   1: 788667.141 ops/s
[info]                  ·gc.alloc.rate:                   2570.038 MB/sec
[info]                  ·gc.alloc.rate.norm:              5128.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2699.597 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5386.509 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 788757.676 ops/s
[info]                  ·gc.alloc.rate:                   2570.756 MB/sec
[info]                  ·gc.alloc.rate.norm:              5128.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2705.367 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5396.515 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.249 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 789883.407 ops/s
[info]                  ·gc.alloc.rate:                   2573.598 MB/sec
[info]                  ·gc.alloc.rate.norm:              5128.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2709.946 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5399.680 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.124 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 780100.702 ops/s
[info]                  ·gc.alloc.rate:               2541.689 MB/sec
[info]                  ·gc.alloc.rate.norm:          5128.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2035.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4105.770 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 782863.377 ops/s
[info]                  ·gc.alloc.rate:                   2550.916 MB/sec
[info]                  ·gc.alloc.rate.norm:              5128.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2716.766 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5461.403 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.167 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce":
[info]   786054.460 ±(99.9%) 16609.690 ops/s [Average]
[info]   (min, avg, max) = (780100.702, 786054.460, 789883.407), stdev = 4313.484
[info]   CI (99.9%): [769444.771, 802664.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:·gc.alloc.rate":
[info]   2561.399 ±(99.9%) 54.775 MB/sec [Average]
[info]   (min, avg, max) = (2541.689, 2561.399, 2573.598), stdev = 14.225
[info]   CI (99.9%): [2506.625, 2616.174] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   5128.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5128.001, 5128.001, 5128.001), stdev = 0.001
[info]   CI (99.9%): [5128.000, 5128.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2573.339 ±(99.9%) 1159.023 MB/sec [Average]
[info]   (min, avg, max) = (2035.021, 2573.339, 2716.766), stdev = 300.995
[info]   CI (99.9%): [1414.316, 3732.363] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5149.975 ±(99.9%) 2250.597 B/op [Average]
[info]   (min, avg, max) = (4105.770, 5149.975, 5461.403), stdev = 584.473
[info]   CI (99.9%): [2899.378, 7400.573] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.191 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.058, 0.125), stdev = 0.050
[info]   CI (99.9%): [≈ 0, 0.250] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.117 ±(99.9%) 0.382 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.117, 0.249), stdev = 0.099
[info]   CI (99.9%): [≈ 0, 0.499] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava
[info] # Run progress: 64.66% complete, ETA 00:47:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.874 ops/s
[info] # Warmup Iteration   2: 4928602.852 ops/s
[info] # Warmup Iteration   3: 5026067.662 ops/s
[info] # Warmup Iteration   4: 5188856.232 ops/s
[info] # Warmup Iteration   5: 5175743.904 ops/s
[info] Iteration   1: 5085911.466 ops/s
[info]                  ·gc.alloc.rate:               310.259 MB/sec
[info]                  ·gc.alloc.rate.norm:          96.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.652 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 158.315 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 4945111.951 ops/s
[info]                  ·gc.alloc.rate:      301.640 MB/sec
[info]                  ·gc.alloc.rate.norm: 96.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 5084300.552 ops/s
[info]                  ·gc.alloc.rate:               310.152 MB/sec
[info]                  ·gc.alloc.rate.norm:          96.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.616 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 158.358 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 5173082.278 ops/s
[info]                  ·gc.alloc.rate:               315.540 MB/sec
[info]                  ·gc.alloc.rate.norm:          96.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.592 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 155.647 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 5184835.090 ops/s
[info]                  ·gc.alloc.rate:      316.246 MB/sec
[info]                  ·gc.alloc.rate.norm: 96.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava":
[info]   5094648.267 ±(99.9%) 369491.677 ops/s [Average]
[info]   (min, avg, max) = (4945111.951, 5094648.267, 5184835.090), stdev = 95955.815
[info]   CI (99.9%): [4725156.590, 5464139.945] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   310.767 ±(99.9%) 22.514 MB/sec [Average]
[info]   (min, avg, max) = (301.640, 310.767, 316.246), stdev = 5.847
[info]   CI (99.9%): [288.254, 333.281] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   96.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (96.000, 96.000, 96.000), stdev = 0.001
[info]   CI (99.9%): [96.000, 96.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   306.972 ±(99.9%) 1079.050 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 306.972, 511.652), stdev = 280.226
[info]   CI (99.9%): [≈ 0, 1386.021] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   94.464 ±(99.9%) 332.081 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 94.464, 158.358), stdev = 86.240
[info]   CI (99.9%): [≈ 0, 426.545] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 1.095
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala
[info] # Run progress: 64.86% complete, ETA 00:46:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 320707.897 ops/s
[info] # Warmup Iteration   2: 983671.850 ops/s
[info] # Warmup Iteration   3: 1002902.522 ops/s
[info] # Warmup Iteration   4: 981359.385 ops/s
[info] # Warmup Iteration   5: 991338.225 ops/s
[info] Iteration   1: 1003159.822 ops/s
[info]                  ·gc.alloc.rate:                   1244.150 MB/sec
[info]                  ·gc.alloc.rate.norm:              1952.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.952 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2092.894 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.098 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 983927.174 ops/s
[info]                  ·gc.alloc.rate:                   1220.299 MB/sec
[info]                  ·gc.alloc.rate.norm:              1952.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.895 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2135.308 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 985562.791 ops/s
[info]                  ·gc.alloc.rate:                   1222.361 MB/sec
[info]                  ·gc.alloc.rate.norm:              1952.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.632 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2134.480 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 987747.253 ops/s
[info]                  ·gc.alloc.rate:                   1225.253 MB/sec
[info]                  ·gc.alloc.rate.norm:              1952.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          668.907 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1065.663 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.066 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 996708.409 ops/s
[info]                  ·gc.alloc.rate:                   1236.701 MB/sec
[info]                  ·gc.alloc.rate.norm:              1952.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.201 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2115.365 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.164 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala":
[info]   991421.090 ±(99.9%) 31620.393 ops/s [Average]
[info]   (min, avg, max) = (983927.174, 991421.090, 1003159.822), stdev = 8211.716
[info]   CI (99.9%): [959800.697, 1023041.483] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1229.753 ±(99.9%) 39.448 MB/sec [Average]
[info]   (min, avg, max) = (1220.299, 1229.753, 1244.150), stdev = 10.245
[info]   CI (99.9%): [1190.305, 1269.201] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   1952.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1952.000, 1952.000, 1952.000), stdev = 0.001
[info]   CI (99.9%): [1952.000, 1952.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1202.917 ±(99.9%) 1149.535 MB/sec [Average]
[info]   (min, avg, max) = (668.907, 1202.917, 1340.201), stdev = 298.531
[info]   CI (99.9%): [53.382, 2352.452] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1908.742 ±(99.9%) 1816.016 B/op [Average]
[info]   (min, avg, max) = (1065.663, 1908.742, 2135.308), stdev = 471.614
[info]   CI (99.9%): [92.726, 3724.758] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.104), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.184] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.079 ±(99.9%) 0.211 B/op [Average]
[info]   (min, avg, max) = (0.033, 0.079, 0.164), stdev = 0.055
[info]   CI (99.9%): [≈ 0, 0.290] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala
[info] # Run progress: 65.06% complete, ETA 00:46:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6911776.224 ops/s
[info] # Warmup Iteration   2: 7736066.823 ops/s
[info] # Warmup Iteration   3: 7951094.096 ops/s
[info] # Warmup Iteration   4: 7967703.219 ops/s
[info] # Warmup Iteration   5: 7941514.387 ops/s
[info] Iteration   1: 7944117.319 ops/s
[info]                  ·gc.alloc.rate:                   363.417 MB/sec
[info]                  ·gc.alloc.rate.norm:              72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.593 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     101.357 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 7952491.289 ops/s
[info]                  ·gc.alloc.rate:               364.151 MB/sec
[info]                  ·gc.alloc.rate.norm:          72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.339 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 101.102 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 7987992.658 ops/s
[info]                  ·gc.alloc.rate:      365.502 MB/sec
[info]                  ·gc.alloc.rate.norm: 72.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 7962984.988 ops/s
[info]                  ·gc.alloc.rate:                   364.324 MB/sec
[info]                  ·gc.alloc.rate.norm:              72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.652 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     101.116 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.036 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 7956381.368 ops/s
[info]                  ·gc.alloc.rate:      363.988 MB/sec
[info]                  ·gc.alloc.rate.norm: 72.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala":
[info]   7960793.524 ±(99.9%) 64176.658 ops/s [Average]
[info]   (min, avg, max) = (7944117.319, 7960793.524, 7987992.658), stdev = 16666.474
[info]   CI (99.9%): [7896616.867, 8024970.182] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   364.276 ±(99.9%) 2.946 MB/sec [Average]
[info]   (min, avg, max) = (363.417, 364.276, 365.502), stdev = 0.765
[info]   CI (99.9%): [361.330, 367.223] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   72.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (72.000, 72.000, 72.000), stdev = 0.001
[info]   CI (99.9%): [72.000, 72.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   306.917 ±(99.9%) 1078.856 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 306.917, 511.652), stdev = 280.176
[info]   CI (99.9%): [≈ 0, 1385.773] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   60.715 ±(99.9%) 213.422 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 60.715, 101.357), stdev = 55.425
[info]   CI (99.9%): [≈ 0, 274.137] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.009 ±(99.9%) 0.060 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.009, 0.036), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.069] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.002 ±(99.9%) 0.012 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.002, 0.007), stdev = 0.003
[info]   CI (99.9%): [≈ 0, 0.014] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 1.000
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson
[info] # Run progress: 65.26% complete, ETA 00:46:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 39717.455 ops/s
[info] # Warmup Iteration   2: 294822.616 ops/s
[info] # Warmup Iteration   3: 293258.810 ops/s
[info] # Warmup Iteration   4: 303141.492 ops/s
[info] # Warmup Iteration   5: 304487.236 ops/s
[info] Iteration   1: 302862.415 ops/s
[info]                  ·gc.alloc.rate:                   1678.247 MB/sec
[info]                  ·gc.alloc.rate.norm:              8720.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2002.048 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10402.437 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.216 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 301047.968 ops/s
[info]                  ·gc.alloc.rate:                   1668.009 MB/sec
[info]                  ·gc.alloc.rate.norm:              8720.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.996 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6989.532 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.326 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 302628.952 ops/s
[info]                  ·gc.alloc.rate:                   1676.685 MB/sec
[info]                  ·gc.alloc.rate.norm:              8720.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2010.391 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10455.516 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.541 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 305971.870 ops/s
[info]                  ·gc.alloc.rate:               1695.152 MB/sec
[info]                  ·gc.alloc.rate.norm:          8720.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1342.573 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6906.304 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 300807.895 ops/s
[info]                  ·gc.alloc.rate:                   1666.539 MB/sec
[info]                  ·gc.alloc.rate.norm:              8720.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2018.007 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10559.023 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.218 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson":
[info]   302663.820 ±(99.9%) 7947.473 ops/s [Average]
[info]   (min, avg, max) = (300807.895, 302663.820, 305971.870), stdev = 2063.933
[info]   CI (99.9%): [294716.347, 310611.293] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1676.927 ±(99.9%) 43.963 MB/sec [Average]
[info]   (min, avg, max) = (1666.539, 1676.927, 1695.152), stdev = 11.417
[info]   CI (99.9%): [1632.963, 1720.890] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   8720.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8720.001, 8720.001, 8720.002), stdev = 0.001
[info]   CI (99.9%): [8720.001, 8720.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1742.003 ±(99.9%) 1414.043 MB/sec [Average]
[info]   (min, avg, max) = (1336.996, 1742.003, 2018.007), stdev = 367.222
[info]   CI (99.9%): [327.960, 3156.045] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   9062.562 ±(99.9%) 7437.299 B/op [Average]
[info]   (min, avg, max) = (6906.304, 9062.562, 10559.023), stdev = 1931.443
[info]   CI (99.9%): [1625.264, 16499.861] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.146 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.104), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.196] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.260 ±(99.9%) 0.758 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.260, 0.541), stdev = 0.197
[info]   CI (99.9%): [≈ 0, 1.018] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readUPickle
[info] # Run progress: 65.46% complete, ETA 00:46:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 397777.473 ops/s
[info] # Warmup Iteration   2: 589235.769 ops/s
[info] # Warmup Iteration   3: 604500.059 ops/s
[info] # Warmup Iteration   4: 606493.051 ops/s
[info] # Warmup Iteration   5: 607927.486 ops/s
[info] Iteration   1: 607404.475 ops/s
[info]                  ·gc.alloc.rate:                   1312.184 MB/sec
[info]                  ·gc.alloc.rate.norm:              3400.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.956 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3490.098 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.216 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 606449.197 ops/s
[info]                  ·gc.alloc.rate:                   1310.450 MB/sec
[info]                  ·gc.alloc.rate.norm:              3400.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.258 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3495.501 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.270 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 607355.290 ops/s
[info]                  ·gc.alloc.rate:                   1312.085 MB/sec
[info]                  ·gc.alloc.rate.norm:              3400.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.247 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3493.706 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.216 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 606411.573 ops/s
[info]                  ·gc.alloc.rate:                   1309.988 MB/sec
[info]                  ·gc.alloc.rate.norm:              3400.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.902 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3500.999 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.270 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 606780.828 ops/s
[info]                  ·gc.alloc.rate:               1310.827 MB/sec
[info]                  ·gc.alloc.rate.norm:          3400.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1350.222 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3502.182 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readUPickle":
[info]   606880.273 ±(99.9%) 1842.508 ops/s [Average]
[info]   (min, avg, max) = (606411.573, 606880.273, 607404.475), stdev = 478.493
[info]   CI (99.9%): [605037.765, 608722.781] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readUPickle:·gc.alloc.rate":
[info]   1311.107 ±(99.9%) 3.792 MB/sec [Average]
[info]   (min, avg, max) = (1309.988, 1311.107, 1312.184), stdev = 0.985
[info]   CI (99.9%): [1307.315, 1314.899] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readUPickle:·gc.alloc.rate.norm":
[info]   3400.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3400.001, 3400.001, 3400.001), stdev = 0.001
[info]   CI (99.9%): [3400.001, 3400.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readUPickle:·gc.churn.PS_Eden_Space":
[info]   1348.317 ±(99.9%) 5.075 MB/sec [Average]
[info]   (min, avg, max) = (1346.956, 1348.317, 1350.222), stdev = 1.318
[info]   CI (99.9%): [1343.242, 1353.392] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   3496.497 ±(99.9%) 19.475 B/op [Average]
[info]   (min, avg, max) = (3490.098, 3496.497, 3502.182), stdev = 5.057
[info]   CI (99.9%): [3477.023, 3515.972] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space":
[info]   0.075 ±(99.9%) 0.166 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.075, 0.104), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.241] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   0.194 ±(99.9%) 0.431 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.194, 0.270), stdev = 0.112
[info]   CI (99.9%): [≈ 0, 0.626] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readUPickle:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readUPickle:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce
[info] # Run progress: 65.66% complete, ETA 00:45:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2274.808 ops/s
[info] # Warmup Iteration   2: 3638.580 ops/s
[info] # Warmup Iteration   3: 3638.271 ops/s
[info] # Warmup Iteration   4: 3747.446 ops/s
[info] # Warmup Iteration   5: 3757.464 ops/s
[info] Iteration   1: 3751.855 ops/s
[info]                  ·gc.alloc.rate:                   1861.961 MB/sec
[info]                  ·gc.alloc.rate.norm:              780640.115 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2012.889 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     843917.881 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 52.387 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 3762.138 ops/s
[info]                  ·gc.alloc.rate:                   1866.054 MB/sec
[info]                  ·gc.alloc.rate.norm:              780640.115 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.189 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     561906.326 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 26.124 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 3716.942 ops/s
[info]                  ·gc.alloc.rate:                   1843.893 MB/sec
[info]                  ·gc.alloc.rate.norm:              780640.116 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2018.450 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     854541.495 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 61.693 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 3754.590 ops/s
[info]                  ·gc.alloc.rate:                   1862.460 MB/sec
[info]                  ·gc.alloc.rate.norm:              780640.124 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2023.143 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     847989.776 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17.448 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 3756.127 ops/s
[info]                  ·gc.alloc.rate:                   1862.903 MB/sec
[info]                  ·gc.alloc.rate.norm:              780640.115 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2026.417 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     849159.563 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 52.331 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce":
[info]   3748.331 ±(99.9%) 69.106 ops/s [Average]
[info]   (min, avg, max) = (3716.942, 3748.331, 3762.138), stdev = 17.947
[info]   CI (99.9%): [3679.225, 3817.436] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.alloc.rate":
[info]   1859.454 ±(99.9%) 34.058 MB/sec [Average]
[info]   (min, avg, max) = (1843.893, 1859.454, 1866.054), stdev = 8.845
[info]   CI (99.9%): [1825.396, 1893.512] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   780640.117 ±(99.9%) 0.014 B/op [Average]
[info]   (min, avg, max) = (780640.115, 780640.117, 780640.124), stdev = 0.004
[info]   CI (99.9%): [780640.103, 780640.131] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1884.818 ±(99.9%) 1166.061 MB/sec [Average]
[info]   (min, avg, max) = (1343.189, 1884.818, 2026.417), stdev = 302.822
[info]   CI (99.9%): [718.757, 3050.879] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   791503.008 ±(99.9%) 494439.923 B/op [Average]
[info]   (min, avg, max) = (561906.326, 791503.008, 854541.495), stdev = 128404.478
[info]   CI (99.9%): [297063.086, 1285942.931] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.100 ±(99.9%) 0.174 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.100, 0.146), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.274] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   41.997 ±(99.9%) 73.498 B/op [Average]
[info]   (min, avg, max) = (17.448, 41.997, 61.693), stdev = 19.087
[info]   CI (99.9%): [≈ 0, 115.495] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala
[info] # Run progress: 65.86% complete, ETA 00:45:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2317.851 ops/s
[info] # Warmup Iteration   2: 4841.600 ops/s
[info] # Warmup Iteration   3: 5126.257 ops/s
[info] # Warmup Iteration   4: 5135.888 ops/s
[info] # Warmup Iteration   5: 5110.058 ops/s
[info] Iteration   1: 5012.637 ops/s
[info]                  ·gc.alloc.rate:                   2099.615 MB/sec
[info]                  ·gc.alloc.rate.norm:              659096.086 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2002.272 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     628539.124 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 26.141 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 4987.502 ops/s
[info]                  ·gc.alloc.rate:                   2089.271 MB/sec
[info]                  ·gc.alloc.rate.norm:              659096.087 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2679.627 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     845334.270 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13.136 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 5131.811 ops/s
[info]                  ·gc.alloc.rate:                   2150.083 MB/sec
[info]                  ·gc.alloc.rate.norm:              659096.084 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2017.194 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     618359.546 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.384 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 5122.727 ops/s
[info]                  ·gc.alloc.rate:                   2145.430 MB/sec
[info]                  ·gc.alloc.rate.norm:              659096.084 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2020.360 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     620673.499 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.395 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 5129.743 ops/s
[info]                  ·gc.alloc.rate:                   2148.762 MB/sec
[info]                  ·gc.alloc.rate.norm:              659096.084 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2025.734 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     621359.448 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.386 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala":
[info]   5076.884 ±(99.9%) 272.482 ops/s [Average]
[info]   (min, avg, max) = (4987.502, 5076.884, 5131.811), stdev = 70.763
[info]   CI (99.9%): [4804.402, 5349.366] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   2126.632 ±(99.9%) 114.210 MB/sec [Average]
[info]   (min, avg, max) = (2089.271, 2126.632, 2150.083), stdev = 29.660
[info]   CI (99.9%): [2012.422, 2240.842] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   659096.085 ±(99.9%) 0.005 B/op [Average]
[info]   (min, avg, max) = (659096.084, 659096.085, 659096.087), stdev = 0.001
[info]   CI (99.9%): [659096.080, 659096.090] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   2149.038 ±(99.9%) 1142.627 MB/sec [Average]
[info]   (min, avg, max) = (2002.272, 2149.038, 2679.627), stdev = 296.736
[info]   CI (99.9%): [1006.411, 3291.664] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   666853.177 ±(99.9%) 384473.546 B/op [Average]
[info]   (min, avg, max) = (618359.546, 666853.177, 845334.270), stdev = 99846.559
[info]   CI (99.9%): [282379.631, 1051326.724] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.037, 0.083), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   11.688 ±(99.9%) 33.083 B/op [Average]
[info]   (min, avg, max) = (6.384, 11.688, 26.141), stdev = 8.591
[info]   CI (99.9%): [≈ 0, 44.771] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 5.000), stdev = 0.894
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala
[info] # Run progress: 66.06% complete, ETA 00:45:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 39048.649 ops/s
[info] # Warmup Iteration   2: 42960.814 ops/s
[info] # Warmup Iteration   3: 42629.448 ops/s
[info] # Warmup Iteration   4: 41729.830 ops/s
[info] # Warmup Iteration   5: 43133.293 ops/s
[info] Iteration   1: 41320.528 ops/s
[info]                  ·gc.alloc.rate:                   687.720 MB/sec
[info]                  ·gc.alloc.rate.norm:              26184.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.740 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25651.761 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.633 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 62.167 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 41485.380 ops/s
[info]                  ·gc.alloc.rate:                   690.365 MB/sec
[info]                  ·gc.alloc.rate.norm:              26184.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.643 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25549.753 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.790 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 43154.056 ops/s
[info]                  ·gc.alloc.rate:                   718.048 MB/sec
[info]                  ·gc.alloc.rate.norm:              26184.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.879 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24536.902 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.759 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 43223.423 ops/s
[info]                  ·gc.alloc.rate:               719.375 MB/sec
[info]                  ·gc.alloc.rate.norm:          26184.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 24498.306 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 43135.156 ops/s
[info]                  ·gc.alloc.rate:                   717.690 MB/sec
[info]                  ·gc.alloc.rate.norm:              26184.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.189 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24560.429 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.760 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala":
[info]   42463.709 ±(99.9%) 3737.593 ops/s [Average]
[info]   (min, avg, max) = (41320.528, 42463.709, 43223.423), stdev = 970.641
[info]   CI (99.9%): [38726.116, 46201.301] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   706.640 ±(99.9%) 62.009 MB/sec [Average]
[info]   (min, avg, max) = (687.720, 706.640, 719.375), stdev = 16.103
[info]   CI (99.9%): [644.631, 768.648] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   26184.010 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (26184.010, 26184.010, 26184.011), stdev = 0.001
[info]   CI (99.9%): [26184.009, 26184.012] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   673.303 ±(99.9%) 1.437 MB/sec [Average]
[info]   (min, avg, max) = (672.879, 673.303, 673.740), stdev = 0.373
[info]   CI (99.9%): [671.866, 674.740] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   24959.430 ±(99.9%) 2260.241 B/op [Average]
[info]   (min, avg, max) = (24498.306, 24959.430, 25651.761), stdev = 586.977
[info]   CI (99.9%): [22699.189, 27219.671] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.339 ±(99.9%) 2.785 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.339, 1.633), stdev = 0.723
[info]   CI (99.9%): [≈ 0, 3.124] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   12.895 ±(99.9%) 106.070 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 12.895, 62.167), stdev = 27.546
[info]   CI (99.9%): [≈ 0, 118.965] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce
[info] # Run progress: 66.27% complete, ETA 00:45:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2721.024 ops/s
[info] # Warmup Iteration   2: 4093.066 ops/s
[info] # Warmup Iteration   3: 4088.405 ops/s
[info] # Warmup Iteration   4: 4173.156 ops/s
[info] # Warmup Iteration   5: 4167.072 ops/s
[info] Iteration   1: 4191.615 ops/s
[info]                  ·gc.alloc.rate:                   893.631 MB/sec
[info]                  ·gc.alloc.rate.norm:              335488.103 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.248 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     502031.080 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.105 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 39.479 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 4115.774 ops/s
[info]                  ·gc.alloc.rate:               877.325 MB/sec
[info]                  ·gc.alloc.rate.norm:          335488.105 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.707 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 255712.972 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 4173.856 ops/s
[info]                  ·gc.alloc.rate:                   890.154 MB/sec
[info]                  ·gc.alloc.rate.norm:              335488.111 B/op
[info]                  ·gc.churn.PS_Eden_Space:          669.060 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     252160.552 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.061 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 23.140 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 4162.557 ops/s
[info]                  ·gc.alloc.rate:                   887.313 MB/sec
[info]                  ·gc.alloc.rate.norm:              335488.104 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.040 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     505905.183 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.022 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.277 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 4172.072 ops/s
[info]                  ·gc.alloc.rate:               889.318 MB/sec
[info]                  ·gc.alloc.rate.norm:          335488.104 B/op
[info]                  ·gc.churn.PS_Eden_Space:      669.418 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 252532.682 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce":
[info]   4163.175 ±(99.9%) 109.749 ops/s [Average]
[info]   (min, avg, max) = (4115.774, 4163.175, 4191.615), stdev = 28.501
[info]   CI (99.9%): [4053.426, 4272.924] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.alloc.rate":
[info]   887.548 ±(99.9%) 23.698 MB/sec [Average]
[info]   (min, avg, max) = (877.325, 887.548, 893.631), stdev = 6.154
[info]   CI (99.9%): [863.850, 911.246] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   335488.105 ±(99.9%) 0.013 B/op [Average]
[info]   (min, avg, max) = (335488.103, 335488.105, 335488.111), stdev = 0.003
[info]   CI (99.9%): [335488.092, 335488.118] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   936.495 ±(99.9%) 1410.097 MB/sec [Average]
[info]   (min, avg, max) = (668.707, 936.495, 1338.040), stdev = 366.198
[info]   CI (99.9%): [≈ 0, 2346.591] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   353668.494 ±(99.9%) 528377.476 B/op [Average]
[info]   (min, avg, max) = (252160.552, 353668.494, 505905.183), stdev = 137217.952
[info]   CI (99.9%): [≈ 0, 882045.969] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.038 ±(99.9%) 0.174 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.038, 0.105), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.212] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   14.179 ±(99.9%) 65.498 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 14.179, 39.479), stdev = 17.010
[info]   CI (99.9%): [≈ 0, 79.677] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala
[info] # Run progress: 66.47% complete, ETA 00:44:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2369.202 ops/s
[info] # Warmup Iteration   2: 4543.841 ops/s
[info] # Warmup Iteration   3: 4684.518 ops/s
[info] # Warmup Iteration   4: 4697.571 ops/s
[info] # Warmup Iteration   5: 4701.996 ops/s
[info] Iteration   1: 4691.533 ops/s
[info]                  ·gc.alloc.rate:                   600.466 MB/sec
[info]                  ·gc.alloc.rate.norm:              201429.729 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.535 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     171597.351 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.015 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.008 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 4709.306 ops/s
[info]                  ·gc.alloc.rate:                   602.722 MB/sec
[info]                  ·gc.alloc.rate.norm:              201429.355 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.820 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     221848.404 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.738 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 914.935 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 4720.901 ops/s
[info]                  ·gc.alloc.rate:                   604.501 MB/sec
[info]                  ·gc.alloc.rate.norm:              201430.026 B/op
[info]                  ·gc.churn.PS_Eden_Space:          664.086 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     221284.622 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13.879 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 4714.649 ops/s
[info]                  ·gc.alloc.rate:               603.588 MB/sec
[info]                  ·gc.alloc.rate.norm:          201428.785 B/op
[info]                  ·gc.churn.PS_Eden_Space:      664.264 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 221677.327 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 4572.089 ops/s
[info]                  ·gc.alloc.rate:                   585.297 MB/sec
[info]                  ·gc.alloc.rate.norm:              201429.301 B/op
[info]                  ·gc.churn.PS_Eden_Space:          664.275 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     228609.288 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 14.331 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala":
[info]   4681.696 ±(99.9%) 239.666 ops/s [Average]
[info]   (min, avg, max) = (4572.089, 4681.696, 4720.901), stdev = 62.241
[info]   CI (99.9%): [4442.029, 4921.362] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   599.315 ±(99.9%) 30.720 MB/sec [Average]
[info]   (min, avg, max) = (585.297, 599.315, 604.501), stdev = 7.978
[info]   CI (99.9%): [568.595, 630.035] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   201429.439 ±(99.9%) 1.809 B/op [Average]
[info]   (min, avg, max) = (201428.785, 201429.439, 201430.026), stdev = 0.470
[info]   CI (99.9%): [201427.631, 201431.248] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   633.596 ±(99.9%) 262.746 MB/sec [Average]
[info]   (min, avg, max) = (511.535, 633.596, 664.275), stdev = 68.234
[info]   CI (99.9%): [370.850, 896.342] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   213003.398 ±(99.9%) 89895.308 B/op [Average]
[info]   (min, avg, max) = (171597.351, 213003.398, 228609.288), stdev = 23345.526
[info]   CI (99.9%): [123108.090, 302898.707] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.567 ±(99.9%) 4.673 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.567, 2.738), stdev = 1.213
[info]   CI (99.9%): [≈ 0, 5.240] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   189.631 ±(99.9%) 1561.447 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 189.631, 914.935), stdev = 405.503
[info]   CI (99.9%): [≈ 0, 1751.078] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 4.000), stdev = 1.414
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala
[info] # Run progress: 66.67% complete, ETA 00:44:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5812.427 ops/s
[info] # Warmup Iteration   2: 6299.934 ops/s
[info] # Warmup Iteration   3: 6268.375 ops/s
[info] # Warmup Iteration   4: 6281.492 ops/s
[info] # Warmup Iteration   5: 6229.010 ops/s
[info] Iteration   1: 6301.550 ops/s
[info]                  ·gc.alloc.rate:      203.215 MB/sec
[info]                  ·gc.alloc.rate.norm: 50744.069 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 6296.960 ops/s
[info]                  ·gc.alloc.rate:      203.066 MB/sec
[info]                  ·gc.alloc.rate.norm: 50744.074 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 6279.545 ops/s
[info]                  ·gc.alloc.rate:               202.475 MB/sec
[info]                  ·gc.alloc.rate.norm:          50744.069 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.585 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 128213.082 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 6292.862 ops/s
[info]                  ·gc.alloc.rate:      202.897 MB/sec
[info]                  ·gc.alloc.rate.norm: 50744.069 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 6260.194 ops/s
[info]                  ·gc.alloc.rate:                   201.822 MB/sec
[info]                  ·gc.alloc.rate.norm:              50742.138 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.584 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     128622.643 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.467 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala":
[info]   6286.222 ±(99.9%) 64.329 ops/s [Average]
[info]   (min, avg, max) = (6260.194, 6286.222, 6301.550), stdev = 16.706
[info]   CI (99.9%): [6221.894, 6350.551] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   202.695 ±(99.9%) 2.161 MB/sec [Average]
[info]   (min, avg, max) = (201.822, 202.695, 203.215), stdev = 0.561
[info]   CI (99.9%): [200.534, 204.856] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   50743.684 ±(99.9%) 3.326 B/op [Average]
[info]   (min, avg, max) = (50742.138, 50743.684, 50744.074), stdev = 0.864
[info]   CI (99.9%): [50740.357, 50747.010] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   204.634 ±(99.9%) 1078.976 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 204.634, 511.585), stdev = 280.207
[info]   CI (99.9%): [≈ 0, 1283.610] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   51367.145 ±(99.9%) 270844.702 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 51367.145, 128622.643), stdev = 70337.509
[info]   CI (99.9%): [≈ 0, 322211.847] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.093 ±(99.9%) 18.025 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.093, 10.467), stdev = 4.681
[info]   CI (99.9%): [≈ 0, 20.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:·gc.count":
[info]   2.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.000), stdev = 0.548
[info]   CI (99.9%): [2.000, 2.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:·gc.time":
[info]   4.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 2.000), stdev = 1.095
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 66.87% complete, ETA 00:44:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5904.516 ops/s
[info] # Warmup Iteration   2: 6279.895 ops/s
[info] # Warmup Iteration   3: 6315.370 ops/s
[info] # Warmup Iteration   4: 6290.889 ops/s
[info] # Warmup Iteration   5: 6335.138 ops/s
[info] Iteration   1: 6338.345 ops/s
[info]                  ·gc.alloc.rate:      158.040 MB/sec
[info]                  ·gc.alloc.rate.norm: 39240.068 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 6318.610 ops/s
[info]                  ·gc.alloc.rate:                   157.580 MB/sec
[info]                  ·gc.alloc.rate.norm:              39240.085 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.699 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     127421.894 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.679 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 667.116 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 6352.933 ops/s
[info]                  ·gc.alloc.rate:      158.399 MB/sec
[info]                  ·gc.alloc.rate.norm: 39240.068 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 6350.850 ops/s
[info]                  ·gc.alloc.rate:      158.385 MB/sec
[info]                  ·gc.alloc.rate.norm: 39240.068 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 6241.762 ops/s
[info]                  ·gc.alloc.rate:                   155.639 MB/sec
[info]                  ·gc.alloc.rate.norm:              39242.140 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.520 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     128972.833 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.004 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.054 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc":
[info]   6320.500 ±(99.9%) 177.450 ops/s [Average]
[info]   (min, avg, max) = (6241.762, 6320.500, 6352.933), stdev = 46.083
[info]   CI (99.9%): [6143.050, 6497.950] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   157.608 ±(99.9%) 4.431 MB/sec [Average]
[info]   (min, avg, max) = (155.639, 157.608, 158.399), stdev = 1.151
[info]   CI (99.9%): [153.178, 162.039] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   39240.486 ±(99.9%) 3.560 B/op [Average]
[info]   (min, avg, max) = (39240.068, 39240.486, 39242.140), stdev = 0.925
[info]   CI (99.9%): [39236.925, 39244.046] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   204.644 ±(99.9%) 1079.028 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 204.644, 511.699), stdev = 280.220
[info]   CI (99.9%): [≈ 0, 1283.672] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   51278.945 ±(99.9%) 270387.321 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 51278.945, 128972.833), stdev = 70218.729
[info]   CI (99.9%): [≈ 0, 321666.267] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space":
[info]   0.537 ±(99.9%) 4.612 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.537, 2.679), stdev = 1.198
[info]   CI (99.9%): [≈ 0, 5.148] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   133.634 ±(99.9%) 1148.362 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 133.634, 667.116), stdev = 298.226
[info]   CI (99.9%): [≈ 0, 1281.996] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   2.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.000), stdev = 0.548
[info]   CI (99.9%): [2.000, 2.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   4.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 2.000), stdev = 1.095
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce
[info] # Run progress: 67.07% complete, ETA 00:43:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5303.626 ops/s
[info] # Warmup Iteration   2: 7301.671 ops/s
[info] # Warmup Iteration   3: 7888.714 ops/s
[info] # Warmup Iteration   4: 7906.345 ops/s
[info] # Warmup Iteration   5: 7849.662 ops/s
[info] Iteration   1: 7786.706 ops/s
[info]                  ·gc.alloc.rate:                   1943.144 MB/sec
[info]                  ·gc.alloc.rate.norm:              392752.060 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2015.384 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     407353.196 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.012 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.498 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 7807.699 ops/s
[info]                  ·gc.alloc.rate:                   1948.410 MB/sec
[info]                  ·gc.alloc.rate.norm:              392752.055 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.099 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     271340.857 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.391 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 7901.650 ops/s
[info]                  ·gc.alloc.rate:                   1971.837 MB/sec
[info]                  ·gc.alloc.rate.norm:              392752.055 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2022.377 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     402818.770 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.075 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 14.901 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 7897.657 ops/s
[info]                  ·gc.alloc.rate:                   1971.247 MB/sec
[info]                  ·gc.alloc.rate.norm:              392776.618 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2026.001 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     403686.494 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.445 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 7897.538 ops/s
[info]                  ·gc.alloc.rate:                   1970.954 MB/sec
[info]                  ·gc.alloc.rate.norm:              392776.059 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2030.033 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     404549.356 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.054 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.760 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce":
[info]   7858.250 ±(99.9%) 216.580 ops/s [Average]
[info]   (min, avg, max) = (7786.706, 7858.250, 7901.650), stdev = 56.245
[info]   CI (99.9%): [7641.670, 8074.830] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:·gc.alloc.rate":
[info]   1961.119 ±(99.9%) 54.415 MB/sec [Average]
[info]   (min, avg, max) = (1943.144, 1961.119, 1971.837), stdev = 14.131
[info]   CI (99.9%): [1906.704, 2015.534] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   392761.769 ±(99.9%) 51.218 B/op [Average]
[info]   (min, avg, max) = (392752.055, 392761.769, 392776.618), stdev = 13.301
[info]   CI (99.9%): [392710.551, 392812.987] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1887.979 ±(99.9%) 1166.621 MB/sec [Average]
[info]   (min, avg, max) = (1346.099, 1887.979, 2030.033), stdev = 302.968
[info]   CI (99.9%): [721.358, 3054.600] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   377949.734 ±(99.9%) 229577.233 B/op [Average]
[info]   (min, avg, max) = (271340.857, 377949.734, 407353.196), stdev = 59620.478
[info]   CI (99.9%): [148372.501, 607526.967] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.049 ±(99.9%) 0.092 MB/sec [Average]
[info]   (min, avg, max) = (0.012, 0.049, 0.075), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   9.799 ±(99.9%) 18.187 B/op [Average]
[info]   (min, avg, max) = (2.498, 9.799, 14.901), stdev = 4.723
[info]   CI (99.9%): [≈ 0, 27.986] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.000, 4.000), stdev = 1.000
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava
[info] # Run progress: 67.27% complete, ETA 00:43:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 70.967 ops/s
[info] # Warmup Iteration   2: 11647.339 ops/s
[info] # Warmup Iteration   3: 11715.485 ops/s
[info] # Warmup Iteration   4: 11410.901 ops/s
[info] # Warmup Iteration   5: 11672.693 ops/s
[info] Iteration   1: 11786.154 ops/s
[info]                  ·gc.alloc.rate:      290.816 MB/sec
[info]                  ·gc.alloc.rate.norm: 38832.037 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 11720.704 ops/s
[info]                  ·gc.alloc.rate:               289.218 MB/sec
[info]                  ·gc.alloc.rate.norm:          38832.042 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.631 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 68694.564 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 11782.998 ops/s
[info]                  ·gc.alloc.rate:                   290.729 MB/sec
[info]                  ·gc.alloc.rate.norm:              38832.037 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.600 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     68333.167 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.051 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.777 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 11423.840 ops/s
[info]                  ·gc.alloc.rate:      281.870 MB/sec
[info]                  ·gc.alloc.rate.norm: 38832.038 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 11700.568 ops/s
[info]                  ·gc.alloc.rate:               288.722 MB/sec
[info]                  ·gc.alloc.rate.norm:          38832.051 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.627 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 68811.960 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava":
[info]   11682.853 ±(99.9%) 576.100 ops/s [Average]
[info]   (min, avg, max) = (11423.840, 11682.853, 11786.154), stdev = 149.611
[info]   CI (99.9%): [11106.753, 12258.952] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   288.271 ±(99.9%) 14.226 MB/sec [Average]
[info]   (min, avg, max) = (281.870, 288.271, 290.816), stdev = 3.694
[info]   CI (99.9%): [274.045, 302.497] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   38832.041 ±(99.9%) 0.023 B/op [Average]
[info]   (min, avg, max) = (38832.037, 38832.041, 38832.051), stdev = 0.006
[info]   CI (99.9%): [38832.018, 38832.064] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   306.972 ±(99.9%) 1079.048 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 306.972, 511.631), stdev = 280.225
[info]   CI (99.9%): [≈ 0, 1386.020] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   41167.938 ±(99.9%) 144712.698 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 41167.938, 68811.960), stdev = 37581.428
[info]   CI (99.9%): [≈ 0, 185880.636] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.010 ±(99.9%) 0.087 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.010, 0.051), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.098] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   1.355 ±(99.9%) 11.671 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.355, 6.777), stdev = 3.031
[info]   CI (99.9%): [≈ 0, 13.027] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 3.000), stdev = 1.342
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala
[info] # Run progress: 67.47% complete, ETA 00:43:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7576.332 ops/s
[info] # Warmup Iteration   2: 14103.768 ops/s
[info] # Warmup Iteration   3: 14266.308 ops/s
[info] # Warmup Iteration   4: 14357.848 ops/s
[info] # Warmup Iteration   5: 14033.763 ops/s
[info] Iteration   1: 13957.920 ops/s
[info]                  ·gc.alloc.rate:               371.784 MB/sec
[info]                  ·gc.alloc.rate.norm:          41920.033 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.617 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 57686.703 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 14073.855 ops/s
[info]                  ·gc.alloc.rate:                   374.930 MB/sec
[info]                  ·gc.alloc.rate.norm:              41920.031 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.658 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     57207.244 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.493 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 14485.626 ops/s
[info]                  ·gc.alloc.rate:      385.820 MB/sec
[info]                  ·gc.alloc.rate.norm: 41920.041 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 14488.784 ops/s
[info]                  ·gc.alloc.rate:                   385.970 MB/sec
[info]                  ·gc.alloc.rate.norm:              41920.030 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.676 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     55572.864 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.017 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.805 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 14522.971 ops/s
[info]                  ·gc.alloc.rate:                   386.826 MB/sec
[info]                  ·gc.alloc.rate.norm:              41920.030 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.827 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     71938.450 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.607 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 282.491 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala":
[info]   14305.831 ±(99.9%) 1032.883 ops/s [Average]
[info]   (min, avg, max) = (13957.920, 14305.831, 14522.971), stdev = 268.236
[info]   CI (99.9%): [13272.948, 15338.714] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   381.066 ±(99.9%) 27.473 MB/sec [Average]
[info]   (min, avg, max) = (371.784, 381.066, 386.826), stdev = 7.135
[info]   CI (99.9%): [353.593, 408.539] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   41920.033 ±(99.9%) 0.018 B/op [Average]
[info]   (min, avg, max) = (41920.030, 41920.033, 41920.041), stdev = 0.005
[info]   CI (99.9%): [41920.015, 41920.051] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   439.755 ±(99.9%) 980.024 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 439.755, 663.827), stdev = 254.509
[info]   CI (99.9%): [≈ 0, 1419.779] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   48481.052 ±(99.9%) 107402.013 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 48481.052, 71938.450), stdev = 27891.962
[info]   CI (99.9%): [≈ 0, 155883.065] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.531 ±(99.9%) 4.469 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.531, 2.607), stdev = 1.160
[info]   CI (99.9%): [≈ 0, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   57.558 ±(99.9%) 484.218 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 57.558, 282.491), stdev = 125.750
[info]   CI (99.9%): [≈ 0, 541.776] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.200, 3.000), stdev = 1.304
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala
[info] # Run progress: 67.67% complete, ETA 00:43:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 19490.948 ops/s
[info] # Warmup Iteration   2: 22593.624 ops/s
[info] # Warmup Iteration   3: 22700.399 ops/s
[info] # Warmup Iteration   4: 22687.805 ops/s
[info] # Warmup Iteration   5: 22447.106 ops/s
[info] Iteration   1: 22566.950 ops/s
[info]                  ·gc.alloc.rate:                   459.585 MB/sec
[info]                  ·gc.alloc.rate.norm:              32048.021 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.674 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     35680.388 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.706 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 22715.502 ops/s
[info]                  ·gc.alloc.rate:               462.652 MB/sec
[info]                  ·gc.alloc.rate.norm:          32048.019 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.712 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 35446.383 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 22775.674 ops/s
[info]                  ·gc.alloc.rate:      463.797 MB/sec
[info]                  ·gc.alloc.rate.norm: 32048.019 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 22721.513 ops/s
[info]                  ·gc.alloc.rate:                   462.814 MB/sec
[info]                  ·gc.alloc.rate.norm:              32048.020 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.345 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46626.449 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.733 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 119.998 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 22774.589 ops/s
[info]                  ·gc.alloc.rate:               463.729 MB/sec
[info]                  ·gc.alloc.rate.norm:          32048.019 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.107 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 46517.958 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala":
[info]   22710.846 ±(99.9%) 328.476 ops/s [Average]
[info]   (min, avg, max) = (22566.950, 22710.846, 22775.674), stdev = 85.304
[info]   CI (99.9%): [22382.369, 23039.322] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   462.516 ±(99.9%) 6.618 MB/sec [Average]
[info]   (min, avg, max) = (459.585, 462.516, 463.797), stdev = 1.719
[info]   CI (99.9%): [455.898, 469.133] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   32048.020 ±(99.9%) 0.003 B/op [Average]
[info]   (min, avg, max) = (32048.019, 32048.020, 32048.021), stdev = 0.001
[info]   CI (99.9%): [32048.016, 32048.023] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   473.968 ±(99.9%) 1066.600 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 473.968, 673.345), stdev = 276.993
[info]   CI (99.9%): [≈ 0, 1540.568] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   32854.236 ±(99.9%) 73829.968 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 32854.236, 46626.449), stdev = 19173.408
[info]   CI (99.9%): [≈ 0, 106684.203] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.349 ±(99.9%) 2.980 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.349, 1.733), stdev = 0.774
[info]   CI (99.9%): [≈ 0, 3.329] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   24.141 ±(99.9%) 206.343 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 24.141, 119.998), stdev = 53.587
[info]   CI (99.9%): [≈ 0, 230.484] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 3.000), stdev = 1.140
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson
[info] # Run progress: 67.87% complete, ETA 00:42:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 884.667 ops/s
[info] # Warmup Iteration   2: 2387.077 ops/s
[info] # Warmup Iteration   3: 2395.586 ops/s
[info] # Warmup Iteration   4: 2420.113 ops/s
[info] # Warmup Iteration   5: 2415.334 ops/s
[info] Iteration   1: 2403.369 ops/s
[info]                  ·gc.alloc.rate:               1504.575 MB/sec
[info]                  ·gc.alloc.rate.norm:          985216.180 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1336.888 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 875412.659 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 2392.456 ops/s
[info]                  ·gc.alloc.rate:                   1497.635 MB/sec
[info]                  ·gc.alloc.rate.norm:              985216.181 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.835 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     882065.812 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13.693 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 2397.504 ops/s
[info]                  ·gc.alloc.rate:               1500.817 MB/sec
[info]                  ·gc.alloc.rate.norm:          985216.193 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1343.546 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 881975.726 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 2415.824 ops/s
[info]                  ·gc.alloc.rate:               1513.086 MB/sec
[info]                  ·gc.alloc.rate.norm:          985216.179 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2019.821 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1315166.795 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 2425.100 ops/s
[info]                  ·gc.alloc.rate:                   1518.195 MB/sec
[info]                  ·gc.alloc.rate.norm:              985216.178 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.746 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     875254.081 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13.507 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson":
[info]   2406.851 ±(99.9%) 51.671 ops/s [Average]
[info]   (min, avg, max) = (2392.456, 2406.851, 2425.100), stdev = 13.419
[info]   CI (99.9%): [2355.180, 2458.522] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1506.861 ±(99.9%) 33.017 MB/sec [Average]
[info]   (min, avg, max) = (1497.635, 1506.861, 1518.195), stdev = 8.574
[info]   CI (99.9%): [1473.844, 1539.878] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   985216.182 ±(99.9%) 0.025 B/op [Average]
[info]   (min, avg, max) = (985216.178, 985216.182, 985216.193), stdev = 0.006
[info]   CI (99.9%): [985216.157, 985216.207] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1477.967 ±(99.9%) 1166.499 MB/sec [Average]
[info]   (min, avg, max) = (1336.888, 1477.967, 2019.821), stdev = 302.936
[info]   CI (99.9%): [311.468, 2644.466] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   965975.015 ±(99.9%) 751771.941 B/op [Average]
[info]   (min, avg, max) = (875254.081, 965975.015, 1315166.795), stdev = 195232.786
[info]   CI (99.9%): [214203.074, 1717746.956] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   5.440 ±(99.9%) 28.685 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 5.440, 13.693), stdev = 7.449
[info]   CI (99.9%): [≈ 0, 34.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readUPickle
[info] # Run progress: 68.07% complete, ETA 00:42:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5357.922 ops/s
[info] # Warmup Iteration   2: 6571.854 ops/s
[info] # Warmup Iteration   3: 6519.006 ops/s
[info] # Warmup Iteration   4: 6684.730 ops/s
[info] # Warmup Iteration   5: 6706.809 ops/s
[info] Iteration   1: 6713.712 ops/s
[info]                  ·gc.alloc.rate:               1069.784 MB/sec
[info]                  ·gc.alloc.rate.norm:          250736.064 B/op
[info]                  ·gc.churn.PS_Eden_Space:      671.574 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 157403.516 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 6706.729 ops/s
[info]                  ·gc.alloc.rate:                   1068.519 MB/sec
[info]                  ·gc.alloc.rate.norm:              250736.064 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.959 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     315135.542 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.885 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 6712.731 ops/s
[info]                  ·gc.alloc.rate:                   1069.691 MB/sec
[info]                  ·gc.alloc.rate.norm:              250736.069 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.281 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     157583.137 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.881 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 6641.941 ops/s
[info]                  ·gc.alloc.rate:                   1058.296 MB/sec
[info]                  ·gc.alloc.rate.norm:              250736.065 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.790 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     318613.677 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.865 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 6675.277 ops/s
[info]                  ·gc.alloc.rate:               1063.768 MB/sec
[info]                  ·gc.alloc.rate.norm:          250753.490 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1345.767 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 317226.826 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readUPickle":
[info]   6690.078 ±(99.9%) 120.009 ops/s [Average]
[info]   (min, avg, max) = (6641.941, 6690.078, 6713.712), stdev = 31.166
[info]   CI (99.9%): [6570.070, 6810.087] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readUPickle:·gc.alloc.rate":
[info]   1066.011 ±(99.9%) 19.120 MB/sec [Average]
[info]   (min, avg, max) = (1058.296, 1066.011, 1069.784), stdev = 4.965
[info]   CI (99.9%): [1046.891, 1085.131] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readUPickle:·gc.alloc.rate.norm":
[info]   250739.551 ±(99.9%) 30.007 B/op [Average]
[info]   (min, avg, max) = (250736.064, 250739.551, 250753.490), stdev = 7.793
[info]   CI (99.9%): [250709.544, 250769.557] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readUPickle:·gc.churn.PS_Eden_Space":
[info]   1075.474 ±(99.9%) 1418.530 MB/sec [Average]
[info]   (min, avg, max) = (671.574, 1075.474, 1345.767), stdev = 368.388
[info]   CI (99.9%): [≈ 0, 2494.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   253192.540 ±(99.9%) 336430.088 B/op [Average]
[info]   (min, avg, max) = (157403.516, 253192.540, 318613.677), stdev = 87369.825
[info]   CI (99.9%): [≈ 0, 589622.627] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readUPickle:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   3.926 ±(99.9%) 15.869 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.926, 9.865), stdev = 4.121
[info]   CI (99.9%): [≈ 0, 19.795] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readUPickle:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readUPickle:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce
[info] # Run progress: 68.27% complete, ETA 00:42:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6054.248 ops/s
[info] # Warmup Iteration   2: 8732.597 ops/s
[info] # Warmup Iteration   3: 8998.626 ops/s
[info] # Warmup Iteration   4: 8957.325 ops/s
[info] # Warmup Iteration   5: 8980.992 ops/s
[info] Iteration   1: 8947.482 ops/s
[info]                  ·gc.alloc.rate:                   1992.368 MB/sec
[info]                  ·gc.alloc.rate.norm:              350456.048 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2012.723 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     354036.472 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.110 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19.328 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 8954.199 ops/s
[info]                  ·gc.alloc.rate:                   1993.928 MB/sec
[info]                  ·gc.alloc.rate.norm:              350456.048 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2018.053 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     354696.404 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 18.294 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 8982.754 ops/s
[info]                  ·gc.alloc.rate:                   2000.446 MB/sec
[info]                  ·gc.alloc.rate.norm:              350494.386 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2021.450 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     354174.518 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.110 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19.253 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 9011.012 ops/s
[info]                  ·gc.alloc.rate:                   2006.872 MB/sec
[info]                  ·gc.alloc.rate.norm:              350504.048 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2026.026 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     353849.318 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.271 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 8971.300 ops/s
[info]                  ·gc.alloc.rate:                   1997.915 MB/sec
[info]                  ·gc.alloc.rate.norm:              350504.048 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2029.306 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     356011.009 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.652 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce":
[info]   8973.349 ±(99.9%) 97.166 ops/s [Average]
[info]   (min, avg, max) = (8947.482, 8973.349, 9011.012), stdev = 25.234
[info]   CI (99.9%): [8876.184, 9070.515] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:·gc.alloc.rate":
[info]   1998.306 ±(99.9%) 22.165 MB/sec [Average]
[info]   (min, avg, max) = (1992.368, 1998.306, 2006.872), stdev = 5.756
[info]   CI (99.9%): [1976.140, 2020.471] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   350482.916 ±(99.9%) 95.657 B/op [Average]
[info]   (min, avg, max) = (350456.048, 350482.916, 350504.048), stdev = 24.842
[info]   CI (99.9%): [350387.259, 350578.573] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   2021.512 ±(99.9%) 25.128 MB/sec [Average]
[info]   (min, avg, max) = (2012.723, 2021.512, 2029.306), stdev = 6.526
[info]   CI (99.9%): [1996.384, 2046.639] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   354553.544 ±(99.9%) 3363.297 B/op [Average]
[info]   (min, avg, max) = (353849.318, 354553.544, 356011.009), stdev = 873.437
[info]   CI (99.9%): [351190.248, 357916.841] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.077 ±(99.9%) 0.165 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.077, 0.110), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.242] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   13.560 ±(99.9%) 28.932 B/op [Average]
[info]   (min, avg, max) = (3.652, 13.560, 19.328), stdev = 7.513
[info]   CI (99.9%): [≈ 0, 42.491] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava
[info] # Run progress: 68.47% complete, ETA 00:42:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2577.907 ops/s
[info] # Warmup Iteration   2: 55843.371 ops/s
[info] # Warmup Iteration   3: 56083.531 ops/s
[info] # Warmup Iteration   4: 56436.938 ops/s
[info] # Warmup Iteration   5: 56228.875 ops/s
[info] Iteration   1: 55833.646 ops/s
[info]                  ·gc.alloc.rate:                   521.919 MB/sec
[info]                  ·gc.alloc.rate.norm:              14712.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.601 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14421.159 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.001 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 55649.162 ops/s
[info]                  ·gc.alloc.rate:               520.324 MB/sec
[info]                  ·gc.alloc.rate.norm:          14712.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:      662.975 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 18745.430 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 56463.717 ops/s
[info]                  ·gc.alloc.rate:      527.890 MB/sec
[info]                  ·gc.alloc.rate.norm: 14712.008 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 56549.033 ops/s
[info]                  ·gc.alloc.rate:                   528.635 MB/sec
[info]                  ·gc.alloc.rate.norm:              14712.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.846 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18447.136 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.159 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 56247.227 ops/s
[info]                  ·gc.alloc.rate:               525.788 MB/sec
[info]                  ·gc.alloc.rate.norm:          14712.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:      664.469 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 18592.434 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava":
[info]   56148.557 ±(99.9%) 1513.561 ops/s [Average]
[info]   (min, avg, max) = (55649.162, 56148.557, 56549.033), stdev = 393.067
[info]   CI (99.9%): [54634.996, 57662.118] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   524.911 ±(99.9%) 14.083 MB/sec [Average]
[info]   (min, avg, max) = (520.324, 524.911, 528.635), stdev = 3.657
[info]   CI (99.9%): [510.828, 538.994] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   14712.008 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (14712.008, 14712.008, 14712.008), stdev = 0.001
[info]   CI (99.9%): [14712.007, 14712.009] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   500.378 ±(99.9%) 1106.455 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 500.378, 664.469), stdev = 287.343
[info]   CI (99.9%): [≈ 0, 1606.834] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   14041.232 ±(99.9%) 31018.332 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 14041.232, 18745.430), stdev = 8055.362
[info]   CI (99.9%): [≈ 0, 45059.564] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.009 ±(99.9%) 0.071 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.009, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.237 ±(99.9%) 1.985 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.237, 1.159), stdev = 0.515
[info]   CI (99.9%): [≈ 0, 2.222] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.000, 3.000), stdev = 1.225
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala
[info] # Run progress: 68.67% complete, ETA 00:41:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 24351.379 ops/s
[info] # Warmup Iteration   2: 40811.607 ops/s
[info] # Warmup Iteration   3: 41362.825 ops/s
[info] # Warmup Iteration   4: 41062.998 ops/s
[info] # Warmup Iteration   5: 41204.289 ops/s
[info] Iteration   1: 40625.106 ops/s
[info]                  ·gc.alloc.rate:                   605.118 MB/sec
[info]                  ·gc.alloc.rate.norm:              23431.813 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.831 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19819.511 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.035 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.373 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 41115.997 ops/s
[info]                  ·gc.alloc.rate:                   612.145 MB/sec
[info]                  ·gc.alloc.rate.norm:              23431.908 B/op
[info]                  ·gc.churn.PS_Eden_Space:          664.469 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25434.782 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.596 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 99.381 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 41149.591 ops/s
[info]                  ·gc.alloc.rate:                   612.715 MB/sec
[info]                  ·gc.alloc.rate.norm:              23431.813 B/op
[info]                  ·gc.churn.PS_Eden_Space:          664.557 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25414.388 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.592 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 40735.707 ops/s
[info]                  ·gc.alloc.rate:               606.554 MB/sec
[info]                  ·gc.alloc.rate.norm:          23431.860 B/op
[info]                  ·gc.churn.PS_Eden_Space:      664.225 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 25659.768 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 42190.165 ops/s
[info]                  ·gc.alloc.rate:                   628.126 MB/sec
[info]                  ·gc.alloc.rate.norm:              23431.762 B/op
[info]                  ·gc.churn.PS_Eden_Space:          664.117 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24774.403 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.553 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala":
[info]   41163.313 ±(99.9%) 2380.999 ops/s [Average]
[info]   (min, avg, max) = (40625.106, 41163.313, 42190.165), stdev = 618.338
[info]   CI (99.9%): [38782.314, 43544.312] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   612.931 ±(99.9%) 35.147 MB/sec [Average]
[info]   (min, avg, max) = (605.118, 612.931, 628.126), stdev = 9.128
[info]   CI (99.9%): [577.784, 648.079] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   23431.831 ±(99.9%) 0.213 B/op [Average]
[info]   (min, avg, max) = (23431.762, 23431.831, 23431.908), stdev = 0.055
[info]   CI (99.9%): [23431.619, 23432.044] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   633.840 ±(99.9%) 262.634 MB/sec [Average]
[info]   (min, avg, max) = (511.831, 633.840, 664.557), stdev = 68.205
[info]   CI (99.9%): [371.206, 896.474] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   24220.571 ±(99.9%) 9558.377 B/op [Average]
[info]   (min, avg, max) = (19819.511, 24220.571, 25659.768), stdev = 2482.280
[info]   CI (99.9%): [14662.194, 33778.947] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.543 ±(99.9%) 4.420 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.543, 2.596), stdev = 1.148
[info]   CI (99.9%): [≈ 0, 4.963] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   20.780 ±(99.9%) 169.214 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 20.780, 99.381), stdev = 43.944
[info]   CI (99.9%): [≈ 0, 189.994] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 3.000), stdev = 1.095
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala
[info] # Run progress: 68.88% complete, ETA 00:41:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 76592.356 ops/s
[info] # Warmup Iteration   2: 80624.497 ops/s
[info] # Warmup Iteration   3: 84139.181 ops/s
[info] # Warmup Iteration   4: 84217.269 ops/s
[info] # Warmup Iteration   5: 82628.491 ops/s
[info] Iteration   1: 83806.802 ops/s
[info]                  ·gc.alloc.rate:                   630.066 MB/sec
[info]                  ·gc.alloc.rate.norm:              11832.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.808 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12634.652 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.780 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 33.431 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 83638.358 ops/s
[info]                  ·gc.alloc.rate:      628.796 MB/sec
[info]                  ·gc.alloc.rate.norm: 11832.005 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 84161.729 ops/s
[info]                  ·gc.alloc.rate:               632.765 MB/sec
[info]                  ·gc.alloc.rate.norm:          11832.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.833 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 12581.218 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 83060.566 ops/s
[info]                  ·gc.alloc.rate:                   624.607 MB/sec
[info]                  ·gc.alloc.rate.norm:              11832.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.008 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12748.875 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.394 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 83086.559 ops/s
[info]                  ·gc.alloc.rate:                   624.620 MB/sec
[info]                  ·gc.alloc.rate.norm:              11832.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.804 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12744.732 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.789 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala":
[info]   83550.803 ±(99.9%) 1828.839 ops/s [Average]
[info]   (min, avg, max) = (83060.566, 83550.803, 84161.729), stdev = 474.944
[info]   CI (99.9%): [81721.963, 85379.642] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   628.171 ±(99.9%) 13.668 MB/sec [Average]
[info]   (min, avg, max) = (624.607, 628.171, 632.765), stdev = 3.550
[info]   CI (99.9%): [614.502, 641.839] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   11832.005 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (11832.005, 11832.005, 11832.006), stdev = 0.001
[info]   CI (99.9%): [11832.004, 11832.006] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   538.290 ±(99.9%) 1158.711 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 538.290, 673.008), stdev = 300.914
[info]   CI (99.9%): [≈ 0, 1697.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   10141.895 ±(99.9%) 21832.953 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 10141.895, 12748.875), stdev = 5669.949
[info]   CI (99.9%): [≈ 0, 31974.849] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.369 ±(99.9%) 3.039 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.369, 1.780), stdev = 0.789
[info]   CI (99.9%): [≈ 0, 3.408] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   6.923 ±(99.9%) 57.074 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 6.923, 33.431), stdev = 14.822
[info]   CI (99.9%): [≈ 0, 63.997] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 0.707
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 69.08% complete, ETA 00:41:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 95308.426 ops/s
[info] # Warmup Iteration   2: 102901.010 ops/s
[info] # Warmup Iteration   3: 103572.382 ops/s
[info] # Warmup Iteration   4: 103891.374 ops/s
[info] # Warmup Iteration   5: 104143.402 ops/s
[info] Iteration   1: 103973.645 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.004 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 104049.154 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.004 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 102462.433 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.004 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 104058.656 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.004 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 104061.194 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.004 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc":
[info]   103721.016 ±(99.9%) 2712.756 ops/s [Average]
[info]   (min, avg, max) = (102462.433, 103721.016, 104061.194), stdev = 704.494
[info]   CI (99.9%): [101008.260, 106433.773] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.004 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (0.004, 0.004, 0.004), stdev = 0.001
[info]   CI (99.9%): [0.004, 0.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson
[info] # Run progress: 69.28% complete, ETA 00:41:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2640.757 ops/s
[info] # Warmup Iteration   2: 5846.321 ops/s
[info] # Warmup Iteration   3: 5889.018 ops/s
[info] # Warmup Iteration   4: 5997.981 ops/s
[info] # Warmup Iteration   5: 6007.525 ops/s
[info] Iteration   1: 6015.618 ops/s
[info]                  ·gc.alloc.rate:                   1798.323 MB/sec
[info]                  ·gc.alloc.rate.norm:              470423.701 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2001.569 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     523590.924 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.892 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 5922.956 ops/s
[info]                  ·gc.alloc.rate:                   1771.174 MB/sec
[info]                  ·gc.alloc.rate.norm:              470423.680 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.306 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     355188.529 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11.061 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 5865.931 ops/s
[info]                  ·gc.alloc.rate:                   1753.316 MB/sec
[info]                  ·gc.alloc.rate.norm:              470423.988 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2010.693 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     539479.573 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 27.926 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 6021.278 ops/s
[info]                  ·gc.alloc.rate:                   1799.863 MB/sec
[info]                  ·gc.alloc.rate.norm:              470423.768 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2015.941 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     526899.430 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 27.202 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 6022.135 ops/s
[info]                  ·gc.alloc.rate:                   1800.357 MB/sec
[info]                  ·gc.alloc.rate.norm:              470424.499 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.991 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     351962.263 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.440 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson":
[info]   5969.583 ±(99.9%) 275.469 ops/s [Average]
[info]   (min, avg, max) = (5865.931, 5969.583, 6022.135), stdev = 71.538
[info]   CI (99.9%): [5694.114, 6245.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1784.607 ±(99.9%) 82.329 MB/sec [Average]
[info]   (min, avg, max) = (1753.316, 1784.607, 1800.357), stdev = 21.381
[info]   CI (99.9%): [1702.278, 1866.935] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   470423.927 ±(99.9%) 1.318 B/op [Average]
[info]   (min, avg, max) = (470423.680, 470423.927, 470424.499), stdev = 0.342
[info]   CI (99.9%): [470422.609, 470425.245] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1742.500 ±(99.9%) 1407.493 MB/sec [Average]
[info]   (min, avg, max) = (1337.306, 1742.500, 2015.941), stdev = 365.521
[info]   CI (99.9%): [335.008, 3149.993] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   459424.144 ±(99.9%) 372798.621 B/op [Average]
[info]   (min, avg, max) = (351962.263, 459424.144, 539479.573), stdev = 96814.618
[info]   CI (99.9%): [86625.523, 832222.765] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.150 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.062, 0.104), stdev = 0.039
[info]   CI (99.9%): [≈ 0, 0.212] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   16.504 ±(99.9%) 39.853 B/op [Average]
[info]   (min, avg, max) = (5.440, 16.504, 27.926), stdev = 10.350
[info]   CI (99.9%): [≈ 0, 56.357] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeUPickle
[info] # Run progress: 69.48% complete, ETA 00:40:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3919.869 ops/s
[info] # Warmup Iteration   2: 4524.185 ops/s
[info] # Warmup Iteration   3: 4497.245 ops/s
[info] # Warmup Iteration   4: 4603.294 ops/s
[info] # Warmup Iteration   5: 4413.101 ops/s
[info] Iteration   1: 4597.491 ops/s
[info]                  ·gc.alloc.rate:                   490.495 MB/sec
[info]                  ·gc.alloc.rate.norm:              167872.094 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.628 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     175104.668 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.027 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.239 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 4606.579 ops/s
[info]                  ·gc.alloc.rate:               491.449 MB/sec
[info]                  ·gc.alloc.rate.norm:          167872.094 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.622 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 174762.667 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 4602.369 ops/s
[info]                  ·gc.alloc.rate:                   490.976 MB/sec
[info]                  ·gc.alloc.rate.norm:              167872.094 B/op
[info]                  ·gc.churn.PS_Eden_Space:          671.772 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     229689.161 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.849 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 632.035 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 4590.341 ops/s
[info]                  ·gc.alloc.rate:      489.703 MB/sec
[info]                  ·gc.alloc.rate.norm: 167872.101 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 4613.093 ops/s
[info]                  ·gc.alloc.rate:                   492.152 MB/sec
[info]                  ·gc.alloc.rate.norm:              167872.094 B/op
[info]                  ·gc.churn.PS_Eden_Space:          671.922 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     229191.352 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 14.204 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeUPickle":
[info]   4601.974 ±(99.9%) 33.370 ops/s [Average]
[info]   (min, avg, max) = (4590.341, 4601.974, 4613.093), stdev = 8.666
[info]   CI (99.9%): [4568.604, 4635.345] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeUPickle:·gc.alloc.rate":
[info]   490.955 ±(99.9%) 3.579 MB/sec [Average]
[info]   (min, avg, max) = (489.703, 490.955, 492.152), stdev = 0.929
[info]   CI (99.9%): [487.376, 494.534] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeUPickle:·gc.alloc.rate.norm":
[info]   167872.095 ±(99.9%) 0.013 B/op [Average]
[info]   (min, avg, max) = (167872.094, 167872.095, 167872.101), stdev = 0.003
[info]   CI (99.9%): [167872.083, 167872.108] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeUPickle:·gc.churn.PS_Eden_Space":
[info]   473.389 ±(99.9%) 1064.674 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 473.389, 671.922), stdev = 276.492
[info]   CI (99.9%): [≈ 0, 1538.063] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   161749.569 ±(99.9%) 363650.481 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 161749.569, 229689.161), stdev = 94438.875
[info]   CI (99.9%): [≈ 0, 525400.051] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space":
[info]   0.383 ±(99.9%) 3.154 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.383, 1.849), stdev = 0.819
[info]   CI (99.9%): [≈ 0, 3.538] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   131.095 ±(99.9%) 1078.567 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 131.095, 632.035), stdev = 280.100
[info]   CI (99.9%): [≈ 0, 1209.662] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeUPickle:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeUPickle:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 3.000), stdev = 1.140
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce
[info] # Run progress: 69.68% complete, ETA 00:40:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3428205.550 ops/s
[info] # Warmup Iteration   2: 4981612.334 ops/s
[info] # Warmup Iteration   3: 5075975.217 ops/s
[info] # Warmup Iteration   4: 4940903.218 ops/s
[info] # Warmup Iteration   5: 5041459.821 ops/s
[info] Iteration   1: 5081627.437 ops/s
[info]                  ·gc.alloc.rate:                   3306.131 MB/sec
[info]                  ·gc.alloc.rate.norm:              1024.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3386.657 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1048.941 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 5084147.325 ops/s
[info]                  ·gc.alloc.rate:                   3307.934 MB/sec
[info]                  ·gc.alloc.rate.norm:              1024.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2713.916 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     840.116 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 5061620.641 ops/s
[info]                  ·gc.alloc.rate:                   3293.059 MB/sec
[info]                  ·gc.alloc.rate.norm:              1024.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3396.587 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1056.193 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 5082822.660 ops/s
[info]                  ·gc.alloc.rate:                   3308.202 MB/sec
[info]                  ·gc.alloc.rate.norm:              1024.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3402.270 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1053.117 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.019 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 5089685.402 ops/s
[info]                  ·gc.alloc.rate:                   3313.038 MB/sec
[info]                  ·gc.alloc.rate.norm:              1024.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3405.093 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1052.453 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.019 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce":
[info]   5079980.693 ±(99.9%) 41267.615 ops/s [Average]
[info]   (min, avg, max) = (5061620.641, 5079980.693, 5089685.402), stdev = 10717.069
[info]   CI (99.9%): [5038713.077, 5121248.308] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:·gc.alloc.rate":
[info]   3305.673 ±(99.9%) 28.884 MB/sec [Average]
[info]   (min, avg, max) = (3293.059, 3305.673, 3313.038), stdev = 7.501
[info]   CI (99.9%): [3276.789, 3334.557] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   1024.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1024.000, 1024.000, 1024.000), stdev = 0.001
[info]   CI (99.9%): [1024.000, 1024.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   3260.905 ±(99.9%) 1177.747 MB/sec [Average]
[info]   (min, avg, max) = (2713.916, 3260.905, 3405.093), stdev = 305.857
[info]   CI (99.9%): [2083.157, 4438.652] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1010.164 ±(99.9%) 366.175 B/op [Average]
[info]   (min, avg, max) = (840.116, 1010.164, 1056.193), stdev = 95.095
[info]   CI (99.9%): [643.989, 1376.339] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.083 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 0.083, 0.104), stdev = 0.021
[info]   CI (99.9%): [0.003, 0.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.026 ±(99.9%) 0.025 B/op [Average]
[info]   (min, avg, max) = (0.019, 0.026, 0.032), stdev = 0.006
[info]   CI (99.9%): [0.001, 0.051] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.000, 5.000), stdev = 0.707
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava
[info] # Run progress: 69.88% complete, ETA 00:40:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.861 ops/s
[info] # Warmup Iteration   2: 37523394.374 ops/s
[info] # Warmup Iteration   3: 37902295.051 ops/s
[info] # Warmup Iteration   4: 40097461.610 ops/s
[info] # Warmup Iteration   5: 40087891.096 ops/s
[info] Iteration   1: 40087524.297 ops/s
[info]                  ·gc.alloc.rate:               407.632 MB/sec
[info]                  ·gc.alloc.rate.norm:          16.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.712 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 20.085 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 40212638.818 ops/s
[info]                  ·gc.alloc.rate:      408.806 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 40104181.828 ops/s
[info]                  ·gc.alloc.rate:               407.805 MB/sec
[info]                  ·gc.alloc.rate.norm:          16.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.722 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 20.077 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 40084729.962 ops/s
[info]                  ·gc.alloc.rate:                   407.524 MB/sec
[info]                  ·gc.alloc.rate.norm:              16.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.869 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     26.065 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.026 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 39973496.014 ops/s
[info]                  ·gc.alloc.rate:      406.378 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava":
[info]   40092514.184 ±(99.9%) 326833.707 ops/s [Average]
[info]   (min, avg, max) = (39973496.014, 40092514.184, 40212638.818), stdev = 84877.676
[info]   CI (99.9%): [39765680.477, 40419347.891] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   407.629 ±(99.9%) 3.331 MB/sec [Average]
[info]   (min, avg, max) = (406.378, 407.629, 408.806), stdev = 0.865
[info]   CI (99.9%): [404.298, 410.960] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   16.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (16.000, 16.000, 16.000), stdev = 0.001
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   337.460 ±(99.9%) 1210.095 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 337.460, 663.869), stdev = 314.258
[info]   CI (99.9%): [≈ 0, 1547.555] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   13.245 ±(99.9%) 47.500 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 13.245, 26.065), stdev = 12.336
[info]   CI (99.9%): [≈ 0, 60.745] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.005 ±(99.9%) 0.045 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.005, 0.026), stdev = 0.012
[info]   CI (99.9%): [≈ 0, 0.050] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 3.000), stdev = 1.304
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala
[info] # Run progress: 70.08% complete, ETA 00:39:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3816360.139 ops/s
[info] # Warmup Iteration   2: 7989288.140 ops/s
[info] # Warmup Iteration   3: 8136696.428 ops/s
[info] # Warmup Iteration   4: 7990614.100 ops/s
[info] # Warmup Iteration   5: 8055343.554 ops/s
[info] Iteration   1: 8124243.148 ops/s
[info]                  ·gc.alloc.rate:                   3428.283 MB/sec
[info]                  ·gc.alloc.rate.norm:              664.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3378.408 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     654.340 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 8186339.437 ops/s
[info]                  ·gc.alloc.rate:                   3454.320 MB/sec
[info]                  ·gc.alloc.rate.norm:              664.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3386.797 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     651.021 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 8171267.377 ops/s
[info]                  ·gc.alloc.rate:                   3447.949 MB/sec
[info]                  ·gc.alloc.rate.norm:              664.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3394.735 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     653.752 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 8077264.685 ops/s
[info]                  ·gc.alloc.rate:                   3407.592 MB/sec
[info]                  ·gc.alloc.rate.norm:              664.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3398.586 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     662.245 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 8013441.903 ops/s
[info]                  ·gc.alloc.rate:                   3382.076 MB/sec
[info]                  ·gc.alloc.rate.norm:              664.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3403.358 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     668.178 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala":
[info]   8114511.310 ±(99.9%) 272809.194 ops/s [Average]
[info]   (min, avg, max) = (8013441.903, 8114511.310, 8186339.437), stdev = 70847.681
[info]   CI (99.9%): [7841702.116, 8387320.504] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   3424.044 ±(99.9%) 114.521 MB/sec [Average]
[info]   (min, avg, max) = (3382.076, 3424.044, 3454.320), stdev = 29.741
[info]   CI (99.9%): [3309.523, 3538.565] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   664.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (664.000, 664.000, 664.000), stdev = 0.001
[info]   CI (99.9%): [664.000, 664.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   3392.377 ±(99.9%) 38.069 MB/sec [Average]
[info]   (min, avg, max) = (3378.408, 3392.377, 3403.358), stdev = 9.886
[info]   CI (99.9%): [3354.308, 3430.446] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   657.907 ±(99.9%) 27.346 B/op [Average]
[info]   (min, avg, max) = (651.021, 657.907, 668.178), stdev = 7.102
[info]   CI (99.9%): [630.562, 685.253] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.087 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 0.087, 0.104), stdev = 0.017
[info]   CI (99.9%): [0.020, 0.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.017 ±(99.9%) 0.013 B/op [Average]
[info]   (min, avg, max) = (0.012, 0.017, 0.020), stdev = 0.003
[info]   CI (99.9%): [0.004, 0.030] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala
[info] # Run progress: 70.28% complete, ETA 00:39:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 44896066.161 ops/s
[info] # Warmup Iteration   2: 46989848.207 ops/s
[info] # Warmup Iteration   3: 46973442.259 ops/s
[info] # Warmup Iteration   4: 49428525.871 ops/s
[info] # Warmup Iteration   5: 49436493.272 ops/s
[info] Iteration   1: 49432825.190 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 49422432.417 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 49447997.779 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 49426027.178 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 49373641.101 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala":
[info]   49420584.733 ±(99.9%) 107853.138 ops/s [Average]
[info]   (min, avg, max) = (49373641.101, 49420584.733, 49447997.779), stdev = 28009.117
[info]   CI (99.9%): [49312731.595, 49528437.871] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁵ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala
[info] # Run progress: 70.48% complete, ETA 00:39:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 13442132.812 ops/s
[info] # Warmup Iteration   2: 17099543.257 ops/s
[info] # Warmup Iteration   3: 17202295.251 ops/s
[info] # Warmup Iteration   4: 17277924.159 ops/s
[info] # Warmup Iteration   5: 17280846.020 ops/s
[info] Iteration   1: 17262349.172 ops/s
[info]                  ·gc.alloc.rate:                   1140.683 MB/sec
[info]                  ·gc.alloc.rate.norm:              104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.281 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     122.927 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.004 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 17261393.221 ops/s
[info]                  ·gc.alloc.rate:                   1140.681 MB/sec
[info]                  ·gc.alloc.rate.norm:              104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.023 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     122.995 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 17296581.517 ops/s
[info]                  ·gc.alloc.rate:               1142.967 MB/sec
[info]                  ·gc.alloc.rate.norm:          104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      674.818 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 61.403 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 17228324.865 ops/s
[info]                  ·gc.alloc.rate:                   1138.420 MB/sec
[info]                  ·gc.alloc.rate.norm:              104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.589 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     123.291 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 17322509.352 ops/s
[info]                  ·gc.alloc.rate:                   1144.731 MB/sec
[info]                  ·gc.alloc.rate.norm:              104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1351.004 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     122.740 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala":
[info]   17274231.625 ±(99.9%) 139419.164 ops/s [Average]
[info]   (min, avg, max) = (17228324.865, 17274231.625, 17322509.352), stdev = 36206.714
[info]   CI (99.9%): [17134812.462, 17413650.789] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:·gc.alloc.rate":
[info]   1141.496 ±(99.9%) 9.318 MB/sec [Average]
[info]   (min, avg, max) = (1138.420, 1141.496, 1144.731), stdev = 2.420
[info]   CI (99.9%): [1132.179, 1150.814] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:·gc.alloc.rate.norm":
[info]   104.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (104.000, 104.000, 104.000), stdev = 0.001
[info]   CI (99.9%): [104.000, 104.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:·gc.churn.PS_Eden_Space":
[info]   1214.543 ±(99.9%) 1161.805 MB/sec [Average]
[info]   (min, avg, max) = (674.818, 1214.543, 1351.004), stdev = 301.717
[info]   CI (99.9%): [52.738, 2376.348] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:·gc.churn.PS_Eden_Space.norm":
[info]   110.671 ±(99.9%) 106.058 B/op [Average]
[info]   (min, avg, max) = (61.403, 110.671, 123.291), stdev = 27.543
[info]   CI (99.9%): [4.614, 216.729] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.083), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.172] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.005 ±(99.9%) 0.011 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.005, 0.008), stdev = 0.003
[info]   CI (99.9%): [≈ 0, 0.016] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson
[info] # Run progress: 70.68% complete, ETA 00:39:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4268144.541 ops/s
[info] # Warmup Iteration   2: 7655696.472 ops/s
[info] # Warmup Iteration   3: 7615867.153 ops/s
[info] # Warmup Iteration   4: 7708911.880 ops/s
[info] # Warmup Iteration   5: 7723994.295 ops/s
[info] Iteration   1: 7717941.101 ops/s
[info]                  ·gc.alloc.rate:                   3728.596 MB/sec
[info]                  ·gc.alloc.rate.norm:              760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4062.755 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     828.112 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 7757594.256 ops/s
[info]                  ·gc.alloc.rate:                   3746.141 MB/sec
[info]                  ·gc.alloc.rate.norm:              760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3393.197 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     688.396 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.030 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 7665619.301 ops/s
[info]                  ·gc.alloc.rate:                   3702.923 MB/sec
[info]                  ·gc.alloc.rate.norm:              760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4079.222 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     837.233 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 7693928.781 ops/s
[info]                  ·gc.alloc.rate:                   3715.546 MB/sec
[info]                  ·gc.alloc.rate.norm:              760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3401.646 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     695.793 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 7537026.295 ops/s
[info]                  ·gc.alloc.rate:                   3639.935 MB/sec
[info]                  ·gc.alloc.rate.norm:              760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3404.455 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     710.833 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.004 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson":
[info]   7674421.947 ±(99.9%) 323013.247 ops/s [Average]
[info]   (min, avg, max) = (7537026.295, 7674421.947, 7757594.256), stdev = 83885.514
[info]   CI (99.9%): [7351408.700, 7997435.193] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3706.628 ±(99.9%) 156.238 MB/sec [Average]
[info]   (min, avg, max) = (3639.935, 3706.628, 3746.141), stdev = 40.574
[info]   CI (99.9%): [3550.391, 3862.866] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   760.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (760.000, 760.000, 760.000), stdev = 0.001
[info]   CI (99.9%): [760.000, 760.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3668.255 ±(99.9%) 1415.933 MB/sec [Average]
[info]   (min, avg, max) = (3393.197, 3668.255, 4079.222), stdev = 367.713
[info]   CI (99.9%): [2252.322, 5084.188] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   752.073 ±(99.9%) 285.292 B/op [Average]
[info]   (min, avg, max) = (688.396, 752.073, 837.233), stdev = 74.089
[info]   CI (99.9%): [466.781, 1037.366] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.087 ±(99.9%) 0.208 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.087, 0.146), stdev = 0.054
[info]   CI (99.9%): [≈ 0, 0.295] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.018 ±(99.9%) 0.042 B/op [Average]
[info]   (min, avg, max) = (0.004, 0.018, 0.030), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.060] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.000, 6.000), stdev = 1.000
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readUPickle
[info] # Run progress: 70.88% complete, ETA 00:38:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6669097.770 ops/s
[info] # Warmup Iteration   2: 8751818.406 ops/s
[info] # Warmup Iteration   3: 8801246.821 ops/s
[info] # Warmup Iteration   4: 8726142.546 ops/s
[info] # Warmup Iteration   5: 8841845.279 ops/s
[info] Iteration   1: 8852961.088 ops/s
[info]                  ·gc.alloc.rate:                   3869.789 MB/sec
[info]                  ·gc.alloc.rate.norm:              688.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4072.594 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     724.056 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 8868495.689 ops/s
[info]                  ·gc.alloc.rate:                   3878.432 MB/sec
[info]                  ·gc.alloc.rate.norm:              688.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4081.099 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     723.951 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 8757859.503 ops/s
[info]                  ·gc.alloc.rate:                   3828.948 MB/sec
[info]                  ·gc.alloc.rate.norm:              688.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3403.145 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     611.490 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 8727372.131 ops/s
[info]                  ·gc.alloc.rate:                   3816.128 MB/sec
[info]                  ·gc.alloc.rate.norm:              688.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4086.123 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     736.677 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.019 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 8872785.201 ops/s
[info]                  ·gc.alloc.rate:                   3879.316 MB/sec
[info]                  ·gc.alloc.rate.norm:              688.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3407.531 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     604.329 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readUPickle":
[info]   8815894.722 ±(99.9%) 262449.278 ops/s [Average]
[info]   (min, avg, max) = (8727372.131, 8815894.722, 8872785.201), stdev = 68157.244
[info]   CI (99.9%): [8553445.444, 9078344.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readUPickle:·gc.alloc.rate":
[info]   3854.523 ±(99.9%) 114.676 MB/sec [Average]
[info]   (min, avg, max) = (3816.128, 3854.523, 3879.316), stdev = 29.781
[info]   CI (99.9%): [3739.847, 3969.198] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readUPickle:·gc.alloc.rate.norm":
[info]   688.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (688.000, 688.000, 688.000), stdev = 0.001
[info]   CI (99.9%): [688.000, 688.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readUPickle:·gc.churn.PS_Eden_Space":
[info]   3810.098 ±(99.9%) 1422.925 MB/sec [Average]
[info]   (min, avg, max) = (3403.145, 3810.098, 4086.123), stdev = 369.529
[info]   CI (99.9%): [2387.174, 5233.023] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   680.101 ±(99.9%) 254.730 B/op [Average]
[info]   (min, avg, max) = (604.329, 680.101, 736.677), stdev = 66.153
[info]   CI (99.9%): [425.370, 934.831] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readUPickle:·gc.churn.PS_Survivor_Space":
[info]   0.079 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.079, 0.125), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.211] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   0.014 ±(99.9%) 0.024 B/op [Average]
[info]   (min, avg, max) = (0.007, 0.014, 0.022), stdev = 0.006
[info]   CI (99.9%): [≈ 0, 0.038] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readUPickle:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readUPickle:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce
[info] # Run progress: 71.08% complete, ETA 00:38:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7101839.353 ops/s
[info] # Warmup Iteration   2: 11398150.122 ops/s
[info] # Warmup Iteration   3: 11852139.398 ops/s
[info] # Warmup Iteration   4: 11883653.803 ops/s
[info] # Warmup Iteration   5: 11889922.199 ops/s
[info] Iteration   1: 11882949.857 ops/s
[info]                  ·gc.alloc.rate:                   2355.615 MB/sec
[info]                  ·gc.alloc.rate.norm:              312.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2694.861 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     356.933 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 11886022.958 ops/s
[info]                  ·gc.alloc.rate:                   2356.796 MB/sec
[info]                  ·gc.alloc.rate.norm:              312.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2025.206 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     268.103 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 11906821.472 ops/s
[info]                  ·gc.alloc.rate:                   2360.858 MB/sec
[info]                  ·gc.alloc.rate.norm:              312.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2706.344 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     357.658 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 11725917.044 ops/s
[info]                  ·gc.alloc.rate:                   2324.941 MB/sec
[info]                  ·gc.alloc.rate.norm:              312.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2033.347 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     272.869 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 11884959.331 ops/s
[info]                  ·gc.alloc.rate:                   2356.555 MB/sec
[info]                  ·gc.alloc.rate.norm:              312.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2035.537 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     269.498 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce":
[info]   11857334.132 ±(99.9%) 285323.449 ops/s [Average]
[info]   (min, avg, max) = (11725917.044, 11857334.132, 11906821.472), stdev = 74097.594
[info]   CI (99.9%): [11572010.684, 12142657.581] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:·gc.alloc.rate":
[info]   2350.953 ±(99.9%) 56.527 MB/sec [Average]
[info]   (min, avg, max) = (2324.941, 2350.953, 2360.858), stdev = 14.680
[info]   CI (99.9%): [2294.426, 2407.480] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   312.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (312.000, 312.000, 312.000), stdev = 0.001
[info]   CI (99.9%): [312.000, 312.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   2299.059 ±(99.9%) 1411.647 MB/sec [Average]
[info]   (min, avg, max) = (2025.206, 2299.059, 2706.344), stdev = 366.600
[info]   CI (99.9%): [887.411, 3710.706] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   305.012 ±(99.9%) 183.906 B/op [Average]
[info]   (min, avg, max) = (268.103, 305.012, 357.658), stdev = 47.760
[info]   CI (99.9%): [121.106, 488.919] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.058, 0.083), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.008 ±(99.9%) 0.009 B/op [Average]
[info]   (min, avg, max) = (0.006, 0.008, 0.011), stdev = 0.002
[info]   CI (99.9%): [≈ 0, 0.017] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava
[info] # Run progress: 71.29% complete, ETA 00:38:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.871 ops/s
[info] # Warmup Iteration   2: 55705116.325 ops/s
[info] # Warmup Iteration   3: 57383609.799 ops/s
[info] # Warmup Iteration   4: 60288227.926 ops/s
[info] # Warmup Iteration   5: 60315613.464 ops/s
[info] Iteration   1: 60774922.610 ops/s
[info]                  ·gc.alloc.rate:                   1853.522 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.617 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     34.614 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.028 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 57374423.392 ops/s
[info]                  ·gc.alloc.rate:                   1749.867 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2008.424 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     55.092 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.332 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.064 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 55084279.943 ops/s
[info]                  ·gc.alloc.rate:               1679.973 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1338.961 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 38.257 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 54844363.060 ops/s
[info]                  ·gc.alloc.rate:               1672.847 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2009.304 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 57.654 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 55019809.993 ops/s
[info]                  ·gc.alloc.rate:               1677.956 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1340.942 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 38.359 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava":
[info]   56619559.800 ±(99.9%) 9799201.535 ops/s [Average]
[info]   (min, avg, max) = (54844363.060, 56619559.800, 60774922.610), stdev = 2544821.520
[info]   CI (99.9%): [46820358.265, 66418761.335] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   1726.833 ±(99.9%) 298.766 MB/sec [Average]
[info]   (min, avg, max) = (1672.847, 1726.833, 1853.522), stdev = 77.589
[info]   CI (99.9%): [1428.067, 2025.599] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   48.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (48.000, 48.000, 48.000), stdev = 0.001
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   1606.850 ±(99.9%) 1413.151 MB/sec [Average]
[info]   (min, avg, max) = (1336.617, 1606.850, 2009.304), stdev = 366.991
[info]   CI (99.9%): [193.699, 3020.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   44.795 ±(99.9%) 41.258 B/op [Average]
[info]   (min, avg, max) = (34.614, 44.795, 57.654), stdev = 10.715
[info]   CI (99.9%): [3.537, 86.054] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.472 ±(99.9%) 4.004 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.472, 2.332), stdev = 1.040
[info]   CI (99.9%): [≈ 0, 4.476] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.013 ±(99.9%) 0.110 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.013, 0.064), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.123] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.400, 6.000), stdev = 1.517
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala
[info] # Run progress: 71.49% complete, ETA 00:38:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4948473.019 ops/s
[info] # Warmup Iteration   2: 11564919.587 ops/s
[info] # Warmup Iteration   3: 11982096.424 ops/s
[info] # Warmup Iteration   4: 12006573.823 ops/s
[info] # Warmup Iteration   5: 11841413.646 ops/s
[info] Iteration   1: 11834567.031 ops/s
[info]                  ·gc.alloc.rate:                   2346.293 MB/sec
[info]                  ·gc.alloc.rate.norm:              312.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2014.254 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     267.847 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 12000028.293 ops/s
[info]                  ·gc.alloc.rate:                   2378.879 MB/sec
[info]                  ·gc.alloc.rate.norm:              312.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2692.650 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     353.152 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.019 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 11877256.207 ops/s
[info]                  ·gc.alloc.rate:                   2354.518 MB/sec
[info]                  ·gc.alloc.rate.norm:              312.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2024.469 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     268.265 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 11891117.583 ops/s
[info]                  ·gc.alloc.rate:                   2357.251 MB/sec
[info]                  ·gc.alloc.rate.norm:              312.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2705.521 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     358.096 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 12019768.917 ops/s
[info]                  ·gc.alloc.rate:                   2382.556 MB/sec
[info]                  ·gc.alloc.rate.norm:              312.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2032.556 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     266.167 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala":
[info]   11924547.606 ±(99.9%) 311729.657 ops/s [Average]
[info]   (min, avg, max) = (11834567.031, 11924547.606, 12019768.917), stdev = 80955.202
[info]   CI (99.9%): [11612817.949, 12236277.263] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   2363.899 ±(99.9%) 61.328 MB/sec [Average]
[info]   (min, avg, max) = (2346.293, 2363.899, 2382.556), stdev = 15.927
[info]   CI (99.9%): [2302.571, 2425.227] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   312.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (312.000, 312.000, 312.000), stdev = 0.001
[info]   CI (99.9%): [312.000, 312.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   2293.890 ±(99.9%) 1424.645 MB/sec [Average]
[info]   (min, avg, max) = (2014.254, 2293.890, 2705.521), stdev = 369.976
[info]   CI (99.9%): [869.245, 3718.535] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   302.705 ±(99.9%) 186.163 B/op [Average]
[info]   (min, avg, max) = (266.167, 302.705, 358.096), stdev = 48.346
[info]   CI (99.9%): [116.542, 488.869] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.079 ±(99.9%) 0.164 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.079, 0.146), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.243] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.010 ±(99.9%) 0.022 B/op [Average]
[info]   (min, avg, max) = (0.005, 0.010, 0.019), stdev = 0.006
[info]   CI (99.9%): [≈ 0, 0.032] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.200, 4.000), stdev = 0.837
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala
[info] # Run progress: 71.69% complete, ETA 00:37:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 33279067.968 ops/s
[info] # Warmup Iteration   2: 43805810.012 ops/s
[info] # Warmup Iteration   3: 44873192.152 ops/s
[info] # Warmup Iteration   4: 44843463.682 ops/s
[info] # Warmup Iteration   5: 45586039.722 ops/s
[info] Iteration   1: 45586517.472 ops/s
[info]                  ·gc.alloc.rate:                   926.925 MB/sec
[info]                  ·gc.alloc.rate.norm:              32.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.362 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46.515 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.004 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 45668507.974 ops/s
[info]                  ·gc.alloc.rate:               928.660 MB/sec
[info]                  ·gc.alloc.rate.norm:          32.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.561 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 23.210 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 45584248.889 ops/s
[info]                  ·gc.alloc.rate:                   926.839 MB/sec
[info]                  ·gc.alloc.rate.norm:              32.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.974 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46.506 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 45556342.450 ops/s
[info]                  ·gc.alloc.rate:               926.235 MB/sec
[info]                  ·gc.alloc.rate.norm:          32.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.471 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 23.267 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 45555397.245 ops/s
[info]                  ·gc.alloc.rate:                   926.217 MB/sec
[info]                  ·gc.alloc.rate.norm:              32.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.461 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23.267 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.001 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala":
[info]   45590202.806 ±(99.9%) 177909.344 ops/s [Average]
[info]   (min, avg, max) = (45555397.245, 45590202.806, 45668507.974), stdev = 46202.492
[info]   CI (99.9%): [45412293.462, 45768112.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   926.975 ±(99.9%) 3.843 MB/sec [Average]
[info]   (min, avg, max) = (926.217, 926.975, 928.660), stdev = 0.998
[info]   CI (99.9%): [923.132, 930.818] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   32.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (32.000, 32.000, 32.000), stdev = 0.001
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   942.966 ±(99.9%) 1420.828 MB/sec [Average]
[info]   (min, avg, max) = (673.461, 942.966, 1347.362), stdev = 368.985
[info]   CI (99.9%): [≈ 0, 2363.794] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   32.553 ±(99.9%) 49.061 B/op [Average]
[info]   (min, avg, max) = (23.210, 32.553, 46.515), stdev = 12.741
[info]   CI (99.9%): [≈ 0, 81.614] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.204 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.125), stdev = 0.053
[info]   CI (99.9%): [≈ 0, 0.246] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.001 ±(99.9%) 0.007 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.004), stdev = 0.002
[info]   CI (99.9%): [≈ 0, 0.008] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 71.89% complete, ETA 00:37:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 43226080.290 ops/s
[info] # Warmup Iteration   2: 58798760.354 ops/s
[info] # Warmup Iteration   3: 59931353.040 ops/s
[info] # Warmup Iteration   4: 60026849.571 ops/s
[info] # Warmup Iteration   5: 60084619.232 ops/s
[info] Iteration   1: 60020903.858 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 59919712.033 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 59918993.236 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 59755944.314 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 59875970.066 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc":
[info]   59898304.701 ±(99.9%) 368748.961 ops/s [Average]
[info]   (min, avg, max) = (59755944.314, 59898304.701, 60020903.858), stdev = 95762.934
[info]   CI (99.9%): [59529555.740, 60267053.663] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁵ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala
[info] # Run progress: 72.09% complete, ETA 00:37:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 13143891.133 ops/s
[info] # Warmup Iteration   2: 13147156.382 ops/s
[info] # Warmup Iteration   3: 13512266.621 ops/s
[info] # Warmup Iteration   4: 13421338.255 ops/s
[info] # Warmup Iteration   5: 13549826.590 ops/s
[info] Iteration   1: 13559268.281 ops/s
[info]                  ·gc.alloc.rate:                   2274.500 MB/sec
[info]                  ·gc.alloc.rate.norm:              264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2709.199 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     314.455 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 13506830.404 ops/s
[info]                  ·gc.alloc.rate:                   2265.648 MB/sec
[info]                  ·gc.alloc.rate.norm:              264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2033.809 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     236.985 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 13585946.738 ops/s
[info]                  ·gc.alloc.rate:                   2278.888 MB/sec
[info]                  ·gc.alloc.rate.norm:              264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2035.727 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     235.831 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 13559555.742 ops/s
[info]                  ·gc.alloc.rate:                   2274.497 MB/sec
[info]                  ·gc.alloc.rate.norm:              264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2716.479 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     315.301 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 13520081.062 ops/s
[info]                  ·gc.alloc.rate:               2267.828 MB/sec
[info]                  ·gc.alloc.rate.norm:          264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2039.005 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 237.362 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala":
[info]   13546336.445 ±(99.9%) 124194.907 ops/s [Average]
[info]   (min, avg, max) = (13506830.404, 13546336.445, 13585946.738), stdev = 32253.023
[info]   CI (99.9%): [13422141.538, 13670531.353] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:·gc.alloc.rate":
[info]   2272.272 ±(99.9%) 20.853 MB/sec [Average]
[info]   (min, avg, max) = (2265.648, 2272.272, 2278.888), stdev = 5.416
[info]   CI (99.9%): [2251.419, 2293.126] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:·gc.alloc.rate.norm":
[info]   264.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (264.000, 264.000, 264.000), stdev = 0.001
[info]   CI (99.9%): [264.000, 264.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:·gc.churn.PS_Eden_Space":
[info]   2306.844 ±(99.9%) 1427.183 MB/sec [Average]
[info]   (min, avg, max) = (2033.809, 2306.844, 2716.479), stdev = 370.635
[info]   CI (99.9%): [879.661, 3734.027] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:·gc.churn.PS_Eden_Space.norm":
[info]   267.987 ±(99.9%) 164.847 B/op [Average]
[info]   (min, avg, max) = (235.831, 267.987, 315.301), stdev = 42.810
[info]   CI (99.9%): [103.140, 432.834] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.058, 0.083), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.190] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.007 ±(99.9%) 0.015 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.007, 0.010), stdev = 0.004
[info]   CI (99.9%): [≈ 0, 0.022] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson
[info] # Run progress: 72.29% complete, ETA 00:37:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1544677.031 ops/s
[info] # Warmup Iteration   2: 2259139.670 ops/s
[info] # Warmup Iteration   3: 2288259.963 ops/s
[info] # Warmup Iteration   4: 2290360.114 ops/s
[info] # Warmup Iteration   5: 2289514.774 ops/s
[info] Iteration   1: 2281275.582 ops/s
[info]                  ·gc.alloc.rate:                   1971.744 MB/sec
[info]                  ·gc.alloc.rate.norm:              1360.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2019.320 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1392.816 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.086 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 2259951.015 ops/s
[info]                  ·gc.alloc.rate:                   1953.622 MB/sec
[info]                  ·gc.alloc.rate.norm:              1360.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2023.935 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1408.948 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.087 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 2242138.879 ops/s
[info]                  ·gc.alloc.rate:                   1937.577 MB/sec
[info]                  ·gc.alloc.rate.norm:              1360.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.296 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     947.784 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.044 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 2292926.809 ops/s
[info]                  ·gc.alloc.rate:                   1981.323 MB/sec
[info]                  ·gc.alloc.rate.norm:              1360.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2027.694 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1391.830 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 2293472.730 ops/s
[info]                  ·gc.alloc.rate:                   1981.704 MB/sec
[info]                  ·gc.alloc.rate.norm:              1360.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2030.982 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1393.818 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.043 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson":
[info]   2273953.003 ±(99.9%) 86164.113 ops/s [Average]
[info]   (min, avg, max) = (2242138.879, 2273953.003, 2293472.730), stdev = 22376.546
[info]   CI (99.9%): [2187788.890, 2360117.116] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1965.194 ±(99.9%) 73.875 MB/sec [Average]
[info]   (min, avg, max) = (1937.577, 1965.194, 1981.704), stdev = 19.185
[info]   CI (99.9%): [1891.319, 2039.069] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   1360.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1360.000, 1360.000, 1360.000), stdev = 0.001
[info]   CI (99.9%): [1360.000, 1360.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1890.445 ±(99.9%) 1162.832 MB/sec [Average]
[info]   (min, avg, max) = (1350.296, 1890.445, 2030.982), stdev = 301.984
[info]   CI (99.9%): [727.614, 3053.277] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   1307.039 ±(99.9%) 773.797 B/op [Average]
[info]   (min, avg, max) = (947.784, 1307.039, 1408.948), stdev = 200.953
[info]   CI (99.9%): [533.243, 2080.836] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.083 ±(99.9%) 0.150 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.083, 0.125), stdev = 0.039
[info]   CI (99.9%): [≈ 0, 0.233] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.058 ±(99.9%) 0.104 B/op [Average]
[info]   (min, avg, max) = (0.029, 0.058, 0.087), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.162] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeUPickle
[info] # Run progress: 72.49% complete, ETA 00:36:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6092119.178 ops/s
[info] # Warmup Iteration   2: 7769580.319 ops/s
[info] # Warmup Iteration   3: 7953498.114 ops/s
[info] # Warmup Iteration   4: 7949917.196 ops/s
[info] # Warmup Iteration   5: 7975431.468 ops/s
[info] Iteration   1: 7861620.843 ops/s
[info]                  ·gc.alloc.rate:                   2438.738 MB/sec
[info]                  ·gc.alloc.rate.norm:              488.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2705.180 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     541.316 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 7969108.324 ops/s
[info]                  ·gc.alloc.rate:                   2471.043 MB/sec
[info]                  ·gc.alloc.rate.norm:              488.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2708.553 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     534.905 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 7970637.222 ops/s
[info]                  ·gc.alloc.rate:                   2471.469 MB/sec
[info]                  ·gc.alloc.rate.norm:              488.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2034.722 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     401.763 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 7971774.519 ops/s
[info]                  ·gc.alloc.rate:                   2471.770 MB/sec
[info]                  ·gc.alloc.rate.norm:              488.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2715.522 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     536.124 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 7746072.389 ops/s
[info]                  ·gc.alloc.rate:                   2401.752 MB/sec
[info]                  ·gc.alloc.rate.norm:              488.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2718.167 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     552.291 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.004 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeUPickle":
[info]   7903842.660 ±(99.9%) 385112.514 ops/s [Average]
[info]   (min, avg, max) = (7746072.389, 7903842.660, 7971774.519), stdev = 100012.497
[info]   CI (99.9%): [7518730.146, 8288955.173] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeUPickle:·gc.alloc.rate":
[info]   2450.954 ±(99.9%) 119.119 MB/sec [Average]
[info]   (min, avg, max) = (2401.752, 2450.954, 2471.770), stdev = 30.935
[info]   CI (99.9%): [2331.836, 2570.073] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeUPickle:·gc.alloc.rate.norm":
[info]   488.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (488.000, 488.000, 488.000), stdev = 0.001
[info]   CI (99.9%): [488.000, 488.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeUPickle:·gc.churn.PS_Eden_Space":
[info]   2576.429 ±(99.9%) 1166.238 MB/sec [Average]
[info]   (min, avg, max) = (2034.722, 2576.429, 2718.167), stdev = 302.868
[info]   CI (99.9%): [1410.191, 3742.667] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   513.280 ±(99.9%) 241.499 B/op [Average]
[info]   (min, avg, max) = (401.763, 513.280, 552.291), stdev = 62.717
[info]   CI (99.9%): [271.781, 754.779] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space":
[info]   0.071 ±(99.9%) 0.185 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.071, 0.146), stdev = 0.048
[info]   CI (99.9%): [≈ 0, 0.255] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   0.014 ±(99.9%) 0.036 B/op [Average]
[info]   (min, avg, max) = (0.004, 0.014, 0.029), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.050] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeUPickle:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeUPickle:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 72.69% complete, ETA 00:36:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 148826.075 ops/s
[info] # Warmup Iteration   2: 163375.799 ops/s
[info] # Warmup Iteration   3: 166386.304 ops/s
[info] # Warmup Iteration   4: 164181.317 ops/s
[info] # Warmup Iteration   5: 166763.041 ops/s
[info] Iteration   1: 163500.715 ops/s
[info]                  ·gc.alloc.rate:                   2999.378 MB/sec
[info]                  ·gc.alloc.rate.norm:              28872.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3385.755 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     32591.257 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.802 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 164522.334 ops/s
[info]                  ·gc.alloc.rate:                   3018.118 MB/sec
[info]                  ·gc.alloc.rate.norm:              28872.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2713.944 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25962.202 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.593 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 166622.804 ops/s
[info]                  ·gc.alloc.rate:                   3057.922 MB/sec
[info]                  ·gc.alloc.rate.norm:              28872.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2717.669 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25659.431 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.787 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 164373.016 ops/s
[info]                  ·gc.alloc.rate:                   3016.509 MB/sec
[info]                  ·gc.alloc.rate.norm:              28872.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3401.234 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     32554.330 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.997 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 162987.869 ops/s
[info]                  ·gc.alloc.rate:                   2991.197 MB/sec
[info]                  ·gc.alloc.rate.norm:              28872.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2723.078 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     26284.034 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.005 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala":
[info]   164401.348 ±(99.9%) 5363.109 ops/s [Average]
[info]   (min, avg, max) = (162987.869, 164401.348, 166622.804), stdev = 1392.782
[info]   CI (99.9%): [159038.239, 169764.457] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   3016.625 ±(99.9%) 99.144 MB/sec [Average]
[info]   (min, avg, max) = (2991.197, 3016.625, 3057.922), stdev = 25.747
[info]   CI (99.9%): [2917.481, 3115.769] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   28872.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (28872.003, 28872.003, 28872.003), stdev = 0.001
[info]   CI (99.9%): [28872.003, 28872.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   2988.336 ±(99.9%) 1424.400 MB/sec [Average]
[info]   (min, avg, max) = (2713.944, 2988.336, 3401.234), stdev = 369.912
[info]   CI (99.9%): [1563.936, 4412.735] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   28610.251 ±(99.9%) 13954.926 B/op [Average]
[info]   (min, avg, max) = (25659.431, 28610.251, 32591.257), stdev = 3624.050
[info]   CI (99.9%): [14655.325, 42565.177] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.108 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (0.083, 0.108, 0.167), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.240] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.037 ±(99.9%) 1.263 B/op [Average]
[info]   (min, avg, max) = (0.787, 1.037, 1.593), stdev = 0.328
[info]   CI (99.9%): [≈ 0, 2.299] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 72.89% complete, ETA 00:36:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7603.444 ops/s
[info] # Warmup Iteration   2: 16981.529 ops/s
[info] # Warmup Iteration   3: 16621.937 ops/s
[info] # Warmup Iteration   4: 17002.238 ops/s
[info] # Warmup Iteration   5: 16876.402 ops/s
[info] Iteration   1: 16509.512 ops/s
[info]                  ·gc.alloc.rate:                   1284.193 MB/sec
[info]                  ·gc.alloc.rate.norm:              122416.028 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.614 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     127127.061 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.969 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 17005.006 ops/s
[info]                  ·gc.alloc.rate:                   1322.982 MB/sec
[info]                  ·gc.alloc.rate.norm:              122416.035 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1335.242 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     123550.465 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.780 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 16879.848 ops/s
[info]                  ·gc.alloc.rate:               1313.134 MB/sec
[info]                  ·gc.alloc.rate.norm:          122416.026 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1337.114 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 124651.545 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 17043.355 ops/s
[info]                  ·gc.alloc.rate:                   1325.589 MB/sec
[info]                  ·gc.alloc.rate.norm:              122416.025 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.553 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     123705.640 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.767 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 17047.500 ops/s
[info]                  ·gc.alloc.rate:               1325.987 MB/sec
[info]                  ·gc.alloc.rate.norm:          122416.025 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1341.483 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 123846.591 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson":
[info]   16897.044 ±(99.9%) 874.224 ops/s [Average]
[info]   (min, avg, max) = (16509.512, 16897.044, 17047.500), stdev = 227.033
[info]   CI (99.9%): [16022.820, 17771.269] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1314.377 ±(99.9%) 67.993 MB/sec [Average]
[info]   (min, avg, max) = (1284.193, 1314.377, 1325.987), stdev = 17.658
[info]   CI (99.9%): [1246.384, 1382.370] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   122416.028 ±(99.9%) 0.016 B/op [Average]
[info]   (min, avg, max) = (122416.025, 122416.028, 122416.035), stdev = 0.004
[info]   CI (99.9%): [122416.012, 122416.043] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1337.401 ±(99.9%) 12.235 MB/sec [Average]
[info]   (min, avg, max) = (1333.614, 1337.401, 1341.483), stdev = 3.177
[info]   CI (99.9%): [1325.167, 1349.636] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   124576.260 ±(99.9%) 5729.217 B/op [Average]
[info]   (min, avg, max) = (123550.465, 124576.260, 127127.061), stdev = 1487.860
[info]   CI (99.9%): [118847.043, 130305.478] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.062), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   3.103 ±(99.9%) 11.271 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.103, 5.780), stdev = 2.927
[info]   CI (99.9%): [≈ 0, 14.374] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 3.000), stdev = 0.707
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 73.09% complete, ETA 00:35:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 82223.361 ops/s
[info] # Warmup Iteration   2: 132684.108 ops/s
[info] # Warmup Iteration   3: 134631.685 ops/s
[info] # Warmup Iteration   4: 134940.415 ops/s
[info] # Warmup Iteration   5: 135034.572 ops/s
[info] Iteration   1: 134764.002 ops/s
[info]                  ·gc.alloc.rate:                   1304.818 MB/sec
[info]                  ·gc.alloc.rate.norm:              15240.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.168 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15582.809 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.972 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 130867.616 ops/s
[info]                  ·gc.alloc.rate:                   1267.355 MB/sec
[info]                  ·gc.alloc.rate.norm:              15240.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1335.798 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16063.040 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.001 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 133043.685 ops/s
[info]                  ·gc.alloc.rate:                   1288.282 MB/sec
[info]                  ·gc.alloc.rate.norm:              15240.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.649 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15823.994 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.739 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 132083.148 ops/s
[info]                  ·gc.alloc.rate:                   1278.948 MB/sec
[info]                  ·gc.alloc.rate.norm:              15240.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.595 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15962.683 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.992 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 134981.254 ops/s
[info]                  ·gc.alloc.rate:                   1307.557 MB/sec
[info]                  ·gc.alloc.rate.norm:              15240.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.708 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15649.693 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.243 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala":
[info]   133147.941 ±(99.9%) 6757.092 ops/s [Average]
[info]   (min, avg, max) = (130867.616, 133147.941, 134981.254), stdev = 1754.795
[info]   CI (99.9%): [126390.849, 139905.033] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1289.392 ±(99.9%) 65.685 MB/sec [Average]
[info]   (min, avg, max) = (1267.355, 1289.392, 1307.557), stdev = 17.058
[info]   CI (99.9%): [1223.707, 1355.077] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   15240.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (15240.003, 15240.003, 15240.003), stdev = 0.001
[info]   CI (99.9%): [15240.003, 15240.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1337.984 ±(99.9%) 12.823 MB/sec [Average]
[info]   (min, avg, max) = (1334.168, 1337.984, 1342.708), stdev = 3.330
[info]   CI (99.9%): [1325.160, 1350.807] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   15816.443 ±(99.9%) 781.224 B/op [Average]
[info]   (min, avg, max) = (15582.809, 15816.443, 16063.040), stdev = 202.881
[info]   CI (99.9%): [15035.219, 16597.668] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.067, 0.083), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.171] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.790 ±(99.9%) 1.249 B/op [Average]
[info]   (min, avg, max) = (0.243, 0.790, 1.001), stdev = 0.324
[info]   CI (99.9%): [≈ 0, 2.039] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 73.29% complete, ETA 00:35:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 483894.692 ops/s
[info] # Warmup Iteration   2: 508189.229 ops/s
[info] # Warmup Iteration   3: 517638.922 ops/s
[info] # Warmup Iteration   4: 518210.245 ops/s
[info] # Warmup Iteration   5: 519859.427 ops/s
[info] Iteration   1: 516372.134 ops/s
[info]                  ·gc.alloc.rate:                   1068.651 MB/sec
[info]                  ·gc.alloc.rate.norm:              3256.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.045 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2050.657 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.063 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 521002.943 ops/s
[info]                  ·gc.alloc.rate:                   1077.910 MB/sec
[info]                  ·gc.alloc.rate.norm:              3256.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.693 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4064.880 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.189 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 519505.618 ops/s
[info]                  ·gc.alloc.rate:                   1074.779 MB/sec
[info]                  ·gc.alloc.rate.norm:              3256.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.885 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4080.337 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.126 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 521078.430 ops/s
[info]                  ·gc.alloc.rate:               1077.980 MB/sec
[info]                  ·gc.alloc.rate.norm:          3256.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.783 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2035.138 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 521165.353 ops/s
[info]                  ·gc.alloc.rate:                   1078.138 MB/sec
[info]                  ·gc.alloc.rate.norm:              3256.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.195 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4071.577 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.063 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala":
[info]   519824.896 ±(99.9%) 7886.650 ops/s [Average]
[info]   (min, avg, max) = (516372.134, 519824.896, 521165.353), stdev = 2048.138
[info]   CI (99.9%): [511938.246, 527711.546] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1075.492 ±(99.9%) 15.683 MB/sec [Average]
[info]   (min, avg, max) = (1068.651, 1075.492, 1078.138), stdev = 4.073
[info]   CI (99.9%): [1059.809, 1091.175] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   3256.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3256.001, 3256.001, 3256.001), stdev = 0.001
[info]   CI (99.9%): [3256.001, 3256.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1077.520 ±(99.9%) 1420.494 MB/sec [Average]
[info]   (min, avg, max) = (673.045, 1077.520, 1348.195), stdev = 368.898
[info]   CI (99.9%): [≈ 0, 2498.014] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   3260.518 ±(99.9%) 4280.211 B/op [Average]
[info]   (min, avg, max) = (2035.138, 3260.518, 4080.337), stdev = 1111.557
[info]   CI (99.9%): [≈ 0, 7540.729] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.088 ±(99.9%) 0.276 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.088, 0.189), stdev = 0.072
[info]   CI (99.9%): [≈ 0, 0.364] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 73.49% complete, ETA 00:35:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 511270.332 ops/s
[info] # Warmup Iteration   2: 548668.199 ops/s
[info] # Warmup Iteration   3: 550928.225 ops/s
[info] # Warmup Iteration   4: 546999.260 ops/s
[info] # Warmup Iteration   5: 549694.937 ops/s
[info] Iteration   1: 548676.889 ops/s
[info]                  ·gc.alloc.rate:               535.496 MB/sec
[info]                  ·gc.alloc.rate.norm:          1536.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.630 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1467.542 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 549184.048 ops/s
[info]                  ·gc.alloc.rate:                   535.969 MB/sec
[info]                  ·gc.alloc.rate.norm:              1536.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.151 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1929.144 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.564 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.481 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 548130.421 ops/s
[info]                  ·gc.alloc.rate:      534.953 MB/sec
[info]                  ·gc.alloc.rate.norm: 1536.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 547034.533 ops/s
[info]                  ·gc.alloc.rate:                   533.855 MB/sec
[info]                  ·gc.alloc.rate.norm:              1536.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.123 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1936.700 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.120 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 546145.815 ops/s
[info]                  ·gc.alloc.rate:               533.136 MB/sec
[info]                  ·gc.alloc.rate.norm:          1536.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.976 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1938.889 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   547834.341 ±(99.9%) 4759.118 ops/s [Average]
[info]   (min, avg, max) = (546145.815, 547834.341, 549184.048), stdev = 1235.928
[info]   CI (99.9%): [543075.223, 552593.459] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   534.682 ±(99.9%) 4.502 MB/sec [Average]
[info]   (min, avg, max) = (533.136, 534.682, 535.969), stdev = 1.169
[info]   CI (99.9%): [530.180, 539.184] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   1536.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1536.001, 1536.001, 1536.001), stdev = 0.001
[info]   CI (99.9%): [1536.001, 1536.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   506.176 ±(99.9%) 1122.346 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 506.176, 673.151), stdev = 291.470
[info]   CI (99.9%): [≈ 0, 1628.522] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   1454.455 ±(99.9%) 3226.380 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1454.455, 1938.889), stdev = 837.881
[info]   CI (99.9%): [≈ 0, 4680.835] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space":
[info]   0.321 ±(99.9%) 2.675 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.321, 1.564), stdev = 0.695
[info]   CI (99.9%): [≈ 0, 2.997] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   0.920 ±(99.9%) 7.667 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.920, 4.481), stdev = 1.991
[info]   CI (99.9%): [≈ 0, 8.587] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 0.837
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 73.69% complete, ETA 00:35:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 30648.301 ops/s
[info] # Warmup Iteration   2: 55402.171 ops/s
[info] # Warmup Iteration   3: 55627.765 ops/s
[info] # Warmup Iteration   4: 55317.843 ops/s
[info] # Warmup Iteration   5: 55494.294 ops/s
[info] Iteration   1: 55467.241 ops/s
[info]                  ·gc.alloc.rate:                   1234.141 MB/sec
[info]                  ·gc.alloc.rate.norm:              35016.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.005 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     37849.441 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.363 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 55527.575 ops/s
[info]                  ·gc.alloc.rate:                   1235.459 MB/sec
[info]                  ·gc.alloc.rate.norm:              35016.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.939 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     37835.508 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.590 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 55400.541 ops/s
[info]                  ·gc.alloc.rate:                   1232.630 MB/sec
[info]                  ·gc.alloc.rate.norm:              35016.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.291 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     37960.756 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.365 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 55437.089 ops/s
[info]                  ·gc.alloc.rate:               1233.394 MB/sec
[info]                  ·gc.alloc.rate.norm:          35016.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1338.274 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 37993.529 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 55476.508 ops/s
[info]                  ·gc.alloc.rate:                   1234.209 MB/sec
[info]                  ·gc.alloc.rate.norm:              35016.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.856 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     38041.731 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.181 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson":
[info]   55461.791 ±(99.9%) 181.997 ops/s [Average]
[info]   (min, avg, max) = (55400.541, 55461.791, 55527.575), stdev = 47.264
[info]   CI (99.9%): [55279.793, 55643.788] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1233.967 ±(99.9%) 4.053 MB/sec [Average]
[info]   (min, avg, max) = (1232.630, 1233.967, 1235.459), stdev = 1.052
[info]   CI (99.9%): [1229.914, 1238.019] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   35016.008 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (35016.008, 35016.008, 35016.008), stdev = 0.001
[info]   CI (99.9%): [35016.007, 35016.009] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1336.873 ±(99.9%) 10.569 MB/sec [Average]
[info]   (min, avg, max) = (1334.005, 1336.873, 1340.856), stdev = 2.745
[info]   CI (99.9%): [1326.304, 1347.442] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   37936.193 ±(99.9%) 348.118 B/op [Average]
[info]   (min, avg, max) = (37835.508, 37936.193, 38041.731), stdev = 90.405
[info]   CI (99.9%): [37588.075, 38284.311] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.083), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.300 ±(99.9%) 4.072 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.300, 2.365), stdev = 1.057
[info]   CI (99.9%): [≈ 0, 5.372] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 73.90% complete, ETA 00:34:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 284382.201 ops/s
[info] # Warmup Iteration   2: 335899.538 ops/s
[info] # Warmup Iteration   3: 339712.455 ops/s
[info] # Warmup Iteration   4: 334280.361 ops/s
[info] # Warmup Iteration   5: 337546.323 ops/s
[info] Iteration   1: 337447.331 ops/s
[info]                  ·gc.alloc.rate:                   2449.427 MB/sec
[info]                  ·gc.alloc.rate.norm:              11424.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2025.649 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9447.526 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.291 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 338021.306 ops/s
[info]                  ·gc.alloc.rate:                   2453.568 MB/sec
[info]                  ·gc.alloc.rate.norm:              11424.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2705.892 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12598.842 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.388 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 339793.647 ops/s
[info]                  ·gc.alloc.rate:                   2466.308 MB/sec
[info]                  ·gc.alloc.rate.norm:              11424.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2711.081 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12557.796 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.289 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 339426.698 ops/s
[info]                  ·gc.alloc.rate:                   2464.122 MB/sec
[info]                  ·gc.alloc.rate.norm:              11424.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2036.054 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9439.423 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.386 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 339885.828 ops/s
[info]                  ·gc.alloc.rate:                   2467.041 MB/sec
[info]                  ·gc.alloc.rate.norm:              11424.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2717.268 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12582.715 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.482 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce":
[info]   338914.962 ±(99.9%) 4274.520 ops/s [Average]
[info]   (min, avg, max) = (337447.331, 338914.962, 339885.828), stdev = 1110.079
[info]   CI (99.9%): [334640.442, 343189.482] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:·gc.alloc.rate":
[info]   2460.093 ±(99.9%) 31.013 MB/sec [Average]
[info]   (min, avg, max) = (2449.427, 2460.093, 2467.041), stdev = 8.054
[info]   CI (99.9%): [2429.080, 2491.106] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   11424.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (11424.001, 11424.001, 11424.001), stdev = 0.001
[info]   CI (99.9%): [11424.001, 11424.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2439.189 ±(99.9%) 1435.516 MB/sec [Average]
[info]   (min, avg, max) = (2025.649, 2439.189, 2717.268), stdev = 372.799
[info]   CI (99.9%): [1003.673, 3874.705] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   11325.261 ±(99.9%) 6614.991 B/op [Average]
[info]   (min, avg, max) = (9439.423, 11325.261, 12598.842), stdev = 1717.892
[info]   CI (99.9%): [4710.270, 17940.251] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.079 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 0.079, 0.104), stdev = 0.017
[info]   CI (99.9%): [0.012, 0.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.367 ±(99.9%) 0.309 B/op [Average]
[info]   (min, avg, max) = (0.289, 0.367, 0.482), stdev = 0.080
[info]   CI (99.9%): [0.058, 0.676] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 74.10% complete, ETA 00:34:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 197006.160 ops/s
[info] # Warmup Iteration   2: 348206.407 ops/s
[info] # Warmup Iteration   3: 347861.607 ops/s
[info] # Warmup Iteration   4: 349384.716 ops/s
[info] # Warmup Iteration   5: 350825.667 ops/s
[info] Iteration   1: 346991.774 ops/s
[info]                  ·gc.alloc.rate:                   919.320 MB/sec
[info]                  ·gc.alloc.rate.norm:              4168.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.572 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6050.662 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.378 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 351107.810 ops/s
[info]                  ·gc.alloc.rate:               930.225 MB/sec
[info]                  ·gc.alloc.rate.norm:          4168.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      667.097 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2989.021 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 336615.755 ops/s
[info]                  ·gc.alloc.rate:                   891.454 MB/sec
[info]                  ·gc.alloc.rate.norm:              4168.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.963 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6241.635 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.681 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 340935.221 ops/s
[info]                  ·gc.alloc.rate:               903.103 MB/sec
[info]                  ·gc.alloc.rate.norm:          4168.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.280 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3084.246 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 343363.538 ops/s
[info]                  ·gc.alloc.rate:               909.316 MB/sec
[info]                  ·gc.alloc.rate.norm:          4168.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.120 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3062.441 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala":
[info]   343802.819 ±(99.9%) 21405.068 ops/s [Average]
[info]   (min, avg, max) = (336615.755, 343802.819, 351107.810), stdev = 5558.828
[info]   CI (99.9%): [322397.751, 365207.888] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   910.684 ±(99.9%) 57.295 MB/sec [Average]
[info]   (min, avg, max) = (891.454, 910.684, 930.225), stdev = 14.879
[info]   CI (99.9%): [853.389, 967.979] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   4168.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4168.001, 4168.001, 4168.001), stdev = 0.001
[info]   CI (99.9%): [4168.001, 4168.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   934.606 ±(99.9%) 1406.623 MB/sec [Average]
[info]   (min, avg, max) = (667.097, 934.606, 1334.963), stdev = 365.296
[info]   CI (99.9%): [≈ 0, 2341.230] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   4285.601 ±(99.9%) 6546.663 B/op [Average]
[info]   (min, avg, max) = (2989.021, 4285.601, 6241.635), stdev = 1700.147
[info]   CI (99.9%): [≈ 0, 10832.264] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.256 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.146), stdev = 0.066
[info]   CI (99.9%): [≈ 0, 0.302] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.212 ±(99.9%) 1.191 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.212, 0.681), stdev = 0.309
[info]   CI (99.9%): [≈ 0, 1.403] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 74.30% complete, ETA 00:34:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1081456.778 ops/s
[info] # Warmup Iteration   2: 1166981.181 ops/s
[info] # Warmup Iteration   3: 1188941.211 ops/s
[info] # Warmup Iteration   4: 1186729.703 ops/s
[info] # Warmup Iteration   5: 1190424.379 ops/s
[info] Iteration   1: 1187086.750 ops/s
[info]                  ·gc.alloc.rate:                   2317.932 MB/sec
[info]                  ·gc.alloc.rate.norm:              3072.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2026.804 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2686.163 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.055 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 1198210.702 ops/s
[info]                  ·gc.alloc.rate:                   2339.427 MB/sec
[info]                  ·gc.alloc.rate.norm:              3072.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2706.645 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3554.210 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.137 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 1199675.112 ops/s
[info]                  ·gc.alloc.rate:                   2342.524 MB/sec
[info]                  ·gc.alloc.rate.norm:              3072.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2032.848 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2665.890 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.109 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 1193582.375 ops/s
[info]                  ·gc.alloc.rate:                   2330.355 MB/sec
[info]                  ·gc.alloc.rate.norm:              3072.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2714.659 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3578.611 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.055 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 1195957.254 ops/s
[info]                  ·gc.alloc.rate:                   2334.226 MB/sec
[info]                  ·gc.alloc.rate.norm:              3072.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2036.979 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2680.803 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.055 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala":
[info]   1194902.439 ±(99.9%) 19026.937 ops/s [Average]
[info]   (min, avg, max) = (1187086.750, 1194902.439, 1199675.112), stdev = 4941.235
[info]   CI (99.9%): [1175875.502, 1213929.375] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   2332.893 ±(99.9%) 36.909 MB/sec [Average]
[info]   (min, avg, max) = (2317.932, 2332.893, 2342.524), stdev = 9.585
[info]   CI (99.9%): [2295.984, 2369.801] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   3072.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3072.000, 3072.000, 3072.000), stdev = 0.001
[info]   CI (99.9%): [3072.000, 3072.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   2303.587 ±(99.9%) 1431.000 MB/sec [Average]
[info]   (min, avg, max) = (2026.804, 2303.587, 2714.659), stdev = 371.626
[info]   CI (99.9%): [872.587, 3734.588] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   3033.135 ±(99.9%) 1875.050 B/op [Average]
[info]   (min, avg, max) = (2665.890, 3033.135, 3578.611), stdev = 486.945
[info]   CI (99.9%): [1158.085, 4908.185] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.113 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.062, 0.104), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.082 ±(99.9%) 0.148 B/op [Average]
[info]   (min, avg, max) = (0.055, 0.082, 0.137), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.230] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 4.000), stdev = 0.837
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 74.50% complete, ETA 00:34:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 75625.556 ops/s
[info] # Warmup Iteration   2: 111243.622 ops/s
[info] # Warmup Iteration   3: 112125.521 ops/s
[info] # Warmup Iteration   4: 112538.805 ops/s
[info] # Warmup Iteration   5: 113652.966 ops/s
[info] Iteration   1: 112683.054 ops/s
[info]                  ·gc.alloc.rate:                   4079.995 MB/sec
[info]                  ·gc.alloc.rate.norm:              56984.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4066.576 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     56796.587 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.291 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 113939.928 ops/s
[info]                  ·gc.alloc.rate:                   4125.671 MB/sec
[info]                  ·gc.alloc.rate.norm:              56984.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4074.595 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     56278.541 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.438 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 113581.663 ops/s
[info]                  ·gc.alloc.rate:                   4113.519 MB/sec
[info]                  ·gc.alloc.rate.norm:              56984.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4762.349 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     65972.153 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.442 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 114705.307 ops/s
[info]                  ·gc.alloc.rate:                   4154.775 MB/sec
[info]                  ·gc.alloc.rate.norm:              56984.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4086.485 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     56047.384 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.857 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 113454.480 ops/s
[info]                  ·gc.alloc.rate:                   4109.209 MB/sec
[info]                  ·gc.alloc.rate.norm:              56984.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4088.892 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     56702.262 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.155 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson":
[info]   113672.887 ±(99.9%) 2838.133 ops/s [Average]
[info]   (min, avg, max) = (112683.054, 113672.887, 114705.307), stdev = 737.054
[info]   CI (99.9%): [110834.754, 116511.020] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:·gc.alloc.rate":
[info]   4116.634 ±(99.9%) 104.460 MB/sec [Average]
[info]   (min, avg, max) = (4079.995, 4116.634, 4154.775), stdev = 27.128
[info]   CI (99.9%): [4012.174, 4221.093] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   56984.004 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (56984.004, 56984.004, 56984.004), stdev = 0.001
[info]   CI (99.9%): [56984.003, 56984.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   4215.779 ±(99.9%) 1177.048 MB/sec [Average]
[info]   (min, avg, max) = (4066.576, 4215.779, 4762.349), stdev = 305.676
[info]   CI (99.9%): [3038.731, 5392.827] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   58359.385 ±(99.9%) 16429.426 B/op [Average]
[info]   (min, avg, max) = (56047.384, 58359.385, 65972.153), stdev = 4266.670
[info]   CI (99.9%): [41929.959, 74788.812] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.075 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.075, 0.104), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.209] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.037 ±(99.9%) 1.855 B/op [Average]
[info]   (min, avg, max) = (0.291, 1.037, 1.442), stdev = 0.482
[info]   CI (99.9%): [≈ 0, 2.891] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:·gc.count":
[info]   31.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.000, 6.000), stdev = 0.707
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 74.70% complete, ETA 00:33:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 521509.773 ops/s
[info] # Warmup Iteration   2: 582038.472 ops/s
[info] # Warmup Iteration   3: 592648.498 ops/s
[info] # Warmup Iteration   4: 575756.285 ops/s
[info] # Warmup Iteration   5: 582000.694 ops/s
[info] Iteration   1: 588440.476 ops/s
[info]                  ·gc.alloc.rate:                   2569.260 MB/sec
[info]                  ·gc.alloc.rate.norm:              6872.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2029.029 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5427.045 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.111 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 594747.763 ops/s
[info]                  ·gc.alloc.rate:                   2596.892 MB/sec
[info]                  ·gc.alloc.rate.norm:              6872.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2709.509 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7170.014 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.220 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 592544.302 ops/s
[info]                  ·gc.alloc.rate:                   2587.864 MB/sec
[info]                  ·gc.alloc.rate.norm:              6872.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2713.532 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7205.708 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.166 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 593272.676 ops/s
[info]                  ·gc.alloc.rate:                   2590.563 MB/sec
[info]                  ·gc.alloc.rate.norm:              6872.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2716.744 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7206.720 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.110 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 585894.796 ops/s
[info]                  ·gc.alloc.rate:                   2559.382 MB/sec
[info]                  ·gc.alloc.rate.norm:              6872.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2720.504 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7304.618 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.224 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readUPickle":
[info]   590980.003 ±(99.9%) 14175.382 ops/s [Average]
[info]   (min, avg, max) = (585894.796, 590980.003, 594747.763), stdev = 3681.302
[info]   CI (99.9%): [576804.621, 605155.384] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readUPickle:·gc.alloc.rate":
[info]   2580.792 ±(99.9%) 60.764 MB/sec [Average]
[info]   (min, avg, max) = (2559.382, 2580.792, 2596.892), stdev = 15.780
[info]   CI (99.9%): [2520.028, 2641.557] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readUPickle:·gc.alloc.rate.norm":
[info]   6872.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (6872.001, 6872.001, 6872.001), stdev = 0.001
[info]   CI (99.9%): [6872.001, 6872.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readUPickle:·gc.churn.PS_Eden_Space":
[info]   2577.864 ±(99.9%) 1181.511 MB/sec [Average]
[info]   (min, avg, max) = (2029.029, 2577.864, 2720.504), stdev = 306.835
[info]   CI (99.9%): [1396.352, 3759.375] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   6862.821 ±(99.9%) 3096.624 B/op [Average]
[info]   (min, avg, max) = (5427.045, 6862.821, 7304.618), stdev = 804.183
[info]   CI (99.9%): [3766.197, 9959.445] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readUPickle:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.062, 0.083), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.143] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   0.166 ±(99.9%) 0.214 B/op [Average]
[info]   (min, avg, max) = (0.110, 0.166, 0.224), stdev = 0.056
[info]   CI (99.9%): [≈ 0, 0.380] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readUPickle:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readUPickle:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.200, 4.000), stdev = 0.837
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 74.90% complete, ETA 00:33:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 273724.200 ops/s
[info] # Warmup Iteration   2: 376253.658 ops/s
[info] # Warmup Iteration   3: 366473.264 ops/s
[info] # Warmup Iteration   4: 370919.868 ops/s
[info] # Warmup Iteration   5: 372870.728 ops/s
[info] Iteration   1: 371932.794 ops/s
[info]                  ·gc.alloc.rate:                   1262.887 MB/sec
[info]                  ·gc.alloc.rate.norm:              5344.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.882 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5674.042 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.440 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 362813.742 ops/s
[info]                  ·gc.alloc.rate:                   1231.902 MB/sec
[info]                  ·gc.alloc.rate.norm:              5344.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.562 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5819.707 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.361 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 366453.643 ops/s
[info]                  ·gc.alloc.rate:                   1244.267 MB/sec
[info]                  ·gc.alloc.rate.norm:              5344.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.595 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5770.603 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.268 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 374310.810 ops/s
[info]                  ·gc.alloc.rate:               1270.995 MB/sec
[info]                  ·gc.alloc.rate.norm:          5344.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.488 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2827.532 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 374676.695 ops/s
[info]                  ·gc.alloc.rate:                   1272.633 MB/sec
[info]                  ·gc.alloc.rate.norm:              5344.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.079 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5652.414 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.175 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce":
[info]   370037.537 ±(99.9%) 20045.751 ops/s [Average]
[info]   (min, avg, max) = (362813.742, 370037.537, 374676.695), stdev = 5205.818
[info]   CI (99.9%): [349991.786, 390083.288] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:·gc.alloc.rate":
[info]   1256.537 ±(99.9%) 68.502 MB/sec [Average]
[info]   (min, avg, max) = (1231.902, 1256.537, 1272.633), stdev = 17.790
[info]   CI (99.9%): [1188.035, 1325.038] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   5344.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5344.001, 5344.001, 5344.001), stdev = 0.001
[info]   CI (99.9%): [5344.001, 5344.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1208.921 ±(99.9%) 1154.738 MB/sec [Average]
[info]   (min, avg, max) = (672.488, 1208.921, 1346.079), stdev = 299.882
[info]   CI (99.9%): [54.183, 2363.659] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5148.860 ±(99.9%) 5003.818 B/op [Average]
[info]   (min, avg, max) = (2827.532, 5148.860, 5819.707), stdev = 1299.476
[info]   CI (99.9%): [145.042, 10152.677] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.154 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.058, 0.104), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.212] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.249 ±(99.9%) 0.659 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.249, 0.440), stdev = 0.171
[info]   CI (99.9%): [≈ 0, 0.908] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 75.10% complete, ETA 00:33:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 459377.830 ops/s
[info] # Warmup Iteration   2: 731850.455 ops/s
[info] # Warmup Iteration   3: 736945.023 ops/s
[info] # Warmup Iteration   4: 727504.239 ops/s
[info] # Warmup Iteration   5: 734432.370 ops/s
[info] Iteration   1: 732465.269 ops/s
[info]                  ·gc.alloc.rate:                   543.601 MB/sec
[info]                  ·gc.alloc.rate.norm:              1168.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.607 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1099.258 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.027 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.057 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 742024.657 ops/s
[info]                  ·gc.alloc.rate:      550.692 MB/sec
[info]                  ·gc.alloc.rate.norm: 1168.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 738795.503 ops/s
[info]                  ·gc.alloc.rate:                   548.390 MB/sec
[info]                  ·gc.alloc.rate.norm:              1168.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.261 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1421.181 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.276 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.848 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 739380.534 ops/s
[info]                  ·gc.alloc.rate:                   548.697 MB/sec
[info]                  ·gc.alloc.rate.norm:              1168.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.122 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1420.089 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.133 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   5: 742400.966 ops/s
[info]                  ·gc.alloc.rate:                   551.197 MB/sec
[info]                  ·gc.alloc.rate.norm:              1168.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.088 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1413.579 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.044 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala":
[info]   739013.386 ±(99.9%) 15354.796 ops/s [Average]
[info]   (min, avg, max) = (732465.269, 739013.386, 742400.966), stdev = 3987.592
[info]   CI (99.9%): [723658.590, 754368.182] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   548.515 ±(99.9%) 11.572 MB/sec [Average]
[info]   (min, avg, max) = (543.601, 548.515, 551.197), stdev = 3.005
[info]   CI (99.9%): [536.943, 560.087] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1168.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1168.001, 1168.001, 1168.001), stdev = 0.001
[info]   CI (99.9%): [1168.001, 1168.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   502.616 ±(99.9%) 1112.572 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 502.616, 667.261), stdev = 288.931
[info]   CI (99.9%): [≈ 0, 1615.188] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1070.821 ±(99.9%) 2365.632 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1070.821, 1421.181), stdev = 614.347
[info]   CI (99.9%): [≈ 0, 3436.453] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.477 ±(99.9%) 3.873 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.477, 2.276), stdev = 1.006
[info]   CI (99.9%): [≈ 0, 4.351] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.016 ±(99.9%) 8.250 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.016, 4.848), stdev = 2.142
[info]   CI (99.9%): [≈ 0, 9.266] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 3.000), stdev = 1.517
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 75.30% complete, ETA 00:32:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2441889.109 ops/s
[info] # Warmup Iteration   2: 2575126.408 ops/s
[info] # Warmup Iteration   3: 2011262.854 ops/s
[info] # Warmup Iteration   4: 2080407.285 ops/s
[info] # Warmup Iteration   5: 2076970.560 ops/s
[info] Iteration   1: 2083624.392 ops/s
[info]                  ·gc.alloc.rate:                   963.782 MB/sec
[info]                  ·gc.alloc.rate.norm:              728.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.799 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     508.204 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.047 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   2: 2085193.810 ops/s
[info]                  ·gc.alloc.rate:                   964.524 MB/sec
[info]                  ·gc.alloc.rate.norm:              728.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.296 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1016.153 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.110 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 2083757.826 ops/s
[info]                  ·gc.alloc.rate:               964.127 MB/sec
[info]                  ·gc.alloc.rate.norm:          728.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.665 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 508.676 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 2087826.344 ops/s
[info]                  ·gc.alloc.rate:                   965.842 MB/sec
[info]                  ·gc.alloc.rate.norm:              728.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.527 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     507.669 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 2078206.809 ops/s
[info]                  ·gc.alloc.rate:                   961.428 MB/sec
[info]                  ·gc.alloc.rate.norm:              728.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.817 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1020.577 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala":
[info]   2083721.836 ±(99.9%) 13537.630 ops/s [Average]
[info]   (min, avg, max) = (2078206.809, 2083721.836, 2087826.344), stdev = 3515.680
[info]   CI (99.9%): [2070184.206, 2097259.467] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   963.941 ±(99.9%) 6.188 MB/sec [Average]
[info]   (min, avg, max) = (961.428, 963.941, 965.842), stdev = 1.607
[info]   CI (99.9%): [957.752, 970.129] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   728.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (728.000, 728.000, 728.000), stdev = 0.001
[info]   CI (99.9%): [728.000, 728.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   942.821 ±(99.9%) 1420.948 MB/sec [Average]
[info]   (min, avg, max) = (672.799, 942.821, 1347.817), stdev = 369.016
[info]   CI (99.9%): [≈ 0, 2363.768] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   712.256 ±(99.9%) 1076.035 B/op [Average]
[info]   (min, avg, max) = (507.669, 712.256, 1020.577), stdev = 279.443
[info]   CI (99.9%): [≈ 0, 1788.290] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.217 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.146), stdev = 0.056
[info]   CI (99.9%): [≈ 0, 0.271] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.041 ±(99.9%) 0.163 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.041, 0.110), stdev = 0.042
[info]   CI (99.9%): [≈ 0, 0.204] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 0.837
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 75.50% complete, ETA 00:32:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2344431.117 ops/s
[info] # Warmup Iteration   2: 2576575.560 ops/s
[info] # Warmup Iteration   3: 2462039.090 ops/s
[info] # Warmup Iteration   4: 2463872.248 ops/s
[info] # Warmup Iteration   5: 2462063.046 ops/s
[info] Iteration   1: 2468101.187 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 2461886.300 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 2461598.012 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 2461660.299 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 2468428.776 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   2464334.915 ±(99.9%) 13828.105 ops/s [Average]
[info]   (min, avg, max) = (2461598.012, 2464334.915, 2468428.776), stdev = 3591.115
[info]   CI (99.9%): [2450506.810, 2478163.019] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 75.70% complete, ETA 00:32:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 303832.897 ops/s
[info] # Warmup Iteration   2: 377966.107 ops/s
[info] # Warmup Iteration   3: 352130.093 ops/s
[info] # Warmup Iteration   4: 350259.506 ops/s
[info] # Warmup Iteration   5: 348012.254 ops/s
[info] Iteration   1: 357390.506 ops/s
[info]                  ·gc.alloc.rate:               514.177 MB/sec
[info]                  ·gc.alloc.rate.norm:          2264.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.658 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2252.908 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 357623.124 ops/s
[info]                  ·gc.alloc.rate:      514.446 MB/sec
[info]                  ·gc.alloc.rate.norm: 2264.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 354852.685 ops/s
[info]                  ·gc.alloc.rate:                   510.456 MB/sec
[info]                  ·gc.alloc.rate.norm:              2264.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          669.808 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2970.767 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.001 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.873 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 358077.695 ops/s
[info]                  ·gc.alloc.rate:                   515.252 MB/sec
[info]                  ·gc.alloc.rate.norm:              2264.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          670.000 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2943.958 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.183 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 354447.037 ops/s
[info]                  ·gc.alloc.rate:               509.861 MB/sec
[info]                  ·gc.alloc.rate.norm:          2264.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      669.479 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2972.775 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson":
[info]   356478.209 ±(99.9%) 6520.409 ops/s [Average]
[info]   (min, avg, max) = (354447.037, 356478.209, 358077.695), stdev = 1693.330
[info]   CI (99.9%): [349957.800, 362998.619] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:·gc.alloc.rate":
[info]   512.838 ±(99.9%) 9.577 MB/sec [Average]
[info]   (min, avg, max) = (509.861, 512.838, 515.252), stdev = 2.487
[info]   CI (99.9%): [503.261, 522.416] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   2264.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2264.001, 2264.001, 2264.001), stdev = 0.001
[info]   CI (99.9%): [2264.001, 2264.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   504.189 ±(99.9%) 1116.863 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 504.189, 670.000), stdev = 290.046
[info]   CI (99.9%): [≈ 0, 1621.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   2228.082 ±(99.9%) 4940.090 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2228.082, 2972.775), stdev = 1282.926
[info]   CI (99.9%): [≈ 0, 7168.171] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.408 ±(99.9%) 3.428 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.408, 2.001), stdev = 0.890
[info]   CI (99.9%): [≈ 0, 3.836] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.811 ±(99.9%) 15.205 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.811, 8.873), stdev = 3.949
[info]   CI (99.9%): [≈ 0, 17.016] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 3.000), stdev = 1.140
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 75.90% complete, ETA 00:32:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 156843.655 ops/s
[info] # Warmup Iteration   2: 166031.770 ops/s
[info] # Warmup Iteration   3: 166293.616 ops/s
[info] # Warmup Iteration   4: 165528.359 ops/s
[info] # Warmup Iteration   5: 162417.087 ops/s
[info] Iteration   1: 166350.004 ops/s
[info]                  ·gc.alloc.rate:                   974.069 MB/sec
[info]                  ·gc.alloc.rate.norm:              9216.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.255 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12756.307 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.394 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 167275.034 ops/s
[info]                  ·gc.alloc.rate:               979.483 MB/sec
[info]                  ·gc.alloc.rate.norm:          9216.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      674.134 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6342.964 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   3: 166768.791 ops/s
[info]                  ·gc.alloc.rate:                   976.532 MB/sec
[info]                  ·gc.alloc.rate.norm:              9216.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.301 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12724.567 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.393 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 167119.762 ops/s
[info]                  ·gc.alloc.rate:               978.579 MB/sec
[info]                  ·gc.alloc.rate.norm:          9216.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      674.141 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6348.885 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   5: 161460.743 ops/s
[info]                  ·gc.alloc.rate:                   945.800 MB/sec
[info]                  ·gc.alloc.rate.norm:              9216.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          674.705 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6574.419 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.203 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeUPickle":
[info]   165794.867 ±(99.9%) 9429.671 ops/s [Average]
[info]   (min, avg, max) = (161460.743, 165794.867, 167275.034), stdev = 2448.856
[info]   CI (99.9%): [156365.195, 175224.538] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeUPickle:·gc.alloc.rate":
[info]   970.893 ±(99.9%) 54.606 MB/sec [Average]
[info]   (min, avg, max) = (945.800, 970.893, 979.483), stdev = 14.181
[info]   CI (99.9%): [916.286, 1025.499] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeUPickle:·gc.alloc.rate.norm":
[info]   9216.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (9216.003, 9216.003, 9216.003), stdev = 0.001
[info]   CI (99.9%): [9216.002, 9216.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeUPickle:·gc.churn.PS_Eden_Space":
[info]   943.907 ±(99.9%) 1421.421 MB/sec [Average]
[info]   (min, avg, max) = (674.134, 943.907, 1348.301), stdev = 369.139
[info]   CI (99.9%): [≈ 0, 2365.328] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   8949.428 ±(99.9%) 13330.842 B/op [Average]
[info]   (min, avg, max) = (6342.964, 8949.428, 12756.307), stdev = 3461.977
[info]   CI (99.9%): [≈ 0, 22280.271] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   0.198 ±(99.9%) 0.758 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.198, 0.394), stdev = 0.197
[info]   CI (99.9%): [≈ 0, 0.955] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeUPickle:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeUPickle:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 1.000
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 76.10% complete, ETA 00:31:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 47501.898 ops/s
[info] # Warmup Iteration   2: 59708.451 ops/s
[info] # Warmup Iteration   3: 60307.067 ops/s
[info] # Warmup Iteration   4: 60563.208 ops/s
[info] # Warmup Iteration   5: 60700.707 ops/s
[info] Iteration   1: 58152.278 ops/s
[info]                  ·gc.alloc.rate:                   1798.340 MB/sec
[info]                  ·gc.alloc.rate.norm:              48664.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2019.678 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     54653.522 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.563 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 59849.393 ops/s
[info]                  ·gc.alloc.rate:                   1851.046 MB/sec
[info]                  ·gc.alloc.rate.norm:              48664.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2023.267 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53191.684 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.285 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 59588.523 ops/s
[info]                  ·gc.alloc.rate:                   1842.482 MB/sec
[info]                  ·gc.alloc.rate.norm:              48664.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2025.987 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53510.804 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.100 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 59813.327 ops/s
[info]                  ·gc.alloc.rate:                   1849.350 MB/sec
[info]                  ·gc.alloc.rate.norm:              48664.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.239 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     35582.977 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.548 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 59886.960 ops/s
[info]                  ·gc.alloc.rate:                   1851.673 MB/sec
[info]                  ·gc.alloc.rate.norm:              48664.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2030.662 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53368.014 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.547 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce":
[info]   59458.096 ±(99.9%) 2846.223 ops/s [Average]
[info]   (min, avg, max) = (58152.278, 59458.096, 59886.960), stdev = 739.155
[info]   CI (99.9%): [56611.874, 62304.319] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:·gc.alloc.rate":
[info]   1838.578 ±(99.9%) 87.752 MB/sec [Average]
[info]   (min, avg, max) = (1798.340, 1838.578, 1851.673), stdev = 22.789
[info]   CI (99.9%): [1750.826, 1926.330] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   48664.007 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (48664.007, 48664.007, 48664.008), stdev = 0.001
[info]   CI (99.9%): [48664.006, 48664.008] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1890.367 ±(99.9%) 1158.463 MB/sec [Average]
[info]   (min, avg, max) = (1352.239, 1890.367, 2030.662), stdev = 300.849
[info]   CI (99.9%): [731.904, 3048.829] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   50061.400 ±(99.9%) 31243.833 B/op [Average]
[info]   (min, avg, max) = (35582.977, 50061.400, 54653.522), stdev = 8113.924
[info]   CI (99.9%): [18817.567, 81305.234] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.174 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.125), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.220] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   1.208 ±(99.9%) 4.561 B/op [Average]
[info]   (min, avg, max) = (0.547, 1.208, 3.285), stdev = 1.184
[info]   CI (99.9%): [≈ 0, 5.769] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 76.31% complete, ETA 00:31:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 45844.237 ops/s
[info] # Warmup Iteration   2: 80929.096 ops/s
[info] # Warmup Iteration   3: 81118.282 ops/s
[info] # Warmup Iteration   4: 82619.763 ops/s
[info] # Warmup Iteration   5: 82123.188 ops/s
[info] Iteration   1: 82098.534 ops/s
[info]                  ·gc.alloc.rate:                   1476.864 MB/sec
[info]                  ·gc.alloc.rate.norm:              28304.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1335.998 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25604.302 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.596 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 83004.602 ops/s
[info]                  ·gc.alloc.rate:                   1492.765 MB/sec
[info]                  ·gc.alloc.rate.norm:              28304.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2006.512 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     38045.063 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.184 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 83412.346 ops/s
[info]                  ·gc.alloc.rate:                   1500.635 MB/sec
[info]                  ·gc.alloc.rate.norm:              28304.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.784 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25289.001 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.786 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 83410.593 ops/s
[info]                  ·gc.alloc.rate:                   1499.999 MB/sec
[info]                  ·gc.alloc.rate.norm:              28304.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.230 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25327.012 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.178 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 83386.042 ops/s
[info]                  ·gc.alloc.rate:               1499.523 MB/sec
[info]                  ·gc.alloc.rate.norm:          28304.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1344.855 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 25384.592 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala":
[info]   83062.423 ±(99.9%) 2178.953 ops/s [Average]
[info]   (min, avg, max) = (82098.534, 83062.423, 83412.346), stdev = 565.867
[info]   CI (99.9%): [80883.470, 85241.377] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1493.957 ±(99.9%) 38.778 MB/sec [Average]
[info]   (min, avg, max) = (1476.864, 1493.957, 1500.635), stdev = 10.071
[info]   CI (99.9%): [1455.179, 1532.736] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   28304.005 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (28304.005, 28304.005, 28304.006), stdev = 0.001
[info]   CI (99.9%): [28304.004, 28304.006] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1474.076 ±(99.9%) 1146.177 MB/sec [Average]
[info]   (min, avg, max) = (1335.998, 1474.076, 2006.512), stdev = 297.658
[info]   CI (99.9%): [327.899, 2620.252] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   27929.994 ±(99.9%) 21778.523 B/op [Average]
[info]   (min, avg, max) = (25289.001, 27929.994, 38045.063), stdev = 5655.813
[info]   CI (99.9%): [6151.471, 49708.517] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.083), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.172] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.949 ±(99.9%) 2.322 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.949, 1.596), stdev = 0.603
[info]   CI (99.9%): [≈ 0, 3.271] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 76.51% complete, ETA 00:31:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 90333.821 ops/s
[info] # Warmup Iteration   2: 98717.970 ops/s
[info] # Warmup Iteration   3: 99332.233 ops/s
[info] # Warmup Iteration   4: 100608.245 ops/s
[info] # Warmup Iteration   5: 100386.365 ops/s
[info] Iteration   1: 100353.109 ops/s
[info]                  ·gc.alloc.rate:                   1537.906 MB/sec
[info]                  ·gc.alloc.rate.norm:              24120.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.229 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21113.811 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.326 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 98416.457 ops/s
[info]                  ·gc.alloc.rate:               1508.270 MB/sec
[info]                  ·gc.alloc.rate.norm:          24120.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2022.128 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 32337.547 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 100529.224 ops/s
[info]                  ·gc.alloc.rate:                   1540.695 MB/sec
[info]                  ·gc.alloc.rate.norm:              24120.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.708 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21130.048 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.630 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 100734.238 ops/s
[info]                  ·gc.alloc.rate:                   1543.850 MB/sec
[info]                  ·gc.alloc.rate.norm:              24120.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1351.012 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21107.239 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.325 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 97860.038 ops/s
[info]                  ·gc.alloc.rate:                   1499.700 MB/sec
[info]                  ·gc.alloc.rate.norm:              24120.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2028.036 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     32617.341 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.339 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala":
[info]   99578.613 ±(99.9%) 5145.720 ops/s [Average]
[info]   (min, avg, max) = (97860.038, 99578.613, 100734.238), stdev = 1336.327
[info]   CI (99.9%): [94432.893, 104724.333] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1526.084 ±(99.9%) 78.969 MB/sec [Average]
[info]   (min, avg, max) = (1499.700, 1526.084, 1543.850), stdev = 20.508
[info]   CI (99.9%): [1447.115, 1605.053] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   24120.004 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (24120.004, 24120.004, 24120.005), stdev = 0.001
[info]   CI (99.9%): [24120.004, 24120.005] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1619.423 ±(99.9%) 1425.989 MB/sec [Average]
[info]   (min, avg, max) = (1346.229, 1619.423, 2028.036), stdev = 370.325
[info]   CI (99.9%): [193.434, 3045.412] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   25661.197 ±(99.9%) 23963.118 B/op [Average]
[info]   (min, avg, max) = (21107.239, 25661.197, 32617.341), stdev = 6223.146
[info]   CI (99.9%): [1698.080, 49624.315] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.174 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.104), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.220] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.724 ±(99.9%) 2.750 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.724, 1.630), stdev = 0.714
[info]   CI (99.9%): [≈ 0, 3.474] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 3.000), stdev = 1.000
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 76.71% complete, ETA 00:31:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 8270.879 ops/s
[info] # Warmup Iteration   2: 18734.830 ops/s
[info] # Warmup Iteration   3: 18346.731 ops/s
[info] # Warmup Iteration   4: 18783.380 ops/s
[info] # Warmup Iteration   5: 18824.422 ops/s
[info] Iteration   1: 18673.538 ops/s
[info]                  ·gc.alloc.rate:                   1301.547 MB/sec
[info]                  ·gc.alloc.rate.norm:              109696.033 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.600 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     112397.556 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.754 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 18648.616 ops/s
[info]                  ·gc.alloc.rate:                   1299.839 MB/sec
[info]                  ·gc.alloc.rate.norm:              109696.023 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.968 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     112660.643 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.757 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 18893.446 ops/s
[info]                  ·gc.alloc.rate:                   1316.891 MB/sec
[info]                  ·gc.alloc.rate.norm:              109696.023 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.944 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     111366.462 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.202 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 18371.065 ops/s
[info]                  ·gc.alloc.rate:               1280.507 MB/sec
[info]                  ·gc.alloc.rate.norm:          109696.024 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1339.674 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 114764.686 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 18919.011 ops/s
[info]                  ·gc.alloc.rate:                   1319.066 MB/sec
[info]                  ·gc.alloc.rate.norm:              109696.023 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.835 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     111589.541 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.463 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson":
[info]   18701.135 ±(99.9%) 854.374 ops/s [Average]
[info]   (min, avg, max) = (18371.065, 18701.135, 18919.011), stdev = 221.878
[info]   CI (99.9%): [17846.761, 19555.509] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1303.570 ±(99.9%) 59.887 MB/sec [Average]
[info]   (min, avg, max) = (1280.507, 1303.570, 1319.066), stdev = 15.552
[info]   CI (99.9%): [1243.683, 1363.456] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   109696.025 ±(99.9%) 0.018 B/op [Average]
[info]   (min, avg, max) = (109696.023, 109696.025, 109696.033), stdev = 0.005
[info]   CI (99.9%): [109696.007, 109696.043] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1337.404 ±(99.9%) 12.973 MB/sec [Average]
[info]   (min, avg, max) = (1333.600, 1337.404, 1341.835), stdev = 3.369
[info]   CI (99.9%): [1324.432, 1350.377] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   112555.777 ±(99.9%) 5188.873 B/op [Average]
[info]   (min, avg, max) = (111366.462, 112555.777, 114764.686), stdev = 1347.534
[info]   CI (99.9%): [107366.904, 117744.651] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   2.435 ±(99.9%) 7.596 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.435, 5.202), stdev = 1.973
[info]   CI (99.9%): [≈ 0, 10.031] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 76.91% complete, ETA 00:30:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 81175.220 ops/s
[info] # Warmup Iteration   2: 135562.426 ops/s
[info] # Warmup Iteration   3: 136255.986 ops/s
[info] # Warmup Iteration   4: 134445.164 ops/s
[info] # Warmup Iteration   5: 135153.694 ops/s
[info] Iteration   1: 137055.647 ops/s
[info]                  ·gc.alloc.rate:                   1066.735 MB/sec
[info]                  ·gc.alloc.rate.norm:              12248.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.810 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15314.491 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.717 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 134604.578 ops/s
[info]                  ·gc.alloc.rate:                   1047.863 MB/sec
[info]                  ·gc.alloc.rate.norm:              12248.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.107 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15593.772 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.974 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 134730.286 ops/s
[info]                  ·gc.alloc.rate:               1048.513 MB/sec
[info]                  ·gc.alloc.rate.norm:          12248.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      667.465 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 7796.856 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 134975.328 ops/s
[info]                  ·gc.alloc.rate:               1050.351 MB/sec
[info]                  ·gc.alloc.rate.norm:          12248.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1335.910 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 15577.871 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 137375.641 ops/s
[info]                  ·gc.alloc.rate:                   1069.061 MB/sec
[info]                  ·gc.alloc.rate.norm:              12248.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          668.477 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7658.602 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.238 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala":
[info]   135748.296 ±(99.9%) 5201.696 ops/s [Average]
[info]   (min, avg, max) = (134604.578, 135748.296, 137375.641), stdev = 1350.864
[info]   CI (99.9%): [130546.600, 140949.992] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1056.505 ±(99.9%) 40.327 MB/sec [Average]
[info]   (min, avg, max) = (1047.863, 1056.505, 1069.061), stdev = 10.473
[info]   CI (99.9%): [1016.178, 1096.832] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   12248.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (12248.003, 12248.003, 12248.003), stdev = 0.001
[info]   CI (99.9%): [12248.003, 12248.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1067.954 ±(99.9%) 1406.000 MB/sec [Average]
[info]   (min, avg, max) = (667.465, 1067.954, 1335.910), stdev = 365.134
[info]   CI (99.9%): [≈ 0, 2473.954] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   12388.319 ±(99.9%) 16389.275 B/op [Average]
[info]   (min, avg, max) = (7658.602, 12388.319, 15593.772), stdev = 4256.243
[info]   CI (99.9%): [≈ 0, 28777.593] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.146 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.083), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.179] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.386 ±(99.9%) 1.695 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.386, 0.974), stdev = 0.440
[info]   CI (99.9%): [≈ 0, 2.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 77.11% complete, ETA 00:30:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 521302.861 ops/s
[info] # Warmup Iteration   2: 566707.688 ops/s
[info] # Warmup Iteration   3: 567526.659 ops/s
[info] # Warmup Iteration   4: 549480.400 ops/s
[info] # Warmup Iteration   5: 569123.471 ops/s
[info] Iteration   1: 570269.518 ops/s
[info]                  ·gc.alloc.rate:                   629.031 MB/sec
[info]                  ·gc.alloc.rate.norm:              1736.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.155 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1857.772 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.564 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.315 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 569244.254 ops/s
[info]                  ·gc.alloc.rate:      628.059 MB/sec
[info]                  ·gc.alloc.rate.norm: 1736.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 570326.144 ops/s
[info]                  ·gc.alloc.rate:                   629.078 MB/sec
[info]                  ·gc.alloc.rate.norm:              1736.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.152 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1857.629 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.115 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 563184.416 ops/s
[info]                  ·gc.alloc.rate:                   621.192 MB/sec
[info]                  ·gc.alloc.rate.norm:              1736.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.809 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1880.249 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.058 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 565123.602 ops/s
[info]                  ·gc.alloc.rate:               623.337 MB/sec
[info]                  ·gc.alloc.rate.norm:          1736.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.769 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1873.670 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala":
[info]   567629.587 ±(99.9%) 12608.625 ops/s [Average]
[info]   (min, avg, max) = (563184.416, 567629.587, 570326.144), stdev = 3274.420
[info]   CI (99.9%): [555020.961, 580238.212] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   626.139 ±(99.9%) 14.018 MB/sec [Average]
[info]   (min, avg, max) = (621.192, 626.139, 629.078), stdev = 3.640
[info]   CI (99.9%): [612.122, 640.157] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1736.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1736.001, 1736.001, 1736.001), stdev = 0.001
[info]   CI (99.9%): [1736.001, 1736.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   538.377 ±(99.9%) 1158.897 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 538.377, 673.155), stdev = 300.962
[info]   CI (99.9%): [≈ 0, 1697.274] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1493.864 ±(99.9%) 3215.881 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1493.864, 1880.249), stdev = 835.154
[info]   CI (99.9%): [≈ 0, 4709.745] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.325 ±(99.9%) 2.666 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.325, 1.564), stdev = 0.692
[info]   CI (99.9%): [≈ 0, 2.992] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.898 ±(99.9%) 7.359 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.898, 4.315), stdev = 1.911
[info]   CI (99.9%): [≈ 0, 8.256] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 0.707
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 77.31% complete, ETA 00:30:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 534333.343 ops/s
[info] # Warmup Iteration   2: 562340.673 ops/s
[info] # Warmup Iteration   3: 561654.253 ops/s
[info] # Warmup Iteration   4: 564018.598 ops/s
[info] # Warmup Iteration   5: 562858.613 ops/s
[info] Iteration   1: 561175.347 ops/s
[info]                  ·gc.alloc.rate:      5.705 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 561919.735 ops/s
[info]                  ·gc.alloc.rate:      5.713 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 564120.385 ops/s
[info]                  ·gc.alloc.rate:      5.736 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 564263.111 ops/s
[info]                  ·gc.alloc.rate:      5.737 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 564479.018 ops/s
[info]                  ·gc.alloc.rate:      5.739 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   563191.519 ±(99.9%) 5887.564 ops/s [Average]
[info]   (min, avg, max) = (561175.347, 563191.519, 564479.018), stdev = 1528.982
[info]   CI (99.9%): [557303.955, 569079.083] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   5.726 ±(99.9%) 0.060 MB/sec [Average]
[info]   (min, avg, max) = (5.705, 5.726, 5.739), stdev = 0.016
[info]   CI (99.9%): [5.666, 5.786] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   16.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (16.001, 16.001, 16.001), stdev = 0.001
[info]   CI (99.9%): [16.001, 16.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 77.51% complete, ETA 00:30:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 11168.728 ops/s
[info] # Warmup Iteration   2: 19547.114 ops/s
[info] # Warmup Iteration   3: 19573.624 ops/s
[info] # Warmup Iteration   4: 19720.432 ops/s
[info] # Warmup Iteration   5: 19314.334 ops/s
[info] Iteration   1: 19757.490 ops/s
[info]                  ·gc.alloc.rate:                   384.837 MB/sec
[info]                  ·gc.alloc.rate.norm:              30656.030 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.580 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     40752.308 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.015 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.188 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 19609.317 ops/s
[info]                  ·gc.alloc.rate:               382.067 MB/sec
[info]                  ·gc.alloc.rate.norm:          30656.022 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.730 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 41059.826 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 19830.433 ops/s
[info]                  ·gc.alloc.rate:      386.331 MB/sec
[info]                  ·gc.alloc.rate.norm: 30656.023 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 19509.096 ops/s
[info]                  ·gc.alloc.rate:                   380.087 MB/sec
[info]                  ·gc.alloc.rate.norm:              30656.022 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.713 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     41272.364 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.036 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.882 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 19761.722 ops/s
[info]                  ·gc.alloc.rate:                   384.985 MB/sec
[info]                  ·gc.alloc.rate.norm:              30656.022 B/op
[info]                  ·gc.churn.PS_Eden_Space:          666.575 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53078.689 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.313 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 184.203 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson":
[info]   19693.612 ±(99.9%) 504.241 ops/s [Average]
[info]   (min, avg, max) = (19509.096, 19693.612, 19830.433), stdev = 130.950
[info]   CI (99.9%): [19189.371, 20197.853] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:·gc.alloc.rate":
[info]   383.662 ±(99.9%) 9.738 MB/sec [Average]
[info]   (min, avg, max) = (380.087, 383.662, 386.331), stdev = 2.529
[info]   CI (99.9%): [373.924, 393.399] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   30656.024 ±(99.9%) 0.013 B/op [Average]
[info]   (min, avg, max) = (30656.022, 30656.024, 30656.030), stdev = 0.003
[info]   CI (99.9%): [30656.011, 30656.037] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   440.320 ±(99.9%) 982.381 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 440.320, 666.575), stdev = 255.121
[info]   CI (99.9%): [≈ 0, 1422.701] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   35232.638 ±(99.9%) 78460.626 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 35232.638, 53078.689), stdev = 20375.975
[info]   CI (99.9%): [≈ 0, 113693.263] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.473 ±(99.9%) 3.962 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.473, 2.313), stdev = 1.029
[info]   CI (99.9%): [≈ 0, 4.435] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   37.655 ±(99.9%) 315.489 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 37.655, 184.203), stdev = 81.931
[info]   CI (99.9%): [≈ 0, 353.143] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.200, 3.000), stdev = 1.304
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce
[info] # Run progress: 77.71% complete, ETA 00:29:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1228154.363 ops/s
[info] # Warmup Iteration   2: 2205618.677 ops/s
[info] # Warmup Iteration   3: 2238978.823 ops/s
[info] # Warmup Iteration   4: 2195530.645 ops/s
[info] # Warmup Iteration   5: 2222092.440 ops/s
[info] Iteration   1: 2245514.306 ops/s
[info]                  ·gc.alloc.rate:                   3367.286 MB/sec
[info]                  ·gc.alloc.rate.norm:              2360.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3385.334 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2372.649 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 2248240.217 ops/s
[info]                  ·gc.alloc.rate:                   3371.412 MB/sec
[info]                  ·gc.alloc.rate.norm:              2360.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3392.058 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2374.453 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.117 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 2250839.065 ops/s
[info]                  ·gc.alloc.rate:                   3375.200 MB/sec
[info]                  ·gc.alloc.rate.norm:              2360.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2717.342 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1900.014 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.073 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 2236183.737 ops/s
[info]                  ·gc.alloc.rate:                   3352.999 MB/sec
[info]                  ·gc.alloc.rate.norm:              2360.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3399.834 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2392.964 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.059 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 2231197.597 ops/s
[info]                  ·gc.alloc.rate:                   3345.612 MB/sec
[info]                  ·gc.alloc.rate.norm:              2360.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3402.587 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2400.191 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.044 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce":
[info]   2242394.984 ±(99.9%) 32168.465 ops/s [Average]
[info]   (min, avg, max) = (2231197.597, 2242394.984, 2250839.065), stdev = 8354.048
[info]   CI (99.9%): [2210226.519, 2274563.449] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:·gc.alloc.rate":
[info]   3362.502 ±(99.9%) 48.673 MB/sec [Average]
[info]   (min, avg, max) = (3345.612, 3362.502, 3375.200), stdev = 12.640
[info]   CI (99.9%): [3313.829, 3411.175] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   2360.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2360.000, 2360.000, 2360.000), stdev = 0.001
[info]   CI (99.9%): [2360.000, 2360.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   3259.431 ±(99.9%) 1167.179 MB/sec [Average]
[info]   (min, avg, max) = (2717.342, 3259.431, 3402.587), stdev = 303.113
[info]   CI (99.9%): [2092.252, 4426.610] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   2288.054 ±(99.9%) 836.524 B/op [Average]
[info]   (min, avg, max) = (1900.014, 2288.054, 2400.191), stdev = 217.243
[info]   CI (99.9%): [1451.530, 3124.578] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.092 ±(99.9%) 0.185 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.092, 0.167), stdev = 0.048
[info]   CI (99.9%): [≈ 0, 0.276] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.064 ±(99.9%) 0.129 B/op [Average]
[info]   (min, avg, max) = (0.029, 0.064, 0.117), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.193] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.000, 5.000), stdev = 0.707
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava
[info] # Run progress: 77.91% complete, ETA 00:29:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.857 ops/s
[info] # Warmup Iteration   2: 818351.916 ops/s
[info] # Warmup Iteration   3: 858135.673 ops/s
[info] # Warmup Iteration   4: 850072.413 ops/s
[info] # Warmup Iteration   5: 849887.796 ops/s
[info] Iteration   1: 851263.183 ops/s
[info]                  ·gc.alloc.rate:               519.244 MB/sec
[info]                  ·gc.alloc.rate.norm:          960.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.613 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 945.892 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 853350.697 ops/s
[info]                  ·gc.alloc.rate:      520.511 MB/sec
[info]                  ·gc.alloc.rate.norm: 960.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 851226.023 ops/s
[info]                  ·gc.alloc.rate:               519.426 MB/sec
[info]                  ·gc.alloc.rate.norm:          960.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      664.082 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1227.352 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 848405.980 ops/s
[info]                  ·gc.alloc.rate:                   517.500 MB/sec
[info]                  ·gc.alloc.rate.norm:              960.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.819 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1231.432 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.025 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.047 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 841108.175 ops/s
[info]                  ·gc.alloc.rate:                   513.042 MB/sec
[info]                  ·gc.alloc.rate.norm:              960.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          665.161 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1244.644 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.016 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava":
[info]   849070.812 ±(99.9%) 18428.302 ops/s [Average]
[info]   (min, avg, max) = (841108.175, 849070.812, 853350.697), stdev = 4785.771
[info]   CI (99.9%): [830642.510, 867499.114] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   517.945 ±(99.9%) 11.342 MB/sec [Average]
[info]   (min, avg, max) = (513.042, 517.945, 520.511), stdev = 2.945
[info]   CI (99.9%): [506.603, 529.287] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   960.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (960.001, 960.001, 960.001), stdev = 0.001
[info]   CI (99.9%): [960.000, 960.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   500.935 ±(99.9%) 1107.969 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 500.935, 665.161), stdev = 287.736
[info]   CI (99.9%): [≈ 0, 1608.904] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   929.864 ±(99.9%) 2058.774 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 929.864, 1244.644), stdev = 534.657
[info]   CI (99.9%): [≈ 0, 2988.638] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.045 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.025), stdev = 0.012
[info]   CI (99.9%): [≈ 0, 0.053] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.015 ±(99.9%) 0.084 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.015, 0.047), stdev = 0.022
[info]   CI (99.9%): [≈ 0, 0.099] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.800, 3.000), stdev = 1.095
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala
[info] # Run progress: 78.11% complete, ETA 00:29:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 57268.874 ops/s
[info] # Warmup Iteration   2: 309488.871 ops/s
[info] # Warmup Iteration   3: 306937.648 ops/s
[info] # Warmup Iteration   4: 302433.687 ops/s
[info] # Warmup Iteration   5: 309723.344 ops/s
[info] Iteration   1: 307207.815 ops/s
[info]                  ·gc.alloc.rate:                   723.015 MB/sec
[info]                  ·gc.alloc.rate.norm:              3704.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          666.474 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3414.340 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.188 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11.209 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 310688.914 ops/s
[info]                  ·gc.alloc.rate:                   731.211 MB/sec
[info]                  ·gc.alloc.rate.norm:              3704.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          666.476 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3376.081 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.105 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 309839.252 ops/s
[info]                  ·gc.alloc.rate:                   729.176 MB/sec
[info]                  ·gc.alloc.rate.norm:              3704.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          666.788 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3387.088 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.211 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   4: 314065.554 ops/s
[info]                  ·gc.alloc.rate:               739.132 MB/sec
[info]                  ·gc.alloc.rate.norm:          3704.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      666.820 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3341.625 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 301689.579 ops/s
[info]                  ·gc.alloc.rate:                   710.028 MB/sec
[info]                  ·gc.alloc.rate.norm:              3704.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.186 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3480.507 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.109 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala":
[info]   308698.223 ±(99.9%) 17793.918 ops/s [Average]
[info]   (min, avg, max) = (301689.579, 308698.223, 314065.554), stdev = 4621.024
[info]   CI (99.9%): [290904.305, 326492.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   726.512 ±(99.9%) 41.845 MB/sec [Average]
[info]   (min, avg, max) = (710.028, 726.512, 739.132), stdev = 10.867
[info]   CI (99.9%): [684.667, 768.358] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   3704.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3704.001, 3704.001, 3704.002), stdev = 0.001
[info]   CI (99.9%): [3704.001, 3704.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   666.749 ±(99.9%) 1.136 MB/sec [Average]
[info]   (min, avg, max) = (666.474, 666.749, 667.186), stdev = 0.295
[info]   CI (99.9%): [665.613, 667.884] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   3399.928 ±(99.9%) 200.394 B/op [Average]
[info]   (min, avg, max) = (3341.625, 3399.928, 3480.507), stdev = 52.042
[info]   CI (99.9%): [3199.534, 3600.322] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.454 ±(99.9%) 3.732 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.454, 2.188), stdev = 0.969
[info]   CI (99.9%): [≈ 0, 4.187] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2.327 ±(99.9%) 19.122 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.327, 11.209), stdev = 4.966
[info]   CI (99.9%): [≈ 0, 21.449] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 3.000), stdev = 1.095
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala
[info] # Run progress: 78.31% complete, ETA 00:28:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 675714.641 ops/s
[info] # Warmup Iteration   2: 703841.367 ops/s
[info] # Warmup Iteration   3: 723760.315 ops/s
[info] # Warmup Iteration   4: 721724.145 ops/s
[info] # Warmup Iteration   5: 719982.307 ops/s
[info] Iteration   1: 721477.589 ops/s
[info]                  ·gc.alloc.rate:                   645.436 MB/sec
[info]                  ·gc.alloc.rate.norm:              1408.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          676.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1474.948 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.480 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.229 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 723872.394 ops/s
[info]                  ·gc.alloc.rate:                   647.728 MB/sec
[info]                  ·gc.alloc.rate.norm:              1408.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          676.287 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1470.081 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.045 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 721247.779 ops/s
[info]                  ·gc.alloc.rate:                   645.262 MB/sec
[info]                  ·gc.alloc.rate.norm:              1408.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          675.477 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1473.930 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.045 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 725306.666 ops/s
[info]                  ·gc.alloc.rate:                   648.919 MB/sec
[info]                  ·gc.alloc.rate.norm:              1408.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          675.521 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1465.721 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.090 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 724949.870 ops/s
[info]                  ·gc.alloc.rate:                   648.551 MB/sec
[info]                  ·gc.alloc.rate.norm:              1408.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          675.489 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1466.483 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.045 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala":
[info]   723370.860 ±(99.9%) 7352.638 ops/s [Average]
[info]   (min, avg, max) = (721247.779, 723370.860, 725306.666), stdev = 1909.457
[info]   CI (99.9%): [716018.222, 730723.498] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   647.179 ±(99.9%) 6.648 MB/sec [Average]
[info]   (min, avg, max) = (645.262, 647.179, 648.919), stdev = 1.726
[info]   CI (99.9%): [640.531, 653.827] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   1408.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1408.001, 1408.001, 1408.001), stdev = 0.001
[info]   CI (99.9%): [1408.001, 1408.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   675.780 ±(99.9%) 1.516 MB/sec [Average]
[info]   (min, avg, max) = (675.477, 675.780, 676.287), stdev = 0.394
[info]   CI (99.9%): [674.264, 677.295] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1470.233 ±(99.9%) 16.147 B/op [Average]
[info]   (min, avg, max) = (1465.721, 1470.233, 1474.948), stdev = 4.193
[info]   CI (99.9%): [1454.085, 1486.380] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.317 ±(99.9%) 2.504 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.317, 1.480), stdev = 0.650
[info]   CI (99.9%): [≈ 0, 2.821] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.691 ±(99.9%) 5.464 B/op [Average]
[info]   (min, avg, max) = (0.045, 0.691, 3.229), stdev = 1.419
[info]   CI (99.9%): [≈ 0, 6.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 0.707
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless
[info] # Run progress: 78.51% complete, ETA 00:28:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3798539.117 ops/s
[info] # Warmup Iteration   2: 4073774.698 ops/s
[info] # Warmup Iteration   3: 3996136.143 ops/s
[info] # Warmup Iteration   4: 3953418.776 ops/s
[info] # Warmup Iteration   5: 4070307.084 ops/s
[info] Iteration   1: 4044921.473 ops/s
[info]                  ·gc.alloc.rate:                   2365.360 MB/sec
[info]                  ·gc.alloc.rate.norm:              920.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2707.580 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1053.105 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 4051147.631 ops/s
[info]                  ·gc.alloc.rate:                   2368.202 MB/sec
[info]                  ·gc.alloc.rate.norm:              920.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2033.040 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     789.796 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 3984848.808 ops/s
[info]                  ·gc.alloc.rate:                   2329.428 MB/sec
[info]                  ·gc.alloc.rate.norm:              920.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2714.126 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1071.936 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.041 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 3994331.596 ops/s
[info]                  ·gc.alloc.rate:                   2334.916 MB/sec
[info]                  ·gc.alloc.rate.norm:              920.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2037.173 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     802.684 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 4028671.687 ops/s
[info]                  ·gc.alloc.rate:                   2354.914 MB/sec
[info]                  ·gc.alloc.rate.norm:              920.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2718.511 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1062.047 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless":
[info]   4020784.239 ±(99.9%) 114841.074 ops/s [Average]
[info]   (min, avg, max) = (3984848.808, 4020784.239, 4051147.631), stdev = 29823.862
[info]   CI (99.9%): [3905943.165, 4135625.313] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:·gc.alloc.rate":
[info]   2350.564 ±(99.9%) 67.813 MB/sec [Average]
[info]   (min, avg, max) = (2329.428, 2350.564, 2368.202), stdev = 17.611
[info]   CI (99.9%): [2282.751, 2418.377] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:·gc.alloc.rate.norm":
[info]   920.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (920.000, 920.000, 920.000), stdev = 0.001
[info]   CI (99.9%): [920.000, 920.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:·gc.churn.PS_Eden_Space":
[info]   2442.086 ±(99.9%) 1430.679 MB/sec [Average]
[info]   (min, avg, max) = (2033.040, 2442.086, 2718.511), stdev = 371.543
[info]   CI (99.9%): [1011.407, 3872.766] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:·gc.churn.PS_Eden_Space.norm":
[info]   955.914 ±(99.9%) 562.135 B/op [Average]
[info]   (min, avg, max) = (789.796, 955.914, 1071.936), stdev = 145.985
[info]   CI (99.9%): [393.779, 1518.049] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:·gc.churn.PS_Survivor_Space":
[info]   0.071 ±(99.9%) 0.146 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.071, 0.104), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.216] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:·gc.churn.PS_Survivor_Space.norm":
[info]   0.028 ±(99.9%) 0.057 B/op [Average]
[info]   (min, avg, max) = (0.008, 0.028, 0.041), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.085] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.000, 4.000), stdev = 0.707
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump
[info] # Run progress: 78.71% complete, ETA 00:28:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7585518.989 ops/s
[info] # Warmup Iteration   2: 7744402.131 ops/s
[info] # Warmup Iteration   3: 8210353.236 ops/s
[info] # Warmup Iteration   4: 8436379.369 ops/s
[info] # Warmup Iteration   5: 8429713.878 ops/s
[info] Iteration   1: 8111844.276 ops/s
[info]                  ·gc.alloc.rate:                   866.221 MB/sec
[info]                  ·gc.alloc.rate.norm:              168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.133 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     262.241 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 8262209.988 ops/s
[info]                  ·gc.alloc.rate:               881.927 MB/sec
[info]                  ·gc.alloc.rate.norm:          168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      675.464 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 128.670 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 8323338.345 ops/s
[info]                  ·gc.alloc.rate:                   888.454 MB/sec
[info]                  ·gc.alloc.rate.norm:              168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          675.458 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     127.724 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.004 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 8312466.650 ops/s
[info]                  ·gc.alloc.rate:                   887.672 MB/sec
[info]                  ·gc.alloc.rate.norm:              168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1351.504 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     255.785 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 8241858.345 ops/s
[info]                  ·gc.alloc.rate:               879.767 MB/sec
[info]                  ·gc.alloc.rate.norm:          168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      675.490 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 128.991 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump":
[info]   8250343.521 ±(99.9%) 325501.173 ops/s [Average]
[info]   (min, avg, max) = (8111844.276, 8250343.521, 8323338.345), stdev = 84531.621
[info]   CI (99.9%): [7924842.348, 8575844.694] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.alloc.rate":
[info]   880.808 ±(99.9%) 34.478 MB/sec [Average]
[info]   (min, avg, max) = (866.221, 880.808, 888.454), stdev = 8.954
[info]   CI (99.9%): [846.330, 915.286] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.alloc.rate.norm":
[info]   168.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (168.000, 168.000, 168.000), stdev = 0.001
[info]   CI (99.9%): [168.000, 168.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space":
[info]   946.010 ±(99.9%) 1426.475 MB/sec [Average]
[info]   (min, avg, max) = (675.458, 946.010, 1352.133), stdev = 370.451
[info]   CI (99.9%): [≈ 0, 2372.484] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space.norm":
[info]   180.682 ±(99.9%) 275.488 B/op [Average]
[info]   (min, avg, max) = (127.724, 180.682, 262.241), stdev = 71.543
[info]   CI (99.9%): [≈ 0, 456.171] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.151] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space.norm":
[info]   0.006 ±(99.9%) 0.023 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.006, 0.012), stdev = 0.006
[info]   CI (99.9%): [≈ 0, 0.029] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson
[info] # Run progress: 78.92% complete, ETA 00:28:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 17074.623 ops/s
[info] # Warmup Iteration   2: 171672.650 ops/s
[info] # Warmup Iteration   3: 183759.047 ops/s
[info] # Warmup Iteration   4: 189040.661 ops/s
[info] # Warmup Iteration   5: 189077.424 ops/s
[info] Iteration   1: 187030.655 ops/s
[info]                  ·gc.alloc.rate:                   1604.725 MB/sec
[info]                  ·gc.alloc.rate.norm:              13504.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.252 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11227.936 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.701 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 187328.466 ops/s
[info]                  ·gc.alloc.rate:                   1607.329 MB/sec
[info]                  ·gc.alloc.rate.norm:              13504.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2004.393 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16839.942 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.224 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 186264.407 ops/s
[info]                  ·gc.alloc.rate:                   1598.222 MB/sec
[info]                  ·gc.alloc.rate.norm:              13504.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.653 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11319.253 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.176 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 185992.951 ops/s
[info]                  ·gc.alloc.rate:                   1595.797 MB/sec
[info]                  ·gc.alloc.rate.norm:              13504.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.597 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11352.898 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.352 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 184976.486 ops/s
[info]                  ·gc.alloc.rate:                   1587.118 MB/sec
[info]                  ·gc.alloc.rate.norm:              13504.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2016.652 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17158.692 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.354 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson":
[info]   186318.593 ±(99.9%) 3569.437 ops/s [Average]
[info]   (min, avg, max) = (184976.486, 186318.593, 187328.466), stdev = 926.972
[info]   CI (99.9%): [182749.156, 189888.031] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1598.638 ±(99.9%) 30.656 MB/sec [Average]
[info]   (min, avg, max) = (1587.118, 1598.638, 1607.329), stdev = 7.961
[info]   CI (99.9%): [1567.982, 1629.294] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   13504.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (13504.002, 13504.002, 13504.002), stdev = 0.001
[info]   CI (99.9%): [13504.002, 13504.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1607.309 ±(99.9%) 1417.487 MB/sec [Average]
[info]   (min, avg, max) = (1334.252, 1607.309, 2016.652), stdev = 368.117
[info]   CI (99.9%): [189.822, 3024.797] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   13579.744 ±(99.9%) 12029.398 B/op [Average]
[info]   (min, avg, max) = (11227.936, 13579.744, 17158.692), stdev = 3123.996
[info]   CI (99.9%): [1550.346, 25609.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.191 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.067, 0.146), stdev = 0.050
[info]   CI (99.9%): [≈ 0, 0.258] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.561 ±(99.9%) 1.604 B/op [Average]
[info]   (min, avg, max) = (0.176, 0.561, 1.224), stdev = 0.417
[info]   CI (99.9%): [≈ 0, 2.165] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.400, 3.000), stdev = 0.894
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readUPickle
[info] # Run progress: 79.12% complete, ETA 00:27:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 203203.303 ops/s
[info] # Warmup Iteration   2: 307694.670 ops/s
[info] # Warmup Iteration   3: 311797.421 ops/s
[info] # Warmup Iteration   4: 315333.176 ops/s
[info] # Warmup Iteration   5: 315319.702 ops/s
[info] Iteration   1: 316057.785 ops/s
[info]                  ·gc.alloc.rate:               565.510 MB/sec
[info]                  ·gc.alloc.rate.norm:          2816.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.603 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2547.567 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 316741.647 ops/s
[info]                  ·gc.alloc.rate:                   566.729 MB/sec
[info]                  ·gc.alloc.rate.norm:              2816.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.470 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3346.382 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.672 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.309 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 316693.681 ops/s
[info]                  ·gc.alloc.rate:      566.650 MB/sec
[info]                  ·gc.alloc.rate.norm: 2816.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 316034.835 ops/s
[info]                  ·gc.alloc.rate:                   565.426 MB/sec
[info]                  ·gc.alloc.rate.norm:              2816.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.422 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3353.856 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.311 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 314324.530 ops/s
[info]                  ·gc.alloc.rate:               562.381 MB/sec
[info]                  ·gc.alloc.rate.norm:          2816.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.762 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3368.710 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readUPickle":
[info]   315970.496 ±(99.9%) 3772.174 ops/s [Average]
[info]   (min, avg, max) = (314324.530, 315970.496, 316741.647), stdev = 979.621
[info]   CI (99.9%): [312198.322, 319742.669] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readUPickle:·gc.alloc.rate":
[info]   565.339 ±(99.9%) 6.791 MB/sec [Average]
[info]   (min, avg, max) = (562.381, 565.339, 566.729), stdev = 1.764
[info]   CI (99.9%): [558.548, 572.130] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readUPickle:·gc.alloc.rate.norm":
[info]   2816.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2816.001, 2816.001, 2816.001), stdev = 0.001
[info]   CI (99.9%): [2816.001, 2816.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readUPickle:·gc.churn.PS_Eden_Space":
[info]   506.251 ±(99.9%) 1122.568 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 506.251, 673.470), stdev = 291.527
[info]   CI (99.9%): [≈ 0, 1628.820] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   2523.303 ±(99.9%) 5596.576 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2523.303, 3368.710), stdev = 1453.413
[info]   CI (99.9%): [≈ 0, 8119.879] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readUPickle:·gc.churn.PS_Survivor_Space":
[info]   0.347 ±(99.9%) 2.855 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.347, 1.672), stdev = 0.741
[info]   CI (99.9%): [≈ 0, 3.201] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   1.724 ±(99.9%) 14.183 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.724, 8.309), stdev = 3.683
[info]   CI (99.9%): [≈ 0, 15.907] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readUPickle:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readUPickle:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 0.837
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 79.32% complete, ETA 00:27:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1015254.278 ops/s
[info] # Warmup Iteration   2: 1090435.898 ops/s
[info] # Warmup Iteration   3: 1099658.578 ops/s
[info] # Warmup Iteration   4: 1100890.199 ops/s
[info] # Warmup Iteration   5: 1100813.060 ops/s
[info] Iteration   1: 1099813.088 ops/s
[info]                  ·gc.alloc.rate:      61.507 MB/sec
[info]                  ·gc.alloc.rate.norm: 88.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1100814.778 ops/s
[info]                  ·gc.alloc.rate:      61.552 MB/sec
[info]                  ·gc.alloc.rate.norm: 88.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1090787.914 ops/s
[info]                  ·gc.alloc.rate:               60.989 MB/sec
[info]                  ·gc.alloc.rate.norm:          88.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.596 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 738.171 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 1103060.489 ops/s
[info]                  ·gc.alloc.rate:      61.674 MB/sec
[info]                  ·gc.alloc.rate.norm: 88.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1103463.180 ops/s
[info]                  ·gc.alloc.rate:      61.697 MB/sec
[info]                  ·gc.alloc.rate.norm: 88.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala":
[info]   1099587.890 ±(99.9%) 19829.168 ops/s [Average]
[info]   (min, avg, max) = (1090787.914, 1099587.890, 1103463.180), stdev = 5149.572
[info]   CI (99.9%): [1079758.722, 1119417.058] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   61.484 ±(99.9%) 1.108 MB/sec [Average]
[info]   (min, avg, max) = (60.989, 61.484, 61.697), stdev = 0.288
[info]   CI (99.9%): [60.376, 62.592] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   88.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (88.000, 88.000, 88.000), stdev = 0.001
[info]   CI (99.9%): [88.000, 88.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   102.319 ±(99.9%) 881.000 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 102.319, 511.596), stdev = 228.793
[info]   CI (99.9%): [≈ 0, 983.319] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   147.634 ±(99.9%) 1271.175 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 147.634, 738.171), stdev = 330.120
[info]   CI (99.9%): [≈ 0, 1418.810] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:·gc.count":
[info]   1.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.200, 1.000), stdev = 0.447
[info]   CI (99.9%): [1.000, 1.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:·gc.time":
[info]   2.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 0.400, 2.000), stdev = 0.894
[info]   CI (99.9%): [2.000, 2.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 79.52% complete, ETA 00:27:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 30972.580 ops/s
[info] # Warmup Iteration   2: 64203.918 ops/s
[info] # Warmup Iteration   3: 64565.355 ops/s
[info] # Warmup Iteration   4: 65409.838 ops/s
[info] # Warmup Iteration   5: 65352.161 ops/s
[info] Iteration   1: 64529.774 ops/s
[info]                  ·gc.alloc.rate:                   2913.400 MB/sec
[info]                  ·gc.alloc.rate.norm:              71056.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2692.359 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     65664.966 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.539 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 64361.387 ops/s
[info]                  ·gc.alloc.rate:                   2905.738 MB/sec
[info]                  ·gc.alloc.rate.norm:              71056.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2700.198 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     66029.778 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.036 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 64284.985 ops/s
[info]                  ·gc.alloc.rate:                   2902.357 MB/sec
[info]                  ·gc.alloc.rate.norm:              71056.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3384.276 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     82854.416 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.077 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 64530.611 ops/s
[info]                  ·gc.alloc.rate:                   2913.511 MB/sec
[info]                  ·gc.alloc.rate.norm:              71056.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2713.363 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     66174.717 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.539 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 65004.006 ops/s
[info]                  ·gc.alloc.rate:                   2935.044 MB/sec
[info]                  ·gc.alloc.rate.norm:              71056.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2716.693 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     65769.856 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.504 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson":
[info]   64542.153 ±(99.9%) 1076.126 ops/s [Average]
[info]   (min, avg, max) = (64284.985, 64542.153, 65004.006), stdev = 279.467
[info]   CI (99.9%): [63466.026, 65618.279] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2914.010 ±(99.9%) 48.982 MB/sec [Average]
[info]   (min, avg, max) = (2902.357, 2914.010, 2935.044), stdev = 12.720
[info]   CI (99.9%): [2865.028, 2962.992] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   71056.007 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (71056.007, 71056.007, 71056.007), stdev = 0.001
[info]   CI (99.9%): [71056.006, 71056.008] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2841.378 ±(99.9%) 1169.244 MB/sec [Average]
[info]   (min, avg, max) = (2692.359, 2841.378, 3384.276), stdev = 303.649
[info]   CI (99.9%): [1672.134, 4010.622] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   69298.746 ±(99.9%) 29190.022 B/op [Average]
[info]   (min, avg, max) = (65664.966, 69298.746, 82854.416), stdev = 7580.556
[info]   CI (99.9%): [40108.724, 98488.768] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.096 ±(99.9%) 0.201 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.096, 0.167), stdev = 0.052
[info]   CI (99.9%): [≈ 0, 0.297] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   2.339 ±(99.9%) 4.931 B/op [Average]
[info]   (min, avg, max) = (0.504, 2.339, 4.077), stdev = 1.281
[info]   CI (99.9%): [≈ 0, 7.270] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.200, 5.000), stdev = 0.837
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 79.72% complete, ETA 00:27:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1110537.644 ops/s
[info] # Warmup Iteration   2: 1547866.407 ops/s
[info] # Warmup Iteration   3: 1507925.741 ops/s
[info] # Warmup Iteration   4: 1510263.774 ops/s
[info] # Warmup Iteration   5: 1523658.568 ops/s
[info] Iteration   1: 1527484.087 ops/s
[info]                  ·gc.alloc.rate:                   877.391 MB/sec
[info]                  ·gc.alloc.rate.norm:              904.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1335.346 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1375.844 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.064 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 1545451.904 ops/s
[info]                  ·gc.alloc.rate:               887.689 MB/sec
[info]                  ·gc.alloc.rate.norm:          904.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      667.502 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 679.768 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 1525599.410 ops/s
[info]                  ·gc.alloc.rate:               876.448 MB/sec
[info]                  ·gc.alloc.rate.norm:          904.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.261 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 689.268 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 1521258.086 ops/s
[info]                  ·gc.alloc.rate:                   873.767 MB/sec
[info]                  ·gc.alloc.rate.norm:              904.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.595 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1382.843 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.043 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 1533016.908 ops/s
[info]                  ·gc.alloc.rate:               880.529 MB/sec
[info]                  ·gc.alloc.rate.norm:          904.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.469 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 686.287 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala":
[info]   1530562.079 ±(99.9%) 35937.024 ops/s [Average]
[info]   (min, avg, max) = (1521258.086, 1530562.079, 1545451.904), stdev = 9332.731
[info]   CI (99.9%): [1494625.055, 1566499.103] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   879.165 ±(99.9%) 20.574 MB/sec [Average]
[info]   (min, avg, max) = (873.767, 879.165, 887.689), stdev = 5.343
[info]   CI (99.9%): [858.591, 899.739] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   904.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (904.000, 904.000, 904.000), stdev = 0.001
[info]   CI (99.9%): [904.000, 904.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   935.234 ±(99.9%) 1408.645 MB/sec [Average]
[info]   (min, avg, max) = (667.502, 935.234, 1336.595), stdev = 365.821
[info]   CI (99.9%): [≈ 0, 2343.879] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   962.802 ±(99.9%) 1464.293 B/op [Average]
[info]   (min, avg, max) = (679.768, 962.802, 1382.843), stdev = 380.272
[info]   CI (99.9%): [≈ 0, 2427.095] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.113 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.062), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.021 ±(99.9%) 0.117 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.064), stdev = 0.030
[info]   CI (99.9%): [≈ 0, 0.138] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 79.92% complete, ETA 00:26:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1561312.001 ops/s
[info] # Warmup Iteration   2: 1693865.378 ops/s
[info] # Warmup Iteration   3: 1786157.778 ops/s
[info] # Warmup Iteration   4: 1786121.487 ops/s
[info] # Warmup Iteration   5: 1728446.405 ops/s
[info] Iteration   1: 1758710.004 ops/s
[info]                  ·gc.alloc.rate:               491.672 MB/sec
[info]                  ·gc.alloc.rate.norm:          440.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.594 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 457.829 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 1784408.355 ops/s
[info]                  ·gc.alloc.rate:               499.080 MB/sec
[info]                  ·gc.alloc.rate.norm:          440.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.826 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 451.237 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 1748203.750 ops/s
[info]                  ·gc.alloc.rate:                   488.990 MB/sec
[info]                  ·gc.alloc.rate.norm:              440.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.481 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     606.008 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.596 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.436 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 1788197.062 ops/s
[info]                  ·gc.alloc.rate:                   499.922 MB/sec
[info]                  ·gc.alloc.rate.norm:              440.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.140 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     592.456 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.055 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 1790238.923 ops/s
[info]                  ·gc.alloc.rate:      500.486 MB/sec
[info]                  ·gc.alloc.rate.norm: 440.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala":
[info]   1773951.619 ±(99.9%) 73888.524 ops/s [Average]
[info]   (min, avg, max) = (1748203.750, 1773951.619, 1790238.923), stdev = 19188.615
[info]   CI (99.9%): [1700063.095, 1847840.143] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   496.030 ±(99.9%) 20.453 MB/sec [Average]
[info]   (min, avg, max) = (488.990, 496.030, 500.486), stdev = 5.312
[info]   CI (99.9%): [475.577, 516.483] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   440.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (440.000, 440.000, 440.000), stdev = 0.001
[info]   CI (99.9%): [440.000, 440.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   474.008 ±(99.9%) 1066.721 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 474.008, 673.481), stdev = 277.024
[info]   CI (99.9%): [≈ 0, 1540.729] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   421.506 ±(99.9%) 949.352 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 421.506, 606.008), stdev = 246.544
[info]   CI (99.9%): [≈ 0, 1370.858] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.332 ±(99.9%) 2.723 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.332, 1.596), stdev = 0.707
[info]   CI (99.9%): [≈ 0, 3.054] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.298 ±(99.9%) 2.450 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.298, 1.436), stdev = 0.636
[info]   CI (99.9%): [≈ 0, 2.749] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 2.000), stdev = 0.894
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 80.12% complete, ETA 00:26:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1662421.860 ops/s
[info] # Warmup Iteration   2: 1779877.226 ops/s
[info] # Warmup Iteration   3: 1830176.103 ops/s
[info] # Warmup Iteration   4: 1835315.034 ops/s
[info] # Warmup Iteration   5: 1828868.887 ops/s
[info] Iteration   1: 1829778.075 ops/s
[info]                  ·gc.alloc.rate:      18.602 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1829415.668 ops/s
[info]                  ·gc.alloc.rate:      18.598 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1829469.627 ops/s
[info]                  ·gc.alloc.rate:      18.599 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1830280.665 ops/s
[info]                  ·gc.alloc.rate:      18.609 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1829985.151 ops/s
[info]                  ·gc.alloc.rate:      18.603 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc":
[info]   1829785.837 ±(99.9%) 1390.578 ops/s [Average]
[info]   (min, avg, max) = (1829415.668, 1829785.837, 1830280.665), stdev = 361.129
[info]   CI (99.9%): [1828395.259, 1831176.415] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   18.602 ±(99.9%) 0.016 MB/sec [Average]
[info]   (min, avg, max) = (18.598, 18.602, 18.609), stdev = 0.004
[info]   CI (99.9%): [18.586, 18.619] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   16.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (16.000, 16.000, 16.000), stdev = 0.001
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 80.32% complete, ETA 00:26:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 21779.250 ops/s
[info] # Warmup Iteration   2: 38820.461 ops/s
[info] # Warmup Iteration   3: 38920.800 ops/s
[info] # Warmup Iteration   4: 39065.019 ops/s
[info] # Warmup Iteration   5: 38896.345 ops/s
[info] Iteration   1: 37793.245 ops/s
[info]                  ·gc.alloc.rate:                   1655.727 MB/sec
[info]                  ·gc.alloc.rate.norm:              68920.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.182 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     55660.522 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.867 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 39085.623 ops/s
[info]                  ·gc.alloc.rate:                   1711.625 MB/sec
[info]                  ·gc.alloc.rate.norm:              68920.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2008.407 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     80870.147 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.838 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 39125.218 ops/s
[info]                  ·gc.alloc.rate:                   1713.353 MB/sec
[info]                  ·gc.alloc.rate.norm:              68920.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.284 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53993.679 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.837 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 39083.124 ops/s
[info]                  ·gc.alloc.rate:                   1711.457 MB/sec
[info]                  ·gc.alloc.rate.norm:              68920.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2018.022 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     81265.311 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.191 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 39153.428 ops/s
[info]                  ·gc.alloc.rate:               1714.488 MB/sec
[info]                  ·gc.alloc.rate.norm:          68920.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1347.576 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 54170.670 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson":
[info]   38848.128 ±(99.9%) 2273.504 ops/s [Average]
[info]   (min, avg, max) = (37793.245, 38848.128, 39153.428), stdev = 590.422
[info]   CI (99.9%): [36574.624, 41121.632] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1701.330 ±(99.9%) 98.284 MB/sec [Average]
[info]   (min, avg, max) = (1655.727, 1701.330, 1714.488), stdev = 25.524
[info]   CI (99.9%): [1603.046, 1799.614] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   68920.011 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (68920.011, 68920.011, 68920.012), stdev = 0.001
[info]   CI (99.9%): [68920.009, 68920.014] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1610.694 ±(99.9%) 1415.046 MB/sec [Average]
[info]   (min, avg, max) = (1337.182, 1610.694, 2018.022), stdev = 367.483
[info]   CI (99.9%): [195.648, 3025.740] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   65192.066 ±(99.9%) 55863.434 B/op [Average]
[info]   (min, avg, max) = (53993.679, 65192.066, 81265.311), stdev = 14507.557
[info]   CI (99.9%): [9328.631, 121055.500] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.156 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.104), stdev = 0.041
[info]   CI (99.9%): [≈ 0, 0.190] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.347 ±(99.9%) 6.284 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.347, 4.191), stdev = 1.632
[info]   CI (99.9%): [≈ 0, 7.631] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.200, 3.000), stdev = 0.837
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 80.52% complete, ETA 00:26:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 225897.515 ops/s
[info] # Warmup Iteration   2: 241158.847 ops/s
[info] # Warmup Iteration   3: 247198.100 ops/s
[info] # Warmup Iteration   4: 246179.830 ops/s
[info] # Warmup Iteration   5: 239930.736 ops/s
[info] Iteration   1: 247288.606 ops/s
[info]                  ·gc.alloc.rate:                   968.281 MB/sec
[info]                  ·gc.alloc.rate.norm:              6160.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.085 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4282.031 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.265 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 246351.656 ops/s
[info]                  ·gc.alloc.rate:                   964.206 MB/sec
[info]                  ·gc.alloc.rate.norm:              6160.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.603 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8596.629 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.399 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 247712.158 ops/s
[info]                  ·gc.alloc.rate:               969.528 MB/sec
[info]                  ·gc.alloc.rate.norm:          6160.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.797 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4274.685 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   4: 247920.183 ops/s
[info]                  ·gc.alloc.rate:                   970.308 MB/sec
[info]                  ·gc.alloc.rate.norm:              6160.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.910 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8550.863 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.264 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 245926.072 ops/s
[info]                  ·gc.alloc.rate:               962.521 MB/sec
[info]                  ·gc.alloc.rate.norm:          6160.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.778 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4312.084 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala":
[info]   247039.735 ±(99.9%) 3336.409 ops/s [Average]
[info]   (min, avg, max) = (245926.072, 247039.735, 247920.183), stdev = 866.455
[info]   CI (99.9%): [243703.327, 250376.144] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   966.969 ±(99.9%) 13.177 MB/sec [Average]
[info]   (min, avg, max) = (962.521, 966.969, 970.308), stdev = 3.422
[info]   CI (99.9%): [953.792, 980.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   6160.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (6160.002, 6160.002, 6160.002), stdev = 0.001
[info]   CI (99.9%): [6160.002, 6160.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   942.435 ±(99.9%) 1419.494 MB/sec [Average]
[info]   (min, avg, max) = (672.797, 942.435, 1346.910), stdev = 368.638
[info]   CI (99.9%): [≈ 0, 2361.929] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   6003.258 ±(99.9%) 9036.003 B/op [Average]
[info]   (min, avg, max) = (4274.685, 6003.258, 8596.629), stdev = 2346.621
[info]   CI (99.9%): [≈ 0, 15039.261] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.108 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.137] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.186 ±(99.9%) 0.686 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.186, 0.399), stdev = 0.178
[info]   CI (99.9%): [≈ 0, 0.872] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 0.837
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 80.72% complete, ETA 00:25:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 12972.425 ops/s
[info] # Warmup Iteration   2: 31107.376 ops/s
[info] # Warmup Iteration   3: 31037.161 ops/s
[info] # Warmup Iteration   4: 31169.454 ops/s
[info] # Warmup Iteration   5: 31704.967 ops/s
[info] Iteration   1: 31242.001 ops/s
[info]                  ·gc.alloc.rate:                   1706.003 MB/sec
[info]                  ·gc.alloc.rate.norm:              85944.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2003.371 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     100924.643 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.097 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 31234.400 ops/s
[info]                  ·gc.alloc.rate:                   1705.608 MB/sec
[info]                  ·gc.alloc.rate.norm:              85944.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2008.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     101185.453 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.343 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 31687.749 ops/s
[info]                  ·gc.alloc.rate:               1730.463 MB/sec
[info]                  ·gc.alloc.rate.norm:          85944.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1341.618 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 66631.920 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 31701.095 ops/s
[info]                  ·gc.alloc.rate:                   1731.741 MB/sec
[info]                  ·gc.alloc.rate.norm:              85944.015 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2017.419 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     100121.861 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.033 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 31736.090 ops/s
[info]                  ·gc.alloc.rate:               1733.615 MB/sec
[info]                  ·gc.alloc.rate.norm:          85944.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1347.651 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 66809.847 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson":
[info]   31520.267 ±(99.9%) 993.885 ops/s [Average]
[info]   (min, avg, max) = (31234.400, 31520.267, 31736.090), stdev = 258.109
[info]   CI (99.9%): [30526.382, 32514.152] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1721.486 ±(99.9%) 55.290 MB/sec [Average]
[info]   (min, avg, max) = (1705.608, 1721.486, 1733.615), stdev = 14.359
[info]   CI (99.9%): [1666.196, 1776.776] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   85944.014 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (85944.014, 85944.014, 85944.015), stdev = 0.001
[info]   CI (99.9%): [85944.012, 85944.016] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1743.629 ±(99.9%) 1402.679 MB/sec [Average]
[info]   (min, avg, max) = (1341.618, 1743.629, 2017.419), stdev = 364.271
[info]   CI (99.9%): [340.950, 3146.307] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   87134.745 ±(99.9%) 71773.880 B/op [Average]
[info]   (min, avg, max) = (66631.920, 87134.745, 101185.453), stdev = 18639.449
[info]   CI (99.9%): [15360.865, 158908.624] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.234 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.146), stdev = 0.061
[info]   CI (99.9%): [≈ 0, 0.275] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   2.095 ±(99.9%) 11.781 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.095, 7.343), stdev = 3.060
[info]   CI (99.9%): [≈ 0, 13.876] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.000, 4.000), stdev = 1.000
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 80.92% complete, ETA 00:25:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 67778.510 ops/s
[info] # Warmup Iteration   2: 115797.650 ops/s
[info] # Warmup Iteration   3: 116613.418 ops/s
[info] # Warmup Iteration   4: 117734.061 ops/s
[info] # Warmup Iteration   5: 117836.420 ops/s
[info] Iteration   1: 117608.301 ops/s
[info]                  ·gc.alloc.rate:                   1513.059 MB/sec
[info]                  ·gc.alloc.rate.norm:              20248.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2002.720 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     26800.736 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.114 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 117749.219 ops/s
[info]                  ·gc.alloc.rate:                   1515.286 MB/sec
[info]                  ·gc.alloc.rate.norm:              20248.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.322 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17869.964 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.113 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 115012.560 ops/s
[info]                  ·gc.alloc.rate:                   1479.719 MB/sec
[info]                  ·gc.alloc.rate.norm:              20248.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.612 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18330.824 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.570 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 117600.830 ops/s
[info]                  ·gc.alloc.rate:                   1512.913 MB/sec
[info]                  ·gc.alloc.rate.norm:              20248.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.226 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17963.617 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.836 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 118059.218 ops/s
[info]                  ·gc.alloc.rate:               1519.368 MB/sec
[info]                  ·gc.alloc.rate.norm:          20248.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2018.084 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 26894.192 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala":
[info]   117206.026 ±(99.9%) 4775.413 ops/s [Average]
[info]   (min, avg, max) = (115012.560, 117206.026, 118059.218), stdev = 1240.160
[info]   CI (99.9%): [112430.613, 121981.439] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1508.069 ±(99.9%) 61.846 MB/sec [Average]
[info]   (min, avg, max) = (1479.719, 1508.069, 1519.368), stdev = 16.061
[info]   CI (99.9%): [1446.223, 1569.915] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   20248.004 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (20248.004, 20248.004, 20248.004), stdev = 0.001
[info]   CI (99.9%): [20248.003, 20248.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1607.993 ±(99.9%) 1414.696 MB/sec [Average]
[info]   (min, avg, max) = (1337.322, 1607.993, 2018.084), stdev = 367.392
[info]   CI (99.9%): [193.297, 3022.689] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   21571.867 ±(99.9%) 18556.761 B/op [Average]
[info]   (min, avg, max) = (17869.964, 21571.867, 26894.192), stdev = 4819.132
[info]   CI (99.9%): [3015.106, 40128.627] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.083), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.188] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.727 ±(99.9%) 1.790 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.727, 1.114), stdev = 0.465
[info]   CI (99.9%): [≈ 0, 2.516] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.200, 3.000), stdev = 0.837
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 81.12% complete, ETA 00:25:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 329486.796 ops/s
[info] # Warmup Iteration   2: 357124.535 ops/s
[info] # Warmup Iteration   3: 363458.413 ops/s
[info] # Warmup Iteration   4: 363245.927 ops/s
[info] # Warmup Iteration   5: 362368.665 ops/s
[info] Iteration   1: 356304.011 ops/s
[info]                  ·gc.alloc.rate:                   1696.986 MB/sec
[info]                  ·gc.alloc.rate.norm:              7496.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.594 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5952.652 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.276 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 362376.262 ops/s
[info]                  ·gc.alloc.rate:                   1726.386 MB/sec
[info]                  ·gc.alloc.rate.norm:              7496.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2024.630 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8790.982 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.542 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 363801.142 ops/s
[info]                  ·gc.alloc.rate:                   1732.696 MB/sec
[info]                  ·gc.alloc.rate.norm:              7496.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.965 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5844.555 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.180 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 361841.696 ops/s
[info]                  ·gc.alloc.rate:                   1723.366 MB/sec
[info]                  ·gc.alloc.rate.norm:              7496.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2028.750 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8824.310 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.272 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 358979.517 ops/s
[info]                  ·gc.alloc.rate:                   1710.141 MB/sec
[info]                  ·gc.alloc.rate.norm:              7496.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1354.582 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5937.490 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.274 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala":
[info]   360660.525 ±(99.9%) 11553.118 ops/s [Average]
[info]   (min, avg, max) = (356304.011, 360660.525, 363801.142), stdev = 3000.308
[info]   CI (99.9%): [349107.408, 372213.643] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1717.915 ±(99.9%) 55.078 MB/sec [Average]
[info]   (min, avg, max) = (1696.986, 1717.915, 1732.696), stdev = 14.304
[info]   CI (99.9%): [1662.836, 1772.993] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   7496.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (7496.001, 7496.001, 7496.001), stdev = 0.001
[info]   CI (99.9%): [7496.001, 7496.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1621.304 ±(99.9%) 1425.030 MB/sec [Average]
[info]   (min, avg, max) = (1347.594, 1621.304, 2028.750), stdev = 370.076
[info]   CI (99.9%): [196.274, 3046.334] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   7069.998 ±(99.9%) 6110.325 B/op [Average]
[info]   (min, avg, max) = (5844.555, 7069.998, 8824.310), stdev = 1586.832
[info]   CI (99.9%): [959.673, 13180.323] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.071 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.071, 0.125), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.309 ±(99.9%) 0.527 B/op [Average]
[info]   (min, avg, max) = (0.180, 0.309, 0.542), stdev = 0.137
[info]   CI (99.9%): [≈ 0, 0.836] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 3.000), stdev = 0.707
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 81.33% complete, ETA 00:24:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 386028.646 ops/s
[info] # Warmup Iteration   2: 428548.352 ops/s
[info] # Warmup Iteration   3: 432197.402 ops/s
[info] # Warmup Iteration   4: 429952.391 ops/s
[info] # Warmup Iteration   5: 432202.425 ops/s
[info] Iteration   1: 428349.394 ops/s
[info]                  ·gc.alloc.rate:               1467.549 MB/sec
[info]                  ·gc.alloc.rate.norm:          5392.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1346.895 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4948.699 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 429860.631 ops/s
[info]                  ·gc.alloc.rate:                   1472.678 MB/sec
[info]                  ·gc.alloc.rate.norm:              5392.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.591 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4934.010 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.229 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 425285.970 ops/s
[info]                  ·gc.alloc.rate:                   1457.654 MB/sec
[info]                  ·gc.alloc.rate.norm:              5392.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.475 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4991.834 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.308 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 432707.019 ops/s
[info]                  ·gc.alloc.rate:                   1482.460 MB/sec
[info]                  ·gc.alloc.rate.norm:              5392.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2026.150 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7369.510 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.151 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 433757.131 ops/s
[info]                  ·gc.alloc.rate:                   1486.005 MB/sec
[info]                  ·gc.alloc.rate.norm:              5392.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.203 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4906.495 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.076 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   429992.029 ±(99.9%) 13116.186 ops/s [Average]
[info]   (min, avg, max) = (425285.970, 429992.029, 433757.131), stdev = 3406.232
[info]   CI (99.9%): [416875.843, 443108.215] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   1473.269 ±(99.9%) 44.055 MB/sec [Average]
[info]   (min, avg, max) = (1457.654, 1473.269, 1486.005), stdev = 11.441
[info]   CI (99.9%): [1429.214, 1517.324] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   5392.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5392.001, 5392.001, 5392.001), stdev = 0.001
[info]   CI (99.9%): [5392.001, 5392.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   1484.463 ±(99.9%) 1166.051 MB/sec [Average]
[info]   (min, avg, max) = (1346.895, 1484.463, 2026.150), stdev = 302.820
[info]   CI (99.9%): [318.412, 2650.513] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   5430.110 ±(99.9%) 4176.397 B/op [Average]
[info]   (min, avg, max) = (4906.495, 5430.110, 7369.510), stdev = 1084.597
[info]   CI (99.9%): [1253.713, 9606.506] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.127 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.083), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   0.153 ±(99.9%) 0.468 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.153, 0.308), stdev = 0.122
[info]   CI (99.9%): [≈ 0, 0.621] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 81.53% complete, ETA 00:24:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 26988.365 ops/s
[info] # Warmup Iteration   2: 50567.281 ops/s
[info] # Warmup Iteration   3: 51155.462 ops/s
[info] # Warmup Iteration   4: 50810.052 ops/s
[info] # Warmup Iteration   5: 51325.308 ops/s
[info] Iteration   1: 51395.289 ops/s
[info]                  ·gc.alloc.rate:                   1322.256 MB/sec
[info]                  ·gc.alloc.rate.norm:              40480.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.624 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     40858.644 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.550 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 50449.260 ops/s
[info]                  ·gc.alloc.rate:               1297.551 MB/sec
[info]                  ·gc.alloc.rate.norm:          40480.009 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1335.601 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 41667.061 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 52009.749 ops/s
[info]                  ·gc.alloc.rate:                   1337.741 MB/sec
[info]                  ·gc.alloc.rate.norm:              40480.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.980 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     40456.996 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.150 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 51857.738 ops/s
[info]                  ·gc.alloc.rate:               1333.982 MB/sec
[info]                  ·gc.alloc.rate.norm:          40480.009 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1339.770 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 40655.645 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 51767.880 ops/s
[info]                  ·gc.alloc.rate:                   1331.471 MB/sec
[info]                  ·gc.alloc.rate.norm:              40480.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.237 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     40807.321 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.633 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson":
[info]   51495.983 ±(99.9%) 2415.891 ops/s [Average]
[info]   (min, avg, max) = (50449.260, 51495.983, 52009.749), stdev = 627.399
[info]   CI (99.9%): [49080.093, 53911.874] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1324.600 ±(99.9%) 62.241 MB/sec [Average]
[info]   (min, avg, max) = (1297.551, 1324.600, 1337.741), stdev = 16.164
[info]   CI (99.9%): [1262.359, 1386.841] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   40480.009 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (40480.008, 40480.009, 40480.009), stdev = 0.001
[info]   CI (99.9%): [40480.008, 40480.010] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1337.842 ±(99.9%) 12.048 MB/sec [Average]
[info]   (min, avg, max) = (1334.624, 1337.842, 1342.237), stdev = 3.129
[info]   CI (99.9%): [1325.795, 1349.890] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   40889.133 ±(99.9%) 1779.286 B/op [Average]
[info]   (min, avg, max) = (40456.996, 40889.133, 41667.061), stdev = 462.075
[info]   CI (99.9%): [39109.847, 42668.419] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.188 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.104), stdev = 0.049
[info]   CI (99.9%): [≈ 0, 0.230] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.266 ±(99.9%) 5.712 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.266, 3.150), stdev = 1.483
[info]   CI (99.9%): [≈ 0, 6.979] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 81.73% complete, ETA 00:24:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 59220.565 ops/s
[info] # Warmup Iteration   2: 78551.561 ops/s
[info] # Warmup Iteration   3: 77611.766 ops/s
[info] # Warmup Iteration   4: 79325.628 ops/s
[info] # Warmup Iteration   5: 79280.419 ops/s
[info] Iteration   1: 79212.082 ops/s
[info]                  ·gc.alloc.rate:               1421.510 MB/sec
[info]                  ·gc.alloc.rate.norm:          28232.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1345.179 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 26716.029 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 78756.252 ops/s
[info]                  ·gc.alloc.rate:                   1412.759 MB/sec
[info]                  ·gc.alloc.rate.norm:              28232.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.671 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     26891.343 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.248 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 79304.388 ops/s
[info]                  ·gc.alloc.rate:                   1422.621 MB/sec
[info]                  ·gc.alloc.rate.norm:              28232.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.932 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     26729.963 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.239 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 78799.965 ops/s
[info]                  ·gc.alloc.rate:                   1413.805 MB/sec
[info]                  ·gc.alloc.rate.norm:              28232.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2021.998 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     40376.898 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.247 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 78238.323 ops/s
[info]                  ·gc.alloc.rate:                   1403.332 MB/sec
[info]                  ·gc.alloc.rate.norm:              28232.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.117 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27161.432 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.419 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce":
[info]   78862.202 ±(99.9%) 1636.262 ops/s [Average]
[info]   (min, avg, max) = (78238.323, 78862.202, 79304.388), stdev = 424.932
[info]   CI (99.9%): [77225.940, 80498.464] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.alloc.rate":
[info]   1414.805 ±(99.9%) 30.005 MB/sec [Average]
[info]   (min, avg, max) = (1403.332, 1414.805, 1422.621), stdev = 7.792
[info]   CI (99.9%): [1384.801, 1444.810] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   28232.006 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (28232.005, 28232.006, 28232.006), stdev = 0.001
[info]   CI (99.9%): [28232.005, 28232.006] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1481.979 ±(99.9%) 1162.455 MB/sec [Average]
[info]   (min, avg, max) = (1345.179, 1481.979, 2021.998), stdev = 301.886
[info]   CI (99.9%): [319.524, 2644.434] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   29575.133 ±(99.9%) 23261.863 B/op [Average]
[info]   (min, avg, max) = (26716.029, 29575.133, 40376.898), stdev = 6041.032
[info]   CI (99.9%): [6313.270, 52836.996] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.113 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.062), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.831 ±(99.9%) 2.257 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.831, 1.248), stdev = 0.586
[info]   CI (99.9%): [≈ 0, 3.087] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 81.93% complete, ETA 00:24:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 62763.639 ops/s
[info] # Warmup Iteration   2: 107260.696 ops/s
[info] # Warmup Iteration   3: 110859.663 ops/s
[info] # Warmup Iteration   4: 112787.634 ops/s
[info] # Warmup Iteration   5: 108116.430 ops/s
[info] Iteration   1: 112565.536 ops/s
[info]                  ·gc.alloc.rate:               556.723 MB/sec
[info]                  ·gc.alloc.rate.norm:          7784.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.575 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 7152.747 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 113408.803 ops/s
[info]                  ·gc.alloc.rate:      560.912 MB/sec
[info]                  ·gc.alloc.rate.norm: 7784.004 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 107431.025 ops/s
[info]                  ·gc.alloc.rate:                   531.369 MB/sec
[info]                  ·gc.alloc.rate.norm:              7784.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.178 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9773.463 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.282 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 33.426 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 113397.076 ops/s
[info]                  ·gc.alloc.rate:                   560.822 MB/sec
[info]                  ·gc.alloc.rate.norm:              7784.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.124 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9259.429 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.289 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 113199.643 ops/s
[info]                  ·gc.alloc.rate:                   559.859 MB/sec
[info]                  ·gc.alloc.rate.norm:              7784.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.470 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9280.171 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.579 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala":
[info]   112000.417 ±(99.9%) 9924.479 ops/s [Average]
[info]   (min, avg, max) = (107431.025, 112000.417, 113408.803), stdev = 2577.356
[info]   CI (99.9%): [102075.938, 121924.896] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   553.937 ±(99.9%) 49.018 MB/sec [Average]
[info]   (min, avg, max) = (531.369, 553.937, 560.912), stdev = 12.730
[info]   CI (99.9%): [504.919, 602.955] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   7784.004 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (7784.004, 7784.004, 7784.004), stdev = 0.001
[info]   CI (99.9%): [7784.003, 7784.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   502.669 ±(99.9%) 1112.735 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 502.669, 667.470), stdev = 288.974
[info]   CI (99.9%): [≈ 0, 1615.404] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   7093.162 ±(99.9%) 15756.644 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 7093.162, 9773.463), stdev = 4091.950
[info]   CI (99.9%): [≈ 0, 22849.806] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.469 ±(99.9%) 3.903 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.469, 2.282), stdev = 1.014
[info]   CI (99.9%): [≈ 0, 4.372] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   6.859 ±(99.9%) 57.196 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 6.859, 33.426), stdev = 14.854
[info]   CI (99.9%): [≈ 0, 64.054] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.600, 4.000), stdev = 1.517
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 82.13% complete, ETA 00:23:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 176886.505 ops/s
[info] # Warmup Iteration   2: 194409.699 ops/s
[info] # Warmup Iteration   3: 197859.610 ops/s
[info] # Warmup Iteration   4: 196614.692 ops/s
[info] # Warmup Iteration   5: 194490.204 ops/s
[info] Iteration   1: 194102.966 ops/s
[info]                  ·gc.alloc.rate:                   799.493 MB/sec
[info]                  ·gc.alloc.rate.norm:              6480.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.409 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5458.070 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.338 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 195164.938 ops/s
[info]                  ·gc.alloc.rate:               803.581 MB/sec
[info]                  ·gc.alloc.rate.norm:          6480.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.863 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5425.910 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 196165.586 ops/s
[info]                  ·gc.alloc.rate:                   807.683 MB/sec
[info]                  ·gc.alloc.rate.norm:              6480.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.683 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10796.342 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.334 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 196312.063 ops/s
[info]                  ·gc.alloc.rate:               808.248 MB/sec
[info]                  ·gc.alloc.rate.norm:          6480.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.774 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5393.855 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 193849.741 ops/s
[info]                  ·gc.alloc.rate:                   798.119 MB/sec
[info]                  ·gc.alloc.rate.norm:              6480.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.437 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5467.699 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.169 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala":
[info]   195119.059 ±(99.9%) 4375.268 ops/s [Average]
[info]   (min, avg, max) = (193849.741, 195119.059, 196312.063), stdev = 1136.243
[info]   CI (99.9%): [190743.791, 199494.326] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   803.425 ±(99.9%) 17.754 MB/sec [Average]
[info]   (min, avg, max) = (798.119, 803.425, 808.248), stdev = 4.611
[info]   CI (99.9%): [785.671, 821.179] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   6480.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (6480.002, 6480.002, 6480.002), stdev = 0.001
[info]   CI (99.9%): [6480.002, 6480.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   807.633 ±(99.9%) 1158.193 MB/sec [Average]
[info]   (min, avg, max) = (672.774, 807.633, 1345.683), stdev = 300.779
[info]   CI (99.9%): [≈ 0, 1965.826] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   6508.375 ±(99.9%) 9230.848 B/op [Average]
[info]   (min, avg, max) = (5393.855, 6508.375, 10796.342), stdev = 2397.222
[info]   CI (99.9%): [≈ 0, 15739.223] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.168 ±(99.9%) 0.647 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.168, 0.338), stdev = 0.168
[info]   CI (99.9%): [≈ 0, 0.815] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 82.33% complete, ETA 00:23:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 8069.974 ops/s
[info] # Warmup Iteration   2: 18913.861 ops/s
[info] # Warmup Iteration   3: 19092.261 ops/s
[info] # Warmup Iteration   4: 19168.488 ops/s
[info] # Warmup Iteration   5: 19623.150 ops/s
[info] Iteration   1: 19553.736 ops/s
[info]                  ·gc.alloc.rate:                   1119.409 MB/sec
[info]                  ·gc.alloc.rate.norm:              90080.030 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.564 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     107232.807 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.027 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 19586.315 ops/s
[info]                  ·gc.alloc.rate:                   1121.327 MB/sec
[info]                  ·gc.alloc.rate.norm:              90080.022 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.863 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     107153.752 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.018 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 19667.381 ops/s
[info]                  ·gc.alloc.rate:               1125.816 MB/sec
[info]                  ·gc.alloc.rate.norm:          90080.022 B/op
[info]                  ·gc.churn.PS_Eden_Space:      667.578 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 53415.005 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 19431.893 ops/s
[info]                  ·gc.alloc.rate:                   1112.225 MB/sec
[info]                  ·gc.alloc.rate.norm:              90080.022 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1335.919 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     108197.117 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.686 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 19524.186 ops/s
[info]                  ·gc.alloc.rate:               1117.478 MB/sec
[info]                  ·gc.alloc.rate.norm:          90080.022 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1338.236 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 107875.317 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson":
[info]   19552.702 ±(99.9%) 331.749 ops/s [Average]
[info]   (min, avg, max) = (19431.893, 19552.702, 19667.381), stdev = 86.154
[info]   CI (99.9%): [19220.953, 19884.451] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1119.251 ±(99.9%) 19.247 MB/sec [Average]
[info]   (min, avg, max) = (1112.225, 1119.251, 1125.816), stdev = 4.998
[info]   CI (99.9%): [1100.004, 1138.498] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   90080.024 ±(99.9%) 0.014 B/op [Average]
[info]   (min, avg, max) = (90080.022, 90080.024, 90080.030), stdev = 0.004
[info]   CI (99.9%): [90080.010, 90080.038] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1201.632 ±(99.9%) 1149.621 MB/sec [Average]
[info]   (min, avg, max) = (667.578, 1201.632, 1338.236), stdev = 298.553
[info]   CI (99.9%): [52.011, 2351.252] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   96774.799 ±(99.9%) 93350.425 B/op [Average]
[info]   (min, avg, max) = (53415.005, 96774.799, 108197.117), stdev = 24242.809
[info]   CI (99.9%): [3424.374, 190125.225] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.151] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   2.346 ±(99.9%) 9.773 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.346, 5.027), stdev = 2.538
[info]   CI (99.9%): [≈ 0, 12.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 82.53% complete, ETA 00:23:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 79968.837 ops/s
[info] # Warmup Iteration   2: 148579.887 ops/s
[info] # Warmup Iteration   3: 148424.634 ops/s
[info] # Warmup Iteration   4: 148828.337 ops/s
[info] # Warmup Iteration   5: 149605.516 ops/s
[info] Iteration   1: 149392.246 ops/s
[info]                  ·gc.alloc.rate:                   1019.066 MB/sec
[info]                  ·gc.alloc.rate.norm:              10736.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.611 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14049.789 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.439 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 149034.736 ops/s
[info]                  ·gc.alloc.rate:               1016.635 MB/sec
[info]                  ·gc.alloc.rate.norm:          10736.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      666.813 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 7041.766 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 149200.221 ops/s
[info]                  ·gc.alloc.rate:                   1017.761 MB/sec
[info]                  ·gc.alloc.rate.norm:              10736.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.617 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14078.406 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.439 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 149525.079 ops/s
[info]                  ·gc.alloc.rate:                   1019.966 MB/sec
[info]                  ·gc.alloc.rate.norm:              10736.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.814 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7029.305 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.438 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 149009.006 ops/s
[info]                  ·gc.alloc.rate:                   1016.403 MB/sec
[info]                  ·gc.alloc.rate.norm:              10736.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.858 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14120.885 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.220 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala":
[info]   149232.257 ±(99.9%) 863.659 ops/s [Average]
[info]   (min, avg, max) = (149009.006, 149232.257, 149525.079), stdev = 224.290
[info]   CI (99.9%): [148368.598, 150095.917] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1017.966 ±(99.9%) 5.924 MB/sec [Average]
[info]   (min, avg, max) = (1016.403, 1017.966, 1019.966), stdev = 1.538
[info]   CI (99.9%): [1012.043, 1023.890] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   10736.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10736.003, 10736.003, 10736.003), stdev = 0.001
[info]   CI (99.9%): [10736.003, 10736.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1067.943 ±(99.9%) 1408.276 MB/sec [Average]
[info]   (min, avg, max) = (666.813, 1067.943, 1336.858), stdev = 365.725
[info]   CI (99.9%): [≈ 0, 2476.219] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   11264.030 ±(99.9%) 14864.083 B/op [Average]
[info]   (min, avg, max) = (7029.305, 11264.030, 14120.885), stdev = 3860.155
[info]   CI (99.9%): [≈ 0, 26128.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.307 ±(99.9%) 0.755 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.307, 0.439), stdev = 0.196
[info]   CI (99.9%): [≈ 0, 1.062] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 82.73% complete, ETA 00:23:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 534192.079 ops/s
[info] # Warmup Iteration   2: 571730.516 ops/s
[info] # Warmup Iteration   3: 569291.367 ops/s
[info] # Warmup Iteration   4: 569286.796 ops/s
[info] # Warmup Iteration   5: 571762.072 ops/s
[info] Iteration   1: 571517.820 ops/s
[info]                  ·gc.alloc.rate:                   636.504 MB/sec
[info]                  ·gc.alloc.rate.norm:              1752.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.436 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1853.658 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.564 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.306 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 571001.380 ops/s
[info]                  ·gc.alloc.rate:                   635.694 MB/sec
[info]                  ·gc.alloc.rate.norm:              1752.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.191 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1855.346 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.057 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 572483.185 ops/s
[info]                  ·gc.alloc.rate:                   637.281 MB/sec
[info]                  ·gc.alloc.rate.norm:              1752.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.828 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1849.725 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.057 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 572413.935 ops/s
[info]                  ·gc.alloc.rate:               637.199 MB/sec
[info]                  ·gc.alloc.rate.norm:          1752.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.823 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1849.948 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 571063.092 ops/s
[info]                  ·gc.alloc.rate:      635.680 MB/sec
[info]                  ·gc.alloc.rate.norm: 1752.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala":
[info]   571695.882 ±(99.9%) 2756.580 ops/s [Average]
[info]   (min, avg, max) = (571001.380, 571695.882, 572483.185), stdev = 715.875
[info]   CI (99.9%): [568939.303, 574452.462] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   636.472 ±(99.9%) 2.994 MB/sec [Average]
[info]   (min, avg, max) = (635.680, 636.472, 637.281), stdev = 0.777
[info]   CI (99.9%): [633.478, 639.465] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1752.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1752.001, 1752.001, 1752.001), stdev = 0.001
[info]   CI (99.9%): [1752.001, 1752.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   538.456 ±(99.9%) 1159.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 538.456, 673.436), stdev = 301.006
[info]   CI (99.9%): [≈ 0, 1697.522] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1481.735 ±(99.9%) 3189.560 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1481.735, 1855.346), stdev = 828.319
[info]   CI (99.9%): [≈ 0, 4671.295] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.321 ±(99.9%) 2.676 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.321, 1.564), stdev = 0.695
[info]   CI (99.9%): [≈ 0, 2.997] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.884 ±(99.9%) 7.366 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.884, 4.306), stdev = 1.913
[info]   CI (99.9%): [≈ 0, 8.250] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 0.707
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 82.93% complete, ETA 00:22:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 544482.827 ops/s
[info] # Warmup Iteration   2: 551670.919 ops/s
[info] # Warmup Iteration   3: 581430.657 ops/s
[info] # Warmup Iteration   4: 585930.164 ops/s
[info] # Warmup Iteration   5: 583009.698 ops/s
[info] Iteration   1: 583894.620 ops/s
[info]                  ·gc.alloc.rate:      11.872 MB/sec
[info]                  ·gc.alloc.rate.norm: 32.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 582235.537 ops/s
[info]                  ·gc.alloc.rate:      11.839 MB/sec
[info]                  ·gc.alloc.rate.norm: 32.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 586155.644 ops/s
[info]                  ·gc.alloc.rate:      11.918 MB/sec
[info]                  ·gc.alloc.rate.norm: 32.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 586135.124 ops/s
[info]                  ·gc.alloc.rate:      11.917 MB/sec
[info]                  ·gc.alloc.rate.norm: 32.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 584547.831 ops/s
[info]                  ·gc.alloc.rate:      11.884 MB/sec
[info]                  ·gc.alloc.rate.norm: 32.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   584593.751 ±(99.9%) 6346.967 ops/s [Average]
[info]   (min, avg, max) = (582235.537, 584593.751, 586155.644), stdev = 1648.287
[info]   CI (99.9%): [578246.784, 590940.719] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   11.886 ±(99.9%) 0.128 MB/sec [Average]
[info]   (min, avg, max) = (11.839, 11.886, 11.918), stdev = 0.033
[info]   CI (99.9%): [11.758, 12.014] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   32.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (32.001, 32.001, 32.001), stdev = 0.001
[info]   CI (99.9%): [32.001, 32.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 83.13% complete, ETA 00:22:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 11442.573 ops/s
[info] # Warmup Iteration   2: 19406.986 ops/s
[info] # Warmup Iteration   3: 20086.635 ops/s
[info] # Warmup Iteration   4: 20095.447 ops/s
[info] # Warmup Iteration   5: 20144.034 ops/s
[info] Iteration   1: 20031.681 ops/s
[info]                  ·gc.alloc.rate:               418.410 MB/sec
[info]                  ·gc.alloc.rate.norm:          32872.030 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.646 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 40196.984 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 19918.547 ops/s
[info]                  ·gc.alloc.rate:               416.033 MB/sec
[info]                  ·gc.alloc.rate.norm:          32872.023 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.624 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 40424.997 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 19943.756 ops/s
[info]                  ·gc.alloc.rate:                   416.559 MB/sec
[info]                  ·gc.alloc.rate.norm:              32872.022 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.604 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     40372.305 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.015 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.177 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 19966.026 ops/s
[info]                  ·gc.alloc.rate:      416.997 MB/sec
[info]                  ·gc.alloc.rate.norm: 32872.022 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 19925.665 ops/s
[info]                  ·gc.alloc.rate:                   416.171 MB/sec
[info]                  ·gc.alloc.rate.norm:              32872.022 B/op
[info]                  ·gc.churn.PS_Eden_Space:          666.397 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     52636.611 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.333 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 184.313 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson":
[info]   19957.135 ±(99.9%) 175.347 ops/s [Average]
[info]   (min, avg, max) = (19918.547, 19957.135, 20031.681), stdev = 45.537
[info]   CI (99.9%): [19781.787, 20132.482] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.alloc.rate":
[info]   416.834 ±(99.9%) 3.688 MB/sec [Average]
[info]   (min, avg, max) = (416.033, 416.834, 418.410), stdev = 0.958
[info]   CI (99.9%): [413.146, 420.522] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   32872.024 ±(99.9%) 0.013 B/op [Average]
[info]   (min, avg, max) = (32872.022, 32872.024, 32872.030), stdev = 0.003
[info]   CI (99.9%): [32872.010, 32872.037] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   440.254 ±(99.9%) 982.189 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 440.254, 666.397), stdev = 255.071
[info]   CI (99.9%): [≈ 0, 1422.443] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   34726.179 ±(99.9%) 77516.055 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 34726.179, 52636.611), stdev = 20130.673
[info]   CI (99.9%): [≈ 0, 112242.234] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.470 ±(99.9%) 4.012 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.470, 2.333), stdev = 1.042
[info]   CI (99.9%): [≈ 0, 4.482] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   37.098 ±(99.9%) 316.897 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 37.098, 184.313), stdev = 82.297
[info]   CI (99.9%): [≈ 0, 353.995] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.200, 3.000), stdev = 1.304
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 83.33% complete, ETA 00:22:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 58781.404 ops/s
[info] # Warmup Iteration   2: 72272.133 ops/s
[info] # Warmup Iteration   3: 73941.544 ops/s
[info] # Warmup Iteration   4: 75357.442 ops/s
[info] # Warmup Iteration   5: 75118.273 ops/s
[info] Iteration   1: 75245.512 ops/s
[info]                  ·gc.alloc.rate:               1386.153 MB/sec
[info]                  ·gc.alloc.rate.norm:          28992.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1344.946 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 28130.148 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 74491.974 ops/s
[info]                  ·gc.alloc.rate:                   1372.284 MB/sec
[info]                  ·gc.alloc.rate.norm:              28992.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.072 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28438.226 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.440 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 74278.406 ops/s
[info]                  ·gc.alloc.rate:               1368.518 MB/sec
[info]                  ·gc.alloc.rate.norm:          28992.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1347.226 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 28540.938 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 75543.167 ops/s
[info]                  ·gc.alloc.rate:                   1391.592 MB/sec
[info]                  ·gc.alloc.rate.norm:              28992.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.562 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28095.531 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.301 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 75374.333 ops/s
[info]                  ·gc.alloc.rate:               1388.512 MB/sec
[info]                  ·gc.alloc.rate.norm:          28992.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1350.206 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 28192.163 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce":
[info]   74986.678 ±(99.9%) 2172.572 ops/s [Average]
[info]   (min, avg, max) = (74278.406, 74986.678, 75543.167), stdev = 564.210
[info]   CI (99.9%): [72814.106, 77159.251] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:·gc.alloc.rate":
[info]   1381.412 ±(99.9%) 39.744 MB/sec [Average]
[info]   (min, avg, max) = (1368.518, 1381.412, 1391.592), stdev = 10.321
[info]   CI (99.9%): [1341.668, 1421.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   28992.006 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (28992.006, 28992.006, 28992.006), stdev = 0.001
[info]   CI (99.9%): [28992.005, 28992.007] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1347.402 ±(99.9%) 7.947 MB/sec [Average]
[info]   (min, avg, max) = (1344.946, 1347.402, 1350.206), stdev = 2.064
[info]   CI (99.9%): [1339.455, 1355.349] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   28279.401 ±(99.9%) 763.657 B/op [Average]
[info]   (min, avg, max) = (28095.531, 28279.401, 28540.938), stdev = 198.319
[info]   CI (99.9%): [27515.744, 29043.058] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.348 ±(99.9%) 2.178 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.348, 1.301), stdev = 0.566
[info]   CI (99.9%): [≈ 0, 2.526] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 83.53% complete, ETA 00:21:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 82000.030 ops/s
[info] # Warmup Iteration   2: 141841.724 ops/s
[info] # Warmup Iteration   3: 149485.171 ops/s
[info] # Warmup Iteration   4: 149263.853 ops/s
[info] # Warmup Iteration   5: 150150.251 ops/s
[info] Iteration   1: 147066.898 ops/s
[info]                  ·gc.alloc.rate:                   628.687 MB/sec
[info]                  ·gc.alloc.rate.norm:              6728.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.585 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5474.811 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.004 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.048 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 147230.034 ops/s
[info]                  ·gc.alloc.rate:                   629.369 MB/sec
[info]                  ·gc.alloc.rate.norm:              6728.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.100 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7131.354 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.261 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 24.168 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 147180.105 ops/s
[info]                  ·gc.alloc.rate:                   629.219 MB/sec
[info]                  ·gc.alloc.rate.norm:              6728.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.172 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7133.824 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.445 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 149715.871 ops/s
[info]                  ·gc.alloc.rate:               639.989 MB/sec
[info]                  ·gc.alloc.rate.norm:          6728.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      666.780 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 7009.647 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 150024.193 ops/s
[info]                  ·gc.alloc.rate:                   641.309 MB/sec
[info]                  ·gc.alloc.rate.norm:              6728.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          666.780 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6995.212 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.092 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala":
[info]   148243.420 ±(99.9%) 5737.673 ops/s [Average]
[info]   (min, avg, max) = (147066.898, 148243.420, 150024.193), stdev = 1490.055
[info]   CI (99.9%): [142505.747, 153981.093] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   633.715 ±(99.9%) 24.461 MB/sec [Average]
[info]   (min, avg, max) = (628.687, 633.715, 641.309), stdev = 6.353
[info]   CI (99.9%): [609.253, 658.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   6728.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (6728.003, 6728.003, 6728.003), stdev = 0.001
[info]   CI (99.9%): [6728.003, 6728.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   635.883 ±(99.9%) 267.562 MB/sec [Average]
[info]   (min, avg, max) = (511.585, 635.883, 667.172), stdev = 69.485
[info]   CI (99.9%): [368.321, 903.446] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   6748.970 ±(99.9%) 2754.219 B/op [Average]
[info]   (min, avg, max) = (5474.811, 6748.970, 7133.824), stdev = 715.262
[info]   CI (99.9%): [3994.750, 9503.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.482 ±(99.9%) 3.832 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.482, 2.261), stdev = 0.995
[info]   CI (99.9%): [≈ 0, 4.314] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   5.151 ±(99.9%) 40.970 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 5.151, 24.168), stdev = 10.640
[info]   CI (99.9%): [≈ 0, 46.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 3.000), stdev = 1.095
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 83.73% complete, ETA 00:21:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 205762.553 ops/s
[info] # Warmup Iteration   2: 216715.559 ops/s
[info] # Warmup Iteration   3: 220089.746 ops/s
[info] # Warmup Iteration   4: 222480.830 ops/s
[info] # Warmup Iteration   5: 224175.003 ops/s
[info] Iteration   1: 224607.295 ops/s
[info]                  ·gc.alloc.rate:                   800.588 MB/sec
[info]                  ·gc.alloc.rate.norm:              5608.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.691 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4719.110 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.438 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   2: 224869.797 ops/s
[info]                  ·gc.alloc.rate:               801.373 MB/sec
[info]                  ·gc.alloc.rate.norm:          5608.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.900 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4708.950 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 225138.299 ops/s
[info]                  ·gc.alloc.rate:                   802.424 MB/sec
[info]                  ·gc.alloc.rate.norm:              5608.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.971 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4703.283 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.291 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 225212.001 ops/s
[info]                  ·gc.alloc.rate:                   802.488 MB/sec
[info]                  ·gc.alloc.rate.norm:              5608.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.275 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9408.131 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.291 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 224959.006 ops/s
[info]                  ·gc.alloc.rate:               801.569 MB/sec
[info]                  ·gc.alloc.rate.norm:          5608.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.450 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4711.643 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala":
[info]   224957.280 ±(99.9%) 918.919 ops/s [Average]
[info]   (min, avg, max) = (224607.295, 224957.280, 225212.001), stdev = 238.640
[info]   CI (99.9%): [224038.361, 225876.198] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   801.688 ±(99.9%) 3.047 MB/sec [Average]
[info]   (min, avg, max) = (800.588, 801.688, 802.488), stdev = 0.791
[info]   CI (99.9%): [798.641, 804.736] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   5608.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5608.002, 5608.002, 5608.002), stdev = 0.001
[info]   CI (99.9%): [5608.002, 5608.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   807.858 ±(99.9%) 1158.986 MB/sec [Average]
[info]   (min, avg, max) = (672.900, 807.858, 1346.275), stdev = 300.985
[info]   CI (99.9%): [≈ 0, 1966.843] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   5650.224 ±(99.9%) 8089.209 B/op [Average]
[info]   (min, avg, max) = (4703.283, 5650.224, 9408.131), stdev = 2100.742
[info]   CI (99.9%): [≈ 0, 13739.432] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.108 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.137] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.204 ±(99.9%) 0.753 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.204, 0.438), stdev = 0.196
[info]   CI (99.9%): [≈ 0, 0.957] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 0.707
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 83.94% complete, ETA 00:21:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 26653.163 ops/s
[info] # Warmup Iteration   2: 41206.244 ops/s
[info] # Warmup Iteration   3: 41030.262 ops/s
[info] # Warmup Iteration   4: 41642.690 ops/s
[info] # Warmup Iteration   5: 41610.967 ops/s
[info] Iteration   1: 41619.752 ops/s
[info]                  ·gc.alloc.rate:                   1674.717 MB/sec
[info]                  ·gc.alloc.rate.norm:              63328.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.924 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     50668.075 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.787 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 41045.962 ops/s
[info]                  ·gc.alloc.rate:                   1651.950 MB/sec
[info]                  ·gc.alloc.rate.norm:              63328.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2013.162 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     77175.173 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.789 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 41724.669 ops/s
[info]                  ·gc.alloc.rate:                   1678.949 MB/sec
[info]                  ·gc.alloc.rate.norm:              63328.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.925 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     50729.038 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.141 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 41727.085 ops/s
[info]                  ·gc.alloc.rate:               1678.983 MB/sec
[info]                  ·gc.alloc.rate.norm:          63328.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2020.378 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 76204.797 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 41730.627 ops/s
[info]                  ·gc.alloc.rate:                   1679.068 MB/sec
[info]                  ·gc.alloc.rate.norm:              63328.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.157 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     50885.040 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.355 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson":
[info]   41569.619 ±(99.9%) 1141.457 ops/s [Average]
[info]   (min, avg, max) = (41045.962, 41569.619, 41730.627), stdev = 296.433
[info]   CI (99.9%): [40428.162, 42711.076] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1672.733 ±(99.9%) 45.304 MB/sec [Average]
[info]   (min, avg, max) = (1651.950, 1672.733, 1679.068), stdev = 11.765
[info]   CI (99.9%): [1627.429, 1718.038] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   63328.010 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (63328.010, 63328.010, 63328.011), stdev = 0.001
[info]   CI (99.9%): [63328.010, 63328.011] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1613.509 ±(99.9%) 1417.608 MB/sec [Average]
[info]   (min, avg, max) = (1339.924, 1613.509, 2020.378), stdev = 368.148
[info]   CI (99.9%): [195.901, 3031.117] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   61132.425 ±(99.9%) 54703.820 B/op [Average]
[info]   (min, avg, max) = (50668.075, 61132.425, 77175.173), stdev = 14206.408
[info]   CI (99.9%): [6428.605, 115836.245] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.191 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.058, 0.125), stdev = 0.050
[info]   CI (99.9%): [≈ 0, 0.250] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   2.214 ±(99.9%) 7.318 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.214, 4.789), stdev = 1.901
[info]   CI (99.9%): [≈ 0, 9.533] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 84.14% complete, ETA 00:21:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 85375.193 ops/s
[info] # Warmup Iteration   2: 95707.183 ops/s
[info] # Warmup Iteration   3: 96489.608 ops/s
[info] # Warmup Iteration   4: 96874.921 ops/s
[info] # Warmup Iteration   5: 96858.278 ops/s
[info] Iteration   1: 97090.435 ops/s
[info]                  ·gc.alloc.rate:                   1231.008 MB/sec
[info]                  ·gc.alloc.rate.norm:              19952.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.129 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21834.085 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.337 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 95198.465 ops/s
[info]                  ·gc.alloc.rate:                   1207.107 MB/sec
[info]                  ·gc.alloc.rate.norm:              19952.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.527 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22289.508 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.377 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 95326.143 ops/s
[info]                  ·gc.alloc.rate:               1208.662 MB/sec
[info]                  ·gc.alloc.rate.norm:          19952.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:      674.247 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 11130.142 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 97747.816 ops/s
[info]                  ·gc.alloc.rate:                   1239.169 MB/sec
[info]                  ·gc.alloc.rate.norm:              19952.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.932 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21719.308 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.006 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 97651.543 ops/s
[info]                  ·gc.alloc.rate:                   1237.996 MB/sec
[info]                  ·gc.alloc.rate.norm:              19952.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.216 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21760.569 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.335 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readUPickle":
[info]   96602.880 ±(99.9%) 4813.582 ops/s [Average]
[info]   (min, avg, max) = (95198.465, 96602.880, 97747.816), stdev = 1250.072
[info]   CI (99.9%): [91789.298, 101416.463] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readUPickle:·gc.alloc.rate":
[info]   1224.789 ±(99.9%) 60.659 MB/sec [Average]
[info]   (min, avg, max) = (1207.107, 1224.789, 1239.169), stdev = 15.753
[info]   CI (99.9%): [1164.130, 1285.447] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readUPickle:·gc.alloc.rate.norm":
[info]   19952.005 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (19952.004, 19952.005, 19952.005), stdev = 0.001
[info]   CI (99.9%): [19952.004, 19952.005] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readUPickle:·gc.churn.PS_Eden_Space":
[info]   1213.810 ±(99.9%) 1161.458 MB/sec [Average]
[info]   (min, avg, max) = (674.247, 1213.810, 1350.216), stdev = 301.627
[info]   CI (99.9%): [52.352, 2375.268] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   19746.722 ±(99.9%) 18568.626 B/op [Average]
[info]   (min, avg, max) = (11130.142, 19746.722, 22289.508), stdev = 4822.213
[info]   CI (99.9%): [1178.096, 38315.349] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.083), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.169] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   0.611 ±(99.9%) 2.166 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.611, 1.377), stdev = 0.563
[info]   CI (99.9%): [≈ 0, 2.777] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readUPickle:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readUPickle:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 84.34% complete, ETA 00:20:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 168854.711 ops/s
[info] # Warmup Iteration   2: 218900.138 ops/s
[info] # Warmup Iteration   3: 221981.125 ops/s
[info] # Warmup Iteration   4: 219169.160 ops/s
[info] # Warmup Iteration   5: 220686.060 ops/s
[info] Iteration   1: 222084.845 ops/s
[info]                  ·gc.alloc.rate:                   1517.204 MB/sec
[info]                  ·gc.alloc.rate.norm:              10752.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.617 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9507.661 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.295 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 217781.545 ops/s
[info]                  ·gc.alloc.rate:                   1488.368 MB/sec
[info]                  ·gc.alloc.rate.norm:              10752.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.098 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9709.795 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.301 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 221897.093 ops/s
[info]                  ·gc.alloc.rate:               1515.850 MB/sec
[info]                  ·gc.alloc.rate.norm:          10752.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1344.867 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 9539.210 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 221453.895 ops/s
[info]                  ·gc.alloc.rate:                   1512.862 MB/sec
[info]                  ·gc.alloc.rate.norm:              10752.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2021.311 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14365.579 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.592 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 221900.669 ops/s
[info]                  ·gc.alloc.rate:                   1515.871 MB/sec
[info]                  ·gc.alloc.rate.norm:              10752.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.530 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9572.153 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.148 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce":
[info]   221023.609 ±(99.9%) 7035.875 ops/s [Average]
[info]   (min, avg, max) = (217781.545, 221023.609, 222084.845), stdev = 1827.194
[info]   CI (99.9%): [213987.735, 228059.484] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1510.031 ±(99.9%) 47.032 MB/sec [Average]
[info]   (min, avg, max) = (1488.368, 1510.031, 1517.204), stdev = 12.214
[info]   CI (99.9%): [1462.999, 1557.063] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   10752.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10752.002, 10752.002, 10752.002), stdev = 0.001
[info]   CI (99.9%): [10752.002, 10752.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1480.284 ±(99.9%) 1164.652 MB/sec [Average]
[info]   (min, avg, max) = (1341.617, 1480.284, 2021.311), stdev = 302.457
[info]   CI (99.9%): [315.632, 2644.937] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   10538.879 ±(99.9%) 8242.609 B/op [Average]
[info]   (min, avg, max) = (9507.661, 10538.879, 14365.579), stdev = 2140.579
[info]   CI (99.9%): [2296.270, 18781.489] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.119 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.083), stdev = 0.031
[info]   CI (99.9%): [≈ 0, 0.156] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.267 ±(99.9%) 0.846 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.267, 0.592), stdev = 0.220
[info]   CI (99.9%): [≈ 0, 1.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 3.000), stdev = 0.707
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 84.54% complete, ETA 00:20:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 330746.635 ops/s
[info] # Warmup Iteration   2: 517315.798 ops/s
[info] # Warmup Iteration   3: 521847.843 ops/s
[info] # Warmup Iteration   4: 521731.350 ops/s
[info] # Warmup Iteration   5: 520668.531 ops/s
[info] Iteration   1: 528642.597 ops/s
[info]                  ·gc.alloc.rate:      429.949 MB/sec
[info]                  ·gc.alloc.rate.norm: 1280.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 522858.818 ops/s
[info]                  ·gc.alloc.rate:               425.281 MB/sec
[info]                  ·gc.alloc.rate.norm:          1280.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.666 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1540.001 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 517336.785 ops/s
[info]                  ·gc.alloc.rate:                   420.791 MB/sec
[info]                  ·gc.alloc.rate.norm:              1280.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.669 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1556.442 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 523859.747 ops/s
[info]                  ·gc.alloc.rate:                   426.100 MB/sec
[info]                  ·gc.alloc.rate.norm:              1280.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          666.558 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2002.337 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.344 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.043 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 514148.803 ops/s
[info]                  ·gc.alloc.rate:      418.132 MB/sec
[info]                  ·gc.alloc.rate.norm: 1280.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala":
[info]   521369.350 ±(99.9%) 21928.276 ops/s [Average]
[info]   (min, avg, max) = (514148.803, 521369.350, 528642.597), stdev = 5694.704
[info]   CI (99.9%): [499441.074, 543297.626] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   424.050 ±(99.9%) 17.871 MB/sec [Average]
[info]   (min, avg, max) = (418.132, 424.050, 429.949), stdev = 4.641
[info]   CI (99.9%): [406.180, 441.921] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1280.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1280.001, 1280.001, 1280.001), stdev = 0.001
[info]   CI (99.9%): [1280.001, 1280.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   337.979 ±(99.9%) 1212.738 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 337.979, 666.558), stdev = 314.944
[info]   CI (99.9%): [≈ 0, 1550.716] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1019.756 ±(99.9%) 3655.048 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1019.756, 2002.337), stdev = 949.204
[info]   CI (99.9%): [≈ 0, 4674.804] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.471 ±(99.9%) 4.033 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.471, 2.344), stdev = 1.047
[info]   CI (99.9%): [≈ 0, 4.504] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.415 ±(99.9%) 12.114 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.415, 7.043), stdev = 3.146
[info]   CI (99.9%): [≈ 0, 13.529] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.800, 3.000), stdev = 1.643
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 84.74% complete, ETA 00:20:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 637501.679 ops/s
[info] # Warmup Iteration   2: 649916.885 ops/s
[info] # Warmup Iteration   3: 676914.588 ops/s
[info] # Warmup Iteration   4: 675930.223 ops/s
[info] # Warmup Iteration   5: 678237.242 ops/s
[info] Iteration   1: 666749.914 ops/s
[info]                  ·gc.alloc.rate:               359.255 MB/sec
[info]                  ·gc.alloc.rate.norm:          848.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.637 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1207.689 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 656762.526 ops/s
[info]                  ·gc.alloc.rate:               353.883 MB/sec
[info]                  ·gc.alloc.rate.norm:          848.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.655 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1226.065 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 655965.111 ops/s
[info]                  ·gc.alloc.rate:      353.531 MB/sec
[info]                  ·gc.alloc.rate.norm: 848.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 672461.819 ops/s
[info]                  ·gc.alloc.rate:                   362.369 MB/sec
[info]                  ·gc.alloc.rate.norm:              848.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.673 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1197.396 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.052 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.122 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 679386.177 ops/s
[info]                  ·gc.alloc.rate:      366.052 MB/sec
[info]                  ·gc.alloc.rate.norm: 848.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala":
[info]   666265.109 ±(99.9%) 38850.771 ops/s [Average]
[info]   (min, avg, max) = (655965.111, 666265.109, 679386.177), stdev = 10089.422
[info]   CI (99.9%): [627414.339, 705115.880] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   359.018 ±(99.9%) 20.846 MB/sec [Average]
[info]   (min, avg, max) = (353.531, 359.018, 366.052), stdev = 5.414
[info]   CI (99.9%): [338.172, 379.864] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   848.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (848.001, 848.001, 848.001), stdev = 0.001
[info]   CI (99.9%): [848.001, 848.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   306.993 ±(99.9%) 1079.124 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 306.993, 511.673), stdev = 280.245
[info]   CI (99.9%): [≈ 0, 1386.117] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   726.230 ±(99.9%) 2553.107 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 726.230, 1226.065), stdev = 663.034
[info]   CI (99.9%): [≈ 0, 3279.337] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.010 ±(99.9%) 0.090 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.010, 0.052), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.100] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.024 ±(99.9%) 0.210 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.024, 0.122), stdev = 0.054
[info]   CI (99.9%): [≈ 0, 0.234] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 3.000), stdev = 1.304
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 84.94% complete, ETA 00:20:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 644469.482 ops/s
[info] # Warmup Iteration   2: 684457.568 ops/s
[info] # Warmup Iteration   3: 688698.064 ops/s
[info] # Warmup Iteration   4: 688694.232 ops/s
[info] # Warmup Iteration   5: 686874.409 ops/s
[info] Iteration   1: 687920.492 ops/s
[info]                  ·gc.alloc.rate:      6.994 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 686293.121 ops/s
[info]                  ·gc.alloc.rate:      6.977 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 688487.907 ops/s
[info]                  ·gc.alloc.rate:      6.999 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 684161.493 ops/s
[info]                  ·gc.alloc.rate:      6.955 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 688898.144 ops/s
[info]                  ·gc.alloc.rate:      7.003 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc":
[info]   687152.231 ±(99.9%) 7482.805 ops/s [Average]
[info]   (min, avg, max) = (684161.493, 687152.231, 688898.144), stdev = 1943.261
[info]   CI (99.9%): [679669.426, 694635.036] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   6.986 ±(99.9%) 0.076 MB/sec [Average]
[info]   (min, avg, max) = (6.955, 6.986, 7.003), stdev = 0.020
[info]   CI (99.9%): [6.910, 7.062] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   16.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (16.001, 16.001, 16.001), stdev = 0.001
[info]   CI (99.9%): [16.001, 16.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 85.14% complete, ETA 00:19:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 22475.709 ops/s
[info] # Warmup Iteration   2: 30974.303 ops/s
[info] # Warmup Iteration   3: 31169.178 ops/s
[info] # Warmup Iteration   4: 31401.095 ops/s
[info] # Warmup Iteration   5: 31272.819 ops/s
[info] Iteration   1: 31167.320 ops/s
[info]                  ·gc.alloc.rate:                   1644.150 MB/sec
[info]                  ·gc.alloc.rate.norm:              83024.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.920 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     67711.914 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.102 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 31108.615 ops/s
[info]                  ·gc.alloc.rate:                   1641.070 MB/sec
[info]                  ·gc.alloc.rate.norm:              83024.015 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2014.416 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     101912.124 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.319 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 31142.225 ops/s
[info]                  ·gc.alloc.rate:               1642.899 MB/sec
[info]                  ·gc.alloc.rate.norm:          83024.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1344.972 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 67968.247 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 31192.823 ops/s
[info]                  ·gc.alloc.rate:                   1645.454 MB/sec
[info]                  ·gc.alloc.rate.norm:              83024.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.569 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     67993.758 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.101 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 31468.668 ops/s
[info]                  ·gc.alloc.rate:                   1660.066 MB/sec
[info]                  ·gc.alloc.rate.norm:              83024.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2024.354 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     101242.969 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.082 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson":
[info]   31215.930 ±(99.9%) 557.089 ops/s [Average]
[info]   (min, avg, max) = (31108.615, 31215.930, 31468.668), stdev = 144.674
[info]   CI (99.9%): [30658.842, 31773.019] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1646.728 ±(99.9%) 29.379 MB/sec [Average]
[info]   (min, avg, max) = (1641.070, 1646.728, 1660.066), stdev = 7.630
[info]   CI (99.9%): [1617.348, 1676.107] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   83024.014 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (83024.014, 83024.014, 83024.015), stdev = 0.001
[info]   CI (99.9%): [83024.012, 83024.016] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1614.446 ±(99.9%) 1423.511 MB/sec [Average]
[info]   (min, avg, max) = (1340.920, 1614.446, 2024.354), stdev = 369.681
[info]   CI (99.9%): [190.936, 3037.957] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   81365.802 ±(99.9%) 71054.238 B/op [Average]
[info]   (min, avg, max) = (67711.914, 81365.802, 101912.124), stdev = 18452.560
[info]   CI (99.9%): [10311.565, 152420.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.176 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.125), stdev = 0.046
[info]   CI (99.9%): [≈ 0, 0.226] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   2.521 ±(99.9%) 8.891 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.521, 6.319), stdev = 2.309
[info]   CI (99.9%): [≈ 0, 11.412] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.200, 3.000), stdev = 0.837
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 85.34% complete, ETA 00:19:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 104693.425 ops/s
[info] # Warmup Iteration   2: 113781.353 ops/s
[info] # Warmup Iteration   3: 114171.824 ops/s
[info] # Warmup Iteration   4: 113692.917 ops/s
[info] # Warmup Iteration   5: 114389.885 ops/s
[info] Iteration   1: 109808.762 ops/s
[info]                  ·gc.alloc.rate:               1452.036 MB/sec
[info]                  ·gc.alloc.rate.norm:          20808.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1348.541 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 19324.894 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 114615.888 ops/s
[info]                  ·gc.alloc.rate:                   1515.841 MB/sec
[info]                  ·gc.alloc.rate.norm:              20808.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.346 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18522.522 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.858 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 114528.933 ops/s
[info]                  ·gc.alloc.rate:                   1514.400 MB/sec
[info]                  ·gc.alloc.rate.norm:              20808.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2025.384 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27828.985 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.144 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 114477.886 ops/s
[info]                  ·gc.alloc.rate:                   1513.600 MB/sec
[info]                  ·gc.alloc.rate.norm:              20808.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1351.699 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18582.290 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.286 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 111304.800 ops/s
[info]                  ·gc.alloc.rate:                   1471.513 MB/sec
[info]                  ·gc.alloc.rate.norm:              20808.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.854 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19130.095 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.294 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeUPickle":
[info]   112947.254 ±(99.9%) 8648.248 ops/s [Average]
[info]   (min, avg, max) = (109808.762, 112947.254, 114615.888), stdev = 2245.923
[info]   CI (99.9%): [104299.006, 121595.502] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeUPickle:·gc.alloc.rate":
[info]   1493.478 ±(99.9%) 114.595 MB/sec [Average]
[info]   (min, avg, max) = (1452.036, 1493.478, 1515.841), stdev = 29.760
[info]   CI (99.9%): [1378.883, 1608.073] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeUPickle:·gc.alloc.rate.norm":
[info]   20808.004 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (20808.004, 20808.004, 20808.004), stdev = 0.001
[info]   CI (99.9%): [20808.003, 20808.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space":
[info]   1485.565 ±(99.9%) 1162.022 MB/sec [Average]
[info]   (min, avg, max) = (1348.541, 1485.565, 2025.384), stdev = 301.773
[info]   CI (99.9%): [323.543, 2647.586] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   20677.757 ±(99.9%) 15450.822 B/op [Average]
[info]   (min, avg, max) = (18522.522, 20677.757, 27828.985), stdev = 4012.529
[info]   CI (99.9%): [5226.935, 36128.579] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.083), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.169] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   0.516 ±(99.9%) 1.806 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.516, 1.144), stdev = 0.469
[info]   CI (99.9%): [≈ 0, 2.322] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeUPickle:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeUPickle:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 3.000), stdev = 0.837
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 85.54% complete, ETA 00:19:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 47320.033 ops/s
[info] # Warmup Iteration   2: 61828.485 ops/s
[info] # Warmup Iteration   3: 60643.816 ops/s
[info] # Warmup Iteration   4: 61901.847 ops/s
[info] # Warmup Iteration   5: 62971.586 ops/s
[info] Iteration   1: 62181.402 ops/s
[info]                  ·gc.alloc.rate:                   2847.445 MB/sec
[info]                  ·gc.alloc.rate.norm:              72072.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2701.417 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     68375.862 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.108 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 63126.007 ops/s
[info]                  ·gc.alloc.rate:                   2892.095 MB/sec
[info]                  ·gc.alloc.rate.norm:              72072.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3386.349 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     84388.993 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.595 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 62849.398 ops/s
[info]                  ·gc.alloc.rate:                   2878.160 MB/sec
[info]                  ·gc.alloc.rate.norm:              72072.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2713.327 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     67944.415 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.607 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 61676.247 ops/s
[info]                  ·gc.alloc.rate:                   2824.178 MB/sec
[info]                  ·gc.alloc.rate.norm:              72072.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2716.396 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     69321.438 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.656 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 61940.295 ops/s
[info]                  ·gc.alloc.rate:               2836.336 MB/sec
[info]                  ·gc.alloc.rate.norm:          72072.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2719.041 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 69091.495 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.readCirce":
[info]   62354.670 ±(99.9%) 2359.367 ops/s [Average]
[info]   (min, avg, max) = (61676.247, 62354.670, 63126.007), stdev = 612.720
[info]   CI (99.9%): [59995.303, 64714.037] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.readCirce:·gc.alloc.rate":
[info]   2855.643 ±(99.9%) 110.026 MB/sec [Average]
[info]   (min, avg, max) = (2824.178, 2855.643, 2892.095), stdev = 28.573
[info]   CI (99.9%): [2745.617, 2965.668] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   72072.007 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (72072.007, 72072.007, 72072.007), stdev = 0.001
[info]   CI (99.9%): [72072.006, 72072.008] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2847.306 ±(99.9%) 1160.621 MB/sec [Average]
[info]   (min, avg, max) = (2701.417, 2847.306, 3386.349), stdev = 301.410
[info]   CI (99.9%): [1686.685, 4007.926] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   71824.441 ±(99.9%) 27129.233 B/op [Average]
[info]   (min, avg, max) = (67944.415, 71824.441, 84388.993), stdev = 7045.376
[info]   CI (99.9%): [44695.208, 98953.673] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.079 ±(99.9%) 0.174 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.079, 0.104), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.253] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   1.993 ±(99.9%) 4.375 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.993, 2.656), stdev = 1.136
[info]   CI (99.9%): [≈ 0, 6.368] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.readCirce:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.readCirce:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 85.74% complete, ETA 00:19:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 71811.242 ops/s
[info] # Warmup Iteration   2: 117432.730 ops/s
[info] # Warmup Iteration   3: 116606.339 ops/s
[info] # Warmup Iteration   4: 118714.606 ops/s
[info] # Warmup Iteration   5: 117674.374 ops/s
[info] Iteration   1: 118982.747 ops/s
[info]                  ·gc.alloc.rate:               1534.495 MB/sec
[info]                  ·gc.alloc.rate.norm:          20296.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1334.352 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 17648.819 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 118591.588 ops/s
[info]                  ·gc.alloc.rate:                   1529.341 MB/sec
[info]                  ·gc.alloc.rate.norm:              20296.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.309 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17734.265 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.553 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 118816.986 ops/s
[info]                  ·gc.alloc.rate:                   1532.410 MB/sec
[info]                  ·gc.alloc.rate.norm:              20296.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.466 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17727.308 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.276 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 118961.097 ops/s
[info]                  ·gc.alloc.rate:                   1534.451 MB/sec
[info]                  ·gc.alloc.rate.norm:              20296.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2013.253 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     26629.061 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.551 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 121025.256 ops/s
[info]                  ·gc.alloc.rate:               1560.691 MB/sec
[info]                  ·gc.alloc.rate.norm:          20296.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1344.929 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 17490.127 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.readJacksonScala":
[info]   119275.535 ±(99.9%) 3813.969 ops/s [Average]
[info]   (min, avg, max) = (118591.588, 119275.535, 121025.256), stdev = 990.476
[info]   CI (99.9%): [115461.566, 123089.504] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1538.278 ±(99.9%) 48.921 MB/sec [Average]
[info]   (min, avg, max) = (1529.341, 1538.278, 1560.691), stdev = 12.705
[info]   CI (99.9%): [1489.357, 1587.198] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   20296.004 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (20296.004, 20296.004, 20296.004), stdev = 0.001
[info]   CI (99.9%): [20296.003, 20296.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1473.462 ±(99.9%) 1162.042 MB/sec [Average]
[info]   (min, avg, max) = (1334.352, 1473.462, 2013.253), stdev = 301.779
[info]   CI (99.9%): [311.420, 2635.504] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   19445.916 ±(99.9%) 15466.891 B/op [Average]
[info]   (min, avg, max) = (17490.127, 19445.916, 26629.061), stdev = 4016.703
[info]   CI (99.9%): [3979.025, 34912.807] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.276 ±(99.9%) 1.062 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.276, 0.553), stdev = 0.276
[info]   CI (99.9%): [≈ 0, 1.338] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.readJacksonScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.readJacksonScala:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.200, 3.000), stdev = 0.837
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 85.94% complete, ETA 00:18:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 447611.151 ops/s
[info] # Warmup Iteration   2: 470326.308 ops/s
[info] # Warmup Iteration   3: 472958.197 ops/s
[info] # Warmup Iteration   4: 478580.265 ops/s
[info] # Warmup Iteration   5: 480327.693 ops/s
[info] Iteration   1: 472165.757 ops/s
[info]                  ·gc.alloc.rate:                   1233.604 MB/sec
[info]                  ·gc.alloc.rate.norm:              4112.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.900 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4489.653 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.208 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 479710.284 ops/s
[info]                  ·gc.alloc.rate:                   1253.491 MB/sec
[info]                  ·gc.alloc.rate.norm:              4112.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.111 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4419.115 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.273 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 467717.654 ops/s
[info]                  ·gc.alloc.rate:                   1222.004 MB/sec
[info]                  ·gc.alloc.rate.norm:              4112.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.271 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4536.884 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.280 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 478624.252 ops/s
[info]                  ·gc.alloc.rate:                   1250.467 MB/sec
[info]                  ·gc.alloc.rate.norm:              4112.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.602 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4437.995 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.274 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 470671.937 ops/s
[info]                  ·gc.alloc.rate:               1229.660 MB/sec
[info]                  ·gc.alloc.rate.norm:          4112.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      675.117 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2257.601 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.readJsoniterScala":
[info]   473777.977 ±(99.9%) 19976.355 ops/s [Average]
[info]   (min, avg, max) = (467717.654, 473777.977, 479710.284), stdev = 5187.796
[info]   CI (99.9%): [453801.622, 493754.332] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1237.845 ±(99.9%) 52.374 MB/sec [Average]
[info]   (min, avg, max) = (1222.004, 1237.845, 1253.491), stdev = 13.601
[info]   CI (99.9%): [1185.471, 1290.220] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   4112.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4112.001, 4112.001, 4112.001), stdev = 0.001
[info]   CI (99.9%): [4112.001, 4112.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1213.400 ±(99.9%) 1158.702 MB/sec [Average]
[info]   (min, avg, max) = (675.117, 1213.400, 1349.602), stdev = 300.911
[info]   CI (99.9%): [54.698, 2372.103] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   4028.250 ±(99.9%) 3815.571 B/op [Average]
[info]   (min, avg, max) = (2257.601, 4028.250, 4536.884), stdev = 990.892
[info]   CI (99.9%): [212.678, 7843.821] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.139 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.062, 0.083), stdev = 0.036
[info]   CI (99.9%): [≈ 0, 0.201] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.207 ±(99.9%) 0.460 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.207, 0.280), stdev = 0.119
[info]   CI (99.9%): [≈ 0, 0.667] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.readJsoniterScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.readJsoniterScala:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 86.14% complete, ETA 00:18:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6787.401 ops/s
[info] # Warmup Iteration   2: 16127.723 ops/s
[info] # Warmup Iteration   3: 16160.148 ops/s
[info] # Warmup Iteration   4: 16250.049 ops/s
[info] # Warmup Iteration   5: 16016.553 ops/s
[info] Iteration   1: 16101.694 ops/s
[info]                  ·gc.alloc.rate:                   2051.610 MB/sec
[info]                  ·gc.alloc.rate.norm:              200528.027 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2006.050 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     196074.922 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.139 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 16134.720 ops/s
[info]                  ·gc.alloc.rate:                   2055.803 MB/sec
[info]                  ·gc.alloc.rate.norm:              200528.037 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2012.701 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     196323.732 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.152 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 16077.621 ops/s
[info]                  ·gc.alloc.rate:                   2049.367 MB/sec
[info]                  ·gc.alloc.rate.norm:              200528.027 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2017.635 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     197423.124 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10.189 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 16075.175 ops/s
[info]                  ·gc.alloc.rate:               2048.142 MB/sec
[info]                  ·gc.alloc.rate.norm:          200528.029 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2022.342 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 198002.036 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 16119.324 ops/s
[info]                  ·gc.alloc.rate:               2053.792 MB/sec
[info]                  ·gc.alloc.rate.norm:          200528.029 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2026.257 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 197839.620 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.readPlayJson":
[info]   16101.707 ±(99.9%) 99.751 ops/s [Average]
[info]   (min, avg, max) = (16075.175, 16101.707, 16134.720), stdev = 25.905
[info]   CI (99.9%): [16001.956, 16201.457] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2051.743 ±(99.9%) 12.072 MB/sec [Average]
[info]   (min, avg, max) = (2048.142, 2051.743, 2055.803), stdev = 3.135
[info]   CI (99.9%): [2039.670, 2063.815] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   200528.030 ±(99.9%) 0.016 B/op [Average]
[info]   (min, avg, max) = (200528.027, 200528.030, 200528.037), stdev = 0.004
[info]   CI (99.9%): [200528.014, 200528.045] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2016.997 ±(99.9%) 30.625 MB/sec [Average]
[info]   (min, avg, max) = (2006.050, 2016.997, 2026.257), stdev = 7.953
[info]   CI (99.9%): [1986.372, 2047.622] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   197132.687 ±(99.9%) 3397.062 B/op [Average]
[info]   (min, avg, max) = (196074.922, 197132.687, 198002.036), stdev = 882.206
[info]   CI (99.9%): [193735.625, 200529.748] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.208 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.058, 0.104), stdev = 0.054
[info]   CI (99.9%): [≈ 0, 0.266] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   5.696 ±(99.9%) 20.276 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 5.696, 10.189), stdev = 5.266
[info]   CI (99.9%): [≈ 0, 25.972] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.readPlayJson:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.readPlayJson:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 86.35% complete, ETA 00:18:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 29809.013 ops/s
[info] # Warmup Iteration   2: 40958.221 ops/s
[info] # Warmup Iteration   3: 40641.410 ops/s
[info] # Warmup Iteration   4: 41420.225 ops/s
[info] # Warmup Iteration   5: 41765.538 ops/s
[info] Iteration   1: 41713.674 ops/s
[info]                  ·gc.alloc.rate:                   2417.423 MB/sec
[info]                  ·gc.alloc.rate.norm:              91208.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2019.400 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     76190.843 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.785 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 41036.088 ops/s
[info]                  ·gc.alloc.rate:                   2378.132 MB/sec
[info]                  ·gc.alloc.rate.norm:              91208.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2698.855 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     103508.653 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.395 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 42051.231 ops/s
[info]                  ·gc.alloc.rate:                   2437.085 MB/sec
[info]                  ·gc.alloc.rate.norm:              91208.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2705.470 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     101252.310 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.675 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 41835.665 ops/s
[info]                  ·gc.alloc.rate:                   2425.004 MB/sec
[info]                  ·gc.alloc.rate.norm:              91208.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2032.250 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     76435.955 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.133 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 42024.485 ops/s
[info]                  ·gc.alloc.rate:                   2435.423 MB/sec
[info]                  ·gc.alloc.rate.norm:              91208.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2713.828 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     101634.436 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.898 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writeCirce":
[info]   41732.229 ±(99.9%) 1590.963 ops/s [Average]
[info]   (min, avg, max) = (41036.088, 41732.229, 42051.231), stdev = 413.168
[info]   CI (99.9%): [40141.265, 43323.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writeCirce:·gc.alloc.rate":
[info]   2418.613 ±(99.9%) 92.431 MB/sec [Average]
[info]   (min, avg, max) = (2378.132, 2418.613, 2437.085), stdev = 24.004
[info]   CI (99.9%): [2326.183, 2511.044] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   91208.011 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (91208.010, 91208.011, 91208.011), stdev = 0.001
[info]   CI (99.9%): [91208.009, 91208.013] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   2433.961 ±(99.9%) 1434.906 MB/sec [Average]
[info]   (min, avg, max) = (2019.400, 2433.961, 2713.828), stdev = 372.640
[info]   CI (99.9%): [999.055, 3868.866] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   91804.439 ±(99.9%) 54553.393 B/op [Average]
[info]   (min, avg, max) = (76190.843, 91804.439, 103508.653), stdev = 14167.343
[info]   CI (99.9%): [37251.046, 146357.833] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.079 ±(99.9%) 0.154 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.079, 0.125), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.233] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   2.977 ±(99.9%) 5.743 B/op [Average]
[info]   (min, avg, max) = (0.785, 2.977, 4.675), stdev = 1.491
[info]   CI (99.9%): [≈ 0, 8.720] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writeCirce:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writeCirce:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.000, 4.000), stdev = 1.000
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 86.55% complete, ETA 00:17:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 145943.224 ops/s
[info] # Warmup Iteration   2: 229645.172 ops/s
[info] # Warmup Iteration   3: 225128.261 ops/s
[info] # Warmup Iteration   4: 235019.025 ops/s
[info] # Warmup Iteration   5: 232234.544 ops/s
[info] Iteration   1: 225195.869 ops/s
[info]                  ·gc.alloc.rate:               1047.376 MB/sec
[info]                  ·gc.alloc.rate.norm:          7320.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      666.139 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4655.579 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 234821.665 ops/s
[info]                  ·gc.alloc.rate:                   1092.149 MB/sec
[info]                  ·gc.alloc.rate.norm:              7320.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.296 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8929.561 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.140 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 227995.029 ops/s
[info]                  ·gc.alloc.rate:               1060.629 MB/sec
[info]                  ·gc.alloc.rate.norm:          7320.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      667.282 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4605.290 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 230490.626 ops/s
[info]                  ·gc.alloc.rate:                   1071.907 MB/sec
[info]                  ·gc.alloc.rate.norm:              7320.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1335.161 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9117.756 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.284 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 230154.210 ops/s
[info]                  ·gc.alloc.rate:               1070.514 MB/sec
[info]                  ·gc.alloc.rate.norm:          7320.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1337.377 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 9144.770 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writeJacksonScala":
[info]   229731.480 ±(99.9%) 13648.349 ops/s [Average]
[info]   (min, avg, max) = (225195.869, 229731.480, 234821.665), stdev = 3544.433
[info]   CI (99.9%): [216083.131, 243379.828] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1068.515 ±(99.9%) 63.363 MB/sec [Average]
[info]   (min, avg, max) = (1047.376, 1068.515, 1092.149), stdev = 16.455
[info]   CI (99.9%): [1005.152, 1131.878] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   7320.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (7320.002, 7320.002, 7320.002), stdev = 0.001
[info]   CI (99.9%): [7320.002, 7320.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1067.651 ±(99.9%) 1409.380 MB/sec [Average]
[info]   (min, avg, max) = (666.139, 1067.651, 1337.377), stdev = 366.012
[info]   CI (99.9%): [≈ 0, 2477.031] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   7290.591 ±(99.9%) 9356.523 B/op [Average]
[info]   (min, avg, max) = (4605.290, 7290.591, 9144.770), stdev = 2429.859
[info]   CI (99.9%): [≈ 0, 16647.114] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.085 ±(99.9%) 0.488 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.085, 0.284), stdev = 0.127
[info]   CI (99.9%): [≈ 0, 0.573] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writeJacksonScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writeJacksonScala:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 86.75% complete, ETA 00:17:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1350540.514 ops/s
[info] # Warmup Iteration   2: 1346316.064 ops/s
[info] # Warmup Iteration   3: 1358011.892 ops/s
[info] # Warmup Iteration   4: 1340824.476 ops/s
[info] # Warmup Iteration   5: 1368561.967 ops/s
[info] Iteration   1: 1382659.988 ops/s
[info]                  ·gc.alloc.rate:                   695.778 MB/sec
[info]                  ·gc.alloc.rate.norm:              792.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.469 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     766.606 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.574 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.792 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 1382599.290 ops/s
[info]                  ·gc.alloc.rate:               695.750 MB/sec
[info]                  ·gc.alloc.rate.norm:          792.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.472 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 766.641 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 1384319.755 ops/s
[info]                  ·gc.alloc.rate:                   696.626 MB/sec
[info]                  ·gc.alloc.rate.norm:              792.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.481 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     765.687 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.047 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 1385396.993 ops/s
[info]                  ·gc.alloc.rate:                   697.144 MB/sec
[info]                  ·gc.alloc.rate.norm:              792.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.451 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     765.083 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.024 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 1381317.372 ops/s
[info]                  ·gc.alloc.rate:               695.077 MB/sec
[info]                  ·gc.alloc.rate.norm:          792.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.436 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 767.341 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writeJsoniterScala":
[info]   1383258.680 ±(99.9%) 6167.094 ops/s [Average]
[info]   (min, avg, max) = (1381317.372, 1383258.680, 1385396.993), stdev = 1601.575
[info]   CI (99.9%): [1377091.586, 1389425.773] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   696.075 ±(99.9%) 3.126 MB/sec [Average]
[info]   (min, avg, max) = (695.077, 696.075, 697.144), stdev = 0.812
[info]   CI (99.9%): [692.949, 699.201] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   792.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (792.000, 792.000, 792.000), stdev = 0.001
[info]   CI (99.9%): [792.000, 792.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   673.462 ±(99.9%) 0.071 MB/sec [Average]
[info]   (min, avg, max) = (673.436, 673.462, 673.481), stdev = 0.018
[info]   CI (99.9%): [673.391, 673.533] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   766.272 ±(99.9%) 3.414 B/op [Average]
[info]   (min, avg, max) = (765.083, 766.272, 767.341), stdev = 0.887
[info]   CI (99.9%): [762.857, 769.686] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.327 ±(99.9%) 2.684 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.327, 1.574), stdev = 0.697
[info]   CI (99.9%): [≈ 0, 3.012] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.373 ±(99.9%) 3.056 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.373, 1.792), stdev = 0.794
[info]   CI (99.9%): [≈ 0, 3.428] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writeJsoniterScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writeJsoniterScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 86.95% complete, ETA 00:17:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1381950.479 ops/s
[info] # Warmup Iteration   2: 1408724.970 ops/s
[info] # Warmup Iteration   3: 1405681.081 ops/s
[info] # Warmup Iteration   4: 1404769.098 ops/s
[info] # Warmup Iteration   5: 1405588.888 ops/s
[info] Iteration   1: 1405211.331 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1405993.149 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1404375.912 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1405886.050 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1404970.726 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writeJsoniterScalaPrealloc":
[info]   1405287.434 ±(99.9%) 2578.310 ops/s [Average]
[info]   (min, avg, max) = (1404375.912, 1405287.434, 1405993.149), stdev = 669.579
[info]   CI (99.9%): [1402709.123, 1407865.744] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 87.15% complete, ETA 00:17:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 17788.673 ops/s
[info] # Warmup Iteration   2: 32816.803 ops/s
[info] # Warmup Iteration   3: 32897.483 ops/s
[info] # Warmup Iteration   4: 33439.578 ops/s
[info] # Warmup Iteration   5: 32881.767 ops/s
[info] Iteration   1: 33108.125 ops/s
[info]                  ·gc.alloc.rate:                   1773.619 MB/sec
[info]                  ·gc.alloc.rate.norm:              84312.013 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2002.781 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     95205.621 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.979 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 33115.975 ops/s
[info]                  ·gc.alloc.rate:                   1774.255 MB/sec
[info]                  ·gc.alloc.rate.norm:              84312.013 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.452 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     63602.826 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.957 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 33214.657 ops/s
[info]                  ·gc.alloc.rate:               1780.079 MB/sec
[info]                  ·gc.alloc.rate.norm:          84312.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2013.598 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 95372.438 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 32985.745 ops/s
[info]                  ·gc.alloc.rate:                   1767.330 MB/sec
[info]                  ·gc.alloc.rate.norm:              84312.013 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2017.716 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     96256.931 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.973 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 32671.547 ops/s
[info]                  ·gc.alloc.rate:                   1750.254 MB/sec
[info]                  ·gc.alloc.rate.norm:              84312.013 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.572 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     64914.292 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.003 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writePlayJson":
[info]   33019.210 ±(99.9%) 811.058 ops/s [Average]
[info]   (min, avg, max) = (32671.547, 33019.210, 33214.657), stdev = 210.629
[info]   CI (99.9%): [32208.152, 33830.268] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1769.107 ±(99.9%) 44.150 MB/sec [Average]
[info]   (min, avg, max) = (1750.254, 1769.107, 1780.079), stdev = 11.466
[info]   CI (99.9%): [1724.957, 1813.257] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   84312.013 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (84312.013, 84312.013, 84312.014), stdev = 0.001
[info]   CI (99.9%): [84312.012, 84312.015] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1744.024 ±(99.9%) 1409.824 MB/sec [Average]
[info]   (min, avg, max) = (1338.452, 1744.024, 2017.716), stdev = 366.127
[info]   CI (99.9%): [334.200, 3153.848] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   83070.422 ±(99.9%) 66168.334 B/op [Average]
[info]   (min, avg, max) = (63602.826, 83070.422, 96256.931), stdev = 17183.706
[info]   CI (99.9%): [16902.088, 149238.756] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.083), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   2.182 ±(99.9%) 6.821 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.182, 3.973), stdev = 1.771
[info]   CI (99.9%): [≈ 0, 9.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writePlayJson:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writePlayJson:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce
[info] # Run progress: 87.35% complete, ETA 00:16:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 253100.687 ops/s
[info] # Warmup Iteration   2: 673009.988 ops/s
[info] # Warmup Iteration   3: 687232.829 ops/s
[info] # Warmup Iteration   4: 692181.489 ops/s
[info] # Warmup Iteration   5: 691281.507 ops/s
[info] Iteration   1: 703389.848 ops/s
[info]                  ·gc.alloc.rate:                   2138.991 MB/sec
[info]                  ·gc.alloc.rate.norm:              4784.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2021.297 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4520.771 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.233 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 707118.005 ops/s
[info]                  ·gc.alloc.rate:                   2149.400 MB/sec
[info]                  ·gc.alloc.rate.norm:              4784.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2024.088 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4505.089 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.185 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 701970.825 ops/s
[info]                  ·gc.alloc.rate:                   2134.498 MB/sec
[info]                  ·gc.alloc.rate.norm:              4784.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2027.503 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4544.194 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.187 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 706788.249 ops/s
[info]                  ·gc.alloc.rate:                   2148.394 MB/sec
[info]                  ·gc.alloc.rate.norm:              4784.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2030.075 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4520.530 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.093 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 706604.504 ops/s
[info]                  ·gc.alloc.rate:                   2148.135 MB/sec
[info]                  ·gc.alloc.rate.norm:              4784.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2711.249 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6038.084 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.139 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce":
[info]   705174.286 ±(99.9%) 9004.833 ops/s [Average]
[info]   (min, avg, max) = (701970.825, 705174.286, 707118.005), stdev = 2338.527
[info]   CI (99.9%): [696169.453, 714179.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:·gc.alloc.rate":
[info]   2143.884 ±(99.9%) 25.894 MB/sec [Average]
[info]   (min, avg, max) = (2134.498, 2143.884, 2149.400), stdev = 6.725
[info]   CI (99.9%): [2117.989, 2169.778] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   4784.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4784.001, 4784.001, 4784.001), stdev = 0.001
[info]   CI (99.9%): [4784.001, 4784.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2162.842 ±(99.9%) 1180.556 MB/sec [Average]
[info]   (min, avg, max) = (2021.297, 2162.842, 2711.249), stdev = 306.587
[info]   CI (99.9%): [982.286, 3343.399] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4825.734 ±(99.9%) 2610.229 B/op [Average]
[info]   (min, avg, max) = (4505.089, 4825.734, 6038.084), stdev = 677.868
[info]   CI (99.9%): [2215.505, 7435.962] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.075 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.075, 0.104), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.166] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.167 ±(99.9%) 0.205 B/op [Average]
[info]   (min, avg, max) = (0.093, 0.167, 0.233), stdev = 0.053
[info]   CI (99.9%): [≈ 0, 0.373] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 4.000), stdev = 0.837
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala
[info] # Run progress: 87.55% complete, ETA 00:16:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 506922.670 ops/s
[info] # Warmup Iteration   2: 1454358.763 ops/s
[info] # Warmup Iteration   3: 1454928.521 ops/s
[info] # Warmup Iteration   4: 1497932.667 ops/s
[info] # Warmup Iteration   5: 1503811.034 ops/s
[info] Iteration   1: 1500275.376 ops/s
[info]                  ·gc.alloc.rate:                   1136.232 MB/sec
[info]                  ·gc.alloc.rate.norm:              1192.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.614 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1399.070 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.066 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 1460086.879 ops/s
[info]                  ·gc.alloc.rate:                   1105.820 MB/sec
[info]                  ·gc.alloc.rate.norm:              1192.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.318 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1438.306 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.090 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 1500483.333 ops/s
[info]                  ·gc.alloc.rate:               1136.442 MB/sec
[info]                  ·gc.alloc.rate.norm:          1192.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      667.837 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 700.486 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 1451510.285 ops/s
[info]                  ·gc.alloc.rate:                   1099.322 MB/sec
[info]                  ·gc.alloc.rate.norm:              1192.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.634 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1449.319 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 1494501.379 ops/s
[info]                  ·gc.alloc.rate:                   1131.880 MB/sec
[info]                  ·gc.alloc.rate.norm:              1192.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.592 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1409.691 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.044 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala":
[info]   1481371.451 ±(99.9%) 91117.571 ops/s [Average]
[info]   (min, avg, max) = (1451510.285, 1481371.451, 1500483.333), stdev = 23662.944
[info]   CI (99.9%): [1390253.880, 1572489.021] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1121.939 ±(99.9%) 69.012 MB/sec [Average]
[info]   (min, avg, max) = (1099.322, 1121.939, 1136.442), stdev = 17.922
[info]   CI (99.9%): [1052.927, 1190.951] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   1192.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1192.000, 1192.000, 1192.000), stdev = 0.001
[info]   CI (99.9%): [1192.000, 1192.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1202.199 ±(99.9%) 1150.279 MB/sec [Average]
[info]   (min, avg, max) = (667.837, 1202.199, 1338.592), stdev = 298.724
[info]   CI (99.9%): [51.920, 2352.478] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1279.375 ±(99.9%) 1248.585 B/op [Average]
[info]   (min, avg, max) = (700.486, 1279.375, 1449.319), stdev = 324.254
[info]   CI (99.9%): [30.790, 2527.959] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.127 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.083), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.044 ±(99.9%) 0.135 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.044, 0.090), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.180] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 3.000), stdev = 0.707
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala
[info] # Run progress: 87.75% complete, ETA 00:16:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5762092.029 ops/s
[info] # Warmup Iteration   2: 6421412.157 ops/s
[info] # Warmup Iteration   3: 6444846.163 ops/s
[info] # Warmup Iteration   4: 6469858.200 ops/s
[info] # Warmup Iteration   5: 6466694.526 ops/s
[info] Iteration   1: 6459998.821 ops/s
[info]                  ·gc.alloc.rate:                   197.013 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.571 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     124.639 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.365 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.333 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 6479916.659 ops/s
[info]                  ·gc.alloc.rate:      197.633 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 6457739.026 ops/s
[info]                  ·gc.alloc.rate:               196.963 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.632 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 124.685 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 6471426.224 ops/s
[info]                  ·gc.alloc.rate:      197.362 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 6478857.476 ops/s
[info]                  ·gc.alloc.rate:      197.588 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala":
[info]   6469587.641 ±(99.9%) 39846.909 ops/s [Average]
[info]   (min, avg, max) = (6457739.026, 6469587.641, 6479916.659), stdev = 10348.116
[info]   CI (99.9%): [6429740.732, 6509434.550] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   197.312 ±(99.9%) 1.207 MB/sec [Average]
[info]   (min, avg, max) = (196.963, 197.312, 197.633), stdev = 0.313
[info]   CI (99.9%): [196.105, 198.518] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   48.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (48.000, 48.000, 48.000), stdev = 0.001
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   204.640 ±(99.9%) 1079.010 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 204.640, 511.632), stdev = 280.216
[info]   CI (99.9%): [≈ 0, 1283.651] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   49.865 ±(99.9%) 262.923 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 49.865, 124.685), stdev = 68.280
[info]   CI (99.9%): [≈ 0, 312.788] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.273 ±(99.9%) 2.351 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.273, 1.365), stdev = 0.611
[info]   CI (99.9%): [≈ 0, 2.624] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.067 ±(99.9%) 0.573 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.067, 0.333), stdev = 0.149
[info]   CI (99.9%): [≈ 0, 0.639] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:·gc.count":
[info]   2.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.000), stdev = 0.548
[info]   CI (99.9%): [2.000, 2.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:·gc.time":
[info]   3.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 2.000), stdev = 0.894
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson
[info] # Run progress: 87.95% complete, ETA 00:16:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 40246.000 ops/s
[info] # Warmup Iteration   2: 222271.384 ops/s
[info] # Warmup Iteration   3: 223642.299 ops/s
[info] # Warmup Iteration   4: 229181.686 ops/s
[info] # Warmup Iteration   5: 224356.701 ops/s
[info] Iteration   1: 226260.401 ops/s
[info]                  ·gc.alloc.rate:                   1557.791 MB/sec
[info]                  ·gc.alloc.rate.norm:              10832.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.775 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9281.279 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.290 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 228924.878 ops/s
[info]                  ·gc.alloc.rate:                   1576.637 MB/sec
[info]                  ·gc.alloc.rate.norm:              10832.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2003.323 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13763.469 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.572 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 229586.165 ops/s
[info]                  ·gc.alloc.rate:                   1580.545 MB/sec
[info]                  ·gc.alloc.rate.norm:              10832.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.939 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9183.054 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.285 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 229791.971 ops/s
[info]                  ·gc.alloc.rate:               1581.511 MB/sec
[info]                  ·gc.alloc.rate.norm:          10832.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1341.608 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 9188.870 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 227747.805 ops/s
[info]                  ·gc.alloc.rate:                   1567.673 MB/sec
[info]                  ·gc.alloc.rate.norm:              10832.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2017.079 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13937.218 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.575 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson":
[info]   228462.244 ±(99.9%) 5647.445 ops/s [Average]
[info]   (min, avg, max) = (226260.401, 228462.244, 229791.971), stdev = 1466.624
[info]   CI (99.9%): [222814.798, 234109.689] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1572.831 ±(99.9%) 38.609 MB/sec [Average]
[info]   (min, avg, max) = (1557.791, 1572.831, 1581.511), stdev = 10.027
[info]   CI (99.9%): [1534.222, 1611.441] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   10832.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10832.002, 10832.002, 10832.002), stdev = 0.001
[info]   CI (99.9%): [10832.002, 10832.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1607.345 ±(99.9%) 1416.253 MB/sec [Average]
[info]   (min, avg, max) = (1334.775, 1607.345, 2017.079), stdev = 367.796
[info]   CI (99.9%): [191.092, 3023.598] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   11070.778 ±(99.9%) 9774.579 B/op [Average]
[info]   (min, avg, max) = (9183.054, 11070.778, 13937.218), stdev = 2538.427
[info]   CI (99.9%): [1296.199, 20845.358] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.083), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.184] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.344 ±(99.9%) 0.924 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.344, 0.575), stdev = 0.240
[info]   CI (99.9%): [≈ 0, 1.268] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.400, 6.000), stdev = 1.517
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce
[info] # Run progress: 88.15% complete, ETA 00:15:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 388983.725 ops/s
[info] # Warmup Iteration   2: 926115.291 ops/s
[info] # Warmup Iteration   3: 932674.784 ops/s
[info] # Warmup Iteration   4: 972070.294 ops/s
[info] # Warmup Iteration   5: 966783.956 ops/s
[info] Iteration   1: 968228.782 ops/s
[info]                  ·gc.alloc.rate:                   1663.397 MB/sec
[info]                  ·gc.alloc.rate.norm:              2704.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.544 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2180.800 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.102 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 971037.662 ops/s
[info]                  ·gc.alloc.rate:                   1668.422 MB/sec
[info]                  ·gc.alloc.rate.norm:              2704.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2016.223 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3267.680 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.135 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 971540.191 ops/s
[info]                  ·gc.alloc.rate:                   1669.345 MB/sec
[info]                  ·gc.alloc.rate.norm:              2704.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.088 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2180.390 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.101 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 963687.515 ops/s
[info]                  ·gc.alloc.rate:                   1656.404 MB/sec
[info]                  ·gc.alloc.rate.norm:              2704.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2022.657 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3301.891 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.034 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 952604.536 ops/s
[info]                  ·gc.alloc.rate:                   1636.838 MB/sec
[info]                  ·gc.alloc.rate.norm:              2704.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.453 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2230.903 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.103 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce":
[info]   965419.737 ±(99.9%) 30083.225 ops/s [Average]
[info]   (min, avg, max) = (952604.536, 965419.737, 971540.191), stdev = 7812.518
[info]   CI (99.9%): [935336.512, 995502.963] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:·gc.alloc.rate":
[info]   1658.881 ±(99.9%) 51.408 MB/sec [Average]
[info]   (min, avg, max) = (1636.838, 1658.881, 1669.345), stdev = 13.351
[info]   CI (99.9%): [1607.473, 1710.290] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   2704.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2704.000, 2704.000, 2704.000), stdev = 0.001
[info]   CI (99.9%): [2704.000, 2704.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1615.393 ±(99.9%) 1420.361 MB/sec [Average]
[info]   (min, avg, max) = (1341.544, 1615.393, 2022.657), stdev = 368.863
[info]   CI (99.9%): [195.032, 3035.754] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   2632.333 ±(99.9%) 2295.299 B/op [Average]
[info]   (min, avg, max) = (2180.390, 2632.333, 3301.891), stdev = 596.082
[info]   CI (99.9%): [337.034, 4927.631] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.058, 0.083), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.095 ±(99.9%) 0.142 B/op [Average]
[info]   (min, avg, max) = (0.034, 0.095, 0.135), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.237] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 3.000), stdev = 1.000
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala
[info] # Run progress: 88.35% complete, ETA 00:15:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 865006.558 ops/s
[info] # Warmup Iteration   2: 2471384.093 ops/s
[info] # Warmup Iteration   3: 2512517.391 ops/s
[info] # Warmup Iteration   4: 2500917.208 ops/s
[info] # Warmup Iteration   5: 2512285.234 ops/s
[info] Iteration   1: 2517684.694 ops/s
[info]                  ·gc.alloc.rate:                   1113.370 MB/sec
[info]                  ·gc.alloc.rate.norm:              696.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.616 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     833.682 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.039 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 2516663.156 ops/s
[info]                  ·gc.alloc.rate:                   1112.884 MB/sec
[info]                  ·gc.alloc.rate.norm:              696.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.905 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     834.853 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.052 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 2518360.104 ops/s
[info]                  ·gc.alloc.rate:               1113.715 MB/sec
[info]                  ·gc.alloc.rate.norm:          696.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      667.810 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 417.338 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 2512381.823 ops/s
[info]                  ·gc.alloc.rate:                   1111.019 MB/sec
[info]                  ·gc.alloc.rate.norm:              696.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.938 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     837.528 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.039 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 2522616.417 ops/s
[info]                  ·gc.alloc.rate:                   1115.622 MB/sec
[info]                  ·gc.alloc.rate.norm:              696.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.058 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     835.394 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala":
[info]   2517541.239 ±(99.9%) 14127.083 ops/s [Average]
[info]   (min, avg, max) = (2512381.823, 2517541.239, 2522616.417), stdev = 3668.759
[info]   CI (99.9%): [2503414.156, 2531668.322] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1113.322 ±(99.9%) 6.370 MB/sec [Average]
[info]   (min, avg, max) = (1111.019, 1113.322, 1115.622), stdev = 1.654
[info]   CI (99.9%): [1106.952, 1119.692] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   696.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (696.000, 696.000, 696.000), stdev = 0.001
[info]   CI (99.9%): [696.000, 696.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1202.465 ±(99.9%) 1150.914 MB/sec [Average]
[info]   (min, avg, max) = (667.810, 1202.465, 1339.058), stdev = 298.889
[info]   CI (99.9%): [51.551, 2353.379] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   751.759 ±(99.9%) 719.887 B/op [Average]
[info]   (min, avg, max) = (417.338, 751.759, 837.528), stdev = 186.952
[info]   CI (99.9%): [31.872, 1471.646] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.083), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.178] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.029 ±(99.9%) 0.082 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.052), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.111] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 3.000), stdev = 0.707
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala
[info] # Run progress: 88.55% complete, ETA 00:15:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4569790.255 ops/s
[info] # Warmup Iteration   2: 7133907.455 ops/s
[info] # Warmup Iteration   3: 7215388.508 ops/s
[info] # Warmup Iteration   4: 7171066.330 ops/s
[info] # Warmup Iteration   5: 7047391.047 ops/s
[info] Iteration   1: 7065336.092 ops/s
[info]                  ·gc.alloc.rate:               574.611 MB/sec
[info]                  ·gc.alloc.rate.norm:          128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.607 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 113.965 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 7082636.089 ops/s
[info]                  ·gc.alloc.rate:                   576.039 MB/sec
[info]                  ·gc.alloc.rate.norm:              128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.514 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     149.660 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.574 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.350 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 7165693.831 ops/s
[info]                  ·gc.alloc.rate:                   582.807 MB/sec
[info]                  ·gc.alloc.rate.norm:              128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.491 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     147.917 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 7211872.593 ops/s
[info]                  ·gc.alloc.rate:               586.519 MB/sec
[info]                  ·gc.alloc.rate.norm:          128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.460 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 146.974 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   5: 7211298.911 ops/s
[info]                  ·gc.alloc.rate:                   586.523 MB/sec
[info]                  ·gc.alloc.rate.norm:              128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.501 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     146.982 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala":
[info]   7147367.503 ±(99.9%) 268879.290 ops/s [Average]
[info]   (min, avg, max) = (7065336.092, 7147367.503, 7211872.593), stdev = 69827.098
[info]   CI (99.9%): [6878488.213, 7416246.793] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   581.300 ±(99.9%) 21.885 MB/sec [Average]
[info]   (min, avg, max) = (574.611, 581.300, 586.523), stdev = 5.683
[info]   CI (99.9%): [559.415, 603.184] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   128.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (128.000, 128.000, 128.000), stdev = 0.001
[info]   CI (99.9%): [128.000, 128.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   641.115 ±(99.9%) 278.775 MB/sec [Average]
[info]   (min, avg, max) = (511.607, 641.115, 673.514), stdev = 72.397
[info]   CI (99.9%): [362.340, 919.889] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   141.099 ±(99.9%) 58.560 B/op [Average]
[info]   (min, avg, max) = (113.965, 141.099, 149.660), stdev = 15.208
[info]   CI (99.9%): [82.539, 199.660] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.331 ±(99.9%) 2.677 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.331, 1.574), stdev = 0.695
[info]   CI (99.9%): [≈ 0, 3.008] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.074 ±(99.9%) 0.595 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.074, 0.350), stdev = 0.154
[info]   CI (99.9%): [≈ 0, 0.668] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 0.837
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 88.76% complete, ETA 00:15:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4493564.941 ops/s
[info] # Warmup Iteration   2: 6259223.777 ops/s
[info] # Warmup Iteration   3: 6352990.882 ops/s
[info] # Warmup Iteration   4: 6361976.070 ops/s
[info] # Warmup Iteration   5: 6348222.915 ops/s
[info] Iteration   1: 6354369.497 ops/s
[info]                  ·gc.alloc.rate:               387.733 MB/sec
[info]                  ·gc.alloc.rate.norm:          96.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.785 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 126.715 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 6355804.018 ops/s
[info]                  ·gc.alloc.rate:               387.753 MB/sec
[info]                  ·gc.alloc.rate.norm:          96.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.696 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 126.686 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 6374313.724 ops/s
[info]                  ·gc.alloc.rate:      388.865 MB/sec
[info]                  ·gc.alloc.rate.norm: 96.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 6350843.365 ops/s
[info]                  ·gc.alloc.rate:                   387.421 MB/sec
[info]                  ·gc.alloc.rate.norm:              96.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.653 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     126.784 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 6335252.985 ops/s
[info]                  ·gc.alloc.rate:                   386.430 MB/sec
[info]                  ·gc.alloc.rate.norm:              96.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.476 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     167.310 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.543 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.383 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc":
[info]   6354116.718 ±(99.9%) 53681.110 ops/s [Average]
[info]   (min, avg, max) = (6335252.985, 6354116.718, 6374313.724), stdev = 13940.814
[info]   CI (99.9%): [6300435.608, 6407797.828] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   387.641 ±(99.9%) 3.354 MB/sec [Average]
[info]   (min, avg, max) = (386.430, 387.641, 388.865), stdev = 0.871
[info]   CI (99.9%): [384.286, 390.995] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   96.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (96.000, 96.000, 96.000), stdev = 0.001
[info]   CI (99.9%): [96.000, 96.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   441.722 ±(99.9%) 988.356 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 441.722, 673.476), stdev = 256.673
[info]   CI (99.9%): [≈ 0, 1430.078] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   109.499 ±(99.9%) 245.225 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 109.499, 167.310), stdev = 63.684
[info]   CI (99.9%): [≈ 0, 354.724] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space":
[info]   0.317 ±(99.9%) 2.640 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.317, 1.543), stdev = 0.685
[info]   CI (99.9%): [≈ 0, 2.956] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   0.079 ±(99.9%) 0.656 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.079, 0.383), stdev = 0.170
[info]   CI (99.9%): [≈ 0, 0.734] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 3.000), stdev = 1.140
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson
[info] # Run progress: 88.96% complete, ETA 00:14:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 52974.199 ops/s
[info] # Warmup Iteration   2: 312372.743 ops/s
[info] # Warmup Iteration   3: 316205.055 ops/s
[info] # Warmup Iteration   4: 317125.361 ops/s
[info] # Warmup Iteration   5: 312806.228 ops/s
[info] Iteration   1: 317632.318 ops/s
[info]                  ·gc.alloc.rate:                   1633.920 MB/sec
[info]                  ·gc.alloc.rate.norm:              8096.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2002.784 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9923.708 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.309 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 318136.135 ops/s
[info]                  ·gc.alloc.rate:                   1636.790 MB/sec
[info]                  ·gc.alloc.rate.norm:              8096.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.846 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6617.347 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.309 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 317830.775 ops/s
[info]                  ·gc.alloc.rate:                   1634.955 MB/sec
[info]                  ·gc.alloc.rate.norm:              8096.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2010.805 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9957.142 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.412 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 319348.845 ops/s
[info]                  ·gc.alloc.rate:                   1642.686 MB/sec
[info]                  ·gc.alloc.rate.norm:              8096.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.207 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6620.018 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.205 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 318350.282 ops/s
[info]                  ·gc.alloc.rate:               1637.552 MB/sec
[info]                  ·gc.alloc.rate.norm:          8096.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1345.226 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6650.751 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson":
[info]   318259.671 ±(99.9%) 2573.957 ops/s [Average]
[info]   (min, avg, max) = (317632.318, 318259.671, 319348.845), stdev = 668.448
[info]   CI (99.9%): [315685.714, 320833.628] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1637.180 ±(99.9%) 13.084 MB/sec [Average]
[info]   (min, avg, max) = (1633.920, 1637.180, 1642.686), stdev = 3.398
[info]   CI (99.9%): [1624.096, 1650.265] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   8096.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8096.001, 8096.001, 8096.001), stdev = 0.001
[info]   CI (99.9%): [8096.001, 8096.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1607.974 ±(99.9%) 1401.992 MB/sec [Average]
[info]   (min, avg, max) = (1337.846, 1607.974, 2010.805), stdev = 364.093
[info]   CI (99.9%): [205.982, 3009.966] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   7953.793 ±(99.9%) 6983.622 B/op [Average]
[info]   (min, avg, max) = (6617.347, 7953.793, 9957.142), stdev = 1813.625
[info]   CI (99.9%): [970.171, 14937.416] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.083), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.172] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.247 ±(99.9%) 0.602 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.247, 0.412), stdev = 0.156
[info]   CI (99.9%): [≈ 0, 0.849] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 89.16% complete, ETA 00:14:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 46010.337 ops/s
[info] # Warmup Iteration   2: 54449.188 ops/s
[info] # Warmup Iteration   3: 55802.954 ops/s
[info] # Warmup Iteration   4: 57273.698 ops/s
[info] # Warmup Iteration   5: 57189.883 ops/s
[info] Iteration   1: 54153.994 ops/s
[info]                  ·gc.alloc.rate:               1599.980 MB/sec
[info]                  ·gc.alloc.rate.norm:          46480.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1346.211 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 39107.910 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 57171.312 ops/s
[info]                  ·gc.alloc.rate:                   1688.727 MB/sec
[info]                  ·gc.alloc.rate.norm:              46480.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2021.124 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     55628.809 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.438 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 57109.325 ops/s
[info]                  ·gc.alloc.rate:                   1686.599 MB/sec
[info]                  ·gc.alloc.rate.norm:              46480.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.979 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     37175.734 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.147 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 55956.012 ops/s
[info]                  ·gc.alloc.rate:                   1652.495 MB/sec
[info]                  ·gc.alloc.rate.norm:              46480.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2026.360 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     56995.769 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.757 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 56317.530 ops/s
[info]                  ·gc.alloc.rate:               1663.163 MB/sec
[info]                  ·gc.alloc.rate.norm:          46480.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1352.555 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 37799.520 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce":
[info]   56141.635 ±(99.9%) 4721.072 ops/s [Average]
[info]   (min, avg, max) = (54153.994, 56141.635, 57171.312), stdev = 1226.047
[info]   CI (99.9%): [51420.563, 60862.707] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:·gc.alloc.rate":
[info]   1658.193 ±(99.9%) 138.638 MB/sec [Average]
[info]   (min, avg, max) = (1599.980, 1658.193, 1688.727), stdev = 36.004
[info]   CI (99.9%): [1519.555, 1796.831] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   46480.008 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (46480.008, 46480.008, 46480.008), stdev = 0.001
[info]   CI (99.9%): [46480.007, 46480.009] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1619.046 ±(99.9%) 1422.609 MB/sec [Average]
[info]   (min, avg, max) = (1346.211, 1619.046, 2026.360), stdev = 369.447
[info]   CI (99.9%): [196.437, 3041.654] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   45341.548 ±(99.9%) 38701.823 B/op [Average]
[info]   (min, avg, max) = (37175.734, 45341.548, 56995.769), stdev = 10050.741
[info]   CI (99.9%): [6639.725, 84043.371] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.200 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.125), stdev = 0.052
[info]   CI (99.9%): [≈ 0, 0.245] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   1.268 ±(99.9%) 5.506 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.268, 3.438), stdev = 1.430
[info]   CI (99.9%): [≈ 0, 6.775] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.200, 3.000), stdev = 0.837
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 89.36% complete, ETA 00:14:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 58012.228 ops/s
[info] # Warmup Iteration   2: 100045.276 ops/s
[info] # Warmup Iteration   3: 100621.401 ops/s
[info] # Warmup Iteration   4: 101208.423 ops/s
[info] # Warmup Iteration   5: 100095.452 ops/s
[info] Iteration   1: 100920.691 ops/s
[info]                  ·gc.alloc.rate:                   1554.630 MB/sec
[info]                  ·gc.alloc.rate.norm:              24240.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1335.892 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20829.402 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.649 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 101818.339 ops/s
[info]                  ·gc.alloc.rate:                   1568.152 MB/sec
[info]                  ·gc.alloc.rate.norm:              24240.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.253 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20686.298 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.322 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 101833.063 ops/s
[info]                  ·gc.alloc.rate:                   1568.412 MB/sec
[info]                  ·gc.alloc.rate.norm:              24240.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2010.787 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     31076.964 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.287 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 101859.343 ops/s
[info]                  ·gc.alloc.rate:               1568.772 MB/sec
[info]                  ·gc.alloc.rate.norm:          24240.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1343.586 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 20760.518 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 102137.352 ops/s
[info]                  ·gc.alloc.rate:                   1573.769 MB/sec
[info]                  ·gc.alloc.rate.norm:              24240.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.170 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20734.409 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.321 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala":
[info]   101713.758 ±(99.9%) 1780.015 ops/s [Average]
[info]   (min, avg, max) = (100920.691, 101713.758, 102137.352), stdev = 462.264
[info]   CI (99.9%): [99933.743, 103493.772] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1566.747 ±(99.9%) 27.564 MB/sec [Average]
[info]   (min, avg, max) = (1554.630, 1566.747, 1573.769), stdev = 7.158
[info]   CI (99.9%): [1539.183, 1594.311] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   24240.004 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (24240.004, 24240.004, 24240.005), stdev = 0.001
[info]   CI (99.9%): [24240.004, 24240.005] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1474.937 ±(99.9%) 1153.563 MB/sec [Average]
[info]   (min, avg, max) = (1335.892, 1474.937, 2010.787), stdev = 299.577
[info]   CI (99.9%): [321.374, 2628.501] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   22817.518 ±(99.9%) 17780.194 B/op [Average]
[info]   (min, avg, max) = (20686.298, 22817.518, 31076.964), stdev = 4617.460
[info]   CI (99.9%): [5037.324, 40597.713] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.083), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.516 ±(99.9%) 1.881 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.516, 1.287), stdev = 0.488
[info]   CI (99.9%): [≈ 0, 2.396] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 3.000), stdev = 0.707
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 89.56% complete, ETA 00:13:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 137433.906 ops/s
[info] # Warmup Iteration   2: 153263.975 ops/s
[info] # Warmup Iteration   3: 153914.184 ops/s
[info] # Warmup Iteration   4: 152073.100 ops/s
[info] # Warmup Iteration   5: 154471.921 ops/s
[info] Iteration   1: 154374.738 ops/s
[info]                  ·gc.alloc.rate:                   2268.260 MB/sec
[info]                  ·gc.alloc.rate.norm:              23120.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2701.156 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27532.446 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.849 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 153938.395 ops/s
[info]                  ·gc.alloc.rate:                   2261.421 MB/sec
[info]                  ·gc.alloc.rate.norm:              23120.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2028.757 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20741.326 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.851 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 153441.881 ops/s
[info]                  ·gc.alloc.rate:                   2254.005 MB/sec
[info]                  ·gc.alloc.rate.norm:              23120.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2031.756 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20840.328 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.854 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 154328.071 ops/s
[info]                  ·gc.alloc.rate:                   2267.657 MB/sec
[info]                  ·gc.alloc.rate.norm:              23120.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2712.798 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27658.462 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.425 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 154175.657 ops/s
[info]                  ·gc.alloc.rate:                   2264.670 MB/sec
[info]                  ·gc.alloc.rate.norm:              23120.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2035.955 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20785.056 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.213 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala":
[info]   154051.748 ±(99.9%) 1467.314 ops/s [Average]
[info]   (min, avg, max) = (153441.881, 154051.748, 154374.738), stdev = 381.057
[info]   CI (99.9%): [152584.434, 155519.062] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   2263.203 ±(99.9%) 22.399 MB/sec [Average]
[info]   (min, avg, max) = (2254.005, 2263.203, 2268.260), stdev = 5.817
[info]   CI (99.9%): [2240.804, 2285.601] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   23120.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (23120.003, 23120.003, 23120.003), stdev = 0.001
[info]   CI (99.9%): [23120.003, 23120.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   2302.085 ±(99.9%) 1423.377 MB/sec [Average]
[info]   (min, avg, max) = (2028.757, 2302.085, 2712.798), stdev = 369.647
[info]   CI (99.9%): [878.707, 3725.462] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   23511.524 ±(99.9%) 14357.251 B/op [Average]
[info]   (min, avg, max) = (20741.326, 23511.524, 27658.462), stdev = 3728.533
[info]   CI (99.9%): [9154.273, 37868.775] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.113 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.062, 0.083), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.638 ±(99.9%) 1.160 B/op [Average]
[info]   (min, avg, max) = (0.213, 0.638, 0.854), stdev = 0.301
[info]   CI (99.9%): [≈ 0, 1.799] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 4.000), stdev = 0.837
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 89.76% complete, ETA 00:13:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 30890.053 ops/s
[info] # Warmup Iteration   2: 48466.214 ops/s
[info] # Warmup Iteration   3: 49302.077 ops/s
[info] # Warmup Iteration   4: 50074.760 ops/s
[info] # Warmup Iteration   5: 49805.926 ops/s
[info] Iteration   1: 49998.749 ops/s
[info]                  ·gc.alloc.rate:                   2568.192 MB/sec
[info]                  ·gc.alloc.rate.norm:              80840.009 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2018.759 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     63545.295 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.311 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 49006.316 ops/s
[info]                  ·gc.alloc.rate:                   2517.154 MB/sec
[info]                  ·gc.alloc.rate.norm:              80840.009 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2698.519 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     86664.655 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.006 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 49971.342 ops/s
[info]                  ·gc.alloc.rate:                   2567.752 MB/sec
[info]                  ·gc.alloc.rate.norm:              80840.009 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2705.609 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     85180.147 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.311 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 49072.415 ops/s
[info]                  ·gc.alloc.rate:                   2521.883 MB/sec
[info]                  ·gc.alloc.rate.norm:              80840.009 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2711.394 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     86914.853 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.338 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 49462.210 ops/s
[info]                  ·gc.alloc.rate:                   2540.513 MB/sec
[info]                  ·gc.alloc.rate.norm:              80840.009 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2035.665 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     64775.586 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.987 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson":
[info]   49502.206 ±(99.9%) 1825.375 ops/s [Average]
[info]   (min, avg, max) = (49006.316, 49502.206, 49998.749), stdev = 474.044
[info]   CI (99.9%): [47676.832, 51327.581] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2543.099 ±(99.9%) 93.677 MB/sec [Average]
[info]   (min, avg, max) = (2517.154, 2543.099, 2568.192), stdev = 24.328
[info]   CI (99.9%): [2449.421, 2636.776] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   80840.009 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (80840.009, 80840.009, 80840.009), stdev = 0.001
[info]   CI (99.9%): [80840.008, 80840.010] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   2433.989 ±(99.9%) 1430.171 MB/sec [Average]
[info]   (min, avg, max) = (2018.759, 2433.989, 2711.394), stdev = 371.411
[info]   CI (99.9%): [1003.818, 3864.161] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   77416.107 ±(99.9%) 46695.481 B/op [Average]
[info]   (min, avg, max) = (63545.295, 77416.107, 86914.853), stdev = 12126.668
[info]   CI (99.9%): [30720.626, 124111.588] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.062, 0.104), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.161] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.991 ±(99.9%) 3.187 B/op [Average]
[info]   (min, avg, max) = (1.311, 1.991, 3.338), stdev = 0.828
[info]   CI (99.9%): [≈ 0, 5.178] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.000, 4.000), stdev = 0.707
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 89.96% complete, ETA 00:13:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 58898.446 ops/s
[info] # Warmup Iteration   2: 66159.726 ops/s
[info] # Warmup Iteration   3: 65841.646 ops/s
[info] # Warmup Iteration   4: 66027.177 ops/s
[info] # Warmup Iteration   5: 66814.965 ops/s
[info] Iteration   1: 66988.494 ops/s
[info]                  ·gc.alloc.rate:                   1594.933 MB/sec
[info]                  ·gc.alloc.rate.norm:              37464.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.227 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     31669.033 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.467 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 66764.968 ops/s
[info]                  ·gc.alloc.rate:                   1589.517 MB/sec
[info]                  ·gc.alloc.rate.norm:              37464.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.155 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     31798.823 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.491 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 65938.313 ops/s
[info]                  ·gc.alloc.rate:                   1569.569 MB/sec
[info]                  ·gc.alloc.rate.norm:              37464.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2025.727 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     48352.029 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.988 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 65614.369 ops/s
[info]                  ·gc.alloc.rate:               1562.465 MB/sec
[info]                  ·gc.alloc.rate.norm:          37464.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1352.787 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 32436.445 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 65982.587 ops/s
[info]                  ·gc.alloc.rate:                   1571.273 MB/sec
[info]                  ·gc.alloc.rate.norm:              37464.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1353.452 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     32270.477 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.497 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readUPickle":
[info]   66257.746 ±(99.9%) 2264.158 ops/s [Average]
[info]   (min, avg, max) = (65614.369, 66257.746, 66988.494), stdev = 587.995
[info]   CI (99.9%): [63993.588, 68521.904] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readUPickle:·gc.alloc.rate":
[info]   1577.552 ±(99.9%) 53.634 MB/sec [Average]
[info]   (min, avg, max) = (1562.465, 1577.552, 1594.933), stdev = 13.929
[info]   CI (99.9%): [1523.917, 1631.186] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readUPickle:·gc.alloc.rate.norm":
[info]   37464.007 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (37464.006, 37464.007, 37464.007), stdev = 0.001
[info]   CI (99.9%): [37464.006, 37464.007] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readUPickle:·gc.churn.PS_Eden_Space":
[info]   1485.870 ±(99.9%) 1162.116 MB/sec [Average]
[info]   (min, avg, max) = (1348.227, 1485.870, 2025.727), stdev = 301.798
[info]   CI (99.9%): [323.754, 2647.985] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   35305.361 ±(99.9%) 28110.719 B/op [Average]
[info]   (min, avg, max) = (31669.033, 35305.361, 48352.029), stdev = 7300.264
[info]   CI (99.9%): [7194.643, 63416.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.083), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.169] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   0.888 ±(99.9%) 3.131 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.888, 1.988), stdev = 0.813
[info]   CI (99.9%): [≈ 0, 4.019] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readUPickle:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readUPickle:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 3.000), stdev = 0.707
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 90.16% complete, ETA 00:13:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 158567.339 ops/s
[info] # Warmup Iteration   2: 213978.770 ops/s
[info] # Warmup Iteration   3: 216821.389 ops/s
[info] # Warmup Iteration   4: 215622.586 ops/s
[info] # Warmup Iteration   5: 215554.897 ops/s
[info] Iteration   1: 215352.069 ops/s
[info]                  ·gc.alloc.rate:                   1487.578 MB/sec
[info]                  ·gc.alloc.rate.norm:              10872.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.573 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9804.917 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.152 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 215676.123 ops/s
[info]                  ·gc.alloc.rate:                   1490.387 MB/sec
[info]                  ·gc.alloc.rate.norm:              10872.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.413 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9799.867 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.304 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 215490.220 ops/s
[info]                  ·gc.alloc.rate:                   1488.548 MB/sec
[info]                  ·gc.alloc.rate.norm:              10872.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.919 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9822.965 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.760 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 215468.296 ops/s
[info]                  ·gc.alloc.rate:                   1488.756 MB/sec
[info]                  ·gc.alloc.rate.norm:              10872.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.570 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9833.654 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.304 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 214160.918 ops/s
[info]                  ·gc.alloc.rate:                   1479.347 MB/sec
[info]                  ·gc.alloc.rate.norm:              10872.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2023.390 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14870.276 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.306 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce":
[info]   215229.525 ±(99.9%) 2343.332 ops/s [Average]
[info]   (min, avg, max) = (214160.918, 215229.525, 215676.123), stdev = 608.556
[info]   CI (99.9%): [212886.193, 217572.858] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1486.923 ±(99.9%) 16.765 MB/sec [Average]
[info]   (min, avg, max) = (1479.347, 1486.923, 1490.387), stdev = 4.354
[info]   CI (99.9%): [1470.158, 1503.688] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   10872.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10872.002, 10872.002, 10872.002), stdev = 0.001
[info]   CI (99.9%): [10872.002, 10872.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1479.973 ±(99.9%) 1169.768 MB/sec [Average]
[info]   (min, avg, max) = (1341.573, 1479.973, 2023.390), stdev = 303.785
[info]   CI (99.9%): [310.205, 2649.740] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   10826.336 ±(99.9%) 8705.045 B/op [Average]
[info]   (min, avg, max) = (9799.867, 10826.336, 14870.276), stdev = 2260.672
[info]   CI (99.9%): [2121.291, 19531.380] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.104), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.172] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.365 ±(99.9%) 0.887 B/op [Average]
[info]   (min, avg, max) = (0.152, 0.365, 0.760), stdev = 0.230
[info]   CI (99.9%): [≈ 0, 1.253] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 3.000), stdev = 0.837
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 90.36% complete, ETA 00:12:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 320816.884 ops/s
[info] # Warmup Iteration   2: 535815.889 ops/s
[info] # Warmup Iteration   3: 541767.003 ops/s
[info] # Warmup Iteration   4: 542602.832 ops/s
[info] # Warmup Iteration   5: 532343.648 ops/s
[info] Iteration   1: 532591.243 ops/s
[info]                  ·gc.alloc.rate:                   465.715 MB/sec
[info]                  ·gc.alloc.rate.norm:              1376.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.687 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1511.827 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.092 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 531056.940 ops/s
[info]                  ·gc.alloc.rate:               464.286 MB/sec
[info]                  ·gc.alloc.rate.norm:          1376.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.589 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1516.193 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 534373.285 ops/s
[info]                  ·gc.alloc.rate:      467.200 MB/sec
[info]                  ·gc.alloc.rate.norm: 1376.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 534478.421 ops/s
[info]                  ·gc.alloc.rate:                   467.275 MB/sec
[info]                  ·gc.alloc.rate.norm:              1376.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          666.456 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1962.538 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.380 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.008 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 535671.978 ops/s
[info]                  ·gc.alloc.rate:                   468.300 MB/sec
[info]                  ·gc.alloc.rate.norm:              1376.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          666.431 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1958.168 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.183 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala":
[info]   533634.373 ±(99.9%) 6979.531 ops/s [Average]
[info]   (min, avg, max) = (531056.940, 533634.373, 535671.978), stdev = 1812.562
[info]   CI (99.9%): [526654.842, 540613.905] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   466.555 ±(99.9%) 6.037 MB/sec [Average]
[info]   (min, avg, max) = (464.286, 466.555, 468.300), stdev = 1.568
[info]   CI (99.9%): [460.518, 472.592] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1376.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1376.001, 1376.001, 1376.001), stdev = 0.001
[info]   CI (99.9%): [1376.001, 1376.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   471.233 ±(99.9%) 1057.246 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 471.233, 666.456), stdev = 274.563
[info]   CI (99.9%): [≈ 0, 1528.478] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1389.745 ±(99.9%) 3112.526 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1389.745, 1962.538), stdev = 808.313
[info]   CI (99.9%): [≈ 0, 4502.272] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.495 ±(99.9%) 4.059 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.495, 2.380), stdev = 1.054
[info]   CI (99.9%): [≈ 0, 4.554] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.457 ±(99.9%) 11.953 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.457, 7.008), stdev = 3.104
[info]   CI (99.9%): [≈ 0, 13.410] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.600, 3.000), stdev = 1.140
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 90.56% complete, ETA 00:12:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 520366.553 ops/s
[info] # Warmup Iteration   2: 535930.612 ops/s
[info] # Warmup Iteration   3: 526146.795 ops/s
[info] # Warmup Iteration   4: 527198.359 ops/s
[info] # Warmup Iteration   5: 526949.711 ops/s
[info] Iteration   1: 519364.350 ops/s
[info]                  ·gc.alloc.rate:                   279.839 MB/sec
[info]                  ·gc.alloc.rate.norm:              848.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.608 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1550.336 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 517251.789 ops/s
[info]                  ·gc.alloc.rate:               278.700 MB/sec
[info]                  ·gc.alloc.rate.norm:          848.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.585 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1556.599 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 517687.229 ops/s
[info]                  ·gc.alloc.rate:      278.944 MB/sec
[info]                  ·gc.alloc.rate.norm: 848.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 521474.970 ops/s
[info]                  ·gc.alloc.rate:                   280.969 MB/sec
[info]                  ·gc.alloc.rate.norm:              848.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.588 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1544.037 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.016 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.049 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 529358.192 ops/s
[info]                  ·gc.alloc.rate:      285.265 MB/sec
[info]                  ·gc.alloc.rate.norm: 848.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala":
[info]   521027.306 ±(99.9%) 19038.322 ops/s [Average]
[info]   (min, avg, max) = (517251.789, 521027.306, 529358.192), stdev = 4944.192
[info]   CI (99.9%): [501988.983, 540065.628] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   280.744 ±(99.9%) 10.319 MB/sec [Average]
[info]   (min, avg, max) = (278.700, 280.744, 285.265), stdev = 2.680
[info]   CI (99.9%): [270.424, 291.063] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   848.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (848.001, 848.001, 848.001), stdev = 0.001
[info]   CI (99.9%): [848.001, 848.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   306.956 ±(99.9%) 1078.994 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 306.956, 511.608), stdev = 280.211
[info]   CI (99.9%): [≈ 0, 1385.950] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   930.194 ±(99.9%) 3269.809 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 930.194, 1556.599), stdev = 849.159
[info]   CI (99.9%): [≈ 0, 4200.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.005 ±(99.9%) 0.029 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.005, 0.016), stdev = 0.008
[info]   CI (99.9%): [≈ 0, 0.035] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.016 ±(99.9%) 0.089 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.016, 0.049), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 1.000
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 90.76% complete, ETA 00:12:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 614319.978 ops/s
[info] # Warmup Iteration   2: 634597.650 ops/s
[info] # Warmup Iteration   3: 638492.234 ops/s
[info] # Warmup Iteration   4: 635819.826 ops/s
[info] # Warmup Iteration   5: 635597.458 ops/s
[info] Iteration   1: 636867.615 ops/s
[info]                  ·gc.alloc.rate:      6.475 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 635820.672 ops/s
[info]                  ·gc.alloc.rate:      6.464 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 636593.183 ops/s
[info]                  ·gc.alloc.rate:      6.472 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 637003.058 ops/s
[info]                  ·gc.alloc.rate:      6.476 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 635843.665 ops/s
[info]                  ·gc.alloc.rate:      6.464 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc":
[info]   636425.638 ±(99.9%) 2162.460 ops/s [Average]
[info]   (min, avg, max) = (635820.672, 636425.638, 637003.058), stdev = 561.584
[info]   CI (99.9%): [634263.178, 638588.098] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   6.470 ±(99.9%) 0.022 MB/sec [Average]
[info]   (min, avg, max) = (6.464, 6.470, 6.476), stdev = 0.006
[info]   CI (99.9%): [6.448, 6.493] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   16.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (16.001, 16.001, 16.001), stdev = 0.001
[info]   CI (99.9%): [16.001, 16.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 90.96% complete, ETA 00:12:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 22356.091 ops/s
[info] # Warmup Iteration   2: 30999.304 ops/s
[info] # Warmup Iteration   3: 30308.374 ops/s
[info] # Warmup Iteration   4: 30824.857 ops/s
[info] # Warmup Iteration   5: 30974.306 ops/s
[info] Iteration   1: 30899.098 ops/s
[info]                  ·gc.alloc.rate:                   1625.081 MB/sec
[info]                  ·gc.alloc.rate.norm:              82736.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2012.069 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     102438.305 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.060 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 31251.242 ops/s
[info]                  ·gc.alloc.rate:                   1642.842 MB/sec
[info]                  ·gc.alloc.rate.norm:              82736.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.612 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     67615.975 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.048 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 31222.828 ops/s
[info]                  ·gc.alloc.rate:                   1641.587 MB/sec
[info]                  ·gc.alloc.rate.norm:              82736.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2017.682 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     101691.188 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4.197 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 30845.835 ops/s
[info]                  ·gc.alloc.rate:               1621.496 MB/sec
[info]                  ·gc.alloc.rate.norm:          82736.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1347.559 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 68758.525 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 30924.085 ops/s
[info]                  ·gc.alloc.rate:                   1625.722 MB/sec
[info]                  ·gc.alloc.rate.norm:              82736.015 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2024.363 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     103023.584 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.178 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson":
[info]   31028.618 ±(99.9%) 741.664 ops/s [Average]
[info]   (min, avg, max) = (30845.835, 31028.618, 31251.242), stdev = 192.608
[info]   CI (99.9%): [30286.953, 31770.282] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1631.346 ±(99.9%) 38.744 MB/sec [Average]
[info]   (min, avg, max) = (1621.496, 1631.346, 1642.842), stdev = 10.062
[info]   CI (99.9%): [1592.602, 1670.090] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   82736.014 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (82736.014, 82736.014, 82736.015), stdev = 0.001
[info]   CI (99.9%): [82736.012, 82736.016] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1748.857 ±(99.9%) 1419.428 MB/sec [Average]
[info]   (min, avg, max) = (1342.612, 1748.857, 2024.363), stdev = 368.621
[info]   CI (99.9%): [329.429, 3168.285] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   88705.515 ±(99.9%) 72164.278 B/op [Average]
[info]   (min, avg, max) = (67615.975, 88705.515, 103023.584), stdev = 18740.834
[info]   CI (99.9%): [16541.237, 160869.793] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.083), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.169] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.897 ±(99.9%) 6.656 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.897, 4.197), stdev = 1.729
[info]   CI (99.9%): [≈ 0, 8.553] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 91.16% complete, ETA 00:11:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 106523.607 ops/s
[info] # Warmup Iteration   2: 114565.045 ops/s
[info] # Warmup Iteration   3: 114927.771 ops/s
[info] # Warmup Iteration   4: 115242.223 ops/s
[info] # Warmup Iteration   5: 115406.082 ops/s
[info] Iteration   1: 115412.662 ops/s
[info]                  ·gc.alloc.rate:                   1322.310 MB/sec
[info]                  ·gc.alloc.rate.norm:              18032.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.249 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18372.086 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.568 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 115328.210 ops/s
[info]                  ·gc.alloc.rate:                   1321.384 MB/sec
[info]                  ·gc.alloc.rate.norm:              18032.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.940 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18394.396 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.136 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 115304.423 ops/s
[info]                  ·gc.alloc.rate:               1321.454 MB/sec
[info]                  ·gc.alloc.rate.norm:          18032.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1349.291 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 18411.862 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 115337.520 ops/s
[info]                  ·gc.alloc.rate:                   1321.508 MB/sec
[info]                  ·gc.alloc.rate.norm:              18032.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.340 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18425.413 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.568 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 115315.588 ops/s
[info]                  ·gc.alloc.rate:                   1321.405 MB/sec
[info]                  ·gc.alloc.rate.norm:              18032.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1351.836 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18447.271 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.568 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeUPickle":
[info]   115339.681 ±(99.9%) 164.343 ops/s [Average]
[info]   (min, avg, max) = (115304.423, 115339.681, 115412.662), stdev = 42.679
[info]   CI (99.9%): [115175.338, 115504.023] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeUPickle:·gc.alloc.rate":
[info]   1321.612 ±(99.9%) 1.514 MB/sec [Average]
[info]   (min, avg, max) = (1321.384, 1321.612, 1322.310), stdev = 0.393
[info]   CI (99.9%): [1320.098, 1323.126] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeUPickle:·gc.alloc.rate.norm":
[info]   18032.004 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (18032.004, 18032.004, 18032.004), stdev = 0.001
[info]   CI (99.9%): [18032.003, 18032.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space":
[info]   1349.331 ±(99.9%) 7.091 MB/sec [Average]
[info]   (min, avg, max) = (1347.249, 1349.331, 1351.836), stdev = 1.841
[info]   CI (99.9%): [1342.241, 1356.422] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   18410.206 ±(99.9%) 110.785 B/op [Average]
[info]   (min, avg, max) = (18372.086, 18410.206, 18447.271), stdev = 28.771
[info]   CI (99.9%): [18299.420, 18520.991] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.113 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.083), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   0.568 ±(99.9%) 1.547 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.568, 1.136), stdev = 0.402
[info]   CI (99.9%): [≈ 0, 2.115] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeUPickle:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeUPickle:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 91.37% complete, ETA 00:11:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2823597.212 ops/s
[info] # Warmup Iteration   2: 3215685.410 ops/s
[info] # Warmup Iteration   3: 3234986.384 ops/s
[info] # Warmup Iteration   4: 3267693.353 ops/s
[info] # Warmup Iteration   5: 3243079.508 ops/s
[info] Iteration   1: 3260126.024 ops/s
[info]                  ·gc.alloc.rate:                   3065.735 MB/sec
[info]                  ·gc.alloc.rate.norm:              1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3384.738 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1634.001 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.030 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 3275884.039 ops/s
[info]                  ·gc.alloc.rate:                   3080.558 MB/sec
[info]                  ·gc.alloc.rate.norm:              1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2713.160 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1303.490 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.050 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 3242818.878 ops/s
[info]                  ·gc.alloc.rate:                   3049.385 MB/sec
[info]                  ·gc.alloc.rate.norm:              1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3395.985 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1648.220 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 3276342.041 ops/s
[info]                  ·gc.alloc.rate:                   3081.427 MB/sec
[info]                  ·gc.alloc.rate.norm:              1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2720.269 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1306.537 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 3237390.635 ops/s
[info]                  ·gc.alloc.rate:                   3044.841 MB/sec
[info]                  ·gc.alloc.rate.norm:              1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3403.289 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1654.230 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.051 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce":
[info]   3258512.323 ±(99.9%) 69809.564 ops/s [Average]
[info]   (min, avg, max) = (3237390.635, 3258512.323, 3276342.041), stdev = 18129.322
[info]   CI (99.9%): [3188702.759, 3328321.888] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:·gc.alloc.rate":
[info]   3064.389 ±(99.9%) 65.596 MB/sec [Average]
[info]   (min, avg, max) = (3044.841, 3064.389, 3081.427), stdev = 17.035
[info]   CI (99.9%): [2998.794, 3129.985] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   1480.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1480.000, 1480.000, 1480.000), stdev = 0.001
[info]   CI (99.9%): [1480.000, 1480.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   3123.488 ±(99.9%) 1430.127 MB/sec [Average]
[info]   (min, avg, max) = (2713.160, 3123.488, 3403.289), stdev = 371.399
[info]   CI (99.9%): [1693.362, 4553.615] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1509.296 ±(99.9%) 718.649 B/op [Average]
[info]   (min, avg, max) = (1303.490, 1509.296, 1654.230), stdev = 186.631
[info]   CI (99.9%): [790.647, 2227.945] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.079 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.079, 0.104), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.184] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.038 ±(99.9%) 0.051 B/op [Average]
[info]   (min, avg, max) = (0.020, 0.038, 0.051), stdev = 0.013
[info]   CI (99.9%): [≈ 0, 0.089] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 91.57% complete, ETA 00:11:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.996 ops/s
[info] # Warmup Iteration   2: 7623693.361 ops/s
[info] # Warmup Iteration   3: 7730300.265 ops/s
[info] # Warmup Iteration   4: 8001877.177 ops/s
[info] # Warmup Iteration   5: 7973403.602 ops/s
[info] Iteration   1: 8026975.397 ops/s
[info]                  ·gc.alloc.rate:                   1509.631 MB/sec
[info]                  ·gc.alloc.rate.norm:              296.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.239 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     261.610 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 8001662.728 ops/s
[info]                  ·gc.alloc.rate:                   1504.866 MB/sec
[info]                  ·gc.alloc.rate.norm:              296.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.609 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     262.905 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 8018659.367 ops/s
[info]                  ·gc.alloc.rate:                   1508.239 MB/sec
[info]                  ·gc.alloc.rate.norm:              296.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.707 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     262.729 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.355 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.462 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 8025075.572 ops/s
[info]                  ·gc.alloc.rate:               1509.673 MB/sec
[info]                  ·gc.alloc.rate.norm:          296.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2009.266 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 393.955 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 8058274.430 ops/s
[info]                  ·gc.alloc.rate:               1515.556 MB/sec
[info]                  ·gc.alloc.rate.norm:          296.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1339.017 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 261.521 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava":
[info]   8026129.499 ±(99.9%) 79138.665 ops/s [Average]
[info]   (min, avg, max) = (8001662.728, 8026129.499, 8058274.430), stdev = 20552.060
[info]   CI (99.9%): [7946990.834, 8105268.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   1509.593 ±(99.9%) 14.881 MB/sec [Average]
[info]   (min, avg, max) = (1504.866, 1509.593, 1515.556), stdev = 3.865
[info]   CI (99.9%): [1494.712, 1524.474] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   296.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (296.000, 296.000, 296.000), stdev = 0.001
[info]   CI (99.9%): [296.000, 296.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   1471.568 ±(99.9%) 1157.459 MB/sec [Average]
[info]   (min, avg, max) = (1334.239, 1471.568, 2009.266), stdev = 300.589
[info]   CI (99.9%): [314.108, 2629.027] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   288.544 ±(99.9%) 226.918 B/op [Average]
[info]   (min, avg, max) = (261.521, 288.544, 393.955), stdev = 58.930
[info]   CI (99.9%): [61.626, 515.462] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.488 ±(99.9%) 4.020 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.488, 2.355), stdev = 1.044
[info]   CI (99.9%): [≈ 0, 4.507] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.096 ±(99.9%) 0.789 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.096, 0.462), stdev = 0.205
[info]   CI (99.9%): [≈ 0, 0.885] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.600, 4.000), stdev = 0.894
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 91.77% complete, ETA 00:10:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2522732.195 ops/s
[info] # Warmup Iteration   2: 3894964.786 ops/s
[info] # Warmup Iteration   3: 4011105.816 ops/s
[info] # Warmup Iteration   4: 3961973.581 ops/s
[info] # Warmup Iteration   5: 3999873.818 ops/s
[info] Iteration   1: 3954505.282 ops/s
[info]                  ·gc.alloc.rate:                   2552.790 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2691.877 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1071.356 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 4025790.728 ops/s
[info]                  ·gc.alloc.rate:                   2598.988 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2024.168 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     791.291 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 4006242.389 ops/s
[info]                  ·gc.alloc.rate:                   2586.238 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2704.662 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1062.523 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.041 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 3942909.433 ops/s
[info]                  ·gc.alloc.rate:                   2545.293 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2709.839 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1081.682 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 3967045.830 ops/s
[info]                  ·gc.alloc.rate:                   2561.210 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2714.735 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1076.902 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala":
[info]   3979298.732 ±(99.9%) 135820.462 ops/s [Average]
[info]   (min, avg, max) = (3942909.433, 3979298.732, 4025790.728), stdev = 35272.143
[info]   CI (99.9%): [3843478.271, 4115119.194] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   2568.904 ±(99.9%) 87.848 MB/sec [Average]
[info]   (min, avg, max) = (2545.293, 2568.904, 2598.988), stdev = 22.814
[info]   CI (99.9%): [2481.056, 2656.752] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   1016.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1016.000, 1016.000, 1016.000), stdev = 0.001
[info]   CI (99.9%): [1016.000, 1016.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   2569.056 ±(99.9%) 1173.371 MB/sec [Average]
[info]   (min, avg, max) = (2024.168, 2569.056, 2714.735), stdev = 304.721
[info]   CI (99.9%): [1395.685, 3742.427] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1016.751 ±(99.9%) 486.094 B/op [Average]
[info]   (min, avg, max) = (791.291, 1016.751, 1081.682), stdev = 126.237
[info]   CI (99.9%): [530.657, 1502.844] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.071 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.071, 0.104), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.028 ±(99.9%) 0.048 B/op [Average]
[info]   (min, avg, max) = (0.008, 0.028, 0.041), stdev = 0.012
[info]   CI (99.9%): [≈ 0, 0.076] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.000, 4.000), stdev = 0.707
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 91.97% complete, ETA 00:10:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7215149.536 ops/s
[info] # Warmup Iteration   2: 7504649.182 ops/s
[info] # Warmup Iteration   3: 7440199.207 ops/s
[info] # Warmup Iteration   4: 7684268.529 ops/s
[info] # Warmup Iteration   5: 7660935.542 ops/s
[info] Iteration   1: 7672940.450 ops/s
[info]                  ·gc.alloc.rate:               1443.442 MB/sec
[info]                  ·gc.alloc.rate.norm:          296.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1347.292 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 276.283 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 7650340.185 ops/s
[info]                  ·gc.alloc.rate:                   1439.025 MB/sec
[info]                  ·gc.alloc.rate.norm:              296.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.483 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     277.376 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 7665243.184 ops/s
[info]                  ·gc.alloc.rate:                   1441.672 MB/sec
[info]                  ·gc.alloc.rate.norm:              296.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.663 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     277.109 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 7667554.216 ops/s
[info]                  ·gc.alloc.rate:                   1442.017 MB/sec
[info]                  ·gc.alloc.rate.norm:              296.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.230 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     277.159 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 7536248.334 ops/s
[info]                  ·gc.alloc.rate:                   1417.969 MB/sec
[info]                  ·gc.alloc.rate.norm:              296.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.179 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     282.266 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala":
[info]   7638465.274 ±(99.9%) 222381.580 ops/s [Average]
[info]   (min, avg, max) = (7536248.334, 7638465.274, 7672940.450), stdev = 57751.790
[info]   CI (99.9%): [7416083.694, 7860846.855] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1436.825 ±(99.9%) 41.052 MB/sec [Average]
[info]   (min, avg, max) = (1417.969, 1436.825, 1443.442), stdev = 10.661
[info]   CI (99.9%): [1395.773, 1477.877] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   296.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (296.000, 296.000, 296.000), stdev = 0.001
[info]   CI (99.9%): [296.000, 296.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   1349.569 ±(99.9%) 7.106 MB/sec [Average]
[info]   (min, avg, max) = (1347.292, 1349.569, 1352.179), stdev = 1.845
[info]   CI (99.9%): [1342.463, 1356.675] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   278.039 ±(99.9%) 9.240 B/op [Average]
[info]   (min, avg, max) = (276.283, 278.039, 282.266), stdev = 2.400
[info]   CI (99.9%): [268.798, 287.279] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.160 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.062, 0.104), stdev = 0.042
[info]   CI (99.9%): [≈ 0, 0.223] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.013 ±(99.9%) 0.033 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.013, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.046] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 92.17% complete, ETA 00:10:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4023515.913 ops/s
[info] # Warmup Iteration   2: 5168289.826 ops/s
[info] # Warmup Iteration   3: 5191702.652 ops/s
[info] # Warmup Iteration   4: 5289804.669 ops/s
[info] # Warmup Iteration   5: 5301624.498 ops/s
[info] Iteration   1: 5306423.440 ops/s
[info]                  ·gc.alloc.rate:                   3290.761 MB/sec
[info]                  ·gc.alloc.rate.norm:              976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3380.277 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1002.550 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 5302993.772 ops/s
[info]                  ·gc.alloc.rate:                   3288.727 MB/sec
[info]                  ·gc.alloc.rate.norm:              976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3388.378 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1005.574 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 5297024.357 ops/s
[info]                  ·gc.alloc.rate:                   3284.889 MB/sec
[info]                  ·gc.alloc.rate.norm:              976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3395.496 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1008.863 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 5215924.870 ops/s
[info]                  ·gc.alloc.rate:                   3234.687 MB/sec
[info]                  ·gc.alloc.rate.norm:              976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2719.289 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     820.490 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 5294483.683 ops/s
[info]                  ·gc.alloc.rate:                   3283.634 MB/sec
[info]                  ·gc.alloc.rate.norm:              976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3402.455 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1011.317 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson":
[info]   5283370.024 ±(99.9%) 146316.293 ops/s [Average]
[info]   (min, avg, max) = (5215924.870, 5283370.024, 5306423.440), stdev = 37997.877
[info]   CI (99.9%): [5137053.731, 5429686.318] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3276.540 ±(99.9%) 90.766 MB/sec [Average]
[info]   (min, avg, max) = (3234.687, 3276.540, 3290.761), stdev = 23.572
[info]   CI (99.9%): [3185.773, 3367.306] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   976.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (976.000, 976.000, 976.000), stdev = 0.001
[info]   CI (99.9%): [976.000, 976.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3257.179 ±(99.9%) 1158.283 MB/sec [Average]
[info]   (min, avg, max) = (2719.289, 3257.179, 3402.455), stdev = 300.802
[info]   CI (99.9%): [2098.896, 4415.462] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   969.759 ±(99.9%) 321.566 B/op [Average]
[info]   (min, avg, max) = (820.490, 969.759, 1011.317), stdev = 83.510
[info]   CI (99.9%): [648.192, 1291.325] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.058, 0.083), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.017 ±(99.9%) 0.026 B/op [Average]
[info]   (min, avg, max) = (0.012, 0.017, 0.025), stdev = 0.007
[info]   CI (99.9%): [≈ 0, 0.043] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.000, 5.000), stdev = 0.707
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 92.37% complete, ETA 00:10:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3554297.551 ops/s
[info] # Warmup Iteration   2: 3798524.659 ops/s
[info] # Warmup Iteration   3: 3825406.822 ops/s
[info] # Warmup Iteration   4: 3824881.029 ops/s
[info] # Warmup Iteration   5: 3841099.156 ops/s
[info] Iteration   1: 3859544.967 ops/s
[info]                  ·gc.alloc.rate:                   2433.490 MB/sec
[info]                  ·gc.alloc.rate.norm:              992.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2028.548 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     826.928 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 3863036.861 ops/s
[info]                  ·gc.alloc.rate:                   2435.030 MB/sec
[info]                  ·gc.alloc.rate.norm:              992.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2708.897 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1103.570 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.051 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 3870301.698 ops/s
[info]                  ·gc.alloc.rate:                   2440.027 MB/sec
[info]                  ·gc.alloc.rate.norm:              992.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2034.669 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     827.201 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 3861418.843 ops/s
[info]                  ·gc.alloc.rate:                   2434.006 MB/sec
[info]                  ·gc.alloc.rate.norm:              992.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2715.502 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1106.726 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 3861099.143 ops/s
[info]                  ·gc.alloc.rate:                   2433.790 MB/sec
[info]                  ·gc.alloc.rate.norm:              992.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2718.129 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1107.895 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readUPickle":
[info]   3863080.303 ±(99.9%) 16261.219 ops/s [Average]
[info]   (min, avg, max) = (3859544.967, 3863080.303, 3870301.698), stdev = 4222.987
[info]   CI (99.9%): [3846819.083, 3879341.522] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readUPickle:·gc.alloc.rate":
[info]   2435.269 ±(99.9%) 10.483 MB/sec [Average]
[info]   (min, avg, max) = (2433.490, 2435.269, 2440.027), stdev = 2.722
[info]   CI (99.9%): [2424.786, 2445.752] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readUPickle:·gc.alloc.rate.norm":
[info]   992.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (992.000, 992.000, 992.000), stdev = 0.001
[info]   CI (99.9%): [992.000, 992.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readUPickle:·gc.churn.PS_Eden_Space":
[info]   2441.149 ±(99.9%) 1439.675 MB/sec [Average]
[info]   (min, avg, max) = (2028.548, 2441.149, 2718.129), stdev = 373.879
[info]   CI (99.9%): [1001.475, 3880.824] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   994.464 ±(99.9%) 588.465 B/op [Average]
[info]   (min, avg, max) = (826.928, 994.464, 1107.895), stdev = 152.823
[info]   CI (99.9%): [405.999, 1582.929] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space":
[info]   0.092 ±(99.9%) 0.108 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 0.092, 0.125), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.199] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   0.037 ±(99.9%) 0.044 B/op [Average]
[info]   (min, avg, max) = (0.025, 0.037, 0.051), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.081] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readUPickle:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readUPickle:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.000, 4.000), stdev = 0.707
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 92.57% complete, ETA 00:09:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2050630.725 ops/s
[info] # Warmup Iteration   2: 2707858.508 ops/s
[info] # Warmup Iteration   3: 2796791.111 ops/s
[info] # Warmup Iteration   4: 2805354.490 ops/s
[info] # Warmup Iteration   5: 2809476.360 ops/s
[info] Iteration   1: 2791739.025 ops/s
[info]                  ·gc.alloc.rate:                   1731.224 MB/sec
[info]                  ·gc.alloc.rate.norm:              976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2014.740 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1135.836 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 2800946.855 ops/s
[info]                  ·gc.alloc.rate:                   1737.016 MB/sec
[info]                  ·gc.alloc.rate.norm:              976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.663 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     756.105 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.058 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 2777201.571 ops/s
[info]                  ·gc.alloc.rate:                   1722.394 MB/sec
[info]                  ·gc.alloc.rate.norm:              976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2021.626 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1145.561 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.035 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 2741014.193 ops/s
[info]                  ·gc.alloc.rate:               1700.055 MB/sec
[info]                  ·gc.alloc.rate.norm:          976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1349.820 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 774.931 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 2792637.845 ops/s
[info]                  ·gc.alloc.rate:                   1732.168 MB/sec
[info]                  ·gc.alloc.rate.norm:              976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2027.761 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1142.553 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.035 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce":
[info]   2780707.898 ±(99.9%) 91559.320 ops/s [Average]
[info]   (min, avg, max) = (2741014.193, 2780707.898, 2800946.855), stdev = 23777.665
[info]   CI (99.9%): [2689148.578, 2872267.217] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1724.571 ±(99.9%) 56.549 MB/sec [Average]
[info]   (min, avg, max) = (1700.055, 1724.571, 1737.016), stdev = 14.685
[info]   CI (99.9%): [1668.023, 1781.120] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   976.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (976.000, 976.000, 976.000), stdev = 0.001
[info]   CI (99.9%): [976.000, 976.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1751.922 ±(99.9%) 1420.874 MB/sec [Average]
[info]   (min, avg, max) = (1345.663, 1751.922, 2027.761), stdev = 368.996
[info]   CI (99.9%): [331.048, 3172.796] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   990.997 ±(99.9%) 793.121 B/op [Average]
[info]   (min, avg, max) = (756.105, 990.997, 1145.561), stdev = 205.971
[info]   CI (99.9%): [197.876, 1784.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.146 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.104), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.031 ±(99.9%) 0.082 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.031, 0.058), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.112] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 92.77% complete, ETA 00:09:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 126853.775 ops/s
[info] # Warmup Iteration   2: 6745805.103 ops/s
[info] # Warmup Iteration   3: 7083528.055 ops/s
[info] # Warmup Iteration   4: 7201237.768 ops/s
[info] # Warmup Iteration   5: 7216120.837 ops/s
[info] Iteration   1: 7223383.971 ops/s
[info]                  ·gc.alloc.rate:               697.761 MB/sec
[info]                  ·gc.alloc.rate.norm:          152.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      663.951 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 144.635 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 7219179.147 ops/s
[info]                  ·gc.alloc.rate:               697.320 MB/sec
[info]                  ·gc.alloc.rate.norm:          152.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      663.923 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 144.720 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 7223149.922 ops/s
[info]                  ·gc.alloc.rate:                   697.602 MB/sec
[info]                  ·gc.alloc.rate.norm:              152.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          665.138 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     144.927 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.007 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 7203619.873 ops/s
[info]                  ·gc.alloc.rate:               695.841 MB/sec
[info]                  ·gc.alloc.rate.norm:          152.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      665.257 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 145.319 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 7185595.788 ops/s
[info]                  ·gc.alloc.rate:                   693.976 MB/sec
[info]                  ·gc.alloc.rate.norm:              152.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          666.514 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     145.985 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.023 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava":
[info]   7210985.740 ±(99.9%) 62911.822 ops/s [Average]
[info]   (min, avg, max) = (7185595.788, 7210985.740, 7223383.971), stdev = 16338.001
[info]   CI (99.9%): [7148073.918, 7273897.563] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   696.500 ±(99.9%) 6.174 MB/sec [Average]
[info]   (min, avg, max) = (693.976, 696.500, 697.761), stdev = 1.603
[info]   CI (99.9%): [690.326, 702.674] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   152.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (152.000, 152.000, 152.000), stdev = 0.001
[info]   CI (99.9%): [152.000, 152.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   664.957 ±(99.9%) 4.141 MB/sec [Average]
[info]   (min, avg, max) = (663.923, 664.957, 666.514), stdev = 1.075
[info]   CI (99.9%): [660.816, 669.097] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   145.117 ±(99.9%) 2.127 B/op [Average]
[info]   (min, avg, max) = (144.635, 145.117, 145.985), stdev = 0.552
[info]   CI (99.9%): [142.990, 147.244] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.006 ±(99.9%) 0.039 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.006, 0.023), stdev = 0.010
[info]   CI (99.9%): [≈ 0, 0.045] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.001 ±(99.9%) 0.009 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.005), stdev = 0.002
[info]   CI (99.9%): [≈ 0, 0.010] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 92.97% complete, ETA 00:09:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3407640.947 ops/s
[info] # Warmup Iteration   2: 4729855.793 ops/s
[info] # Warmup Iteration   3: 4813961.322 ops/s
[info] # Warmup Iteration   4: 4763223.892 ops/s
[info] # Warmup Iteration   5: 4826045.767 ops/s
[info] Iteration   1: 4821771.021 ops/s
[info]                  ·gc.alloc.rate:                   1274.645 MB/sec
[info]                  ·gc.alloc.rate.norm:              416.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.798 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     436.611 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 4902134.165 ops/s
[info]                  ·gc.alloc.rate:                   1295.739 MB/sec
[info]                  ·gc.alloc.rate.norm:              416.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.261 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     429.652 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 4910823.518 ops/s
[info]                  ·gc.alloc.rate:                   1297.977 MB/sec
[info]                  ·gc.alloc.rate.norm:              416.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.255 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     429.550 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 4914204.241 ops/s
[info]                  ·gc.alloc.rate:                   1299.489 MB/sec
[info]                  ·gc.alloc.rate.norm:              416.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.944 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     429.911 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 4936990.482 ops/s
[info]                  ·gc.alloc.rate:                   1304.945 MB/sec
[info]                  ·gc.alloc.rate.norm:              416.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.324 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     428.554 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala":
[info]   4897184.685 ±(99.9%) 169733.294 ops/s [Average]
[info]   (min, avg, max) = (4821771.021, 4897184.685, 4936990.482), stdev = 44079.197
[info]   CI (99.9%): [4727451.391, 5066917.979] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1294.559 ±(99.9%) 44.816 MB/sec [Average]
[info]   (min, avg, max) = (1274.645, 1294.559, 1304.945), stdev = 11.638
[info]   CI (99.9%): [1249.743, 1339.374] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   416.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (416.000, 416.000, 416.000), stdev = 0.001
[info]   CI (99.9%): [416.000, 416.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1340.716 ±(99.9%) 11.015 MB/sec [Average]
[info]   (min, avg, max) = (1337.798, 1340.716, 1344.324), stdev = 2.861
[info]   CI (99.9%): [1329.701, 1351.731] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   430.856 ±(99.9%) 12.547 B/op [Average]
[info]   (min, avg, max) = (428.554, 430.856, 436.611), stdev = 3.258
[info]   CI (99.9%): [418.308, 443.403] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.071 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.071, 0.083), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.143] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.023 ±(99.9%) 0.023 B/op [Average]
[info]   (min, avg, max) = (0.013, 0.023, 0.027), stdev = 0.006
[info]   CI (99.9%): [≈ 0, 0.046] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 93.17% complete, ETA 00:09:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 9318481.148 ops/s
[info] # Warmup Iteration   2: 9819307.074 ops/s
[info] # Warmup Iteration   3: 9747439.133 ops/s
[info] # Warmup Iteration   4: 10023345.940 ops/s
[info] # Warmup Iteration   5: 10079926.116 ops/s
[info] Iteration   1: 10075542.718 ops/s
[info]                  ·gc.alloc.rate:                   973.089 MB/sec
[info]                  ·gc.alloc.rate.norm:              152.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.677 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     210.200 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 10080422.532 ops/s
[info]                  ·gc.alloc.rate:               973.814 MB/sec
[info]                  ·gc.alloc.rate.norm:          152.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.348 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 105.101 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 10066056.005 ops/s
[info]                  ·gc.alloc.rate:                   972.327 MB/sec
[info]                  ·gc.alloc.rate.norm:              152.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.294 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     105.253 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 10033834.759 ops/s
[info]                  ·gc.alloc.rate:                   969.140 MB/sec
[info]                  ·gc.alloc.rate.norm:              152.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.116 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     211.282 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 10072532.352 ops/s
[info]                  ·gc.alloc.rate:               972.949 MB/sec
[info]                  ·gc.alloc.rate.norm:          152.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      674.234 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 105.333 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala":
[info]   10065677.673 ±(99.9%) 71414.417 ops/s [Average]
[info]   (min, avg, max) = (10033834.759, 10065677.673, 10080422.532), stdev = 18546.097
[info]   CI (99.9%): [9994263.256, 10137092.090] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   972.264 ±(99.9%) 7.025 MB/sec [Average]
[info]   (min, avg, max) = (969.140, 972.264, 973.814), stdev = 1.824
[info]   CI (99.9%): [965.239, 979.289] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   152.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (152.000, 152.000, 152.000), stdev = 0.001
[info]   CI (99.9%): [152.000, 152.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   942.734 ±(99.9%) 1418.933 MB/sec [Average]
[info]   (min, avg, max) = (673.294, 942.734, 1347.116), stdev = 368.492
[info]   CI (99.9%): [≈ 0, 2361.667] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   147.434 ±(99.9%) 222.538 B/op [Average]
[info]   (min, avg, max) = (105.101, 147.434, 211.282), stdev = 57.792
[info]   CI (99.9%): [≈ 0, 369.972] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.108 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.137] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.005 ±(99.9%) 0.017 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.005, 0.010), stdev = 0.004
[info]   CI (99.9%): [≈ 0, 0.021] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 93.37% complete, ETA 00:08:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7295712.197 ops/s
[info] # Warmup Iteration   2: 7663759.770 ops/s
[info] # Warmup Iteration   3: 7698842.721 ops/s
[info] # Warmup Iteration   4: 7693164.524 ops/s
[info] # Warmup Iteration   5: 7700353.421 ops/s
[info] Iteration   1: 7698153.872 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 7697649.012 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 7698238.837 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 7695574.412 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 7703810.877 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc":
[info]   7698685.402 ±(99.9%) 11790.895 ops/s [Average]
[info]   (min, avg, max) = (7695574.412, 7698685.402, 7703810.877), stdev = 3062.058
[info]   CI (99.9%): [7686894.507, 7710476.297] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 93.57% complete, ETA 00:08:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4107055.829 ops/s
[info] # Warmup Iteration   2: 5039943.330 ops/s
[info] # Warmup Iteration   3: 5153929.525 ops/s
[info] # Warmup Iteration   4: 5177618.545 ops/s
[info] # Warmup Iteration   5: 5165100.117 ops/s
[info] Iteration   1: 5087687.249 ops/s
[info]                  ·gc.alloc.rate:                   1629.339 MB/sec
[info]                  ·gc.alloc.rate.norm:              504.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.695 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     415.024 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 5080909.304 ops/s
[info]                  ·gc.alloc.rate:                   1627.677 MB/sec
[info]                  ·gc.alloc.rate.norm:              504.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2016.180 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     624.298 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.039 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 5172268.899 ops/s
[info]                  ·gc.alloc.rate:                   1656.532 MB/sec
[info]                  ·gc.alloc.rate.norm:              504.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.451 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     409.658 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 5166617.026 ops/s
[info]                  ·gc.alloc.rate:                   1654.484 MB/sec
[info]                  ·gc.alloc.rate.norm:              504.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2022.376 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     616.070 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 5182162.188 ops/s
[info]                  ·gc.alloc.rate:               1659.422 MB/sec
[info]                  ·gc.alloc.rate.norm:          504.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1350.242 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 410.096 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson":
[info]   5137928.933 ±(99.9%) 189957.047 ops/s [Average]
[info]   (min, avg, max) = (5080909.304, 5137928.933, 5182162.188), stdev = 49331.242
[info]   CI (99.9%): [4947971.886, 5327885.980] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1645.491 ±(99.9%) 60.120 MB/sec [Average]
[info]   (min, avg, max) = (1627.677, 1645.491, 1659.422), stdev = 15.613
[info]   CI (99.9%): [1585.370, 1705.611] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   504.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (504.000, 504.000, 504.000), stdev = 0.001
[info]   CI (99.9%): [504.000, 504.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1615.389 ±(99.9%) 1419.801 MB/sec [Average]
[info]   (min, avg, max) = (1341.695, 1615.389, 2022.376), stdev = 368.718
[info]   CI (99.9%): [195.588, 3035.190] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   495.029 ±(99.9%) 440.154 B/op [Average]
[info]   (min, avg, max) = (409.658, 495.029, 624.298), stdev = 114.307
[info]   CI (99.9%): [54.875, 935.183] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.217 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.125), stdev = 0.056
[info]   CI (99.9%): [≈ 0, 0.271] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.017 ±(99.9%) 0.067 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.039), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.083] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 93.78% complete, ETA 00:08:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 370366.429 ops/s
[info] # Warmup Iteration   2: 382936.018 ops/s
[info] # Warmup Iteration   3: 388427.086 ops/s
[info] # Warmup Iteration   4: 388481.204 ops/s
[info] # Warmup Iteration   5: 388454.130 ops/s
[info] Iteration   1: 391634.157 ops/s
[info]                  ·gc.alloc.rate:      412.115 MB/sec
[info]                  ·gc.alloc.rate.norm: 1656.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 390116.550 ops/s
[info]                  ·gc.alloc.rate:               410.481 MB/sec
[info]                  ·gc.alloc.rate.norm:          1656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.604 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2063.962 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 377233.458 ops/s
[info]                  ·gc.alloc.rate:                   397.112 MB/sec
[info]                  ·gc.alloc.rate.norm:              1656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.858 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2134.506 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.027 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.111 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 375479.696 ops/s
[info]                  ·gc.alloc.rate:      395.149 MB/sec
[info]                  ·gc.alloc.rate.norm: 1656.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 390167.645 ops/s
[info]                  ·gc.alloc.rate:                   410.548 MB/sec
[info]                  ·gc.alloc.rate.norm:              1656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          674.504 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2720.702 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.578 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.367 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeUPickle":
[info]   384926.301 ±(99.9%) 30309.233 ops/s [Average]
[info]   (min, avg, max) = (375479.696, 384926.301, 391634.157), stdev = 7871.211
[info]   CI (99.9%): [354617.068, 415235.533] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeUPickle:·gc.alloc.rate":
[info]   405.081 ±(99.9%) 31.676 MB/sec [Average]
[info]   (min, avg, max) = (395.149, 405.081, 412.115), stdev = 8.226
[info]   CI (99.9%): [373.405, 436.757] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeUPickle:·gc.alloc.rate.norm":
[info]   1656.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1656.001, 1656.001, 1656.001), stdev = 0.001
[info]   CI (99.9%): [1656.001, 1656.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space":
[info]   339.593 ±(99.9%) 1220.835 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 339.593, 674.504), stdev = 317.047
[info]   CI (99.9%): [≈ 0, 1560.428] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   1383.834 ±(99.9%) 4962.437 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1383.834, 2720.702), stdev = 1288.729
[info]   CI (99.9%): [≈ 0, 6346.271] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space":
[info]   0.321 ±(99.9%) 2.707 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.321, 1.578), stdev = 0.703
[info]   CI (99.9%): [≈ 0, 3.028] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   1.296 ±(99.9%) 10.918 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.296, 6.367), stdev = 2.835
[info]   CI (99.9%): [≈ 0, 12.214] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeUPickle:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeUPickle:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 1.095
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 93.98% complete, ETA 00:08:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 881031.675 ops/s
[info] # Warmup Iteration   2: 1230032.034 ops/s
[info] # Warmup Iteration   3: 1260713.408 ops/s
[info] # Warmup Iteration   4: 1262596.786 ops/s
[info] # Warmup Iteration   5: 1262547.811 ops/s
[info] Iteration   1: 1254495.310 ops/s
[info]                  ·gc.alloc.rate:                   1810.902 MB/sec
[info]                  ·gc.alloc.rate.norm:              2272.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.887 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1689.836 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.104 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 1250217.105 ops/s
[info]                  ·gc.alloc.rate:                   1805.271 MB/sec
[info]                  ·gc.alloc.rate.norm:              2272.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2023.618 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2546.799 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.157 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 1259945.896 ops/s
[info]                  ·gc.alloc.rate:                   1818.805 MB/sec
[info]                  ·gc.alloc.rate.norm:              2272.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2025.710 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2530.461 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.078 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 1264069.275 ops/s
[info]                  ·gc.alloc.rate:                   1824.768 MB/sec
[info]                  ·gc.alloc.rate.norm:              2272.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.249 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1683.672 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.052 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 1261570.353 ops/s
[info]                  ·gc.alloc.rate:                   1821.317 MB/sec
[info]                  ·gc.alloc.rate.norm:              2272.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2031.237 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2533.864 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce":
[info]   1258059.588 ±(99.9%) 21629.567 ops/s [Average]
[info]   (min, avg, max) = (1250217.105, 1258059.588, 1264069.275), stdev = 5617.130
[info]   CI (99.9%): [1236430.021, 1279689.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:·gc.alloc.rate":
[info]   1816.213 ±(99.9%) 30.679 MB/sec [Average]
[info]   (min, avg, max) = (1805.271, 1816.213, 1824.768), stdev = 7.967
[info]   CI (99.9%): [1785.534, 1846.891] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   2272.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2272.000, 2272.000, 2272.000), stdev = 0.001
[info]   CI (99.9%): [2272.000, 2272.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1755.940 ±(99.9%) 1428.514 MB/sec [Average]
[info]   (min, avg, max) = (1346.887, 1755.940, 2031.237), stdev = 370.981
[info]   CI (99.9%): [327.426, 3184.455] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   2196.926 ±(99.9%) 1793.501 B/op [Average]
[info]   (min, avg, max) = (1683.672, 2196.926, 2546.799), stdev = 465.766
[info]   CI (99.9%): [403.426, 3990.427] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.154 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.067, 0.125), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.221] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.084 ±(99.9%) 0.195 B/op [Average]
[info]   (min, avg, max) = (0.026, 0.084, 0.157), stdev = 0.051
[info]   CI (99.9%): [≈ 0, 0.278] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 94.18% complete, ETA 00:07:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.872 ops/s
[info] # Warmup Iteration   2: 1791623.371 ops/s
[info] # Warmup Iteration   3: 1800265.502 ops/s
[info] # Warmup Iteration   4: 1808359.067 ops/s
[info] # Warmup Iteration   5: 1812439.576 ops/s
[info] Iteration   1: 1808955.011 ops/s
[info]                  ·gc.alloc.rate:                   340.215 MB/sec
[info]                  ·gc.alloc.rate.norm:              296.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.599 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     445.111 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 1810078.453 ops/s
[info]                  ·gc.alloc.rate:               340.431 MB/sec
[info]                  ·gc.alloc.rate.norm:          296.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.609 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 444.837 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 1775300.035 ops/s
[info]                  ·gc.alloc.rate:      333.961 MB/sec
[info]                  ·gc.alloc.rate.norm: 296.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1806765.842 ops/s
[info]                  ·gc.alloc.rate:                   339.796 MB/sec
[info]                  ·gc.alloc.rate.norm:              296.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.587 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     445.649 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.054 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 1811866.710 ops/s
[info]                  ·gc.alloc.rate:      340.794 MB/sec
[info]                  ·gc.alloc.rate.norm: 296.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava":
[info]   1802593.210 ±(99.9%) 59180.633 ops/s [Average]
[info]   (min, avg, max) = (1775300.035, 1802593.210, 1811866.710), stdev = 15369.023
[info]   CI (99.9%): [1743412.577, 1861773.844] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   339.039 ±(99.9%) 11.020 MB/sec [Average]
[info]   (min, avg, max) = (333.961, 339.039, 340.794), stdev = 2.862
[info]   CI (99.9%): [328.019, 350.059] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   296.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (296.000, 296.000, 296.000), stdev = 0.001
[info]   CI (99.9%): [296.000, 296.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   306.959 ±(99.9%) 1079.004 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 306.959, 511.609), stdev = 280.214
[info]   CI (99.9%): [≈ 0, 1385.963] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   267.119 ±(99.9%) 938.963 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 267.119, 445.649), stdev = 243.846
[info]   CI (99.9%): [≈ 0, 1206.083] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.113 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.062), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.018 ±(99.9%) 0.099 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.018, 0.054), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.117] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 3.000), stdev = 1.342
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 94.38% complete, ETA 00:07:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 565501.518 ops/s
[info] # Warmup Iteration   2: 1088291.924 ops/s
[info] # Warmup Iteration   3: 1127423.163 ops/s
[info] # Warmup Iteration   4: 1098059.593 ops/s
[info] # Warmup Iteration   5: 1117265.138 ops/s
[info] Iteration   1: 1114380.473 ops/s
[info]                  ·gc.alloc.rate:                   668.397 MB/sec
[info]                  ·gc.alloc.rate.norm:              944.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          668.139 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     943.637 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.115 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.987 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 1138624.766 ops/s
[info]                  ·gc.alloc.rate:               682.993 MB/sec
[info]                  ·gc.alloc.rate.norm:          944.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.195 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 923.547 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 1138703.010 ops/s
[info]                  ·gc.alloc.rate:                   682.988 MB/sec
[info]                  ·gc.alloc.rate.norm:              944.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          668.142 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     923.481 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.086 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 1110126.798 ops/s
[info]                  ·gc.alloc.rate:               665.822 MB/sec
[info]                  ·gc.alloc.rate.norm:          944.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.131 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 947.274 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 1112494.701 ops/s
[info]                  ·gc.alloc.rate:                   667.348 MB/sec
[info]                  ·gc.alloc.rate.norm:              944.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          668.559 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     945.712 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala":
[info]   1122865.950 ±(99.9%) 55834.498 ops/s [Average]
[info]   (min, avg, max) = (1110126.798, 1122865.950, 1138703.010), stdev = 14500.042
[info]   CI (99.9%): [1067031.452, 1178700.447] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   673.510 ±(99.9%) 33.513 MB/sec [Average]
[info]   (min, avg, max) = (665.822, 673.510, 682.993), stdev = 8.703
[info]   CI (99.9%): [639.997, 707.023] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   944.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (944.000, 944.000, 944.000), stdev = 0.001
[info]   CI (99.9%): [944.000, 944.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   668.233 ±(99.9%) 0.707 MB/sec [Average]
[info]   (min, avg, max) = (668.131, 668.233, 668.559), stdev = 0.184
[info]   CI (99.9%): [667.526, 668.941] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   936.730 ±(99.9%) 46.722 B/op [Average]
[info]   (min, avg, max) = (923.481, 936.730, 947.274), stdev = 12.134
[info]   CI (99.9%): [890.008, 983.452] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.440 ±(99.9%) 3.608 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.440, 2.115), stdev = 0.937
[info]   CI (99.9%): [≈ 0, 4.048] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.621 ±(99.9%) 5.096 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.621, 2.987), stdev = 1.323
[info]   CI (99.9%): [≈ 0, 5.717] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 94.58% complete, ETA 00:07:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2305007.258 ops/s
[info] # Warmup Iteration   2: 2420008.849 ops/s
[info] # Warmup Iteration   3: 2416606.949 ops/s
[info] # Warmup Iteration   4: 2406528.426 ops/s
[info] # Warmup Iteration   5: 2421541.164 ops/s
[info] Iteration   1: 2419212.462 ops/s
[info]                  ·gc.alloc.rate:               454.984 MB/sec
[info]                  ·gc.alloc.rate.norm:          296.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.596 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 332.830 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 2413578.339 ops/s
[info]                  ·gc.alloc.rate:               453.930 MB/sec
[info]                  ·gc.alloc.rate.norm:          296.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.601 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 333.606 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 2435042.998 ops/s
[info]                  ·gc.alloc.rate:      457.967 MB/sec
[info]                  ·gc.alloc.rate.norm: 296.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 2428978.502 ops/s
[info]                  ·gc.alloc.rate:                   456.813 MB/sec
[info]                  ·gc.alloc.rate.norm:              296.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          676.107 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     438.096 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.459 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.946 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 2435240.370 ops/s
[info]                  ·gc.alloc.rate:                   457.976 MB/sec
[info]                  ·gc.alloc.rate.norm:              296.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          676.118 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     436.990 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala":
[info]   2426410.534 ±(99.9%) 37311.397 ops/s [Average]
[info]   (min, avg, max) = (2413578.339, 2426410.534, 2435240.370), stdev = 9689.651
[info]   CI (99.9%): [2389099.137, 2463721.931] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   456.334 ±(99.9%) 6.993 MB/sec [Average]
[info]   (min, avg, max) = (453.930, 456.334, 457.976), stdev = 1.816
[info]   CI (99.9%): [449.341, 463.327] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   296.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (296.000, 296.000, 296.000), stdev = 0.001
[info]   CI (99.9%): [296.000, 296.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   475.084 ±(99.9%) 1070.584 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 475.084, 676.118), stdev = 278.027
[info]   CI (99.9%): [≈ 0, 1545.668] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   308.304 ±(99.9%) 693.381 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 308.304, 438.096), stdev = 180.069
[info]   CI (99.9%): [≈ 0, 1001.685] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.300 ±(99.9%) 2.496 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.300, 1.459), stdev = 0.648
[info]   CI (99.9%): [≈ 0, 2.796] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.195 ±(99.9%) 1.617 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.195, 0.946), stdev = 0.420
[info]   CI (99.9%): [≈ 0, 1.812] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 2.000), stdev = 0.894
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 94.78% complete, ETA 00:06:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 736626.403 ops/s
[info] # Warmup Iteration   2: 1235707.370 ops/s
[info] # Warmup Iteration   3: 1259791.423 ops/s
[info] # Warmup Iteration   4: 1270919.103 ops/s
[info] # Warmup Iteration   5: 1266593.839 ops/s
[info] Iteration   1: 1267059.903 ops/s
[info]                  ·gc.alloc.rate:                   785.874 MB/sec
[info]                  ·gc.alloc.rate.norm:              976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.483 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1662.302 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.068 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.568 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 1274850.347 ops/s
[info]                  ·gc.alloc.rate:               790.780 MB/sec
[info]                  ·gc.alloc.rate.norm:          976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      669.652 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 826.501 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 1269268.505 ops/s
[info]                  ·gc.alloc.rate:                   787.117 MB/sec
[info]                  ·gc.alloc.rate.norm:              976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          669.480 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     830.134 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.052 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 1233350.669 ops/s
[info]                  ·gc.alloc.rate:               764.851 MB/sec
[info]                  ·gc.alloc.rate.norm:          976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      669.503 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 854.330 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 1273247.035 ops/s
[info]                  ·gc.alloc.rate:                   789.674 MB/sec
[info]                  ·gc.alloc.rate.norm:              976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          669.552 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     827.535 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.051 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson":
[info]   1263555.292 ±(99.9%) 66101.956 ops/s [Average]
[info]   (min, avg, max) = (1233350.669, 1263555.292, 1274850.347), stdev = 17166.468
[info]   CI (99.9%): [1197453.336, 1329657.248] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   783.659 ±(99.9%) 41.181 MB/sec [Average]
[info]   (min, avg, max) = (764.851, 783.659, 790.780), stdev = 10.695
[info]   CI (99.9%): [742.478, 824.840] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   976.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (976.000, 976.000, 976.000), stdev = 0.001
[info]   CI (99.9%): [976.000, 976.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   803.334 ±(99.9%) 1151.949 MB/sec [Average]
[info]   (min, avg, max) = (669.480, 803.334, 1338.483), stdev = 299.157
[info]   CI (99.9%): [≈ 0, 1955.282] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   1000.161 ±(99.9%) 1425.992 B/op [Average]
[info]   (min, avg, max) = (826.501, 1000.161, 1662.302), stdev = 370.326
[info]   CI (99.9%): [≈ 0, 2426.153] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.430 ±(99.9%) 3.526 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.430, 2.068), stdev = 0.916
[info]   CI (99.9%): [≈ 0, 3.956] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.534 ±(99.9%) 4.379 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.534, 2.568), stdev = 1.137
[info]   CI (99.9%): [≈ 0, 4.914] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 4.000), stdev = 1.342
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 94.98% complete, ETA 00:06:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 899574.016 ops/s
[info] # Warmup Iteration   2: 1207070.754 ops/s
[info] # Warmup Iteration   3: 1202953.080 ops/s
[info] # Warmup Iteration   4: 1216006.690 ops/s
[info] # Warmup Iteration   5: 1217127.358 ops/s
[info] Iteration   1: 1211592.942 ops/s
[info]                  ·gc.alloc.rate:                   1385.639 MB/sec
[info]                  ·gc.alloc.rate.norm:              1800.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.230 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1751.405 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.054 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 1202285.077 ops/s
[info]                  ·gc.alloc.rate:                   1375.578 MB/sec
[info]                  ·gc.alloc.rate.norm:              1800.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.146 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1765.413 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.109 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 1212606.641 ops/s
[info]                  ·gc.alloc.rate:                   1386.863 MB/sec
[info]                  ·gc.alloc.rate.norm:              1800.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.608 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1751.647 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 1213872.298 ops/s
[info]                  ·gc.alloc.rate:                   1388.247 MB/sec
[info]                  ·gc.alloc.rate.norm:              1800.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.916 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1751.597 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.054 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 1212612.689 ops/s
[info]                  ·gc.alloc.rate:                   1386.908 MB/sec
[info]                  ·gc.alloc.rate.norm:              1800.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.023 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1754.725 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readUPickle":
[info]   1210593.929 ±(99.9%) 18154.179 ops/s [Average]
[info]   (min, avg, max) = (1202285.077, 1210593.929, 1213872.298), stdev = 4714.583
[info]   CI (99.9%): [1192439.750, 1228748.109] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readUPickle:·gc.alloc.rate":
[info]   1384.647 ±(99.9%) 19.842 MB/sec [Average]
[info]   (min, avg, max) = (1375.578, 1384.647, 1388.247), stdev = 5.153
[info]   CI (99.9%): [1364.805, 1404.489] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readUPickle:·gc.alloc.rate.norm":
[info]   1800.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1800.000, 1800.000, 1800.000), stdev = 0.001
[info]   CI (99.9%): [1800.000, 1800.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readUPickle:·gc.churn.PS_Eden_Space":
[info]   1349.985 ±(99.9%) 5.758 MB/sec [Average]
[info]   (min, avg, max) = (1348.230, 1349.985, 1352.023), stdev = 1.495
[info]   CI (99.9%): [1344.226, 1355.743] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   1754.957 ±(99.9%) 23.123 B/op [Average]
[info]   (min, avg, max) = (1751.405, 1754.957, 1765.413), stdev = 6.005
[info]   CI (99.9%): [1731.834, 1778.081] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.083), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   0.054 ±(99.9%) 0.129 B/op [Average]
[info]   (min, avg, max) = (0.027, 0.054, 0.109), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.183] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readUPickle:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readUPickle:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 95.18% complete, ETA 00:06:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1085793.510 ops/s
[info] # Warmup Iteration   2: 1854291.432 ops/s
[info] # Warmup Iteration   3: 1856150.661 ops/s
[info] # Warmup Iteration   4: 1857760.644 ops/s
[info] # Warmup Iteration   5: 1843710.430 ops/s
[info] Iteration   1: 1839818.152 ops/s
[info]                  ·gc.alloc.rate:                   1440.206 MB/sec
[info]                  ·gc.alloc.rate.norm:              1232.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.003 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1147.994 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 1872546.636 ops/s
[info]                  ·gc.alloc.rate:                   1465.993 MB/sec
[info]                  ·gc.alloc.rate.norm:              1232.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.154 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1128.768 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.087 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 1869082.045 ops/s
[info]                  ·gc.alloc.rate:               1463.314 MB/sec
[info]                  ·gc.alloc.rate.norm:          1232.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1344.845 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1132.258 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 1864253.704 ops/s
[info]                  ·gc.alloc.rate:                   1459.364 MB/sec
[info]                  ·gc.alloc.rate.norm:              1232.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2019.869 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1705.180 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.070 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 1851150.320 ops/s
[info]                  ·gc.alloc.rate:                   1448.981 MB/sec
[info]                  ·gc.alloc.rate.norm:              1232.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.901 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1146.908 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce":
[info]   1859370.171 ±(99.9%) 52432.283 ops/s [Average]
[info]   (min, avg, max) = (1839818.152, 1859370.171, 1872546.636), stdev = 13616.497
[info]   CI (99.9%): [1806937.888, 1911802.454] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1455.572 ±(99.9%) 41.405 MB/sec [Average]
[info]   (min, avg, max) = (1440.206, 1455.572, 1465.993), stdev = 10.753
[info]   CI (99.9%): [1414.167, 1496.977] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   1232.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1232.000, 1232.000, 1232.000), stdev = 0.001
[info]   CI (99.9%): [1232.000, 1232.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1479.754 ±(99.9%) 1162.680 MB/sec [Average]
[info]   (min, avg, max) = (1342.003, 1479.754, 2019.869), stdev = 301.944
[info]   CI (99.9%): [317.074, 2642.434] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1252.222 ±(99.9%) 975.585 B/op [Average]
[info]   (min, avg, max) = (1128.768, 1252.222, 1705.180), stdev = 253.356
[info]   CI (99.9%): [276.637, 2227.807] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.150 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.062, 0.104), stdev = 0.039
[info]   CI (99.9%): [≈ 0, 0.212] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.053 ±(99.9%) 0.126 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.053, 0.087), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.179] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 3.000), stdev = 0.837
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 95.38% complete, ETA 00:06:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.837 ops/s
[info] # Warmup Iteration   2: 2472344.569 ops/s
[info] # Warmup Iteration   3: 2577457.608 ops/s
[info] # Warmup Iteration   4: 2590851.645 ops/s
[info] # Warmup Iteration   5: 2609314.214 ops/s
[info] Iteration   1: 2605403.136 ops/s
[info]                  ·gc.alloc.rate:                   675.550 MB/sec
[info]                  ·gc.alloc.rate.norm:              408.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.950 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     400.994 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.003 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 2601031.923 ops/s
[info]                  ·gc.alloc.rate:               674.481 MB/sec
[info]                  ·gc.alloc.rate.norm:          408.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      664.016 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 401.670 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 2603947.393 ops/s
[info]                  ·gc.alloc.rate:                   675.055 MB/sec
[info]                  ·gc.alloc.rate.norm:              408.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          665.148 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     402.012 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 2600434.782 ops/s
[info]                  ·gc.alloc.rate:               674.176 MB/sec
[info]                  ·gc.alloc.rate.norm:          408.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      665.206 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 402.572 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 2610150.961 ops/s
[info]                  ·gc.alloc.rate:                   676.940 MB/sec
[info]                  ·gc.alloc.rate.norm:              408.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          666.772 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     401.872 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava":
[info]   2604193.639 ±(99.9%) 15054.326 ops/s [Average]
[info]   (min, avg, max) = (2600434.782, 2604193.639, 2610150.961), stdev = 3909.561
[info]   CI (99.9%): [2589139.314, 2619247.965] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   675.240 ±(99.9%) 4.188 MB/sec [Average]
[info]   (min, avg, max) = (674.176, 675.240, 676.940), stdev = 1.088
[info]   CI (99.9%): [671.053, 679.428] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   408.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (408.000, 408.000, 408.000), stdev = 0.001
[info]   CI (99.9%): [408.000, 408.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   665.018 ±(99.9%) 4.422 MB/sec [Average]
[info]   (min, avg, max) = (663.950, 665.018, 666.772), stdev = 1.148
[info]   CI (99.9%): [660.596, 669.440] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   401.824 ±(99.9%) 2.204 B/op [Average]
[info]   (min, avg, max) = (400.994, 401.824, 402.572), stdev = 0.572
[info]   CI (99.9%): [399.620, 404.028] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   0.007 ±(99.9%) 0.034 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.007, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.041] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   0.004 ±(99.9%) 0.021 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.013), stdev = 0.005
[info]   CI (99.9%): [≈ 0, 0.025] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 95.58% complete, ETA 00:05:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1212930.831 ops/s
[info] # Warmup Iteration   2: 2432494.271 ops/s
[info] # Warmup Iteration   3: 2444034.793 ops/s
[info] # Warmup Iteration   4: 2490260.949 ops/s
[info] # Warmup Iteration   5: 2475899.940 ops/s
[info] Iteration   1: 2481180.989 ops/s
[info]                  ·gc.alloc.rate:                   1059.410 MB/sec
[info]                  ·gc.alloc.rate.norm:              672.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.264 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     847.612 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 2478419.174 ops/s
[info]                  ·gc.alloc.rate:               1058.384 MB/sec
[info]                  ·gc.alloc.rate.norm:          672.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.578 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 424.500 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 2475440.240 ops/s
[info]                  ·gc.alloc.rate:                   1056.922 MB/sec
[info]                  ·gc.alloc.rate.norm:              672.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.589 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     850.450 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.079 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 2479243.835 ops/s
[info]                  ·gc.alloc.rate:               1058.784 MB/sec
[info]                  ·gc.alloc.rate.norm:          672.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      669.269 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 424.779 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   5: 2482900.353 ops/s
[info]                  ·gc.alloc.rate:                   1060.147 MB/sec
[info]                  ·gc.alloc.rate.norm:              672.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.294 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     849.578 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala":
[info]   2479436.918 ±(99.9%) 10905.498 ops/s [Average]
[info]   (min, avg, max) = (2475440.240, 2479436.918, 2482900.353), stdev = 2832.123
[info]   CI (99.9%): [2468531.420, 2490342.416] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1058.730 ±(99.9%) 4.662 MB/sec [Average]
[info]   (min, avg, max) = (1056.922, 1058.730, 1060.147), stdev = 1.211
[info]   CI (99.9%): [1054.068, 1063.391] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   672.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (672.000, 672.000, 672.000), stdev = 0.001
[info]   CI (99.9%): [672.000, 672.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   1070.399 ±(99.9%) 1411.253 MB/sec [Average]
[info]   (min, avg, max) = (668.578, 1070.399, 1340.294), stdev = 366.498
[info]   CI (99.9%): [≈ 0, 2481.652] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   679.384 ±(99.9%) 895.471 B/op [Average]
[info]   (min, avg, max) = (424.500, 679.384, 850.450), stdev = 232.551
[info]   CI (99.9%): [≈ 0, 1574.855] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.200 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.125), stdev = 0.052
[info]   CI (99.9%): [≈ 0, 0.237] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.024 ±(99.9%) 0.127 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.024, 0.079), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.151] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 2.000), stdev = 0.894
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 95.78% complete, ETA 00:05:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2720635.219 ops/s
[info] # Warmup Iteration   2: 3616827.110 ops/s
[info] # Warmup Iteration   3: 3654450.778 ops/s
[info] # Warmup Iteration   4: 3697564.391 ops/s
[info] # Warmup Iteration   5: 3690250.010 ops/s
[info] Iteration   1: 3706328.008 ops/s
[info]                  ·gc.alloc.rate:               960.811 MB/sec
[info]                  ·gc.alloc.rate.norm:          408.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.492 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 285.992 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 3677255.923 ops/s
[info]                  ·gc.alloc.rate:                   953.374 MB/sec
[info]                  ·gc.alloc.rate.norm:              408.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.098 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     576.496 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 3700875.985 ops/s
[info]                  ·gc.alloc.rate:               959.427 MB/sec
[info]                  ·gc.alloc.rate.norm:          408.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.482 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 286.401 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 3693276.643 ops/s
[info]                  ·gc.alloc.rate:                   957.402 MB/sec
[info]                  ·gc.alloc.rate.norm:              408.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.451 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     286.993 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   5: 3697142.313 ops/s
[info]                  ·gc.alloc.rate:                   958.415 MB/sec
[info]                  ·gc.alloc.rate.norm:              408.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.567 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     573.663 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala":
[info]   3694975.774 ±(99.9%) 42412.172 ops/s [Average]
[info]   (min, avg, max) = (3677255.923, 3694975.774, 3706328.008), stdev = 11014.306
[info]   CI (99.9%): [3652563.603, 3737387.946] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   957.886 ±(99.9%) 10.857 MB/sec [Average]
[info]   (min, avg, max) = (953.374, 957.886, 960.811), stdev = 2.820
[info]   CI (99.9%): [947.028, 968.743] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   408.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (408.000, 408.000, 408.000), stdev = 0.001
[info]   CI (99.9%): [408.000, 408.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   943.018 ±(99.9%) 1421.223 MB/sec [Average]
[info]   (min, avg, max) = (673.451, 943.018, 1347.567), stdev = 369.087
[info]   CI (99.9%): [≈ 0, 2364.241] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   401.909 ±(99.9%) 608.732 B/op [Average]
[info]   (min, avg, max) = (285.992, 401.909, 576.496), stdev = 158.086
[info]   CI (99.9%): [≈ 0, 1010.642] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.083), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.012 ±(99.9%) 0.057 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.036), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.070] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 0.837
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 95.98% complete, ETA 00:05:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2898826.467 ops/s
[info] # Warmup Iteration   2: 3787890.427 ops/s
[info] # Warmup Iteration   3: 3842820.816 ops/s
[info] # Warmup Iteration   4: 3840254.149 ops/s
[info] # Warmup Iteration   5: 3843145.812 ops/s
[info] Iteration   1: 3842295.445 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 3841798.793 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 3821568.584 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 3842349.339 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 3841917.615 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc":
[info]   3837985.955 ±(99.9%) 35351.375 ops/s [Average]
[info]   (min, avg, max) = (3821568.584, 3837985.955, 3842349.339), stdev = 9180.640
[info]   CI (99.9%): [3802634.580, 3873337.330] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 96.18% complete, ETA 00:05:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1972083.952 ops/s
[info] # Warmup Iteration   2: 2535715.599 ops/s
[info] # Warmup Iteration   3: 2539031.155 ops/s
[info] # Warmup Iteration   4: 2546649.841 ops/s
[info] # Warmup Iteration   5: 2574902.957 ops/s
[info] Iteration   1: 2573635.688 ops/s
[info]                  ·gc.alloc.rate:                   1243.005 MB/sec
[info]                  ·gc.alloc.rate.norm:              760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.194 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     821.258 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 2551365.878 ops/s
[info]                  ·gc.alloc.rate:                   1232.206 MB/sec
[info]                  ·gc.alloc.rate.norm:              760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.965 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     828.931 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.064 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 2550916.730 ops/s
[info]                  ·gc.alloc.rate:               1231.880 MB/sec
[info]                  ·gc.alloc.rate.norm:          760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.529 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 414.912 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 2558629.828 ops/s
[info]                  ·gc.alloc.rate:                   1235.833 MB/sec
[info]                  ·gc.alloc.rate.norm:              760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.993 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     827.745 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 2555623.875 ops/s
[info]                  ·gc.alloc.rate:                   1234.074 MB/sec
[info]                  ·gc.alloc.rate.norm:              760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.278 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     829.716 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson":
[info]   2558034.400 ±(99.9%) 35745.498 ops/s [Average]
[info]   (min, avg, max) = (2550916.730, 2558034.400, 2573635.688), stdev = 9282.992
[info]   CI (99.9%): [2522288.902, 2593779.898] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1235.399 ±(99.9%) 17.474 MB/sec [Average]
[info]   (min, avg, max) = (1231.880, 1235.399, 1243.005), stdev = 4.538
[info]   CI (99.9%): [1217.925, 1252.874] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   760.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (760.000, 760.000, 760.000), stdev = 0.001
[info]   CI (99.9%): [760.000, 760.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   1210.592 ±(99.9%) 1158.238 MB/sec [Average]
[info]   (min, avg, max) = (672.529, 1210.592, 1347.278), stdev = 300.791
[info]   CI (99.9%): [52.354, 2368.829] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   744.513 ±(99.9%) 709.606 B/op [Average]
[info]   (min, avg, max) = (414.912, 744.513, 829.716), stdev = 184.282
[info]   CI (99.9%): [34.907, 1454.118] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.156 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.104), stdev = 0.041
[info]   CI (99.9%): [≈ 0, 0.206] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.031 ±(99.9%) 0.096 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.031, 0.064), stdev = 0.025
[info]   CI (99.9%): [≈ 0, 0.127] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce
[info] # Run progress: 96.39% complete, ETA 00:04:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5830.427 ops/s
[info] # Warmup Iteration   2: 9562.275 ops/s
[info] # Warmup Iteration   3: 10912.581 ops/s
[info] # Warmup Iteration   4: 11616.815 ops/s
[info] # Warmup Iteration   5: 11627.353 ops/s
[info] Iteration   1: 11629.028 ops/s
[info]                  ·gc.alloc.rate:               1638.202 MB/sec
[info]                  ·gc.alloc.rate.norm:          221712.040 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1340.926 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 181479.107 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 11331.873 ops/s
[info]                  ·gc.alloc.rate:                   1596.592 MB/sec
[info]                  ·gc.alloc.rate.norm:              221739.508 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.160 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     186403.232 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.782 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 11583.053 ops/s
[info]                  ·gc.alloc.rate:                   1631.971 MB/sec
[info]                  ·gc.alloc.rate.norm:              221736.037 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2017.299 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     274090.490 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.656 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 11626.815 ops/s
[info]                  ·gc.alloc.rate:                   1638.019 MB/sec
[info]                  ·gc.alloc.rate.norm:              221736.037 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.741 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     182306.163 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.103 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13.891 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 11428.301 ops/s
[info]                  ·gc.alloc.rate:                   1610.013 MB/sec
[info]                  ·gc.alloc.rate.norm:              221736.052 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2023.313 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     278657.008 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.001 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.200 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce":
[info]   11519.814 ±(99.9%) 513.280 ops/s [Average]
[info]   (min, avg, max) = (11331.873, 11519.814, 11629.028), stdev = 133.297
[info]   CI (99.9%): [11006.534, 12033.094] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.alloc.rate":
[info]   1622.960 ±(99.9%) 72.122 MB/sec [Average]
[info]   (min, avg, max) = (1596.592, 1622.960, 1638.202), stdev = 18.730
[info]   CI (99.9%): [1550.838, 1695.081] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   221731.935 ±(99.9%) 43.214 B/op [Average]
[info]   (min, avg, max) = (221712.040, 221731.935, 221739.508), stdev = 11.222
[info]   CI (99.9%): [221688.721, 221775.149] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   1614.088 ±(99.9%) 1427.962 MB/sec [Average]
[info]   (min, avg, max) = (1340.926, 1614.088, 2023.313), stdev = 370.837
[info]   CI (99.9%): [186.126, 3042.049] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   220587.200 ±(99.9%) 196327.423 B/op [Average]
[info]   (min, avg, max) = (181479.107, 220587.200, 278657.008), stdev = 50985.608
[info]   CI (99.9%): [24259.777, 416914.623] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.161 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.103), stdev = 0.042
[info]   CI (99.9%): [≈ 0, 0.198] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   5.106 ±(99.9%) 21.789 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 5.106, 13.891), stdev = 5.658
[info]   CI (99.9%): [≈ 0, 26.895] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.200, 4.000), stdev = 1.304
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala
[info] # Run progress: 96.59% complete, ETA 00:04:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5749.813 ops/s
[info] # Warmup Iteration   2: 15020.840 ops/s
[info] # Warmup Iteration   3: 15157.138 ops/s
[info] # Warmup Iteration   4: 15655.998 ops/s
[info] # Warmup Iteration   5: 15637.990 ops/s
[info] Iteration   1: 15758.318 ops/s
[info]                  ·gc.alloc.rate:      243.498 MB/sec
[info]                  ·gc.alloc.rate.norm: 24320.027 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 15684.802 ops/s
[info]                  ·gc.alloc.rate:                   242.418 MB/sec
[info]                  ·gc.alloc.rate.norm:              24320.030 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.675 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     51332.634 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.008 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.806 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 15580.380 ops/s
[info]                  ·gc.alloc.rate:      240.762 MB/sec
[info]                  ·gc.alloc.rate.norm: 24317.022 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 15612.391 ops/s
[info]                  ·gc.alloc.rate:                   241.122 MB/sec
[info]                  ·gc.alloc.rate.norm:              24304.028 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.657 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     51572.614 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.052 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.247 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 15690.369 ops/s
[info]                  ·gc.alloc.rate:      242.303 MB/sec
[info]                  ·gc.alloc.rate.norm: 24304.028 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala":
[info]   15665.252 ±(99.9%) 270.039 ops/s [Average]
[info]   (min, avg, max) = (15580.380, 15665.252, 15758.318), stdev = 70.128
[info]   CI (99.9%): [15395.213, 15935.291] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   242.021 ±(99.9%) 4.222 MB/sec [Average]
[info]   (min, avg, max) = (240.762, 242.021, 243.498), stdev = 1.097
[info]   CI (99.9%): [237.798, 246.243] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   24313.027 ±(99.9%) 31.985 B/op [Average]
[info]   (min, avg, max) = (24304.028, 24313.027, 24320.030), stdev = 8.306
[info]   CI (99.9%): [24281.042, 24345.012] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   204.666 ±(99.9%) 1079.146 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 204.666, 511.675), stdev = 280.251
[info]   CI (99.9%): [≈ 0, 1283.813] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   20581.050 ±(99.9%) 108518.426 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 20581.050, 51572.614), stdev = 28181.891
[info]   CI (99.9%): [≈ 0, 129099.476] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.087 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.052), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.099] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.211 ±(99.9%) 8.792 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.211, 5.247), stdev = 2.283
[info]   CI (99.9%): [≈ 0, 10.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:·gc.count":
[info]   2.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.000), stdev = 0.548
[info]   CI (99.9%): [2.000, 2.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 3.000), stdev = 1.643
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala
[info] # Run progress: 96.79% complete, ETA 00:04:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 18290.306 ops/s
[info] # Warmup Iteration   2: 30060.140 ops/s
[info] # Warmup Iteration   3: 36264.056 ops/s
[info] # Warmup Iteration   4: 36303.082 ops/s
[info] # Warmup Iteration   5: 35536.181 ops/s
[info] Iteration   1: 35428.903 ops/s
[info]                  ·gc.alloc.rate:               388.081 MB/sec
[info]                  ·gc.alloc.rate.norm:          17232.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.832 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 22726.939 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 35882.485 ops/s
[info]                  ·gc.alloc.rate:               392.924 MB/sec
[info]                  ·gc.alloc.rate.norm:          17232.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.678 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 22440.058 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 36267.499 ops/s
[info]                  ·gc.alloc.rate:      397.090 MB/sec
[info]                  ·gc.alloc.rate.norm: 17232.013 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 36208.418 ops/s
[info]                  ·gc.alloc.rate:               396.443 MB/sec
[info]                  ·gc.alloc.rate.norm:          17232.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.585 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 22236.818 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 36194.060 ops/s
[info]                  ·gc.alloc.rate:                   396.283 MB/sec
[info]                  ·gc.alloc.rate.norm:              17232.012 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.127 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29270.333 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.708 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 74.260 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala":
[info]   35996.273 ±(99.9%) 1351.222 ops/s [Average]
[info]   (min, avg, max) = (35428.903, 35996.273, 36267.499), stdev = 350.908
[info]   CI (99.9%): [34645.051, 37347.495] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   394.164 ±(99.9%) 14.508 MB/sec [Average]
[info]   (min, avg, max) = (388.081, 394.164, 397.090), stdev = 3.768
[info]   CI (99.9%): [379.656, 408.672] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   17232.012 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (17232.012, 17232.012, 17232.013), stdev = 0.001
[info]   CI (99.9%): [17232.011, 17232.014] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   441.644 ±(99.9%) 988.042 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 441.644, 673.127), stdev = 256.591
[info]   CI (99.9%): [≈ 0, 1429.686] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   19334.830 ±(99.9%) 43142.691 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 19334.830, 29270.333), stdev = 11204.020
[info]   CI (99.9%): [≈ 0, 62477.521] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.342 ±(99.9%) 2.941 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.342, 1.708), stdev = 0.764
[info]   CI (99.9%): [≈ 0, 3.282] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   14.852 ±(99.9%) 127.881 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 14.852, 74.260), stdev = 33.210
[info]   CI (99.9%): [≈ 0, 142.733] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.800, 3.000), stdev = 1.095
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson
[info] # Run progress: 96.99% complete, ETA 00:04:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 857.518 ops/s
[info] # Warmup Iteration   2: 2926.383 ops/s
[info] # Warmup Iteration   3: 2818.027 ops/s
[info] # Warmup Iteration   4: 3287.685 ops/s
[info] # Warmup Iteration   5: 3314.617 ops/s
[info] Iteration   1: 3318.858 ops/s
[info]                  ·gc.alloc.rate:                   1047.029 MB/sec
[info]                  ·gc.alloc.rate.norm:              496232.140 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.801 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     632619.798 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.870 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 3328.309 ops/s
[info]                  ·gc.alloc.rate:               1049.955 MB/sec
[info]                  ·gc.alloc.rate.norm:          496232.130 B/op
[info]                  ·gc.churn.PS_Eden_Space:      669.123 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 316242.206 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 3305.941 ops/s
[info]                  ·gc.alloc.rate:                   1042.941 MB/sec
[info]                  ·gc.alloc.rate.norm:              496232.131 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.815 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     637484.744 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19.817 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 3311.860 ops/s
[info]                  ·gc.alloc.rate:               1044.789 MB/sec
[info]                  ·gc.alloc.rate.norm:          496232.140 B/op
[info]                  ·gc.churn.PS_Eden_Space:      670.712 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 318560.744 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 3292.298 ops/s
[info]                  ·gc.alloc.rate:               1038.574 MB/sec
[info]                  ·gc.alloc.rate.norm:          496232.131 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1344.209 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 642264.741 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson":
[info]   3311.453 ±(99.9%) 52.248 ops/s [Average]
[info]   (min, avg, max) = (3292.298, 3311.453, 3328.309), stdev = 13.569
[info]   CI (99.9%): [3259.205, 3363.701] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1044.658 ±(99.9%) 16.524 MB/sec [Average]
[info]   (min, avg, max) = (1038.574, 1044.658, 1049.955), stdev = 4.291
[info]   CI (99.9%): [1028.134, 1061.182] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   496232.134 ±(99.9%) 0.020 B/op [Average]
[info]   (min, avg, max) = (496232.130, 496232.134, 496232.140), stdev = 0.005
[info]   CI (99.9%): [496232.114, 496232.154] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   1071.732 ±(99.9%) 1412.495 MB/sec [Average]
[info]   (min, avg, max) = (669.123, 1071.732, 1344.209), stdev = 366.820
[info]   CI (99.9%): [≈ 0, 2484.226] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   509434.446 ±(99.9%) 675158.033 B/op [Average]
[info]   (min, avg, max) = (316242.206, 509434.446, 642264.741), stdev = 175336.397
[info]   CI (99.9%): [≈ 0, 1184592.480] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   5.937 ±(99.9%) 34.110 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 5.937, 19.817), stdev = 8.858
[info]   CI (99.9%): [≈ 0, 40.047] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.600, 4.000), stdev = 1.140
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala
[info] # Run progress: 97.19% complete, ETA 00:03:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 26271.316 ops/s
[info] # Warmup Iteration   2: 59003.217 ops/s
[info] # Warmup Iteration   3: 59623.544 ops/s
[info] # Warmup Iteration   4: 57820.552 ops/s
[info] # Warmup Iteration   5: 59039.612 ops/s
[info] Iteration   1: 59227.691 ops/s
[info]                  ·gc.alloc.rate:                   756.433 MB/sec
[info]                  ·gc.alloc.rate.norm:              20099.973 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.833 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17639.414 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.868 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 76.201 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 59849.661 ops/s
[info]                  ·gc.alloc.rate:               764.332 MB/sec
[info]                  ·gc.alloc.rate.norm:          20099.959 B/op
[info]                  ·gc.churn.PS_Eden_Space:      663.785 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 17455.830 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 59803.526 ops/s
[info]                  ·gc.alloc.rate:                   763.770 MB/sec
[info]                  ·gc.alloc.rate.norm:              20100.046 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1326.964 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     34921.562 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.191 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 59718.988 ops/s
[info]                  ·gc.alloc.rate:                   762.769 MB/sec
[info]                  ·gc.alloc.rate.norm:              20100.044 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.866 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17493.822 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.097 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 59855.327 ops/s
[info]                  ·gc.alloc.rate:               764.375 MB/sec
[info]                  ·gc.alloc.rate.norm:          20099.978 B/op
[info]                  ·gc.churn.PS_Eden_Space:      663.744 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 17453.789 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala":
[info]   59691.039 ±(99.9%) 1019.289 ops/s [Average]
[info]   (min, avg, max) = (59227.691, 59691.039, 59855.327), stdev = 264.706
[info]   CI (99.9%): [58671.750, 60710.328] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   762.336 ±(99.9%) 12.948 MB/sec [Average]
[info]   (min, avg, max) = (756.433, 762.336, 764.375), stdev = 3.363
[info]   CI (99.9%): [749.387, 775.284] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   20100.000 ±(99.9%) 0.161 B/op [Average]
[info]   (min, avg, max) = (20099.959, 20100.000, 20100.046), stdev = 0.042
[info]   CI (99.9%): [20099.839, 20100.161] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   796.438 ±(99.9%) 1141.995 MB/sec [Average]
[info]   (min, avg, max) = (663.744, 796.438, 1326.964), stdev = 296.573
[info]   CI (99.9%): [≈ 0, 1938.434] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   20992.883 ±(99.9%) 29983.959 B/op [Average]
[info]   (min, avg, max) = (17453.789, 20992.883, 34921.562), stdev = 7786.739
[info]   CI (99.9%): [≈ 0, 50976.842] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.599 ±(99.9%) 4.886 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.599, 2.868), stdev = 1.269
[info]   CI (99.9%): [≈ 0, 5.485] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   15.898 ±(99.9%) 129.855 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 15.898, 76.201), stdev = 33.723
[info]   CI (99.9%): [≈ 0, 145.753] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 3.000), stdev = 1.095
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala
[info] # Run progress: 97.39% complete, ETA 00:03:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 62857.201 ops/s
[info] # Warmup Iteration   2: 81772.040 ops/s
[info] # Warmup Iteration   3: 82007.081 ops/s
[info] # Warmup Iteration   4: 81543.943 ops/s
[info] # Warmup Iteration   5: 82073.699 ops/s
[info] Iteration   1: 81316.588 ops/s
[info]                  ·gc.alloc.rate:                   533.212 MB/sec
[info]                  ·gc.alloc.rate.norm:              10320.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.593 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9901.592 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.008 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.155 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 80157.498 ops/s
[info]                  ·gc.alloc.rate:      525.611 MB/sec
[info]                  ·gc.alloc.rate.norm: 10320.006 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 79850.736 ops/s
[info]                  ·gc.alloc.rate:                   523.599 MB/sec
[info]                  ·gc.alloc.rate.norm:              10320.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.814 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13260.981 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.710 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 33.707 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 80144.061 ops/s
[info]                  ·gc.alloc.rate:                   525.512 MB/sec
[info]                  ·gc.alloc.rate.norm:              10320.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.811 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13212.672 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.409 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 80225.799 ops/s
[info]                  ·gc.alloc.rate:                   526.049 MB/sec
[info]                  ·gc.alloc.rate.norm:              10320.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.127 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13185.772 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.408 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala":
[info]   80338.936 ±(99.9%) 2176.414 ops/s [Average]
[info]   (min, avg, max) = (79850.736, 80338.936, 81316.588), stdev = 565.208
[info]   CI (99.9%): [78162.523, 82515.350] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   526.796 ±(99.9%) 14.277 MB/sec [Average]
[info]   (min, avg, max) = (523.599, 526.796, 533.212), stdev = 3.708
[info]   CI (99.9%): [512.519, 541.074] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   10320.006 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10320.005, 10320.006, 10320.006), stdev = 0.001
[info]   CI (99.9%): [10320.005, 10320.006] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   505.869 ±(99.9%) 1121.520 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 505.869, 672.814), stdev = 291.255
[info]   CI (99.9%): [≈ 0, 1627.389] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   9912.204 ±(99.9%) 22042.671 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 9912.204, 13260.981), stdev = 5724.412
[info]   CI (99.9%): [≈ 0, 31954.874] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.352 ±(99.9%) 2.924 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.352, 1.710), stdev = 0.759
[info]   CI (99.9%): [≈ 0, 3.276] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   6.936 ±(99.9%) 57.631 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 6.936, 33.707), stdev = 14.967
[info]   CI (99.9%): [≈ 0, 64.567] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 3.000), stdev = 1.304
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 97.59% complete, ETA 00:03:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 66775.538 ops/s
[info] # Warmup Iteration   2: 86705.453 ops/s
[info] # Warmup Iteration   3: 87128.491 ops/s
[info] # Warmup Iteration   4: 86356.071 ops/s
[info] # Warmup Iteration   5: 87435.843 ops/s
[info] Iteration   1: 87302.046 ops/s
[info]                  ·gc.alloc.rate:      12.426 MB/sec
[info]                  ·gc.alloc.rate.norm: 224.005 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 87405.735 ops/s
[info]                  ·gc.alloc.rate:      12.441 MB/sec
[info]                  ·gc.alloc.rate.norm: 224.005 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 87460.501 ops/s
[info]                  ·gc.alloc.rate:      12.448 MB/sec
[info]                  ·gc.alloc.rate.norm: 224.005 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 87438.257 ops/s
[info]                  ·gc.alloc.rate:      12.445 MB/sec
[info]                  ·gc.alloc.rate.norm: 224.005 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 87577.377 ops/s
[info]                  ·gc.alloc.rate:      12.465 MB/sec
[info]                  ·gc.alloc.rate.norm: 224.005 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc":
[info]   87436.783 ±(99.9%) 382.406 ops/s [Average]
[info]   (min, avg, max) = (87302.046, 87436.783, 87577.377), stdev = 99.310
[info]   CI (99.9%): [87054.377, 87819.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   12.445 ±(99.9%) 0.055 MB/sec [Average]
[info]   (min, avg, max) = (12.426, 12.445, 12.465), stdev = 0.014
[info]   CI (99.9%): [12.390, 12.500] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   224.005 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (224.005, 224.005, 224.005), stdev = 0.001
[info]   CI (99.9%): [224.005, 224.005] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 97.79% complete, ETA 00:02:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 284149.696 ops/s
[info] # Warmup Iteration   2: 340743.051 ops/s
[info] # Warmup Iteration   3: 339319.189 ops/s
[info] # Warmup Iteration   4: 338161.288 ops/s
[info] # Warmup Iteration   5: 343225.490 ops/s
[info] Iteration   1: 344885.092 ops/s
[info]                  ·gc.alloc.rate:                   2010.804 MB/sec
[info]                  ·gc.alloc.rate.norm:              9176.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2021.792 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9226.141 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.285 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 345527.503 ops/s
[info]                  ·gc.alloc.rate:                   2014.538 MB/sec
[info]                  ·gc.alloc.rate.norm:              9176.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2025.090 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9224.066 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.379 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 343932.818 ops/s
[info]                  ·gc.alloc.rate:                   2005.201 MB/sec
[info]                  ·gc.alloc.rate.norm:              9176.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2027.721 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9279.056 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.095 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 345886.950 ops/s
[info]                  ·gc.alloc.rate:                   2016.601 MB/sec
[info]                  ·gc.alloc.rate.norm:              9176.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2031.026 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9241.640 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.189 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 346549.112 ops/s
[info]                  ·gc.alloc.rate:                   2020.407 MB/sec
[info]                  ·gc.alloc.rate.norm:              9176.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2033.631 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9236.063 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.284 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce":
[info]   345356.295 ±(99.9%) 3841.989 ops/s [Average]
[info]   (min, avg, max) = (343932.818, 345356.295, 346549.112), stdev = 997.752
[info]   CI (99.9%): [341514.306, 349198.285] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:·gc.alloc.rate":
[info]   2013.510 ±(99.9%) 22.332 MB/sec [Average]
[info]   (min, avg, max) = (2005.201, 2013.510, 2020.407), stdev = 5.800
[info]   CI (99.9%): [1991.178, 2035.842] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   9176.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (9176.001, 9176.001, 9176.001), stdev = 0.001
[info]   CI (99.9%): [9176.001, 9176.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   2027.852 ±(99.9%) 18.045 MB/sec [Average]
[info]   (min, avg, max) = (2021.792, 2027.852, 2033.631), stdev = 4.686
[info]   CI (99.9%): [2009.807, 2045.897] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   9241.393 ±(99.9%) 85.668 B/op [Average]
[info]   (min, avg, max) = (9224.066, 9241.393, 9279.056), stdev = 22.248
[info]   CI (99.9%): [9155.725, 9327.061] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.247 ±(99.9%) 0.416 B/op [Average]
[info]   (min, avg, max) = (0.095, 0.247, 0.379), stdev = 0.108
[info]   CI (99.9%): [≈ 0, 0.662] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 97.99% complete, ETA 00:02:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 260971.407 ops/s
[info] # Warmup Iteration   2: 458447.244 ops/s
[info] # Warmup Iteration   3: 470139.470 ops/s
[info] # Warmup Iteration   4: 470558.340 ops/s
[info] # Warmup Iteration   5: 461628.308 ops/s
[info] Iteration   1: 469893.578 ops/s
[info]                  ·gc.alloc.rate:                   573.381 MB/sec
[info]                  ·gc.alloc.rate.norm:              1920.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.727 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1713.549 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.005 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 471531.471 ops/s
[info]                  ·gc.alloc.rate:                   575.234 MB/sec
[info]                  ·gc.alloc.rate.norm:              1920.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          666.479 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2224.555 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.323 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7.755 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 449081.783 ops/s
[info]                  ·gc.alloc.rate:                   548.075 MB/sec
[info]                  ·gc.alloc.rate.norm:              1920.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          666.754 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2335.756 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.073 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 472668.210 ops/s
[info]                  ·gc.alloc.rate:      576.655 MB/sec
[info]                  ·gc.alloc.rate.norm: 1920.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 471911.584 ops/s
[info]                  ·gc.alloc.rate:               575.693 MB/sec
[info]                  ·gc.alloc.rate.norm:          1920.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      666.798 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2223.847 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala":
[info]   467017.325 ±(99.9%) 38804.685 ops/s [Average]
[info]   (min, avg, max) = (449081.783, 467017.325, 472668.210), stdev = 10077.454
[info]   CI (99.9%): [428212.640, 505822.010] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   569.807 ±(99.9%) 47.006 MB/sec [Average]
[info]   (min, avg, max) = (548.075, 569.807, 576.655), stdev = 12.207
[info]   CI (99.9%): [522.802, 616.813] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   1920.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1920.001, 1920.001, 1920.001), stdev = 0.001
[info]   CI (99.9%): [1920.001, 1920.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   502.352 ±(99.9%) 1111.786 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 502.352, 666.798), stdev = 288.727
[info]   CI (99.9%): [≈ 0, 1614.138] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1699.542 ±(99.9%) 3774.781 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1699.542, 2335.756), stdev = 980.299
[info]   CI (99.9%): [≈ 0, 5474.323] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.470 ±(99.9%) 3.990 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.470, 2.323), stdev = 1.036
[info]   CI (99.9%): [≈ 0, 4.460] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.569 ±(99.9%) 13.317 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.569, 7.755), stdev = 3.458
[info]   CI (99.9%): [≈ 0, 14.885] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.600, 3.000), stdev = 1.342
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 98.19% complete, ETA 00:02:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1179356.255 ops/s
[info] # Warmup Iteration   2: 1259125.659 ops/s
[info] # Warmup Iteration   3: 1264433.249 ops/s
[info] # Warmup Iteration   4: 1245993.863 ops/s
[info] # Warmup Iteration   5: 1255533.336 ops/s
[info] Iteration   1: 1262839.509 ops/s
[info]                  ·gc.alloc.rate:                   661.154 MB/sec
[info]                  ·gc.alloc.rate.norm:              824.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.465 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     839.343 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1.584 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.975 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 1263378.166 ops/s
[info]                  ·gc.alloc.rate:                   661.455 MB/sec
[info]                  ·gc.alloc.rate.norm:              824.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.486 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     838.988 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.052 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   3: 1263696.733 ops/s
[info]                  ·gc.alloc.rate:               661.613 MB/sec
[info]                  ·gc.alloc.rate.norm:          824.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      672.810 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 837.946 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 1263650.794 ops/s
[info]                  ·gc.alloc.rate:                   661.580 MB/sec
[info]                  ·gc.alloc.rate.norm:              824.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.796 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     837.970 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 1263940.054 ops/s
[info]                  ·gc.alloc.rate:               661.810 MB/sec
[info]                  ·gc.alloc.rate.norm:          824.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.186 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 838.165 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala":
[info]   1263501.051 ±(99.9%) 1617.930 ops/s [Average]
[info]   (min, avg, max) = (1262839.509, 1263501.051, 1263940.054), stdev = 420.171
[info]   CI (99.9%): [1261883.121, 1265118.982] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   661.522 ±(99.9%) 0.932 MB/sec [Average]
[info]   (min, avg, max) = (661.154, 661.522, 661.810), stdev = 0.242
[info]   CI (99.9%): [660.591, 662.454] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   824.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (824.000, 824.000, 824.000), stdev = 0.001
[info]   CI (99.9%): [824.000, 824.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   673.149 ±(99.9%) 1.298 MB/sec [Average]
[info]   (min, avg, max) = (672.796, 673.149, 673.486), stdev = 0.337
[info]   CI (99.9%): [671.851, 674.447] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   838.482 ±(99.9%) 2.471 B/op [Average]
[info]   (min, avg, max) = (837.946, 838.482, 839.343), stdev = 0.642
[info]   CI (99.9%): [836.011, 840.953] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.329 ±(99.9%) 2.702 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.329, 1.584), stdev = 0.702
[info]   CI (99.9%): [≈ 0, 3.032] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.410 ±(99.9%) 3.368 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.410, 1.975), stdev = 0.875
[info]   CI (99.9%): [≈ 0, 3.778] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 0.707
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 98.39% complete, ETA 00:02:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 72914.857 ops/s
[info] # Warmup Iteration   2: 111810.969 ops/s
[info] # Warmup Iteration   3: 116164.952 ops/s
[info] # Warmup Iteration   4: 115045.742 ops/s
[info] # Warmup Iteration   5: 115597.289 ops/s
[info] Iteration   1: 116651.489 ops/s
[info]                  ·gc.alloc.rate:                   4054.638 MB/sec
[info]                  ·gc.alloc.rate.norm:              54704.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4066.633 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     54865.833 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.404 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 116082.620 ops/s
[info]                  ·gc.alloc.rate:                   4034.856 MB/sec
[info]                  ·gc.alloc.rate.norm:              54704.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4074.690 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     55244.066 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.129 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 115710.655 ops/s
[info]                  ·gc.alloc.rate:                   4021.996 MB/sec
[info]                  ·gc.alloc.rate.norm:              54704.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3400.006 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46244.184 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.133 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 114440.481 ops/s
[info]                  ·gc.alloc.rate:                   3977.695 MB/sec
[info]                  ·gc.alloc.rate.norm:              54704.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4084.074 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     56167.007 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.859 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 115779.829 ops/s
[info]                  ·gc.alloc.rate:                   4024.144 MB/sec
[info]                  ·gc.alloc.rate.norm:              54704.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4085.987 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     55544.700 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.132 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson":
[info]   115733.015 ±(99.9%) 3127.777 ops/s [Average]
[info]   (min, avg, max) = (114440.481, 115733.015, 116651.489), stdev = 812.274
[info]   CI (99.9%): [112605.238, 118860.791] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:·gc.alloc.rate":
[info]   4022.666 ±(99.9%) 108.842 MB/sec [Average]
[info]   (min, avg, max) = (3977.695, 4022.666, 4054.638), stdev = 28.266
[info]   CI (99.9%): [3913.824, 4131.508] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   54704.004 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (54704.004, 54704.004, 54704.004), stdev = 0.001
[info]   CI (99.9%): [54704.003, 54704.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   3942.278 ±(99.9%) 1167.664 MB/sec [Average]
[info]   (min, avg, max) = (3400.006, 3942.278, 4085.987), stdev = 303.239
[info]   CI (99.9%): [2774.614, 5109.942] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   53613.158 ±(99.9%) 15967.854 B/op [Average]
[info]   (min, avg, max) = (46244.184, 53613.158, 56167.007), stdev = 4146.801
[info]   CI (99.9%): [37645.304, 69581.012] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.083 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 0.083, 0.104), stdev = 0.015
[info]   CI (99.9%): [0.027, 0.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.131 ±(99.9%) 0.743 B/op [Average]
[info]   (min, avg, max) = (0.859, 1.131, 1.404), stdev = 0.193
[info]   CI (99.9%): [0.389, 1.874] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.400, 9.000), stdev = 2.074
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 98.59% complete, ETA 00:01:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 547598.052 ops/s
[info] # Warmup Iteration   2: 607690.430 ops/s
[info] # Warmup Iteration   3: 613511.796 ops/s
[info] # Warmup Iteration   4: 615918.210 ops/s
[info] # Warmup Iteration   5: 614396.175 ops/s
[info] Iteration   1: 614088.704 ops/s
[info]                  ·gc.alloc.rate:                   1791.845 MB/sec
[info]                  ·gc.alloc.rate.norm:              4592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2024.184 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5187.421 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.107 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 614925.016 ops/s
[info]                  ·gc.alloc.rate:                   1794.187 MB/sec
[info]                  ·gc.alloc.rate.norm:              4592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.598 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3456.688 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.213 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 609103.406 ops/s
[info]                  ·gc.alloc.rate:                   1777.259 MB/sec
[info]                  ·gc.alloc.rate.norm:              4592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2027.866 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5239.506 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.108 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 614578.545 ops/s
[info]                  ·gc.alloc.rate:                   1793.064 MB/sec
[info]                  ·gc.alloc.rate.norm:              4592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2031.000 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5201.349 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 616299.362 ops/s
[info]                  ·gc.alloc.rate:                   1798.026 MB/sec
[info]                  ·gc.alloc.rate.norm:              4592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1355.208 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3461.082 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.159 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readUPickle":
[info]   613799.007 ±(99.9%) 10591.011 ops/s [Average]
[info]   (min, avg, max) = (609103.406, 613799.007, 616299.362), stdev = 2750.452
[info]   CI (99.9%): [603207.995, 624390.018] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readUPickle:·gc.alloc.rate":
[info]   1790.876 ±(99.9%) 30.638 MB/sec [Average]
[info]   (min, avg, max) = (1777.259, 1790.876, 1798.026), stdev = 7.957
[info]   CI (99.9%): [1760.238, 1821.514] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readUPickle:·gc.alloc.rate.norm":
[info]   4592.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4592.001, 4592.001, 4592.001), stdev = 0.001
[info]   CI (99.9%): [4592.001, 4592.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readUPickle:·gc.churn.PS_Eden_Space":
[info]   1757.771 ±(99.9%) 1423.213 MB/sec [Average]
[info]   (min, avg, max) = (1350.598, 1757.771, 2031.000), stdev = 369.604
[info]   CI (99.9%): [334.558, 3180.984] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   4509.209 ±(99.9%) 3692.772 B/op [Average]
[info]   (min, avg, max) = (3456.688, 4509.209, 5239.506), stdev = 959.001
[info]   CI (99.9%): [816.437, 8201.982] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readUPickle:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   0.128 ±(99.9%) 0.233 B/op [Average]
[info]   (min, avg, max) = (0.053, 0.128, 0.213), stdev = 0.061
[info]   CI (99.9%): [≈ 0, 0.361] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readUPickle:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readUPickle:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.200, 3.000), stdev = 0.837
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 98.80% complete, ETA 00:01:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 268717.875 ops/s
[info] # Warmup Iteration   2: 365819.916 ops/s
[info] # Warmup Iteration   3: 370468.214 ops/s
[info] # Warmup Iteration   4: 368872.658 ops/s
[info] # Warmup Iteration   5: 375151.666 ops/s
[info] Iteration   1: 377728.477 ops/s
[info]                  ·gc.alloc.rate:                   1294.177 MB/sec
[info]                  ·gc.alloc.rate.norm:              5392.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.018 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5587.158 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.173 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 377558.202 ops/s
[info]                  ·gc.alloc.rate:                   1293.523 MB/sec
[info]                  ·gc.alloc.rate.norm:              5392.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.361 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5595.582 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.260 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 376841.599 ops/s
[info]                  ·gc.alloc.rate:                   1291.124 MB/sec
[info]                  ·gc.alloc.rate.norm:              5392.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.757 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5611.807 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.087 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 375215.967 ops/s
[info]                  ·gc.alloc.rate:                   1285.634 MB/sec
[info]                  ·gc.alloc.rate.norm:              5392.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.106 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5641.426 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.437 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 376011.853 ops/s
[info]                  ·gc.alloc.rate:                   1288.153 MB/sec
[info]                  ·gc.alloc.rate.norm:              5392.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.901 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5637.910 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.349 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce":
[info]   376671.220 ±(99.9%) 4077.905 ops/s [Average]
[info]   (min, avg, max) = (375215.967, 376671.220, 377728.477), stdev = 1059.019
[info]   CI (99.9%): [372593.314, 380749.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:·gc.alloc.rate":
[info]   1290.522 ±(99.9%) 13.914 MB/sec [Average]
[info]   (min, avg, max) = (1285.634, 1290.522, 1294.177), stdev = 3.613
[info]   CI (99.9%): [1276.608, 1304.436] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   5392.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5392.001, 5392.001, 5392.001), stdev = 0.001
[info]   CI (99.9%): [5392.001, 5392.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   1343.829 ±(99.9%) 8.850 MB/sec [Average]
[info]   (min, avg, max) = (1341.018, 1343.829, 1346.901), stdev = 2.298
[info]   CI (99.9%): [1334.979, 1352.678] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5614.777 ±(99.9%) 94.034 B/op [Average]
[info]   (min, avg, max) = (5587.158, 5614.777, 5641.426), stdev = 24.420
[info]   CI (99.9%): [5520.743, 5708.811] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.127 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.062, 0.104), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.261 ±(99.9%) 0.532 B/op [Average]
[info]   (min, avg, max) = (0.087, 0.261, 0.437), stdev = 0.138
[info]   CI (99.9%): [≈ 0, 0.794] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 99.00% complete, ETA 00:01:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 393893.765 ops/s
[info] # Warmup Iteration   2: 627324.250 ops/s
[info] # Warmup Iteration   3: 626487.626 ops/s
[info] # Warmup Iteration   4: 623208.464 ops/s
[info] # Warmup Iteration   5: 630907.454 ops/s
[info] Iteration   1: 630742.143 ops/s
[info]                  ·gc.alloc.rate:                   487.319 MB/sec
[info]                  ·gc.alloc.rate.norm:              1216.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          511.592 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1276.568 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.052 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 630515.982 ops/s
[info]                  ·gc.alloc.rate:               487.347 MB/sec
[info]                  ·gc.alloc.rate.norm:          1216.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.818 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1277.060 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 631667.032 ops/s
[info]                  ·gc.alloc.rate:                   488.113 MB/sec
[info]                  ·gc.alloc.rate.norm:              1216.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          666.578 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1660.597 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.324 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.789 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 634818.885 ops/s
[info]                  ·gc.alloc.rate:      490.572 MB/sec
[info]                  ·gc.alloc.rate.norm: 1216.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 630640.153 ops/s
[info]                  ·gc.alloc.rate:                   487.439 MB/sec
[info]                  ·gc.alloc.rate.norm:              1216.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          666.716 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1663.237 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.156 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala":
[info]   631676.839 ±(99.9%) 6986.695 ops/s [Average]
[info]   (min, avg, max) = (630515.982, 631676.839, 634818.885), stdev = 1814.422
[info]   CI (99.9%): [624690.144, 638663.534] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   488.158 ±(99.9%) 5.345 MB/sec [Average]
[info]   (min, avg, max) = (487.319, 488.158, 490.572), stdev = 1.388
[info]   CI (99.9%): [482.813, 493.503] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1216.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1216.001, 1216.001, 1216.001), stdev = 0.001
[info]   CI (99.9%): [1216.001, 1216.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   471.341 ±(99.9%) 1057.543 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 471.341, 666.716), stdev = 274.641
[info]   CI (99.9%): [≈ 0, 1528.884] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1175.492 ±(99.9%) 2636.733 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1175.492, 1663.237), stdev = 684.751
[info]   CI (99.9%): [≈ 0, 3812.225] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   0.481 ±(99.9%) 3.967 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.481, 2.324), stdev = 1.030
[info]   CI (99.9%): [≈ 0, 4.448] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1.199 ±(99.9%) 9.882 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.199, 5.789), stdev = 2.566
[info]   CI (99.9%): [≈ 0, 11.082] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.000, 3.000), stdev = 1.414
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 99.20% complete, ETA 00:01:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1717824.340 ops/s
[info] # Warmup Iteration   2: 1844476.510 ops/s
[info] # Warmup Iteration   3: 1772106.729 ops/s
[info] # Warmup Iteration   4: 1760136.348 ops/s
[info] # Warmup Iteration   5: 1774947.763 ops/s
[info] Iteration   1: 1765071.612 ops/s
[info]                  ·gc.alloc.rate:                   816.819 MB/sec
[info]                  ·gc.alloc.rate.norm:              728.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.475 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     600.244 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.037 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 1775919.949 ops/s
[info]                  ·gc.alloc.rate:               821.797 MB/sec
[info]                  ·gc.alloc.rate.norm:          728.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1346.238 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1192.583 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 1805291.561 ops/s
[info]                  ·gc.alloc.rate:               835.070 MB/sec
[info]                  ·gc.alloc.rate.norm:          728.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.193 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 586.878 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 1787828.747 ops/s
[info]                  ·gc.alloc.rate:                   826.993 MB/sec
[info]                  ·gc.alloc.rate.norm:              728.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.189 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     592.607 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.037 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   5: 1787052.412 ops/s
[info]                  ·gc.alloc.rate:               826.631 MB/sec
[info]                  ·gc.alloc.rate.norm:          728.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      673.521 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 593.159 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala":
[info]   1784232.856 ±(99.9%) 57779.136 ops/s [Average]
[info]   (min, avg, max) = (1765071.612, 1784232.856, 1805291.561), stdev = 15005.058
[info]   CI (99.9%): [1726453.721, 1842011.992] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   825.462 ±(99.9%) 26.128 MB/sec [Average]
[info]   (min, avg, max) = (816.819, 825.462, 835.070), stdev = 6.785
[info]   CI (99.9%): [799.334, 851.590] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   728.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (728.000, 728.000, 728.000), stdev = 0.001
[info]   CI (99.9%): [728.000, 728.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   807.923 ±(99.9%) 1158.764 MB/sec [Average]
[info]   (min, avg, max) = (673.189, 807.923, 1346.238), stdev = 300.927
[info]   CI (99.9%): [≈ 0, 1966.687] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   713.094 ±(99.9%) 1032.298 B/op [Average]
[info]   (min, avg, max) = (586.878, 713.094, 1192.583), stdev = 268.085
[info]   CI (99.9%): [≈ 0, 1745.392] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.104] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   0.015 ±(99.9%) 0.078 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.015, 0.037), stdev = 0.020
[info]   CI (99.9%): [≈ 0, 0.093] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 0.707
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 99.40% complete, ETA 00:00:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1792612.716 ops/s
[info] # Warmup Iteration   2: 1890877.468 ops/s
[info] # Warmup Iteration   3: 1921586.362 ops/s
[info] # Warmup Iteration   4: 1903755.402 ops/s
[info] # Warmup Iteration   5: 1922950.378 ops/s
[info] Iteration   1: 1922017.547 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1906057.775 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1914553.859 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1923183.225 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1917951.018 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   1916752.685 ±(99.9%) 26519.348 ops/s [Average]
[info]   (min, avg, max) = (1906057.775, 1916752.685, 1923183.225), stdev = 6886.991
[info]   CI (99.9%): [1890233.337, 1943272.033] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 99.60% complete, ETA 00:00:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 267999.038 ops/s
[info] # Warmup Iteration   2: 341645.561 ops/s
[info] # Warmup Iteration   3: 345736.417 ops/s
[info] # Warmup Iteration   4: 346457.811 ops/s
[info] # Warmup Iteration   5: 346128.283 ops/s
[info] Iteration   1: 346552.771 ops/s
[info]                  ·gc.alloc.rate:               512.598 MB/sec
[info]                  ·gc.alloc.rate.norm:          2328.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.583 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2323.392 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 346589.604 ops/s
[info]                  ·gc.alloc.rate:               512.789 MB/sec
[info]                  ·gc.alloc.rate.norm:          2328.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      511.725 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2323.171 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 346269.336 ops/s
[info]                  ·gc.alloc.rate:                   512.295 MB/sec
[info]                  ·gc.alloc.rate.norm:              2328.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          669.942 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3044.393 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.032 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9.235 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 346967.168 ops/s
[info]                  ·gc.alloc.rate:                   513.226 MB/sec
[info]                  ·gc.alloc.rate.norm:              2328.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          669.814 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3038.287 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.189 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 346701.672 ops/s
[info]                  ·gc.alloc.rate:               512.880 MB/sec
[info]                  ·gc.alloc.rate.norm:          2328.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      669.518 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3038.991 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson":
[info]   346616.110 ±(99.9%) 973.248 ops/s [Average]
[info]   (min, avg, max) = (346269.336, 346616.110, 346967.168), stdev = 252.749
[info]   CI (99.9%): [345642.862, 347589.358] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:·gc.alloc.rate":
[info]   512.758 ±(99.9%) 1.327 MB/sec [Average]
[info]   (min, avg, max) = (512.295, 512.758, 513.226), stdev = 0.345
[info]   CI (99.9%): [511.430, 514.085] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   2328.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2328.001, 2328.001, 2328.001), stdev = 0.001
[info]   CI (99.9%): [2328.001, 2328.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   606.516 ±(99.9%) 333.455 MB/sec [Average]
[info]   (min, avg, max) = (511.583, 606.516, 669.942), stdev = 86.597
[info]   CI (99.9%): [273.062, 939.971] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   2753.647 ±(99.9%) 1512.821 B/op [Average]
[info]   (min, avg, max) = (2323.171, 2753.647, 3044.393), stdev = 392.875
[info]   CI (99.9%): [1240.826, 4266.468] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   0.415 ±(99.9%) 3.483 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.415, 2.032), stdev = 0.904
[info]   CI (99.9%): [≈ 0, 3.897] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1.885 ±(99.9%) 15.826 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.885, 9.235), stdev = 4.110
[info]   CI (99.9%): [≈ 0, 17.711] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 3.000), stdev = 0.837
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 1.8.0_171, Java HotSpot(TM) 64-Bit Server VM, 25.171-b11
[info] # VM invoker: /usr/lib/jvm/java-8-oracle/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 99.80% complete, ETA 00:00:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 156062.258 ops/s
[info] # Warmup Iteration   2: 166854.539 ops/s
[info] # Warmup Iteration   3: 165824.194 ops/s
[info] # Warmup Iteration   4: 167480.707 ops/s
[info] # Warmup Iteration   5: 168089.567 ops/s
[info] Iteration   1: 166681.887 ops/s
[info]                  ·gc.alloc.rate:                   983.237 MB/sec
[info]                  ·gc.alloc.rate.norm:              9280.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.843 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12730.673 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.590 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 165535.861 ops/s
[info]                  ·gc.alloc.rate:               976.070 MB/sec
[info]                  ·gc.alloc.rate.norm:          9280.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      674.136 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6409.358 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 167263.232 ops/s
[info]                  ·gc.alloc.rate:                   986.268 MB/sec
[info]                  ·gc.alloc.rate.norm:              9280.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.270 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12686.156 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.783 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 168235.152 ops/s
[info]                  ·gc.alloc.rate:               991.974 MB/sec
[info]                  ·gc.alloc.rate.norm:          9280.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      674.134 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6306.587 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 167947.396 ops/s
[info]                  ·gc.alloc.rate:                   990.244 MB/sec
[info]                  ·gc.alloc.rate.norm:              9280.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.875 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12640.892 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.390 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeUPickle":
[info]   167132.706 ±(99.9%) 4151.422 ops/s [Average]
[info]   (min, avg, max) = (165535.861, 167132.706, 168235.152), stdev = 1078.111
[info]   CI (99.9%): [162981.283, 171284.128] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeUPickle:·gc.alloc.rate":
[info]   985.558 ±(99.9%) 24.280 MB/sec [Average]
[info]   (min, avg, max) = (976.070, 985.558, 991.974), stdev = 6.305
[info]   CI (99.9%): [961.279, 1009.838] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeUPickle:·gc.alloc.rate.norm":
[info]   9280.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (9280.003, 9280.003, 9280.003), stdev = 0.001
[info]   CI (99.9%): [9280.002, 9280.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeUPickle:·gc.churn.PS_Eden_Space":
[info]   1078.852 ±(99.9%) 1422.636 MB/sec [Average]
[info]   (min, avg, max) = (674.134, 1078.852, 1348.875), stdev = 369.454
[info]   CI (99.9%): [≈ 0, 2501.488] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   10154.733 ±(99.9%) 13347.442 B/op [Average]
[info]   (min, avg, max) = (6306.587, 10154.733, 12730.673), stdev = 3466.288
[info]   CI (99.9%): [≈ 0, 23502.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.083), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.181] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   0.353 ±(99.9%) 1.350 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.353, 0.783), stdev = 0.351
[info]   CI (99.9%): [≈ 0, 1.703] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeUPickle:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeUPickle:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # Run complete. Total time: 02:13:32
[info] REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
[info] why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
[info] experiments, perform baseline and negative tests that provide experimental control, make sure
[info] the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
[info] Do not assume the numbers tell you what you want them to tell.
[info] Benchmark                                                                                      (size)   Mode  Cnt         Score         Error   Units
[info] AdtBenchmark.readCirce                                                                            N/A  thrpt    5    762351.223 ±   34653.914   ops/s
[info] AdtBenchmark.readCirce:·gc.alloc.rate                                                             N/A  thrpt    5      2007.288 ±      91.276  MB/sec
[info] AdtBenchmark.readCirce:·gc.alloc.rate.norm                                                        N/A  thrpt    5      4144.001 ±       0.001    B/op
[info] AdtBenchmark.readCirce:·gc.churn.PS_Eden_Space                                                    N/A  thrpt    5      1888.596 ±    1156.076  MB/sec
[info] AdtBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                               N/A  thrpt    5      3899.326 ±    2393.307    B/op
[info] AdtBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                                N/A  thrpt    5         0.062 ±       0.113  MB/sec
[info] AdtBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                           N/A  thrpt    5         0.129 ±       0.235    B/op
[info] AdtBenchmark.readCirce:·gc.count                                                                  N/A  thrpt    5        14.000                counts
[info] AdtBenchmark.readCirce:·gc.time                                                                   N/A  thrpt    5        12.000                    ms
[info] AdtBenchmark.readJacksonScala                                                                     N/A  thrpt    5   1632097.012 ±  143316.638   ops/s
[info] AdtBenchmark.readJacksonScala:·gc.alloc.rate                                                      N/A  thrpt    5      1161.445 ±     101.997  MB/sec
[info] AdtBenchmark.readJacksonScala:·gc.alloc.rate.norm                                                 N/A  thrpt    5      1120.000 ±       0.001    B/op
[info] AdtBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                             N/A  thrpt    5      1068.308 ±    1409.507  MB/sec
[info] AdtBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                        N/A  thrpt    5      1026.476 ±    1309.447    B/op
[info] AdtBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                         N/A  thrpt    5         0.042 ±       0.196  MB/sec
[info] AdtBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                                    N/A  thrpt    5         0.040 ±       0.188    B/op
[info] AdtBenchmark.readJacksonScala:·gc.count                                                           N/A  thrpt    5         8.000                counts
[info] AdtBenchmark.readJacksonScala:·gc.time                                                            N/A  thrpt    5         7.000                    ms
[info] AdtBenchmark.readJsoniterScala                                                                    N/A  thrpt    5   3644859.841 ±  263087.433   ops/s
[info] AdtBenchmark.readJsoniterScala:·gc.alloc.rate                                                     N/A  thrpt    5       240.847 ±      17.388  MB/sec
[info] AdtBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                                N/A  thrpt    5       104.000 ±       0.001    B/op
[info] AdtBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                            N/A  thrpt    5       204.635 ±    1078.984  MB/sec
[info] AdtBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                                       N/A  thrpt    5        88.890 ±     468.837    B/op
[info] AdtBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                        N/A  thrpt    5         0.005 ±       0.046  MB/sec
[info] AdtBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                                   N/A  thrpt    5         0.002 ±       0.020    B/op
[info] AdtBenchmark.readJsoniterScala:·gc.count                                                          N/A  thrpt    5         2.000                counts
[info] AdtBenchmark.readJsoniterScala:·gc.time                                                           N/A  thrpt    5         4.000                    ms
[info] AdtBenchmark.readPlayJson                                                                         N/A  thrpt    5    174084.473 ±    4323.634   ops/s
[info] AdtBenchmark.readPlayJson:·gc.alloc.rate                                                          N/A  thrpt    5      1465.428 ±      36.376  MB/sec
[info] AdtBenchmark.readPlayJson:·gc.alloc.rate.norm                                                     N/A  thrpt    5     13248.002 ±       0.001    B/op
[info] AdtBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                                 N/A  thrpt    5      1471.944 ±    1144.375  MB/sec
[info] AdtBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                            N/A  thrpt    5     13310.082 ±   10434.427    B/op
[info] AdtBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                             N/A  thrpt    5         0.037 ±       0.174  MB/sec
[info] AdtBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                        N/A  thrpt    5         0.339 ±       1.573    B/op
[info] AdtBenchmark.readPlayJson:·gc.count                                                               N/A  thrpt    5        11.000                counts
[info] AdtBenchmark.readPlayJson:·gc.time                                                                N/A  thrpt    5        12.000                    ms
[info] AdtBenchmark.writeCirce                                                                           N/A  thrpt    5    573158.115 ±   27498.246   ops/s
[info] AdtBenchmark.writeCirce:·gc.alloc.rate                                                            N/A  thrpt    5      1870.550 ±      90.512  MB/sec
[info] AdtBenchmark.writeCirce:·gc.alloc.rate.norm                                                       N/A  thrpt    5      5136.001 ±       0.001    B/op
[info] AdtBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                                   N/A  thrpt    5      1886.902 ±    1155.178  MB/sec
[info] AdtBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                              N/A  thrpt    5      5176.598 ±    3060.554    B/op
[info] AdtBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                               N/A  thrpt    5         0.067 ±       0.119  MB/sec
[info] AdtBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                          N/A  thrpt    5         0.183 ±       0.329    B/op
[info] AdtBenchmark.writeCirce:·gc.count                                                                 N/A  thrpt    5        14.000                counts
[info] AdtBenchmark.writeCirce:·gc.time                                                                  N/A  thrpt    5        12.000                    ms
[info] AdtBenchmark.writeJacksonScala                                                                    N/A  thrpt    5   2112105.441 ±  146312.526   ops/s
[info] AdtBenchmark.writeJacksonScala:·gc.alloc.rate                                                     N/A  thrpt    5       687.293 ±      46.579  MB/sec
[info] AdtBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                                N/A  thrpt    5       512.000 ±       0.001    B/op
[info] AdtBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                            N/A  thrpt    5       768.636 ±     876.582  MB/sec
[info] AdtBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                       N/A  thrpt    5       575.049 ±     705.653    B/op
[info] AdtBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                        N/A  thrpt    5         0.474 ±       3.994  MB/sec
[info] AdtBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                                   N/A  thrpt    5         0.364 ±       3.067    B/op
[info] AdtBenchmark.writeJacksonScala:·gc.count                                                          N/A  thrpt    5         6.000                counts
[info] AdtBenchmark.writeJacksonScala:·gc.time                                                           N/A  thrpt    5         9.000                    ms
[info] AdtBenchmark.writeJsoniterScala                                                                   N/A  thrpt    5  18501229.944 ± 1024054.915   ops/s
[info] AdtBenchmark.writeJsoniterScala:·gc.alloc.rate                                                    N/A  thrpt    5       940.510 ±      51.551  MB/sec
[info] AdtBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                               N/A  thrpt    5        80.000 ±       0.001    B/op
[info] AdtBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                           N/A  thrpt    5       942.705 ±    1419.593  MB/sec
[info] AdtBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                                      N/A  thrpt    5        80.299 ±     122.237    B/op
[info] AdtBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                       N/A  thrpt    5         0.017 ±       0.105  MB/sec
[info] AdtBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                                  N/A  thrpt    5         0.001 ±       0.009    B/op
[info] AdtBenchmark.writeJsoniterScala:·gc.count                                                         N/A  thrpt    5         7.000                counts
[info] AdtBenchmark.writeJsoniterScala:·gc.time                                                          N/A  thrpt    5         6.000                    ms
[info] AdtBenchmark.writeJsoniterScalaPrealloc                                                           N/A  thrpt    5  13663921.679 ±  338918.878   ops/s
[info] AdtBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                            N/A  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] AdtBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                       N/A  thrpt    5        ≈ 10⁻⁵                  B/op
[info] AdtBenchmark.writeJsoniterScalaPrealloc:·gc.count                                                 N/A  thrpt    5           ≈ 0                counts
[info] AdtBenchmark.writePlayJson                                                                        N/A  thrpt    5    305769.387 ±   13721.593   ops/s
[info] AdtBenchmark.writePlayJson:·gc.alloc.rate                                                         N/A  thrpt    5      1001.109 ±      44.423  MB/sec
[info] AdtBenchmark.writePlayJson:·gc.alloc.rate.norm                                                    N/A  thrpt    5      5152.001 ±       0.001    B/op
[info] AdtBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                                N/A  thrpt    5      1067.737 ±    1407.059  MB/sec
[info] AdtBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                           N/A  thrpt    5      5486.391 ±    7131.422    B/op
[info] AdtBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                            N/A  thrpt    5         0.029 ±       0.108  MB/sec
[info] AdtBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                                       N/A  thrpt    5         0.149 ±       0.550    B/op
[info] AdtBenchmark.writePlayJson:·gc.count                                                              N/A  thrpt    5         8.000                counts
[info] AdtBenchmark.writePlayJson:·gc.time                                                               N/A  thrpt    5         9.000                    ms
[info] AnyRefsBenchmark.readCirce                                                                        N/A  thrpt    5   1710907.037 ±   92826.379   ops/s
[info] AnyRefsBenchmark.readCirce:·gc.alloc.rate                                                         N/A  thrpt    5      2669.968 ±     144.024  MB/sec
[info] AnyRefsBenchmark.readCirce:·gc.alloc.rate.norm                                                    N/A  thrpt    5      2456.000 ±       0.001    B/op
[info] AnyRefsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                                N/A  thrpt    5      2710.166 ±      25.856  MB/sec
[info] AnyRefsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                           N/A  thrpt    5      2493.328 ±     122.191    B/op
[info] AnyRefsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                            N/A  thrpt    5         0.075 ±       0.134  MB/sec
[info] AnyRefsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                       N/A  thrpt    5         0.069 ±       0.122    B/op
[info] AnyRefsBenchmark.readCirce:·gc.count                                                              N/A  thrpt    5        20.000                counts
[info] AnyRefsBenchmark.readCirce:·gc.time                                                               N/A  thrpt    5        17.000                    ms
[info] AnyRefsBenchmark.readDslJsonJava                                                                  N/A  thrpt    5  10155492.380 ±  525156.202   ops/s
[info] AnyRefsBenchmark.readDslJsonJava:·gc.alloc.rate                                                   N/A  thrpt    5      1238.901 ±      64.021  MB/sec
[info] AnyRefsBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                              N/A  thrpt    5       192.000 ±       0.001    B/op
[info] AnyRefsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                                          N/A  thrpt    5      1202.216 ±    1146.128  MB/sec
[info] AnyRefsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                                     N/A  thrpt    5       186.570 ±     180.899    B/op
[info] AnyRefsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                                      N/A  thrpt    5         0.466 ±       3.970  MB/sec
[info] AnyRefsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                                 N/A  thrpt    5         0.074 ±       0.630    B/op
[info] AnyRefsBenchmark.readDslJsonJava:·gc.count                                                        N/A  thrpt    5         9.000                counts
[info] AnyRefsBenchmark.readDslJsonJava:·gc.time                                                         N/A  thrpt    5        17.000                    ms
[info] AnyRefsBenchmark.readJacksonScala                                                                 N/A  thrpt    5   2584193.189 ±   72972.786   ops/s
[info] AnyRefsBenchmark.readJacksonScala:·gc.alloc.rate                                                  N/A  thrpt    5      1812.825 ±      51.129  MB/sec
[info] AnyRefsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                             N/A  thrpt    5      1104.000 ±       0.001    B/op
[info] AnyRefsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                         N/A  thrpt    5      1745.535 ±    1410.552  MB/sec
[info] AnyRefsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                    N/A  thrpt    5      1063.977 ±     878.614    B/op
[info] AnyRefsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                     N/A  thrpt    5         0.046 ±       0.132  MB/sec
[info] AnyRefsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                                N/A  thrpt    5         0.028 ±       0.080    B/op
[info] AnyRefsBenchmark.readJacksonScala:·gc.count                                                       N/A  thrpt    5        13.000                counts
[info] AnyRefsBenchmark.readJacksonScala:·gc.time                                                        N/A  thrpt    5        14.000                    ms
[info] AnyRefsBenchmark.readJsoniterScala                                                                N/A  thrpt    5   9481665.202 ±  124808.842   ops/s
[info] AnyRefsBenchmark.readJsoniterScala:·gc.alloc.rate                                                 N/A  thrpt    5      1205.105 ±      15.950  MB/sec
[info] AnyRefsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                            N/A  thrpt    5       200.000 ±       0.001    B/op
[info] AnyRefsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                        N/A  thrpt    5      1215.824 ±    1164.603  MB/sec
[info] AnyRefsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                                   N/A  thrpt    5       201.840 ±     194.066    B/op
[info] AnyRefsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                    N/A  thrpt    5         0.037 ±       0.143  MB/sec
[info] AnyRefsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                               N/A  thrpt    5         0.006 ±       0.024    B/op
[info] AnyRefsBenchmark.readJsoniterScala:·gc.count                                                      N/A  thrpt    5         9.000                counts
[info] AnyRefsBenchmark.readJsoniterScala:·gc.time                                                       N/A  thrpt    5         7.000                    ms
[info] AnyRefsBenchmark.readPlayJson                                                                     N/A  thrpt    5    627027.224 ±   25657.862   ops/s
[info] AnyRefsBenchmark.readPlayJson:·gc.alloc.rate                                                      N/A  thrpt    5      1657.445 ±      68.193  MB/sec
[info] AnyRefsBenchmark.readPlayJson:·gc.alloc.rate.norm                                                 N/A  thrpt    5      4160.001 ±       0.001    B/op
[info] AnyRefsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                             N/A  thrpt    5      1608.978 ±    1412.480  MB/sec
[info] AnyRefsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                        N/A  thrpt    5      4036.226 ±    3490.250    B/op
[info] AnyRefsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                         N/A  thrpt    5         0.050 ±       0.044  MB/sec
[info] AnyRefsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                    N/A  thrpt    5         0.126 ±       0.114    B/op
[info] AnyRefsBenchmark.readPlayJson:·gc.count                                                           N/A  thrpt    5        12.000                counts
[info] AnyRefsBenchmark.readPlayJson:·gc.time                                                            N/A  thrpt    5        14.000                    ms
[info] AnyRefsBenchmark.writeCirce                                                                       N/A  thrpt    5   1987097.153 ±  111119.016   ops/s
[info] AnyRefsBenchmark.writeCirce:·gc.alloc.rate                                                        N/A  thrpt    5      1959.855 ±     109.221  MB/sec
[info] AnyRefsBenchmark.writeCirce:·gc.alloc.rate.norm                                                   N/A  thrpt    5      1552.000 ±       0.001    B/op
[info] AnyRefsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                               N/A  thrpt    5      2023.822 ±      22.508  MB/sec
[info] AnyRefsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                          N/A  thrpt    5      1602.876 ±      73.746    B/op
[info] AnyRefsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                           N/A  thrpt    5         0.071 ±       0.122  MB/sec
[info] AnyRefsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                      N/A  thrpt    5         0.056 ±       0.097    B/op
[info] AnyRefsBenchmark.writeCirce:·gc.count                                                             N/A  thrpt    5        15.000                counts
[info] AnyRefsBenchmark.writeCirce:·gc.time                                                              N/A  thrpt    5        13.000                    ms
[info] AnyRefsBenchmark.writeDslJsonJava                                                                 N/A  thrpt    5  19231641.119 ±  477277.577   ops/s
[info] AnyRefsBenchmark.writeDslJsonJava:·gc.alloc.rate                                                  N/A  thrpt    5       586.559 ±      14.469  MB/sec
[info] AnyRefsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                             N/A  thrpt    5        48.000 ±       0.001    B/op
[info] AnyRefsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                                         N/A  thrpt    5       633.942 ±     263.306  MB/sec
[info] AnyRefsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                                    N/A  thrpt    5        51.887 ±      21.896    B/op
[info] AnyRefsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                                     N/A  thrpt    5         0.008 ±       0.035  MB/sec
[info] AnyRefsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                                N/A  thrpt    5         0.001 ±       0.003    B/op
[info] AnyRefsBenchmark.writeDslJsonJava:·gc.count                                                       N/A  thrpt    5         5.000                counts
[info] AnyRefsBenchmark.writeDslJsonJava:·gc.time                                                        N/A  thrpt    5        10.000                    ms
[info] AnyRefsBenchmark.writeJacksonScala                                                                N/A  thrpt    5   6100572.282 ±  280045.710   ops/s
[info] AnyRefsBenchmark.writeJacksonScala:·gc.alloc.rate                                                 N/A  thrpt    5      1674.683 ±      77.160  MB/sec
[info] AnyRefsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                            N/A  thrpt    5       432.000 ±       0.001    B/op
[info] AnyRefsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                        N/A  thrpt    5      1607.739 ±    1413.784  MB/sec
[info] AnyRefsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                   N/A  thrpt    5       414.488 ±     358.352    B/op
[info] AnyRefsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                    N/A  thrpt    5         0.054 ±       0.122  MB/sec
[info] AnyRefsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                               N/A  thrpt    5         0.014 ±       0.031    B/op
[info] AnyRefsBenchmark.writeJacksonScala:·gc.count                                                      N/A  thrpt    5        12.000                counts
[info] AnyRefsBenchmark.writeJacksonScala:·gc.time                                                       N/A  thrpt    5        12.000                    ms
[info] AnyRefsBenchmark.writeJsoniterScala                                                               N/A  thrpt    5  28064140.432 ± 2175277.962   ops/s
[info] AnyRefsBenchmark.writeJsoniterScala:·gc.alloc.rate                                                N/A  thrpt    5       856.046 ±      66.875  MB/sec
[info] AnyRefsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                           N/A  thrpt    5        48.000 ±       0.001    B/op
[info] AnyRefsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                       N/A  thrpt    5       808.285 ±    1159.530  MB/sec
[info] AnyRefsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                                  N/A  thrpt    5        45.440 ±      67.095    B/op
[info] AnyRefsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                   N/A  thrpt    5         0.029 ±       0.134  MB/sec
[info] AnyRefsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                              N/A  thrpt    5         0.002 ±       0.008    B/op
[info] AnyRefsBenchmark.writeJsoniterScala:·gc.count                                                     N/A  thrpt    5         6.000                counts
[info] AnyRefsBenchmark.writeJsoniterScala:·gc.time                                                      N/A  thrpt    5         5.000                    ms
[info] AnyRefsBenchmark.writeJsoniterScalaPrealloc                                                       N/A  thrpt    5  28967132.050 ± 2761298.241   ops/s
[info] AnyRefsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                        N/A  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] AnyRefsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                   N/A  thrpt    5        ≈ 10⁻⁵                  B/op
[info] AnyRefsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                             N/A  thrpt    5           ≈ 0                counts
[info] AnyRefsBenchmark.writePlayJson                                                                    N/A  thrpt    5   1155773.395 ±    8821.771   ops/s
[info] AnyRefsBenchmark.writePlayJson:·gc.alloc.rate                                                     N/A  thrpt    5      1733.164 ±      13.685  MB/sec
[info] AnyRefsBenchmark.writePlayJson:·gc.alloc.rate.norm                                                N/A  thrpt    5      2360.000 ±       0.001    B/op
[info] AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                            N/A  thrpt    5      1744.050 ±    1410.120  MB/sec
[info] AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                       N/A  thrpt    5      2375.057 ±    1925.072    B/op
[info] AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                        N/A  thrpt    5         0.042 ±       0.127  MB/sec
[info] AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                                   N/A  thrpt    5         0.057 ±       0.173    B/op
[info] AnyRefsBenchmark.writePlayJson:·gc.count                                                          N/A  thrpt    5        13.000                counts
[info] AnyRefsBenchmark.writePlayJson:·gc.time                                                           N/A  thrpt    5        13.000                    ms
[info] ArrayBufferOfBooleansBenchmark.readCirce                                                          128  thrpt    5    343203.122 ±    2245.608   ops/s
[info] ArrayBufferOfBooleansBenchmark.readCirce:·gc.alloc.rate                                           128  thrpt    5      2051.596 ±      13.450  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readCirce:·gc.alloc.rate.norm                                      128  thrpt    5      9408.001 ±       0.001    B/op
[info] ArrayBufferOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space                                  128  thrpt    5      2028.770 ±      16.671  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5      9303.349 ±      97.932    B/op
[info] ArrayBufferOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.075 ±       0.122  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         0.344 ±       0.556    B/op
[info] ArrayBufferOfBooleansBenchmark.readCirce:·gc.count                                                128  thrpt    5        15.000                counts
[info] ArrayBufferOfBooleansBenchmark.readCirce:·gc.time                                                 128  thrpt    5        13.000                    ms
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala                                                   128  thrpt    5    478475.839 ±   24981.207   ops/s
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate                                    128  thrpt    5       651.794 ±      34.049  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm                               128  thrpt    5      2144.001 ±       0.001    B/op
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                           128  thrpt    5       635.634 ±     267.006  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5      2089.526 ±     821.740    B/op
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.504 ±       4.051  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         1.680 ±      13.516    B/op
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.count                                         128  thrpt    5         5.000                counts
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.time                                          128  thrpt    5        10.000                    ms
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala                                                  128  thrpt    5   1029509.867 ±    5940.901   ops/s
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate                                   128  thrpt    5       685.546 ±       3.916  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm                              128  thrpt    5      1048.000 ±       0.001    B/op
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                          128  thrpt    5       673.019 ±       0.757  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5      1028.853 ±       6.819    B/op
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                      128  thrpt    5         0.338 ±       2.684  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5         0.517 ±       4.112    B/op
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.count                                        128  thrpt    5         5.000                counts
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.time                                         128  thrpt    5         5.000                    ms
[info] ArrayBufferOfBooleansBenchmark.readPlayJson                                                       128  thrpt    5    120736.788 ±    1268.983   ops/s
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.alloc.rate                                        128  thrpt    5      4178.950 ±      44.249  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm                                   128  thrpt    5     54472.004 ±       0.001    B/op
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                               128  thrpt    5      4215.943 ±    1190.543  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5     54948.548 ±   15090.956    B/op
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.083 ±       0.098  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         1.086 ±       1.286    B/op
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.count                                             128  thrpt    5        31.000                counts
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.time                                              128  thrpt    5        27.000                    ms
[info] ArrayBufferOfBooleansBenchmark.readUPickle                                                        128  thrpt    5    623021.118 ±   11140.134   ops/s
[info] ArrayBufferOfBooleansBenchmark.readUPickle:·gc.alloc.rate                                         128  thrpt    5      1906.369 ±      34.060  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readUPickle:·gc.alloc.rate.norm                                    128  thrpt    5      4816.001 ±       0.001    B/op
[info] ArrayBufferOfBooleansBenchmark.readUPickle:·gc.churn.PS_Eden_Space                                128  thrpt    5      1893.851 ±    1168.802  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5      4782.134 ±    2898.350    B/op
[info] ArrayBufferOfBooleansBenchmark.readUPickle:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.071 ±       0.091  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         0.179 ±       0.233    B/op
[info] ArrayBufferOfBooleansBenchmark.readUPickle:·gc.count                                              128  thrpt    5        14.000                counts
[info] ArrayBufferOfBooleansBenchmark.readUPickle:·gc.time                                               128  thrpt    5        13.000                    ms
[info] ArrayBufferOfBooleansBenchmark.writeCirce                                                         128  thrpt    5    323769.804 ±    6400.686   ops/s
[info] ArrayBufferOfBooleansBenchmark.writeCirce:·gc.alloc.rate                                          128  thrpt    5      1102.623 ±      21.782  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeCirce:·gc.alloc.rate.norm                                     128  thrpt    5      5360.001 ±       0.001    B/op
[info] ArrayBufferOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                 128  thrpt    5      1073.501 ±    1415.583  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5      5219.690 ±    6896.383    B/op
[info] ArrayBufferOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.037 ±       0.174  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         0.183 ±       0.850    B/op
[info] ArrayBufferOfBooleansBenchmark.writeCirce:·gc.count                                               128  thrpt    5         8.000                counts
[info] ArrayBufferOfBooleansBenchmark.writeCirce:·gc.time                                                128  thrpt    5         7.000                    ms
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala                                                  128  thrpt    5    667735.245 ±   23106.453   ops/s
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate                                   128  thrpt    5       492.191 ±      17.101  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm                              128  thrpt    5      1160.001 ±       0.001    B/op
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                          128  thrpt    5       471.284 ±    1057.472  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5      1106.533 ±    2484.306    B/op
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                      128  thrpt    5         0.481 ±       4.055  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5         1.133 ±       9.548    B/op
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.count                                        128  thrpt    5         4.000                counts
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.time                                         128  thrpt    5         9.000                    ms
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala                                                 128  thrpt    5   2195834.185 ±    7082.788   ops/s
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate                                  128  thrpt    5      1015.836 ±       3.334  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                             128  thrpt    5       728.000 ±       0.001    B/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                         128  thrpt    5      1077.303 ±    1420.314  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5       772.212 ±    1019.849    B/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.037 ±       0.143  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5         0.027 ±       0.103    B/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.count                                       128  thrpt    5         8.000                counts
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.time                                        128  thrpt    5         7.000                    ms
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc                                         128  thrpt    5   2633533.816 ±   33292.989   ops/s
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                          128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                     128  thrpt    5        ≈ 10⁻⁴                  B/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count                               128  thrpt    5           ≈ 0                counts
[info] ArrayBufferOfBooleansBenchmark.writePlayJson                                                      128  thrpt    5    386725.468 ±   18798.079   ops/s
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.alloc.rate                                       128  thrpt    5       556.362 ±      26.908  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm                                  128  thrpt    5      2264.001 ±       0.001    B/op
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                              128  thrpt    5       504.188 ±    1116.901  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5      2046.428 ±    4521.373    B/op
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.417 ±       3.391  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         1.706 ±      13.891    B/op
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.count                                            128  thrpt    5         4.000                counts
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.time                                             128  thrpt    5         8.000                    ms
[info] ArrayBufferOfBooleansBenchmark.writeUPickle                                                       128  thrpt    5    166205.722 ±    2392.661   ops/s
[info] ArrayBufferOfBooleansBenchmark.writeUPickle:·gc.alloc.rate                                        128  thrpt    5       973.234 ±      14.004  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeUPickle:·gc.alloc.rate.norm                                   128  thrpt    5      9216.003 ±       0.001    B/op
[info] ArrayBufferOfBooleansBenchmark.writeUPickle:·gc.churn.PS_Eden_Space                               128  thrpt    5       943.305 ±    1419.985  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5      8927.832 ±   13378.658    B/op
[info] ArrayBufferOfBooleansBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.021 ±       0.139  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         0.197 ±       1.311    B/op
[info] ArrayBufferOfBooleansBenchmark.writeUPickle:·gc.count                                             128  thrpt    5         7.000                counts
[info] ArrayBufferOfBooleansBenchmark.writeUPickle:·gc.time                                              128  thrpt    5         6.000                    ms
[info] ArrayOfBigDecimalsBenchmark.readCirce                                                             128  thrpt    5     18027.587 ±     931.449   ops/s
[info] ArrayOfBigDecimalsBenchmark.readCirce:·gc.alloc.rate                                              128  thrpt    5      1276.859 ±      66.088  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readCirce:·gc.alloc.rate.norm                                         128  thrpt    5    111465.432 ±      40.328    B/op
[info] ArrayOfBigDecimalsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                     128  thrpt    5      1346.649 ±       6.304  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5    117574.651 ±    6057.811    B/op
[info] ArrayOfBigDecimalsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.062 ±       0.196  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         5.438 ±      16.983    B/op
[info] ArrayOfBigDecimalsBenchmark.readCirce:·gc.count                                                   128  thrpt    5        10.000                counts
[info] ArrayOfBigDecimalsBenchmark.readCirce:·gc.time                                                    128  thrpt    5         8.000                    ms
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala                                                      128  thrpt    5     32338.824 ±     116.387   ops/s
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.alloc.rate                                       128  thrpt    5       868.099 ±       3.101  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                  128  thrpt    5     42248.014 ±       0.002    B/op
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                              128  thrpt    5       935.611 ±    1410.809  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5     45533.805 ±   68662.015    B/op
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.029 ±       0.134  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         1.419 ±       6.529    B/op
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.count                                            128  thrpt    5         7.000                counts
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.time                                             128  thrpt    5         7.000                    ms
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala                                                     128  thrpt    5     35684.093 ±    1389.419   ops/s
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.alloc.rate                                      128  thrpt    5       531.693 ±      20.646  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                 128  thrpt    5     23448.012 ±       0.002    B/op
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                             128  thrpt    5       506.319 ±    1122.690  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5     22429.022 ±   49728.304    B/op
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.336 ±       2.714  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5        14.869 ±     120.260    B/op
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.count                                           128  thrpt    5         4.000                counts
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.time                                            128  thrpt    5         6.000                    ms
[info] ArrayOfBigDecimalsBenchmark.readPlayJson                                                          128  thrpt    5     26042.878 ±    1168.671   ops/s
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.alloc.rate                                           128  thrpt    5      1347.994 ±      60.739  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.alloc.rate.norm                                      128  thrpt    5     81456.017 ±       0.002    B/op
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                  128  thrpt    5      1340.648 ±      11.017  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5     81020.337 ±    3453.362    B/op
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.067 ±       0.191  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         4.024 ±      11.490    B/op
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.count                                                128  thrpt    5        10.000                counts
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.time                                                 128  thrpt    5         9.000                    ms
[info] ArrayOfBigDecimalsBenchmark.writeCirce                                                            128  thrpt    5     27789.235 ±     438.271   ops/s
[info] ArrayOfBigDecimalsBenchmark.writeCirce:·gc.alloc.rate                                             128  thrpt    5      1902.524 ±      28.815  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeCirce:·gc.alloc.rate.norm                                        128  thrpt    5    107728.016 ±       0.002    B/op
[info] ArrayOfBigDecimalsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1887.393 ±    1154.486  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5    106908.690 ±   66241.533    B/op
[info] ArrayOfBigDecimalsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.042 ±       0.188  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         2.365 ±      10.706    B/op
[info] ArrayOfBigDecimalsBenchmark.writeCirce:·gc.count                                                  128  thrpt    5        14.000                counts
[info] ArrayOfBigDecimalsBenchmark.writeCirce:·gc.time                                                   128  thrpt    5        13.000                    ms
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala                                                     128  thrpt    5     28042.274 ±     866.460   ops/s
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.alloc.rate                                      128  thrpt    5      1645.104 ±      51.153  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                 128  thrpt    5     92312.016 ±       0.002    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                             128  thrpt    5      1608.547 ±    1413.927  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5     90332.330 ±   80918.388    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.025 ±       0.067  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         1.399 ±       3.735    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.count                                           128  thrpt    5        12.000                counts
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.time                                            128  thrpt    5        11.000                    ms
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala                                                    128  thrpt    5     30560.467 ±    2058.721   ops/s
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.alloc.rate                                     128  thrpt    5      1696.124 ±     114.142  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                128  thrpt    5     87328.014 ±       0.002    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                            128  thrpt    5      1756.287 ±    1425.110  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5     90614.628 ±   77098.497    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.054 ±       0.091  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         2.802 ±       4.881    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.count                                          128  thrpt    5        13.000                counts
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.time                                           128  thrpt    5        12.000                    ms
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc                                            128  thrpt    5     31924.219 ±    2791.100   ops/s
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                             128  thrpt    5      1709.564 ±     149.335  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                        128  thrpt    5     84272.014 ±       0.001    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space                    128  thrpt    5      1755.950 ±    1420.757  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm               128  thrpt    5     86795.708 ±   74635.772    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space                128  thrpt    5         0.062 ±       0.160  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm           128  thrpt    5         3.082 ±       7.919    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                  128  thrpt    5        13.000                counts
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.time                                   128  thrpt    5        11.000                    ms
[info] ArrayOfBigDecimalsBenchmark.writePlayJson                                                         128  thrpt    5      8458.473 ±     268.420   ops/s
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.alloc.rate                                          128  thrpt    5      1196.212 ±      37.660  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.alloc.rate.norm                                     128  thrpt    5    222544.052 ±       0.007    B/op
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                 128  thrpt    5      1206.994 ±    1153.523  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5    224777.011 ±  217502.114    B/op
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.046 ±       0.154  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         8.545 ±      28.848    B/op
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.count                                               128  thrpt    5         9.000                counts
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.time                                                128  thrpt    5         8.000                    ms
[info] ArrayOfBigIntsBenchmark.readCirce                                                                 128  thrpt    5     17740.997 ±     297.067   ops/s
[info] ArrayOfBigIntsBenchmark.readCirce:·gc.alloc.rate                                                  128  thrpt    5      1530.388 ±      25.885  MB/sec
[info] ArrayOfBigIntsBenchmark.readCirce:·gc.alloc.rate.norm                                             128  thrpt    5    135760.027 ±       0.015    B/op
[info] ArrayOfBigIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                         128  thrpt    5      1482.970 ±    1160.510  MB/sec
[info] ArrayOfBigIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5    131538.888 ±  102471.933    B/op
[info] ArrayOfBigIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                     128  thrpt    5         0.037 ±       0.143  MB/sec
[info] ArrayOfBigIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5         3.322 ±      12.685    B/op
[info] ArrayOfBigIntsBenchmark.readCirce:·gc.count                                                       128  thrpt    5        11.000                counts
[info] ArrayOfBigIntsBenchmark.readCirce:·gc.time                                                        128  thrpt    5        10.000                    ms
[info] ArrayOfBigIntsBenchmark.readJacksonScala                                                          128  thrpt    5     41695.391 ±    1780.695   ops/s
[info] ArrayOfBigIntsBenchmark.readJacksonScala:·gc.alloc.rate                                           128  thrpt    5      1151.082 ±      48.990  MB/sec
[info] ArrayOfBigIntsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                      128  thrpt    5     43448.011 ±       0.001    B/op
[info] ArrayOfBigIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5      1204.563 ±    1153.207  MB/sec
[info] ArrayOfBigIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5     45510.683 ±   44083.056    B/op
[info] ArrayOfBigIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.050 ±       0.209  MB/sec
[info] ArrayOfBigIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         1.896 ±       7.907    B/op
[info] ArrayOfBigIntsBenchmark.readJacksonScala:·gc.count                                                128  thrpt    5         9.000                counts
[info] ArrayOfBigIntsBenchmark.readJacksonScala:·gc.time                                                 128  thrpt    5         9.000                    ms
[info] ArrayOfBigIntsBenchmark.readJsoniterScala                                                         128  thrpt    5     61705.548 ±    1293.284   ops/s
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.alloc.rate                                          128  thrpt    5       797.422 ±      16.653  MB/sec
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                     128  thrpt    5     20336.007 ±       0.001    B/op
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5       807.867 ±    1158.980  MB/sec
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5     20599.824 ±   29500.371    B/op
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.037 ±       0.215  MB/sec
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         0.954 ±       5.480    B/op
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.count                                               128  thrpt    5         6.000                counts
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.time                                                128  thrpt    5         5.000                    ms
[info] ArrayOfBigIntsBenchmark.readPlayJson                                                              128  thrpt    5     31870.662 ±     392.944   ops/s
[info] ArrayOfBigIntsBenchmark.readPlayJson:·gc.alloc.rate                                               128  thrpt    5      2162.034 ±      27.059  MB/sec
[info] ArrayOfBigIntsBenchmark.readPlayJson:·gc.alloc.rate.norm                                          128  thrpt    5    106760.014 ±       0.002    B/op
[info] ArrayOfBigIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                      128  thrpt    5      2153.208 ±    1130.874  MB/sec
[info] ArrayOfBigIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5    106342.523 ±   56580.329    B/op
[info] ArrayOfBigIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.071 ±       0.134  MB/sec
[info] ArrayOfBigIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         3.496 ±       6.646    B/op
[info] ArrayOfBigIntsBenchmark.readPlayJson:·gc.count                                                    128  thrpt    5        16.000                counts
[info] ArrayOfBigIntsBenchmark.readPlayJson:·gc.time                                                     128  thrpt    5        17.000                    ms
[info] ArrayOfBigIntsBenchmark.writeJacksonScala                                                         128  thrpt    5     29042.599 ±     102.796   ops/s
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.alloc.rate                                          128  thrpt    5      1749.519 ±       6.120  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                     128  thrpt    5     94808.015 ±       0.002    B/op
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5      1745.477 ±    1416.381  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5     94589.569 ±   76764.641    B/op
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.079 ±       0.174  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         4.287 ±       9.419    B/op
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.count                                               128  thrpt    5        13.000                counts
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.time                                                128  thrpt    5        12.000                    ms
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala                                                        128  thrpt    5     37755.771 ±    1220.419   ops/s
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.alloc.rate                                         128  thrpt    5      1617.175 ±      51.465  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                    128  thrpt    5     67408.012 ±       0.002    B/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                128  thrpt    5      1620.476 ±    1426.862  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5     67535.517 ±   59199.121    B/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.054 ±       0.156  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         2.251 ±       6.497    B/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.count                                              128  thrpt    5        12.000                counts
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.time                                               128  thrpt    5        10.000                    ms
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc                                                128  thrpt    5     37434.143 ±    1663.864   ops/s
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                 128  thrpt    5      1659.968 ±      74.251  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                            128  thrpt    5     69784.012 ±       0.001    B/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space                        128  thrpt    5      1755.833 ±    1424.382  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5     73841.063 ±   60385.997    B/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space                    128  thrpt    5         0.054 ±       0.146  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5         2.267 ±       6.059    B/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                      128  thrpt    5        13.000                counts
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.time                                       128  thrpt    5        11.000                    ms
[info] ArrayOfBooleansBenchmark.readCirce                                                                128  thrpt    5    330782.122 ±   11112.212   ops/s
[info] ArrayOfBooleansBenchmark.readCirce:·gc.alloc.rate                                                 128  thrpt    5      1829.612 ±      62.424  MB/sec
[info] ArrayOfBooleansBenchmark.readCirce:·gc.alloc.rate.norm                                            128  thrpt    5      8704.001 ±       0.001    B/op
[info] ArrayOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space                                        128  thrpt    5      1891.608 ±    1167.492  MB/sec
[info] ArrayOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5      9003.115 ±    5646.683    B/op
[info] ArrayOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.062 ±       0.127  MB/sec
[info] ArrayOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5         0.296 ±       0.597    B/op
[info] ArrayOfBooleansBenchmark.readCirce:·gc.count                                                      128  thrpt    5        14.000                counts
[info] ArrayOfBooleansBenchmark.readCirce:·gc.time                                                       128  thrpt    5        11.000                    ms
[info] ArrayOfBooleansBenchmark.readDslJsonJava                                                          128  thrpt    5   1337072.770 ±   78236.864   ops/s
[info] ArrayOfBooleansBenchmark.readDslJsonJava:·gc.alloc.rate                                           128  thrpt    5       421.353 ±      24.617  MB/sec
[info] ArrayOfBooleansBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                      128  thrpt    5       496.000 ±       0.001    B/op
[info] ArrayOfBooleansBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                                  128  thrpt    5       337.385 ±    1209.834  MB/sec
[info] ArrayOfBooleansBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5       399.824 ±    1428.343    B/op
[info] ArrayOfBooleansBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.007 ±       0.057  MB/sec
[info] ArrayOfBooleansBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         0.008 ±       0.068    B/op
[info] ArrayOfBooleansBenchmark.readDslJsonJava:·gc.count                                                128  thrpt    5         3.000                counts
[info] ArrayOfBooleansBenchmark.readDslJsonJava:·gc.time                                                 128  thrpt    5         6.000                    ms
[info] ArrayOfBooleansBenchmark.readJacksonScala                                                         128  thrpt    5    685406.511 ±   20258.151   ops/s
[info] ArrayOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate                                          128  thrpt    5       567.896 ±      16.548  MB/sec
[info] ArrayOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm                                     128  thrpt    5      1304.001 ±       0.001    B/op
[info] ArrayOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5       503.091 ±    1113.888  MB/sec
[info] ArrayOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5      1157.546 ±    2564.382    B/op
[info] ArrayOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.436 ±       3.572  MB/sec
[info] ArrayOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         0.999 ±       8.190    B/op
[info] ArrayOfBooleansBenchmark.readJacksonScala:·gc.count                                               128  thrpt    5         4.000                counts
[info] ArrayOfBooleansBenchmark.readJacksonScala:·gc.time                                                128  thrpt    5         7.000                    ms
[info] ArrayOfBooleansBenchmark.readJsoniterScala                                                        128  thrpt    5   1748298.202 ±    8005.759   ops/s
[info] ArrayOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate                                         128  thrpt    5       337.706 ±       1.581  MB/sec
[info] ArrayOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                    128  thrpt    5       304.000 ±       0.001    B/op
[info] ArrayOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                128  thrpt    5       306.965 ±    1079.026  MB/sec
[info] ArrayOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5       276.559 ±     972.143    B/op
[info] ArrayOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.001 ±       0.008  MB/sec
[info] ArrayOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         0.001 ±       0.007    B/op
[info] ArrayOfBooleansBenchmark.readJsoniterScala:·gc.count                                              128  thrpt    5         3.000                counts
[info] ArrayOfBooleansBenchmark.readJsoniterScala:·gc.time                                               128  thrpt    5         6.000                    ms
[info] ArrayOfBooleansBenchmark.readPlayJson                                                             128  thrpt    5    108883.409 ±    3630.560   ops/s
[info] ArrayOfBooleansBenchmark.readPlayJson:·gc.alloc.rate                                              128  thrpt    5      3958.736 ±     119.984  MB/sec
[info] ArrayOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm                                         128  thrpt    5     57215.698 ±     341.774    B/op
[info] ArrayOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                     128  thrpt    5      3941.619 ±    1155.870  MB/sec
[info] ArrayOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5     56955.509 ±   15898.506    B/op
[info] ArrayOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.079 ±       0.036  MB/sec
[info] ArrayOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         1.144 ±       0.542    B/op
[info] ArrayOfBooleansBenchmark.readPlayJson:·gc.count                                                   128  thrpt    5        29.000                counts
[info] ArrayOfBooleansBenchmark.readPlayJson:·gc.time                                                    128  thrpt    5        26.000                    ms
[info] ArrayOfBooleansBenchmark.readUPickle                                                              128  thrpt    5    620523.507 ±   39971.853   ops/s
[info] ArrayOfBooleansBenchmark.readUPickle:·gc.alloc.rate                                               128  thrpt    5      1621.399 ±     104.695  MB/sec
[info] ArrayOfBooleansBenchmark.readUPickle:·gc.alloc.rate.norm                                          128  thrpt    5      4112.001 ±       0.001    B/op
[info] ArrayOfBooleansBenchmark.readUPickle:·gc.churn.PS_Eden_Space                                      128  thrpt    5      1621.589 ±    1425.155  MB/sec
[info] ArrayOfBooleansBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5      4120.788 ±    3789.613    B/op
[info] ArrayOfBooleansBenchmark.readUPickle:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.046 ±       0.132  MB/sec
[info] ArrayOfBooleansBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         0.117 ±       0.345    B/op
[info] ArrayOfBooleansBenchmark.readUPickle:·gc.count                                                    128  thrpt    5        12.000                counts
[info] ArrayOfBooleansBenchmark.readUPickle:·gc.time                                                     128  thrpt    5        10.000                    ms
[info] ArrayOfBooleansBenchmark.writeCirce                                                               128  thrpt    5    377732.432 ±   14804.148   ops/s
[info] ArrayOfBooleansBenchmark.writeCirce:·gc.alloc.rate                                                128  thrpt    5      1288.552 ±      51.106  MB/sec
[info] ArrayOfBooleansBenchmark.writeCirce:·gc.alloc.rate.norm                                           128  thrpt    5      5368.001 ±       0.001    B/op
[info] ArrayOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                       128  thrpt    5      1343.445 ±       8.471  MB/sec
[info] ArrayOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5      5597.177 ±     234.755    B/op
[info] ArrayOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.062 ±       0.098  MB/sec
[info] ArrayOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5         0.260 ±       0.405    B/op
[info] ArrayOfBooleansBenchmark.writeCirce:·gc.count                                                     128  thrpt    5        10.000                counts
[info] ArrayOfBooleansBenchmark.writeCirce:·gc.time                                                      128  thrpt    5         9.000                    ms
[info] ArrayOfBooleansBenchmark.writeDslJsonJava                                                         128  thrpt    5   1502828.661 ±   85222.755   ops/s
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.alloc.rate                                          128  thrpt    5       695.236 ±      38.999  MB/sec
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                     128  thrpt    5       728.000 ±       0.001    B/op
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                                 128  thrpt    5       664.974 ±       4.112  MB/sec
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5       696.423 ±      36.752    B/op
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.009 ±       0.061  MB/sec
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         0.009 ±       0.065    B/op
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.count                                               128  thrpt    5         5.000                counts
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.time                                                128  thrpt    5        10.000                    ms
[info] ArrayOfBooleansBenchmark.writeJacksonScala                                                        128  thrpt    5   1028790.819 ±    9429.227   ops/s
[info] ArrayOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate                                         128  thrpt    5       726.977 ±       6.615  MB/sec
[info] ArrayOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                    128  thrpt    5      1112.000 ±       0.001    B/op
[info] ArrayOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                128  thrpt    5       801.786 ±    1151.676  MB/sec
[info] ArrayOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5      1226.832 ±    1769.350    B/op
[info] ArrayOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.458 ±       3.547  MB/sec
[info] ArrayOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         0.702 ±       5.431    B/op
[info] ArrayOfBooleansBenchmark.writeJacksonScala:·gc.count                                              128  thrpt    5         6.000                counts
[info] ArrayOfBooleansBenchmark.writeJacksonScala:·gc.time                                               128  thrpt    5         7.000                    ms
[info] ArrayOfBooleansBenchmark.writeJsoniterScala                                                       128  thrpt    5   2622819.017 ±   41651.407   ops/s
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate                                        128  thrpt    5      1213.256 ±      19.477  MB/sec
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                   128  thrpt    5       728.000 ±       0.001    B/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                               128  thrpt    5      1212.449 ±    1157.973  MB/sec
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5       727.399 ±     693.310    B/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.050 ±       0.176  MB/sec
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         0.030 ±       0.105    B/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.count                                             128  thrpt    5         9.000                counts
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.time                                              128  thrpt    5         8.000                    ms
[info] ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc                                               128  thrpt    5   2222915.563 ±   14921.260   ops/s
[info] ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                           128  thrpt    5        ≈ 10⁻⁴                  B/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count                                     128  thrpt    5           ≈ 0                counts
[info] ArrayOfBooleansBenchmark.writePlayJson                                                            128  thrpt    5    505941.996 ±    3771.701   ops/s
[info] ArrayOfBooleansBenchmark.writePlayJson:·gc.alloc.rate                                             128  thrpt    5       591.497 ±       4.412  MB/sec
[info] ArrayOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm                                        128  thrpt    5      1840.001 ±       0.001    B/op
[info] ArrayOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                    128  thrpt    5       638.048 ±     272.148  MB/sec
[info] ArrayOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5      1984.594 ±     838.556    B/op
[info] ArrayOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.421 ±       3.446  MB/sec
[info] ArrayOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         1.309 ±      10.713    B/op
[info] ArrayOfBooleansBenchmark.writePlayJson:·gc.count                                                  128  thrpt    5         5.000                counts
[info] ArrayOfBooleansBenchmark.writePlayJson:·gc.time                                                   128  thrpt    5         8.000                    ms
[info] ArrayOfBooleansBenchmark.writeUPickle                                                             128  thrpt    5    175107.258 ±    7452.642   ops/s
[info] ArrayOfBooleansBenchmark.writeUPickle:·gc.alloc.rate                                              128  thrpt    5      1027.258 ±      43.089  MB/sec
[info] ArrayOfBooleansBenchmark.writeUPickle:·gc.alloc.rate.norm                                         128  thrpt    5      9232.003 ±       0.001    B/op
[info] ArrayOfBooleansBenchmark.writeUPickle:·gc.churn.PS_Eden_Space                                     128  thrpt    5       944.030 ±    1422.037  MB/sec
[info] ArrayOfBooleansBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5      8470.953 ±   12587.806    B/op
[info] ArrayOfBooleansBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.029 ±       0.134  MB/sec
[info] ArrayOfBooleansBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         0.261 ±       1.198    B/op
[info] ArrayOfBooleansBenchmark.writeUPickle:·gc.count                                                   128  thrpt    5         7.000                counts
[info] ArrayOfBooleansBenchmark.writeUPickle:·gc.time                                                    128  thrpt    5         6.000                    ms
[info] ArrayOfBytesBenchmark.readCirce                                                                   128  thrpt    5    152632.326 ±    6560.728   ops/s
[info] ArrayOfBytesBenchmark.readCirce:·gc.alloc.rate                                                    128  thrpt    5      1878.257 ±      80.696  MB/sec
[info] ArrayOfBytesBenchmark.readCirce:·gc.alloc.rate.norm                                               128  thrpt    5     19368.003 ±       0.001    B/op
[info] ArrayOfBytesBenchmark.readCirce:·gc.churn.PS_Eden_Space                                           128  thrpt    5      1891.821 ±    1173.009  MB/sec
[info] ArrayOfBytesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                      128  thrpt    5     19498.631 ±   11860.374    B/op
[info] ArrayOfBytesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                       128  thrpt    5         0.037 ±       0.132  MB/sec
[info] ArrayOfBytesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                  128  thrpt    5         0.388 ±       1.375    B/op
[info] ArrayOfBytesBenchmark.readCirce:·gc.count                                                         128  thrpt    5        14.000                counts
[info] ArrayOfBytesBenchmark.readCirce:·gc.time                                                          128  thrpt    5        13.000                    ms
[info] ArrayOfBytesBenchmark.readJacksonScala                                                            128  thrpt    5    429395.763 ±    2350.551   ops/s
[info] ArrayOfBytesBenchmark.readJacksonScala:·gc.alloc.rate                                             128  thrpt    5       355.772 ±       1.922  MB/sec
[info] ArrayOfBytesBenchmark.readJacksonScala:·gc.alloc.rate.norm                                        128  thrpt    5      1304.001 ±       0.001    B/op
[info] ArrayOfBytesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5       306.963 ±    1079.018  MB/sec
[info] ArrayOfBytesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5      1126.221 ±    3958.827    B/op
[info] ArrayOfBytesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.015 ±       0.078  MB/sec
[info] ArrayOfBytesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         0.053 ±       0.287    B/op
[info] ArrayOfBytesBenchmark.readJacksonScala:·gc.count                                                  128  thrpt    5         3.000                counts
[info] ArrayOfBytesBenchmark.readJacksonScala:·gc.time                                                   128  thrpt    5         8.000                    ms
[info] ArrayOfBytesBenchmark.readJsoniterScala                                                           128  thrpt    5   1012714.736 ±    3442.886   ops/s
[info] ArrayOfBytesBenchmark.readJsoniterScala:·gc.alloc.rate                                            128  thrpt    5       195.619 ±       0.668  MB/sec
[info] ArrayOfBytesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                       128  thrpt    5       304.000 ±       0.001    B/op
[info] ArrayOfBytesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5       204.658 ±    1079.102  MB/sec
[info] ArrayOfBytesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5       318.307 ±    1678.340    B/op
[info] ArrayOfBytesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.543 ±       4.676  MB/sec
[info] ArrayOfBytesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         0.844 ±       7.270    B/op
[info] ArrayOfBytesBenchmark.readJsoniterScala:·gc.count                                                 128  thrpt    5         2.000                counts
[info] ArrayOfBytesBenchmark.readJsoniterScala:·gc.time                                                  128  thrpt    5         4.000                    ms
[info] ArrayOfBytesBenchmark.readPlayJson                                                                128  thrpt    5     83869.470 ±    1208.090   ops/s
[info] ArrayOfBytesBenchmark.readPlayJson:·gc.alloc.rate                                                 128  thrpt    5      3461.193 ±      50.099  MB/sec
[info] ArrayOfBytesBenchmark.readPlayJson:·gc.alloc.rate.norm                                            128  thrpt    5     64952.005 ±       0.001    B/op
[info] ArrayOfBytesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                        128  thrpt    5      3528.055 ±    1134.341  MB/sec
[info] ArrayOfBytesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5     66198.872 ±   20748.693    B/op
[info] ArrayOfBytesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.096 ±       0.122  MB/sec
[info] ArrayOfBytesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5         1.797 ±       2.289    B/op
[info] ArrayOfBytesBenchmark.readPlayJson:·gc.count                                                      128  thrpt    5        26.000                counts
[info] ArrayOfBytesBenchmark.readPlayJson:·gc.time                                                       128  thrpt    5        25.000                    ms
[info] ArrayOfBytesBenchmark.readUPickle                                                                 128  thrpt    5    186533.499 ±    5364.962   ops/s
[info] ArrayOfBytesBenchmark.readUPickle:·gc.alloc.rate                                                  128  thrpt    5      1458.511 ±      41.589  MB/sec
[info] ArrayOfBytesBenchmark.readUPickle:·gc.alloc.rate.norm                                             128  thrpt    5     12304.002 ±       0.001    B/op
[info] ArrayOfBytesBenchmark.readUPickle:·gc.churn.PS_Eden_Space                                         128  thrpt    5      1485.379 ±    1172.089  MB/sec
[info] ArrayOfBytesBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5     12524.154 ±    9681.526    B/op
[info] ArrayOfBytesBenchmark.readUPickle:·gc.churn.PS_Survivor_Space                                     128  thrpt    5         0.071 ±       0.134  MB/sec
[info] ArrayOfBytesBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5         0.598 ±       1.141    B/op
[info] ArrayOfBytesBenchmark.readUPickle:·gc.count                                                       128  thrpt    5        11.000                counts
[info] ArrayOfBytesBenchmark.readUPickle:·gc.time                                                        128  thrpt    5         9.000                    ms
[info] ArrayOfBytesBenchmark.writeCirce                                                                  128  thrpt    5    285157.475 ±   14282.024   ops/s
[info] ArrayOfBytesBenchmark.writeCirce:·gc.alloc.rate                                                   128  thrpt    5      1572.754 ±      79.178  MB/sec
[info] ArrayOfBytesBenchmark.writeCirce:·gc.alloc.rate.norm                                              128  thrpt    5      8680.002 ±       0.001    B/op
[info] ArrayOfBytesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                          128  thrpt    5      1615.356 ±    1415.327  MB/sec
[info] ArrayOfBytesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                     128  thrpt    5      8914.677 ±    7784.718    B/op
[info] ArrayOfBytesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                      128  thrpt    5         0.054 ±       0.072  MB/sec
[info] ArrayOfBytesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5         0.298 ±       0.390    B/op
[info] ArrayOfBytesBenchmark.writeCirce:·gc.count                                                        128  thrpt    5        12.000                counts
[info] ArrayOfBytesBenchmark.writeCirce:·gc.time                                                         128  thrpt    5        10.000                    ms
[info] ArrayOfBytesBenchmark.writeJacksonScala                                                           128  thrpt    5   1645041.857 ±   88787.713   ops/s
[info] ArrayOfBytesBenchmark.writeJacksonScala:·gc.alloc.rate                                            128  thrpt    5       844.657 ±      45.897  MB/sec
[info] ArrayOfBytesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                       128  thrpt    5       808.000 ±       0.001    B/op
[info] ArrayOfBytesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5       802.171 ±    1150.850  MB/sec
[info] ArrayOfBytesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5       766.375 ±    1080.097    B/op
[info] ArrayOfBytesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.033 ±       0.091  MB/sec
[info] ArrayOfBytesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         0.032 ±       0.087    B/op
[info] ArrayOfBytesBenchmark.writeJacksonScala:·gc.count                                                 128  thrpt    5         6.000                counts
[info] ArrayOfBytesBenchmark.writeJacksonScala:·gc.time                                                  128  thrpt    5         6.000                    ms
[info] ArrayOfBytesBenchmark.writeJsoniterScala                                                          128  thrpt    5   2006191.416 ±    2819.563   ops/s
[info] ArrayOfBytesBenchmark.writeJsoniterScala:·gc.alloc.rate                                           128  thrpt    5       540.491 ±       0.712  MB/sec
[info] ArrayOfBytesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                      128  thrpt    5       424.000 ±       0.001    B/op
[info] ArrayOfBytesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5       506.152 ±    1122.239  MB/sec
[info] ArrayOfBytesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5       397.069 ±     880.361    B/op
[info] ArrayOfBytesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.334 ±       2.661  MB/sec
[info] ArrayOfBytesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         0.262 ±       2.086    B/op
[info] ArrayOfBytesBenchmark.writeJsoniterScala:·gc.count                                                128  thrpt    5         4.000                counts
[info] ArrayOfBytesBenchmark.writeJsoniterScala:·gc.time                                                 128  thrpt    5         6.000                    ms
[info] ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc                                                  128  thrpt    5   1974316.826 ±   20135.370   ops/s
[info] ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                   128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                              128  thrpt    5        ≈ 10⁻⁴                  B/op
[info] ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:·gc.count                                        128  thrpt    5           ≈ 0                counts
[info] ArrayOfBytesBenchmark.writePlayJson                                                               128  thrpt    5     38451.384 ±    1139.141   ops/s
[info] ArrayOfBytesBenchmark.writePlayJson:·gc.alloc.rate                                                128  thrpt    5      1677.562 ±      49.169  MB/sec
[info] ArrayOfBytesBenchmark.writePlayJson:·gc.alloc.rate.norm                                           128  thrpt    5     68656.011 ±       0.001    B/op
[info] ArrayOfBytesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                       128  thrpt    5      1614.941 ±    1419.571  MB/sec
[info] ArrayOfBytesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5     66130.772 ±   58918.083    B/op
[info] ArrayOfBytesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.042 ±       0.188  MB/sec
[info] ArrayOfBytesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5         1.699 ±       7.666    B/op
[info] ArrayOfBytesBenchmark.writePlayJson:·gc.count                                                     128  thrpt    5        12.000                counts
[info] ArrayOfBytesBenchmark.writePlayJson:·gc.time                                                      128  thrpt    5        11.000                    ms
[info] ArrayOfBytesBenchmark.writeUPickle                                                                128  thrpt    5    127425.895 ±    2067.461   ops/s
[info] ArrayOfBytesBenchmark.writeUPickle:·gc.alloc.rate                                                 128  thrpt    5       910.047 ±      14.788  MB/sec
[info] ArrayOfBytesBenchmark.writeUPickle:·gc.alloc.rate.norm                                            128  thrpt    5     11240.003 ±       0.001    B/op
[info] ArrayOfBytesBenchmark.writeUPickle:·gc.churn.PS_Eden_Space                                        128  thrpt    5       808.458 ±    1159.221  MB/sec
[info] ArrayOfBytesBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5      9981.250 ±   14237.432    B/op
[info] ArrayOfBytesBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.021 ±       0.139  MB/sec
[info] ArrayOfBytesBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5         0.257 ±       1.711    B/op
[info] ArrayOfBytesBenchmark.writeUPickle:·gc.count                                                      128  thrpt    5         6.000                counts
[info] ArrayOfBytesBenchmark.writeUPickle:·gc.time                                                       128  thrpt    5         5.000                    ms
[info] ArrayOfCharsBenchmark.readCirce                                                                   128  thrpt    5    220965.593 ±    7462.158   ops/s
[info] ArrayOfCharsBenchmark.readCirce:·gc.alloc.rate                                                    128  thrpt    5      2351.929 ±      79.271  MB/sec
[info] ArrayOfCharsBenchmark.readCirce:·gc.alloc.rate.norm                                               128  thrpt    5     16752.002 ±       0.001    B/op
[info] ArrayOfCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                           128  thrpt    5      2302.160 ±    1428.519  MB/sec
[info] ArrayOfCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                      128  thrpt    5     16402.071 ±   10301.963    B/op
[info] ArrayOfCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                       128  thrpt    5         0.075 ±       0.108  MB/sec
[info] ArrayOfCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                  128  thrpt    5         0.534 ±       0.766    B/op
[info] ArrayOfCharsBenchmark.readCirce:·gc.count                                                         128  thrpt    5        17.000                counts
[info] ArrayOfCharsBenchmark.readCirce:·gc.time                                                          128  thrpt    5        14.000                    ms
[info] ArrayOfCharsBenchmark.readJacksonScala                                                            128  thrpt    5    315460.724 ±   14923.859   ops/s
[info] ArrayOfCharsBenchmark.readJacksonScala:·gc.alloc.rate                                             128  thrpt    5      1579.756 ±      74.446  MB/sec
[info] ArrayOfCharsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                        128  thrpt    5      7880.001 ±       0.001    B/op
[info] ArrayOfCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1611.325 ±    1411.690  MB/sec
[info] ArrayOfCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5      8037.043 ±    7027.364    B/op
[info] ArrayOfCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.033 ±       0.091  MB/sec
[info] ArrayOfCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         0.166 ±       0.451    B/op
[info] ArrayOfCharsBenchmark.readJacksonScala:·gc.count                                                  128  thrpt    5        12.000                counts
[info] ArrayOfCharsBenchmark.readJacksonScala:·gc.time                                                   128  thrpt    5        10.000                    ms
[info] ArrayOfCharsBenchmark.readJsoniterScala                                                           128  thrpt    5   1147705.301 ±   15905.480   ops/s
[info] ArrayOfCharsBenchmark.readJsoniterScala:·gc.alloc.rate                                            128  thrpt    5       396.699 ±       5.507  MB/sec
[info] ArrayOfCharsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                       128  thrpt    5       544.000 ±       0.001    B/op
[info] ArrayOfCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5       441.580 ±     987.949  MB/sec
[info] ArrayOfCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5       606.336 ±    1358.653    B/op
[info] ArrayOfCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.319 ±       2.701  MB/sec
[info] ArrayOfCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         0.440 ±       3.723    B/op
[info] ArrayOfCharsBenchmark.readJsoniterScala:·gc.count                                                 128  thrpt    5         4.000                counts
[info] ArrayOfCharsBenchmark.readJsoniterScala:·gc.time                                                  128  thrpt    5         8.000                    ms
[info] ArrayOfCharsBenchmark.readPlayJson                                                                128  thrpt    5     80391.396 ±    2541.682   ops/s
[info] ArrayOfCharsBenchmark.readPlayJson:·gc.alloc.rate                                                 128  thrpt    5      3273.477 ±     105.215  MB/sec
[info] ArrayOfCharsBenchmark.readPlayJson:·gc.alloc.rate.norm                                            128  thrpt    5     64080.005 ±       0.001    B/op
[info] ArrayOfCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                        128  thrpt    5      3252.444 ±    1163.174  MB/sec
[info] ArrayOfCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5     63666.797 ±   22642.164    B/op
[info] ArrayOfCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.083 ±       0.098  MB/sec
[info] ArrayOfCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5         1.629 ±       1.913    B/op
[info] ArrayOfCharsBenchmark.readPlayJson:·gc.count                                                      128  thrpt    5        24.000                counts
[info] ArrayOfCharsBenchmark.readPlayJson:·gc.time                                                       128  thrpt    5        23.000                    ms
[info] ArrayOfCharsBenchmark.readUPickle                                                                 128  thrpt    5    155932.607 ±    7613.565   ops/s
[info] ArrayOfCharsBenchmark.readUPickle:·gc.alloc.rate                                                  128  thrpt    5      2159.085 ±     105.121  MB/sec
[info] ArrayOfCharsBenchmark.readUPickle:·gc.alloc.rate.norm                                             128  thrpt    5     21792.003 ±       0.001    B/op
[info] ArrayOfCharsBenchmark.readUPickle:·gc.churn.PS_Eden_Space                                         128  thrpt    5      2167.064 ±    1172.805  MB/sec
[info] ArrayOfCharsBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5     21866.558 ±   11521.717    B/op
[info] ArrayOfCharsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space                                     128  thrpt    5         0.062 ±       0.098  MB/sec
[info] ArrayOfCharsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5         0.633 ±       1.030    B/op
[info] ArrayOfCharsBenchmark.readUPickle:·gc.count                                                       128  thrpt    5        16.000                counts
[info] ArrayOfCharsBenchmark.readUPickle:·gc.time                                                        128  thrpt    5        13.000                    ms
[info] ArrayOfCharsBenchmark.writeCirce                                                                  128  thrpt    5    223569.750 ±    2212.773   ops/s
[info] ArrayOfCharsBenchmark.writeCirce:·gc.alloc.rate                                                   128  thrpt    5      2201.300 ±      21.537  MB/sec
[info] ArrayOfCharsBenchmark.writeCirce:·gc.alloc.rate.norm                                              128  thrpt    5     15496.002 ±       0.001    B/op
[info] ArrayOfCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                          128  thrpt    5      2297.112 ±    1423.265  MB/sec
[info] ArrayOfCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                     128  thrpt    5     16170.642 ±   10022.940    B/op
[info] ArrayOfCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                      128  thrpt    5         0.062 ±       0.179  MB/sec
[info] ArrayOfCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5         0.440 ±       1.259    B/op
[info] ArrayOfCharsBenchmark.writeCirce:·gc.count                                                        128  thrpt    5        17.000                counts
[info] ArrayOfCharsBenchmark.writeCirce:·gc.time                                                         128  thrpt    5        14.000                    ms
[info] ArrayOfCharsBenchmark.writeJacksonScala                                                           128  thrpt    5   1178096.124 ±   19905.408   ops/s
[info] ArrayOfCharsBenchmark.writeJacksonScala:·gc.alloc.rate                                            128  thrpt    5       688.651 ±      11.670  MB/sec
[info] ArrayOfCharsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                       128  thrpt    5       920.000 ±       0.001    B/op
[info] ArrayOfCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5       668.070 ±       1.033  MB/sec
[info] ArrayOfCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5       892.519 ±      14.992    B/op
[info] ArrayOfCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.440 ±       3.562  MB/sec
[info] ArrayOfCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         0.591 ±       4.788    B/op
[info] ArrayOfCharsBenchmark.writeJacksonScala:·gc.count                                                 128  thrpt    5         5.000                counts
[info] ArrayOfCharsBenchmark.writeJacksonScala:·gc.time                                                  128  thrpt    5         6.000                    ms
[info] ArrayOfCharsBenchmark.writeJsoniterScala                                                          128  thrpt    5   2873139.557 ±  174083.420   ops/s
[info] ArrayOfCharsBenchmark.writeJsoniterScala:·gc.alloc.rate                                           128  thrpt    5       978.502 ±      59.231  MB/sec
[info] ArrayOfCharsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                      128  thrpt    5       536.000 ±       0.001    B/op
[info] ArrayOfCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5       942.423 ±    1419.755  MB/sec
[info] ArrayOfCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5       516.563 ±     781.588    B/op
[info] ArrayOfCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.029 ±       0.108  MB/sec
[info] ArrayOfCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         0.016 ±       0.059    B/op
[info] ArrayOfCharsBenchmark.writeJsoniterScala:·gc.count                                                128  thrpt    5         7.000                counts
[info] ArrayOfCharsBenchmark.writeJsoniterScala:·gc.time                                                 128  thrpt    5         6.000                    ms
[info] ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc                                                  128  thrpt    5   2567559.138 ±    4402.658   ops/s
[info] ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                   128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                              128  thrpt    5        ≈ 10⁻⁴                  B/op
[info] ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                        128  thrpt    5           ≈ 0                counts
[info] ArrayOfCharsBenchmark.writePlayJson                                                               128  thrpt    5    281623.874 ±    8568.477   ops/s
[info] ArrayOfCharsBenchmark.writePlayJson:·gc.alloc.rate                                                128  thrpt    5      2305.012 ±      70.146  MB/sec
[info] ArrayOfCharsBenchmark.writePlayJson:·gc.alloc.rate.norm                                           128  thrpt    5     12880.002 ±       0.001    B/op
[info] ArrayOfCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                       128  thrpt    5      2292.834 ±    1424.436  MB/sec
[info] ArrayOfCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5     12820.510 ±    8219.326    B/op
[info] ArrayOfCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.067 ±       0.067  MB/sec
[info] ArrayOfCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5         0.373 ±       0.382    B/op
[info] ArrayOfCharsBenchmark.writePlayJson:·gc.count                                                     128  thrpt    5        17.000                counts
[info] ArrayOfCharsBenchmark.writePlayJson:·gc.time                                                      128  thrpt    5        16.000                    ms
[info] ArrayOfCharsBenchmark.writeUPickle                                                                128  thrpt    5     88963.027 ±    1636.738   ops/s
[info] ArrayOfCharsBenchmark.writeUPickle:·gc.alloc.rate                                                 128  thrpt    5       845.703 ±      14.961  MB/sec
[info] ArrayOfCharsBenchmark.writeUPickle:·gc.alloc.rate.norm                                            128  thrpt    5     14960.005 ±       0.001    B/op
[info] ArrayOfCharsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space                                        128  thrpt    5       943.848 ±    1421.620  MB/sec
[info] ArrayOfCharsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5     16687.716 ±   25026.431    B/op
[info] ArrayOfCharsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.025 ±       0.105  MB/sec
[info] ArrayOfCharsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5         0.441 ±       1.845    B/op
[info] ArrayOfCharsBenchmark.writeUPickle:·gc.count                                                      128  thrpt    5         7.000                counts
[info] ArrayOfCharsBenchmark.writeUPickle:·gc.time                                                       128  thrpt    5         5.000                    ms
[info] ArrayOfDoublesBenchmark.readCirce                                                                 128  thrpt    5     25668.845 ±     184.904   ops/s
[info] ArrayOfDoublesBenchmark.readCirce:·gc.alloc.rate                                                  128  thrpt    5      1616.610 ±      11.533  MB/sec
[info] ArrayOfDoublesBenchmark.readCirce:·gc.alloc.rate.norm                                             128  thrpt    5     99120.017 ±       0.002    B/op
[info] ArrayOfDoublesBenchmark.readCirce:·gc.churn.PS_Eden_Space                                         128  thrpt    5      1618.332 ±    1414.698  MB/sec
[info] ArrayOfDoublesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5     99247.888 ±   87247.658    B/op
[info] ArrayOfDoublesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                     128  thrpt    5         0.037 ±       0.164  MB/sec
[info] ArrayOfDoublesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5         2.300 ±      10.086    B/op
[info] ArrayOfDoublesBenchmark.readCirce:·gc.count                                                       128  thrpt    5        12.000                counts
[info] ArrayOfDoublesBenchmark.readCirce:·gc.time                                                        128  thrpt    5        11.000                    ms
[info] ArrayOfDoublesBenchmark.readDslJsonJava                                                           128  thrpt    5     89364.262 ±   10388.871   ops/s
[info] ArrayOfDoublesBenchmark.readDslJsonJava:·gc.alloc.rate                                            128  thrpt    5       842.723 ±      97.516  MB/sec
[info] ArrayOfDoublesBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                       128  thrpt    5     14840.005 ±       0.001    B/op
[info] ArrayOfDoublesBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                                   128  thrpt    5       799.118 ±    1147.519  MB/sec
[info] ArrayOfDoublesBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5     14214.290 ±   22769.935    B/op
[info] ArrayOfDoublesBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.010 ±       0.057  MB/sec
[info] ArrayOfDoublesBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         0.179 ±       1.062    B/op
[info] ArrayOfDoublesBenchmark.readDslJsonJava:·gc.count                                                 128  thrpt    5         6.000                counts
[info] ArrayOfDoublesBenchmark.readDslJsonJava:·gc.time                                                  128  thrpt    5        12.000                    ms
[info] ArrayOfDoublesBenchmark.readJacksonScala                                                          128  thrpt    5     58320.453 ±     652.630   ops/s
[info] ArrayOfDoublesBenchmark.readJacksonScala:·gc.alloc.rate                                           128  thrpt    5      1022.227 ±      10.913  MB/sec
[info] ArrayOfDoublesBenchmark.readJacksonScala:·gc.alloc.rate.norm                                      128  thrpt    5     27584.008 ±       0.001    B/op
[info] ArrayOfDoublesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5      1070.054 ±    1411.667  MB/sec
[info] ArrayOfDoublesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5     28877.923 ±   38133.148    B/op
[info] ArrayOfDoublesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.050 ±       0.209  MB/sec
[info] ArrayOfDoublesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         1.347 ±       5.629    B/op
[info] ArrayOfDoublesBenchmark.readJacksonScala:·gc.count                                                128  thrpt    5         8.000                counts
[info] ArrayOfDoublesBenchmark.readJacksonScala:·gc.time                                                 128  thrpt    5         7.000                    ms
[info] ArrayOfDoublesBenchmark.readJsoniterScala                                                         128  thrpt    5    116309.651 ±    1333.491   ops/s
[info] ArrayOfDoublesBenchmark.readJsoniterScala:·gc.alloc.rate                                          128  thrpt    5       782.244 ±       8.582  MB/sec
[info] ArrayOfDoublesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                     128  thrpt    5     10584.004 ±       0.001    B/op
[info] ArrayOfDoublesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5       807.904 ±    1160.701  MB/sec
[info] ArrayOfDoublesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5     10939.778 ±   15869.845    B/op
[info] ArrayOfDoublesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.046 ±       0.105  MB/sec
[info] ArrayOfDoublesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         0.619 ±       1.412    B/op
[info] ArrayOfDoublesBenchmark.readJsoniterScala:·gc.count                                               128  thrpt    5         6.000                counts
[info] ArrayOfDoublesBenchmark.readJsoniterScala:·gc.time                                                128  thrpt    5         4.000                    ms
[info] ArrayOfDoublesBenchmark.readPlayJson                                                              128  thrpt    5     34191.643 ±    1420.368   ops/s
[info] ArrayOfDoublesBenchmark.readPlayJson:·gc.alloc.rate                                               128  thrpt    5      1749.716 ±      72.603  MB/sec
[info] ArrayOfDoublesBenchmark.readPlayJson:·gc.alloc.rate.norm                                          128  thrpt    5     80536.013 ±       0.002    B/op
[info] ArrayOfDoublesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                      128  thrpt    5      1748.575 ±    1419.005  MB/sec
[info] ArrayOfDoublesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5     80420.651 ±   63924.220    B/op
[info] ArrayOfDoublesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.071 ±       0.209  MB/sec
[info] ArrayOfDoublesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         3.244 ±       9.514    B/op
[info] ArrayOfDoublesBenchmark.readPlayJson:·gc.count                                                    128  thrpt    5        13.000                counts
[info] ArrayOfDoublesBenchmark.readPlayJson:·gc.time                                                     128  thrpt    5        13.000                    ms
[info] ArrayOfDoublesBenchmark.readUPickle                                                               128  thrpt    5     53782.871 ±     978.291   ops/s
[info] ArrayOfDoublesBenchmark.readUPickle:·gc.alloc.rate                                                128  thrpt    5      1197.417 ±      21.819  MB/sec
[info] ArrayOfDoublesBenchmark.readUPickle:·gc.alloc.rate.norm                                           128  thrpt    5     35040.008 ±       0.001    B/op
[info] ArrayOfDoublesBenchmark.readUPickle:·gc.churn.PS_Eden_Space                                       128  thrpt    5      1213.832 ±    1163.162  MB/sec
[info] ArrayOfDoublesBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5     35495.235 ±   33709.199    B/op
[info] ArrayOfDoublesBenchmark.readUPickle:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.058 ±       0.207  MB/sec
[info] ArrayOfDoublesBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5         1.700 ±       6.050    B/op
[info] ArrayOfDoublesBenchmark.readUPickle:·gc.count                                                     128  thrpt    5         9.000                counts
[info] ArrayOfDoublesBenchmark.readUPickle:·gc.time                                                      128  thrpt    5         7.000                    ms
[info] ArrayOfDoublesBenchmark.writeCirce                                                                128  thrpt    5     39923.712 ±     157.185   ops/s
[info] ArrayOfDoublesBenchmark.writeCirce:·gc.alloc.rate                                                 128  thrpt    5       629.741 ±       2.392  MB/sec
[info] ArrayOfDoublesBenchmark.writeCirce:·gc.alloc.rate.norm                                            128  thrpt    5     24824.011 ±       0.002    B/op
[info] ArrayOfDoublesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                        128  thrpt    5       638.346 ±     272.670  MB/sec
[info] ArrayOfDoublesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5     25161.193 ±   10673.207    B/op
[info] ArrayOfDoublesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.383 ±       2.992  MB/sec
[info] ArrayOfDoublesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5        15.115 ±     117.914    B/op
[info] ArrayOfDoublesBenchmark.writeCirce:·gc.count                                                      128  thrpt    5         5.000                counts
[info] ArrayOfDoublesBenchmark.writeCirce:·gc.time                                                       128  thrpt    5         7.000                    ms
[info] ArrayOfDoublesBenchmark.writeJacksonScala                                                         128  thrpt    5     41560.123 ±     268.265   ops/s
[info] ArrayOfDoublesBenchmark.writeJacksonScala:·gc.alloc.rate                                          128  thrpt    5       417.851 ±       2.680  MB/sec
[info] ArrayOfDoublesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                     128  thrpt    5     15824.010 ±       0.001    B/op
[info] ArrayOfDoublesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5       440.517 ±     983.364  MB/sec
[info] ArrayOfDoublesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5     16689.334 ±   37236.015    B/op
[info] ArrayOfDoublesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.420 ±       3.592  MB/sec
[info] ArrayOfDoublesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5        15.882 ±     135.904    B/op
[info] ArrayOfDoublesBenchmark.writeJacksonScala:·gc.count                                               128  thrpt    5         4.000                counts
[info] ArrayOfDoublesBenchmark.writeJacksonScala:·gc.time                                                128  thrpt    5         9.000                    ms
[info] ArrayOfDoublesBenchmark.writeJsoniterScala                                                        128  thrpt    5     44676.861 ±     304.307   ops/s
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.alloc.rate                                         128  thrpt    5       438.311 ±       2.904  MB/sec
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                    128  thrpt    5     15440.010 ±       0.001    B/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                128  thrpt    5       473.921 ±    1066.534  MB/sec
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5     16702.351 ±   37613.033    B/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.334 ±       2.747  MB/sec
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5        11.801 ±      96.943    B/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.count                                              128  thrpt    5         4.000                counts
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.time                                               128  thrpt    5         6.000                    ms
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc                                                128  thrpt    5     44247.017 ±    3229.931   ops/s
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                 128  thrpt    5       383.529 ±      28.137  MB/sec
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                            128  thrpt    5     13640.010 ±       0.001    B/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space                        128  thrpt    5       441.631 ±     988.097  MB/sec
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5     15746.056 ±   35113.192    B/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space                    128  thrpt    5         0.322 ±       2.706  MB/sec
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5        11.378 ±      95.514    B/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.count                                      128  thrpt    5         4.000                counts
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.time                                       128  thrpt    5         9.000                    ms
[info] ArrayOfDoublesBenchmark.writeUPickle                                                              128  thrpt    5     34461.794 ±     247.649   ops/s
[info] ArrayOfDoublesBenchmark.writeUPickle:·gc.alloc.rate                                               128  thrpt    5       799.827 ±       6.316  MB/sec
[info] ArrayOfDoublesBenchmark.writeUPickle:·gc.alloc.rate.norm                                          128  thrpt    5     36520.013 ±       0.002    B/op
[info] ArrayOfDoublesBenchmark.writeUPickle:·gc.churn.PS_Eden_Space                                      128  thrpt    5       809.169 ±    1160.397  MB/sec
[info] ArrayOfDoublesBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5     36966.617 ±   53369.545    B/op
[info] ArrayOfDoublesBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.033 ±       0.134  MB/sec
[info] ArrayOfDoublesBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         1.523 ±       6.141    B/op
[info] ArrayOfDoublesBenchmark.writeUPickle:·gc.count                                                    128  thrpt    5         6.000                counts
[info] ArrayOfDoublesBenchmark.writeUPickle:·gc.time                                                     128  thrpt    5         5.000                    ms
[info] ArrayOfDurationsBenchmark.readCirce                                                               128  thrpt    5     15792.250 ±     415.390   ops/s
[info] ArrayOfDurationsBenchmark.readCirce:·gc.alloc.rate                                                128  thrpt    5      1127.675 ±      29.784  MB/sec
[info] ArrayOfDurationsBenchmark.readCirce:·gc.alloc.rate.norm                                           128  thrpt    5    112376.030 ±       0.020    B/op
[info] ArrayOfDurationsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                       128  thrpt    5      1076.325 ±    1417.865  MB/sec
[info] ArrayOfDurationsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5    107355.196 ±  142468.634    B/op
[info] ArrayOfDurationsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.033 ±       0.185  MB/sec
[info] ArrayOfDurationsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5         3.326 ±      18.380    B/op
[info] ArrayOfDurationsBenchmark.readCirce:·gc.count                                                     128  thrpt    5         8.000                counts
[info] ArrayOfDurationsBenchmark.readCirce:·gc.time                                                      128  thrpt    5         8.000                    ms
[info] ArrayOfDurationsBenchmark.readJacksonScala                                                        128  thrpt    5     16425.369 ±    1360.426   ops/s
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.alloc.rate                                         128  thrpt    5       996.459 ±      81.985  MB/sec
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                    128  thrpt    5     95477.784 ±      64.586    B/op
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                128  thrpt    5       936.110 ±    1410.092  MB/sec
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5     90027.422 ±  139637.241    B/op
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.050 ±       0.156  MB/sec
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         4.803 ±      14.910    B/op
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.count                                              128  thrpt    5         7.000                counts
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.time                                               128  thrpt    5         6.000                    ms
[info] ArrayOfDurationsBenchmark.readJsoniterScala                                                       128  thrpt    5     79429.739 ±     550.443   ops/s
[info] ArrayOfDurationsBenchmark.readJsoniterScala:·gc.alloc.rate                                        128  thrpt    5       206.731 ±       1.341  MB/sec
[info] ArrayOfDurationsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                   128  thrpt    5      4096.005 ±       0.001    B/op
[info] ArrayOfDurationsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                               128  thrpt    5       204.673 ±    1079.179  MB/sec
[info] ArrayOfDurationsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5      4061.849 ±   21416.973    B/op
[info] ArrayOfDurationsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.008 ±       0.072  MB/sec
[info] ArrayOfDurationsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         0.165 ±       1.421    B/op
[info] ArrayOfDurationsBenchmark.readJsoniterScala:·gc.count                                             128  thrpt    5         2.000                counts
[info] ArrayOfDurationsBenchmark.readJsoniterScala:·gc.time                                              128  thrpt    5         3.000                    ms
[info] ArrayOfDurationsBenchmark.readPlayJson                                                            128  thrpt    5     14197.521 ±    1005.985   ops/s
[info] ArrayOfDurationsBenchmark.readPlayJson:·gc.alloc.rate                                             128  thrpt    5      1360.473 ±      96.633  MB/sec
[info] ArrayOfDurationsBenchmark.readPlayJson:·gc.alloc.rate.norm                                        128  thrpt    5    150800.033 ±       0.018    B/op
[info] ArrayOfDurationsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1341.046 ±      10.923  MB/sec
[info] ArrayOfDurationsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5    148683.662 ±    9687.464    B/op
[info] ArrayOfDurationsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.042 ±       0.204  MB/sec
[info] ArrayOfDurationsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         4.632 ±      22.954    B/op
[info] ArrayOfDurationsBenchmark.readPlayJson:·gc.count                                                  128  thrpt    5        10.000                counts
[info] ArrayOfDurationsBenchmark.readPlayJson:·gc.time                                                   128  thrpt    5         9.000                    ms
[info] ArrayOfDurationsBenchmark.readUPickle                                                             128  thrpt    5     13979.564 ±     699.759   ops/s
[info] ArrayOfDurationsBenchmark.readUPickle:·gc.alloc.rate                                              128  thrpt    5       978.995 ±      49.872  MB/sec
[info] ArrayOfDurationsBenchmark.readUPickle:·gc.alloc.rate.norm                                         128  thrpt    5    110206.178 ±      49.766    B/op
[info] ArrayOfDurationsBenchmark.readUPickle:·gc.churn.PS_Eden_Space                                     128  thrpt    5       943.090 ±    1420.488  MB/sec
[info] ArrayOfDurationsBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5    106039.469 ±  158040.229    B/op
[info] ArrayOfDurationsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.029 ±       0.108  MB/sec
[info] ArrayOfDurationsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         3.286 ±      12.145    B/op
[info] ArrayOfDurationsBenchmark.readUPickle:·gc.count                                                   128  thrpt    5         7.000                counts
[info] ArrayOfDurationsBenchmark.readUPickle:·gc.time                                                    128  thrpt    5         6.000                    ms
[info] ArrayOfDurationsBenchmark.writeCirce                                                              128  thrpt    5     56784.686 ±    1549.228   ops/s
[info] ArrayOfDurationsBenchmark.writeCirce:·gc.alloc.rate                                               128  thrpt    5      1407.815 ±      38.226  MB/sec
[info] ArrayOfDurationsBenchmark.writeCirce:·gc.alloc.rate.norm                                          128  thrpt    5     39016.008 ±       0.001    B/op
[info] ArrayOfDurationsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                      128  thrpt    5      1344.654 ±       8.868  MB/sec
[info] ArrayOfDurationsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5     37267.129 ±    1091.661    B/op
[info] ArrayOfDurationsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.046 ±       0.164  MB/sec
[info] ArrayOfDurationsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         1.270 ±       4.546    B/op
[info] ArrayOfDurationsBenchmark.writeCirce:·gc.count                                                    128  thrpt    5        10.000                counts
[info] ArrayOfDurationsBenchmark.writeCirce:·gc.time                                                     128  thrpt    5         8.000                    ms
[info] ArrayOfDurationsBenchmark.writeJacksonScala                                                       128  thrpt    5     77503.758 ±    1780.550   ops/s
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.alloc.rate                                        128  thrpt    5      1173.585 ±      26.961  MB/sec
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                   128  thrpt    5     23832.006 ±       0.001    B/op
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                               128  thrpt    5      1204.775 ±    1152.989  MB/sec
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5     24472.279 ±   23501.007    B/op
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.054 ±       0.146  MB/sec
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         1.100 ±       2.953    B/op
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.count                                             128  thrpt    5         9.000                counts
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.time                                              128  thrpt    5         9.000                    ms
[info] ArrayOfDurationsBenchmark.writeJsoniterScala                                                      128  thrpt    5    214919.279 ±    5307.320   ops/s
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.alloc.rate                                       128  thrpt    5       340.856 ±       8.462  MB/sec
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                  128  thrpt    5      2496.002 ±       0.001    B/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                              128  thrpt    5       306.982 ±    1079.085  MB/sec
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5      2247.179 ±    7899.263    B/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.006 ±       0.054  MB/sec
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         0.046 ±       0.393    B/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.count                                            128  thrpt    5         3.000                counts
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.time                                             128  thrpt    5         6.000                    ms
[info] ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc                                              128  thrpt    5    232015.233 ±    6733.340   ops/s
[info] ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                               128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                          128  thrpt    5         0.002 ±       0.001    B/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                    128  thrpt    5           ≈ 0                counts
[info] ArrayOfDurationsBenchmark.writePlayJson                                                           128  thrpt    5     69270.054 ±    4587.253   ops/s
[info] ArrayOfDurationsBenchmark.writePlayJson:·gc.alloc.rate                                            128  thrpt    5      1307.885 ±      86.331  MB/sec
[info] ArrayOfDurationsBenchmark.writePlayJson:·gc.alloc.rate.norm                                       128  thrpt    5     29712.006 ±       0.001    B/op
[info] ArrayOfDurationsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                   128  thrpt    5      1208.500 ±    1156.766  MB/sec
[info] ArrayOfDurationsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5     27400.264 ±   25556.535    B/op
[info] ArrayOfDurationsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.042 ±       0.150  MB/sec
[info] ArrayOfDurationsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         0.947 ±       3.446    B/op
[info] ArrayOfDurationsBenchmark.writePlayJson:·gc.count                                                 128  thrpt    5         9.000                counts
[info] ArrayOfDurationsBenchmark.writePlayJson:·gc.time                                                  128  thrpt    5         8.000                    ms
[info] ArrayOfDurationsBenchmark.writeUPickle                                                            128  thrpt    5     17638.982 ±     132.571   ops/s
[info] ArrayOfDurationsBenchmark.writeUPickle:·gc.alloc.rate                                             128  thrpt    5       612.945 ±       4.774  MB/sec
[info] ArrayOfDurationsBenchmark.writeUPickle:·gc.alloc.rate.norm                                        128  thrpt    5     54687.749 ±       2.390    B/op
[info] ArrayOfDurationsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space                                    128  thrpt    5       641.247 ±     279.081  MB/sec
[info] ArrayOfDurationsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5     57209.302 ±   24768.803    B/op
[info] ArrayOfDurationsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.337 ±       2.638  MB/sec
[info] ArrayOfDurationsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5        30.009 ±     234.620    B/op
[info] ArrayOfDurationsBenchmark.writeUPickle:·gc.count                                                  128  thrpt    5         5.000                counts
[info] ArrayOfDurationsBenchmark.writeUPickle:·gc.time                                                   128  thrpt    5         7.000                    ms
[info] ArrayOfEnumsBenchmark.readCirce                                                                   128  thrpt    5     27224.775 ±     381.945   ops/s
[info] ArrayOfEnumsBenchmark.readCirce:·gc.alloc.rate                                                    128  thrpt    5       605.231 ±       8.600  MB/sec
[info] ArrayOfEnumsBenchmark.readCirce:·gc.alloc.rate.norm                                               128  thrpt    5     34984.016 ±       0.002    B/op
[info] ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                           128  thrpt    5       637.845 ±     271.759  MB/sec
[info] ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                      128  thrpt    5     36860.406 ±   15370.501    B/op
[info] ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                       128  thrpt    5         0.379 ±       3.044  MB/sec
[info] ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                  128  thrpt    5        21.984 ±     176.470    B/op
[info] ArrayOfEnumsBenchmark.readCirce:·gc.count                                                         128  thrpt    5         5.000                counts
[info] ArrayOfEnumsBenchmark.readCirce:·gc.time                                                          128  thrpt    5         8.000                    ms
[info] ArrayOfEnumsBenchmark.readJacksonScala                                                            128  thrpt    5     88495.598 ±    3385.601   ops/s
[info] ArrayOfEnumsBenchmark.readJacksonScala:·gc.alloc.rate                                             128  thrpt    5      1219.189 ±      46.472  MB/sec
[info] ArrayOfEnumsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                        128  thrpt    5     21680.005 ±       0.001    B/op
[info] ArrayOfEnumsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1338.514 ±      10.081  MB/sec
[info] ArrayOfEnumsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5     23803.765 ±     937.546    B/op
[info] ArrayOfEnumsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.054 ±       0.156  MB/sec
[info] ArrayOfEnumsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         0.964 ±       2.801    B/op
[info] ArrayOfEnumsBenchmark.readJacksonScala:·gc.count                                                  128  thrpt    5        10.000                counts
[info] ArrayOfEnumsBenchmark.readJacksonScala:·gc.time                                                   128  thrpt    5         9.000                    ms
[info] ArrayOfEnumsBenchmark.readJsoniterScala                                                           128  thrpt    5    125716.134 ±     905.692   ops/s
[info] ArrayOfEnumsBenchmark.readJsoniterScala:·gc.alloc.rate                                            128  thrpt    5       490.810 ±       3.556  MB/sec
[info] ArrayOfEnumsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                       128  thrpt    5      6144.003 ±       0.001    B/op
[info] ArrayOfEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5       473.943 ±    1066.485  MB/sec
[info] ArrayOfEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5      5936.036 ±   13352.997    B/op
[info] ArrayOfEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.340 ±       2.748  MB/sec
[info] ArrayOfEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         4.256 ±      34.421    B/op
[info] ArrayOfEnumsBenchmark.readJsoniterScala:·gc.count                                                 128  thrpt    5         4.000                counts
[info] ArrayOfEnumsBenchmark.readJsoniterScala:·gc.time                                                  128  thrpt    5         7.000                    ms
[info] ArrayOfEnumsBenchmark.readPlayJson                                                                128  thrpt    5     22611.226 ±     111.944   ops/s
[info] ArrayOfEnumsBenchmark.readPlayJson:·gc.alloc.rate                                                 128  thrpt    5      1263.589 ±       6.079  MB/sec
[info] ArrayOfEnumsBenchmark.readPlayJson:·gc.alloc.rate.norm                                            128  thrpt    5     87944.067 ±       0.407    B/op
[info] ArrayOfEnumsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                        128  thrpt    5      1336.501 ±      11.386  MB/sec
[info] ArrayOfEnumsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5     93018.688 ±     849.326    B/op
[info] ArrayOfEnumsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.029 ±       0.091  MB/sec
[info] ArrayOfEnumsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5         2.028 ±       6.353    B/op
[info] ArrayOfEnumsBenchmark.readPlayJson:·gc.count                                                      128  thrpt    5        10.000                counts
[info] ArrayOfEnumsBenchmark.readPlayJson:·gc.time                                                       128  thrpt    5        11.000                    ms
[info] ArrayOfEnumsBenchmark.readUPickle                                                                 128  thrpt    5     24513.632 ±     126.904   ops/s
[info] ArrayOfEnumsBenchmark.readUPickle:·gc.alloc.rate                                                  128  thrpt    5       563.692 ±       2.755  MB/sec
[info] ArrayOfEnumsBenchmark.readUPickle:·gc.alloc.rate.norm                                             128  thrpt    5     36184.018 ±       0.004    B/op
[info] ArrayOfEnumsBenchmark.readUPickle:·gc.churn.PS_Eden_Space                                         128  thrpt    5       506.205 ±    1122.356  MB/sec
[info] ArrayOfEnumsBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5     32504.980 ±   72045.072    B/op
[info] ArrayOfEnumsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space                                     128  thrpt    5         0.347 ±       2.812  MB/sec
[info] ArrayOfEnumsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5        22.285 ±     180.597    B/op
[info] ArrayOfEnumsBenchmark.readUPickle:·gc.count                                                       128  thrpt    5         4.000                counts
[info] ArrayOfEnumsBenchmark.readUPickle:·gc.time                                                        128  thrpt    5         6.000                    ms
[info] ArrayOfEnumsBenchmark.writeCirce                                                                  128  thrpt    5    176741.042 ±    1169.213   ops/s
[info] ArrayOfEnumsBenchmark.writeCirce:·gc.alloc.rate                                                   128  thrpt    5      1159.012 ±       8.164  MB/sec
[info] ArrayOfEnumsBenchmark.writeCirce:·gc.alloc.rate.norm                                              128  thrpt    5     10320.002 ±       0.001    B/op
[info] ArrayOfEnumsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                          128  thrpt    5      1208.052 ±    1155.976  MB/sec
[info] ArrayOfEnumsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                     128  thrpt    5     10758.670 ±   10318.651    B/op
[info] ArrayOfEnumsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                      128  thrpt    5         0.062 ±       0.139  MB/sec
[info] ArrayOfEnumsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5         0.556 ±       1.237    B/op
[info] ArrayOfEnumsBenchmark.writeCirce:·gc.count                                                        128  thrpt    5         9.000                counts
[info] ArrayOfEnumsBenchmark.writeCirce:·gc.time                                                         128  thrpt    5         8.000                    ms
[info] ArrayOfEnumsBenchmark.writeJacksonScala                                                           128  thrpt    5    554262.947 ±    5615.469   ops/s
[info] ArrayOfEnumsBenchmark.writeJacksonScala:·gc.alloc.rate                                            128  thrpt    5       560.703 ±       5.730  MB/sec
[info] ArrayOfEnumsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                       128  thrpt    5      1592.001 ±       0.001    B/op
[info] ArrayOfEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5       502.966 ±    1113.464  MB/sec
[info] ArrayOfEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5      1429.299 ±    3163.854    B/op
[info] ArrayOfEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.438 ±       3.567  MB/sec
[info] ArrayOfEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         1.247 ±      10.165    B/op
[info] ArrayOfEnumsBenchmark.writeJacksonScala:·gc.count                                                 128  thrpt    5         4.000                counts
[info] ArrayOfEnumsBenchmark.writeJacksonScala:·gc.time                                                  128  thrpt    5         8.000                    ms
[info] ArrayOfEnumsBenchmark.writeJsoniterScala                                                          128  thrpt    5    589275.748 ±    7981.778   ops/s
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.alloc.rate                                           128  thrpt    5       452.322 ±       6.016  MB/sec
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                      128  thrpt    5      1208.001 ±       0.001    B/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5       473.941 ±    1066.554  MB/sec
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5      1267.229 ±    2852.752    B/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.329 ±       2.704  MB/sec
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         0.884 ±       7.258    B/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.count                                                128  thrpt    5         4.000                counts
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.time                                                 128  thrpt    5         7.000                    ms
[info] ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc                                                  128  thrpt    5    603910.783 ±    1341.162   ops/s
[info] ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                   128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                              128  thrpt    5         0.001 ±       0.001    B/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                        128  thrpt    5           ≈ 0                counts
[info] ArrayOfEnumsBenchmark.writePlayJson                                                               128  thrpt    5    335906.302 ±   13851.292   ops/s
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.alloc.rate                                                128  thrpt    5       928.973 ±      38.738  MB/sec
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.alloc.rate.norm                                           128  thrpt    5      4352.002 ±       0.004    B/op
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                       128  thrpt    5       934.111 ±    1405.304  MB/sec
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5      4382.604 ±    6673.353    B/op
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.029 ±       0.156  MB/sec
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5         0.137 ±       0.733    B/op
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.count                                                     128  thrpt    5         7.000                counts
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.time                                                      128  thrpt    5         7.000                    ms
[info] ArrayOfEnumsBenchmark.writeUPickle                                                                128  thrpt    5     41307.258 ±     866.888   ops/s
[info] ArrayOfEnumsBenchmark.writeUPickle:·gc.alloc.rate                                                 128  thrpt    5       439.274 ±       9.252  MB/sec
[info] ArrayOfEnumsBenchmark.writeUPickle:·gc.alloc.rate.norm                                            128  thrpt    5     16736.011 ±       0.001    B/op
[info] ArrayOfEnumsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space                                        128  thrpt    5       473.885 ±    1066.412  MB/sec
[info] ArrayOfEnumsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5     18065.040 ±   40621.726    B/op
[info] ArrayOfEnumsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.344 ±       2.806  MB/sec
[info] ArrayOfEnumsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5        13.049 ±     106.427    B/op
[info] ArrayOfEnumsBenchmark.writeUPickle:·gc.count                                                      128  thrpt    5         4.000                counts
[info] ArrayOfEnumsBenchmark.writeUPickle:·gc.time                                                       128  thrpt    5         7.000                    ms
[info] ArrayOfFloatsBenchmark.readCirce                                                                  128  thrpt    5     36418.153 ±    1299.531   ops/s
[info] ArrayOfFloatsBenchmark.readCirce:·gc.alloc.rate                                                   128  thrpt    5      1716.878 ±      61.555  MB/sec
[info] ArrayOfFloatsBenchmark.readCirce:·gc.alloc.rate.norm                                              128  thrpt    5     74184.012 ±       0.002    B/op
[info] ArrayOfFloatsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                          128  thrpt    5      1754.748 ±    1423.149  MB/sec
[info] ArrayOfFloatsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                     128  thrpt    5     75891.898 ±   62942.043    B/op
[info] ArrayOfFloatsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                      128  thrpt    5         0.054 ±       0.166  MB/sec
[info] ArrayOfFloatsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5         2.346 ±       7.207    B/op
[info] ArrayOfFloatsBenchmark.readCirce:·gc.count                                                        128  thrpt    5        13.000                counts
[info] ArrayOfFloatsBenchmark.readCirce:·gc.time                                                         128  thrpt    5        12.000                    ms
[info] ArrayOfFloatsBenchmark.readDslJsonJava                                                            128  thrpt    5    288922.016 ±    1454.859   ops/s
[info] ArrayOfFloatsBenchmark.readDslJsonJava:·gc.alloc.rate                                             128  thrpt    5       299.649 ±       1.382  MB/sec
[info] ArrayOfFloatsBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                        128  thrpt    5      1632.002 ±       0.001    B/op
[info] ArrayOfFloatsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                                    128  thrpt    5       307.049 ±    1079.319  MB/sec
[info] ArrayOfFloatsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5      1673.606 ±    5882.963    B/op
[info] ArrayOfFloatsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.007 ±       0.059  MB/sec
[info] ArrayOfFloatsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         0.037 ±       0.323    B/op
[info] ArrayOfFloatsBenchmark.readDslJsonJava:·gc.count                                                  128  thrpt    5         3.000                counts
[info] ArrayOfFloatsBenchmark.readDslJsonJava:·gc.time                                                   128  thrpt    5         7.000                    ms
[info] ArrayOfFloatsBenchmark.readJacksonScala                                                           128  thrpt    5     95875.946 ±    5618.424   ops/s
[info] ArrayOfFloatsBenchmark.readJacksonScala:·gc.alloc.rate                                            128  thrpt    5      1119.013 ±      65.613  MB/sec
[info] ArrayOfFloatsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                       128  thrpt    5     18368.005 ±       0.001    B/op
[info] ArrayOfFloatsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5      1070.487 ±    1410.032  MB/sec
[info] ArrayOfFloatsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5     17597.860 ±   23464.604    B/op
[info] ArrayOfFloatsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.025 ±       0.132  MB/sec
[info] ArrayOfFloatsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         0.414 ±       2.183    B/op
[info] ArrayOfFloatsBenchmark.readJacksonScala:·gc.count                                                 128  thrpt    5         8.000                counts
[info] ArrayOfFloatsBenchmark.readJacksonScala:·gc.time                                                  128  thrpt    5         7.000                    ms
[info] ArrayOfFloatsBenchmark.readJsoniterScala                                                          128  thrpt    5    392433.294 ±   11809.240   ops/s
[info] ArrayOfFloatsBenchmark.readJsoniterScala:·gc.alloc.rate                                           128  thrpt    5       255.335 ±       7.730  MB/sec
[info] ArrayOfFloatsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                      128  thrpt    5      1024.001 ±       0.001    B/op
[info] ArrayOfFloatsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5       306.958 ±    1079.001  MB/sec
[info] ArrayOfFloatsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5      1233.763 ±    4337.053    B/op
[info] ArrayOfFloatsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.008 ±       0.044  MB/sec
[info] ArrayOfFloatsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         0.033 ±       0.176    B/op
[info] ArrayOfFloatsBenchmark.readJsoniterScala:·gc.count                                                128  thrpt    5         3.000                counts
[info] ArrayOfFloatsBenchmark.readJsoniterScala:·gc.time                                                 128  thrpt    5         5.000                    ms
[info] ArrayOfFloatsBenchmark.readPlayJson                                                               128  thrpt    5     39368.416 ±     901.691   ops/s
[info] ArrayOfFloatsBenchmark.readPlayJson:·gc.alloc.rate                                                128  thrpt    5      2064.392 ±      47.860  MB/sec
[info] ArrayOfFloatsBenchmark.readPlayJson:·gc.alloc.rate.norm                                           128  thrpt    5     82504.011 ±       0.002    B/op
[info] ArrayOfFloatsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                       128  thrpt    5      2021.887 ±      24.836  MB/sec
[info] ArrayOfFloatsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5     80808.440 ±    2621.898    B/op
[info] ArrayOfFloatsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.046 ±       0.119  MB/sec
[info] ArrayOfFloatsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5         1.828 ±       4.756    B/op
[info] ArrayOfFloatsBenchmark.readPlayJson:·gc.count                                                     128  thrpt    5        15.000                counts
[info] ArrayOfFloatsBenchmark.readPlayJson:·gc.time                                                      128  thrpt    5        14.000                    ms
[info] ArrayOfFloatsBenchmark.readUPickle                                                                128  thrpt    5     58575.859 ±    3552.434   ops/s
[info] ArrayOfFloatsBenchmark.readUPickle:·gc.alloc.rate                                                 128  thrpt    5      1299.438 ±      78.989  MB/sec
[info] ArrayOfFloatsBenchmark.readUPickle:·gc.alloc.rate.norm                                            128  thrpt    5     34912.007 ±       0.001    B/op
[info] ArrayOfFloatsBenchmark.readUPickle:·gc.churn.PS_Eden_Space                                        128  thrpt    5      1348.760 ±       6.574  MB/sec
[info] ArrayOfFloatsBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5     36244.140 ±    2135.584    B/op
[info] ArrayOfFloatsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.067 ±       0.067  MB/sec
[info] ArrayOfFloatsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5         1.794 ±       1.883    B/op
[info] ArrayOfFloatsBenchmark.readUPickle:·gc.count                                                      128  thrpt    5        10.000                counts
[info] ArrayOfFloatsBenchmark.readUPickle:·gc.time                                                       128  thrpt    5         8.000                    ms
[info] ArrayOfFloatsBenchmark.writeCirce                                                                 128  thrpt    5     86867.654 ±    3739.613   ops/s
[info] ArrayOfFloatsBenchmark.writeCirce:·gc.alloc.rate                                                  128  thrpt    5       694.157 ±      29.967  MB/sec
[info] ArrayOfFloatsBenchmark.writeCirce:·gc.alloc.rate.norm                                             128  thrpt    5     12576.005 ±       0.001    B/op
[info] ArrayOfFloatsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                         128  thrpt    5       670.367 ±       0.546  MB/sec
[info] ArrayOfFloatsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5     12146.252 ±     537.664    B/op
[info] ArrayOfFloatsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                     128  thrpt    5         0.377 ±       3.025  MB/sec
[info] ArrayOfFloatsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5         6.964 ±      55.935    B/op
[info] ArrayOfFloatsBenchmark.writeCirce:·gc.count                                                       128  thrpt    5         5.000                counts
[info] ArrayOfFloatsBenchmark.writeCirce:·gc.time                                                        128  thrpt    5         6.000                    ms
[info] ArrayOfFloatsBenchmark.writeDslJsonJava                                                           128  thrpt    5    110861.044 ±    1947.057   ops/s
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.alloc.rate                                            128  thrpt    5       410.235 ±       7.206  MB/sec
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                       128  thrpt    5      5824.004 ±       0.001    B/op
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                                   128  thrpt    5       337.402 ±    1209.915  MB/sec
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5      4799.417 ±   17200.889    B/op
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.008 ±       0.061  MB/sec
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         0.116 ±       0.870    B/op
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.count                                                 128  thrpt    5         3.000                counts
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.time                                                  128  thrpt    5         7.000                    ms
[info] ArrayOfFloatsBenchmark.writeJacksonScala                                                          128  thrpt    5     97629.756 ±    2904.856   ops/s
[info] ArrayOfFloatsBenchmark.writeJacksonScala:·gc.alloc.rate                                           128  thrpt    5       385.117 ±      11.316  MB/sec
[info] ArrayOfFloatsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                      128  thrpt    5      6208.004 ±       0.001    B/op
[info] ArrayOfFloatsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5       440.542 ±     983.383  MB/sec
[info] ArrayOfFloatsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5      7118.268 ±   15897.658    B/op
[info] ArrayOfFloatsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.422 ±       3.534  MB/sec
[info] ArrayOfFloatsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         6.825 ±      57.157    B/op
[info] ArrayOfFloatsBenchmark.writeJacksonScala:·gc.count                                                128  thrpt    5         4.000                counts
[info] ArrayOfFloatsBenchmark.writeJacksonScala:·gc.time                                                 128  thrpt    5         9.000                    ms
[info] ArrayOfFloatsBenchmark.writeJsoniterScala                                                         128  thrpt    5    113487.391 ±     631.879   ops/s
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.alloc.rate                                          128  thrpt    5       419.990 ±       2.499  MB/sec
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                     128  thrpt    5      5824.004 ±       0.001    B/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5       339.382 ±    1219.855  MB/sec
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5      4703.982 ±   16902.497    B/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.330 ±       2.724  MB/sec
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         4.573 ±      37.715    B/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.count                                               128  thrpt    5         3.000                counts
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.time                                                128  thrpt    5         6.000                    ms
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc                                                 128  thrpt    5    112513.410 ±    5960.083   ops/s
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                  128  thrpt    5       327.720 ±      17.256  MB/sec
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                             128  thrpt    5      4584.004 ±       0.001    B/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space                         128  thrpt    5       306.989 ±    1079.109  MB/sec
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5      4322.953 ±   15198.310    B/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.009 ±       0.054  MB/sec
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5         0.131 ±       0.758    B/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                       128  thrpt    5         3.000                counts
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.time                                        128  thrpt    5         6.000                    ms
[info] ArrayOfInstantsBenchmark.readCirce                                                                128  thrpt    5      9563.167 ±     259.255   ops/s
[info] ArrayOfInstantsBenchmark.readCirce:·gc.alloc.rate                                                 128  thrpt    5      1587.883 ±      42.686  MB/sec
[info] ArrayOfInstantsBenchmark.readCirce:·gc.alloc.rate.norm                                            128  thrpt    5    261299.196 ±      27.662    B/op
[info] ArrayOfInstantsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                        128  thrpt    5      1618.181 ±    1426.524  MB/sec
[info] ArrayOfInstantsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5    266180.649 ±  232205.694    B/op
[info] ArrayOfInstantsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.021 ±       0.057  MB/sec
[info] ArrayOfInstantsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5         3.437 ±       9.446    B/op
[info] ArrayOfInstantsBenchmark.readCirce:·gc.count                                                      128  thrpt    5        12.000                counts
[info] ArrayOfInstantsBenchmark.readCirce:·gc.time                                                       128  thrpt    5        10.000                    ms
[info] ArrayOfInstantsBenchmark.readJacksonScala                                                         128  thrpt    5      9739.201 ±     291.806   ops/s
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.alloc.rate                                          128  thrpt    5      1500.731 ±      43.892  MB/sec
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                     128  thrpt    5    242476.813 ±      60.178    B/op
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5      1609.664 ±    1413.475  MB/sec
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5    260145.997 ±  229827.565    B/op
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.025 ±       0.105  MB/sec
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         4.025 ±      16.792    B/op
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.count                                               128  thrpt    5        12.000                counts
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.time                                                128  thrpt    5        12.000                    ms
[info] ArrayOfInstantsBenchmark.readJsoniterScala                                                        128  thrpt    5    210717.684 ±    2777.511   ops/s
[info] ArrayOfInstantsBenchmark.readJsoniterScala:·gc.alloc.rate                                         128  thrpt    5       548.412 ±       7.340  MB/sec
[info] ArrayOfInstantsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                    128  thrpt    5      4096.002 ±       0.001    B/op
[info] ArrayOfInstantsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                128  thrpt    5       506.418 ±    1123.037  MB/sec
[info] ArrayOfInstantsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5      3783.622 ±    8381.487    B/op
[info] ArrayOfInstantsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.323 ±       2.603  MB/sec
[info] ArrayOfInstantsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         2.414 ±      19.475    B/op
[info] ArrayOfInstantsBenchmark.readJsoniterScala:·gc.count                                              128  thrpt    5         4.000                counts
[info] ArrayOfInstantsBenchmark.readJsoniterScala:·gc.time                                               128  thrpt    5         6.000                    ms
[info] ArrayOfInstantsBenchmark.readPlayJson                                                             128  thrpt    5      5594.570 ±     170.192   ops/s
[info] ArrayOfInstantsBenchmark.readPlayJson:·gc.alloc.rate                                              128  thrpt    5      1489.827 ±      46.003  MB/sec
[info] ArrayOfInstantsBenchmark.readPlayJson:·gc.alloc.rate.norm                                         128  thrpt    5    419032.077 ±       0.002    B/op
[info] ArrayOfInstantsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                     128  thrpt    5      1476.626 ±    1149.268  MB/sec
[info] ArrayOfInstantsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5    415532.370 ±  329220.493    B/op
[info] ArrayOfInstantsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.037 ±       0.154  MB/sec
[info] ArrayOfInstantsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5        10.583 ±      43.650    B/op
[info] ArrayOfInstantsBenchmark.readPlayJson:·gc.count                                                   128  thrpt    5        11.000                counts
[info] ArrayOfInstantsBenchmark.readPlayJson:·gc.time                                                    128  thrpt    5        10.000                    ms
[info] ArrayOfInstantsBenchmark.readUPickle                                                              128  thrpt    5      9242.654 ±     703.342   ops/s
[info] ArrayOfInstantsBenchmark.readUPickle:·gc.alloc.rate                                               128  thrpt    5      1510.953 ±     114.922  MB/sec
[info] ArrayOfInstantsBenchmark.readUPickle:·gc.alloc.rate.norm                                          128  thrpt    5    257262.684 ±      49.400    B/op
[info] ArrayOfInstantsBenchmark.readUPickle:·gc.churn.PS_Eden_Space                                      128  thrpt    5      1484.555 ±    1165.589  MB/sec
[info] ArrayOfInstantsBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5    253166.905 ±  208700.050    B/op
[info] ArrayOfInstantsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.050 ±       0.257  MB/sec
[info] ArrayOfInstantsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         8.473 ±      43.155    B/op
[info] ArrayOfInstantsBenchmark.readUPickle:·gc.count                                                    128  thrpt    5        11.000                counts
[info] ArrayOfInstantsBenchmark.readUPickle:·gc.time                                                     128  thrpt    5         9.000                    ms
[info] ArrayOfInstantsBenchmark.writeCirce                                                               128  thrpt    5     25006.007 ±     454.104   ops/s
[info] ArrayOfInstantsBenchmark.writeCirce:·gc.alloc.rate                                                128  thrpt    5      1841.383 ±      33.283  MB/sec
[info] ArrayOfInstantsBenchmark.writeCirce:·gc.alloc.rate.norm                                           128  thrpt    5    115896.018 ±       0.003    B/op
[info] ArrayOfInstantsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                       128  thrpt    5      1752.495 ±    1418.326  MB/sec
[info] ArrayOfInstantsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5    110355.967 ±   90402.093    B/op
[info] ArrayOfInstantsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.062 ±       0.127  MB/sec
[info] ArrayOfInstantsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5         3.935 ±       8.004    B/op
[info] ArrayOfInstantsBenchmark.writeCirce:·gc.count                                                     128  thrpt    5        13.000                counts
[info] ArrayOfInstantsBenchmark.writeCirce:·gc.time                                                      128  thrpt    5        11.000                    ms
[info] ArrayOfInstantsBenchmark.writeJacksonScala                                                        128  thrpt    5     29423.764 ±     983.446   ops/s
[info] ArrayOfInstantsBenchmark.writeJacksonScala:·gc.alloc.rate                                         128  thrpt    5      1820.274 ±      60.851  MB/sec
[info] ArrayOfInstantsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                    128  thrpt    5     97360.015 ±       0.002    B/op
[info] ArrayOfInstantsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                128  thrpt    5      1882.621 ±    1151.918  MB/sec
[info] ArrayOfInstantsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5    100771.019 ±   63367.233    B/op
[info] ArrayOfInstantsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.079 ±       0.067  MB/sec
[info] ArrayOfInstantsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         4.231 ±       3.575    B/op
[info] ArrayOfInstantsBenchmark.writeJacksonScala:·gc.count                                              128  thrpt    5        14.000                counts
[info] ArrayOfInstantsBenchmark.writeJacksonScala:·gc.time                                               128  thrpt    5        17.000                    ms
[info] ArrayOfInstantsBenchmark.writeJsoniterScala                                                       128  thrpt    5    367456.601 ±   27261.018   ops/s
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.alloc.rate                                        128  thrpt    5       812.537 ±      60.100  MB/sec
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                   128  thrpt    5      3480.001 ±       0.001    B/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                               128  thrpt    5       808.245 ±    1160.012  MB/sec
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5      3455.238 ±    4830.204    B/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.029 ±       0.166  MB/sec
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         0.124 ±       0.703    B/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.count                                             128  thrpt    5         6.000                counts
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.time                                              128  thrpt    5         6.000                    ms
[info] ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc                                               128  thrpt    5    418782.470 ±     349.265   ops/s
[info] ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                           128  thrpt    5         0.001 ±       0.001    B/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                     128  thrpt    5           ≈ 0                counts
[info] ArrayOfInstantsBenchmark.writePlayJson                                                            128  thrpt    5     29520.113 ±     532.295   ops/s
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.alloc.rate                                             128  thrpt    5      1936.895 ±      36.101  MB/sec
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.alloc.rate.norm                                        128  thrpt    5    103240.015 ±       0.002    B/op
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1887.791 ±    1171.969  MB/sec
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5    100652.420 ±   63152.686    B/op
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.046 ±       0.174  MB/sec
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         2.444 ±       9.265    B/op
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.count                                                  128  thrpt    5        14.000                counts
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.time                                                   128  thrpt    5        12.000                    ms
[info] ArrayOfInstantsBenchmark.writeUPickle                                                             128  thrpt    5     10335.925 ±      53.315   ops/s
[info] ArrayOfInstantsBenchmark.writeUPickle:·gc.alloc.rate                                              128  thrpt    5       864.055 ±       4.489  MB/sec
[info] ArrayOfInstantsBenchmark.writeUPickle:·gc.alloc.rate.norm                                         128  thrpt    5    131562.815 ±      40.570    B/op
[info] ArrayOfInstantsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space                                     128  thrpt    5       942.966 ±    1420.759  MB/sec
[info] ArrayOfInstantsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5    143621.008 ±  216930.661    B/op
[info] ArrayOfInstantsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.037 ±       0.143  MB/sec
[info] ArrayOfInstantsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         5.708 ±      21.847    B/op
[info] ArrayOfInstantsBenchmark.writeUPickle:·gc.count                                                   128  thrpt    5         7.000                counts
[info] ArrayOfInstantsBenchmark.writeUPickle:·gc.time                                                    128  thrpt    5         6.000                    ms
[info] ArrayOfIntsBenchmark.readCirce                                                                    128  thrpt    5     95256.188 ±    1300.116   ops/s
[info] ArrayOfIntsBenchmark.readCirce:·gc.alloc.rate                                                     128  thrpt    5      1641.975 ±      22.768  MB/sec
[info] ArrayOfIntsBenchmark.readCirce:·gc.alloc.rate.norm                                                128  thrpt    5     27128.005 ±       0.001    B/op
[info] ArrayOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                            128  thrpt    5      1619.164 ±    1426.134  MB/sec
[info] ArrayOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                       128  thrpt    5     26756.528 ±   23681.063    B/op
[info] ArrayOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                        128  thrpt    5         0.058 ±       0.174  MB/sec
[info] ArrayOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                   128  thrpt    5         0.965 ±       2.880    B/op
[info] ArrayOfIntsBenchmark.readCirce:·gc.count                                                          128  thrpt    5        12.000                counts
[info] ArrayOfIntsBenchmark.readCirce:·gc.time                                                           128  thrpt    5         9.000                    ms
[info] ArrayOfIntsBenchmark.readDslJsonJava                                                              128  thrpt    5    428322.093 ±    3400.028   ops/s
[info] ArrayOfIntsBenchmark.readDslJsonJava:·gc.alloc.rate                                               128  thrpt    5       444.197 ±       3.731  MB/sec
[info] ArrayOfIntsBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                          128  thrpt    5      1632.001 ±       0.001    B/op
[info] ArrayOfIntsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                                      128  thrpt    5       470.184 ±    1053.657  MB/sec
[info] ArrayOfIntsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5      1728.610 ±    3875.389    B/op
[info] ArrayOfIntsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.007 ±       0.059  MB/sec
[info] ArrayOfIntsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         0.025 ±       0.217    B/op
[info] ArrayOfIntsBenchmark.readDslJsonJava:·gc.count                                                    128  thrpt    5         4.000                counts
[info] ArrayOfIntsBenchmark.readDslJsonJava:·gc.time                                                     128  thrpt    5         9.000                    ms
[info] ArrayOfIntsBenchmark.readJacksonScala                                                             128  thrpt    5    308200.168 ±    9248.096   ops/s
[info] ArrayOfIntsBenchmark.readJacksonScala:·gc.alloc.rate                                              128  thrpt    5       435.512 ±      13.069  MB/sec
[info] ArrayOfIntsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                         128  thrpt    5      2224.001 ±       0.001    B/op
[info] ArrayOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                     128  thrpt    5       338.206 ±    1213.934  MB/sec
[info] ArrayOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5      1722.949 ±    6182.569    B/op
[info] ArrayOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.429 ±       3.661  MB/sec
[info] ArrayOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         2.185 ±      18.632    B/op
[info] ArrayOfIntsBenchmark.readJacksonScala:·gc.count                                                   128  thrpt    5         3.000                counts
[info] ArrayOfIntsBenchmark.readJacksonScala:·gc.time                                                    128  thrpt    5         8.000                    ms
[info] ArrayOfIntsBenchmark.readJsoniterScala                                                            128  thrpt    5    705747.714 ±    3412.994   ops/s
[info] ArrayOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate                                             128  thrpt    5       459.199 ±       2.135  MB/sec
[info] ArrayOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                        128  thrpt    5      1024.001 ±       0.001    B/op
[info] ArrayOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5       474.043 ±    1066.900  MB/sec
[info] ArrayOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5      1057.527 ±    2379.326    B/op
[info] ArrayOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.321 ±       2.652  MB/sec
[info] ArrayOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         0.716 ±       5.913    B/op
[info] ArrayOfIntsBenchmark.readJsoniterScala:·gc.count                                                  128  thrpt    5         4.000                counts
[info] ArrayOfIntsBenchmark.readJsoniterScala:·gc.time                                                   128  thrpt    5         7.000                    ms
[info] ArrayOfIntsBenchmark.readPlayJson                                                                 128  thrpt    5     73013.919 ±     198.097   ops/s
[info] ArrayOfIntsBenchmark.readPlayJson:·gc.alloc.rate                                                  128  thrpt    5      3101.484 ±       8.360  MB/sec
[info] ArrayOfIntsBenchmark.readPlayJson:·gc.alloc.rate.norm                                             128  thrpt    5     66856.006 ±       0.001    B/op
[info] ArrayOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                         128  thrpt    5      3117.504 ±    1421.199  MB/sec
[info] ArrayOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5     67203.142 ±   30704.965    B/op
[info] ArrayOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                     128  thrpt    5         0.071 ±       0.091  MB/sec
[info] ArrayOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5         1.526 ±       1.970    B/op
[info] ArrayOfIntsBenchmark.readPlayJson:·gc.count                                                       128  thrpt    5        23.000                counts
[info] ArrayOfIntsBenchmark.readPlayJson:·gc.time                                                        128  thrpt    5        21.000                    ms
[info] ArrayOfIntsBenchmark.readUPickle                                                                  128  thrpt    5    129211.881 ±    5223.963   ops/s
[info] ArrayOfIntsBenchmark.readUPickle:·gc.alloc.rate                                                   128  thrpt    5      1451.682 ±      57.843  MB/sec
[info] ArrayOfIntsBenchmark.readUPickle:·gc.alloc.rate.norm                                              128  thrpt    5     17680.003 ±       0.001    B/op
[info] ArrayOfIntsBenchmark.readUPickle:·gc.churn.PS_Eden_Space                                          128  thrpt    5      1349.893 ±       6.912  MB/sec
[info] ArrayOfIntsBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm                                     128  thrpt    5     16441.678 ±     641.074    B/op
[info] ArrayOfIntsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space                                      128  thrpt    5         0.058 ±       0.143  MB/sec
[info] ArrayOfIntsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5         0.712 ±       1.757    B/op
[info] ArrayOfIntsBenchmark.readUPickle:·gc.count                                                        128  thrpt    5        10.000                counts
[info] ArrayOfIntsBenchmark.readUPickle:·gc.time                                                         128  thrpt    5         8.000                    ms
[info] ArrayOfIntsBenchmark.writeCirce                                                                   128  thrpt    5    211827.858 ±    7092.927   ops/s
[info] ArrayOfIntsBenchmark.writeCirce:·gc.alloc.rate                                                    128  thrpt    5      1721.692 ±      57.749  MB/sec
[info] ArrayOfIntsBenchmark.writeCirce:·gc.alloc.rate.norm                                               128  thrpt    5     12792.002 ±       0.001    B/op
[info] ArrayOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                           128  thrpt    5      1751.464 ±    1412.068  MB/sec
[info] ArrayOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                      128  thrpt    5     13018.875 ±   10603.788    B/op
[info] ArrayOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                       128  thrpt    5         0.050 ±       0.134  MB/sec
[info] ArrayOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                  128  thrpt    5         0.370 ±       0.984    B/op
[info] ArrayOfIntsBenchmark.writeCirce:·gc.count                                                         128  thrpt    5        13.000                counts
[info] ArrayOfIntsBenchmark.writeCirce:·gc.time                                                          128  thrpt    5        11.000                    ms
[info] ArrayOfIntsBenchmark.writeDslJsonJava                                                             128  thrpt    5    944988.803 ±   15357.304   ops/s
[info] ArrayOfIntsBenchmark.writeDslJsonJava:·gc.alloc.rate                                              128  thrpt    5       514.012 ±       8.404  MB/sec
[info] ArrayOfIntsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                         128  thrpt    5       856.000 ±       0.001    B/op
[info] ArrayOfIntsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                                     128  thrpt    5       500.921 ±    1107.893  MB/sec
[info] ArrayOfIntsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5       835.117 ±    1844.969    B/op
[info] ArrayOfIntsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.008 ±       0.067  MB/sec
[info] ArrayOfIntsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         0.013 ±       0.112    B/op
[info] ArrayOfIntsBenchmark.writeDslJsonJava:·gc.count                                                   128  thrpt    5         4.000                counts
[info] ArrayOfIntsBenchmark.writeDslJsonJava:·gc.time                                                    128  thrpt    5         9.000                    ms
[info] ArrayOfIntsBenchmark.writeJacksonScala                                                            128  thrpt    5    836940.173 ±    6253.678   ops/s
[info] ArrayOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate                                             128  thrpt    5       659.483 ±       4.695  MB/sec
[info] ArrayOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                        128  thrpt    5      1240.001 ±       0.001    B/op
[info] ArrayOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5       668.166 ±       1.291  MB/sec
[info] ArrayOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5      1256.330 ±       9.187    B/op
[info] ArrayOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.431 ±       3.580  MB/sec
[info] ArrayOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         0.812 ±       6.739    B/op
[info] ArrayOfIntsBenchmark.writeJacksonScala:·gc.count                                                  128  thrpt    5         5.000                counts
[info] ArrayOfIntsBenchmark.writeJacksonScala:·gc.time                                                   128  thrpt    5         6.000                    ms
[info] ArrayOfIntsBenchmark.writeJsoniterScala                                                           128  thrpt    5   1013237.059 ±   39458.233   ops/s
[info] ArrayOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate                                            128  thrpt    5       551.185 ±      21.676  MB/sec
[info] ArrayOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                       128  thrpt    5       856.000 ±       0.001    B/op
[info] ArrayOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5       506.199 ±    1122.365  MB/sec
[info] ArrayOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5       788.275 ±    1751.438    B/op
[info] ArrayOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.327 ±       2.640  MB/sec
[info] ArrayOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         0.513 ±       4.140    B/op
[info] ArrayOfIntsBenchmark.writeJsoniterScala:·gc.count                                                 128  thrpt    5         4.000                counts
[info] ArrayOfIntsBenchmark.writeJsoniterScala:·gc.time                                                  128  thrpt    5         6.000                    ms
[info] ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc                                                   128  thrpt    5   1000662.178 ±    1558.641   ops/s
[info] ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                    128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                               128  thrpt    5        ≈ 10⁻³                  B/op
[info] ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                         128  thrpt    5           ≈ 0                counts
[info] ArrayOfIntsBenchmark.writePlayJson                                                                128  thrpt    5     27354.316 ±    1074.724   ops/s
[info] ArrayOfIntsBenchmark.writePlayJson:·gc.alloc.rate                                                 128  thrpt    5      1764.694 ±      69.609  MB/sec
[info] ArrayOfIntsBenchmark.writePlayJson:·gc.alloc.rate.norm                                            128  thrpt    5    101512.016 ±       0.003    B/op
[info] ArrayOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                        128  thrpt    5      1885.426 ±    1159.387  MB/sec
[info] ArrayOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5    108504.853 ±   67744.603    B/op
[info] ArrayOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.067 ±       0.132  MB/sec
[info] ArrayOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5         3.823 ±       7.468    B/op
[info] ArrayOfIntsBenchmark.writePlayJson:·gc.count                                                      128  thrpt    5        14.000                counts
[info] ArrayOfIntsBenchmark.writePlayJson:·gc.time                                                       128  thrpt    5        12.000                    ms
[info] ArrayOfIntsBenchmark.writeUPickle                                                                 128  thrpt    5    107199.041 ±    1194.773   ops/s
[info] ArrayOfIntsBenchmark.writeUPickle:·gc.alloc.rate                                                  128  thrpt    5      1574.877 ±      17.755  MB/sec
[info] ArrayOfIntsBenchmark.writeUPickle:·gc.alloc.rate.norm                                             128  thrpt    5     23120.004 ±       0.001    B/op
[info] ArrayOfIntsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space                                         128  thrpt    5      1486.026 ±    1162.098  MB/sec
[info] ArrayOfIntsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5     21812.993 ±   16978.283    B/op
[info] ArrayOfIntsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space                                     128  thrpt    5         0.042 ±       0.150  MB/sec
[info] ArrayOfIntsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5         0.610 ±       2.198    B/op
[info] ArrayOfIntsBenchmark.writeUPickle:·gc.count                                                       128  thrpt    5        11.000                counts
[info] ArrayOfIntsBenchmark.writeUPickle:·gc.time                                                        128  thrpt    5        10.000                    ms
[info] ArrayOfJavaEnumsBenchmark.readCirce                                                               128  thrpt    5    123112.415 ±    2994.332   ops/s
[info] ArrayOfJavaEnumsBenchmark.readCirce:·gc.alloc.rate                                                128  thrpt    5      1695.514 ±      42.641  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readCirce:·gc.alloc.rate.norm                                           128  thrpt    5     21672.004 ±       0.001    B/op
[info] ArrayOfJavaEnumsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                       128  thrpt    5      1751.265 ±    1419.897  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5     22386.622 ±   18187.609    B/op
[info] ArrayOfJavaEnumsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.058 ±       0.154  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5         0.743 ±       1.956    B/op
[info] ArrayOfJavaEnumsBenchmark.readCirce:·gc.count                                                     128  thrpt    5        13.000                counts
[info] ArrayOfJavaEnumsBenchmark.readCirce:·gc.time                                                      128  thrpt    5        12.000                    ms
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala                                                        128  thrpt    5    195222.577 ±   11816.758   ops/s
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.alloc.rate                                         128  thrpt    5      1165.063 ±      70.581  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                    128  thrpt    5      9392.002 ±       0.001    B/op
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                128  thrpt    5      1203.807 ±    1154.403  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5      9683.654 ±    9026.223    B/op
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.058 ±       0.154  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         0.469 ±       1.246    B/op
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.count                                              128  thrpt    5         9.000                counts
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.time                                               128  thrpt    5         9.000                    ms
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala                                                       128  thrpt    5    269772.488 ±    6160.666   ops/s
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.alloc.rate                                        128  thrpt    5       877.703 ±      20.220  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                   128  thrpt    5      5120.002 ±       0.001    B/op
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                               128  thrpt    5       942.423 ±    1420.271  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5      5495.087 ±    8249.002    B/op
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.050 ±       0.244  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         0.291 ±       1.423    B/op
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.count                                             128  thrpt    5         7.000                counts
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.time                                              128  thrpt    5         6.000                    ms
[info] ArrayOfJavaEnumsBenchmark.readPlayJson                                                            128  thrpt    5     68247.476 ±    2070.965   ops/s
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.alloc.rate                                             128  thrpt    5      2836.580 ±      84.978  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.alloc.rate.norm                                        128  thrpt    5     65408.006 ±       0.001    B/op
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                    128  thrpt    5      2840.014 ±    1168.829  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5     65503.770 ±   27693.720    B/op
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.037 ±       0.067  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         0.862 ±       1.524    B/op
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.count                                                  128  thrpt    5        21.000                counts
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.time                                                   128  thrpt    5        21.000                    ms
[info] ArrayOfJavaEnumsBenchmark.readUPickle                                                             128  thrpt    5    107743.558 ±    3974.165   ops/s
[info] ArrayOfJavaEnumsBenchmark.readUPickle:·gc.alloc.rate                                              128  thrpt    5      1636.123 ±      59.552  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readUPickle:·gc.alloc.rate.norm                                         128  thrpt    5     23896.004 ±       0.001    B/op
[info] ArrayOfJavaEnumsBenchmark.readUPickle:·gc.churn.PS_Eden_Space                                     128  thrpt    5      1620.647 ±    1423.811  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5     23658.668 ±   20515.731    B/op
[info] ArrayOfJavaEnumsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.058 ±       0.154  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         0.847 ±       2.236    B/op
[info] ArrayOfJavaEnumsBenchmark.readUPickle:·gc.count                                                   128  thrpt    5        12.000                counts
[info] ArrayOfJavaEnumsBenchmark.readUPickle:·gc.time                                                    128  thrpt    5        10.000                    ms
[info] ArrayOfJavaEnumsBenchmark.writeCirce                                                              128  thrpt    5    168633.627 ±    1656.293   ops/s
[info] ArrayOfJavaEnumsBenchmark.writeCirce:·gc.alloc.rate                                               128  thrpt    5      1103.203 ±      10.956  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeCirce:·gc.alloc.rate.norm                                          128  thrpt    5     10296.003 ±       0.001    B/op
[info] ArrayOfJavaEnumsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                      128  thrpt    5      1073.761 ±    1414.041  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5     10024.739 ±   13240.197    B/op
[info] ArrayOfJavaEnumsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.042 ±       0.160  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         0.389 ±       1.495    B/op
[info] ArrayOfJavaEnumsBenchmark.writeCirce:·gc.count                                                    128  thrpt    5         8.000                counts
[info] ArrayOfJavaEnumsBenchmark.writeCirce:·gc.time                                                     128  thrpt    5         7.000                    ms
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala                                                       128  thrpt    5    578886.204 ±   20118.506   ops/s
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.alloc.rate                                        128  thrpt    5       585.647 ±      20.388  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                   128  thrpt    5      1592.001 ±       0.001    B/op
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                               128  thrpt    5       502.762 ±    1112.976  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5      1368.092 ±    3019.468    B/op
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.446 ±       3.663  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         1.217 ±      10.001    B/op
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.count                                             128  thrpt    5         4.000                counts
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.time                                              128  thrpt    5         7.000                    ms
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala                                                      128  thrpt    5    573542.489 ±   11412.011   ops/s
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.alloc.rate                                       128  thrpt    5       440.231 ±       8.749  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                  128  thrpt    5      1208.001 ±       0.001    B/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                              128  thrpt    5       473.916 ±    1066.447  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5      1303.004 ±    2932.021    B/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.331 ±       2.721  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         0.912 ±       7.484    B/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.count                                            128  thrpt    5         4.000                counts
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.time                                             128  thrpt    5         7.000                    ms
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc                                              128  thrpt    5    589972.503 ±     692.116   ops/s
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                               128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                          128  thrpt    5         0.001 ±       0.001    B/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                    128  thrpt    5           ≈ 0                counts
[info] ArrayOfJavaEnumsBenchmark.writePlayJson                                                           128  thrpt    5    345461.197 ±   11875.602   ops/s
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.alloc.rate                                            128  thrpt    5       951.770 ±      32.614  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.alloc.rate.norm                                       128  thrpt    5      4336.001 ±       0.001    B/op
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                   128  thrpt    5       934.286 ±    1408.476  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5      4263.837 ±    6518.991    B/op
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.017 ±       0.067  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         0.076 ±       0.305    B/op
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.count                                                 128  thrpt    5         7.000                counts
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.time                                                  128  thrpt    5         8.000                    ms
[info] ArrayOfJavaEnumsBenchmark.writeUPickle                                                            128  thrpt    5     42440.827 ±     518.087   ops/s
[info] ArrayOfJavaEnumsBenchmark.writeUPickle:·gc.alloc.rate                                             128  thrpt    5       451.313 ±       5.501  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeUPickle:·gc.alloc.rate.norm                                        128  thrpt    5     16736.010 ±       0.001    B/op
[info] ArrayOfJavaEnumsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space                                    128  thrpt    5       474.012 ±    1066.862  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5     17595.522 ±   39566.591    B/op
[info] ArrayOfJavaEnumsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.348 ±       2.842  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5        12.916 ±     105.463    B/op
[info] ArrayOfJavaEnumsBenchmark.writeUPickle:·gc.count                                                  128  thrpt    5         4.000                counts
[info] ArrayOfJavaEnumsBenchmark.writeUPickle:·gc.time                                                   128  thrpt    5         8.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.readCirce                                                          128  thrpt    5      9238.422 ±     282.176   ops/s
[info] ArrayOfLocalDateTimesBenchmark.readCirce:·gc.alloc.rate                                           128  thrpt    5      1210.541 ±      36.636  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readCirce:·gc.alloc.rate.norm                                      128  thrpt    5    206184.048 ±       0.007    B/op
[info] ArrayOfLocalDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space                                  128  thrpt    5      1211.678 ±    1161.579  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5    206549.555 ±  200026.856    B/op
[info] ArrayOfLocalDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.021 ±       0.057  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         3.546 ±       9.606    B/op
[info] ArrayOfLocalDateTimesBenchmark.readCirce:·gc.count                                                128  thrpt    5         9.000                counts
[info] ArrayOfLocalDateTimesBenchmark.readCirce:·gc.time                                                 128  thrpt    5         8.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala                                                   128  thrpt    5      9807.461 ±     128.987   ops/s
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.alloc.rate                                    128  thrpt    5      1175.386 ±      15.331  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm                               128  thrpt    5    188613.337 ±      58.590    B/op
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                           128  thrpt    5      1204.486 ±    1153.097  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5    193341.125 ±  185783.197    B/op
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.050 ±       0.209  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         8.017 ±      33.471    B/op
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.count                                         128  thrpt    5         9.000                counts
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.time                                          128  thrpt    5         9.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala                                                  128  thrpt    5    217017.401 ±   22375.530   ops/s
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate                                   128  thrpt    5      1412.397 ±     145.814  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                              128  thrpt    5     10240.002 ±       0.001    B/op
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                          128  thrpt    5      1484.920 ±    1162.027  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5     10781.457 ±    8774.646    B/op
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                      128  thrpt    5         0.042 ±       0.127  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5         0.305 ±       0.940    B/op
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.count                                        128  thrpt    5        11.000                counts
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.time                                         128  thrpt    5        10.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson                                                       128  thrpt    5      7393.609 ±     282.247   ops/s
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.alloc.rate                                        128  thrpt    5      1376.958 ±      53.029  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.alloc.rate.norm                                   128  thrpt    5    293080.094 ±       0.301    B/op
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                               128  thrpt    5      1475.582 ±    1143.929  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5    314268.569 ±  248952.823    B/op
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.025 ±       0.067  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         5.342 ±      14.359    B/op
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.count                                             128  thrpt    5        11.000                counts
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.time                                              128  thrpt    5        11.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.readUPickle                                                        128  thrpt    5      9396.872 ±     409.270   ops/s
[info] ArrayOfLocalDateTimesBenchmark.readUPickle:·gc.alloc.rate                                         128  thrpt    5      1214.317 ±      52.912  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readUPickle:·gc.alloc.rate.norm                                    128  thrpt    5    203367.605 ±      45.204    B/op
[info] ArrayOfLocalDateTimesBenchmark.readUPickle:·gc.churn.PS_Eden_Space                                128  thrpt    5      1213.260 ±    1162.054  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5    203384.635 ±  197086.662    B/op
[info] ArrayOfLocalDateTimesBenchmark.readUPickle:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.037 ±       0.174  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         6.257 ±      29.049    B/op
[info] ArrayOfLocalDateTimesBenchmark.readUPickle:·gc.count                                              128  thrpt    5         9.000                counts
[info] ArrayOfLocalDateTimesBenchmark.readUPickle:·gc.time                                               128  thrpt    5         9.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.writeCirce                                                         128  thrpt    5     20267.101 ±     867.483   ops/s
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.alloc.rate                                          128  thrpt    5      1076.436 ±      45.216  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.alloc.rate.norm                                     128  thrpt    5     83585.298 ±      79.870    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                 128  thrpt    5      1073.792 ±    1417.828  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5     83265.665 ±  108626.185    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.025 ±       0.132  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         1.929 ±      10.180    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.count                                               128  thrpt    5         8.000                counts
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.time                                                128  thrpt    5         7.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala                                                  128  thrpt    5     22430.045 ±     537.283   ops/s
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate                                   128  thrpt    5       950.653 ±      22.814  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                              128  thrpt    5     66696.019 ±       0.001    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                          128  thrpt    5       936.090 ±    1410.960  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5     65774.955 ±  100386.165    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                      128  thrpt    5         0.012 ±       0.072  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5         0.877 ±       5.036    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.count                                        128  thrpt    5         7.000                counts
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.time                                         128  thrpt    5         6.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala                                                 128  thrpt    5    719497.235 ±   22502.532   ops/s
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate                                  128  thrpt    5      1298.531 ±      39.789  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                             128  thrpt    5      2840.001 ±       0.001    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                         128  thrpt    5      1214.012 ±    1163.005  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5      2651.785 ±    2499.176    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.067 ±       0.154  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5         0.145 ±       0.338    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.count                                       128  thrpt    5         9.000                counts
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.time                                        128  thrpt    5         8.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc                                         128  thrpt    5    644665.254 ±    2385.744   ops/s
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                          128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                     128  thrpt    5         0.001 ±       0.001    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count                               128  thrpt    5           ≈ 0                counts
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson                                                      128  thrpt    5     21846.588 ±     468.279   ops/s
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.alloc.rate                                       128  thrpt    5      1007.348 ±      21.664  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.alloc.rate.norm                                  128  thrpt    5     72561.026 ±       8.662    B/op
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                              128  thrpt    5      1072.029 ±    1413.498  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5     77318.544 ±  103013.165    B/op
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.012 ±       0.044  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         0.902 ±       3.171    B/op
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.count                                            128  thrpt    5         8.000                counts
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.time                                             128  thrpt    5         8.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.writeUPickle                                                       128  thrpt    5     13851.282 ±     435.204   ops/s
[info] ArrayOfLocalDateTimesBenchmark.writeUPickle:·gc.alloc.rate                                        128  thrpt    5       855.447 ±      26.842  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeUPickle:·gc.alloc.rate.norm                                   128  thrpt    5     97200.034 ±       0.018    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeUPickle:·gc.churn.PS_Eden_Space                               128  thrpt    5       942.886 ±    1420.644  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5    107298.003 ±  163682.424    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.042 ±       0.188  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         4.722 ±      21.249    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeUPickle:·gc.count                                             128  thrpt    5         7.000                counts
[info] ArrayOfLocalDateTimesBenchmark.writeUPickle:·gc.time                                              128  thrpt    5         6.000                    ms
[info] ArrayOfLocalDatesBenchmark.readCirce                                                              128  thrpt    5     23705.922 ±     595.257   ops/s
[info] ArrayOfLocalDatesBenchmark.readCirce:·gc.alloc.rate                                               128  thrpt    5      1327.780 ±      32.630  MB/sec
[info] ArrayOfLocalDatesBenchmark.readCirce:·gc.alloc.rate.norm                                          128  thrpt    5     88144.018 ±       0.002    B/op
[info] ArrayOfLocalDatesBenchmark.readCirce:·gc.churn.PS_Eden_Space                                      128  thrpt    5      1346.515 ±       6.907  MB/sec
[info] ArrayOfLocalDatesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5     89390.260 ±    1936.056    B/op
[info] ArrayOfLocalDatesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.025 ±       0.105  MB/sec
[info] ArrayOfLocalDatesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         1.664 ±       6.995    B/op
[info] ArrayOfLocalDatesBenchmark.readCirce:·gc.count                                                    128  thrpt    5        10.000                counts
[info] ArrayOfLocalDatesBenchmark.readCirce:·gc.time                                                     128  thrpt    5         9.000                    ms
[info] ArrayOfLocalDatesBenchmark.readJacksonScala                                                       128  thrpt    5     26300.028 ±     937.346   ops/s
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.alloc.rate                                        128  thrpt    5      1217.978 ±      43.071  MB/sec
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.alloc.rate.norm                                   128  thrpt    5     72880.017 ±       0.002    B/op
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                               128  thrpt    5      1339.102 ±       9.622  MB/sec
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5     80132.055 ±    2275.740    B/op
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.058 ±       0.208  MB/sec
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         3.511 ±      12.558    B/op
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.count                                             128  thrpt    5        10.000                counts
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.time                                              128  thrpt    5         9.000                    ms
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala                                                      128  thrpt    5    401932.043 ±   14189.944   ops/s
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.alloc.rate                                       128  thrpt    5      1046.177 ±      36.933  MB/sec
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                  128  thrpt    5      4096.001 ±       0.001    B/op
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                              128  thrpt    5       943.357 ±    1420.703  MB/sec
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5      3688.013 ±    5483.502    B/op
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.037 ±       0.143  MB/sec
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         0.147 ±       0.559    B/op
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.count                                            128  thrpt    5         7.000                counts
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.time                                             128  thrpt    5         6.000                    ms
[info] ArrayOfLocalDatesBenchmark.readPlayJson                                                           128  thrpt    5     15975.253 ±     679.112   ops/s
[info] ArrayOfLocalDatesBenchmark.readPlayJson:·gc.alloc.rate                                            128  thrpt    5      1634.272 ±      70.052  MB/sec
[info] ArrayOfLocalDatesBenchmark.readPlayJson:·gc.alloc.rate.norm                                       128  thrpt    5    160984.029 ±       0.017    B/op
[info] ArrayOfLocalDatesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                   128  thrpt    5      1612.499 ±    1412.807  MB/sec
[info] ArrayOfLocalDatesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5    158798.356 ±  138040.700    B/op
[info] ArrayOfLocalDatesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.042 ±       0.080  MB/sec
[info] ArrayOfLocalDatesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         4.085 ±       7.723    B/op
[info] ArrayOfLocalDatesBenchmark.readPlayJson:·gc.count                                                 128  thrpt    5        12.000                counts
[info] ArrayOfLocalDatesBenchmark.readPlayJson:·gc.time                                                  128  thrpt    5        13.000                    ms
[info] ArrayOfLocalDatesBenchmark.readUPickle                                                            128  thrpt    5     22168.473 ±     881.469   ops/s
[info] ArrayOfLocalDatesBenchmark.readUPickle:·gc.alloc.rate                                             128  thrpt    5      1232.728 ±      49.053  MB/sec
[info] ArrayOfLocalDatesBenchmark.readUPickle:·gc.alloc.rate.norm                                        128  thrpt    5     87512.724 ±       6.060    B/op
[info] ArrayOfLocalDatesBenchmark.readUPickle:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1213.396 ±    1160.589  MB/sec
[info] ArrayOfLocalDatesBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5     86211.301 ±   83297.627    B/op
[info] ArrayOfLocalDatesBenchmark.readUPickle:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.042 ±       0.160  MB/sec
[info] ArrayOfLocalDatesBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         2.942 ±      11.226    B/op
[info] ArrayOfLocalDatesBenchmark.readUPickle:·gc.count                                                  128  thrpt    5         9.000                counts
[info] ArrayOfLocalDatesBenchmark.readUPickle:·gc.time                                                   128  thrpt    5         8.000                    ms
[info] ArrayOfLocalDatesBenchmark.writeCirce                                                             128  thrpt    5     44747.440 ±    1497.120   ops/s
[info] ArrayOfLocalDatesBenchmark.writeCirce:·gc.alloc.rate                                              128  thrpt    5      1422.731 ±      47.556  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeCirce:·gc.alloc.rate.norm                                         128  thrpt    5     50040.010 ±       0.001    B/op
[info] ArrayOfLocalDatesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                     128  thrpt    5      1479.430 ±    1162.151  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5     52000.165 ±   39782.089    B/op
[info] ArrayOfLocalDatesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.033 ±       0.122  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         1.169 ±       4.252    B/op
[info] ArrayOfLocalDatesBenchmark.writeCirce:·gc.count                                                   128  thrpt    5        11.000                counts
[info] ArrayOfLocalDatesBenchmark.writeCirce:·gc.time                                                    128  thrpt    5        10.000                    ms
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala                                                      128  thrpt    5    127128.995 ±    1451.491   ops/s
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.alloc.rate                                       128  thrpt    5      1242.893 ±      14.220  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                  128  thrpt    5     15384.003 ±       0.001    B/op
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                              128  thrpt    5      1205.616 ±    1155.340  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5     14925.269 ±   14334.396    B/op
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.042 ±       0.150  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         0.515 ±       1.855    B/op
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.count                                            128  thrpt    5         9.000                counts
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.time                                             128  thrpt    5         9.000                    ms
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala                                                     128  thrpt    5   1172150.820 ±   33522.693   ops/s
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.alloc.rate                                      128  thrpt    5      1257.184 ±      35.867  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                 128  thrpt    5      1688.000 ±       0.001    B/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                             128  thrpt    5      1348.565 ±       6.901  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5      1810.790 ±      60.606    B/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.071 ±       0.072  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         0.095 ±       0.095    B/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.count                                           128  thrpt    5        10.000                counts
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.time                                            128  thrpt    5         9.000                    ms
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc                                             128  thrpt    5    856519.950 ±   17454.052   ops/s
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                              128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                         128  thrpt    5         0.001 ±       0.001    B/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:·gc.count                                   128  thrpt    5           ≈ 0                counts
[info] ArrayOfLocalDatesBenchmark.writePlayJson                                                          128  thrpt    5     51621.282 ±     912.731   ops/s
[info] ArrayOfLocalDatesBenchmark.writePlayJson:·gc.alloc.rate                                           128  thrpt    5      1367.938 ±      24.121  MB/sec
[info] ArrayOfLocalDatesBenchmark.writePlayJson:·gc.alloc.rate.norm                                      128  thrpt    5     41704.008 ±       0.001    B/op
[info] ArrayOfLocalDatesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                  128  thrpt    5      1343.126 ±      10.430  MB/sec
[info] ArrayOfLocalDatesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5     40948.151 ±     684.162    B/op
[info] ArrayOfLocalDatesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.029 ±       0.134  MB/sec
[info] ArrayOfLocalDatesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         0.892 ±       4.120    B/op
[info] ArrayOfLocalDatesBenchmark.writePlayJson:·gc.count                                                128  thrpt    5        10.000                counts
[info] ArrayOfLocalDatesBenchmark.writePlayJson:·gc.time                                                 128  thrpt    5         8.000                    ms
[info] ArrayOfLocalDatesBenchmark.writeUPickle                                                           128  thrpt    5     26763.674 ±     156.484   ops/s
[info] ArrayOfLocalDatesBenchmark.writeUPickle:·gc.alloc.rate                                            128  thrpt    5       612.268 ±       3.552  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeUPickle:·gc.alloc.rate.norm                                       128  thrpt    5     36000.016 ±       0.002    B/op
[info] ArrayOfLocalDatesBenchmark.writeUPickle:·gc.churn.PS_Eden_Space                                   128  thrpt    5       641.296 ±     279.045  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5     37704.309 ±   16316.231    B/op
[info] ArrayOfLocalDatesBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.333 ±       2.693  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5        19.606 ±     158.485    B/op
[info] ArrayOfLocalDatesBenchmark.writeUPickle:·gc.count                                                 128  thrpt    5         5.000                counts
[info] ArrayOfLocalDatesBenchmark.writeUPickle:·gc.time                                                  128  thrpt    5         7.000                    ms
[info] ArrayOfLocalTimesBenchmark.readCirce                                                              128  thrpt    5     15086.027 ±     439.393   ops/s
[info] ArrayOfLocalTimesBenchmark.readCirce:·gc.alloc.rate                                               128  thrpt    5      1370.279 ±      39.968  MB/sec
[info] ArrayOfLocalTimesBenchmark.readCirce:·gc.alloc.rate.norm                                          128  thrpt    5    142952.031 ±       0.018    B/op
[info] ArrayOfLocalTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space                                      128  thrpt    5      1347.014 ±       7.651  MB/sec
[info] ArrayOfLocalTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5    140531.621 ±    4284.881    B/op
[info] ArrayOfLocalTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.033 ±       0.146  MB/sec
[info] ArrayOfLocalTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         3.465 ±      15.101    B/op
[info] ArrayOfLocalTimesBenchmark.readCirce:·gc.count                                                    128  thrpt    5        10.000                counts
[info] ArrayOfLocalTimesBenchmark.readCirce:·gc.time                                                     128  thrpt    5         8.000                    ms
[info] ArrayOfLocalTimesBenchmark.readJacksonScala                                                       128  thrpt    5     16019.288 ±     564.339   ops/s
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.alloc.rate                                        128  thrpt    5      1304.977 ±      45.481  MB/sec
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm                                   128  thrpt    5    128190.609 ±      62.823    B/op
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                               128  thrpt    5      1339.924 ±      11.321  MB/sec
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5    131631.207 ±    4226.113    B/op
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.042 ±       0.098  MB/sec
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         4.078 ±       9.586    B/op
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.count                                             128  thrpt    5        10.000                counts
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.time                                              128  thrpt    5        10.000                    ms
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala                                                      128  thrpt    5    449146.130 ±   24205.723   ops/s
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.alloc.rate                                       128  thrpt    5      1169.034 ±      62.253  MB/sec
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                  128  thrpt    5      4096.001 ±       0.001    B/op
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                              128  thrpt    5      1078.651 ±    1421.805  MB/sec
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5      3780.787 ±    4997.509    B/op
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.017 ±       0.105  MB/sec
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         0.058 ±       0.363    B/op
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.count                                            128  thrpt    5         8.000                counts
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.time                                             128  thrpt    5         7.000                    ms
[info] ArrayOfLocalTimesBenchmark.readPlayJson                                                           128  thrpt    5     11411.298 ±     245.144   ops/s
[info] ArrayOfLocalTimesBenchmark.readPlayJson:·gc.alloc.rate                                            128  thrpt    5      1568.273 ±      33.783  MB/sec
[info] ArrayOfLocalTimesBenchmark.readPlayJson:·gc.alloc.rate.norm                                       128  thrpt    5    216280.556 ±       4.424    B/op
[info] ArrayOfLocalTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                   128  thrpt    5      1477.526 ±    1156.524  MB/sec
[info] ArrayOfLocalTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5    203723.758 ±  158125.293    B/op
[info] ArrayOfLocalTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.046 ±       0.143  MB/sec
[info] ArrayOfLocalTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         6.338 ±      20.003    B/op
[info] ArrayOfLocalTimesBenchmark.readPlayJson:·gc.count                                                 128  thrpt    5        11.000                counts
[info] ArrayOfLocalTimesBenchmark.readPlayJson:·gc.time                                                  128  thrpt    5        11.000                    ms
[info] ArrayOfLocalTimesBenchmark.readUPickle                                                            128  thrpt    5     14691.430 ±     404.666   ops/s
[info] ArrayOfLocalTimesBenchmark.readUPickle:·gc.alloc.rate                                             128  thrpt    5      1284.950 ±      36.434  MB/sec
[info] ArrayOfLocalTimesBenchmark.readUPickle:·gc.alloc.rate.norm                                        128  thrpt    5    137636.760 ±      46.633    B/op
[info] ArrayOfLocalTimesBenchmark.readUPickle:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1348.427 ±       4.666  MB/sec
[info] ArrayOfLocalTimesBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5    144442.939 ±    4508.794    B/op
[info] ArrayOfLocalTimesBenchmark.readUPickle:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.062 ±       0.170  MB/sec
[info] ArrayOfLocalTimesBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         6.685 ±      18.147    B/op
[info] ArrayOfLocalTimesBenchmark.readUPickle:·gc.count                                                  128  thrpt    5        10.000                counts
[info] ArrayOfLocalTimesBenchmark.readUPickle:·gc.time                                                   128  thrpt    5         9.000                    ms
[info] ArrayOfLocalTimesBenchmark.writeCirce                                                             128  thrpt    5     35016.423 ±     709.079   ops/s
[info] ArrayOfLocalTimesBenchmark.writeCirce:·gc.alloc.rate                                              128  thrpt    5      1329.923 ±      26.607  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeCirce:·gc.alloc.rate.norm                                         128  thrpt    5     59768.012 ±       0.001    B/op
[info] ArrayOfLocalTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                     128  thrpt    5      1343.843 ±       9.454  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5     60395.302 ±    1605.201    B/op
[info] ArrayOfLocalTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.067 ±       0.132  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         2.993 ±       5.919    B/op
[info] ArrayOfLocalTimesBenchmark.writeCirce:·gc.count                                                   128  thrpt    5        10.000                counts
[info] ArrayOfLocalTimesBenchmark.writeCirce:·gc.time                                                    128  thrpt    5         8.000                    ms
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala                                                      128  thrpt    5     47153.404 ±    2384.225   ops/s
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.alloc.rate                                       128  thrpt    5      1404.499 ±      71.562  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                  128  thrpt    5     46872.009 ±       0.001    B/op
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                              128  thrpt    5      1341.072 ±      12.404  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5     44760.479 ±    1899.010    B/op
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.058 ±       0.143  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         1.947 ±       4.814    B/op
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.count                                            128  thrpt    5        10.000                counts
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.time                                             128  thrpt    5         9.000                    ms
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala                                                     128  thrpt    5   1287735.709 ±   54400.409   ops/s
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.alloc.rate                                      128  thrpt    5      1171.924 ±      49.544  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                 128  thrpt    5      1432.000 ±       0.001    B/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                             128  thrpt    5      1078.680 ±    1421.303  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5      1316.235 ±    1713.112    B/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.033 ±       0.176  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         0.041 ±       0.214    B/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.count                                           128  thrpt    5         8.000                counts
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.time                                            128  thrpt    5         7.000                    ms
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc                                             128  thrpt    5   1253228.635 ±    3359.131   ops/s
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                              128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                         128  thrpt    5        ≈ 10⁻³                  B/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count                                   128  thrpt    5           ≈ 0                counts
[info] ArrayOfLocalTimesBenchmark.writePlayJson                                                          128  thrpt    5      3558.195 ±     129.067   ops/s
[info] ArrayOfLocalTimesBenchmark.writePlayJson:·gc.alloc.rate                                           128  thrpt    5       480.453 ±      17.373  MB/sec
[info] ArrayOfLocalTimesBenchmark.writePlayJson:·gc.alloc.rate.norm                                      128  thrpt    5    212496.123 ±       0.018    B/op
[info] ArrayOfLocalTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                  128  thrpt    5       472.521 ±    1061.780  MB/sec
[info] ArrayOfLocalTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5    209588.444 ±  470526.732    B/op
[info] ArrayOfLocalTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.419 ±       3.472  MB/sec
[info] ArrayOfLocalTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5       186.919 ±    1550.489    B/op
[info] ArrayOfLocalTimesBenchmark.writePlayJson:·gc.count                                                128  thrpt    5         4.000                counts
[info] ArrayOfLocalTimesBenchmark.writePlayJson:·gc.time                                                 128  thrpt    5         8.000                    ms
[info] ArrayOfLocalTimesBenchmark.writeUPickle                                                           128  thrpt    5     29867.424 ±    1193.784   ops/s
[info] ArrayOfLocalTimesBenchmark.writeUPickle:·gc.alloc.rate                                            128  thrpt    5       673.483 ±      26.847  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeUPickle:·gc.alloc.rate.norm                                       128  thrpt    5     35488.015 ±       0.002    B/op
[info] ArrayOfLocalTimesBenchmark.writeUPickle:·gc.churn.PS_Eden_Space                                   128  thrpt    5       673.602 ±       0.634  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5     35497.393 ±    1452.933    B/op
[info] ArrayOfLocalTimesBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.335 ±       2.707  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5        17.948 ±     145.162    B/op
[info] ArrayOfLocalTimesBenchmark.writeUPickle:·gc.count                                                 128  thrpt    5         5.000                counts
[info] ArrayOfLocalTimesBenchmark.writeUPickle:·gc.time                                                  128  thrpt    5         6.000                    ms
[info] ArrayOfLongsBenchmark.readCirce                                                                   128  thrpt    5     78044.468 ±    3591.646   ops/s
[info] ArrayOfLongsBenchmark.readCirce:·gc.alloc.rate                                                    128  thrpt    5      1451.302 ±      66.809  MB/sec
[info] ArrayOfLongsBenchmark.readCirce:·gc.alloc.rate.norm                                               128  thrpt    5     29264.006 ±       0.001    B/op
[info] ArrayOfLongsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                           128  thrpt    5      1348.022 ±       7.964  MB/sec
[info] ArrayOfLongsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                      128  thrpt    5     27184.268 ±    1126.476    B/op
[info] ArrayOfLongsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                       128  thrpt    5         0.042 ±       0.113  MB/sec
[info] ArrayOfLongsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                  128  thrpt    5         0.841 ±       2.297    B/op
[info] ArrayOfLongsBenchmark.readCirce:·gc.count                                                         128  thrpt    5        10.000                counts
[info] ArrayOfLongsBenchmark.readCirce:·gc.time                                                          128  thrpt    5         9.000                    ms
[info] ArrayOfLongsBenchmark.readDslJsonJava                                                             128  thrpt    5    337316.943 ±    6732.566   ops/s
[info] ArrayOfLongsBenchmark.readDslJsonJava:·gc.alloc.rate                                              128  thrpt    5       675.579 ±      13.316  MB/sec
[info] ArrayOfLongsBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                         128  thrpt    5      3152.001 ±       0.001    B/op
[info] ArrayOfLongsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                                     128  thrpt    5       665.363 ±       4.386  MB/sec
[info] ArrayOfLongsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5      3104.387 ±      48.149    B/op
[info] ArrayOfLongsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.009 ±       0.073  MB/sec
[info] ArrayOfLongsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         0.040 ±       0.343    B/op
[info] ArrayOfLongsBenchmark.readDslJsonJava:·gc.count                                                   128  thrpt    5         5.000                counts
[info] ArrayOfLongsBenchmark.readDslJsonJava:·gc.time                                                    128  thrpt    5        10.000                    ms
[info] ArrayOfLongsBenchmark.readJacksonScala                                                            128  thrpt    5    254454.739 ±    1579.322   ops/s
[info] ArrayOfLongsBenchmark.readJacksonScala:·gc.alloc.rate                                             128  thrpt    5       558.771 ±       3.449  MB/sec
[info] ArrayOfLongsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                        128  thrpt    5      3456.002 ±       0.001    B/op
[info] ArrayOfLongsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5       503.086 ±    1113.853  MB/sec
[info] ArrayOfLongsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5      3111.153 ±    6889.015    B/op
[info] ArrayOfLongsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.427 ±       3.531  MB/sec
[info] ArrayOfLongsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         2.636 ±      21.786    B/op
[info] ArrayOfLongsBenchmark.readJacksonScala:·gc.count                                                  128  thrpt    5         4.000                counts
[info] ArrayOfLongsBenchmark.readJacksonScala:·gc.time                                                   128  thrpt    5         7.000                    ms
[info] ArrayOfLongsBenchmark.readJsoniterScala                                                           128  thrpt    5    493877.098 ±    5786.630   ops/s
[info] ArrayOfLongsBenchmark.readJsoniterScala:·gc.alloc.rate                                            128  thrpt    5       622.618 ±       7.487  MB/sec
[info] ArrayOfLongsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                       128  thrpt    5      1984.001 ±       0.001    B/op
[info] ArrayOfLongsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5       538.785 ±    1159.775  MB/sec
[info] ArrayOfLongsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5      1718.985 ±    3700.264    B/op
[info] ArrayOfLongsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.334 ±       2.701  MB/sec
[info] ArrayOfLongsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         1.069 ±       8.632    B/op
[info] ArrayOfLongsBenchmark.readJsoniterScala:·gc.count                                                 128  thrpt    5         4.000                counts
[info] ArrayOfLongsBenchmark.readJsoniterScala:·gc.time                                                  128  thrpt    5         4.000                    ms
[info] ArrayOfLongsBenchmark.readPlayJson                                                                128  thrpt    5     70845.431 ±    2062.222   ops/s
[info] ArrayOfLongsBenchmark.readPlayJson:·gc.alloc.rate                                                 128  thrpt    5      3071.717 ±      82.990  MB/sec
[info] ArrayOfLongsBenchmark.readPlayJson:·gc.alloc.rate.norm                                            128  thrpt    5     68228.695 ±     522.545    B/op
[info] ArrayOfLongsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                        128  thrpt    5      3117.884 ±    1426.337  MB/sec
[info] ArrayOfLongsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5     69228.646 ±   30638.001    B/op
[info] ArrayOfLongsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.079 ±       0.143  MB/sec
[info] ArrayOfLongsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5         1.761 ±       3.223    B/op
[info] ArrayOfLongsBenchmark.readPlayJson:·gc.count                                                      128  thrpt    5        23.000                counts
[info] ArrayOfLongsBenchmark.readPlayJson:·gc.time                                                       128  thrpt    5        20.000                    ms
[info] ArrayOfLongsBenchmark.writeCirce                                                                  128  thrpt    5    173899.039 ±    3148.810   ops/s
[info] ArrayOfLongsBenchmark.writeCirce:·gc.alloc.rate                                                   128  thrpt    5      1774.193 ±      32.749  MB/sec
[info] ArrayOfLongsBenchmark.writeCirce:·gc.alloc.rate.norm                                              128  thrpt    5     16056.003 ±       0.001    B/op
[info] ArrayOfLongsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                          128  thrpt    5      1752.707 ±    1430.646  MB/sec
[info] ArrayOfLongsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                     128  thrpt    5     15867.619 ±   13070.741    B/op
[info] ArrayOfLongsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                      128  thrpt    5         0.050 ±       0.091  MB/sec
[info] ArrayOfLongsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5         0.453 ±       0.834    B/op
[info] ArrayOfLongsBenchmark.writeCirce:·gc.count                                                        128  thrpt    5        13.000                counts
[info] ArrayOfLongsBenchmark.writeCirce:·gc.time                                                         128  thrpt    5        11.000                    ms
[info] ArrayOfLongsBenchmark.writeDslJsonJava                                                            128  thrpt    5    759949.878 ±   13922.056   ops/s
[info] ArrayOfLongsBenchmark.writeDslJsonJava:·gc.alloc.rate                                             128  thrpt    5       594.925 ±      10.762  MB/sec
[info] ArrayOfLongsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                        128  thrpt    5      1232.001 ±       0.001    B/op
[info] ArrayOfLongsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                                    128  thrpt    5       634.214 ±     263.997  MB/sec
[info] ArrayOfLongsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5      1313.229 ±     541.252    B/op
[info] ArrayOfLongsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.011 ±       0.060  MB/sec
[info] ArrayOfLongsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         0.023 ±       0.123    B/op
[info] ArrayOfLongsBenchmark.writeDslJsonJava:·gc.count                                                  128  thrpt    5         5.000                counts
[info] ArrayOfLongsBenchmark.writeDslJsonJava:·gc.time                                                   128  thrpt    5        11.000                    ms
[info] ArrayOfLongsBenchmark.writeJacksonScala                                                           128  thrpt    5    484317.884 ±   12495.416   ops/s
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.alloc.rate                                            128  thrpt    5       497.318 ±      12.805  MB/sec
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                       128  thrpt    5      1616.001 ±       0.001    B/op
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5       471.816 ±    1059.206  MB/sec
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5      1535.278 ±    3438.302    B/op
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.431 ±       3.581  MB/sec
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         1.400 ±      11.615    B/op
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.count                                                 128  thrpt    5         4.000                counts
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.time                                                  128  thrpt    5         8.000                    ms
[info] ArrayOfLongsBenchmark.writeJsoniterScala                                                          128  thrpt    5    602774.211 ±   11100.142   ops/s
[info] ArrayOfLongsBenchmark.writeJsoniterScala:·gc.alloc.rate                                           128  thrpt    5       471.945 ±       8.408  MB/sec
[info] ArrayOfLongsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                      128  thrpt    5      1232.001 ±       0.001    B/op
[info] ArrayOfLongsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5       474.002 ±    1066.718  MB/sec
[info] ArrayOfLongsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5      1239.598 ±    2790.119    B/op
[info] ArrayOfLongsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.337 ±       2.720  MB/sec
[info] ArrayOfLongsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         0.878 ±       7.098    B/op
[info] ArrayOfLongsBenchmark.writeJsoniterScala:·gc.count                                                128  thrpt    5         4.000                counts
[info] ArrayOfLongsBenchmark.writeJsoniterScala:·gc.time                                                 128  thrpt    5         7.000                    ms
[info] ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc                                                  128  thrpt    5    698746.674 ±    1556.695   ops/s
[info] ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                   128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                              128  thrpt    5         0.001 ±       0.001    B/op
[info] ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                        128  thrpt    5           ≈ 0                counts
[info] ArrayOfLongsBenchmark.writePlayJson                                                               128  thrpt    5     27669.220 ±     397.402   ops/s
[info] ArrayOfLongsBenchmark.writePlayJson:·gc.alloc.rate                                                128  thrpt    5      1521.386 ±      21.256  MB/sec
[info] ArrayOfLongsBenchmark.writePlayJson:·gc.alloc.rate.norm                                           128  thrpt    5     86528.016 ±       0.002    B/op
[info] ArrayOfLongsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                       128  thrpt    5      1478.925 ±    1163.531  MB/sec
[info] ArrayOfLongsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5     84091.128 ±   65496.244    B/op
[info] ArrayOfLongsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.046 ±       0.067  MB/sec
[info] ArrayOfLongsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5         2.602 ±       3.782    B/op
[info] ArrayOfLongsBenchmark.writePlayJson:·gc.count                                                     128  thrpt    5        11.000                counts
[info] ArrayOfLongsBenchmark.writePlayJson:·gc.time                                                      128  thrpt    5        11.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.readCirce                                                         128  thrpt    5      7194.714 ±     289.615   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.alloc.rate                                          128  thrpt    5      1137.848 ±      46.137  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.alloc.rate.norm                                     128  thrpt    5    248868.961 ±      31.202    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space                                 128  thrpt    5      1076.308 ±    1417.470  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5    235709.101 ±  313686.092    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.012 ±       0.044  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         2.741 ±       9.635    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.count                                               128  thrpt    5         8.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.time                                                128  thrpt    5         7.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala                                                  128  thrpt    5      7426.341 ±     277.567   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.alloc.rate                                   128  thrpt    5      1084.620 ±      40.645  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm                              128  thrpt    5    229856.549 ±      53.523    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                          128  thrpt    5      1204.101 ±    1152.300  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5    255395.048 ±  246953.141    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                      128  thrpt    5         0.033 ±       0.146  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5         7.048 ±      30.659    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.count                                        128  thrpt    5         9.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.time                                         128  thrpt    5         9.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala                                                 128  thrpt    5    156641.779 ±    6582.348   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate                                  128  thrpt    5      1517.791 ±      63.146  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                             128  thrpt    5     15248.003 ±       0.001    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                         128  thrpt    5      1485.216 ±    1158.034  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5     14922.394 ±   11656.071    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.058 ±       0.174  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5         0.584 ±       1.747    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.count                                       128  thrpt    5        11.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.time                                        128  thrpt    5         9.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson                                                      128  thrpt    5      6723.269 ±      41.766   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.alloc.rate                                       128  thrpt    5      1227.050 ±       7.698  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.alloc.rate.norm                                  128  thrpt    5    287232.109 ±       0.374    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                              128  thrpt    5      1339.959 ±       8.808  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5    313663.280 ±    3626.216    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.042 ±       0.188  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         9.739 ±      43.918    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.count                                            128  thrpt    5        10.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.time                                             128  thrpt    5         9.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.readUPickle                                                       128  thrpt    5      7696.042 ±     319.342   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.readUPickle:·gc.alloc.rate                                        128  thrpt    5      1106.346 ±      45.746  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readUPickle:·gc.alloc.rate.norm                                   128  thrpt    5    226216.515 ±      45.268    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readUPickle:·gc.churn.PS_Eden_Space                               128  thrpt    5      1077.977 ±    1421.230  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5    220459.170 ±  291052.498    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readUPickle:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.037 ±       0.143  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         7.648 ±      29.134    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readUPickle:·gc.count                                             128  thrpt    5         8.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.readUPickle:·gc.time                                              128  thrpt    5         7.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce                                                        128  thrpt    5     16965.919 ±     563.260   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.alloc.rate                                         128  thrpt    5      1000.784 ±      33.294  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.alloc.rate.norm                                    128  thrpt    5     92830.699 ±     121.200    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                128  thrpt    5      1073.357 ±    1415.819  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5     99363.768 ±  128829.034    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.046 ±       0.154  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         4.231 ±      14.176    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.count                                              128  thrpt    5         8.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.time                                               128  thrpt    5         7.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala                                                 128  thrpt    5     18645.398 ±     296.673   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate                                  128  thrpt    5       874.484 ±      13.284  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                             128  thrpt    5     73808.025 ±       0.014    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                         128  thrpt    5       935.613 ±    1409.875  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5     78926.799 ±  118414.676    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.042 ±       0.127  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5         3.507 ±      10.675    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.count                                       128  thrpt    5         7.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.time                                        128  thrpt    5         6.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala                                                128  thrpt    5    487900.600 ±   26560.775   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate                                 128  thrpt    5      1106.149 ±      60.371  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                            128  thrpt    5      3568.001 ±       0.001    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                        128  thrpt    5      1078.157 ±    1420.031  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5      3486.045 ±    4681.217    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                    128  thrpt    5         0.033 ±       0.146  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5         0.107 ±       0.467    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.count                                      128  thrpt    5         8.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.time                                       128  thrpt    5         7.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc                                        128  thrpt    5    489872.804 ±   34891.420   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                         128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                    128  thrpt    5         0.001 ±       0.001    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count                              128  thrpt    5           ≈ 0                counts
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson                                                     128  thrpt    5     18225.982 ±     625.279   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.alloc.rate                                      128  thrpt    5       922.731 ±      31.479  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.alloc.rate.norm                                 128  thrpt    5     79676.208 ±      26.738    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                             128  thrpt    5       803.646 ±    1152.285  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5     69382.184 ±   99222.373    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.017 ±       0.105  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         1.439 ±       9.015    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.count                                           128  thrpt    5         6.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.time                                            128  thrpt    5         6.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.writeUPickle                                                      128  thrpt    5     10512.324 ±      93.860   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.writeUPickle:·gc.alloc.rate                                       128  thrpt    5       876.301 ±       7.488  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeUPickle:·gc.alloc.rate.norm                                  128  thrpt    5    131176.045 ±       0.026    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeUPickle:·gc.churn.PS_Eden_Space                              128  thrpt    5       943.005 ±    1420.832  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5    141195.358 ±  213164.926    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.037 ±       0.200  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         5.613 ±      29.887    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeUPickle:·gc.count                                            128  thrpt    5         7.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.writeUPickle:·gc.time                                             128  thrpt    5         6.000                    ms
[info] ArrayOfOffsetTimesBenchmark.readCirce                                                             128  thrpt    5     11873.089 ±     254.928   ops/s
[info] ArrayOfOffsetTimesBenchmark.readCirce:·gc.alloc.rate                                              128  thrpt    5      1224.567 ±      25.773  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readCirce:·gc.alloc.rate.norm                                         128  thrpt    5    162288.040 ±       0.023    B/op
[info] ArrayOfOffsetTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space                                     128  thrpt    5      1211.149 ±    1160.613  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5    160568.047 ±  154563.154    B/op
[info] ArrayOfOffsetTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.012 ±       0.072  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         1.656 ±       9.482    B/op
[info] ArrayOfOffsetTimesBenchmark.readCirce:·gc.count                                                   128  thrpt    5         9.000                counts
[info] ArrayOfOffsetTimesBenchmark.readCirce:·gc.time                                                    128  thrpt    5         8.000                    ms
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala                                                      128  thrpt    5     12169.437 ±     153.979   ops/s
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.alloc.rate                                       128  thrpt    5      1129.714 ±      14.855  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm                                  128  thrpt    5    146074.534 ±      29.233    B/op
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                              128  thrpt    5      1070.622 ±    1410.681  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5    138488.352 ±  183068.937    B/op
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.037 ±       0.143  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         4.848 ±      18.530    B/op
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.count                                            128  thrpt    5         8.000                counts
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.time                                             128  thrpt    5         7.000                    ms
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala                                                     128  thrpt    5    276954.176 ±    8737.385   ops/s
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.alloc.rate                                      128  thrpt    5      1602.070 ±      50.642  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                 128  thrpt    5      9104.002 ±       0.001    B/op
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                             128  thrpt    5      1620.411 ±    1427.084  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5      9200.700 ±    7929.151    B/op
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.050 ±       0.072  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         0.284 ±       0.405    B/op
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.count                                           128  thrpt    5        12.000                counts
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.time                                            128  thrpt    5        10.000                    ms
[info] ArrayOfOffsetTimesBenchmark.readPlayJson                                                          128  thrpt    5     11337.339 ±     140.536   ops/s
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.alloc.rate                                           128  thrpt    5      1418.775 ±      17.810  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.alloc.rate.norm                                      128  thrpt    5    196944.105 ±       0.542    B/op
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                  128  thrpt    5      1471.808 ±    1140.499  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5    204282.704 ±  157580.307    B/op
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.042 ±       0.127  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         5.785 ±      17.628    B/op
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.count                                                128  thrpt    5        11.000                counts
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.time                                                 128  thrpt    5        11.000                    ms
[info] ArrayOfOffsetTimesBenchmark.readUPickle                                                           128  thrpt    5     11765.568 ±     154.604   ops/s
[info] ArrayOfOffsetTimesBenchmark.readUPickle:·gc.alloc.rate                                            128  thrpt    5      1178.983 ±      14.958  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readUPickle:·gc.alloc.rate.norm                                       128  thrpt    5    157691.668 ±      23.135    B/op
[info] ArrayOfOffsetTimesBenchmark.readUPickle:·gc.churn.PS_Eden_Space                                   128  thrpt    5      1212.090 ±    1159.391  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5    162191.937 ±  155994.039    B/op
[info] ArrayOfOffsetTimesBenchmark.readUPickle:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.054 ±       0.185  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         7.240 ±      24.656    B/op
[info] ArrayOfOffsetTimesBenchmark.readUPickle:·gc.count                                                 128  thrpt    5         9.000                counts
[info] ArrayOfOffsetTimesBenchmark.readUPickle:·gc.time                                                  128  thrpt    5         8.000                    ms
[info] ArrayOfOffsetTimesBenchmark.writeCirce                                                            128  thrpt    5     26999.591 ±    1015.043   ops/s
[info] ArrayOfOffsetTimesBenchmark.writeCirce:·gc.alloc.rate                                             128  thrpt    5      1184.817 ±      44.942  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeCirce:·gc.alloc.rate.norm                                        128  thrpt    5     69056.016 ±       0.003    B/op
[info] ArrayOfOffsetTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1208.096 ±    1152.719  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5     70475.424 ±   67986.963    B/op
[info] ArrayOfOffsetTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.029 ±       0.091  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         1.699 ±       5.372    B/op
[info] ArrayOfOffsetTimesBenchmark.writeCirce:·gc.count                                                  128  thrpt    5         9.000                counts
[info] ArrayOfOffsetTimesBenchmark.writeCirce:·gc.time                                                   128  thrpt    5         8.000                    ms
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala                                                     128  thrpt    5     80619.653 ±    2799.489   ops/s
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.alloc.rate                                      128  thrpt    5      1805.338 ±      61.691  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                 128  thrpt    5     35240.006 ±       0.001    B/op
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                             128  thrpt    5      1748.866 ±    1424.773  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5     34154.381 ±   28143.057    B/op
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.050 ±       0.146  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         0.980 ±       2.887    B/op
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.count                                           128  thrpt    5        13.000                counts
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.time                                            128  thrpt    5        12.000                    ms
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala                                                    128  thrpt    5    701365.527 ±    5229.694   ops/s
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.alloc.rate                                     128  thrpt    5       962.570 ±       7.242  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                128  thrpt    5      2160.001 ±       0.001    B/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                            128  thrpt    5       942.377 ±    1419.686  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5      2115.959 ±    3203.572    B/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.033 ±       0.146  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         0.075 ±       0.327    B/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.count                                          128  thrpt    5         7.000                counts
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.time                                           128  thrpt    5         7.000                    ms
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc                                            128  thrpt    5    763351.745 ±   28733.401   ops/s
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                             128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                        128  thrpt    5         0.001 ±       0.001    B/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count                                  128  thrpt    5           ≈ 0                counts
[info] ArrayOfOffsetTimesBenchmark.writePlayJson                                                         128  thrpt    5     73090.001 ±    1517.494   ops/s
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.alloc.rate                                          128  thrpt    5      1906.827 ±      40.126  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.alloc.rate.norm                                     128  thrpt    5     41056.006 ±       0.001    B/op
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                 128  thrpt    5      1881.990 ±    1150.553  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5     40514.142 ±   24601.876    B/op
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.054 ±       0.072  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         1.165 ±       1.528    B/op
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.count                                               128  thrpt    5        14.000                counts
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.time                                                128  thrpt    5        15.000                    ms
[info] ArrayOfOffsetTimesBenchmark.writeUPickle                                                          128  thrpt    5     20117.375 ±     758.495   ops/s
[info] ArrayOfOffsetTimesBenchmark.writeUPickle:·gc.alloc.rate                                           128  thrpt    5       666.205 ±      24.770  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeUPickle:·gc.alloc.rate.norm                                      128  thrpt    5     52111.779 ±       2.087    B/op
[info] ArrayOfOffsetTimesBenchmark.writeUPickle:·gc.churn.PS_Eden_Space                                  128  thrpt    5       673.150 ±       1.520  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5     52658.979 ±    1973.739    B/op
[info] ArrayOfOffsetTimesBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.361 ±       2.881  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5        28.198 ±     225.340    B/op
[info] ArrayOfOffsetTimesBenchmark.writeUPickle:·gc.count                                                128  thrpt    5         5.000                counts
[info] ArrayOfOffsetTimesBenchmark.writeUPickle:·gc.time                                                 128  thrpt    5         5.000                    ms
[info] ArrayOfPeriodsBenchmark.readCirce                                                                 128  thrpt    5     14820.001 ±      94.709   ops/s
[info] ArrayOfPeriodsBenchmark.readCirce:·gc.alloc.rate                                                  128  thrpt    5       781.602 ±       5.042  MB/sec
[info] ArrayOfPeriodsBenchmark.readCirce:·gc.alloc.rate.norm                                             128  thrpt    5     83000.248 ±       1.861    B/op
[info] ArrayOfPeriodsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                         128  thrpt    5       806.576 ±    1157.376  MB/sec
[info] ArrayOfPeriodsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5     85685.683 ±  123548.294    B/op
[info] ArrayOfPeriodsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                     128  thrpt    5         0.354 ±       2.825  MB/sec
[info] ArrayOfPeriodsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5        37.601 ±     300.132    B/op
[info] ArrayOfPeriodsBenchmark.readCirce:·gc.count                                                       128  thrpt    5         6.000                counts
[info] ArrayOfPeriodsBenchmark.readCirce:·gc.time                                                        128  thrpt    5         7.000                    ms
[info] ArrayOfPeriodsBenchmark.readJacksonScala                                                          128  thrpt    5     16174.532 ±     241.733   ops/s
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.alloc.rate                                           128  thrpt    5       690.035 ±      10.183  MB/sec
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                      128  thrpt    5     67137.296 ±      62.570    B/op
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5       770.374 ±    1245.739  MB/sec
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5     74925.880 ±  120840.663    B/op
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.453 ±       3.590  MB/sec
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5        44.068 ±     349.255    B/op
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.count                                                128  thrpt    5         6.000                counts
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.time                                                 128  thrpt    5        10.000                    ms
[info] ArrayOfPeriodsBenchmark.readJsoniterScala                                                         128  thrpt    5    100114.696 ±    2680.952   ops/s
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.alloc.rate                                          128  thrpt    5       251.441 ±       6.616  MB/sec
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                     128  thrpt    5      3952.004 ±       0.001    B/op
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5       307.050 ±    1079.324  MB/sec
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5      4829.359 ±   16976.514    B/op
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.004 ±       0.036  MB/sec
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         0.065 ±       0.563    B/op
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.count                                               128  thrpt    5         3.000                counts
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.time                                                128  thrpt    5         5.000                    ms
[info] ArrayOfPeriodsBenchmark.readPlayJson                                                              128  thrpt    5     14312.719 ±     283.943   ops/s
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.alloc.rate                                               128  thrpt    5      1113.907 ±      22.008  MB/sec
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.alloc.rate.norm                                          128  thrpt    5    122486.886 ±       7.661    B/op
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                      128  thrpt    5      1070.957 ±    1412.500  MB/sec
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5    117666.499 ±  154101.400    B/op
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.033 ±       0.156  MB/sec
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         3.657 ±      17.114    B/op
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.count                                                    128  thrpt    5         8.000                counts
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.time                                                     128  thrpt    5         7.000                    ms
[info] ArrayOfPeriodsBenchmark.readUPickle                                                               128  thrpt    5     15143.547 ±     577.304   ops/s
[info] ArrayOfPeriodsBenchmark.readUPickle:·gc.alloc.rate                                                128  thrpt    5       758.807 ±      29.385  MB/sec
[info] ArrayOfPeriodsBenchmark.readUPickle:·gc.alloc.rate.norm                                           128  thrpt    5     78854.353 ±      50.356    B/op
[info] ArrayOfPeriodsBenchmark.readUPickle:·gc.churn.PS_Eden_Space                                       128  thrpt    5       673.523 ±       0.408  MB/sec
[info] ArrayOfPeriodsBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5     69997.392 ±    2702.582    B/op
[info] ArrayOfPeriodsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.331 ±       2.716  MB/sec
[info] ArrayOfPeriodsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5        34.297 ±     281.318    B/op
[info] ArrayOfPeriodsBenchmark.readUPickle:·gc.count                                                     128  thrpt    5         5.000                counts
[info] ArrayOfPeriodsBenchmark.readUPickle:·gc.time                                                      128  thrpt    5         5.000                    ms
[info] ArrayOfPeriodsBenchmark.writeCirce                                                                128  thrpt    5     50144.777 ±     635.293   ops/s
[info] ArrayOfPeriodsBenchmark.writeCirce:·gc.alloc.rate                                                 128  thrpt    5      1409.784 ±      17.887  MB/sec
[info] ArrayOfPeriodsBenchmark.writeCirce:·gc.alloc.rate.norm                                            128  thrpt    5     44248.009 ±       0.001    B/op
[info] ArrayOfPeriodsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                        128  thrpt    5      1344.454 ±       9.174  MB/sec
[info] ArrayOfPeriodsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5     42197.710 ±     291.770    B/op
[info] ArrayOfPeriodsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.062 ±       0.150  MB/sec
[info] ArrayOfPeriodsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5         1.961 ±       4.712    B/op
[info] ArrayOfPeriodsBenchmark.writeCirce:·gc.count                                                      128  thrpt    5        10.000                counts
[info] ArrayOfPeriodsBenchmark.writeCirce:·gc.time                                                       128  thrpt    5         8.000                    ms
[info] ArrayOfPeriodsBenchmark.writeJacksonScala                                                         128  thrpt    5     73663.653 ±     278.924   ops/s
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.alloc.rate                                          128  thrpt    5      1519.547 ±       5.891  MB/sec
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                     128  thrpt    5     32464.006 ±       0.001    B/op
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5      1476.832 ±    1162.237  MB/sec
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5     31553.387 ±   24888.431    B/op
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.054 ±       0.122  MB/sec
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         1.156 ±       2.596    B/op
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.count                                               128  thrpt    5        11.000                counts
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.time                                                128  thrpt    5        10.000                    ms
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala                                                        128  thrpt    5    276588.833 ±    4992.692   ops/s
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.alloc.rate                                         128  thrpt    5       530.032 ±       9.658  MB/sec
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                    128  thrpt    5      3016.002 ±       0.001    B/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                128  thrpt    5       506.408 ±    1123.009  MB/sec
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5      2885.380 ±    6404.683    B/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.310 ±       2.496  MB/sec
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         1.761 ±      14.159    B/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.count                                              128  thrpt    5         4.000                counts
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.time                                               128  thrpt    5         6.000                    ms
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc                                                128  thrpt    5    277508.584 ±    1532.780   ops/s
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                 128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                            128  thrpt    5         0.002 ±       0.001    B/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                      128  thrpt    5           ≈ 0                counts
[info] ArrayOfPeriodsBenchmark.writePlayJson                                                             128  thrpt    5     68293.558 ±    1967.610   ops/s
[info] ArrayOfPeriodsBenchmark.writePlayJson:·gc.alloc.rate                                              128  thrpt    5      1530.612 ±      43.883  MB/sec
[info] ArrayOfPeriodsBenchmark.writePlayJson:·gc.alloc.rate.norm                                         128  thrpt    5     35272.007 ±       0.001    B/op
[info] ArrayOfPeriodsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                     128  thrpt    5      1478.815 ±    1152.169  MB/sec
[info] ArrayOfPeriodsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5     34076.277 ±   26454.738    B/op
[info] ArrayOfPeriodsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.025 ±       0.143  MB/sec
[info] ArrayOfPeriodsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         0.576 ±       3.303    B/op
[info] ArrayOfPeriodsBenchmark.writePlayJson:·gc.count                                                   128  thrpt    5        11.000                counts
[info] ArrayOfPeriodsBenchmark.writePlayJson:·gc.time                                                    128  thrpt    5        10.000                    ms
[info] ArrayOfPeriodsBenchmark.writeUPickle                                                              128  thrpt    5     14940.614 ±     237.592   ops/s
[info] ArrayOfPeriodsBenchmark.writeUPickle:·gc.alloc.rate                                               128  thrpt    5       596.628 ±       9.483  MB/sec
[info] ArrayOfPeriodsBenchmark.writeUPickle:·gc.alloc.rate.norm                                          128  thrpt    5     62847.702 ±       2.838    B/op
[info] ArrayOfPeriodsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space                                      128  thrpt    5       641.208 ±     279.020  MB/sec
[info] ArrayOfPeriodsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5     67542.469 ±   29338.193    B/op
[info] ArrayOfPeriodsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.333 ±       2.645  MB/sec
[info] ArrayOfPeriodsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5        35.238 ±     279.934    B/op
[info] ArrayOfPeriodsBenchmark.writeUPickle:·gc.count                                                    128  thrpt    5         5.000                counts
[info] ArrayOfPeriodsBenchmark.writeUPickle:·gc.time                                                     128  thrpt    5         8.000                    ms
[info] ArrayOfShortsBenchmark.readCirce                                                                  128  thrpt    5    130303.307 ±    1545.995   ops/s
[info] ArrayOfShortsBenchmark.readCirce:·gc.alloc.rate                                                   128  thrpt    5      1950.593 ±      23.168  MB/sec
[info] ArrayOfShortsBenchmark.readCirce:·gc.alloc.rate.norm                                              128  thrpt    5     23560.003 ±       0.001    B/op
[info] ArrayOfShortsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                          128  thrpt    5      1891.834 ±    1158.714  MB/sec
[info] ArrayOfShortsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                     128  thrpt    5     22849.130 ±   13966.427    B/op
[info] ArrayOfShortsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                      128  thrpt    5         0.058 ±       0.174  MB/sec
[info] ArrayOfShortsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5         0.704 ±       2.093    B/op
[info] ArrayOfShortsBenchmark.readCirce:·gc.count                                                        128  thrpt    5        14.000                counts
[info] ArrayOfShortsBenchmark.readCirce:·gc.time                                                         128  thrpt    5        12.000                    ms
[info] ArrayOfShortsBenchmark.readDslJsonJava                                                            128  thrpt    5    623074.311 ±   25461.062   ops/s
[info] ArrayOfShortsBenchmark.readDslJsonJava:·gc.alloc.rate                                             128  thrpt    5       345.242 ±      13.972  MB/sec
[info] ArrayOfShortsBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                        128  thrpt    5       872.001 ±       0.001    B/op
[info] ArrayOfShortsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                                    128  thrpt    5       306.982 ±    1079.086  MB/sec
[info] ArrayOfShortsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5       777.232 ±    2732.334    B/op
[info] ArrayOfShortsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.005 ±       0.044  MB/sec
[info] ArrayOfShortsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         0.013 ±       0.109    B/op
[info] ArrayOfShortsBenchmark.readDslJsonJava:·gc.count                                                  128  thrpt    5         3.000                counts
[info] ArrayOfShortsBenchmark.readDslJsonJava:·gc.time                                                   128  thrpt    5         6.000                    ms
[info] ArrayOfShortsBenchmark.readJacksonScala                                                           128  thrpt    5    391767.620 ±   16608.881   ops/s
[info] ArrayOfShortsBenchmark.readJacksonScala:·gc.alloc.rate                                            128  thrpt    5       400.268 ±      16.938  MB/sec
[info] ArrayOfShortsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                       128  thrpt    5      1608.001 ±       0.001    B/op
[info] ArrayOfShortsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5       440.533 ±     983.377  MB/sec
[info] ArrayOfShortsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5      1773.844 ±    3944.183    B/op
[info] ArrayOfShortsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.429 ±       3.674  MB/sec
[info] ArrayOfShortsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         1.711 ±      14.641    B/op
[info] ArrayOfShortsBenchmark.readJacksonScala:·gc.count                                                 128  thrpt    5         4.000                counts
[info] ArrayOfShortsBenchmark.readJacksonScala:·gc.time                                                  128  thrpt    5        10.000                    ms
[info] ArrayOfShortsBenchmark.readJsoniterScala                                                          128  thrpt    5    927210.084 ±   49295.618   ops/s
[info] ArrayOfShortsBenchmark.readJsoniterScala:·gc.alloc.rate                                           128  thrpt    5       320.520 ±      16.828  MB/sec
[info] ArrayOfShortsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                      128  thrpt    5       544.000 ±       0.001    B/op
[info] ArrayOfShortsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5       306.967 ±    1079.032  MB/sec
[info] ArrayOfShortsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5       517.675 ±    1819.701    B/op
[info] ArrayOfShortsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.009 ±       0.060  MB/sec
[info] ArrayOfShortsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         0.016 ±       0.100    B/op
[info] ArrayOfShortsBenchmark.readJsoniterScala:·gc.count                                                128  thrpt    5         3.000                counts
[info] ArrayOfShortsBenchmark.readJsoniterScala:·gc.time                                                 128  thrpt    5         6.000                    ms
[info] ArrayOfShortsBenchmark.readPlayJson                                                               128  thrpt    5     77203.084 ±    1777.206   ops/s
[info] ArrayOfShortsBenchmark.readPlayJson:·gc.alloc.rate                                                128  thrpt    5      3208.883 ±      73.194  MB/sec
[info] ArrayOfShortsBenchmark.readPlayJson:·gc.alloc.rate.norm                                           128  thrpt    5     65408.006 ±       0.001    B/op
[info] ArrayOfShortsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                       128  thrpt    5      3255.084 ±    1176.838  MB/sec
[info] ArrayOfShortsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5     66351.297 ±   24033.266    B/op
[info] ArrayOfShortsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.108 ±       0.154  MB/sec
[info] ArrayOfShortsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5         2.207 ±       3.150    B/op
[info] ArrayOfShortsBenchmark.readPlayJson:·gc.count                                                     128  thrpt    5        24.000                counts
[info] ArrayOfShortsBenchmark.readPlayJson:·gc.time                                                      128  thrpt    5        24.000                    ms
[info] ArrayOfShortsBenchmark.readUPickle                                                                128  thrpt    5    141995.181 ±    4200.022   ops/s
[info] ArrayOfShortsBenchmark.readUPickle:·gc.alloc.rate                                                 128  thrpt    5      1377.323 ±      40.407  MB/sec
[info] ArrayOfShortsBenchmark.readUPickle:·gc.alloc.rate.norm                                            128  thrpt    5     15264.003 ±       0.001    B/op
[info] ArrayOfShortsBenchmark.readUPickle:·gc.churn.PS_Eden_Space                                        128  thrpt    5      1349.643 ±       5.991  MB/sec
[info] ArrayOfShortsBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5     14957.859 ±     394.462    B/op
[info] ArrayOfShortsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.054 ±       0.166  MB/sec
[info] ArrayOfShortsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5         0.602 ±       1.859    B/op
[info] ArrayOfShortsBenchmark.readUPickle:·gc.count                                                      128  thrpt    5        10.000                counts
[info] ArrayOfShortsBenchmark.readUPickle:·gc.time                                                       128  thrpt    5         9.000                    ms
[info] ArrayOfShortsBenchmark.writeCirce                                                                 128  thrpt    5    252309.765 ±    5071.302   ops/s
[info] ArrayOfShortsBenchmark.writeCirce:·gc.alloc.rate                                                  128  thrpt    5      1664.975 ±      32.646  MB/sec
[info] ArrayOfShortsBenchmark.writeCirce:·gc.alloc.rate.norm                                             128  thrpt    5     10384.002 ±       0.001    B/op
[info] ArrayOfShortsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                         128  thrpt    5      1616.405 ±    1420.004  MB/sec
[info] ArrayOfShortsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5     10082.206 ±    8879.297    B/op
[info] ArrayOfShortsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                     128  thrpt    5         0.058 ±       0.236  MB/sec
[info] ArrayOfShortsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5         0.364 ±       1.478    B/op
[info] ArrayOfShortsBenchmark.writeCirce:·gc.count                                                       128  thrpt    5        12.000                counts
[info] ArrayOfShortsBenchmark.writeCirce:·gc.time                                                        128  thrpt    5        10.000                    ms
[info] ArrayOfShortsBenchmark.writeDslJsonJava                                                           128  thrpt    5   1380090.649 ±   81196.442   ops/s
[info] ArrayOfShortsBenchmark.writeDslJsonJava:·gc.alloc.rate                                            128  thrpt    5       470.038 ±      27.667  MB/sec
[info] ArrayOfShortsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                       128  thrpt    5       536.000 ±       0.001    B/op
[info] ArrayOfShortsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                                   128  thrpt    5       470.199 ±    1053.752  MB/sec
[info] ArrayOfShortsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5       536.007 ±    1196.614    B/op
[info] ArrayOfShortsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.003 ±       0.025  MB/sec
[info] ArrayOfShortsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         0.003 ±       0.029    B/op
[info] ArrayOfShortsBenchmark.writeDslJsonJava:·gc.count                                                 128  thrpt    5         4.000                counts
[info] ArrayOfShortsBenchmark.writeDslJsonJava:·gc.time                                                  128  thrpt    5         9.000                    ms
[info] ArrayOfShortsBenchmark.writeJacksonScala                                                          128  thrpt    5   1301637.711 ±   64907.415   ops/s
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.alloc.rate                                           128  thrpt    5       760.966 ±      38.327  MB/sec
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                      128  thrpt    5       920.000 ±       0.001    B/op
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5       801.723 ±    1149.234  MB/sec
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5       970.830 ±    1417.703    B/op
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.436 ±       3.624  MB/sec
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         0.532 ±       4.421    B/op
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.count                                                128  thrpt    5         6.000                counts
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.time                                                 128  thrpt    5         7.000                    ms
[info] ArrayOfShortsBenchmark.writeJsoniterScala                                                         128  thrpt    5   1374419.568 ±   70902.052   ops/s
[info] ArrayOfShortsBenchmark.writeJsoniterScala:·gc.alloc.rate                                          128  thrpt    5       468.075 ±      24.139  MB/sec
[info] ArrayOfShortsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                     128  thrpt    5       536.000 ±       0.001    B/op
[info] ArrayOfShortsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5       473.897 ±    1066.444  MB/sec
[info] ArrayOfShortsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5       543.407 ±    1218.034    B/op
[info] ArrayOfShortsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.323 ±       2.650  MB/sec
[info] ArrayOfShortsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         0.368 ±       3.014    B/op
[info] ArrayOfShortsBenchmark.writeJsoniterScala:·gc.count                                               128  thrpt    5         4.000                counts
[info] ArrayOfShortsBenchmark.writeJsoniterScala:·gc.time                                                128  thrpt    5         7.000                    ms
[info] ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc                                                 128  thrpt    5   1419930.115 ±   10361.235   ops/s
[info] ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                  128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                             128  thrpt    5        ≈ 10⁻⁴                  B/op
[info] ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                       128  thrpt    5           ≈ 0                counts
[info] ArrayOfShortsBenchmark.writePlayJson                                                              128  thrpt    5     35458.592 ±     756.978   ops/s
[info] ArrayOfShortsBenchmark.writePlayJson:·gc.alloc.rate                                               128  thrpt    5      1711.137 ±      37.093  MB/sec
[info] ArrayOfShortsBenchmark.writePlayJson:·gc.alloc.rate.norm                                          128  thrpt    5     75944.012 ±       0.001    B/op
[info] ArrayOfShortsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                      128  thrpt    5      1749.946 ±    1419.680  MB/sec
[info] ArrayOfShortsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5     77692.373 ±   63545.115    B/op
[info] ArrayOfShortsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.058 ±       0.154  MB/sec
[info] ArrayOfShortsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         2.592 ±       6.878    B/op
[info] ArrayOfShortsBenchmark.writePlayJson:·gc.count                                                    128  thrpt    5        13.000                counts
[info] ArrayOfShortsBenchmark.writePlayJson:·gc.time                                                     128  thrpt    5        18.000                    ms
[info] ArrayOfShortsBenchmark.writeUPickle                                                               128  thrpt    5    121701.867 ±    8028.938   ops/s
[info] ArrayOfShortsBenchmark.writeUPickle:·gc.alloc.rate                                                128  thrpt    5      1092.492 ±      72.198  MB/sec
[info] ArrayOfShortsBenchmark.writeUPickle:·gc.alloc.rate.norm                                           128  thrpt    5     14128.004 ±       0.001    B/op
[info] ArrayOfShortsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space                                       128  thrpt    5      1078.736 ±    1421.571  MB/sec
[info] ArrayOfShortsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5     13980.368 ±   18750.739    B/op
[info] ArrayOfShortsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.025 ±       0.105  MB/sec
[info] ArrayOfShortsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5         0.325 ±       1.355    B/op
[info] ArrayOfShortsBenchmark.writeUPickle:·gc.count                                                     128  thrpt    5         8.000                counts
[info] ArrayOfShortsBenchmark.writeUPickle:·gc.time                                                      128  thrpt    5         6.000                    ms
[info] ArrayOfUUIDsBenchmark.readCirce                                                                   128  thrpt    5     18746.355 ±     468.650   ops/s
[info] ArrayOfUUIDsBenchmark.readCirce:·gc.alloc.rate                                                    128  thrpt    5      1967.665 ±      49.313  MB/sec
[info] ArrayOfUUIDsBenchmark.readCirce:·gc.alloc.rate.norm                                               128  thrpt    5    165176.025 ±       0.015    B/op
[info] ArrayOfUUIDsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                           128  thrpt    5      2027.571 ±      19.661  MB/sec
[info] ArrayOfUUIDsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                      128  thrpt    5    170210.832 ±    4708.696    B/op
[info] ArrayOfUUIDsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                       128  thrpt    5         0.054 ±       0.134  MB/sec
[info] ArrayOfUUIDsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                  128  thrpt    5         4.530 ±      11.118    B/op
[info] ArrayOfUUIDsBenchmark.readCirce:·gc.count                                                         128  thrpt    5        15.000                counts
[info] ArrayOfUUIDsBenchmark.readCirce:·gc.time                                                          128  thrpt    5        13.000                    ms
[info] ArrayOfUUIDsBenchmark.readJacksonScala                                                            128  thrpt    5     95986.233 ±    5463.599   ops/s
[info] ArrayOfUUIDsBenchmark.readJacksonScala:·gc.alloc.rate                                             128  thrpt    5      1259.753 ±      71.826  MB/sec
[info] ArrayOfUUIDsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                        128  thrpt    5     20656.005 ±       0.001    B/op
[info] ArrayOfUUIDsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1205.256 ±    1148.367  MB/sec
[info] ArrayOfUUIDsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5     19744.946 ±   18596.653    B/op
[info] ArrayOfUUIDsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.054 ±       0.146  MB/sec
[info] ArrayOfUUIDsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         0.887 ±       2.402    B/op
[info] ArrayOfUUIDsBenchmark.readJacksonScala:·gc.count                                                  128  thrpt    5         9.000                counts
[info] ArrayOfUUIDsBenchmark.readJacksonScala:·gc.time                                                   128  thrpt    5         7.000                    ms
[info] ArrayOfUUIDsBenchmark.readJsoniterScala                                                           128  thrpt    5    280874.428 ±    6690.434   ops/s
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.alloc.rate                                            128  thrpt    5       913.865 ±      21.007  MB/sec
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                       128  thrpt    5      5120.002 ±       0.001    B/op
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5       942.826 ±    1420.037  MB/sec
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5      5287.092 ±    8023.034    B/op
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.029 ±       0.108  MB/sec
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         0.163 ±       0.602    B/op
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.count                                                 128  thrpt    5         7.000                counts
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.time                                                  128  thrpt    5         6.000                    ms
[info] ArrayOfUUIDsBenchmark.readPlayJson                                                                128  thrpt    5     17021.474 ±     462.114   ops/s
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.alloc.rate                                                 128  thrpt    5      2192.476 ±      59.470  MB/sec
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.alloc.rate.norm                                            128  thrpt    5    202704.028 ±       0.015    B/op
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                        128  thrpt    5      2158.343 ±    1152.722  MB/sec
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5    199577.097 ±  107538.968    B/op
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.067 ±       0.119  MB/sec
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5         6.169 ±      11.079    B/op
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.count                                                      128  thrpt    5        16.000                counts
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.time                                                       128  thrpt    5        14.000                    ms
[info] ArrayOfUUIDsBenchmark.readUPickle                                                                 128  thrpt    5     15400.958 ±     344.235   ops/s
[info] ArrayOfUUIDsBenchmark.readUPickle:·gc.alloc.rate                                                  128  thrpt    5      1567.324 ±      35.127  MB/sec
[info] ArrayOfUUIDsBenchmark.readUPickle:·gc.alloc.rate.norm                                             128  thrpt    5    160138.664 ±      47.693    B/op
[info] ArrayOfUUIDsBenchmark.readUPickle:·gc.churn.PS_Eden_Space                                         128  thrpt    5      1486.178 ±    1167.498  MB/sec
[info] ArrayOfUUIDsBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5    151747.820 ±  116185.350    B/op
[info] ArrayOfUUIDsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space                                     128  thrpt    5         0.067 ±       0.164  MB/sec
[info] ArrayOfUUIDsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5         6.814 ±      16.753    B/op
[info] ArrayOfUUIDsBenchmark.readUPickle:·gc.count                                                       128  thrpt    5        11.000                counts
[info] ArrayOfUUIDsBenchmark.readUPickle:·gc.time                                                        128  thrpt    5         9.000                    ms
[info] ArrayOfUUIDsBenchmark.writeCirce                                                                  128  thrpt    5     21044.240 ±     752.379   ops/s
[info] ArrayOfUUIDsBenchmark.writeCirce:·gc.alloc.rate                                                   128  thrpt    5      1702.893 ±      60.339  MB/sec
[info] ArrayOfUUIDsBenchmark.writeCirce:·gc.alloc.rate.norm                                              128  thrpt    5    127356.516 ±      38.710    B/op
[info] ArrayOfUUIDsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                          128  thrpt    5      1751.354 ±    1424.679  MB/sec
[info] ArrayOfUUIDsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                     128  thrpt    5    130870.544 ±  104100.259    B/op
[info] ArrayOfUUIDsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                      128  thrpt    5         0.046 ±       0.143  MB/sec
[info] ArrayOfUUIDsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5         3.424 ±      10.668    B/op
[info] ArrayOfUUIDsBenchmark.writeCirce:·gc.count                                                        128  thrpt    5        13.000                counts
[info] ArrayOfUUIDsBenchmark.writeCirce:·gc.time                                                         128  thrpt    5        11.000                    ms
[info] ArrayOfUUIDsBenchmark.writeJacksonScala                                                           128  thrpt    5     98908.681 ±     707.616   ops/s
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.alloc.rate                                            128  thrpt    5      1354.976 ±       9.603  MB/sec
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                       128  thrpt    5     21560.004 ±       0.055    B/op
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5      1473.452 ±    1142.309  MB/sec
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5     23440.098 ±   18020.777    B/op
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.042 ±       0.127  MB/sec
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         0.662 ±       2.014    B/op
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.count                                                 128  thrpt    5        11.000                counts
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.time                                                  128  thrpt    5        10.000                    ms
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala                                                          128  thrpt    5    325375.079 ±    4233.576   ops/s
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.alloc.rate                                           128  thrpt    5      1037.130 ±      13.766  MB/sec
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                      128  thrpt    5      5016.001 ±       0.001    B/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5      1077.449 ±    1420.730  MB/sec
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5      5213.644 ±    6903.586    B/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.042 ±       0.127  MB/sec
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         0.202 ±       0.613    B/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.count                                                128  thrpt    5         8.000                counts
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.time                                                 128  thrpt    5         6.000                    ms
[info] ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc                                                  128  thrpt    5    380935.445 ±     446.324   ops/s
[info] ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                   128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                              128  thrpt    5         0.001 ±       0.001    B/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                        128  thrpt    5           ≈ 0                counts
[info] ArrayOfUUIDsBenchmark.writePlayJson                                                               128  thrpt    5     26100.758 ±     758.482   ops/s
[info] ArrayOfUUIDsBenchmark.writePlayJson:·gc.alloc.rate                                                128  thrpt    5      1779.284 ±      51.837  MB/sec
[info] ArrayOfUUIDsBenchmark.writePlayJson:·gc.alloc.rate.norm                                           128  thrpt    5    107288.001 ±       0.249    B/op
[info] ArrayOfUUIDsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                       128  thrpt    5      1885.006 ±    1159.212  MB/sec
[info] ArrayOfUUIDsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5    113712.447 ±   71041.215    B/op
[info] ArrayOfUUIDsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.067 ±       0.119  MB/sec
[info] ArrayOfUUIDsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5         4.007 ±       7.112    B/op
[info] ArrayOfUUIDsBenchmark.writePlayJson:·gc.count                                                     128  thrpt    5        14.000                counts
[info] ArrayOfUUIDsBenchmark.writePlayJson:·gc.time                                                      128  thrpt    5        13.000                    ms
[info] ArrayOfUUIDsBenchmark.writeUPickle                                                                128  thrpt    5      8005.991 ±     130.737   ops/s
[info] ArrayOfUUIDsBenchmark.writeUPickle:·gc.alloc.rate                                                 128  thrpt    5       821.641 ±      13.675  MB/sec
[info] ArrayOfUUIDsBenchmark.writeUPickle:·gc.alloc.rate.norm                                            128  thrpt    5    161472.055 ±       0.007    B/op
[info] ArrayOfUUIDsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space                                        128  thrpt    5       809.228 ±    1161.113  MB/sec
[info] ArrayOfUUIDsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5    159132.806 ±  230093.632    B/op
[info] ArrayOfUUIDsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.025 ±       0.105  MB/sec
[info] ArrayOfUUIDsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5         4.899 ±      20.446    B/op
[info] ArrayOfUUIDsBenchmark.writeUPickle:·gc.count                                                      128  thrpt    5         6.000                counts
[info] ArrayOfUUIDsBenchmark.writeUPickle:·gc.time                                                       128  thrpt    5         5.000                    ms
[info] ArrayOfYearMonthsBenchmark.readCirce                                                              128  thrpt    5     23971.894 ±    1092.953   ops/s
[info] ArrayOfYearMonthsBenchmark.readCirce:·gc.alloc.rate                                               128  thrpt    5      1284.573 ±      58.744  MB/sec
[info] ArrayOfYearMonthsBenchmark.readCirce:·gc.alloc.rate.norm                                          128  thrpt    5     84328.018 ±       0.002    B/op
[info] ArrayOfYearMonthsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                      128  thrpt    5      1345.873 ±       6.512  MB/sec
[info] ArrayOfYearMonthsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5     88362.481 ±    4192.327    B/op
[info] ArrayOfYearMonthsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.050 ±       0.176  MB/sec
[info] ArrayOfYearMonthsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         3.302 ±      11.609    B/op
[info] ArrayOfYearMonthsBenchmark.readCirce:·gc.count                                                    128  thrpt    5        10.000                counts
[info] ArrayOfYearMonthsBenchmark.readCirce:·gc.time                                                     128  thrpt    5         9.000                    ms
[info] ArrayOfYearMonthsBenchmark.readJacksonScala                                                       128  thrpt    5     27972.128 ±     743.680   ops/s
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.alloc.rate                                        128  thrpt    5      1113.327 ±      29.541  MB/sec
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                   128  thrpt    5     62640.016 ±       0.002    B/op
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                               128  thrpt    5      1070.438 ±    1411.190  MB/sec
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5     60282.928 ±   80081.281    B/op
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.033 ±       0.201  MB/sec
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         1.869 ±      11.295    B/op
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.count                                             128  thrpt    5         8.000                counts
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.time                                              128  thrpt    5         8.000                    ms
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala                                                      128  thrpt    5    516173.933 ±   14834.994   ops/s
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.alloc.rate                                       128  thrpt    5      1343.473 ±      37.978  MB/sec
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                  128  thrpt    5      4096.001 ±       0.001    B/op
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                              128  thrpt    5      1348.685 ±       6.345  MB/sec
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5      4112.059 ±     112.497    B/op
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.050 ±       0.134  MB/sec
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         0.153 ±       0.411    B/op
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.count                                            128  thrpt    5        10.000                counts
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.time                                             128  thrpt    5         9.000                    ms
[info] ArrayOfYearMonthsBenchmark.readPlayJson                                                           128  thrpt    5     24234.996 ±     569.603   ops/s
[info] ArrayOfYearMonthsBenchmark.readPlayJson:·gc.alloc.rate                                            128  thrpt    5      1827.004 ±      43.764  MB/sec
[info] ArrayOfYearMonthsBenchmark.readPlayJson:·gc.alloc.rate.norm                                       128  thrpt    5    118632.018 ±       0.002    B/op
[info] ArrayOfYearMonthsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                   128  thrpt    5      1880.160 ±    1155.989  MB/sec
[info] ArrayOfYearMonthsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5    122149.821 ±   76562.029    B/op
[info] ArrayOfYearMonthsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.062 ±       0.170  MB/sec
[info] ArrayOfYearMonthsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         4.058 ±      11.091    B/op
[info] ArrayOfYearMonthsBenchmark.readPlayJson:·gc.count                                                 128  thrpt    5        14.000                counts
[info] ArrayOfYearMonthsBenchmark.readPlayJson:·gc.time                                                  128  thrpt    5        15.000                    ms
[info] ArrayOfYearMonthsBenchmark.readUPickle                                                            128  thrpt    5     25605.439 ±    3267.757   ops/s
[info] ArrayOfYearMonthsBenchmark.readUPickle:·gc.alloc.rate                                             128  thrpt    5      1255.810 ±     159.807  MB/sec
[info] ArrayOfYearMonthsBenchmark.readUPickle:·gc.alloc.rate.norm                                        128  thrpt    5     77176.017 ±       0.004    B/op
[info] ArrayOfYearMonthsBenchmark.readUPickle:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1213.018 ±    1159.044  MB/sec
[info] ArrayOfYearMonthsBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5     74811.192 ±   74509.307    B/op
[info] ArrayOfYearMonthsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.037 ±       0.164  MB/sec
[info] ArrayOfYearMonthsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         2.294 ±       9.924    B/op
[info] ArrayOfYearMonthsBenchmark.readUPickle:·gc.count                                                  128  thrpt    5         9.000                counts
[info] ArrayOfYearMonthsBenchmark.readUPickle:·gc.time                                                   128  thrpt    5         9.000                    ms
[info] ArrayOfYearMonthsBenchmark.writeCirce                                                             128  thrpt    5     58816.836 ±    1389.410   ops/s
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.alloc.rate                                              128  thrpt    5      1630.966 ±      37.862  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.alloc.rate.norm                                         128  thrpt    5     43640.007 ±       0.001    B/op
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                     128  thrpt    5      1615.957 ±    1429.721  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5     43285.981 ±   39309.796    B/op
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.067 ±       0.143  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         1.785 ±       3.861    B/op
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.count                                                   128  thrpt    5        12.000                counts
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.time                                                    128  thrpt    5        10.000                    ms
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala                                                      128  thrpt    5    155384.759 ±    5820.181   ops/s
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.alloc.rate                                       128  thrpt    5      1379.958 ±      52.455  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                  128  thrpt    5     13976.003 ±       0.001    B/op
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                              128  thrpt    5      1340.780 ±      12.063  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5     13580.228 ±     509.200    B/op
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.029 ±       0.091  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         0.296 ±       0.928    B/op
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.count                                            128  thrpt    5        10.000                counts
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.time                                             128  thrpt    5         9.000                    ms
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala                                                     128  thrpt    5   1376288.895 ±    6702.444   ops/s
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.alloc.rate                                      128  thrpt    5      1140.387 ±       6.147  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                 128  thrpt    5      1304.000 ±       0.001    B/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                             128  thrpt    5      1212.457 ±    1159.874  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5      1386.606 ±    1328.823    B/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.054 ±       0.185  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         0.062 ±       0.211    B/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.count                                           128  thrpt    5         9.000                counts
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.time                                            128  thrpt    5         8.000                    ms
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc                                             128  thrpt    5   1480983.036 ±    7882.690   ops/s
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                              128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                         128  thrpt    5        ≈ 10⁻⁴                  B/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                   128  thrpt    5           ≈ 0                counts
[info] ArrayOfYearMonthsBenchmark.writePlayJson                                                          128  thrpt    5    143015.795 ±     648.366   ops/s
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.alloc.rate                                           128  thrpt    5      1519.352 ±       6.869  MB/sec
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.alloc.rate.norm                                      128  thrpt    5     16720.003 ±       0.001    B/op
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                  128  thrpt    5      1474.357 ±    1162.541  MB/sec
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5     16226.800 ±   12851.405    B/op
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.054 ±       0.072  MB/sec
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         0.596 ±       0.790    B/op
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.count                                                128  thrpt    5        11.000                counts
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.time                                                 128  thrpt    5        12.000                    ms
[info] ArrayOfYearMonthsBenchmark.writeUPickle                                                           128  thrpt    5     33296.726 ±     184.661   ops/s
[info] ArrayOfYearMonthsBenchmark.writeUPickle:·gc.alloc.rate                                            128  thrpt    5       691.207 ±       3.858  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeUPickle:·gc.alloc.rate.norm                                       128  thrpt    5     32672.013 ±       0.002    B/op
[info] ArrayOfYearMonthsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space                                   128  thrpt    5       673.054 ±       1.437  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5     31813.996 ±     130.912    B/op
[info] ArrayOfYearMonthsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.342 ±       2.766  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5        16.149 ±     130.672    B/op
[info] ArrayOfYearMonthsBenchmark.writeUPickle:·gc.count                                                 128  thrpt    5         5.000                counts
[info] ArrayOfYearMonthsBenchmark.writeUPickle:·gc.time                                                  128  thrpt    5         5.000                    ms
[info] ArrayOfYearsBenchmark.readJacksonScala                                                            128  thrpt    5     35063.242 ±    1212.524   ops/s
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.alloc.rate                                             128  thrpt    5      1258.766 ±      42.791  MB/sec
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                        128  thrpt    5     56496.013 ±       0.002    B/op
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1205.352 ±    1152.852  MB/sec
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5     54099.524 ±   51759.347    B/op
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.025 ±       0.132  MB/sec
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         1.114 ±       5.863    B/op
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.count                                                  128  thrpt    5         9.000                counts
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.time                                                   128  thrpt    5         9.000                    ms
[info] ArrayOfYearsBenchmark.readJsoniterScala                                                           128  thrpt    5    545112.189 ±   33056.670   ops/s
[info] ArrayOfYearsBenchmark.readJsoniterScala:·gc.alloc.rate                                            128  thrpt    5      1064.102 ±      64.354  MB/sec
[info] ArrayOfYearsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                       128  thrpt    5      3072.001 ±       0.001    B/op
[info] ArrayOfYearsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5      1077.711 ±    1420.853  MB/sec
[info] ArrayOfYearsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5      3108.162 ±    4060.477    B/op
[info] ArrayOfYearsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.029 ±       0.156  MB/sec
[info] ArrayOfYearsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         0.083 ±       0.446    B/op
[info] ArrayOfYearsBenchmark.readJsoniterScala:·gc.count                                                 128  thrpt    5         8.000                counts
[info] ArrayOfYearsBenchmark.readJsoniterScala:·gc.time                                                  128  thrpt    5         6.000                    ms
[info] ArrayOfYearsBenchmark.readPlayJson                                                                128  thrpt    5     26147.442 ±     516.390   ops/s
[info] ArrayOfYearsBenchmark.readPlayJson:·gc.alloc.rate                                                 128  thrpt    5      1869.604 ±      36.851  MB/sec
[info] ArrayOfYearsBenchmark.readPlayJson:·gc.alloc.rate.norm                                            128  thrpt    5    112512.017 ±       0.002    B/op
[info] ArrayOfYearsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                        128  thrpt    5      1880.292 ±    1143.410  MB/sec
[info] ArrayOfYearsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5    113101.520 ±   67483.963    B/op
[info] ArrayOfYearsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.058 ±       0.154  MB/sec
[info] ArrayOfYearsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5         3.503 ±       9.260    B/op
[info] ArrayOfYearsBenchmark.readPlayJson:·gc.count                                                      128  thrpt    5        14.000                counts
[info] ArrayOfYearsBenchmark.readPlayJson:·gc.time                                                       128  thrpt    5        15.000                    ms
[info] ArrayOfYearsBenchmark.readUPickle                                                                 128  thrpt    5     29661.332 ±    1236.572   ops/s
[info] ArrayOfYearsBenchmark.readUPickle:·gc.alloc.rate                                                  128  thrpt    5      1335.285 ±      55.916  MB/sec
[info] ArrayOfYearsBenchmark.readUPickle:·gc.alloc.rate.norm                                             128  thrpt    5     70840.015 ±       0.002    B/op
[info] ArrayOfYearsBenchmark.readUPickle:·gc.churn.PS_Eden_Space                                         128  thrpt    5      1213.476 ±    1161.660  MB/sec
[info] ArrayOfYearsBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5     64247.470 ±   59878.021    B/op
[info] ArrayOfYearsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space                                     128  thrpt    5         0.054 ±       0.185  MB/sec
[info] ArrayOfYearsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5         2.860 ±       9.752    B/op
[info] ArrayOfYearsBenchmark.readUPickle:·gc.count                                                       128  thrpt    5         9.000                counts
[info] ArrayOfYearsBenchmark.readUPickle:·gc.time                                                        128  thrpt    5         8.000                    ms
[info] ArrayOfYearsBenchmark.writeJacksonScala                                                           128  thrpt    5    238152.670 ±    2108.998   ops/s
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.alloc.rate                                            128  thrpt    5       662.186 ±       6.020  MB/sec
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                       128  thrpt    5      4376.002 ±       0.001    B/op
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5       668.023 ±       0.809  MB/sec
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5      4414.596 ±      36.542    B/op
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.445 ±       3.695  MB/sec
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         2.947 ±      24.492    B/op
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.count                                                 128  thrpt    5         5.000                counts
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.time                                                  128  thrpt    5         5.000                    ms
[info] ArrayOfYearsBenchmark.writeJsoniterScala                                                          128  thrpt    5   1649170.949 ±   53749.376   ops/s
[info] ArrayOfYearsBenchmark.writeJsoniterScala:·gc.alloc.rate                                           128  thrpt    5       964.031 ±      31.413  MB/sec
[info] ArrayOfYearsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                      128  thrpt    5       920.000 ±       0.001    B/op
[info] ArrayOfYearsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5       942.398 ±    1419.662  MB/sec
[info] ArrayOfYearsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5       898.631 ±    1344.151    B/op
[info] ArrayOfYearsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.017 ±       0.105  MB/sec
[info] ArrayOfYearsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         0.016 ±       0.100    B/op
[info] ArrayOfYearsBenchmark.writeJsoniterScala:·gc.count                                                128  thrpt    5         7.000                counts
[info] ArrayOfYearsBenchmark.writeJsoniterScala:·gc.time                                                 128  thrpt    5         6.000                    ms
[info] ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc                                                  128  thrpt    5   1553667.510 ±    7858.963   ops/s
[info] ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                   128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                              128  thrpt    5        ≈ 10⁻⁴                  B/op
[info] ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                        128  thrpt    5           ≈ 0                counts
[info] ArrayOfYearsBenchmark.writePlayJson                                                               128  thrpt    5    181426.867 ±    2763.819   ops/s
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.alloc.rate                                                128  thrpt    5      1175.129 ±      18.484  MB/sec
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.alloc.rate.norm                                           128  thrpt    5     10192.002 ±       0.001    B/op
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                       128  thrpt    5      1203.034 ±    1152.125  MB/sec
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5     10427.013 ±    9900.751    B/op
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.054 ±       0.156  MB/sec
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5         0.469 ±       1.355    B/op
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.count                                                     128  thrpt    5         9.000                counts
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.time                                                      128  thrpt    5        11.000                    ms
[info] ArrayOfYearsBenchmark.writeUPickle                                                                128  thrpt    5     50361.768 ±     597.852   ops/s
[info] ArrayOfYearsBenchmark.writeUPickle:·gc.alloc.rate                                                 128  thrpt    5       528.920 ±       6.394  MB/sec
[info] ArrayOfYearsBenchmark.writeUPickle:·gc.alloc.rate.norm                                            128  thrpt    5     16528.009 ±       0.001    B/op
[info] ArrayOfYearsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space                                        128  thrpt    5       506.442 ±    1123.081  MB/sec
[info] ArrayOfYearsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5     15818.176 ±   35031.741    B/op
[info] ArrayOfYearsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.336 ±       2.757  MB/sec
[info] ArrayOfYearsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5        10.482 ±      86.127    B/op
[info] ArrayOfYearsBenchmark.writeUPickle:·gc.count                                                      128  thrpt    5         4.000                counts
[info] ArrayOfYearsBenchmark.writeUPickle:·gc.time                                                       128  thrpt    5         6.000                    ms
[info] ArrayOfZoneIdsBenchmark.readCirce                                                                 128  thrpt    5     73396.003 ±     722.184   ops/s
[info] ArrayOfZoneIdsBenchmark.readCirce:·gc.alloc.rate                                                  128  thrpt    5      1556.615 ±      15.508  MB/sec
[info] ArrayOfZoneIdsBenchmark.readCirce:·gc.alloc.rate.norm                                             128  thrpt    5     33376.006 ±       0.001    B/op
[info] ArrayOfZoneIdsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                         128  thrpt    5      1479.635 ±    1153.993  MB/sec
[info] ArrayOfZoneIdsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5     31719.077 ±   24546.340    B/op
[info] ArrayOfZoneIdsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                     128  thrpt    5         0.029 ±       0.156  MB/sec
[info] ArrayOfZoneIdsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5         0.625 ±       3.350    B/op
[info] ArrayOfZoneIdsBenchmark.readCirce:·gc.count                                                       128  thrpt    5        11.000                counts
[info] ArrayOfZoneIdsBenchmark.readCirce:·gc.time                                                        128  thrpt    5        10.000                    ms
[info] ArrayOfZoneIdsBenchmark.readJacksonScala                                                          128  thrpt    5     92930.505 ±    1866.781   ops/s
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.alloc.rate                                           128  thrpt    5      1157.902 ±      23.147  MB/sec
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                      128  thrpt    5     19608.005 ±       0.001    B/op
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5      1202.383 ±    1151.389  MB/sec
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5     20381.372 ±   19752.505    B/op
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.046 ±       0.183  MB/sec
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         0.777 ±       3.098    B/op
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.count                                                128  thrpt    5         9.000                counts
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.time                                                 128  thrpt    5         9.000                    ms
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala                                                         128  thrpt    5    104928.329 ±    2392.646   ops/s
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.alloc.rate                                          128  thrpt    5      1260.905 ±      28.394  MB/sec
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                     128  thrpt    5     18912.004 ±       0.001    B/op
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5      1345.127 ±       7.016  MB/sec
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5     20175.651 ±     349.071    B/op
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.075 ±       0.231  MB/sec
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         1.126 ±       3.473    B/op
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.count                                               128  thrpt    5        10.000                counts
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.time                                                128  thrpt    5        10.000                    ms
[info] ArrayOfZoneIdsBenchmark.readPlayJson                                                              128  thrpt    5     48778.654 ±    1587.840   ops/s
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.alloc.rate                                               128  thrpt    5      2323.202 ±      75.516  MB/sec
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.alloc.rate.norm                                          128  thrpt    5     74944.009 ±       0.001    B/op
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                      128  thrpt    5      2292.743 ±    1424.375  MB/sec
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5     73966.867 ±   46056.037    B/op
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.067 ±       0.105  MB/sec
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         2.147 ±       3.350    B/op
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.count                                                    128  thrpt    5        17.000                counts
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.time                                                     128  thrpt    5        16.000                    ms
[info] ArrayOfZoneIdsBenchmark.readUPickle                                                               128  thrpt    5     69814.847 ±    2377.746   ops/s
[info] ArrayOfZoneIdsBenchmark.readUPickle:·gc.alloc.rate                                                128  thrpt    5      1542.900 ±      53.007  MB/sec
[info] ArrayOfZoneIdsBenchmark.readUPickle:·gc.alloc.rate.norm                                           128  thrpt    5     34776.006 ±       0.001    B/op
[info] ArrayOfZoneIdsBenchmark.readUPickle:·gc.churn.PS_Eden_Space                                       128  thrpt    5      1616.722 ±    1424.812  MB/sec
[info] ArrayOfZoneIdsBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5     36446.526 ±   32239.186    B/op
[info] ArrayOfZoneIdsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.062 ±       0.247  MB/sec
[info] ArrayOfZoneIdsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5         1.404 ±       5.542    B/op
[info] ArrayOfZoneIdsBenchmark.readUPickle:·gc.count                                                     128  thrpt    5        12.000                counts
[info] ArrayOfZoneIdsBenchmark.readUPickle:·gc.time                                                      128  thrpt    5        11.000                    ms
[info] ArrayOfZoneIdsBenchmark.writeCirce                                                                128  thrpt    5    120208.560 ±    1287.020   ops/s
[info] ArrayOfZoneIdsBenchmark.writeCirce:·gc.alloc.rate                                                 128  thrpt    5      1128.033 ±      12.029  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeCirce:·gc.alloc.rate.norm                                            128  thrpt    5     14768.004 ±       0.001    B/op
[info] ArrayOfZoneIdsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                        128  thrpt    5      1071.165 ±    1410.095  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5     14025.642 ±   18486.507    B/op
[info] ArrayOfZoneIdsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.025 ±       0.088  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5         0.327 ±       1.150    B/op
[info] ArrayOfZoneIdsBenchmark.writeCirce:·gc.count                                                      128  thrpt    5         8.000                counts
[info] ArrayOfZoneIdsBenchmark.writeCirce:·gc.time                                                       128  thrpt    5         7.000                    ms
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala                                                         128  thrpt    5    345790.539 ±    7100.264   ops/s
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.alloc.rate                                          128  thrpt    5       513.255 ±      10.522  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                     128  thrpt    5      2336.001 ±       0.001    B/op
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5       471.356 ±    1057.709  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5      2145.129 ±    4826.036    B/op
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.527 ±       4.360  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         2.401 ±      19.860    B/op
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.count                                               128  thrpt    5         4.000                counts
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.time                                                128  thrpt    5         9.000                    ms
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala                                                        128  thrpt    5    666721.653 ±   26448.390   ops/s
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.alloc.rate                                         128  thrpt    5       827.025 ±      32.411  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                    128  thrpt    5      1952.001 ±       0.001    B/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                128  thrpt    5       805.991 ±    1155.734  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5      1905.164 ±    2779.990    B/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.029 ±       0.091  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         0.069 ±       0.215    B/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.count                                              128  thrpt    5         6.000                counts
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.time                                               128  thrpt    5         5.000                    ms
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc                                                128  thrpt    5    715487.490 ±   19862.485   ops/s
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                 128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                            128  thrpt    5         0.001 ±       0.001    B/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                      128  thrpt    5           ≈ 0                counts
[info] ArrayOfZoneIdsBenchmark.writePlayJson                                                             128  thrpt    5    204562.237 ±    4564.355   ops/s
[info] ArrayOfZoneIdsBenchmark.writePlayJson:·gc.alloc.rate                                              128  thrpt    5       668.628 ±      14.946  MB/sec
[info] ArrayOfZoneIdsBenchmark.writePlayJson:·gc.alloc.rate.norm                                         128  thrpt    5      5144.002 ±       0.001    B/op
[info] ArrayOfZoneIdsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                     128  thrpt    5       668.320 ±       0.665  MB/sec
[info] ArrayOfZoneIdsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5      5141.776 ±     120.028    B/op
[info] ArrayOfZoneIdsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.502 ±       4.190  MB/sec
[info] ArrayOfZoneIdsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         3.900 ±      32.546    B/op
[info] ArrayOfZoneIdsBenchmark.writePlayJson:·gc.count                                                   128  thrpt    5         5.000                counts
[info] ArrayOfZoneIdsBenchmark.writePlayJson:·gc.time                                                    128  thrpt    5         6.000                    ms
[info] ArrayOfZoneIdsBenchmark.writeUPickle                                                              128  thrpt    5     26838.963 ±     435.675   ops/s
[info] ArrayOfZoneIdsBenchmark.writeUPickle:·gc.alloc.rate                                               128  thrpt    5       361.684 ±       5.932  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeUPickle:·gc.alloc.rate.norm                                          128  thrpt    5     21208.016 ±       0.002    B/op
[info] ArrayOfZoneIdsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space                                      128  thrpt    5       306.974 ±    1079.058  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5     18038.426 ±   63408.508    B/op
[info] ArrayOfZoneIdsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.010 ±       0.054  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         0.559 ±       3.188    B/op
[info] ArrayOfZoneIdsBenchmark.writeUPickle:·gc.count                                                    128  thrpt    5         3.000                counts
[info] ArrayOfZoneIdsBenchmark.writeUPickle:·gc.time                                                     128  thrpt    5         7.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.readCirce                                                             128  thrpt    5    123950.314 ±    4635.794   ops/s
[info] ArrayOfZoneOffsetsBenchmark.readCirce:·gc.alloc.rate                                              128  thrpt    5      1699.907 ±      63.857  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readCirce:·gc.alloc.rate.norm                                         128  thrpt    5     21584.004 ±       0.001    B/op
[info] ArrayOfZoneOffsetsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                     128  thrpt    5      1750.591 ±    1420.926  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5     22233.137 ±   18141.299    B/op
[info] ArrayOfZoneOffsetsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.046 ±       0.132  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         0.580 ±       1.663    B/op
[info] ArrayOfZoneOffsetsBenchmark.readCirce:·gc.count                                                   128  thrpt    5        13.000                counts
[info] ArrayOfZoneOffsetsBenchmark.readCirce:·gc.time                                                    128  thrpt    5        11.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala                                                      128  thrpt    5    185785.588 ±    9901.895   ops/s
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.alloc.rate                                       128  thrpt    5      1107.722 ±      59.033  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                  128  thrpt    5      9384.002 ±       0.001    B/op
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                              128  thrpt    5      1070.434 ±    1411.091  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5      9052.506 ±   11751.252    B/op
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.025 ±       0.105  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         0.210 ±       0.883    B/op
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.count                                            128  thrpt    5         8.000                counts
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.time                                             128  thrpt    5         7.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala                                                     128  thrpt    5    512401.492 ±   21625.323   ops/s
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.alloc.rate                                      128  thrpt    5       994.926 ±      41.831  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                 128  thrpt    5      3056.001 ±       0.001    B/op
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                             128  thrpt    5      1077.125 ±    1420.117  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5      3306.315 ±    4333.704    B/op
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.033 ±       0.134  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         0.102 ±       0.415    B/op
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.count                                           128  thrpt    5         8.000                counts
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.time                                            128  thrpt    5         7.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson                                                          128  thrpt    5     69799.450 ±    2763.028   ops/s
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.alloc.rate                                           128  thrpt    5      2900.898 ±     113.520  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.alloc.rate.norm                                      128  thrpt    5     65400.006 ±       0.001    B/op
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                  128  thrpt    5      2976.098 ±    1414.937  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5     67156.832 ±   34209.716    B/op
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.062 ±       0.098  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         1.407 ±       2.192    B/op
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.count                                                128  thrpt    5        22.000                counts
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.time                                                 128  thrpt    5        23.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.readUPickle                                                           128  thrpt    5     88426.824 ±    9659.675   ops/s
[info] ArrayOfZoneOffsetsBenchmark.readUPickle:·gc.alloc.rate                                            128  thrpt    5      1340.536 ±     145.892  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readUPickle:·gc.alloc.rate.norm                                       128  thrpt    5     23856.005 ±       0.001    B/op
[info] ArrayOfZoneOffsetsBenchmark.readUPickle:·gc.churn.PS_Eden_Space                                   128  thrpt    5      1348.745 ±       7.026  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5     24016.507 ±    2456.227    B/op
[info] ArrayOfZoneOffsetsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.050 ±       0.134  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         0.888 ±       2.405    B/op
[info] ArrayOfZoneOffsetsBenchmark.readUPickle:·gc.count                                                 128  thrpt    5        10.000                counts
[info] ArrayOfZoneOffsetsBenchmark.readUPickle:·gc.time                                                  128  thrpt    5         9.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.writeCirce                                                            128  thrpt    5    170566.684 ±    1513.774   ops/s
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.alloc.rate                                             128  thrpt    5      1090.742 ±       9.974  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.alloc.rate.norm                                        128  thrpt    5     10064.003 ±       0.001    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1073.530 ±    1415.369  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5      9906.929 ±   13080.151    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.033 ±       0.122  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         0.307 ±       1.122    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.count                                                  128  thrpt    5         8.000                counts
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.time                                                   128  thrpt    5         7.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala                                                     128  thrpt    5    539700.520 ±   19166.736   ops/s
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.alloc.rate                                      128  thrpt    5       532.239 ±      18.541  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                 128  thrpt    5      1552.001 ±       0.001    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                             128  thrpt    5       503.100 ±    1113.810  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5      1466.063 ±    3233.244    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.433 ±       3.555  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         1.259 ±      10.328    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.count                                           128  thrpt    5         4.000                counts
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.time                                            128  thrpt    5         6.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala                                                    128  thrpt    5   1145872.685 ±   86767.272   ops/s
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.alloc.rate                                     128  thrpt    5       850.569 ±      64.010  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                128  thrpt    5      1168.000 ±       0.001    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                            128  thrpt    5       942.462 ±    1420.974  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5      1298.786 ±    2013.934    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.037 ±       0.132  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         0.051 ±       0.180    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.count                                          128  thrpt    5         7.000                counts
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.time                                           128  thrpt    5         5.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc                                            128  thrpt    5   1129175.742 ±   21459.211   ops/s
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                             128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                        128  thrpt    5        ≈ 10⁻³                  B/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                  128  thrpt    5           ≈ 0                counts
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson                                                         128  thrpt    5    324133.790 ±   20499.486   ops/s
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.alloc.rate                                          128  thrpt    5       884.756 ±      55.996  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.alloc.rate.norm                                     128  thrpt    5      4296.001 ±       0.001    B/op
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                 128  thrpt    5       933.977 ±    1408.117  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5      4541.930 ±    6928.034    B/op
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.029 ±       0.072  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         0.142 ±       0.347    B/op
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.count                                               128  thrpt    5         7.000                counts
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.time                                                128  thrpt    5         8.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.writeUPickle                                                          128  thrpt    5     44420.426 ±    1608.627   ops/s
[info] ArrayOfZoneOffsetsBenchmark.writeUPickle:·gc.alloc.rate                                           128  thrpt    5       335.329 ±      12.243  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeUPickle:·gc.alloc.rate.norm                                      128  thrpt    5     11880.010 ±       0.001    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space                                  128  thrpt    5       306.950 ±    1078.974  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5     10834.208 ±   38083.784    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.012 ±       0.088  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         0.409 ±       3.092    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeUPickle:·gc.count                                                128  thrpt    5         3.000                counts
[info] ArrayOfZoneOffsetsBenchmark.writeUPickle:·gc.time                                                 128  thrpt    5         6.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.readCirce                                                          128  thrpt    5       706.717 ±      11.049   ops/s
[info] ArrayOfZonedDateTimesBenchmark.readCirce:·gc.alloc.rate                                           128  thrpt    5      1477.627 ±      29.515  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readCirce:·gc.alloc.rate.norm                                      128  thrpt    5   3289667.989 ±   51204.952    B/op
[info] ArrayOfZonedDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space                                  128  thrpt    5      1468.869 ±    1135.895  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5   3268342.937 ± 2472243.699    B/op
[info] ArrayOfZonedDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.029 ±       0.091  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5        64.692 ±     202.059    B/op
[info] ArrayOfZonedDateTimesBenchmark.readCirce:·gc.count                                                128  thrpt    5        11.000                counts
[info] ArrayOfZonedDateTimesBenchmark.readCirce:·gc.time                                                 128  thrpt    5        11.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala                                                   128  thrpt    5       650.854 ±      74.626   ops/s
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.alloc.rate                                    128  thrpt    5      1350.037 ±     155.435  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm                               128  thrpt    5   3263530.401 ±     127.866    B/op
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                           128  thrpt    5      1328.807 ±      14.617  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5   3214743.499 ±  408209.443    B/op
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.033 ±       0.091  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5        81.631 ±     229.259    B/op
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.count                                         128  thrpt    5        10.000                counts
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.time                                          128  thrpt    5        10.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala                                                  128  thrpt    5     39443.867 ±     786.078   ops/s
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate                                   128  thrpt    5       694.345 ±      13.900  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                              128  thrpt    5     27704.011 ±       0.002    B/op
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                          128  thrpt    5       668.046 ±       4.207  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5     26655.112 ±     387.158    B/op
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                      128  thrpt    5         0.731 ±       6.162  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5        29.122 ±     245.394    B/op
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.count                                        128  thrpt    5         5.000                counts
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.time                                         128  thrpt    5         6.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson                                                       128  thrpt    5       633.881 ±      25.616   ops/s
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.alloc.rate                                        128  thrpt    5      1355.872 ±      53.666  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.alloc.rate.norm                                   128  thrpt    5   3364926.781 ±      34.040    B/op
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                               128  thrpt    5      1329.800 ±      14.882  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5   3300462.415 ±  116719.914    B/op
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.021 ±       0.057  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5        51.838 ±     143.005    B/op
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.count                                             128  thrpt    5        10.000                counts
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.time                                              128  thrpt    5         9.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.readUPickle                                                        128  thrpt    5       661.035 ±       6.849   ops/s
[info] ArrayOfZonedDateTimesBenchmark.readUPickle:·gc.alloc.rate                                         128  thrpt    5      1375.996 ±      14.039  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readUPickle:·gc.alloc.rate.norm                                    128  thrpt    5   3275289.423 ±      84.787    B/op
[info] ArrayOfZonedDateTimesBenchmark.readUPickle:·gc.churn.PS_Eden_Space                                128  thrpt    5      1336.081 ±      11.177  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5   3180298.350 ±   44580.375    B/op
[info] ArrayOfZonedDateTimesBenchmark.readUPickle:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.025 ±       0.088  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5        59.398 ±     208.794    B/op
[info] ArrayOfZonedDateTimesBenchmark.readUPickle:·gc.count                                              128  thrpt    5        10.000                counts
[info] ArrayOfZonedDateTimesBenchmark.readUPickle:·gc.time                                               128  thrpt    5         9.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.writeCirce                                                         128  thrpt    5     13057.261 ±     412.405   ops/s
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.alloc.rate                                          128  thrpt    5      1063.902 ±      33.410  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.alloc.rate.norm                                     128  thrpt    5    128215.137 ±     104.936    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                 128  thrpt    5      1063.429 ±    1400.200  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5    128221.430 ±  169519.339    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.029 ±       0.209  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         3.502 ±      25.043    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.count                                               128  thrpt    5         8.000                counts
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.time                                                128  thrpt    5        11.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala                                                  128  thrpt    5     15290.171 ±     908.456   ops/s
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate                                   128  thrpt    5       963.095 ±      56.852  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                              128  thrpt    5     99120.028 ±       0.287    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                          128  thrpt    5       928.252 ±    1398.294  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5     95852.479 ±  148293.996    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                      128  thrpt    5         0.029 ±       0.122  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5         3.027 ±      12.666    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.count                                        128  thrpt    5         7.000                counts
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.time                                         128  thrpt    5         7.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala                                                 128  thrpt    5    278250.259 ±    8891.258   ops/s
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate                                  128  thrpt    5      1008.567 ±      32.432  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                             128  thrpt    5      5704.002 ±       0.001    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                         128  thrpt    5      1067.828 ±    1406.973  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5      6046.731 ±    8049.467    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.054 ±       0.224  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5         0.307 ±       1.269    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.count                                       128  thrpt    5         8.000                counts
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.time                                        128  thrpt    5         7.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc                                         128  thrpt    5    286104.355 ±    3524.089   ops/s
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                          128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                     128  thrpt    5         0.002 ±       0.001    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count                               128  thrpt    5           ≈ 0                counts
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson                                                      128  thrpt    5     14892.025 ±     985.949   ops/s
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.alloc.rate                                       128  thrpt    5      1012.709 ±      66.995  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.alloc.rate.norm                                  128  thrpt    5    107016.286 ±      31.000    B/op
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                              128  thrpt    5      1062.787 ±    1402.089  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5    112307.431 ±  148071.268    B/op
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.025 ±       0.174  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         2.629 ±      18.191    B/op
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.count                                            128  thrpt    5         8.000                counts
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.time                                             128  thrpt    5         8.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.writeUPickle                                                       128  thrpt    5      6966.579 ±      84.033   ops/s
[info] ArrayOfZonedDateTimesBenchmark.writeUPickle:·gc.alloc.rate                                        128  thrpt    5       776.496 ±       9.112  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeUPickle:·gc.alloc.rate.norm                                   128  thrpt    5    175400.063 ±       0.008    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeUPickle:·gc.churn.PS_Eden_Space                               128  thrpt    5       667.822 ±       2.825  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5    150853.291 ±    2005.788    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.017 ±       0.067  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         3.763 ±      15.129    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeUPickle:·gc.count                                             128  thrpt    5         5.000                counts
[info] ArrayOfZonedDateTimesBenchmark.writeUPickle:·gc.time                                              128  thrpt    5         4.000                    ms
[info] BitSetBenchmark.readJsoniterScala                                                                 128  thrpt    5   1088614.199 ±    1778.369   ops/s
[info] BitSetBenchmark.readJsoniterScala:·gc.alloc.rate                                                  128  thrpt    5        44.268 ±       0.082  MB/sec
[info] BitSetBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                             128  thrpt    5        64.000 ±       0.001    B/op
[info] BitSetBenchmark.readJsoniterScala:·gc.count                                                       128  thrpt    5           ≈ 0                counts
[info] BitSetBenchmark.readPlayJson                                                                      128  thrpt    5     73050.812 ±    1063.040   ops/s
[info] BitSetBenchmark.readPlayJson:·gc.alloc.rate                                                       128  thrpt    5      3200.443 ±      47.694  MB/sec
[info] BitSetBenchmark.readPlayJson:·gc.alloc.rate.norm                                                  128  thrpt    5     68944.006 ±       0.001    B/op
[info] BitSetBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                              128  thrpt    5      3251.101 ±    1162.678  MB/sec
[info] BitSetBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                         128  thrpt    5     70044.482 ±   25446.980    B/op
[info] BitSetBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                          128  thrpt    5         0.067 ±       0.132  MB/sec
[info] BitSetBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                     128  thrpt    5         1.435 ±       2.835    B/op
[info] BitSetBenchmark.readPlayJson:·gc.count                                                            128  thrpt    5        24.000                counts
[info] BitSetBenchmark.readPlayJson:·gc.time                                                             128  thrpt    5        24.000                    ms
[info] BitSetBenchmark.writeJacksonScala                                                                 128  thrpt    5   1586009.345 ±   65829.617   ops/s
[info] BitSetBenchmark.writeJacksonScala:·gc.alloc.rate                                                  128  thrpt    5       886.910 ±      37.212  MB/sec
[info] BitSetBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                             128  thrpt    5       880.000 ±       0.001    B/op
[info] BitSetBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                         128  thrpt    5       935.212 ±    1409.197  MB/sec
[info] BitSetBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5       926.977 ±    1384.168    B/op
[info] BitSetBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                     128  thrpt    5         0.042 ±       0.150  MB/sec
[info] BitSetBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5         0.041 ±       0.148    B/op
[info] BitSetBenchmark.writeJacksonScala:·gc.count                                                       128  thrpt    5         7.000                counts
[info] BitSetBenchmark.writeJacksonScala:·gc.time                                                        128  thrpt    5         6.000                    ms
[info] BitSetBenchmark.writeJsoniterScala                                                                128  thrpt    5   1828402.130 ±   11485.669   ops/s
[info] BitSetBenchmark.writeJsoniterScala:·gc.alloc.rate                                                 128  thrpt    5       511.219 ±       3.253  MB/sec
[info] BitSetBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                            128  thrpt    5       440.000 ±       0.001    B/op
[info] BitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                        128  thrpt    5       473.952 ±    1066.607  MB/sec
[info] BitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5       408.037 ±     918.006    B/op
[info] BitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.331 ±       2.765  MB/sec
[info] BitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5         0.285 ±       2.381    B/op
[info] BitSetBenchmark.writeJsoniterScala:·gc.count                                                      128  thrpt    5         4.000                counts
[info] BitSetBenchmark.writeJsoniterScala:·gc.time                                                       128  thrpt    5         6.000                    ms
[info] BitSetBenchmark.writeJsoniterScalaPrealloc                                                        128  thrpt    5   1939823.957 ±    2367.663   ops/s
[info] BitSetBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                         128  thrpt    5        19.722 ±       0.027  MB/sec
[info] BitSetBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                    128  thrpt    5        16.000 ±       0.001    B/op
[info] BitSetBenchmark.writeJsoniterScalaPrealloc:·gc.count                                              128  thrpt    5           ≈ 0                counts
[info] BitSetBenchmark.writePlayJson                                                                     128  thrpt    5     37748.927 ±     460.632   ops/s
[info] BitSetBenchmark.writePlayJson:·gc.alloc.rate                                                      128  thrpt    5      1646.621 ±      19.903  MB/sec
[info] BitSetBenchmark.writePlayJson:·gc.alloc.rate.norm                                                 128  thrpt    5     68648.012 ±       0.001    B/op
[info] BitSetBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                             128  thrpt    5      1609.068 ±    1402.698  MB/sec
[info] BitSetBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                        128  thrpt    5     67092.161 ±   58692.650    B/op
[info] BitSetBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                         128  thrpt    5         0.042 ±       0.170  MB/sec
[info] BitSetBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                                    128  thrpt    5         1.737 ±       7.085    B/op
[info] BitSetBenchmark.writePlayJson:·gc.count                                                           128  thrpt    5        12.000                counts
[info] BitSetBenchmark.writePlayJson:·gc.time                                                            128  thrpt    5        13.000                    ms
[info] ExtractFieldsBenchmark.readCirce                                                                  N/A  thrpt    5    786054.460 ±   16609.690   ops/s
[info] ExtractFieldsBenchmark.readCirce:·gc.alloc.rate                                                   N/A  thrpt    5      2561.399 ±      54.775  MB/sec
[info] ExtractFieldsBenchmark.readCirce:·gc.alloc.rate.norm                                              N/A  thrpt    5      5128.001 ±       0.001    B/op
[info] ExtractFieldsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                          N/A  thrpt    5      2573.339 ±    1159.023  MB/sec
[info] ExtractFieldsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                     N/A  thrpt    5      5149.975 ±    2250.597    B/op
[info] ExtractFieldsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                      N/A  thrpt    5         0.058 ±       0.191  MB/sec
[info] ExtractFieldsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                 N/A  thrpt    5         0.117 ±       0.382    B/op
[info] ExtractFieldsBenchmark.readCirce:·gc.count                                                        N/A  thrpt    5        19.000                counts
[info] ExtractFieldsBenchmark.readCirce:·gc.time                                                         N/A  thrpt    5        16.000                    ms
[info] ExtractFieldsBenchmark.readDslJsonJava                                                            N/A  thrpt    5   5094648.267 ±  369491.677   ops/s
[info] ExtractFieldsBenchmark.readDslJsonJava:·gc.alloc.rate                                             N/A  thrpt    5       310.767 ±      22.514  MB/sec
[info] ExtractFieldsBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                        N/A  thrpt    5        96.000 ±       0.001    B/op
[info] ExtractFieldsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                                    N/A  thrpt    5       306.972 ±    1079.050  MB/sec
[info] ExtractFieldsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                               N/A  thrpt    5        94.464 ±     332.081    B/op
[info] ExtractFieldsBenchmark.readDslJsonJava:·gc.count                                                  N/A  thrpt    5         3.000                counts
[info] ExtractFieldsBenchmark.readDslJsonJava:·gc.time                                                   N/A  thrpt    5         6.000                    ms
[info] ExtractFieldsBenchmark.readJacksonScala                                                           N/A  thrpt    5    991421.090 ±   31620.393   ops/s
[info] ExtractFieldsBenchmark.readJacksonScala:·gc.alloc.rate                                            N/A  thrpt    5      1229.753 ±      39.448  MB/sec
[info] ExtractFieldsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                       N/A  thrpt    5      1952.000 ±       0.001    B/op
[info] ExtractFieldsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                   N/A  thrpt    5      1202.917 ±    1149.535  MB/sec
[info] ExtractFieldsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                              N/A  thrpt    5      1908.742 ±    1816.016    B/op
[info] ExtractFieldsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                               N/A  thrpt    5         0.050 ±       0.134  MB/sec
[info] ExtractFieldsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                          N/A  thrpt    5         0.079 ±       0.211    B/op
[info] ExtractFieldsBenchmark.readJacksonScala:·gc.count                                                 N/A  thrpt    5         9.000                counts
[info] ExtractFieldsBenchmark.readJacksonScala:·gc.time                                                  N/A  thrpt    5         9.000                    ms
[info] ExtractFieldsBenchmark.readJsoniterScala                                                          N/A  thrpt    5   7960793.524 ±   64176.658   ops/s
[info] ExtractFieldsBenchmark.readJsoniterScala:·gc.alloc.rate                                           N/A  thrpt    5       364.276 ±       2.946  MB/sec
[info] ExtractFieldsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                      N/A  thrpt    5        72.000 ±       0.001    B/op
[info] ExtractFieldsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                  N/A  thrpt    5       306.917 ±    1078.856  MB/sec
[info] ExtractFieldsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                             N/A  thrpt    5        60.715 ±     213.422    B/op
[info] ExtractFieldsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                              N/A  thrpt    5         0.009 ±       0.060  MB/sec
[info] ExtractFieldsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                         N/A  thrpt    5         0.002 ±       0.012    B/op
[info] ExtractFieldsBenchmark.readJsoniterScala:·gc.count                                                N/A  thrpt    5         3.000                counts
[info] ExtractFieldsBenchmark.readJsoniterScala:·gc.time                                                 N/A  thrpt    5         5.000                    ms
[info] ExtractFieldsBenchmark.readPlayJson                                                               N/A  thrpt    5    302663.820 ±    7947.473   ops/s
[info] ExtractFieldsBenchmark.readPlayJson:·gc.alloc.rate                                                N/A  thrpt    5      1676.927 ±      43.963  MB/sec
[info] ExtractFieldsBenchmark.readPlayJson:·gc.alloc.rate.norm                                           N/A  thrpt    5      8720.001 ±       0.001    B/op
[info] ExtractFieldsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                       N/A  thrpt    5      1742.003 ±    1414.043  MB/sec
[info] ExtractFieldsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                  N/A  thrpt    5      9062.562 ±    7437.299    B/op
[info] ExtractFieldsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                   N/A  thrpt    5         0.050 ±       0.146  MB/sec
[info] ExtractFieldsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                              N/A  thrpt    5         0.260 ±       0.758    B/op
[info] ExtractFieldsBenchmark.readPlayJson:·gc.count                                                     N/A  thrpt    5        13.000                counts
[info] ExtractFieldsBenchmark.readPlayJson:·gc.time                                                      N/A  thrpt    5        13.000                    ms
[info] ExtractFieldsBenchmark.readUPickle                                                                N/A  thrpt    5    606880.273 ±    1842.508   ops/s
[info] ExtractFieldsBenchmark.readUPickle:·gc.alloc.rate                                                 N/A  thrpt    5      1311.107 ±       3.792  MB/sec
[info] ExtractFieldsBenchmark.readUPickle:·gc.alloc.rate.norm                                            N/A  thrpt    5      3400.001 ±       0.001    B/op
[info] ExtractFieldsBenchmark.readUPickle:·gc.churn.PS_Eden_Space                                        N/A  thrpt    5      1348.317 ±       5.075  MB/sec
[info] ExtractFieldsBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm                                   N/A  thrpt    5      3496.497 ±      19.475    B/op
[info] ExtractFieldsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space                                    N/A  thrpt    5         0.075 ±       0.166  MB/sec
[info] ExtractFieldsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm                               N/A  thrpt    5         0.194 ±       0.431    B/op
[info] ExtractFieldsBenchmark.readUPickle:·gc.count                                                      N/A  thrpt    5        10.000                counts
[info] ExtractFieldsBenchmark.readUPickle:·gc.time                                                       N/A  thrpt    5         9.000                    ms
[info] GeoJSONBenchmark.readCirce                                                                        N/A  thrpt    5      3748.331 ±      69.106   ops/s
[info] GeoJSONBenchmark.readCirce:·gc.alloc.rate                                                         N/A  thrpt    5      1859.454 ±      34.058  MB/sec
[info] GeoJSONBenchmark.readCirce:·gc.alloc.rate.norm                                                    N/A  thrpt    5    780640.117 ±       0.014    B/op
[info] GeoJSONBenchmark.readCirce:·gc.churn.PS_Eden_Space                                                N/A  thrpt    5      1884.818 ±    1166.061  MB/sec
[info] GeoJSONBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                           N/A  thrpt    5    791503.008 ±  494439.923    B/op
[info] GeoJSONBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                            N/A  thrpt    5         0.100 ±       0.174  MB/sec
[info] GeoJSONBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                       N/A  thrpt    5        41.997 ±      73.498    B/op
[info] GeoJSONBenchmark.readCirce:·gc.count                                                              N/A  thrpt    5        14.000                counts
[info] GeoJSONBenchmark.readCirce:·gc.time                                                               N/A  thrpt    5        14.000                    ms
[info] GeoJSONBenchmark.readJacksonScala                                                                 N/A  thrpt    5      5076.884 ±     272.482   ops/s
[info] GeoJSONBenchmark.readJacksonScala:·gc.alloc.rate                                                  N/A  thrpt    5      2126.632 ±     114.210  MB/sec
[info] GeoJSONBenchmark.readJacksonScala:·gc.alloc.rate.norm                                             N/A  thrpt    5    659096.085 ±       0.005    B/op
[info] GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                         N/A  thrpt    5      2149.038 ±    1142.627  MB/sec
[info] GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                    N/A  thrpt    5    666853.177 ±  384473.546    B/op
[info] GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                     N/A  thrpt    5         0.037 ±       0.105  MB/sec
[info] GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                                N/A  thrpt    5        11.688 ±      33.083    B/op
[info] GeoJSONBenchmark.readJacksonScala:·gc.count                                                       N/A  thrpt    5        16.000                counts
[info] GeoJSONBenchmark.readJacksonScala:·gc.time                                                        N/A  thrpt    5        17.000                    ms
[info] GeoJSONBenchmark.readJsoniterScala                                                                N/A  thrpt    5     42463.709 ±    3737.593   ops/s
[info] GeoJSONBenchmark.readJsoniterScala:·gc.alloc.rate                                                 N/A  thrpt    5       706.640 ±      62.009  MB/sec
[info] GeoJSONBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                            N/A  thrpt    5     26184.010 ±       0.001    B/op
[info] GeoJSONBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                        N/A  thrpt    5       673.303 ±       1.437  MB/sec
[info] GeoJSONBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                                   N/A  thrpt    5     24959.430 ±    2260.241    B/op
[info] GeoJSONBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                    N/A  thrpt    5         0.339 ±       2.785  MB/sec
[info] GeoJSONBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                               N/A  thrpt    5        12.895 ±     106.070    B/op
[info] GeoJSONBenchmark.readJsoniterScala:·gc.count                                                      N/A  thrpt    5         5.000                counts
[info] GeoJSONBenchmark.readJsoniterScala:·gc.time                                                       N/A  thrpt    5         6.000                    ms
[info] GeoJSONBenchmark.writeCirce                                                                       N/A  thrpt    5      4163.175 ±     109.749   ops/s
[info] GeoJSONBenchmark.writeCirce:·gc.alloc.rate                                                        N/A  thrpt    5       887.548 ±      23.698  MB/sec
[info] GeoJSONBenchmark.writeCirce:·gc.alloc.rate.norm                                                   N/A  thrpt    5    335488.105 ±       0.013    B/op
[info] GeoJSONBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                               N/A  thrpt    5       936.495 ±    1410.097  MB/sec
[info] GeoJSONBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                          N/A  thrpt    5    353668.494 ±  528377.476    B/op
[info] GeoJSONBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                           N/A  thrpt    5         0.038 ±       0.174  MB/sec
[info] GeoJSONBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                      N/A  thrpt    5        14.179 ±      65.498    B/op
[info] GeoJSONBenchmark.writeCirce:·gc.count                                                             N/A  thrpt    5         7.000                counts
[info] GeoJSONBenchmark.writeCirce:·gc.time                                                              N/A  thrpt    5         7.000                    ms
[info] GeoJSONBenchmark.writeJacksonScala                                                                N/A  thrpt    5      4681.696 ±     239.666   ops/s
[info] GeoJSONBenchmark.writeJacksonScala:·gc.alloc.rate                                                 N/A  thrpt    5       599.315 ±      30.720  MB/sec
[info] GeoJSONBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                            N/A  thrpt    5    201429.439 ±       1.809    B/op
[info] GeoJSONBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                        N/A  thrpt    5       633.596 ±     262.746  MB/sec
[info] GeoJSONBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                   N/A  thrpt    5    213003.398 ±   89895.308    B/op
[info] GeoJSONBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                    N/A  thrpt    5         0.567 ±       4.673  MB/sec
[info] GeoJSONBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                               N/A  thrpt    5       189.631 ±    1561.447    B/op
[info] GeoJSONBenchmark.writeJacksonScala:·gc.count                                                      N/A  thrpt    5         5.000                counts
[info] GeoJSONBenchmark.writeJacksonScala:·gc.time                                                       N/A  thrpt    5        10.000                    ms
[info] GeoJSONBenchmark.writeJsoniterScala                                                               N/A  thrpt    5      6286.222 ±      64.329   ops/s
[info] GeoJSONBenchmark.writeJsoniterScala:·gc.alloc.rate                                                N/A  thrpt    5       202.695 ±       2.161  MB/sec
[info] GeoJSONBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                           N/A  thrpt    5     50743.684 ±       3.326    B/op
[info] GeoJSONBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                       N/A  thrpt    5       204.634 ±    1078.976  MB/sec
[info] GeoJSONBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                                  N/A  thrpt    5     51367.145 ±  270844.702    B/op
[info] GeoJSONBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                   N/A  thrpt    5         0.008 ±       0.072  MB/sec
[info] GeoJSONBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                              N/A  thrpt    5         2.093 ±      18.025    B/op
[info] GeoJSONBenchmark.writeJsoniterScala:·gc.count                                                     N/A  thrpt    5         2.000                counts
[info] GeoJSONBenchmark.writeJsoniterScala:·gc.time                                                      N/A  thrpt    5         4.000                    ms
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc                                                       N/A  thrpt    5      6320.500 ±     177.450   ops/s
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                        N/A  thrpt    5       157.608 ±       4.431  MB/sec
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                   N/A  thrpt    5     39240.486 ±       3.560    B/op
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space                               N/A  thrpt    5       204.644 ±    1079.028  MB/sec
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm                          N/A  thrpt    5     51278.945 ±  270387.321    B/op
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space                           N/A  thrpt    5         0.537 ±       4.612  MB/sec
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm                      N/A  thrpt    5       133.634 ±    1148.362    B/op
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.count                                             N/A  thrpt    5         2.000                counts
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.time                                              N/A  thrpt    5         4.000                    ms
[info] GoogleMapsAPIBenchmark.readCirce                                                                  N/A  thrpt    5      7858.250 ±     216.580   ops/s
[info] GoogleMapsAPIBenchmark.readCirce:·gc.alloc.rate                                                   N/A  thrpt    5      1961.119 ±      54.415  MB/sec
[info] GoogleMapsAPIBenchmark.readCirce:·gc.alloc.rate.norm                                              N/A  thrpt    5    392761.769 ±      51.218    B/op
[info] GoogleMapsAPIBenchmark.readCirce:·gc.churn.PS_Eden_Space                                          N/A  thrpt    5      1887.979 ±    1166.621  MB/sec
[info] GoogleMapsAPIBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                     N/A  thrpt    5    377949.734 ±  229577.233    B/op
[info] GoogleMapsAPIBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                      N/A  thrpt    5         0.049 ±       0.092  MB/sec
[info] GoogleMapsAPIBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                 N/A  thrpt    5         9.799 ±      18.187    B/op
[info] GoogleMapsAPIBenchmark.readCirce:·gc.count                                                        N/A  thrpt    5        14.000                counts
[info] GoogleMapsAPIBenchmark.readCirce:·gc.time                                                         N/A  thrpt    5        15.000                    ms
[info] GoogleMapsAPIBenchmark.readDslJsonJava                                                            N/A  thrpt    5     11682.853 ±     576.100   ops/s
[info] GoogleMapsAPIBenchmark.readDslJsonJava:·gc.alloc.rate                                             N/A  thrpt    5       288.271 ±      14.226  MB/sec
[info] GoogleMapsAPIBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                        N/A  thrpt    5     38832.041 ±       0.023    B/op
[info] GoogleMapsAPIBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                                    N/A  thrpt    5       306.972 ±    1079.048  MB/sec
[info] GoogleMapsAPIBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                               N/A  thrpt    5     41167.938 ±  144712.698    B/op
[info] GoogleMapsAPIBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                                N/A  thrpt    5         0.010 ±       0.087  MB/sec
[info] GoogleMapsAPIBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                           N/A  thrpt    5         1.355 ±      11.671    B/op
[info] GoogleMapsAPIBenchmark.readDslJsonJava:·gc.count                                                  N/A  thrpt    5         3.000                counts
[info] GoogleMapsAPIBenchmark.readDslJsonJava:·gc.time                                                   N/A  thrpt    5         7.000                    ms
[info] GoogleMapsAPIBenchmark.readJacksonScala                                                           N/A  thrpt    5     14305.831 ±    1032.883   ops/s
[info] GoogleMapsAPIBenchmark.readJacksonScala:·gc.alloc.rate                                            N/A  thrpt    5       381.066 ±      27.473  MB/sec
[info] GoogleMapsAPIBenchmark.readJacksonScala:·gc.alloc.rate.norm                                       N/A  thrpt    5     41920.033 ±       0.018    B/op
[info] GoogleMapsAPIBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                   N/A  thrpt    5       439.755 ±     980.024  MB/sec
[info] GoogleMapsAPIBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                              N/A  thrpt    5     48481.052 ±  107402.013    B/op
[info] GoogleMapsAPIBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                               N/A  thrpt    5         0.531 ±       4.469  MB/sec
[info] GoogleMapsAPIBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                          N/A  thrpt    5        57.558 ±     484.218    B/op
[info] GoogleMapsAPIBenchmark.readJacksonScala:·gc.count                                                 N/A  thrpt    5         4.000                counts
[info] GoogleMapsAPIBenchmark.readJacksonScala:·gc.time                                                  N/A  thrpt    5        11.000                    ms
[info] GoogleMapsAPIBenchmark.readJsoniterScala                                                          N/A  thrpt    5     22710.846 ±     328.476   ops/s
[info] GoogleMapsAPIBenchmark.readJsoniterScala:·gc.alloc.rate                                           N/A  thrpt    5       462.516 ±       6.618  MB/sec
[info] GoogleMapsAPIBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                      N/A  thrpt    5     32048.020 ±       0.003    B/op
[info] GoogleMapsAPIBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                  N/A  thrpt    5       473.968 ±    1066.600  MB/sec
[info] GoogleMapsAPIBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                             N/A  thrpt    5     32854.236 ±   73829.968    B/op
[info] GoogleMapsAPIBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                              N/A  thrpt    5         0.349 ±       2.980  MB/sec
[info] GoogleMapsAPIBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                         N/A  thrpt    5        24.141 ±     206.343    B/op
[info] GoogleMapsAPIBenchmark.readJsoniterScala:·gc.count                                                N/A  thrpt    5         4.000                counts
[info] GoogleMapsAPIBenchmark.readJsoniterScala:·gc.time                                                 N/A  thrpt    5         7.000                    ms
[info] GoogleMapsAPIBenchmark.readPlayJson                                                               N/A  thrpt    5      2406.851 ±      51.671   ops/s
[info] GoogleMapsAPIBenchmark.readPlayJson:·gc.alloc.rate                                                N/A  thrpt    5      1506.861 ±      33.017  MB/sec
[info] GoogleMapsAPIBenchmark.readPlayJson:·gc.alloc.rate.norm                                           N/A  thrpt    5    985216.182 ±       0.025    B/op
[info] GoogleMapsAPIBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                       N/A  thrpt    5      1477.967 ±    1166.499  MB/sec
[info] GoogleMapsAPIBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                  N/A  thrpt    5    965975.015 ±  751771.941    B/op
[info] GoogleMapsAPIBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                   N/A  thrpt    5         0.008 ±       0.044  MB/sec
[info] GoogleMapsAPIBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                              N/A  thrpt    5         5.440 ±      28.685    B/op
[info] GoogleMapsAPIBenchmark.readPlayJson:·gc.count                                                     N/A  thrpt    5        11.000                counts
[info] GoogleMapsAPIBenchmark.readPlayJson:·gc.time                                                      N/A  thrpt    5        12.000                    ms
[info] GoogleMapsAPIBenchmark.readUPickle                                                                N/A  thrpt    5      6690.078 ±     120.009   ops/s
[info] GoogleMapsAPIBenchmark.readUPickle:·gc.alloc.rate                                                 N/A  thrpt    5      1066.011 ±      19.120  MB/sec
[info] GoogleMapsAPIBenchmark.readUPickle:·gc.alloc.rate.norm                                            N/A  thrpt    5    250739.551 ±      30.007    B/op
[info] GoogleMapsAPIBenchmark.readUPickle:·gc.churn.PS_Eden_Space                                        N/A  thrpt    5      1075.474 ±    1418.530  MB/sec
[info] GoogleMapsAPIBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm                                   N/A  thrpt    5    253192.540 ±  336430.088    B/op
[info] GoogleMapsAPIBenchmark.readUPickle:·gc.churn.PS_Survivor_Space                                    N/A  thrpt    5         0.017 ±       0.067  MB/sec
[info] GoogleMapsAPIBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm                               N/A  thrpt    5         3.926 ±      15.869    B/op
[info] GoogleMapsAPIBenchmark.readUPickle:·gc.count                                                      N/A  thrpt    5         8.000                counts
[info] GoogleMapsAPIBenchmark.readUPickle:·gc.time                                                       N/A  thrpt    5         7.000                    ms
[info] GoogleMapsAPIBenchmark.writeCirce                                                                 N/A  thrpt    5      8973.349 ±      97.166   ops/s
[info] GoogleMapsAPIBenchmark.writeCirce:·gc.alloc.rate                                                  N/A  thrpt    5      1998.306 ±      22.165  MB/sec
[info] GoogleMapsAPIBenchmark.writeCirce:·gc.alloc.rate.norm                                             N/A  thrpt    5    350482.916 ±      95.657    B/op
[info] GoogleMapsAPIBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                         N/A  thrpt    5      2021.512 ±      25.128  MB/sec
[info] GoogleMapsAPIBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                    N/A  thrpt    5    354553.544 ±    3363.297    B/op
[info] GoogleMapsAPIBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                     N/A  thrpt    5         0.077 ±       0.165  MB/sec
[info] GoogleMapsAPIBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                N/A  thrpt    5        13.560 ±      28.932    B/op
[info] GoogleMapsAPIBenchmark.writeCirce:·gc.count                                                       N/A  thrpt    5        15.000                counts
[info] GoogleMapsAPIBenchmark.writeCirce:·gc.time                                                        N/A  thrpt    5        14.000                    ms
[info] GoogleMapsAPIBenchmark.writeDslJsonJava                                                           N/A  thrpt    5     56148.557 ±    1513.561   ops/s
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.alloc.rate                                            N/A  thrpt    5       524.911 ±      14.083  MB/sec
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                       N/A  thrpt    5     14712.008 ±       0.001    B/op
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                                   N/A  thrpt    5       500.378 ±    1106.455  MB/sec
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                              N/A  thrpt    5     14041.232 ±   31018.332    B/op
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                               N/A  thrpt    5         0.009 ±       0.071  MB/sec
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                          N/A  thrpt    5         0.237 ±       1.985    B/op
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.count                                                 N/A  thrpt    5         4.000                counts
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.time                                                  N/A  thrpt    5        10.000                    ms
[info] GoogleMapsAPIBenchmark.writeJacksonScala                                                          N/A  thrpt    5     41163.313 ±    2380.999   ops/s
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.alloc.rate                                           N/A  thrpt    5       612.931 ±      35.147  MB/sec
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                      N/A  thrpt    5     23431.831 ±       0.213    B/op
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                  N/A  thrpt    5       633.840 ±     262.634  MB/sec
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                             N/A  thrpt    5     24220.571 ±    9558.377    B/op
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                              N/A  thrpt    5         0.543 ±       4.420  MB/sec
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                         N/A  thrpt    5        20.780 ±     169.214    B/op
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.count                                                N/A  thrpt    5         5.000                counts
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.time                                                 N/A  thrpt    5         9.000                    ms
[info] GoogleMapsAPIBenchmark.writeJsoniterScala                                                         N/A  thrpt    5     83550.803 ±    1828.839   ops/s
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.alloc.rate                                          N/A  thrpt    5       628.171 ±      13.668  MB/sec
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                     N/A  thrpt    5     11832.005 ±       0.001    B/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                 N/A  thrpt    5       538.290 ±    1158.711  MB/sec
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                            N/A  thrpt    5     10141.895 ±   21832.953    B/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                             N/A  thrpt    5         0.369 ±       3.039  MB/sec
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                        N/A  thrpt    5         6.923 ±      57.074    B/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.count                                               N/A  thrpt    5         4.000                counts
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.time                                                N/A  thrpt    5         5.000                    ms
[info] GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc                                                 N/A  thrpt    5    103721.016 ±    2712.756   ops/s
[info] GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                  N/A  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                             N/A  thrpt    5         0.004 ±       0.001    B/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:·gc.count                                       N/A  thrpt    5           ≈ 0                counts
[info] GoogleMapsAPIBenchmark.writePlayJson                                                              N/A  thrpt    5      5969.583 ±     275.469   ops/s
[info] GoogleMapsAPIBenchmark.writePlayJson:·gc.alloc.rate                                               N/A  thrpt    5      1784.607 ±      82.329  MB/sec
[info] GoogleMapsAPIBenchmark.writePlayJson:·gc.alloc.rate.norm                                          N/A  thrpt    5    470423.927 ±       1.318    B/op
[info] GoogleMapsAPIBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                      N/A  thrpt    5      1742.500 ±    1407.493  MB/sec
[info] GoogleMapsAPIBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                 N/A  thrpt    5    459424.144 ±  372798.621    B/op
[info] GoogleMapsAPIBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                  N/A  thrpt    5         0.062 ±       0.150  MB/sec
[info] GoogleMapsAPIBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                             N/A  thrpt    5        16.504 ±      39.853    B/op
[info] GoogleMapsAPIBenchmark.writePlayJson:·gc.count                                                    N/A  thrpt    5        13.000                counts
[info] GoogleMapsAPIBenchmark.writePlayJson:·gc.time                                                     N/A  thrpt    5        14.000                    ms
[info] GoogleMapsAPIBenchmark.writeUPickle                                                               N/A  thrpt    5      4601.974 ±      33.370   ops/s
[info] GoogleMapsAPIBenchmark.writeUPickle:·gc.alloc.rate                                                N/A  thrpt    5       490.955 ±       3.579  MB/sec
[info] GoogleMapsAPIBenchmark.writeUPickle:·gc.alloc.rate.norm                                           N/A  thrpt    5    167872.095 ±       0.013    B/op
[info] GoogleMapsAPIBenchmark.writeUPickle:·gc.churn.PS_Eden_Space                                       N/A  thrpt    5       473.389 ±    1064.674  MB/sec
[info] GoogleMapsAPIBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm                                  N/A  thrpt    5    161749.569 ±  363650.481    B/op
[info] GoogleMapsAPIBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space                                   N/A  thrpt    5         0.383 ±       3.154  MB/sec
[info] GoogleMapsAPIBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm                              N/A  thrpt    5       131.095 ±    1078.567    B/op
[info] GoogleMapsAPIBenchmark.writeUPickle:·gc.count                                                     N/A  thrpt    5         4.000                counts
[info] GoogleMapsAPIBenchmark.writeUPickle:·gc.time                                                      N/A  thrpt    5         7.000                    ms
[info] IntBenchmark.readCirce                                                                            N/A  thrpt    5   5079980.693 ±   41267.615   ops/s
[info] IntBenchmark.readCirce:·gc.alloc.rate                                                             N/A  thrpt    5      3305.673 ±      28.884  MB/sec
[info] IntBenchmark.readCirce:·gc.alloc.rate.norm                                                        N/A  thrpt    5      1024.000 ±       0.001    B/op
[info] IntBenchmark.readCirce:·gc.churn.PS_Eden_Space                                                    N/A  thrpt    5      3260.905 ±    1177.747  MB/sec
[info] IntBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                               N/A  thrpt    5      1010.164 ±     366.175    B/op
[info] IntBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                                N/A  thrpt    5         0.083 ±       0.080  MB/sec
[info] IntBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                           N/A  thrpt    5         0.026 ±       0.025    B/op
[info] IntBenchmark.readCirce:·gc.count                                                                  N/A  thrpt    5        24.000                counts
[info] IntBenchmark.readCirce:·gc.time                                                                   N/A  thrpt    5        20.000                    ms
[info] IntBenchmark.readDslJsonJava                                                                      N/A  thrpt    5  40092514.184 ±  326833.707   ops/s
[info] IntBenchmark.readDslJsonJava:·gc.alloc.rate                                                       N/A  thrpt    5       407.629 ±       3.331  MB/sec
[info] IntBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                                  N/A  thrpt    5        16.000 ±       0.001    B/op
[info] IntBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                                              N/A  thrpt    5       337.460 ±    1210.095  MB/sec
[info] IntBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                                         N/A  thrpt    5        13.245 ±      47.500    B/op
[info] IntBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                                          N/A  thrpt    5         0.005 ±       0.045  MB/sec
[info] IntBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                                     N/A  thrpt    5        ≈ 10⁻⁴                  B/op
[info] IntBenchmark.readDslJsonJava:·gc.count                                                            N/A  thrpt    5         3.000                counts
[info] IntBenchmark.readDslJsonJava:·gc.time                                                             N/A  thrpt    5         6.000                    ms
[info] IntBenchmark.readJacksonScala                                                                     N/A  thrpt    5   8114511.310 ±  272809.194   ops/s
[info] IntBenchmark.readJacksonScala:·gc.alloc.rate                                                      N/A  thrpt    5      3424.044 ±     114.521  MB/sec
[info] IntBenchmark.readJacksonScala:·gc.alloc.rate.norm                                                 N/A  thrpt    5       664.000 ±       0.001    B/op
[info] IntBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                             N/A  thrpt    5      3392.377 ±      38.069  MB/sec
[info] IntBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                        N/A  thrpt    5       657.907 ±      27.346    B/op
[info] IntBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                         N/A  thrpt    5         0.087 ±       0.067  MB/sec
[info] IntBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                                    N/A  thrpt    5         0.017 ±       0.013    B/op
[info] IntBenchmark.readJacksonScala:·gc.count                                                           N/A  thrpt    5        25.000                counts
[info] IntBenchmark.readJacksonScala:·gc.time                                                            N/A  thrpt    5        22.000                    ms
[info] IntBenchmark.readJsoniterScala                                                                    N/A  thrpt    5  49420584.733 ±  107853.138   ops/s
[info] IntBenchmark.readJsoniterScala:·gc.alloc.rate                                                     N/A  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] IntBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                                N/A  thrpt    5        ≈ 10⁻⁵                  B/op
[info] IntBenchmark.readJsoniterScala:·gc.count                                                          N/A  thrpt    5           ≈ 0                counts
[info] IntBenchmark.readNaiveScala                                                                       N/A  thrpt    5  17274231.625 ±  139419.164   ops/s
[info] IntBenchmark.readNaiveScala:·gc.alloc.rate                                                        N/A  thrpt    5      1141.496 ±       9.318  MB/sec
[info] IntBenchmark.readNaiveScala:·gc.alloc.rate.norm                                                   N/A  thrpt    5       104.000 ±       0.001    B/op
[info] IntBenchmark.readNaiveScala:·gc.churn.PS_Eden_Space                                               N/A  thrpt    5      1214.543 ±    1161.805  MB/sec
[info] IntBenchmark.readNaiveScala:·gc.churn.PS_Eden_Space.norm                                          N/A  thrpt    5       110.671 ±     106.058    B/op
[info] IntBenchmark.readNaiveScala:·gc.churn.PS_Survivor_Space                                           N/A  thrpt    5         0.050 ±       0.122  MB/sec
[info] IntBenchmark.readNaiveScala:·gc.churn.PS_Survivor_Space.norm                                      N/A  thrpt    5         0.005 ±       0.011    B/op
[info] IntBenchmark.readNaiveScala:·gc.count                                                             N/A  thrpt    5         9.000                counts
[info] IntBenchmark.readNaiveScala:·gc.time                                                              N/A  thrpt    5         7.000                    ms
[info] IntBenchmark.readPlayJson                                                                         N/A  thrpt    5   7674421.947 ±  323013.247   ops/s
[info] IntBenchmark.readPlayJson:·gc.alloc.rate                                                          N/A  thrpt    5      3706.628 ±     156.238  MB/sec
[info] IntBenchmark.readPlayJson:·gc.alloc.rate.norm                                                     N/A  thrpt    5       760.000 ±       0.001    B/op
[info] IntBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                                 N/A  thrpt    5      3668.255 ±    1415.933  MB/sec
[info] IntBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                            N/A  thrpt    5       752.073 ±     285.292    B/op
[info] IntBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                             N/A  thrpt    5         0.087 ±       0.208  MB/sec
[info] IntBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                        N/A  thrpt    5         0.018 ±       0.042    B/op
[info] IntBenchmark.readPlayJson:·gc.count                                                               N/A  thrpt    5        27.000                counts
[info] IntBenchmark.readPlayJson:·gc.time                                                                N/A  thrpt    5        25.000                    ms
[info] IntBenchmark.readUPickle                                                                          N/A  thrpt    5   8815894.722 ±  262449.278   ops/s
[info] IntBenchmark.readUPickle:·gc.alloc.rate                                                           N/A  thrpt    5      3854.523 ±     114.676  MB/sec
[info] IntBenchmark.readUPickle:·gc.alloc.rate.norm                                                      N/A  thrpt    5       688.000 ±       0.001    B/op
[info] IntBenchmark.readUPickle:·gc.churn.PS_Eden_Space                                                  N/A  thrpt    5      3810.098 ±    1422.925  MB/sec
[info] IntBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm                                             N/A  thrpt    5       680.101 ±     254.730    B/op
[info] IntBenchmark.readUPickle:·gc.churn.PS_Survivor_Space                                              N/A  thrpt    5         0.079 ±       0.132  MB/sec
[info] IntBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm                                         N/A  thrpt    5         0.014 ±       0.024    B/op
[info] IntBenchmark.readUPickle:·gc.count                                                                N/A  thrpt    5        28.000                counts
[info] IntBenchmark.readUPickle:·gc.time                                                                 N/A  thrpt    5        23.000                    ms
[info] IntBenchmark.writeCirce                                                                           N/A  thrpt    5  11857334.132 ±  285323.449   ops/s
[info] IntBenchmark.writeCirce:·gc.alloc.rate                                                            N/A  thrpt    5      2350.953 ±      56.527  MB/sec
[info] IntBenchmark.writeCirce:·gc.alloc.rate.norm                                                       N/A  thrpt    5       312.000 ±       0.001    B/op
[info] IntBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                                   N/A  thrpt    5      2299.059 ±    1411.647  MB/sec
[info] IntBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                              N/A  thrpt    5       305.012 ±     183.906    B/op
[info] IntBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                               N/A  thrpt    5         0.058 ±       0.067  MB/sec
[info] IntBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                          N/A  thrpt    5         0.008 ±       0.009    B/op
[info] IntBenchmark.writeCirce:·gc.count                                                                 N/A  thrpt    5        17.000                counts
[info] IntBenchmark.writeCirce:·gc.time                                                                  N/A  thrpt    5        13.000                    ms
[info] IntBenchmark.writeDslJsonJava                                                                     N/A  thrpt    5  56619559.800 ± 9799201.535   ops/s
[info] IntBenchmark.writeDslJsonJava:·gc.alloc.rate                                                      N/A  thrpt    5      1726.833 ±     298.766  MB/sec
[info] IntBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                                 N/A  thrpt    5        48.000 ±       0.001    B/op
[info] IntBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                                             N/A  thrpt    5      1606.850 ±    1413.151  MB/sec
[info] IntBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                                        N/A  thrpt    5        44.795 ±      41.258    B/op
[info] IntBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                                         N/A  thrpt    5         0.472 ±       4.004  MB/sec
[info] IntBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                                    N/A  thrpt    5         0.013 ±       0.110    B/op
[info] IntBenchmark.writeDslJsonJava:·gc.count                                                           N/A  thrpt    5        12.000                counts
[info] IntBenchmark.writeDslJsonJava:·gc.time                                                            N/A  thrpt    5        17.000                    ms
[info] IntBenchmark.writeJacksonScala                                                                    N/A  thrpt    5  11924547.606 ±  311729.657   ops/s
[info] IntBenchmark.writeJacksonScala:·gc.alloc.rate                                                     N/A  thrpt    5      2363.899 ±      61.328  MB/sec
[info] IntBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                                N/A  thrpt    5       312.000 ±       0.001    B/op
[info] IntBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                            N/A  thrpt    5      2293.890 ±    1424.645  MB/sec
[info] IntBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                       N/A  thrpt    5       302.705 ±     186.163    B/op
[info] IntBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                        N/A  thrpt    5         0.079 ±       0.164  MB/sec
[info] IntBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                                   N/A  thrpt    5         0.010 ±       0.022    B/op
[info] IntBenchmark.writeJacksonScala:·gc.count                                                          N/A  thrpt    5        17.000                counts
[info] IntBenchmark.writeJacksonScala:·gc.time                                                           N/A  thrpt    5        16.000                    ms
[info] IntBenchmark.writeJsoniterScala                                                                   N/A  thrpt    5  45590202.806 ±  177909.344   ops/s
[info] IntBenchmark.writeJsoniterScala:·gc.alloc.rate                                                    N/A  thrpt    5       926.975 ±       3.843  MB/sec
[info] IntBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                               N/A  thrpt    5        32.000 ±       0.001    B/op
[info] IntBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                           N/A  thrpt    5       942.966 ±    1420.828  MB/sec
[info] IntBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                                      N/A  thrpt    5        32.553 ±      49.061    B/op
[info] IntBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                       N/A  thrpt    5         0.042 ±       0.204  MB/sec
[info] IntBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                                  N/A  thrpt    5         0.001 ±       0.007    B/op
[info] IntBenchmark.writeJsoniterScala:·gc.count                                                         N/A  thrpt    5         7.000                counts
[info] IntBenchmark.writeJsoniterScala:·gc.time                                                          N/A  thrpt    5         6.000                    ms
[info] IntBenchmark.writeJsoniterScalaPrealloc                                                           N/A  thrpt    5  59898304.701 ±  368748.961   ops/s
[info] IntBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                            N/A  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] IntBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                       N/A  thrpt    5        ≈ 10⁻⁵                  B/op
[info] IntBenchmark.writeJsoniterScalaPrealloc:·gc.count                                                 N/A  thrpt    5           ≈ 0                counts
[info] IntBenchmark.writeNaiveScala                                                                      N/A  thrpt    5  13546336.445 ±  124194.907   ops/s
[info] IntBenchmark.writeNaiveScala:·gc.alloc.rate                                                       N/A  thrpt    5      2272.272 ±      20.853  MB/sec
[info] IntBenchmark.writeNaiveScala:·gc.alloc.rate.norm                                                  N/A  thrpt    5       264.000 ±       0.001    B/op
[info] IntBenchmark.writeNaiveScala:·gc.churn.PS_Eden_Space                                              N/A  thrpt    5      2306.844 ±    1427.183  MB/sec
[info] IntBenchmark.writeNaiveScala:·gc.churn.PS_Eden_Space.norm                                         N/A  thrpt    5       267.987 ±     164.847    B/op
[info] IntBenchmark.writeNaiveScala:·gc.churn.PS_Survivor_Space                                          N/A  thrpt    5         0.058 ±       0.132  MB/sec
[info] IntBenchmark.writeNaiveScala:·gc.churn.PS_Survivor_Space.norm                                     N/A  thrpt    5         0.007 ±       0.015    B/op
[info] IntBenchmark.writeNaiveScala:·gc.count                                                            N/A  thrpt    5        17.000                counts
[info] IntBenchmark.writeNaiveScala:·gc.time                                                             N/A  thrpt    5        13.000                    ms
[info] IntBenchmark.writePlayJson                                                                        N/A  thrpt    5   2273953.003 ±   86164.113   ops/s
[info] IntBenchmark.writePlayJson:·gc.alloc.rate                                                         N/A  thrpt    5      1965.194 ±      73.875  MB/sec
[info] IntBenchmark.writePlayJson:·gc.alloc.rate.norm                                                    N/A  thrpt    5      1360.000 ±       0.001    B/op
[info] IntBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                                N/A  thrpt    5      1890.445 ±    1162.832  MB/sec
[info] IntBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                           N/A  thrpt    5      1307.039 ±     773.797    B/op
[info] IntBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                            N/A  thrpt    5         0.083 ±       0.150  MB/sec
[info] IntBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                                       N/A  thrpt    5         0.058 ±       0.104    B/op
[info] IntBenchmark.writePlayJson:·gc.count                                                              N/A  thrpt    5        14.000                counts
[info] IntBenchmark.writePlayJson:·gc.time                                                               N/A  thrpt    5        13.000                    ms
[info] IntBenchmark.writeUPickle                                                                         N/A  thrpt    5   7903842.660 ±  385112.514   ops/s
[info] IntBenchmark.writeUPickle:·gc.alloc.rate                                                          N/A  thrpt    5      2450.954 ±     119.119  MB/sec
[info] IntBenchmark.writeUPickle:·gc.alloc.rate.norm                                                     N/A  thrpt    5       488.000 ±       0.001    B/op
[info] IntBenchmark.writeUPickle:·gc.churn.PS_Eden_Space                                                 N/A  thrpt    5      2576.429 ±    1166.238  MB/sec
[info] IntBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm                                            N/A  thrpt    5       513.280 ±     241.499    B/op
[info] IntBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space                                             N/A  thrpt    5         0.071 ±       0.185  MB/sec
[info] IntBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm                                        N/A  thrpt    5         0.014 ±       0.036    B/op
[info] IntBenchmark.writeUPickle:·gc.count                                                               N/A  thrpt    5        19.000                counts
[info] IntBenchmark.writeUPickle:·gc.time                                                                N/A  thrpt    5        15.000                    ms
[info] IntMapOfBooleansBenchmark.readJsoniterScala                                                       128  thrpt    5    164401.348 ±    5363.109   ops/s
[info] IntMapOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate                                        128  thrpt    5      3016.625 ±      99.144  MB/sec
[info] IntMapOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                   128  thrpt    5     28872.003 ±       0.001    B/op
[info] IntMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                               128  thrpt    5      2988.336 ±    1424.400  MB/sec
[info] IntMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5     28610.251 ±   13954.926    B/op
[info] IntMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.108 ±       0.132  MB/sec
[info] IntMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         1.037 ±       1.263    B/op
[info] IntMapOfBooleansBenchmark.readJsoniterScala:·gc.count                                             128  thrpt    5        22.000                counts
[info] IntMapOfBooleansBenchmark.readJsoniterScala:·gc.time                                              128  thrpt    5        18.000                    ms
[info] IntMapOfBooleansBenchmark.readPlayJson                                                            128  thrpt    5     16897.044 ±     874.224   ops/s
[info] IntMapOfBooleansBenchmark.readPlayJson:·gc.alloc.rate                                             128  thrpt    5      1314.377 ±      67.993  MB/sec
[info] IntMapOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm                                        128  thrpt    5    122416.028 ±       0.016    B/op
[info] IntMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1337.401 ±      12.235  MB/sec
[info] IntMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5    124576.260 ±    5729.217    B/op
[info] IntMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.033 ±       0.122  MB/sec
[info] IntMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         3.103 ±      11.271    B/op
[info] IntMapOfBooleansBenchmark.readPlayJson:·gc.count                                                  128  thrpt    5        10.000                counts
[info] IntMapOfBooleansBenchmark.readPlayJson:·gc.time                                                   128  thrpt    5        10.000                    ms
[info] IntMapOfBooleansBenchmark.writeJacksonScala                                                       128  thrpt    5    133147.941 ±    6757.092   ops/s
[info] IntMapOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate                                        128  thrpt    5      1289.392 ±      65.685  MB/sec
[info] IntMapOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                   128  thrpt    5     15240.003 ±       0.001    B/op
[info] IntMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                               128  thrpt    5      1337.984 ±      12.823  MB/sec
[info] IntMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5     15816.443 ±     781.224    B/op
[info] IntMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.067 ±       0.105  MB/sec
[info] IntMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         0.790 ±       1.249    B/op
[info] IntMapOfBooleansBenchmark.writeJacksonScala:·gc.count                                             128  thrpt    5        10.000                counts
[info] IntMapOfBooleansBenchmark.writeJacksonScala:·gc.time                                              128  thrpt    5         9.000                    ms
[info] IntMapOfBooleansBenchmark.writeJsoniterScala                                                      128  thrpt    5    519824.896 ±    7886.650   ops/s
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate                                       128  thrpt    5      1075.492 ±      15.683  MB/sec
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                  128  thrpt    5      3256.001 ±       0.001    B/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                              128  thrpt    5      1077.520 ±    1420.494  MB/sec
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5      3260.518 ±    4280.211    B/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.029 ±       0.091  MB/sec
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         0.088 ±       0.276    B/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.count                                            128  thrpt    5         8.000                counts
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.time                                             128  thrpt    5         7.000                    ms
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc                                              128  thrpt    5    547834.341 ±    4759.118   ops/s
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                               128  thrpt    5       534.682 ±       4.502  MB/sec
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                          128  thrpt    5      1536.001 ±       0.001    B/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space                      128  thrpt    5       506.176 ±    1122.346  MB/sec
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm                 128  thrpt    5      1454.455 ±    3226.380    B/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space                  128  thrpt    5         0.321 ±       2.675  MB/sec
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm             128  thrpt    5         0.920 ±       7.667    B/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count                                    128  thrpt    5         4.000                counts
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.time                                     128  thrpt    5         6.000                    ms
[info] IntMapOfBooleansBenchmark.writePlayJson                                                           128  thrpt    5     55461.791 ±     181.997   ops/s
[info] IntMapOfBooleansBenchmark.writePlayJson:·gc.alloc.rate                                            128  thrpt    5      1233.967 ±       4.053  MB/sec
[info] IntMapOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm                                       128  thrpt    5     35016.008 ±       0.001    B/op
[info] IntMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                   128  thrpt    5      1336.873 ±      10.569  MB/sec
[info] IntMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5     37936.193 ±     348.118    B/op
[info] IntMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.046 ±       0.143  MB/sec
[info] IntMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         1.300 ±       4.072    B/op
[info] IntMapOfBooleansBenchmark.writePlayJson:·gc.count                                                 128  thrpt    5        10.000                counts
[info] IntMapOfBooleansBenchmark.writePlayJson:·gc.time                                                  128  thrpt    5        10.000                    ms
[info] ListOfBooleansBenchmark.readCirce                                                                 128  thrpt    5    338914.962 ±    4274.520   ops/s
[info] ListOfBooleansBenchmark.readCirce:·gc.alloc.rate                                                  128  thrpt    5      2460.093 ±      31.013  MB/sec
[info] ListOfBooleansBenchmark.readCirce:·gc.alloc.rate.norm                                             128  thrpt    5     11424.001 ±       0.001    B/op
[info] ListOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space                                         128  thrpt    5      2439.189 ±    1435.516  MB/sec
[info] ListOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5     11325.261 ±    6614.991    B/op
[info] ListOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                     128  thrpt    5         0.079 ±       0.067  MB/sec
[info] ListOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5         0.367 ±       0.309    B/op
[info] ListOfBooleansBenchmark.readCirce:·gc.count                                                       128  thrpt    5        18.000                counts
[info] ListOfBooleansBenchmark.readCirce:·gc.time                                                        128  thrpt    5        15.000                    ms
[info] ListOfBooleansBenchmark.readJacksonScala                                                          128  thrpt    5    343802.819 ±   21405.068   ops/s
[info] ListOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate                                           128  thrpt    5       910.684 ±      57.295  MB/sec
[info] ListOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm                                      128  thrpt    5      4168.001 ±       0.001    B/op
[info] ListOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5       934.606 ±    1406.623  MB/sec
[info] ListOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5      4285.601 ±    6546.663    B/op
[info] ListOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.046 ±       0.256  MB/sec
[info] ListOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         0.212 ±       1.191    B/op
[info] ListOfBooleansBenchmark.readJacksonScala:·gc.count                                                128  thrpt    5         7.000                counts
[info] ListOfBooleansBenchmark.readJacksonScala:·gc.time                                                 128  thrpt    5         6.000                    ms
[info] ListOfBooleansBenchmark.readJsoniterScala                                                         128  thrpt    5   1194902.439 ±   19026.937   ops/s
[info] ListOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate                                          128  thrpt    5      2332.893 ±      36.909  MB/sec
[info] ListOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                     128  thrpt    5      3072.000 ±       0.001    B/op
[info] ListOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5      2303.587 ±    1431.000  MB/sec
[info] ListOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5      3033.135 ±    1875.050    B/op
[info] ListOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.062 ±       0.113  MB/sec
[info] ListOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         0.082 ±       0.148    B/op
[info] ListOfBooleansBenchmark.readJsoniterScala:·gc.count                                               128  thrpt    5        17.000                counts
[info] ListOfBooleansBenchmark.readJsoniterScala:·gc.time                                                128  thrpt    5        14.000                    ms
[info] ListOfBooleansBenchmark.readPlayJson                                                              128  thrpt    5    113672.887 ±    2838.133   ops/s
[info] ListOfBooleansBenchmark.readPlayJson:·gc.alloc.rate                                               128  thrpt    5      4116.634 ±     104.460  MB/sec
[info] ListOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm                                          128  thrpt    5     56984.004 ±       0.001    B/op
[info] ListOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                      128  thrpt    5      4215.779 ±    1177.048  MB/sec
[info] ListOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5     58359.385 ±   16429.426    B/op
[info] ListOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.075 ±       0.134  MB/sec
[info] ListOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         1.037 ±       1.855    B/op
[info] ListOfBooleansBenchmark.readPlayJson:·gc.count                                                    128  thrpt    5        31.000                counts
[info] ListOfBooleansBenchmark.readPlayJson:·gc.time                                                     128  thrpt    5        25.000                    ms
[info] ListOfBooleansBenchmark.readUPickle                                                               128  thrpt    5    590980.003 ±   14175.382   ops/s
[info] ListOfBooleansBenchmark.readUPickle:·gc.alloc.rate                                                128  thrpt    5      2580.792 ±      60.764  MB/sec
[info] ListOfBooleansBenchmark.readUPickle:·gc.alloc.rate.norm                                           128  thrpt    5      6872.001 ±       0.001    B/op
[info] ListOfBooleansBenchmark.readUPickle:·gc.churn.PS_Eden_Space                                       128  thrpt    5      2577.864 ±    1181.511  MB/sec
[info] ListOfBooleansBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5      6862.821 ±    3096.624    B/op
[info] ListOfBooleansBenchmark.readUPickle:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.062 ±       0.080  MB/sec
[info] ListOfBooleansBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5         0.166 ±       0.214    B/op
[info] ListOfBooleansBenchmark.readUPickle:·gc.count                                                     128  thrpt    5        19.000                counts
[info] ListOfBooleansBenchmark.readUPickle:·gc.time                                                      128  thrpt    5        16.000                    ms
[info] ListOfBooleansBenchmark.writeCirce                                                                128  thrpt    5    370037.537 ±   20045.751   ops/s
[info] ListOfBooleansBenchmark.writeCirce:·gc.alloc.rate                                                 128  thrpt    5      1256.537 ±      68.502  MB/sec
[info] ListOfBooleansBenchmark.writeCirce:·gc.alloc.rate.norm                                            128  thrpt    5      5344.001 ±       0.001    B/op
[info] ListOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                        128  thrpt    5      1208.921 ±    1154.738  MB/sec
[info] ListOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5      5148.860 ±    5003.818    B/op
[info] ListOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                    128  thrpt    5         0.058 ±       0.154  MB/sec
[info] ListOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5         0.249 ±       0.659    B/op
[info] ListOfBooleansBenchmark.writeCirce:·gc.count                                                      128  thrpt    5         9.000                counts
[info] ListOfBooleansBenchmark.writeCirce:·gc.time                                                       128  thrpt    5         8.000                    ms
[info] ListOfBooleansBenchmark.writeJacksonScala                                                         128  thrpt    5    739013.386 ±   15354.796   ops/s
[info] ListOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate                                          128  thrpt    5       548.515 ±      11.572  MB/sec
[info] ListOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                     128  thrpt    5      1168.001 ±       0.001    B/op
[info] ListOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5       502.616 ±    1112.572  MB/sec
[info] ListOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5      1070.821 ±    2365.632    B/op
[info] ListOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.477 ±       3.873  MB/sec
[info] ListOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         1.016 ±       8.250    B/op
[info] ListOfBooleansBenchmark.writeJacksonScala:·gc.count                                               128  thrpt    5         4.000                counts
[info] ListOfBooleansBenchmark.writeJacksonScala:·gc.time                                                128  thrpt    5         7.000                    ms
[info] ListOfBooleansBenchmark.writeJsoniterScala                                                        128  thrpt    5   2083721.836 ±   13537.630   ops/s
[info] ListOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate                                         128  thrpt    5       963.941 ±       6.188  MB/sec
[info] ListOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                    128  thrpt    5       728.000 ±       0.001    B/op
[info] ListOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                128  thrpt    5       942.821 ±    1420.948  MB/sec
[info] ListOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5       712.256 ±    1076.035    B/op
[info] ListOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.054 ±       0.217  MB/sec
[info] ListOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         0.041 ±       0.163    B/op
[info] ListOfBooleansBenchmark.writeJsoniterScala:·gc.count                                              128  thrpt    5         7.000                counts
[info] ListOfBooleansBenchmark.writeJsoniterScala:·gc.time                                               128  thrpt    5         6.000                    ms
[info] ListOfBooleansBenchmark.writeJsoniterScalaPrealloc                                                128  thrpt    5   2464334.915 ±   13828.105   ops/s
[info] ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                 128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                            128  thrpt    5        ≈ 10⁻⁴                  B/op
[info] ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count                                      128  thrpt    5           ≈ 0                counts
[info] ListOfBooleansBenchmark.writePlayJson                                                             128  thrpt    5    356478.209 ±    6520.409   ops/s
[info] ListOfBooleansBenchmark.writePlayJson:·gc.alloc.rate                                              128  thrpt    5       512.838 ±       9.577  MB/sec
[info] ListOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm                                         128  thrpt    5      2264.001 ±       0.001    B/op
[info] ListOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                     128  thrpt    5       504.189 ±    1116.863  MB/sec
[info] ListOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5      2228.082 ±    4940.090    B/op
[info] ListOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.408 ±       3.428  MB/sec
[info] ListOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         1.811 ±      15.205    B/op
[info] ListOfBooleansBenchmark.writePlayJson:·gc.count                                                   128  thrpt    5         4.000                counts
[info] ListOfBooleansBenchmark.writePlayJson:·gc.time                                                    128  thrpt    5         7.000                    ms
[info] ListOfBooleansBenchmark.writeUPickle                                                              128  thrpt    5    165794.867 ±    9429.671   ops/s
[info] ListOfBooleansBenchmark.writeUPickle:·gc.alloc.rate                                               128  thrpt    5       970.893 ±      54.606  MB/sec
[info] ListOfBooleansBenchmark.writeUPickle:·gc.alloc.rate.norm                                          128  thrpt    5      9216.003 ±       0.001    B/op
[info] ListOfBooleansBenchmark.writeUPickle:·gc.churn.PS_Eden_Space                                      128  thrpt    5       943.907 ±    1421.421  MB/sec
[info] ListOfBooleansBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5      8949.428 ±   13330.842    B/op
[info] ListOfBooleansBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.021 ±       0.080  MB/sec
[info] ListOfBooleansBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         0.198 ±       0.758    B/op
[info] ListOfBooleansBenchmark.writeUPickle:·gc.count                                                    128  thrpt    5         7.000                counts
[info] ListOfBooleansBenchmark.writeUPickle:·gc.time                                                     128  thrpt    5         5.000                    ms
[info] MapOfIntsToBooleansBenchmark.readCirce                                                            128  thrpt    5     59458.096 ±    2846.223   ops/s
[info] MapOfIntsToBooleansBenchmark.readCirce:·gc.alloc.rate                                             128  thrpt    5      1838.578 ±      87.752  MB/sec
[info] MapOfIntsToBooleansBenchmark.readCirce:·gc.alloc.rate.norm                                        128  thrpt    5     48664.007 ±       0.001    B/op
[info] MapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1890.367 ±    1158.463  MB/sec
[info] MapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5     50061.400 ±   31243.833    B/op
[info] MapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.046 ±       0.174  MB/sec
[info] MapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         1.208 ±       4.561    B/op
[info] MapOfIntsToBooleansBenchmark.readCirce:·gc.count                                                  128  thrpt    5        14.000                counts
[info] MapOfIntsToBooleansBenchmark.readCirce:·gc.time                                                   128  thrpt    5        12.000                    ms
[info] MapOfIntsToBooleansBenchmark.readJacksonScala                                                     128  thrpt    5     83062.423 ±    2178.953   ops/s
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.alloc.rate                                      128  thrpt    5      1493.957 ±      38.778  MB/sec
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm                                 128  thrpt    5     28304.005 ±       0.001    B/op
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                             128  thrpt    5      1474.076 ±    1146.177  MB/sec
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5     27929.994 ±   21778.523    B/op
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.050 ±       0.122  MB/sec
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         0.949 ±       2.322    B/op
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.count                                           128  thrpt    5        11.000                counts
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.time                                            128  thrpt    5        11.000                    ms
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala                                                    128  thrpt    5     99578.613 ±    5145.720   ops/s
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.alloc.rate                                     128  thrpt    5      1526.084 ±      78.969  MB/sec
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                128  thrpt    5     24120.004 ±       0.001    B/op
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                            128  thrpt    5      1619.423 ±    1425.989  MB/sec
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5     25661.197 ±   23963.118    B/op
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.046 ±       0.174  MB/sec
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         0.724 ±       2.750    B/op
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.count                                          128  thrpt    5        12.000                counts
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.time                                           128  thrpt    5        10.000                    ms
[info] MapOfIntsToBooleansBenchmark.readPlayJson                                                         128  thrpt    5     18701.135 ±     854.374   ops/s
[info] MapOfIntsToBooleansBenchmark.readPlayJson:·gc.alloc.rate                                          128  thrpt    5      1303.570 ±      59.887  MB/sec
[info] MapOfIntsToBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm                                     128  thrpt    5    109696.025 ±       0.018    B/op
[info] MapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                 128  thrpt    5      1337.404 ±      12.973  MB/sec
[info] MapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5    112555.777 ±    5188.873    B/op
[info] MapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.029 ±       0.091  MB/sec
[info] MapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         2.435 ±       7.596    B/op
[info] MapOfIntsToBooleansBenchmark.readPlayJson:·gc.count                                               128  thrpt    5        10.000                counts
[info] MapOfIntsToBooleansBenchmark.readPlayJson:·gc.time                                                128  thrpt    5        11.000                    ms
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala                                                    128  thrpt    5    135748.296 ±    5201.696   ops/s
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.alloc.rate                                     128  thrpt    5      1056.505 ±      40.327  MB/sec
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                128  thrpt    5     12248.003 ±       0.001    B/op
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                            128  thrpt    5      1067.954 ±    1406.000  MB/sec
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5     12388.319 ±   16389.275    B/op
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.033 ±       0.146  MB/sec
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         0.386 ±       1.695    B/op
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.count                                          128  thrpt    5         8.000                counts
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.time                                           128  thrpt    5         8.000                    ms
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala                                                   128  thrpt    5    567629.587 ±   12608.625   ops/s
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate                                    128  thrpt    5       626.139 ±      14.018  MB/sec
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                               128  thrpt    5      1736.001 ±       0.001    B/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                           128  thrpt    5       538.377 ±    1158.897  MB/sec
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5      1493.864 ±    3215.881    B/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.325 ±       2.666  MB/sec
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         0.898 ±       7.359    B/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.count                                         128  thrpt    5         4.000                counts
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.time                                          128  thrpt    5         5.000                    ms
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc                                           128  thrpt    5    563191.519 ±    5887.564   ops/s
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                            128  thrpt    5         5.726 ±       0.060  MB/sec
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                       128  thrpt    5        16.001 ±       0.001    B/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count                                 128  thrpt    5           ≈ 0                counts
[info] MapOfIntsToBooleansBenchmark.writePlayJson                                                        128  thrpt    5     19693.612 ±     504.241   ops/s
[info] MapOfIntsToBooleansBenchmark.writePlayJson:·gc.alloc.rate                                         128  thrpt    5       383.662 ±       9.738  MB/sec
[info] MapOfIntsToBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm                                    128  thrpt    5     30656.024 ±       0.013    B/op
[info] MapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                128  thrpt    5       440.320 ±     982.381  MB/sec
[info] MapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5     35232.638 ±   78460.626    B/op
[info] MapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.473 ±       3.962  MB/sec
[info] MapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5        37.655 ±     315.489    B/op
[info] MapOfIntsToBooleansBenchmark.writePlayJson:·gc.count                                              128  thrpt    5         4.000                counts
[info] MapOfIntsToBooleansBenchmark.writePlayJson:·gc.time                                               128  thrpt    5        11.000                    ms
[info] MissingReqFieldBenchmark.readCirce                                                                N/A  thrpt    5   2242394.984 ±   32168.465   ops/s
[info] MissingReqFieldBenchmark.readCirce:·gc.alloc.rate                                                 N/A  thrpt    5      3362.502 ±      48.673  MB/sec
[info] MissingReqFieldBenchmark.readCirce:·gc.alloc.rate.norm                                            N/A  thrpt    5      2360.000 ±       0.001    B/op
[info] MissingReqFieldBenchmark.readCirce:·gc.churn.PS_Eden_Space                                        N/A  thrpt    5      3259.431 ±    1167.179  MB/sec
[info] MissingReqFieldBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                   N/A  thrpt    5      2288.054 ±     836.524    B/op
[info] MissingReqFieldBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                    N/A  thrpt    5         0.092 ±       0.185  MB/sec
[info] MissingReqFieldBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                               N/A  thrpt    5         0.064 ±       0.129    B/op
[info] MissingReqFieldBenchmark.readCirce:·gc.count                                                      N/A  thrpt    5        24.000                counts
[info] MissingReqFieldBenchmark.readCirce:·gc.time                                                       N/A  thrpt    5        20.000                    ms
[info] MissingReqFieldBenchmark.readDslJsonJava                                                          N/A  thrpt    5    849070.812 ±   18428.302   ops/s
[info] MissingReqFieldBenchmark.readDslJsonJava:·gc.alloc.rate                                           N/A  thrpt    5       517.945 ±      11.342  MB/sec
[info] MissingReqFieldBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                      N/A  thrpt    5       960.001 ±       0.001    B/op
[info] MissingReqFieldBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                                  N/A  thrpt    5       500.935 ±    1107.969  MB/sec
[info] MissingReqFieldBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                             N/A  thrpt    5       929.864 ±    2058.774    B/op
[info] MissingReqFieldBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                              N/A  thrpt    5         0.008 ±       0.045  MB/sec
[info] MissingReqFieldBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                         N/A  thrpt    5         0.015 ±       0.084    B/op
[info] MissingReqFieldBenchmark.readDslJsonJava:·gc.count                                                N/A  thrpt    5         4.000                counts
[info] MissingReqFieldBenchmark.readDslJsonJava:·gc.time                                                 N/A  thrpt    5         9.000                    ms
[info] MissingReqFieldBenchmark.readJacksonScala                                                         N/A  thrpt    5    308698.223 ±   17793.918   ops/s
[info] MissingReqFieldBenchmark.readJacksonScala:·gc.alloc.rate                                          N/A  thrpt    5       726.512 ±      41.845  MB/sec
[info] MissingReqFieldBenchmark.readJacksonScala:·gc.alloc.rate.norm                                     N/A  thrpt    5      3704.001 ±       0.001    B/op
[info] MissingReqFieldBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                 N/A  thrpt    5       666.749 ±       1.136  MB/sec
[info] MissingReqFieldBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                            N/A  thrpt    5      3399.928 ±     200.394    B/op
[info] MissingReqFieldBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                             N/A  thrpt    5         0.454 ±       3.732  MB/sec
[info] MissingReqFieldBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                        N/A  thrpt    5         2.327 ±      19.122    B/op
[info] MissingReqFieldBenchmark.readJacksonScala:·gc.count                                               N/A  thrpt    5         5.000                counts
[info] MissingReqFieldBenchmark.readJacksonScala:·gc.time                                                N/A  thrpt    5         6.000                    ms
[info] MissingReqFieldBenchmark.readJsoniterScala                                                        N/A  thrpt    5    723370.860 ±    7352.638   ops/s
[info] MissingReqFieldBenchmark.readJsoniterScala:·gc.alloc.rate                                         N/A  thrpt    5       647.179 ±       6.648  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                    N/A  thrpt    5      1408.001 ±       0.001    B/op
[info] MissingReqFieldBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                N/A  thrpt    5       675.780 ±       1.516  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                           N/A  thrpt    5      1470.233 ±      16.147    B/op
[info] MissingReqFieldBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                            N/A  thrpt    5         0.317 ±       2.504  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                       N/A  thrpt    5         0.691 ±       5.464    B/op
[info] MissingReqFieldBenchmark.readJsoniterScala:·gc.count                                              N/A  thrpt    5         5.000                counts
[info] MissingReqFieldBenchmark.readJsoniterScala:·gc.time                                               N/A  thrpt    5         5.000                    ms
[info] MissingReqFieldBenchmark.readJsoniterStackless                                                    N/A  thrpt    5   4020784.239 ±  114841.074   ops/s
[info] MissingReqFieldBenchmark.readJsoniterStackless:·gc.alloc.rate                                     N/A  thrpt    5      2350.564 ±      67.813  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterStackless:·gc.alloc.rate.norm                                N/A  thrpt    5       920.000 ±       0.001    B/op
[info] MissingReqFieldBenchmark.readJsoniterStackless:·gc.churn.PS_Eden_Space                            N/A  thrpt    5      2442.086 ±    1430.679  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterStackless:·gc.churn.PS_Eden_Space.norm                       N/A  thrpt    5       955.914 ±     562.135    B/op
[info] MissingReqFieldBenchmark.readJsoniterStackless:·gc.churn.PS_Survivor_Space                        N/A  thrpt    5         0.071 ±       0.146  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterStackless:·gc.churn.PS_Survivor_Space.norm                   N/A  thrpt    5         0.028 ±       0.057    B/op
[info] MissingReqFieldBenchmark.readJsoniterStackless:·gc.count                                          N/A  thrpt    5        18.000                counts
[info] MissingReqFieldBenchmark.readJsoniterStackless:·gc.time                                           N/A  thrpt    5        15.000                    ms
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump                                              N/A  thrpt    5   8250343.521 ±  325501.173   ops/s
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.alloc.rate                               N/A  thrpt    5       880.808 ±      34.478  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.alloc.rate.norm                          N/A  thrpt    5       168.000 ±       0.001    B/op
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space                      N/A  thrpt    5       946.010 ±    1426.475  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space.norm                 N/A  thrpt    5       180.682 ±     275.488    B/op
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space                  N/A  thrpt    5         0.029 ±       0.122  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space.norm             N/A  thrpt    5         0.006 ±       0.023    B/op
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.count                                    N/A  thrpt    5         7.000                counts
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.time                                     N/A  thrpt    5         6.000                    ms
[info] MissingReqFieldBenchmark.readPlayJson                                                             N/A  thrpt    5    186318.593 ±    3569.437   ops/s
[info] MissingReqFieldBenchmark.readPlayJson:·gc.alloc.rate                                              N/A  thrpt    5      1598.638 ±      30.656  MB/sec
[info] MissingReqFieldBenchmark.readPlayJson:·gc.alloc.rate.norm                                         N/A  thrpt    5     13504.002 ±       0.001    B/op
[info] MissingReqFieldBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                     N/A  thrpt    5      1607.309 ±    1417.487  MB/sec
[info] MissingReqFieldBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                N/A  thrpt    5     13579.744 ±   12029.398    B/op
[info] MissingReqFieldBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                 N/A  thrpt    5         0.067 ±       0.191  MB/sec
[info] MissingReqFieldBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                            N/A  thrpt    5         0.561 ±       1.604    B/op
[info] MissingReqFieldBenchmark.readPlayJson:·gc.count                                                   N/A  thrpt    5        12.000                counts
[info] MissingReqFieldBenchmark.readPlayJson:·gc.time                                                    N/A  thrpt    5        12.000                    ms
[info] MissingReqFieldBenchmark.readUPickle                                                              N/A  thrpt    5    315970.496 ±    3772.174   ops/s
[info] MissingReqFieldBenchmark.readUPickle:·gc.alloc.rate                                               N/A  thrpt    5       565.339 ±       6.791  MB/sec
[info] MissingReqFieldBenchmark.readUPickle:·gc.alloc.rate.norm                                          N/A  thrpt    5      2816.001 ±       0.001    B/op
[info] MissingReqFieldBenchmark.readUPickle:·gc.churn.PS_Eden_Space                                      N/A  thrpt    5       506.251 ±    1122.568  MB/sec
[info] MissingReqFieldBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm                                 N/A  thrpt    5      2523.303 ±    5596.576    B/op
[info] MissingReqFieldBenchmark.readUPickle:·gc.churn.PS_Survivor_Space                                  N/A  thrpt    5         0.347 ±       2.855  MB/sec
[info] MissingReqFieldBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm                             N/A  thrpt    5         1.724 ±      14.183    B/op
[info] MissingReqFieldBenchmark.readUPickle:·gc.count                                                    N/A  thrpt    5         4.000                counts
[info] MissingReqFieldBenchmark.readUPickle:·gc.time                                                     N/A  thrpt    5         6.000                    ms
[info] MutableBitSetBenchmark.readJsoniterScala                                                          128  thrpt    5   1099587.890 ±   19829.168   ops/s
[info] MutableBitSetBenchmark.readJsoniterScala:·gc.alloc.rate                                           128  thrpt    5        61.484 ±       1.108  MB/sec
[info] MutableBitSetBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                      128  thrpt    5        88.000 ±       0.001    B/op
[info] MutableBitSetBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5       102.319 ±     881.000  MB/sec
[info] MutableBitSetBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5       147.634 ±    1271.175    B/op
[info] MutableBitSetBenchmark.readJsoniterScala:·gc.count                                                128  thrpt    5         1.000                counts
[info] MutableBitSetBenchmark.readJsoniterScala:·gc.time                                                 128  thrpt    5         2.000                    ms
[info] MutableBitSetBenchmark.readPlayJson                                                               128  thrpt    5     64542.153 ±    1076.126   ops/s
[info] MutableBitSetBenchmark.readPlayJson:·gc.alloc.rate                                                128  thrpt    5      2914.010 ±      48.982  MB/sec
[info] MutableBitSetBenchmark.readPlayJson:·gc.alloc.rate.norm                                           128  thrpt    5     71056.007 ±       0.001    B/op
[info] MutableBitSetBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                       128  thrpt    5      2841.378 ±    1169.244  MB/sec
[info] MutableBitSetBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5     69298.746 ±   29190.022    B/op
[info] MutableBitSetBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.096 ±       0.201  MB/sec
[info] MutableBitSetBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5         2.339 ±       4.931    B/op
[info] MutableBitSetBenchmark.readPlayJson:·gc.count                                                     128  thrpt    5        21.000                counts
[info] MutableBitSetBenchmark.readPlayJson:·gc.time                                                      128  thrpt    5        21.000                    ms
[info] MutableBitSetBenchmark.writeJacksonScala                                                          128  thrpt    5   1530562.079 ±   35937.024   ops/s
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.alloc.rate                                           128  thrpt    5       879.165 ±      20.574  MB/sec
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                      128  thrpt    5       904.000 ±       0.001    B/op
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5       935.234 ±    1408.645  MB/sec
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5       962.802 ±    1464.293    B/op
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.021 ±       0.113  MB/sec
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         0.021 ±       0.117    B/op
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.count                                                128  thrpt    5         7.000                counts
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.time                                                 128  thrpt    5         7.000                    ms
[info] MutableBitSetBenchmark.writeJsoniterScala                                                         128  thrpt    5   1773951.619 ±   73888.524   ops/s
[info] MutableBitSetBenchmark.writeJsoniterScala:·gc.alloc.rate                                          128  thrpt    5       496.030 ±      20.453  MB/sec
[info] MutableBitSetBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                     128  thrpt    5       440.000 ±       0.001    B/op
[info] MutableBitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5       474.008 ±    1066.721  MB/sec
[info] MutableBitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5       421.506 ±     949.352    B/op
[info] MutableBitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.332 ±       2.723  MB/sec
[info] MutableBitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         0.298 ±       2.450    B/op
[info] MutableBitSetBenchmark.writeJsoniterScala:·gc.count                                               128  thrpt    5         4.000                counts
[info] MutableBitSetBenchmark.writeJsoniterScala:·gc.time                                                128  thrpt    5         7.000                    ms
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc                                                 128  thrpt    5   1829785.837 ±    1390.578   ops/s
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                  128  thrpt    5        18.602 ±       0.016  MB/sec
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                             128  thrpt    5        16.000 ±       0.001    B/op
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc:·gc.count                                       128  thrpt    5           ≈ 0                counts
[info] MutableBitSetBenchmark.writePlayJson                                                              128  thrpt    5     38848.128 ±    2273.504   ops/s
[info] MutableBitSetBenchmark.writePlayJson:·gc.alloc.rate                                               128  thrpt    5      1701.330 ±      98.284  MB/sec
[info] MutableBitSetBenchmark.writePlayJson:·gc.alloc.rate.norm                                          128  thrpt    5     68920.011 ±       0.002    B/op
[info] MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                      128  thrpt    5      1610.694 ±    1415.046  MB/sec
[info] MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5     65192.066 ±   55863.434    B/op
[info] MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.033 ±       0.156  MB/sec
[info] MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         1.347 ±       6.284    B/op
[info] MutableBitSetBenchmark.writePlayJson:·gc.count                                                    128  thrpt    5        12.000                counts
[info] MutableBitSetBenchmark.writePlayJson:·gc.time                                                     128  thrpt    5        11.000                    ms
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala                                               128  thrpt    5    247039.735 ±    3336.409   ops/s
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate                                128  thrpt    5       966.969 ±      13.177  MB/sec
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm                           128  thrpt    5      6160.002 ±       0.001    B/op
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                       128  thrpt    5       942.435 ±    1419.494  MB/sec
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                  128  thrpt    5      6003.258 ±    9036.003    B/op
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                   128  thrpt    5         0.029 ±       0.108  MB/sec
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm              128  thrpt    5         0.186 ±       0.686    B/op
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.count                                     128  thrpt    5         7.000                counts
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.time                                      128  thrpt    5         6.000                    ms
[info] MutableLongMapOfBooleansBenchmark.readPlayJson                                                    128  thrpt    5     31520.267 ±     993.885   ops/s
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.alloc.rate                                     128  thrpt    5      1721.486 ±      55.290  MB/sec
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm                                128  thrpt    5     85944.014 ±       0.002    B/op
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                            128  thrpt    5      1743.629 ±    1402.679  MB/sec
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5     87134.745 ±   71773.880    B/op
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.042 ±       0.234  MB/sec
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         2.095 ±      11.781    B/op
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.count                                          128  thrpt    5        13.000                counts
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.time                                           128  thrpt    5        15.000                    ms
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala                                               128  thrpt    5    117206.026 ±    4775.413   ops/s
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate                                128  thrpt    5      1508.069 ±      61.846  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm                           128  thrpt    5     20248.004 ±       0.001    B/op
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                       128  thrpt    5      1607.993 ±    1414.696  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                  128  thrpt    5     21571.867 ±   18556.761    B/op
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                   128  thrpt    5         0.054 ±       0.134  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm              128  thrpt    5         0.727 ±       1.790    B/op
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.count                                     128  thrpt    5        12.000                counts
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.time                                      128  thrpt    5        11.000                    ms
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala                                              128  thrpt    5    360660.525 ±   11553.118   ops/s
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate                               128  thrpt    5      1717.915 ±      55.078  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                          128  thrpt    5      7496.001 ±       0.001    B/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                      128  thrpt    5      1621.304 ±    1425.030  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                 128  thrpt    5      7069.998 ±    6110.325    B/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                  128  thrpt    5         0.071 ±       0.122  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm             128  thrpt    5         0.309 ±       0.527    B/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.count                                    128  thrpt    5        12.000                counts
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.time                                     128  thrpt    5        10.000                    ms
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc                                      128  thrpt    5    429992.029 ±   13116.186   ops/s
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                       128  thrpt    5      1473.269 ±      44.055  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                  128  thrpt    5      5392.001 ±       0.001    B/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space              128  thrpt    5      1484.463 ±    1166.051  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm         128  thrpt    5      5430.110 ±    4176.397    B/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space          128  thrpt    5         0.042 ±       0.127  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm     128  thrpt    5         0.153 ±       0.468    B/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count                            128  thrpt    5        11.000                counts
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.time                             128  thrpt    5        10.000                    ms
[info] MutableLongMapOfBooleansBenchmark.writePlayJson                                                   128  thrpt    5     51495.983 ±    2415.891   ops/s
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.alloc.rate                                    128  thrpt    5      1324.600 ±      62.241  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm                               128  thrpt    5     40480.009 ±       0.001    B/op
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                           128  thrpt    5      1337.842 ±      12.048  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5     40889.133 ±    1779.286    B/op
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.042 ±       0.188  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         1.266 ±       5.712    B/op
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.count                                         128  thrpt    5        10.000                counts
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.time                                          128  thrpt    5        10.000                    ms
[info] MutableMapOfIntsToBooleansBenchmark.readCirce                                                     128  thrpt    5     78862.202 ±    1636.262   ops/s
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.alloc.rate                                      128  thrpt    5      1414.805 ±      30.005  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.alloc.rate.norm                                 128  thrpt    5     28232.006 ±       0.001    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space                             128  thrpt    5      1481.979 ±    1162.455  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5     29575.133 ±   23261.863    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.042 ±       0.113  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         0.831 ±       2.257    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.count                                           128  thrpt    5        11.000                counts
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.time                                            128  thrpt    5        10.000                    ms
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala                                              128  thrpt    5    112000.417 ±    9924.479   ops/s
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.alloc.rate                               128  thrpt    5       553.937 ±      49.018  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm                          128  thrpt    5      7784.004 ±       0.001    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                      128  thrpt    5       502.669 ±    1112.735  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                 128  thrpt    5      7093.162 ±   15756.644    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                  128  thrpt    5         0.469 ±       3.903  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm             128  thrpt    5         6.859 ±      57.196    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.count                                    128  thrpt    5         4.000                counts
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.time                                     128  thrpt    5         8.000                    ms
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala                                             128  thrpt    5    195119.059 ±    4375.268   ops/s
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.alloc.rate                              128  thrpt    5       803.425 ±      17.754  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm                         128  thrpt    5      6480.002 ±       0.001    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                     128  thrpt    5       807.633 ±    1158.193  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                128  thrpt    5      6508.375 ±    9230.848    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                 128  thrpt    5         0.021 ±       0.080  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm            128  thrpt    5         0.168 ±       0.647    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.count                                   128  thrpt    5         6.000                counts
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.time                                    128  thrpt    5         5.000                    ms
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson                                                  128  thrpt    5     19552.702 ±     331.749   ops/s
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.alloc.rate                                   128  thrpt    5      1119.251 ±      19.247  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm                              128  thrpt    5     90080.024 ±       0.014    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                          128  thrpt    5      1201.632 ±    1149.621  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5     96774.799 ±   93350.425    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                      128  thrpt    5         0.029 ±       0.122  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5         2.346 ±       9.773    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.count                                        128  thrpt    5         9.000                counts
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.time                                         128  thrpt    5         9.000                    ms
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala                                             128  thrpt    5    149232.257 ±     863.659   ops/s
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.alloc.rate                              128  thrpt    5      1017.966 ±       5.924  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm                         128  thrpt    5     10736.003 ±       0.001    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                     128  thrpt    5      1067.943 ±    1408.276  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                128  thrpt    5     11264.030 ±   14864.083    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                 128  thrpt    5         0.029 ±       0.072  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm            128  thrpt    5         0.307 ±       0.755    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.count                                   128  thrpt    5         8.000                counts
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.time                                    128  thrpt    5         8.000                    ms
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala                                            128  thrpt    5    571695.882 ±    2756.580   ops/s
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate                             128  thrpt    5       636.472 ±       2.994  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                        128  thrpt    5      1752.001 ±       0.001    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                    128  thrpt    5       538.456 ±    1159.067  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm               128  thrpt    5      1481.735 ±    3189.560    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                128  thrpt    5         0.321 ±       2.676  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm           128  thrpt    5         0.884 ±       7.366    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.count                                  128  thrpt    5         4.000                counts
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.time                                   128  thrpt    5         5.000                    ms
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc                                    128  thrpt    5    584593.751 ±    6346.967   ops/s
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                     128  thrpt    5        11.886 ±       0.128  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                128  thrpt    5        32.001 ±       0.001    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count                          128  thrpt    5           ≈ 0                counts
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson                                                 128  thrpt    5     19957.135 ±     175.347   ops/s
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.alloc.rate                                  128  thrpt    5       416.834 ±       3.688  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm                             128  thrpt    5     32872.024 ±       0.013    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                         128  thrpt    5       440.254 ±     982.189  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5     34726.179 ±   77516.055    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.470 ±       4.012  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5        37.098 ±     316.897    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.count                                       128  thrpt    5         4.000                counts
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.time                                        128  thrpt    5        11.000                    ms
[info] MutableSetOfIntsBenchmark.readCirce                                                               128  thrpt    5     74986.678 ±    2172.572   ops/s
[info] MutableSetOfIntsBenchmark.readCirce:·gc.alloc.rate                                                128  thrpt    5      1381.412 ±      39.744  MB/sec
[info] MutableSetOfIntsBenchmark.readCirce:·gc.alloc.rate.norm                                           128  thrpt    5     28992.006 ±       0.001    B/op
[info] MutableSetOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                       128  thrpt    5      1347.402 ±       7.947  MB/sec
[info] MutableSetOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5     28279.401 ±     763.657    B/op
[info] MutableSetOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.017 ±       0.105  MB/sec
[info] MutableSetOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5         0.348 ±       2.178    B/op
[info] MutableSetOfIntsBenchmark.readCirce:·gc.count                                                     128  thrpt    5        10.000                counts
[info] MutableSetOfIntsBenchmark.readCirce:·gc.time                                                      128  thrpt    5         8.000                    ms
[info] MutableSetOfIntsBenchmark.readJacksonScala                                                        128  thrpt    5    148243.420 ±    5737.673   ops/s
[info] MutableSetOfIntsBenchmark.readJacksonScala:·gc.alloc.rate                                         128  thrpt    5       633.715 ±      24.461  MB/sec
[info] MutableSetOfIntsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                    128  thrpt    5      6728.003 ±       0.001    B/op
[info] MutableSetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                128  thrpt    5       635.883 ±     267.562  MB/sec
[info] MutableSetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5      6748.970 ±    2754.219    B/op
[info] MutableSetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.482 ±       3.832  MB/sec
[info] MutableSetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         5.151 ±      40.970    B/op
[info] MutableSetOfIntsBenchmark.readJacksonScala:·gc.count                                              128  thrpt    5         5.000                counts
[info] MutableSetOfIntsBenchmark.readJacksonScala:·gc.time                                               128  thrpt    5         9.000                    ms
[info] MutableSetOfIntsBenchmark.readJsoniterScala                                                       128  thrpt    5    224957.280 ±     918.919   ops/s
[info] MutableSetOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate                                        128  thrpt    5       801.688 ±       3.047  MB/sec
[info] MutableSetOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                   128  thrpt    5      5608.002 ±       0.001    B/op
[info] MutableSetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                               128  thrpt    5       807.858 ±    1158.986  MB/sec
[info] MutableSetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5      5650.224 ±    8089.209    B/op
[info] MutableSetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.029 ±       0.108  MB/sec
[info] MutableSetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         0.204 ±       0.753    B/op
[info] MutableSetOfIntsBenchmark.readJsoniterScala:·gc.count                                             128  thrpt    5         6.000                counts
[info] MutableSetOfIntsBenchmark.readJsoniterScala:·gc.time                                              128  thrpt    5         5.000                    ms
[info] MutableSetOfIntsBenchmark.readPlayJson                                                            128  thrpt    5     41569.619 ±    1141.457   ops/s
[info] MutableSetOfIntsBenchmark.readPlayJson:·gc.alloc.rate                                             128  thrpt    5      1672.733 ±      45.304  MB/sec
[info] MutableSetOfIntsBenchmark.readPlayJson:·gc.alloc.rate.norm                                        128  thrpt    5     63328.010 ±       0.001    B/op
[info] MutableSetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1613.509 ±    1417.608  MB/sec
[info] MutableSetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5     61132.425 ±   54703.820    B/op
[info] MutableSetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.058 ±       0.191  MB/sec
[info] MutableSetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         2.214 ±       7.318    B/op
[info] MutableSetOfIntsBenchmark.readPlayJson:·gc.count                                                  128  thrpt    5        12.000                counts
[info] MutableSetOfIntsBenchmark.readPlayJson:·gc.time                                                   128  thrpt    5        11.000                    ms
[info] MutableSetOfIntsBenchmark.readUPickle                                                             128  thrpt    5     96602.880 ±    4813.582   ops/s
[info] MutableSetOfIntsBenchmark.readUPickle:·gc.alloc.rate                                              128  thrpt    5      1224.789 ±      60.659  MB/sec
[info] MutableSetOfIntsBenchmark.readUPickle:·gc.alloc.rate.norm                                         128  thrpt    5     19952.005 ±       0.001    B/op
[info] MutableSetOfIntsBenchmark.readUPickle:·gc.churn.PS_Eden_Space                                     128  thrpt    5      1213.810 ±    1161.458  MB/sec
[info] MutableSetOfIntsBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5     19746.722 ±   18568.626    B/op
[info] MutableSetOfIntsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.037 ±       0.132  MB/sec
[info] MutableSetOfIntsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         0.611 ±       2.166    B/op
[info] MutableSetOfIntsBenchmark.readUPickle:·gc.count                                                   128  thrpt    5         9.000                counts
[info] MutableSetOfIntsBenchmark.readUPickle:·gc.time                                                    128  thrpt    5         8.000                    ms
[info] MutableSetOfIntsBenchmark.writeCirce                                                              128  thrpt    5    221023.609 ±    7035.875   ops/s
[info] MutableSetOfIntsBenchmark.writeCirce:·gc.alloc.rate                                               128  thrpt    5      1510.031 ±      47.032  MB/sec
[info] MutableSetOfIntsBenchmark.writeCirce:·gc.alloc.rate.norm                                          128  thrpt    5     10752.002 ±       0.001    B/op
[info] MutableSetOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                      128  thrpt    5      1480.284 ±    1164.652  MB/sec
[info] MutableSetOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5     10538.879 ±    8242.609    B/op
[info] MutableSetOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.037 ±       0.119  MB/sec
[info] MutableSetOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         0.267 ±       0.846    B/op
[info] MutableSetOfIntsBenchmark.writeCirce:·gc.count                                                    128  thrpt    5        11.000                counts
[info] MutableSetOfIntsBenchmark.writeCirce:·gc.time                                                     128  thrpt    5        10.000                    ms
[info] MutableSetOfIntsBenchmark.writeJacksonScala                                                       128  thrpt    5    521369.350 ±   21928.276   ops/s
[info] MutableSetOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate                                        128  thrpt    5       424.050 ±      17.871  MB/sec
[info] MutableSetOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                   128  thrpt    5      1280.001 ±       0.001    B/op
[info] MutableSetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                               128  thrpt    5       337.979 ±    1212.738  MB/sec
[info] MutableSetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5      1019.756 ±    3655.048    B/op
[info] MutableSetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.471 ±       4.033  MB/sec
[info] MutableSetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         1.415 ±      12.114    B/op
[info] MutableSetOfIntsBenchmark.writeJacksonScala:·gc.count                                             128  thrpt    5         3.000                counts
[info] MutableSetOfIntsBenchmark.writeJacksonScala:·gc.time                                              128  thrpt    5         9.000                    ms
[info] MutableSetOfIntsBenchmark.writeJsoniterScala                                                      128  thrpt    5    666265.109 ±   38850.771   ops/s
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate                                       128  thrpt    5       359.018 ±      20.846  MB/sec
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                  128  thrpt    5       848.001 ±       0.001    B/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                              128  thrpt    5       306.993 ±    1079.124  MB/sec
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5       726.230 ±    2553.107    B/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.010 ±       0.090  MB/sec
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         0.024 ±       0.210    B/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.count                                            128  thrpt    5         3.000                counts
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.time                                             128  thrpt    5         6.000                    ms
[info] MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc                                              128  thrpt    5    687152.231 ±    7482.805   ops/s
[info] MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                               128  thrpt    5         6.986 ±       0.076  MB/sec
[info] MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                          128  thrpt    5        16.001 ±       0.001    B/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                    128  thrpt    5           ≈ 0                counts
[info] MutableSetOfIntsBenchmark.writePlayJson                                                           128  thrpt    5     31215.930 ±     557.089   ops/s
[info] MutableSetOfIntsBenchmark.writePlayJson:·gc.alloc.rate                                            128  thrpt    5      1646.728 ±      29.379  MB/sec
[info] MutableSetOfIntsBenchmark.writePlayJson:·gc.alloc.rate.norm                                       128  thrpt    5     83024.014 ±       0.002    B/op
[info] MutableSetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                   128  thrpt    5      1614.446 ±    1423.511  MB/sec
[info] MutableSetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5     81365.802 ±   71054.238    B/op
[info] MutableSetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.050 ±       0.176  MB/sec
[info] MutableSetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         2.521 ±       8.891    B/op
[info] MutableSetOfIntsBenchmark.writePlayJson:·gc.count                                                 128  thrpt    5        12.000                counts
[info] MutableSetOfIntsBenchmark.writePlayJson:·gc.time                                                  128  thrpt    5        11.000                    ms
[info] MutableSetOfIntsBenchmark.writeUPickle                                                            128  thrpt    5    112947.254 ±    8648.248   ops/s
[info] MutableSetOfIntsBenchmark.writeUPickle:·gc.alloc.rate                                             128  thrpt    5      1493.478 ±     114.595  MB/sec
[info] MutableSetOfIntsBenchmark.writeUPickle:·gc.alloc.rate.norm                                        128  thrpt    5     20808.004 ±       0.001    B/op
[info] MutableSetOfIntsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1485.565 ±    1162.022  MB/sec
[info] MutableSetOfIntsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5     20677.757 ±   15450.822    B/op
[info] MutableSetOfIntsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.037 ±       0.132  MB/sec
[info] MutableSetOfIntsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         0.516 ±       1.806    B/op
[info] MutableSetOfIntsBenchmark.writeUPickle:·gc.count                                                  128  thrpt    5        11.000                counts
[info] MutableSetOfIntsBenchmark.writeUPickle:·gc.time                                                   128  thrpt    5         9.000                    ms
[info] NestedStructsBenchmark.readCirce                                                                  128  thrpt    5     62354.670 ±    2359.367   ops/s
[info] NestedStructsBenchmark.readCirce:·gc.alloc.rate                                                   128  thrpt    5      2855.643 ±     110.026  MB/sec
[info] NestedStructsBenchmark.readCirce:·gc.alloc.rate.norm                                              128  thrpt    5     72072.007 ±       0.001    B/op
[info] NestedStructsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                          128  thrpt    5      2847.306 ±    1160.621  MB/sec
[info] NestedStructsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                     128  thrpt    5     71824.441 ±   27129.233    B/op
[info] NestedStructsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                      128  thrpt    5         0.079 ±       0.174  MB/sec
[info] NestedStructsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5         1.993 ±       4.375    B/op
[info] NestedStructsBenchmark.readCirce:·gc.count                                                        128  thrpt    5        21.000                counts
[info] NestedStructsBenchmark.readCirce:·gc.time                                                         128  thrpt    5        18.000                    ms
[info] NestedStructsBenchmark.readJacksonScala                                                           128  thrpt    5    119275.535 ±    3813.969   ops/s
[info] NestedStructsBenchmark.readJacksonScala:·gc.alloc.rate                                            128  thrpt    5      1538.278 ±      48.921  MB/sec
[info] NestedStructsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                       128  thrpt    5     20296.004 ±       0.001    B/op
[info] NestedStructsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5      1473.462 ±    1162.042  MB/sec
[info] NestedStructsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5     19445.916 ±   15466.891    B/op
[info] NestedStructsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.021 ±       0.080  MB/sec
[info] NestedStructsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         0.276 ±       1.062    B/op
[info] NestedStructsBenchmark.readJacksonScala:·gc.count                                                 128  thrpt    5        11.000                counts
[info] NestedStructsBenchmark.readJacksonScala:·gc.time                                                  128  thrpt    5        11.000                    ms
[info] NestedStructsBenchmark.readJsoniterScala                                                          128  thrpt    5    473777.977 ±   19976.355   ops/s
[info] NestedStructsBenchmark.readJsoniterScala:·gc.alloc.rate                                           128  thrpt    5      1237.845 ±      52.374  MB/sec
[info] NestedStructsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                      128  thrpt    5      4112.001 ±       0.001    B/op
[info] NestedStructsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5      1213.400 ±    1158.702  MB/sec
[info] NestedStructsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5      4028.250 ±    3815.571    B/op
[info] NestedStructsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.062 ±       0.139  MB/sec
[info] NestedStructsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         0.207 ±       0.460    B/op
[info] NestedStructsBenchmark.readJsoniterScala:·gc.count                                                128  thrpt    5         9.000                counts
[info] NestedStructsBenchmark.readJsoniterScala:·gc.time                                                 128  thrpt    5         8.000                    ms
[info] NestedStructsBenchmark.readPlayJson                                                               128  thrpt    5     16101.707 ±      99.751   ops/s
[info] NestedStructsBenchmark.readPlayJson:·gc.alloc.rate                                                128  thrpt    5      2051.743 ±      12.072  MB/sec
[info] NestedStructsBenchmark.readPlayJson:·gc.alloc.rate.norm                                           128  thrpt    5    200528.030 ±       0.016    B/op
[info] NestedStructsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                       128  thrpt    5      2016.997 ±      30.625  MB/sec
[info] NestedStructsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5    197132.687 ±    3397.062    B/op
[info] NestedStructsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.058 ±       0.208  MB/sec
[info] NestedStructsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5         5.696 ±      20.276    B/op
[info] NestedStructsBenchmark.readPlayJson:·gc.count                                                     128  thrpt    5        15.000                counts
[info] NestedStructsBenchmark.readPlayJson:·gc.time                                                      128  thrpt    5        15.000                    ms
[info] NestedStructsBenchmark.writeCirce                                                                 128  thrpt    5     41732.229 ±    1590.963   ops/s
[info] NestedStructsBenchmark.writeCirce:·gc.alloc.rate                                                  128  thrpt    5      2418.613 ±      92.431  MB/sec
[info] NestedStructsBenchmark.writeCirce:·gc.alloc.rate.norm                                             128  thrpt    5     91208.011 ±       0.002    B/op
[info] NestedStructsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                         128  thrpt    5      2433.961 ±    1434.906  MB/sec
[info] NestedStructsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5     91804.439 ±   54553.393    B/op
[info] NestedStructsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                     128  thrpt    5         0.079 ±       0.154  MB/sec
[info] NestedStructsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5         2.977 ±       5.743    B/op
[info] NestedStructsBenchmark.writeCirce:·gc.count                                                       128  thrpt    5        18.000                counts
[info] NestedStructsBenchmark.writeCirce:·gc.time                                                        128  thrpt    5        15.000                    ms
[info] NestedStructsBenchmark.writeJacksonScala                                                          128  thrpt    5    229731.480 ±   13648.349   ops/s
[info] NestedStructsBenchmark.writeJacksonScala:·gc.alloc.rate                                           128  thrpt    5      1068.515 ±      63.363  MB/sec
[info] NestedStructsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                      128  thrpt    5      7320.002 ±       0.001    B/op
[info] NestedStructsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5      1067.651 ±    1409.380  MB/sec
[info] NestedStructsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5      7290.591 ±    9356.523    B/op
[info] NestedStructsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.012 ±       0.072  MB/sec
[info] NestedStructsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         0.085 ±       0.488    B/op
[info] NestedStructsBenchmark.writeJacksonScala:·gc.count                                                128  thrpt    5         8.000                counts
[info] NestedStructsBenchmark.writeJacksonScala:·gc.time                                                 128  thrpt    5         8.000                    ms
[info] NestedStructsBenchmark.writeJsoniterScala                                                         128  thrpt    5   1383258.680 ±    6167.094   ops/s
[info] NestedStructsBenchmark.writeJsoniterScala:·gc.alloc.rate                                          128  thrpt    5       696.075 ±       3.126  MB/sec
[info] NestedStructsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                     128  thrpt    5       792.000 ±       0.001    B/op
[info] NestedStructsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5       673.462 ±       0.071  MB/sec
[info] NestedStructsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5       766.272 ±       3.414    B/op
[info] NestedStructsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.327 ±       2.684  MB/sec
[info] NestedStructsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         0.373 ±       3.056    B/op
[info] NestedStructsBenchmark.writeJsoniterScala:·gc.count                                               128  thrpt    5         5.000                counts
[info] NestedStructsBenchmark.writeJsoniterScala:·gc.time                                                128  thrpt    5         6.000                    ms
[info] NestedStructsBenchmark.writeJsoniterScalaPrealloc                                                 128  thrpt    5   1405287.434 ±    2578.310   ops/s
[info] NestedStructsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                  128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] NestedStructsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                             128  thrpt    5        ≈ 10⁻⁴                  B/op
[info] NestedStructsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                       128  thrpt    5           ≈ 0                counts
[info] NestedStructsBenchmark.writePlayJson                                                              128  thrpt    5     33019.210 ±     811.058   ops/s
[info] NestedStructsBenchmark.writePlayJson:·gc.alloc.rate                                               128  thrpt    5      1769.107 ±      44.150  MB/sec
[info] NestedStructsBenchmark.writePlayJson:·gc.alloc.rate.norm                                          128  thrpt    5     84312.013 ±       0.002    B/op
[info] NestedStructsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                      128  thrpt    5      1744.024 ±    1409.824  MB/sec
[info] NestedStructsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5     83070.422 ±   66168.334    B/op
[info] NestedStructsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.046 ±       0.143  MB/sec
[info] NestedStructsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         2.182 ±       6.821    B/op
[info] NestedStructsBenchmark.writePlayJson:·gc.count                                                    128  thrpt    5        13.000                counts
[info] NestedStructsBenchmark.writePlayJson:·gc.time                                                     128  thrpt    5        11.000                    ms
[info] PrimitivesBenchmark.readCirce                                                                     N/A  thrpt    5    705174.286 ±    9004.833   ops/s
[info] PrimitivesBenchmark.readCirce:·gc.alloc.rate                                                      N/A  thrpt    5      2143.884 ±      25.894  MB/sec
[info] PrimitivesBenchmark.readCirce:·gc.alloc.rate.norm                                                 N/A  thrpt    5      4784.001 ±       0.001    B/op
[info] PrimitivesBenchmark.readCirce:·gc.churn.PS_Eden_Space                                             N/A  thrpt    5      2162.842 ±    1180.556  MB/sec
[info] PrimitivesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                        N/A  thrpt    5      4825.734 ±    2610.229    B/op
[info] PrimitivesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                         N/A  thrpt    5         0.075 ±       0.091  MB/sec
[info] PrimitivesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                    N/A  thrpt    5         0.167 ±       0.205    B/op
[info] PrimitivesBenchmark.readCirce:·gc.count                                                           N/A  thrpt    5        16.000                counts
[info] PrimitivesBenchmark.readCirce:·gc.time                                                            N/A  thrpt    5        14.000                    ms
[info] PrimitivesBenchmark.readJacksonScala                                                              N/A  thrpt    5   1481371.451 ±   91117.571   ops/s
[info] PrimitivesBenchmark.readJacksonScala:·gc.alloc.rate                                               N/A  thrpt    5      1121.939 ±      69.012  MB/sec
[info] PrimitivesBenchmark.readJacksonScala:·gc.alloc.rate.norm                                          N/A  thrpt    5      1192.000 ±       0.001    B/op
[info] PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                      N/A  thrpt    5      1202.199 ±    1150.279  MB/sec
[info] PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                 N/A  thrpt    5      1279.375 ±    1248.585    B/op
[info] PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                  N/A  thrpt    5         0.042 ±       0.127  MB/sec
[info] PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                             N/A  thrpt    5         0.044 ±       0.135    B/op
[info] PrimitivesBenchmark.readJacksonScala:·gc.count                                                    N/A  thrpt    5         9.000                counts
[info] PrimitivesBenchmark.readJacksonScala:·gc.time                                                     N/A  thrpt    5        10.000                    ms
[info] PrimitivesBenchmark.readJsoniterScala                                                             N/A  thrpt    5   6469587.641 ±   39846.909   ops/s
[info] PrimitivesBenchmark.readJsoniterScala:·gc.alloc.rate                                              N/A  thrpt    5       197.312 ±       1.207  MB/sec
[info] PrimitivesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                         N/A  thrpt    5        48.000 ±       0.001    B/op
[info] PrimitivesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                     N/A  thrpt    5       204.640 ±    1079.010  MB/sec
[info] PrimitivesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                                N/A  thrpt    5        49.865 ±     262.923    B/op
[info] PrimitivesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                 N/A  thrpt    5         0.273 ±       2.351  MB/sec
[info] PrimitivesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                            N/A  thrpt    5         0.067 ±       0.573    B/op
[info] PrimitivesBenchmark.readJsoniterScala:·gc.count                                                   N/A  thrpt    5         2.000                counts
[info] PrimitivesBenchmark.readJsoniterScala:·gc.time                                                    N/A  thrpt    5         3.000                    ms
[info] PrimitivesBenchmark.readPlayJson                                                                  N/A  thrpt    5    228462.244 ±    5647.445   ops/s
[info] PrimitivesBenchmark.readPlayJson:·gc.alloc.rate                                                   N/A  thrpt    5      1572.831 ±      38.609  MB/sec
[info] PrimitivesBenchmark.readPlayJson:·gc.alloc.rate.norm                                              N/A  thrpt    5     10832.002 ±       0.001    B/op
[info] PrimitivesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                          N/A  thrpt    5      1607.345 ±    1416.253  MB/sec
[info] PrimitivesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                     N/A  thrpt    5     11070.778 ±    9774.579    B/op
[info] PrimitivesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                      N/A  thrpt    5         0.050 ±       0.134  MB/sec
[info] PrimitivesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                 N/A  thrpt    5         0.344 ±       0.924    B/op
[info] PrimitivesBenchmark.readPlayJson:·gc.count                                                        N/A  thrpt    5        12.000                counts
[info] PrimitivesBenchmark.readPlayJson:·gc.time                                                         N/A  thrpt    5        17.000                    ms
[info] PrimitivesBenchmark.writeCirce                                                                    N/A  thrpt    5    965419.737 ±   30083.225   ops/s
[info] PrimitivesBenchmark.writeCirce:·gc.alloc.rate                                                     N/A  thrpt    5      1658.881 ±      51.408  MB/sec
[info] PrimitivesBenchmark.writeCirce:·gc.alloc.rate.norm                                                N/A  thrpt    5      2704.000 ±       0.001    B/op
[info] PrimitivesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                            N/A  thrpt    5      1615.393 ±    1420.361  MB/sec
[info] PrimitivesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                       N/A  thrpt    5      2632.333 ±    2295.299    B/op
[info] PrimitivesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                        N/A  thrpt    5         0.058 ±       0.088  MB/sec
[info] PrimitivesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                   N/A  thrpt    5         0.095 ±       0.142    B/op
[info] PrimitivesBenchmark.writeCirce:·gc.count                                                          N/A  thrpt    5        12.000                counts
[info] PrimitivesBenchmark.writeCirce:·gc.time                                                           N/A  thrpt    5        10.000                    ms
[info] PrimitivesBenchmark.writeJacksonScala                                                             N/A  thrpt    5   2517541.239 ±   14127.083   ops/s
[info] PrimitivesBenchmark.writeJacksonScala:·gc.alloc.rate                                              N/A  thrpt    5      1113.322 ±       6.370  MB/sec
[info] PrimitivesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                         N/A  thrpt    5       696.000 ±       0.001    B/op
[info] PrimitivesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                     N/A  thrpt    5      1202.465 ±    1150.914  MB/sec
[info] PrimitivesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                N/A  thrpt    5       751.759 ±     719.887    B/op
[info] PrimitivesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                 N/A  thrpt    5         0.046 ±       0.132  MB/sec
[info] PrimitivesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                            N/A  thrpt    5         0.029 ±       0.082    B/op
[info] PrimitivesBenchmark.writeJacksonScala:·gc.count                                                   N/A  thrpt    5         9.000                counts
[info] PrimitivesBenchmark.writeJacksonScala:·gc.time                                                    N/A  thrpt    5        10.000                    ms
[info] PrimitivesBenchmark.writeJsoniterScala                                                            N/A  thrpt    5   7147367.503 ±  268879.290   ops/s
[info] PrimitivesBenchmark.writeJsoniterScala:·gc.alloc.rate                                             N/A  thrpt    5       581.300 ±      21.885  MB/sec
[info] PrimitivesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                        N/A  thrpt    5       128.000 ±       0.001    B/op
[info] PrimitivesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                    N/A  thrpt    5       641.115 ±     278.775  MB/sec
[info] PrimitivesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                               N/A  thrpt    5       141.099 ±      58.560    B/op
[info] PrimitivesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                N/A  thrpt    5         0.331 ±       2.677  MB/sec
[info] PrimitivesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                           N/A  thrpt    5         0.074 ±       0.595    B/op
[info] PrimitivesBenchmark.writeJsoniterScala:·gc.count                                                  N/A  thrpt    5         5.000                counts
[info] PrimitivesBenchmark.writeJsoniterScala:·gc.time                                                   N/A  thrpt    5         6.000                    ms
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc                                                    N/A  thrpt    5   6354116.718 ±   53681.110   ops/s
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                     N/A  thrpt    5       387.641 ±       3.354  MB/sec
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                N/A  thrpt    5        96.000 ±       0.001    B/op
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space                            N/A  thrpt    5       441.722 ±     988.356  MB/sec
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm                       N/A  thrpt    5       109.499 ±     245.225    B/op
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space                        N/A  thrpt    5         0.317 ±       2.640  MB/sec
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm                   N/A  thrpt    5         0.079 ±       0.656    B/op
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.count                                          N/A  thrpt    5         4.000                counts
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.time                                           N/A  thrpt    5         7.000                    ms
[info] PrimitivesBenchmark.writePlayJson                                                                 N/A  thrpt    5    318259.671 ±    2573.957   ops/s
[info] PrimitivesBenchmark.writePlayJson:·gc.alloc.rate                                                  N/A  thrpt    5      1637.180 ±      13.084  MB/sec
[info] PrimitivesBenchmark.writePlayJson:·gc.alloc.rate.norm                                             N/A  thrpt    5      8096.001 ±       0.001    B/op
[info] PrimitivesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                         N/A  thrpt    5      1607.974 ±    1401.992  MB/sec
[info] PrimitivesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                    N/A  thrpt    5      7953.793 ±    6983.622    B/op
[info] PrimitivesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                     N/A  thrpt    5         0.050 ±       0.122  MB/sec
[info] PrimitivesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                                N/A  thrpt    5         0.247 ±       0.602    B/op
[info] PrimitivesBenchmark.writePlayJson:·gc.count                                                       N/A  thrpt    5        12.000                counts
[info] PrimitivesBenchmark.writePlayJson:·gc.time                                                        N/A  thrpt    5        13.000                    ms
[info] SetOfIntsBenchmark.readCirce                                                                      128  thrpt    5     56141.635 ±    4721.072   ops/s
[info] SetOfIntsBenchmark.readCirce:·gc.alloc.rate                                                       128  thrpt    5      1658.193 ±     138.638  MB/sec
[info] SetOfIntsBenchmark.readCirce:·gc.alloc.rate.norm                                                  128  thrpt    5     46480.008 ±       0.001    B/op
[info] SetOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                              128  thrpt    5      1619.046 ±    1422.609  MB/sec
[info] SetOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                         128  thrpt    5     45341.548 ±   38701.823    B/op
[info] SetOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                          128  thrpt    5         0.046 ±       0.200  MB/sec
[info] SetOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                     128  thrpt    5         1.268 ±       5.506    B/op
[info] SetOfIntsBenchmark.readCirce:·gc.count                                                            128  thrpt    5        12.000                counts
[info] SetOfIntsBenchmark.readCirce:·gc.time                                                             128  thrpt    5        11.000                    ms
[info] SetOfIntsBenchmark.readJacksonScala                                                               128  thrpt    5    101713.758 ±    1780.015   ops/s
[info] SetOfIntsBenchmark.readJacksonScala:·gc.alloc.rate                                                128  thrpt    5      1566.747 ±      27.564  MB/sec
[info] SetOfIntsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                           128  thrpt    5     24240.004 ±       0.001    B/op
[info] SetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                       128  thrpt    5      1474.937 ±    1153.563  MB/sec
[info] SetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5     22817.518 ±   17780.194    B/op
[info] SetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.033 ±       0.122  MB/sec
[info] SetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5         0.516 ±       1.881    B/op
[info] SetOfIntsBenchmark.readJacksonScala:·gc.count                                                     128  thrpt    5        11.000                counts
[info] SetOfIntsBenchmark.readJacksonScala:·gc.time                                                      128  thrpt    5        10.000                    ms
[info] SetOfIntsBenchmark.readJsoniterScala                                                              128  thrpt    5    154051.748 ±    1467.314   ops/s
[info] SetOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate                                               128  thrpt    5      2263.203 ±      22.399  MB/sec
[info] SetOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                          128  thrpt    5     23120.003 ±       0.001    B/op
[info] SetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                      128  thrpt    5      2302.085 ±    1423.377  MB/sec
[info] SetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5     23511.524 ±   14357.251    B/op
[info] SetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.062 ±       0.113  MB/sec
[info] SetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         0.638 ±       1.160    B/op
[info] SetOfIntsBenchmark.readJsoniterScala:·gc.count                                                    128  thrpt    5        17.000                counts
[info] SetOfIntsBenchmark.readJsoniterScala:·gc.time                                                     128  thrpt    5        14.000                    ms
[info] SetOfIntsBenchmark.readPlayJson                                                                   128  thrpt    5     49502.206 ±    1825.375   ops/s
[info] SetOfIntsBenchmark.readPlayJson:·gc.alloc.rate                                                    128  thrpt    5      2543.099 ±      93.677  MB/sec
[info] SetOfIntsBenchmark.readPlayJson:·gc.alloc.rate.norm                                               128  thrpt    5     80840.009 ±       0.001    B/op
[info] SetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                           128  thrpt    5      2433.989 ±    1430.171  MB/sec
[info] SetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                      128  thrpt    5     77416.107 ±   46695.481    B/op
[info] SetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                       128  thrpt    5         0.062 ±       0.098  MB/sec
[info] SetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                  128  thrpt    5         1.991 ±       3.187    B/op
[info] SetOfIntsBenchmark.readPlayJson:·gc.count                                                         128  thrpt    5        18.000                counts
[info] SetOfIntsBenchmark.readPlayJson:·gc.time                                                          128  thrpt    5        15.000                    ms
[info] SetOfIntsBenchmark.readUPickle                                                                    128  thrpt    5     66257.746 ±    2264.158   ops/s
[info] SetOfIntsBenchmark.readUPickle:·gc.alloc.rate                                                     128  thrpt    5      1577.552 ±      53.634  MB/sec
[info] SetOfIntsBenchmark.readUPickle:·gc.alloc.rate.norm                                                128  thrpt    5     37464.007 ±       0.001    B/op
[info] SetOfIntsBenchmark.readUPickle:·gc.churn.PS_Eden_Space                                            128  thrpt    5      1485.870 ±    1162.116  MB/sec
[info] SetOfIntsBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm                                       128  thrpt    5     35305.361 ±   28110.719    B/op
[info] SetOfIntsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space                                        128  thrpt    5         0.037 ±       0.132  MB/sec
[info] SetOfIntsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm                                   128  thrpt    5         0.888 ±       3.131    B/op
[info] SetOfIntsBenchmark.readUPickle:·gc.count                                                          128  thrpt    5        11.000                counts
[info] SetOfIntsBenchmark.readUPickle:·gc.time                                                           128  thrpt    5        10.000                    ms
[info] SetOfIntsBenchmark.writeCirce                                                                     128  thrpt    5    215229.525 ±    2343.332   ops/s
[info] SetOfIntsBenchmark.writeCirce:·gc.alloc.rate                                                      128  thrpt    5      1486.923 ±      16.765  MB/sec
[info] SetOfIntsBenchmark.writeCirce:·gc.alloc.rate.norm                                                 128  thrpt    5     10872.002 ±       0.001    B/op
[info] SetOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                             128  thrpt    5      1479.973 ±    1169.768  MB/sec
[info] SetOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                        128  thrpt    5     10826.336 ±    8705.045    B/op
[info] SetOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                         128  thrpt    5         0.050 ±       0.122  MB/sec
[info] SetOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                    128  thrpt    5         0.365 ±       0.887    B/op
[info] SetOfIntsBenchmark.writeCirce:·gc.count                                                           128  thrpt    5        11.000                counts
[info] SetOfIntsBenchmark.writeCirce:·gc.time                                                            128  thrpt    5         9.000                    ms
[info] SetOfIntsBenchmark.writeJacksonScala                                                              128  thrpt    5    533634.373 ±    6979.531   ops/s
[info] SetOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate                                               128  thrpt    5       466.555 ±       6.037  MB/sec
[info] SetOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                          128  thrpt    5      1376.001 ±       0.001    B/op
[info] SetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                      128  thrpt    5       471.233 ±    1057.246  MB/sec
[info] SetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5      1389.745 ±    3112.526    B/op
[info] SetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.495 ±       4.059  MB/sec
[info] SetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         1.457 ±      11.953    B/op
[info] SetOfIntsBenchmark.writeJacksonScala:·gc.count                                                    128  thrpt    5         4.000                counts
[info] SetOfIntsBenchmark.writeJacksonScala:·gc.time                                                     128  thrpt    5         8.000                    ms
[info] SetOfIntsBenchmark.writeJsoniterScala                                                             128  thrpt    5    521027.306 ±   19038.322   ops/s
[info] SetOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate                                              128  thrpt    5       280.744 ±      10.319  MB/sec
[info] SetOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                         128  thrpt    5       848.001 ±       0.001    B/op
[info] SetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                     128  thrpt    5       306.956 ±    1078.994  MB/sec
[info] SetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5       930.194 ±    3269.809    B/op
[info] SetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.005 ±       0.029  MB/sec
[info] SetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         0.016 ±       0.089    B/op
[info] SetOfIntsBenchmark.writeJsoniterScala:·gc.count                                                   128  thrpt    5         3.000                counts
[info] SetOfIntsBenchmark.writeJsoniterScala:·gc.time                                                    128  thrpt    5         5.000                    ms
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc                                                     128  thrpt    5    636425.638 ±    2162.460   ops/s
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                      128  thrpt    5         6.470 ±       0.022  MB/sec
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                 128  thrpt    5        16.001 ±       0.001    B/op
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                           128  thrpt    5           ≈ 0                counts
[info] SetOfIntsBenchmark.writePlayJson                                                                  128  thrpt    5     31028.618 ±     741.664   ops/s
[info] SetOfIntsBenchmark.writePlayJson:·gc.alloc.rate                                                   128  thrpt    5      1631.346 ±      38.744  MB/sec
[info] SetOfIntsBenchmark.writePlayJson:·gc.alloc.rate.norm                                              128  thrpt    5     82736.014 ±       0.002    B/op
[info] SetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                          128  thrpt    5      1748.857 ±    1419.428  MB/sec
[info] SetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                     128  thrpt    5     88705.515 ±   72164.278    B/op
[info] SetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                      128  thrpt    5         0.037 ±       0.132  MB/sec
[info] SetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5         1.897 ±       6.656    B/op
[info] SetOfIntsBenchmark.writePlayJson:·gc.count                                                        128  thrpt    5        13.000                counts
[info] SetOfIntsBenchmark.writePlayJson:·gc.time                                                         128  thrpt    5        13.000                    ms
[info] SetOfIntsBenchmark.writeUPickle                                                                   128  thrpt    5    115339.681 ±     164.343   ops/s
[info] SetOfIntsBenchmark.writeUPickle:·gc.alloc.rate                                                    128  thrpt    5      1321.612 ±       1.514  MB/sec
[info] SetOfIntsBenchmark.writeUPickle:·gc.alloc.rate.norm                                               128  thrpt    5     18032.004 ±       0.001    B/op
[info] SetOfIntsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space                                           128  thrpt    5      1349.331 ±       7.091  MB/sec
[info] SetOfIntsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm                                      128  thrpt    5     18410.206 ±     110.785    B/op
[info] SetOfIntsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space                                       128  thrpt    5         0.042 ±       0.113  MB/sec
[info] SetOfIntsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm                                  128  thrpt    5         0.568 ±       1.547    B/op
[info] SetOfIntsBenchmark.writeUPickle:·gc.count                                                         128  thrpt    5        10.000                counts
[info] SetOfIntsBenchmark.writeUPickle:·gc.time                                                          128  thrpt    5         9.000                    ms
[info] StringOfAsciiCharsBenchmark.readCirce                                                             128  thrpt    5   3258512.323 ±   69809.564   ops/s
[info] StringOfAsciiCharsBenchmark.readCirce:·gc.alloc.rate                                              128  thrpt    5      3064.389 ±      65.596  MB/sec
[info] StringOfAsciiCharsBenchmark.readCirce:·gc.alloc.rate.norm                                         128  thrpt    5      1480.000 ±       0.001    B/op
[info] StringOfAsciiCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                     128  thrpt    5      3123.488 ±    1430.127  MB/sec
[info] StringOfAsciiCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5      1509.296 ±     718.649    B/op
[info] StringOfAsciiCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.079 ±       0.105  MB/sec
[info] StringOfAsciiCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         0.038 ±       0.051    B/op
[info] StringOfAsciiCharsBenchmark.readCirce:·gc.count                                                   128  thrpt    5        23.000                counts
[info] StringOfAsciiCharsBenchmark.readCirce:·gc.time                                                    128  thrpt    5        19.000                    ms
[info] StringOfAsciiCharsBenchmark.readDslJsonJava                                                       128  thrpt    5   8026129.499 ±   79138.665   ops/s
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.alloc.rate                                        128  thrpt    5      1509.593 ±      14.881  MB/sec
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                   128  thrpt    5       296.000 ±       0.001    B/op
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                               128  thrpt    5      1471.568 ±    1157.459  MB/sec
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5       288.544 ±     226.918    B/op
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.488 ±       4.020  MB/sec
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         0.096 ±       0.789    B/op
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.count                                             128  thrpt    5        11.000                counts
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.time                                              128  thrpt    5        18.000                    ms
[info] StringOfAsciiCharsBenchmark.readJacksonScala                                                      128  thrpt    5   3979298.732 ±  135820.462   ops/s
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.alloc.rate                                       128  thrpt    5      2568.904 ±      87.848  MB/sec
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                  128  thrpt    5      1016.000 ±       0.001    B/op
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                              128  thrpt    5      2569.056 ±    1173.371  MB/sec
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5      1016.751 ±     486.094    B/op
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.071 ±       0.122  MB/sec
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         0.028 ±       0.048    B/op
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.count                                            128  thrpt    5        19.000                counts
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.time                                             128  thrpt    5        15.000                    ms
[info] StringOfAsciiCharsBenchmark.readJsoniterScala                                                     128  thrpt    5   7638465.274 ±  222381.580   ops/s
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.alloc.rate                                      128  thrpt    5      1436.825 ±      41.052  MB/sec
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                 128  thrpt    5       296.000 ±       0.001    B/op
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                             128  thrpt    5      1349.569 ±       7.106  MB/sec
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5       278.039 ±       9.240    B/op
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.062 ±       0.160  MB/sec
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         0.013 ±       0.033    B/op
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.count                                           128  thrpt    5        10.000                counts
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.time                                            128  thrpt    5         8.000                    ms
[info] StringOfAsciiCharsBenchmark.readPlayJson                                                          128  thrpt    5   5283370.024 ±  146316.293   ops/s
[info] StringOfAsciiCharsBenchmark.readPlayJson:·gc.alloc.rate                                           128  thrpt    5      3276.540 ±      90.766  MB/sec
[info] StringOfAsciiCharsBenchmark.readPlayJson:·gc.alloc.rate.norm                                      128  thrpt    5       976.000 ±       0.001    B/op
[info] StringOfAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                  128  thrpt    5      3257.179 ±    1158.283  MB/sec
[info] StringOfAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5       969.759 ±     321.566    B/op
[info] StringOfAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.058 ±       0.088  MB/sec
[info] StringOfAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         0.017 ±       0.026    B/op
[info] StringOfAsciiCharsBenchmark.readPlayJson:·gc.count                                                128  thrpt    5        24.000                counts
[info] StringOfAsciiCharsBenchmark.readPlayJson:·gc.time                                                 128  thrpt    5        20.000                    ms
[info] StringOfAsciiCharsBenchmark.readUPickle                                                           128  thrpt    5   3863080.303 ±   16261.219   ops/s
[info] StringOfAsciiCharsBenchmark.readUPickle:·gc.alloc.rate                                            128  thrpt    5      2435.269 ±      10.483  MB/sec
[info] StringOfAsciiCharsBenchmark.readUPickle:·gc.alloc.rate.norm                                       128  thrpt    5       992.000 ±       0.001    B/op
[info] StringOfAsciiCharsBenchmark.readUPickle:·gc.churn.PS_Eden_Space                                   128  thrpt    5      2441.149 ±    1439.675  MB/sec
[info] StringOfAsciiCharsBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5       994.464 ±     588.465    B/op
[info] StringOfAsciiCharsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.092 ±       0.108  MB/sec
[info] StringOfAsciiCharsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         0.037 ±       0.044    B/op
[info] StringOfAsciiCharsBenchmark.readUPickle:·gc.count                                                 128  thrpt    5        18.000                counts
[info] StringOfAsciiCharsBenchmark.readUPickle:·gc.time                                                  128  thrpt    5        15.000                    ms
[info] StringOfAsciiCharsBenchmark.writeCirce                                                            128  thrpt    5   2780707.898 ±   91559.320   ops/s
[info] StringOfAsciiCharsBenchmark.writeCirce:·gc.alloc.rate                                             128  thrpt    5      1724.571 ±      56.549  MB/sec
[info] StringOfAsciiCharsBenchmark.writeCirce:·gc.alloc.rate.norm                                        128  thrpt    5       976.000 ±       0.001    B/op
[info] StringOfAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1751.922 ±    1420.874  MB/sec
[info] StringOfAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5       990.997 ±     793.121    B/op
[info] StringOfAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.054 ±       0.146  MB/sec
[info] StringOfAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         0.031 ±       0.082    B/op
[info] StringOfAsciiCharsBenchmark.writeCirce:·gc.count                                                  128  thrpt    5        13.000                counts
[info] StringOfAsciiCharsBenchmark.writeCirce:·gc.time                                                   128  thrpt    5        11.000                    ms
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava                                                      128  thrpt    5   7210985.740 ±   62911.822   ops/s
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.alloc.rate                                       128  thrpt    5       696.500 ±       6.174  MB/sec
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                  128  thrpt    5       152.000 ±       0.001    B/op
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                              128  thrpt    5       664.957 ±       4.141  MB/sec
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5       145.117 ±       2.127    B/op
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.006 ±       0.039  MB/sec
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         0.001 ±       0.009    B/op
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.count                                            128  thrpt    5         5.000                counts
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.time                                             128  thrpt    5         9.000                    ms
[info] StringOfAsciiCharsBenchmark.writeJacksonScala                                                     128  thrpt    5   4897184.685 ±  169733.294   ops/s
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.alloc.rate                                      128  thrpt    5      1294.559 ±      44.816  MB/sec
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                 128  thrpt    5       416.000 ±       0.001    B/op
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                             128  thrpt    5      1340.716 ±      11.015  MB/sec
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5       430.856 ±      12.547    B/op
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5         0.071 ±       0.072  MB/sec
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5         0.023 ±       0.023    B/op
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.count                                           128  thrpt    5        10.000                counts
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.time                                            128  thrpt    5         8.000                    ms
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala                                                    128  thrpt    5  10065677.673 ±   71414.417   ops/s
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.alloc.rate                                     128  thrpt    5       972.264 ±       7.025  MB/sec
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                128  thrpt    5       152.000 ±       0.001    B/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                            128  thrpt    5       942.734 ±    1418.933  MB/sec
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5       147.434 ±     222.538    B/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.029 ±       0.108  MB/sec
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         0.005 ±       0.017    B/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.count                                          128  thrpt    5         7.000                counts
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.time                                           128  thrpt    5         6.000                    ms
[info] StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc                                            128  thrpt    5   7698685.402 ±   11790.895   ops/s
[info] StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                             128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                        128  thrpt    5        ≈ 10⁻⁴                  B/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                  128  thrpt    5           ≈ 0                counts
[info] StringOfAsciiCharsBenchmark.writePlayJson                                                         128  thrpt    5   5137928.933 ±  189957.047   ops/s
[info] StringOfAsciiCharsBenchmark.writePlayJson:·gc.alloc.rate                                          128  thrpt    5      1645.491 ±      60.120  MB/sec
[info] StringOfAsciiCharsBenchmark.writePlayJson:·gc.alloc.rate.norm                                     128  thrpt    5       504.000 ±       0.001    B/op
[info] StringOfAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                 128  thrpt    5      1615.389 ±    1419.801  MB/sec
[info] StringOfAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5       495.029 ±     440.154    B/op
[info] StringOfAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.054 ±       0.217  MB/sec
[info] StringOfAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         0.017 ±       0.067    B/op
[info] StringOfAsciiCharsBenchmark.writePlayJson:·gc.count                                               128  thrpt    5        12.000                counts
[info] StringOfAsciiCharsBenchmark.writePlayJson:·gc.time                                                128  thrpt    5        11.000                    ms
[info] StringOfAsciiCharsBenchmark.writeUPickle                                                          128  thrpt    5    384926.301 ±   30309.233   ops/s
[info] StringOfAsciiCharsBenchmark.writeUPickle:·gc.alloc.rate                                           128  thrpt    5       405.081 ±      31.676  MB/sec
[info] StringOfAsciiCharsBenchmark.writeUPickle:·gc.alloc.rate.norm                                      128  thrpt    5      1656.001 ±       0.001    B/op
[info] StringOfAsciiCharsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space                                  128  thrpt    5       339.593 ±    1220.835  MB/sec
[info] StringOfAsciiCharsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5      1383.834 ±    4962.437    B/op
[info] StringOfAsciiCharsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.321 ±       2.707  MB/sec
[info] StringOfAsciiCharsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         1.296 ±      10.918    B/op
[info] StringOfAsciiCharsBenchmark.writeUPickle:·gc.count                                                128  thrpt    5         3.000                counts
[info] StringOfAsciiCharsBenchmark.writeUPickle:·gc.time                                                 128  thrpt    5         6.000                    ms
[info] StringOfNonAsciiCharsBenchmark.readCirce                                                          128  thrpt    5   1258059.588 ±   21629.567   ops/s
[info] StringOfNonAsciiCharsBenchmark.readCirce:·gc.alloc.rate                                           128  thrpt    5      1816.213 ±      30.679  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readCirce:·gc.alloc.rate.norm                                      128  thrpt    5      2272.000 ±       0.001    B/op
[info] StringOfNonAsciiCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                  128  thrpt    5      1755.940 ±    1428.514  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5      2196.926 ±    1793.501    B/op
[info] StringOfNonAsciiCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                              128  thrpt    5         0.067 ±       0.154  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5         0.084 ±       0.195    B/op
[info] StringOfNonAsciiCharsBenchmark.readCirce:·gc.count                                                128  thrpt    5        13.000                counts
[info] StringOfNonAsciiCharsBenchmark.readCirce:·gc.time                                                 128  thrpt    5        11.000                    ms
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava                                                    128  thrpt    5   1802593.210 ±   59180.633   ops/s
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.alloc.rate                                     128  thrpt    5       339.039 ±      11.020  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                128  thrpt    5       296.000 ±       0.001    B/op
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                            128  thrpt    5       306.959 ±    1079.004  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5       267.119 ±     938.963    B/op
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                        128  thrpt    5         0.021 ±       0.113  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5         0.018 ±       0.099    B/op
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.count                                          128  thrpt    5         3.000                counts
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.time                                           128  thrpt    5         7.000                    ms
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala                                                   128  thrpt    5   1122865.950 ±   55834.498   ops/s
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.alloc.rate                                    128  thrpt    5       673.510 ±      33.513  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.alloc.rate.norm                               128  thrpt    5       944.000 ±       0.001    B/op
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                           128  thrpt    5       668.233 ±       0.707  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5       936.730 ±      46.722    B/op
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.440 ±       3.608  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         0.621 ±       5.096    B/op
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.count                                         128  thrpt    5         5.000                counts
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.time                                          128  thrpt    5         6.000                    ms
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala                                                  128  thrpt    5   2426410.534 ±   37311.397   ops/s
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.alloc.rate                                   128  thrpt    5       456.334 ±       6.993  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                              128  thrpt    5       296.000 ±       0.001    B/op
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                          128  thrpt    5       475.084 ±    1070.584  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5       308.304 ±     693.381    B/op
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                      128  thrpt    5         0.300 ±       2.496  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5         0.195 ±       1.617    B/op
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.count                                        128  thrpt    5         4.000                counts
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.time                                         128  thrpt    5         7.000                    ms
[info] StringOfNonAsciiCharsBenchmark.readPlayJson                                                       128  thrpt    5   1263555.292 ±   66101.956   ops/s
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.alloc.rate                                        128  thrpt    5       783.659 ±      41.181  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.alloc.rate.norm                                   128  thrpt    5       976.000 ±       0.001    B/op
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                               128  thrpt    5       803.334 ±    1151.949  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5      1000.161 ±    1425.992    B/op
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.430 ±       3.526  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         0.534 ±       4.379    B/op
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.count                                             128  thrpt    5         6.000                counts
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.time                                              128  thrpt    5         8.000                    ms
[info] StringOfNonAsciiCharsBenchmark.readUPickle                                                        128  thrpt    5   1210593.929 ±   18154.179   ops/s
[info] StringOfNonAsciiCharsBenchmark.readUPickle:·gc.alloc.rate                                         128  thrpt    5      1384.647 ±      19.842  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readUPickle:·gc.alloc.rate.norm                                    128  thrpt    5      1800.000 ±       0.001    B/op
[info] StringOfNonAsciiCharsBenchmark.readUPickle:·gc.churn.PS_Eden_Space                                128  thrpt    5      1349.985 ±       5.758  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5      1754.957 ±      23.123    B/op
[info] StringOfNonAsciiCharsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.042 ±       0.098  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         0.054 ±       0.129    B/op
[info] StringOfNonAsciiCharsBenchmark.readUPickle:·gc.count                                              128  thrpt    5        10.000                counts
[info] StringOfNonAsciiCharsBenchmark.readUPickle:·gc.time                                               128  thrpt    5         9.000                    ms
[info] StringOfNonAsciiCharsBenchmark.writeCirce                                                         128  thrpt    5   1859370.171 ±   52432.283   ops/s
[info] StringOfNonAsciiCharsBenchmark.writeCirce:·gc.alloc.rate                                          128  thrpt    5      1455.572 ±      41.405  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeCirce:·gc.alloc.rate.norm                                     128  thrpt    5      1232.000 ±       0.001    B/op
[info] StringOfNonAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                 128  thrpt    5      1479.754 ±    1162.680  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5      1252.222 ±     975.585    B/op
[info] StringOfNonAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                             128  thrpt    5         0.062 ±       0.150  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5         0.053 ±       0.126    B/op
[info] StringOfNonAsciiCharsBenchmark.writeCirce:·gc.count                                               128  thrpt    5        11.000                counts
[info] StringOfNonAsciiCharsBenchmark.writeCirce:·gc.time                                                128  thrpt    5         9.000                    ms
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava                                                   128  thrpt    5   2604193.639 ±   15054.326   ops/s
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.alloc.rate                                    128  thrpt    5       675.240 ±       4.188  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                               128  thrpt    5       408.000 ±       0.001    B/op
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                           128  thrpt    5       665.018 ±       4.422  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5       401.824 ±       2.204    B/op
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                       128  thrpt    5         0.007 ±       0.034  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5         0.004 ±       0.021    B/op
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.count                                         128  thrpt    5         5.000                counts
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.time                                          128  thrpt    5        10.000                    ms
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala                                                  128  thrpt    5   2479436.918 ±   10905.498   ops/s
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.alloc.rate                                   128  thrpt    5      1058.730 ±       4.662  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                              128  thrpt    5       672.000 ±       0.001    B/op
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                          128  thrpt    5      1070.399 ±    1411.253  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5       679.384 ±     895.471    B/op
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                      128  thrpt    5         0.037 ±       0.200  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5         0.024 ±       0.127    B/op
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.count                                        128  thrpt    5         8.000                counts
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.time                                         128  thrpt    5         7.000                    ms
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala                                                 128  thrpt    5   3694975.774 ±   42412.172   ops/s
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.alloc.rate                                  128  thrpt    5       957.886 ±      10.857  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                             128  thrpt    5       408.000 ±       0.001    B/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                         128  thrpt    5       943.018 ±    1421.223  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5       401.909 ±     608.732    B/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                     128  thrpt    5         0.029 ±       0.134  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5         0.012 ±       0.057    B/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.count                                       128  thrpt    5         7.000                counts
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.time                                        128  thrpt    5         6.000                    ms
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc                                         128  thrpt    5   3837985.955 ±   35351.375   ops/s
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                          128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                     128  thrpt    5        ≈ 10⁻⁴                  B/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.count                               128  thrpt    5           ≈ 0                counts
[info] StringOfNonAsciiCharsBenchmark.writePlayJson                                                      128  thrpt    5   2558034.400 ±   35745.498   ops/s
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.alloc.rate                                       128  thrpt    5      1235.399 ±      17.474  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.alloc.rate.norm                                  128  thrpt    5       760.000 ±       0.001    B/op
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                              128  thrpt    5      1210.592 ±    1158.238  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5       744.513 ±     709.606    B/op
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.050 ±       0.156  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         0.031 ±       0.096    B/op
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.count                                            128  thrpt    5         9.000                counts
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.time                                             128  thrpt    5         8.000                    ms
[info] TwitterAPIBenchmark.readCirce                                                                     N/A  thrpt    5     11519.814 ±     513.280   ops/s
[info] TwitterAPIBenchmark.readCirce:·gc.alloc.rate                                                      N/A  thrpt    5      1622.960 ±      72.122  MB/sec
[info] TwitterAPIBenchmark.readCirce:·gc.alloc.rate.norm                                                 N/A  thrpt    5    221731.935 ±      43.214    B/op
[info] TwitterAPIBenchmark.readCirce:·gc.churn.PS_Eden_Space                                             N/A  thrpt    5      1614.088 ±    1427.962  MB/sec
[info] TwitterAPIBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                        N/A  thrpt    5    220587.200 ±  196327.423    B/op
[info] TwitterAPIBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                         N/A  thrpt    5         0.037 ±       0.161  MB/sec
[info] TwitterAPIBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                    N/A  thrpt    5         5.106 ±      21.789    B/op
[info] TwitterAPIBenchmark.readCirce:·gc.count                                                           N/A  thrpt    5        12.000                counts
[info] TwitterAPIBenchmark.readCirce:·gc.time                                                            N/A  thrpt    5        11.000                    ms
[info] TwitterAPIBenchmark.readJacksonScala                                                              N/A  thrpt    5     15665.252 ±     270.039   ops/s
[info] TwitterAPIBenchmark.readJacksonScala:·gc.alloc.rate                                               N/A  thrpt    5       242.021 ±       4.222  MB/sec
[info] TwitterAPIBenchmark.readJacksonScala:·gc.alloc.rate.norm                                          N/A  thrpt    5     24313.027 ±      31.985    B/op
[info] TwitterAPIBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                      N/A  thrpt    5       204.666 ±    1079.146  MB/sec
[info] TwitterAPIBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                 N/A  thrpt    5     20581.050 ±  108518.426    B/op
[info] TwitterAPIBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                  N/A  thrpt    5         0.012 ±       0.087  MB/sec
[info] TwitterAPIBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                             N/A  thrpt    5         1.211 ±       8.792    B/op
[info] TwitterAPIBenchmark.readJacksonScala:·gc.count                                                    N/A  thrpt    5         2.000                counts
[info] TwitterAPIBenchmark.readJacksonScala:·gc.time                                                     N/A  thrpt    5         6.000                    ms
[info] TwitterAPIBenchmark.readJsoniterScala                                                             N/A  thrpt    5     35996.273 ±    1351.222   ops/s
[info] TwitterAPIBenchmark.readJsoniterScala:·gc.alloc.rate                                              N/A  thrpt    5       394.164 ±      14.508  MB/sec
[info] TwitterAPIBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                         N/A  thrpt    5     17232.012 ±       0.001    B/op
[info] TwitterAPIBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                     N/A  thrpt    5       441.644 ±     988.042  MB/sec
[info] TwitterAPIBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                                N/A  thrpt    5     19334.830 ±   43142.691    B/op
[info] TwitterAPIBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                 N/A  thrpt    5         0.342 ±       2.941  MB/sec
[info] TwitterAPIBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                            N/A  thrpt    5        14.852 ±     127.881    B/op
[info] TwitterAPIBenchmark.readJsoniterScala:·gc.count                                                   N/A  thrpt    5         4.000                counts
[info] TwitterAPIBenchmark.readJsoniterScala:·gc.time                                                    N/A  thrpt    5         9.000                    ms
[info] TwitterAPIBenchmark.readPlayJson                                                                  N/A  thrpt    5      3311.453 ±      52.248   ops/s
[info] TwitterAPIBenchmark.readPlayJson:·gc.alloc.rate                                                   N/A  thrpt    5      1044.658 ±      16.524  MB/sec
[info] TwitterAPIBenchmark.readPlayJson:·gc.alloc.rate.norm                                              N/A  thrpt    5    496232.134 ±       0.020    B/op
[info] TwitterAPIBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                          N/A  thrpt    5      1071.732 ±    1412.495  MB/sec
[info] TwitterAPIBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                     N/A  thrpt    5    509434.446 ±  675158.033    B/op
[info] TwitterAPIBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                      N/A  thrpt    5         0.012 ±       0.072  MB/sec
[info] TwitterAPIBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                 N/A  thrpt    5         5.937 ±      34.110    B/op
[info] TwitterAPIBenchmark.readPlayJson:·gc.count                                                        N/A  thrpt    5         8.000                counts
[info] TwitterAPIBenchmark.readPlayJson:·gc.time                                                         N/A  thrpt    5        13.000                    ms
[info] TwitterAPIBenchmark.writeJacksonScala                                                             N/A  thrpt    5     59691.039 ±    1019.289   ops/s
[info] TwitterAPIBenchmark.writeJacksonScala:·gc.alloc.rate                                              N/A  thrpt    5       762.336 ±      12.948  MB/sec
[info] TwitterAPIBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                         N/A  thrpt    5     20100.000 ±       0.161    B/op
[info] TwitterAPIBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                     N/A  thrpt    5       796.438 ±    1141.995  MB/sec
[info] TwitterAPIBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                N/A  thrpt    5     20992.883 ±   29983.959    B/op
[info] TwitterAPIBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                 N/A  thrpt    5         0.599 ±       4.886  MB/sec
[info] TwitterAPIBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                            N/A  thrpt    5        15.898 ±     129.855    B/op
[info] TwitterAPIBenchmark.writeJacksonScala:·gc.count                                                   N/A  thrpt    5         6.000                counts
[info] TwitterAPIBenchmark.writeJacksonScala:·gc.time                                                    N/A  thrpt    5         9.000                    ms
[info] TwitterAPIBenchmark.writeJsoniterScala                                                            N/A  thrpt    5     80338.936 ±    2176.414   ops/s
[info] TwitterAPIBenchmark.writeJsoniterScala:·gc.alloc.rate                                             N/A  thrpt    5       526.796 ±      14.277  MB/sec
[info] TwitterAPIBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                        N/A  thrpt    5     10320.006 ±       0.001    B/op
[info] TwitterAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                    N/A  thrpt    5       505.869 ±    1121.520  MB/sec
[info] TwitterAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                               N/A  thrpt    5      9912.204 ±   22042.671    B/op
[info] TwitterAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                N/A  thrpt    5         0.352 ±       2.924  MB/sec
[info] TwitterAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                           N/A  thrpt    5         6.936 ±      57.631    B/op
[info] TwitterAPIBenchmark.writeJsoniterScala:·gc.count                                                  N/A  thrpt    5         4.000                counts
[info] TwitterAPIBenchmark.writeJsoniterScala:·gc.time                                                   N/A  thrpt    5         6.000                    ms
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc                                                    N/A  thrpt    5     87436.783 ±     382.406   ops/s
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                     N/A  thrpt    5        12.445 ±       0.055  MB/sec
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                N/A  thrpt    5       224.005 ±       0.001    B/op
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc:·gc.count                                          N/A  thrpt    5           ≈ 0                counts
[info] VectorOfBooleansBenchmark.readCirce                                                               128  thrpt    5    345356.295 ±    3841.989   ops/s
[info] VectorOfBooleansBenchmark.readCirce:·gc.alloc.rate                                                128  thrpt    5      2013.510 ±      22.332  MB/sec
[info] VectorOfBooleansBenchmark.readCirce:·gc.alloc.rate.norm                                           128  thrpt    5      9176.001 ±       0.001    B/op
[info] VectorOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space                                       128  thrpt    5      2027.852 ±      18.045  MB/sec
[info] VectorOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5      9241.393 ±      85.668    B/op
[info] VectorOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                   128  thrpt    5         0.054 ±       0.091  MB/sec
[info] VectorOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5         0.247 ±       0.416    B/op
[info] VectorOfBooleansBenchmark.readCirce:·gc.count                                                     128  thrpt    5        15.000                counts
[info] VectorOfBooleansBenchmark.readCirce:·gc.time                                                      128  thrpt    5        13.000                    ms
[info] VectorOfBooleansBenchmark.readJacksonScala                                                        128  thrpt    5    467017.325 ±   38804.685   ops/s
[info] VectorOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate                                         128  thrpt    5       569.807 ±      47.006  MB/sec
[info] VectorOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm                                    128  thrpt    5      1920.001 ±       0.001    B/op
[info] VectorOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                128  thrpt    5       502.352 ±    1111.786  MB/sec
[info] VectorOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5      1699.542 ±    3774.781    B/op
[info] VectorOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5         0.470 ±       3.990  MB/sec
[info] VectorOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5         1.569 ±      13.317    B/op
[info] VectorOfBooleansBenchmark.readJacksonScala:·gc.count                                              128  thrpt    5         4.000                counts
[info] VectorOfBooleansBenchmark.readJacksonScala:·gc.time                                               128  thrpt    5         8.000                    ms
[info] VectorOfBooleansBenchmark.readJsoniterScala                                                       128  thrpt    5   1263501.051 ±    1617.930   ops/s
[info] VectorOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate                                        128  thrpt    5       661.522 ±       0.932  MB/sec
[info] VectorOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                   128  thrpt    5       824.000 ±       0.001    B/op
[info] VectorOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                               128  thrpt    5       673.149 ±       1.298  MB/sec
[info] VectorOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5       838.482 ±       2.471    B/op
[info] VectorOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.329 ±       2.702  MB/sec
[info] VectorOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         0.410 ±       3.368    B/op
[info] VectorOfBooleansBenchmark.readJsoniterScala:·gc.count                                             128  thrpt    5         5.000                counts
[info] VectorOfBooleansBenchmark.readJsoniterScala:·gc.time                                              128  thrpt    5         5.000                    ms
[info] VectorOfBooleansBenchmark.readPlayJson                                                            128  thrpt    5    115733.015 ±    3127.777   ops/s
[info] VectorOfBooleansBenchmark.readPlayJson:·gc.alloc.rate                                             128  thrpt    5      4022.666 ±     108.842  MB/sec
[info] VectorOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm                                        128  thrpt    5     54704.004 ±       0.001    B/op
[info] VectorOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                    128  thrpt    5      3942.278 ±    1167.664  MB/sec
[info] VectorOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5     53613.158 ±   15967.854    B/op
[info] VectorOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.083 ±       0.057  MB/sec
[info] VectorOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         1.131 ±       0.743    B/op
[info] VectorOfBooleansBenchmark.readPlayJson:·gc.count                                                  128  thrpt    5        29.000                counts
[info] VectorOfBooleansBenchmark.readPlayJson:·gc.time                                                   128  thrpt    5        27.000                    ms
[info] VectorOfBooleansBenchmark.readUPickle                                                             128  thrpt    5    613799.007 ±   10591.011   ops/s
[info] VectorOfBooleansBenchmark.readUPickle:·gc.alloc.rate                                              128  thrpt    5      1790.876 ±      30.638  MB/sec
[info] VectorOfBooleansBenchmark.readUPickle:·gc.alloc.rate.norm                                         128  thrpt    5      4592.001 ±       0.001    B/op
[info] VectorOfBooleansBenchmark.readUPickle:·gc.churn.PS_Eden_Space                                     128  thrpt    5      1757.771 ±    1423.213  MB/sec
[info] VectorOfBooleansBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5      4509.209 ±    3692.772    B/op
[info] VectorOfBooleansBenchmark.readUPickle:·gc.churn.PS_Survivor_Space                                 128  thrpt    5         0.050 ±       0.091  MB/sec
[info] VectorOfBooleansBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5         0.128 ±       0.233    B/op
[info] VectorOfBooleansBenchmark.readUPickle:·gc.count                                                   128  thrpt    5        13.000                counts
[info] VectorOfBooleansBenchmark.readUPickle:·gc.time                                                    128  thrpt    5        11.000                    ms
[info] VectorOfBooleansBenchmark.writeCirce                                                              128  thrpt    5    376671.220 ±    4077.905   ops/s
[info] VectorOfBooleansBenchmark.writeCirce:·gc.alloc.rate                                               128  thrpt    5      1290.522 ±      13.914  MB/sec
[info] VectorOfBooleansBenchmark.writeCirce:·gc.alloc.rate.norm                                          128  thrpt    5      5392.001 ±       0.001    B/op
[info] VectorOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                      128  thrpt    5      1343.829 ±       8.850  MB/sec
[info] VectorOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5      5614.777 ±      94.034    B/op
[info] VectorOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                  128  thrpt    5         0.062 ±       0.127  MB/sec
[info] VectorOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5         0.261 ±       0.532    B/op
[info] VectorOfBooleansBenchmark.writeCirce:·gc.count                                                    128  thrpt    5        10.000                counts
[info] VectorOfBooleansBenchmark.writeCirce:·gc.time                                                     128  thrpt    5         8.000                    ms
[info] VectorOfBooleansBenchmark.writeJacksonScala                                                       128  thrpt    5    631676.839 ±    6986.695   ops/s
[info] VectorOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate                                        128  thrpt    5       488.158 ±       5.345  MB/sec
[info] VectorOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                   128  thrpt    5      1216.001 ±       0.001    B/op
[info] VectorOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                               128  thrpt    5       471.341 ±    1057.543  MB/sec
[info] VectorOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5      1175.492 ±    2636.733    B/op
[info] VectorOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5         0.481 ±       3.967  MB/sec
[info] VectorOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5         1.199 ±       9.882    B/op
[info] VectorOfBooleansBenchmark.writeJacksonScala:·gc.count                                             128  thrpt    5         4.000                counts
[info] VectorOfBooleansBenchmark.writeJacksonScala:·gc.time                                              128  thrpt    5        10.000                    ms
[info] VectorOfBooleansBenchmark.writeJsoniterScala                                                      128  thrpt    5   1784232.856 ±   57779.136   ops/s
[info] VectorOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate                                       128  thrpt    5       825.462 ±      26.128  MB/sec
[info] VectorOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                  128  thrpt    5       728.000 ±       0.001    B/op
[info] VectorOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                              128  thrpt    5       807.923 ±    1158.764  MB/sec
[info] VectorOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5       713.094 ±    1032.298    B/op
[info] VectorOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5         0.017 ±       0.088  MB/sec
[info] VectorOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5         0.015 ±       0.078    B/op
[info] VectorOfBooleansBenchmark.writeJsoniterScala:·gc.count                                            128  thrpt    5         6.000                counts
[info] VectorOfBooleansBenchmark.writeJsoniterScala:·gc.time                                             128  thrpt    5         5.000                    ms
[info] VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc                                              128  thrpt    5   1916752.685 ±   26519.348   ops/s
[info] VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                               128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                          128  thrpt    5        ≈ 10⁻⁴                  B/op
[info] VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count                                    128  thrpt    5           ≈ 0                counts
[info] VectorOfBooleansBenchmark.writePlayJson                                                           128  thrpt    5    346616.110 ±     973.248   ops/s
[info] VectorOfBooleansBenchmark.writePlayJson:·gc.alloc.rate                                            128  thrpt    5       512.758 ±       1.327  MB/sec
[info] VectorOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm                                       128  thrpt    5      2328.001 ±       0.001    B/op
[info] VectorOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                   128  thrpt    5       606.516 ±     333.455  MB/sec
[info] VectorOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5      2753.647 ±    1512.821    B/op
[info] VectorOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                               128  thrpt    5         0.415 ±       3.483  MB/sec
[info] VectorOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5         1.885 ±      15.826    B/op
[info] VectorOfBooleansBenchmark.writePlayJson:·gc.count                                                 128  thrpt    5         5.000                counts
[info] VectorOfBooleansBenchmark.writePlayJson:·gc.time                                                  128  thrpt    5         9.000                    ms
[info] VectorOfBooleansBenchmark.writeUPickle                                                            128  thrpt    5    167132.706 ±    4151.422   ops/s
[info] VectorOfBooleansBenchmark.writeUPickle:·gc.alloc.rate                                             128  thrpt    5       985.558 ±      24.280  MB/sec
[info] VectorOfBooleansBenchmark.writeUPickle:·gc.alloc.rate.norm                                        128  thrpt    5      9280.003 ±       0.001    B/op
[info] VectorOfBooleansBenchmark.writeUPickle:·gc.churn.PS_Eden_Space                                    128  thrpt    5      1078.852 ±    1422.636  MB/sec
[info] VectorOfBooleansBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5     10154.733 ±   13347.442    B/op
[info] VectorOfBooleansBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space                                128  thrpt    5         0.037 ±       0.143  MB/sec
[info] VectorOfBooleansBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5         0.353 ±       1.350    B/op
[info] VectorOfBooleansBenchmark.writeUPickle:·gc.count                                                  128  thrpt    5         8.000                counts
[info] VectorOfBooleansBenchmark.writeUPickle:·gc.time                                                   128  thrpt    5         7.000                    ms
[info] Benchmark result is saved to jdk8.json
[success] Total time: 8204 s, completed Jun 3, 2018 1:10:15 AM
