[info] Loading settings from idea.sbt ...
[info] Loading global plugins from /home/andriy/.sbt/1.0/plugins
[info] Loading settings from plugins.sbt ...
[info] Loading project definition from /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/project
[info] Loading settings from release.sbt,build.sbt,version.sbt ...
[info] Set current project to jsoniter-scala (in build file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/)
[info] Setting Scala version to 2.12.6 on 2 projects.
[info] Excluded 2 projects, run ++ 2.12.6 -v for more details.
[info] Reapplying settings...
[info] Set current project to jsoniter-scala (in build file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/)
[success] Total time: 0 s, completed Jun 3, 2018 3:27:33 AM
[info] Updating core...
[info] Done updating.
[info] Updating macros...
[info] Done updating.
[info] Updating benchmark...
[info] Done updating.
[info] Compiling 5 Scala sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/target/scala-2.12/classes ...
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/core/JsonReader.scala:989:79: constructor String in class String is deprecated: see corresponding Javadoc for more information.
[warn]   private[this] def toDouble(pos: Int): Double = java.lang.Double.parseDouble(new String(buf, 0, mark, pos - mark))
[warn]                                                                               ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/core/JsonReader.scala:1075:75: constructor String in class String is deprecated: see corresponding Javadoc for more information.
[warn]   private[this] def toFloat(pos: Int): Float = java.lang.Float.parseFloat(new String(buf, 0, mark, pos - mark))
[warn]                                                                           ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/core/JsonWriter.scala:443:7: method getBytes in class String is deprecated: see corresponding Javadoc for more information.
[warn]     s.getBytes(0, len, buf, pos)
[warn]       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/core/JsonWriter.scala:451:7: method getBytes in class String is deprecated: see corresponding Javadoc for more information.
[warn]     s.getBytes(0, len, buf, pos + 1)
[warn]       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/core/JsonWriter.scala:967:14: method getBytes in class String is deprecated: see corresponding Javadoc for more information.
[warn]       zoneId.getBytes(0, len, buf, pos)
[warn]              ^
[warn] 5 warnings found
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/target/scala-2.12/core_2.12-0.27.3-SNAPSHOT.jar ...
[info] Compiling 1 Scala source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/target/scala-2.12/classes ...
[info] Done packaging.
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/target/scala-2.12/macros_2.12-0.27.3-SNAPSHOT.jar ...
[info] Compiling 59 Scala sources and 1 Java source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes ...
[info] Done packaging.
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:17:48: Generated JSON codec for type 'Int':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Int] {
[info]       def nullValue: Int = 0;
[info]       def decodeValue(in: JsonReader, default: Int): Int = in.readInt();
[info]       def encodeValue(x: Int, out: JsonWriter): Unit = out.writeVal(x)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val intCodec: JsonValueCodec[Int] = make[Int](CodecMakerConfig()) // don't define implicit for supported types
[info]                                                ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:18:57: Generated JSON codec for type 'String':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[String] {
[info]       def nullValue: String = null;
[info]       def decodeValue(in: JsonReader, default: String): String = in.readString(default);
[info]       def encodeValue(x: String, out: JsonWriter): Unit = out.writeVal(x)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val stringCodec: JsonValueCodec[String] = make[String](CodecMakerConfig()) // don't define implicit for supported types
[info]                                                         ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:19:56: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase): com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d1(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.A): com.github.plokhotnyuk.jsoniter_scala.macros.A = if (in.isNextToken('{'))
[info]         {
[info]           var _a: Int = 0;
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 97 => if (in.isCharBufEqualsTo(l, "a"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _a = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(1).!=(0))
[info]             in.requiredFieldError(f0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.A(a = _a)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d2(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.B): com.github.plokhotnyuk.jsoniter_scala.macros.B = if (in.isNextToken('{'))
[info]         {
[info]           var _b: String = null;
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 98 => if (in.isCharBufEqualsTo(l, "b"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _b = in.readString(_b)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(1).!=(0))
[info]             in.requiredFieldError(f1(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.B(b = _b)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d3(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.C): com.github.plokhotnyuk.jsoniter_scala.macros.C = if (in.isNextToken('{'))
[info]         {
[info]           var _l: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = null;
[info]           var _r: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = null;
[info]           var p0 = 3;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 108 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _l = d0(in, _l)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 114 => if (in.isCharBufEqualsTo(l, "r"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _r = d0(in, _r)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(3).!=(0))
[info]             in.requiredFieldError(f2(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.C(l = _l, r = _r)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase): com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = {
[info]         in.setMark();
[info]         if (in.isNextToken('{'))
[info]           if (in.skipToKey("type"))
[info]             {
[info]               val l = in.readStringAsCharBuf();
[info]               (in.charBufToHashCode(l): @switch) match {
[info]                 case 65 => if (in.isCharBufEqualsTo(l, "A"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d1(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case 66 => if (in.isCharBufEqualsTo(l, "B"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d2(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case 67 => if (in.isCharBufEqualsTo(l, "C"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d3(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case _ => in.discriminatorValueError("type")
[info]               }
[info]             }
[info]           else
[info]             in.requiredFieldError("type")
[info]         else
[info]           in.readNullOrTokenError(default, '{')
[info]       };
[info]       private[this] def e1(x: com.github.plokhotnyuk.jsoniter_scala.macros.A, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("A")
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("a");
[info]           out.writeVal(x.a)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e2(x: com.github.plokhotnyuk.jsoniter_scala.macros.B, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("B")
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("b");
[info]           out.writeVal(x.b)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e3(x: com.github.plokhotnyuk.jsoniter_scala.macros.C, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("C")
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("l");
[info]           e0(x.l, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("r");
[info]           e0(x.r, out)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase, out: JsonWriter): Unit = x match {
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.A)) => e1(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.B)) => e2(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.C)) => e3(x, out)
[info]       };
[info]       private[this] def f0(i: Int): String = (i: @switch) match {
[info]         case 0 => "a"
[info]       };
[info]       private[this] def f1(i: Int): String = (i: @switch) match {
[info]         case 0 => "b"
[info]       };
[info]       private[this] def f2(i: Int): String = (i: @switch) match {
[info]         case 0 => "l"
[info]         case 1 => "r"
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val adtCodec: JsonValueCodec[AdtBase] = make[AdtBase](CodecMakerConfig()) // don't define implicit for recursive structures
[info]                                                        ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:20:60: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON): com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d2(in: JsonReader, default: scala.collection.immutable.Map[String,String]): scala.collection.immutable.Map[String,String] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = Map.empty[String, String];
[info]             do 
[info]               x = x.updated(in.readKeyAsString(), in.readString(null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d5(in: JsonReader, default: (Double, Double)): (Double, Double) = if (in.isNextToken('['))
[info]         {
[info]           val _1: Double = in.readDouble();
[info]           val _2: Double = if (in.isNextToken(','))
[info]             in.readDouble()
[info]           else
[info]             in.commaError();
[info]           if (in.isNextToken(']'))
[info]             new (Double, Double)(_1, _2)
[info]           else
[info]             in.arrayEndError()
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d4(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Point): com.github.plokhotnyuk.jsoniter_scala.macros.Point = if (in.isNextToken('{'))
[info]         {
[info]           var _coordinates: (Double, Double) = null;
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d5(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(1).!=(0))
[info]             in.requiredFieldError(f1(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Point(coordinates = _coordinates)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d7(in: JsonReader, default: IndexedSeq[(Double, Double)]): IndexedSeq[(Double, Double)] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[(Double, Double)];
[info]             do 
[info]               x.+=(d5(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d6(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MultiPoint): com.github.plokhotnyuk.jsoniter_scala.macros.MultiPoint = if (in.isNextToken('{'))
[info]         {
[info]           var _coordinates: IndexedSeq[(Double, Double)] = IndexedSeq.empty[(Double, Double)];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d7(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.MultiPoint(coordinates = _coordinates)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d8(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.LineString): com.github.plokhotnyuk.jsoniter_scala.macros.LineString = if (in.isNextToken('{'))
[info]         {
[info]           var _coordinates: IndexedSeq[(Double, Double)] = IndexedSeq.empty[(Double, Double)];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d7(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.LineString(coordinates = _coordinates)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d10(in: JsonReader, default: IndexedSeq[IndexedSeq[(Double, Double)]]): IndexedSeq[IndexedSeq[(Double, Double)]] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[IndexedSeq[(Double, Double)]];
[info]             do 
[info]               x.+=(d7(in, IndexedSeq.empty[(Double, Double)]))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d9(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MultiLineString): com.github.plokhotnyuk.jsoniter_scala.macros.MultiLineString = if (in.isNextToken('{'))
[info]         {
[info]           var _coordinates: IndexedSeq[IndexedSeq[(Double, Double)]] = IndexedSeq.empty[IndexedSeq[(Double, Double)]];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d10(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.MultiLineString(coordinates = _coordinates)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d12(in: JsonReader, default: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Geometry]): IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Geometry] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.Geometry];
[info]             do 
[info]               x.+=(d3(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d11(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.GeometryCollection): com.github.plokhotnyuk.jsoniter_scala.macros.GeometryCollection = if (in.isNextToken('{'))
[info]         {
[info]           var _geometries: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Geometry] = IndexedSeq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Geometry];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 203916432 => if (in.isCharBufEqualsTo(l, "geometries"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _geometries = d12(in, _geometries)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.GeometryCollection(geometries = _geometries)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d13(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Polygon): com.github.plokhotnyuk.jsoniter_scala.macros.Polygon = if (in.isNextToken('{'))
[info]         {
[info]           var _coordinates: IndexedSeq[IndexedSeq[(Double, Double)]] = IndexedSeq.empty[IndexedSeq[(Double, Double)]];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d10(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Polygon(coordinates = _coordinates)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d15(in: JsonReader, default: IndexedSeq[IndexedSeq[IndexedSeq[(Double, Double)]]]): IndexedSeq[IndexedSeq[IndexedSeq[(Double, Double)]]] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[IndexedSeq[IndexedSeq[(Double, Double)]]];
[info]             do 
[info]               x.+=(d10(in, IndexedSeq.empty[IndexedSeq[(Double, Double)]]))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d14(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MultiPolygon): com.github.plokhotnyuk.jsoniter_scala.macros.MultiPolygon = if (in.isNextToken('{'))
[info]         {
[info]           var _coordinates: IndexedSeq[IndexedSeq[IndexedSeq[(Double, Double)]]] = IndexedSeq.empty[IndexedSeq[IndexedSeq[(Double, Double)]]];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d15(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.MultiPolygon(coordinates = _coordinates)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d3(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Geometry): com.github.plokhotnyuk.jsoniter_scala.macros.Geometry = {
[info]         in.setMark();
[info]         if (in.isNextToken('{'))
[info]           if (in.skipToKey("type"))
[info]             {
[info]               val l = in.readStringAsCharBuf();
[info]               (in.charBufToHashCode(l): @switch) match {
[info]                 case 77292912 => if (in.isCharBufEqualsTo(l, "Point"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d4(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case -1065891849 => if (in.isCharBufEqualsTo(l, "MultiPoint"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d6(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case 1806700869 => if (in.isCharBufEqualsTo(l, "LineString"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d8(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case -627102946 => if (in.isCharBufEqualsTo(l, "MultiLineString"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d9(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case 1950410960 => if (in.isCharBufEqualsTo(l, "GeometryCollection"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d11(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case 1267133722 => if (in.isCharBufEqualsTo(l, "Polygon"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d13(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case -2116761119 => if (in.isCharBufEqualsTo(l, "MultiPolygon"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d14(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case _ => in.discriminatorValueError("type")
[info]               }
[info]             }
[info]           else
[info]             in.requiredFieldError("type")
[info]         else
[info]           in.readNullOrTokenError(default, '{')
[info]       };
[info]       private[this] def d1(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Feature): com.github.plokhotnyuk.jsoniter_scala.macros.Feature = if (in.isNextToken('{'))
[info]         {
[info]           var _properties: scala.collection.immutable.Map[String,String] = Map.empty[String, String];
[info]           var _geometry: com.github.plokhotnyuk.jsoniter_scala.macros.Geometry = null;
[info]           var p0 = 3;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -926053069 => if (in.isCharBufEqualsTo(l, "properties"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _properties = d2(in, _properties)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1846020210 => if (in.isCharBufEqualsTo(l, "geometry"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _geometry = d3(in, _geometry)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(2).!=(0))
[info]             in.requiredFieldError(f0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Feature(properties = _properties, geometry = _geometry)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d17(in: JsonReader, default: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON]): IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON];
[info]             do 
[info]               x.+=(d0(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d16(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.FeatureCollection): com.github.plokhotnyuk.jsoniter_scala.macros.FeatureCollection = if (in.isNextToken('{'))
[info]         {
[info]           var _features: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON] = IndexedSeq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON];
[info]           var p0 = 1;
[info]           var pd = true;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -290659267 => if (in.isCharBufEqualsTo(l, "features"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _features = d17(in, _features)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => if (pd)
[info]                       {
[info]                         pd = pd.`unary_!`;
[info]                         in.skip()
[info]                       }
[info]                     else
[info]                       in.duplicatedKeyError(l)
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.FeatureCollection(features = _features)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON): com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON = {
[info]         in.setMark();
[info]         if (in.isNextToken('{'))
[info]           if (in.skipToKey("type"))
[info]             {
[info]               val l = in.readStringAsCharBuf();
[info]               (in.charBufToHashCode(l): @switch) match {
[info]                 case 685445846 => if (in.isCharBufEqualsTo(l, "Feature"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d1(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case -1377727980 => if (in.isCharBufEqualsTo(l, "FeatureCollection"))
[info]                   {
[info]                     in.rollbackToMark();
[info]                     d16(in, null)
[info]                   }
[info]                 else
[info]                   in.discriminatorValueError("type")
[info]                 case _ => in.discriminatorValueError("type")
[info]               }
[info]             }
[info]           else
[info]             in.requiredFieldError("type")
[info]         else
[info]           in.readNullOrTokenError(default, '{')
[info]       };
[info]       private[this] def e2(x: scala.collection.immutable.Map[String,String], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e5(x: (Double, Double), out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         {
[info]           out.writeComma();
[info]           out.writeVal(x._1)
[info]         };
[info]         {
[info]           out.writeComma();
[info]           out.writeVal(x._2)
[info]         };
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e4(x: com.github.plokhotnyuk.jsoniter_scala.macros.Point, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("Point")
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("coordinates");
[info]           e5(x.coordinates, out)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e7(x: IndexedSeq[(Double, Double)], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e5(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e6(x: com.github.plokhotnyuk.jsoniter_scala.macros.MultiPoint, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("MultiPoint")
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               e7(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e8(x: com.github.plokhotnyuk.jsoniter_scala.macros.LineString, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("LineString")
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               e7(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e10(x: IndexedSeq[IndexedSeq[(Double, Double)]], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e7(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e9(x: com.github.plokhotnyuk.jsoniter_scala.macros.MultiLineString, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("MultiLineString")
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               e10(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e12(x: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Geometry], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e3(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e11(x: com.github.plokhotnyuk.jsoniter_scala.macros.GeometryCollection, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("GeometryCollection")
[info]         };
[info]         {
[info]           val v = x.geometries;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("geometries");
[info]               e12(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e13(x: com.github.plokhotnyuk.jsoniter_scala.macros.Polygon, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("Polygon")
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               e10(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e15(x: IndexedSeq[IndexedSeq[IndexedSeq[(Double, Double)]]], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e10(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e14(x: com.github.plokhotnyuk.jsoniter_scala.macros.MultiPolygon, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("MultiPolygon")
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               e15(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e3(x: com.github.plokhotnyuk.jsoniter_scala.macros.Geometry, out: JsonWriter): Unit = x match {
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.Point)) => e4(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.MultiPoint)) => e6(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.LineString)) => e8(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.MultiLineString)) => e9(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.GeometryCollection)) => e11(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.Polygon)) => e13(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.MultiPolygon)) => e14(x, out)
[info]       };
[info]       private[this] def e1(x: com.github.plokhotnyuk.jsoniter_scala.macros.Feature, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("Feature")
[info]         };
[info]         {
[info]           val v = x.properties;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("properties");
[info]               e2(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("geometry");
[info]           e3(x.geometry, out)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e17(x: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e0(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e16(x: com.github.plokhotnyuk.jsoniter_scala.macros.FeatureCollection, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("type");
[info]           out.writeNonEscapedAsciiVal("FeatureCollection")
[info]         };
[info]         {
[info]           val v = x.features;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("features");
[info]               e17(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSON, out: JsonWriter): Unit = x match {
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.Feature)) => e1(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.FeatureCollection)) => e16(x, out)
[info]       };
[info]       private[this] def f0(i: Int): String = (i: @switch) match {
[info]         case 0 => "properties"
[info]         case 1 => "geometry"
[info]       };
[info]       private[this] def f1(i: Int): String = (i: @switch) match {
[info]         case 0 => "coordinates"
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val geoJSONCodec: JsonValueCodec[GeoJSON] = make[GeoJSON](CodecMakerConfig()) // don't define implicit for recursive structures
[info]                                                            ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:21:78: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructs':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructs] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructs = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructs): com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructs = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructs, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d1(in: JsonReader, default: Option[com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructs]): Option[com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructs] = if (in.isNextToken('n'))
[info]         in.readNullOrError(default, "expected value or null")
[info]       else
[info]         {
[info]           in.rollbackToken();
[info]           Some(d0(in, null))
[info]         };
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructs): com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructs = if (in.isNextToken('{'))
[info]         {
[info]           var _n: Option[com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructs] = None;
[info]           var p0 = 1;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 110 => if (in.isCharBufEqualsTo(l, "n"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _n = d1(in, _n)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructs(n = _n)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructs, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           val v = x.n;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("n");
[info]               e0(v.get, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val nestedStructsCodec: JsonValueCodec[NestedStructs] = make[NestedStructs](CodecMakerConfig())
[info]                                                                              ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:22:69: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs): com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d1(in: JsonReader, default: Option[String]): Option[String] = if (in.isNextToken('n'))
[info]         in.readNullOrError(default, "expected value or null")
[info]       else
[info]         {
[info]           in.rollbackToken();
[info]           Some(in.readString(null))
[info]         };
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs): com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs = if (in.isNextToken('{'))
[info]         {
[info]           var _s: String = null;
[info]           var _bd: scala.math.BigDecimal = null;
[info]           var _os: Option[String] = None;
[info]           var p0 = 7;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _s = in.readString(_s)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3138 => if (in.isCharBufEqualsTo(l, "bd"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _bd = in.readBigDecimal(_bd, 300)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3556 => if (in.isCharBufEqualsTo(l, "os"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _os = d1(in, _os)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(3).!=(0))
[info]             in.requiredFieldError(f0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs(s = _s, bd = _bd, os = _os)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("s");
[info]           out.writeVal(x.s)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("bd");
[info]           out.writeVal(x.bd)
[info]         };
[info]         {
[info]           val v = x.os;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("os");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def f0(i: Int): String = (i: @switch) match {
[info]         case 0 => "s"
[info]         case 1 => "bd"
[info]         case 2 => "os"
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val anyRefsCodec: JsonValueCodec[AnyRefs] = make[AnyRefs](CodecMakerConfig())
[info]                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:23:97: Generated JSON codec for type 'Array[BigDecimal]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[BigDecimal]] {
[info]       def nullValue: Array[BigDecimal] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[BigDecimal]): Array[BigDecimal] = d0(in, default);
[info]       def encodeValue(x: Array[BigDecimal], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[BigDecimal]): Array[BigDecimal] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[scala.math.BigDecimal](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readBigDecimal(null, 300));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[BigDecimal], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[BigDecimal] = new Array[scala.math.BigDecimal](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val bigDecimalArrayCodec: JsonValueCodec[Array[BigDecimal]] = make[Array[BigDecimal]](CodecMakerConfig())
[info]                                                                                                 ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:24:85: Generated JSON codec for type 'Array[BigInt]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[BigInt]] {
[info]       def nullValue: Array[BigInt] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[BigInt]): Array[BigInt] = d0(in, default);
[info]       def encodeValue(x: Array[BigInt], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[BigInt]): Array[BigInt] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[scala.math.BigInt](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readBigInt(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[BigInt], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[BigInt] = new Array[scala.math.BigInt](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val bigIntArrayCodec: JsonValueCodec[Array[BigInt]] = make[Array[BigInt]](CodecMakerConfig())
[info]                                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:25:122: Generated JSON codec for type 'scala.collection.mutable.ArrayBuffer[Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.mutable.ArrayBuffer[Boolean]] {
[info]       def nullValue: scala.collection.mutable.ArrayBuffer[Boolean] = ArrayBuffer.empty[Boolean];
[info]       def decodeValue(in: JsonReader, default: scala.collection.mutable.ArrayBuffer[Boolean]): scala.collection.mutable.ArrayBuffer[Boolean] = d0(in, default);
[info]       def encodeValue(x: scala.collection.mutable.ArrayBuffer[Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.mutable.ArrayBuffer[Boolean]): scala.collection.mutable.ArrayBuffer[Boolean] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = default;
[info]             if (x.nonEmpty)
[info]               x.clear()
[info]             else
[info]               ();
[info]             do 
[info]               x.+=(in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: scala.collection.mutable.ArrayBuffer[Boolean], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val booleanArrayBufferCodec: JsonValueCodec[mutable.ArrayBuffer[Boolean]] = make[mutable.ArrayBuffer[Boolean]](CodecMakerConfig())
[info]                                                                                                                          ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:26:88: Generated JSON codec for type 'Array[Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Boolean]] {
[info]       def nullValue: Array[Boolean] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Boolean]): Array[Boolean] = d0(in, default);
[info]       def encodeValue(x: Array[Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[Boolean]): Array[Boolean] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Boolean](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readBoolean());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Boolean], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[Boolean] = new Array[Boolean](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val booleanArrayCodec: JsonValueCodec[Array[Boolean]] = make[Array[Boolean]](CodecMakerConfig())
[info]                                                                                        ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:27:85: Generated JSON codec for type 'List[Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[List[Boolean]] {
[info]       def nullValue: List[Boolean] = List.empty[Boolean];
[info]       def decodeValue(in: JsonReader, default: List[Boolean]): List[Boolean] = d0(in, default);
[info]       def encodeValue(x: List[Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: List[Boolean]): List[Boolean] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = new mutable.ListBuffer[Boolean]();
[info]             do 
[info]               x.+=(in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.toList
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: List[Boolean], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         var l = x;
[info]         while (l.isEmpty.`unary_!`) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(l.head);
[info]             l = l.tail
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val booleanListCodec: JsonValueCodec[List[Boolean]] = make[List[Boolean]](CodecMakerConfig())
[info]                                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:28:91: Generated JSON codec for type 'scala.collection.immutable.Vector[Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.immutable.Vector[Boolean]] {
[info]       def nullValue: scala.collection.immutable.Vector[Boolean] = Vector.empty[Boolean];
[info]       def decodeValue(in: JsonReader, default: scala.collection.immutable.Vector[Boolean]): scala.collection.immutable.Vector[Boolean] = d0(in, default);
[info]       def encodeValue(x: scala.collection.immutable.Vector[Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.immutable.Vector[Boolean]): scala.collection.immutable.Vector[Boolean] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Vector.newBuilder[Boolean];
[info]             do 
[info]               x.+=(in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: scala.collection.immutable.Vector[Boolean], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val booleanVectorCodec: JsonValueCodec[Vector[Boolean]] = make[Vector[Boolean]](CodecMakerConfig())
[info]                                                                                           ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:29:79: Generated JSON codec for type 'Array[Byte]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Byte]] {
[info]       def nullValue: Array[Byte] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Byte]): Array[Byte] = d0(in, default);
[info]       def encodeValue(x: Array[Byte], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[Byte]): Array[Byte] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Byte](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readByte());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Byte], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[Byte] = new Array[Byte](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val byteArrayCodec: JsonValueCodec[Array[Byte]] = make[Array[Byte]](CodecMakerConfig())
[info]                                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:30:79: Generated JSON codec for type 'Array[Char]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Char]] {
[info]       def nullValue: Array[Char] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Char]): Array[Char] = d0(in, default);
[info]       def encodeValue(x: Array[Char], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[Char]): Array[Char] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Char](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readChar());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Char], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[Char] = new Array[Char](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val charArrayCodec: JsonValueCodec[Array[Char]] = make[Array[Char]](CodecMakerConfig())
[info]                                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:31:85: Generated JSON codec for type 'Array[Double]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Double]] {
[info]       def nullValue: Array[Double] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Double]): Array[Double] = d0(in, default);
[info]       def encodeValue(x: Array[Double], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[Double]): Array[Double] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Double](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readDouble());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Double], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[Double] = new Array[Double](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val doubleArrayCodec: JsonValueCodec[Array[Double]] = make[Array[Double]](CodecMakerConfig())
[info]                                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:32:91: Generated JSON codec for type 'Array[java.time.Duration]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.Duration]] {
[info]       def nullValue: Array[java.time.Duration] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.Duration]): Array[java.time.Duration] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.Duration], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.Duration]): Array[java.time.Duration] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.Duration](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readDuration(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.Duration], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[java.time.Duration] = new Array[java.time.Duration](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val durationArrayCodec: JsonValueCodec[Array[Duration]] = make[Array[Duration]](CodecMakerConfig())
[info]                                                                                           ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:33:87: Generated JSON codec for type 'Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum]] {
[info]       def nullValue: Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum]): Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum] = d0(in, default);
[info]       def encodeValue(x: Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d1(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.Value): com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.Value = if (in.isNextToken('\"'))
[info]         {
[info]           in.rollbackToken();
[info]           val len = in.readStringAsCharBuf();
[info]           SuitEnum.values.iterator.find(((e) => in.isCharBufEqualsTo(len, e.toString))).getOrElse(in.enumValueError(len))
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '\"');
[info]       private[this] def d0(in: JsonReader, default: Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum]): Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.Value](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, d1(in, null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e1(x: com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.Value, out: JsonWriter): Unit = out.writeVal(x.toString);
[info]       private[this] def e0(x: Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e1(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.SuitEnum] = new Array[com.github.plokhotnyuk.jsoniter_scala.macros.SuitEnum.Value](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val enumArrayCodec: JsonValueCodec[Array[SuitEnum]] = make[Array[SuitEnum]](CodecMakerConfig())
[info]                                                                                       ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:34:82: Generated JSON codec for type 'Array[Float]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Float]] {
[info]       def nullValue: Array[Float] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Float]): Array[Float] = d0(in, default);
[info]       def encodeValue(x: Array[Float], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[Float]): Array[Float] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Float](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readFloat());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Float], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[Float] = new Array[Float](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val floatArrayCodec: JsonValueCodec[Array[Float]] = make[Array[Float]](CodecMakerConfig())
[info]                                                                                  ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:35:88: Generated JSON codec for type 'Array[java.time.Instant]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.Instant]] {
[info]       def nullValue: Array[java.time.Instant] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.Instant]): Array[java.time.Instant] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.Instant], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.Instant]): Array[java.time.Instant] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.Instant](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readInstant(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.Instant], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[java.time.Instant] = new Array[java.time.Instant](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val instantArrayCodec: JsonValueCodec[Array[Instant]] = make[Array[Instant]](CodecMakerConfig())
[info]                                                                                        ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:36:76: Generated JSON codec for type 'Array[Int]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Int]] {
[info]       def nullValue: Array[Int] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Int]): Array[Int] = d0(in, default);
[info]       def encodeValue(x: Array[Int], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[Int]): Array[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Int](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readInt());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[Int] = new Array[Int](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val intArrayCodec: JsonValueCodec[Array[Int]] = make[Array[Int]](CodecMakerConfig())
[info]                                                                            ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:37:83: Generated JSON codec for type 'Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit]] {
[info]       def nullValue: Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit]): Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit] = d0(in, default);
[info]       def encodeValue(x: Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d1(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Suit): com.github.plokhotnyuk.jsoniter_scala.macros.Suit = if (in.isNextToken('\"'))
[info]         {
[info]           in.rollbackToken();
[info]           val v = in.readString(null);
[info]           try {
[info]             Suit.valueOf(v)
[info]           } catch {
[info]             case ((_): IllegalArgumentException) => in.enumValueError(v)
[info]           }
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '\"');
[info]       private[this] def d0(in: JsonReader, default: Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit]): Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, d1(in, null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e1(x: com.github.plokhotnyuk.jsoniter_scala.macros.Suit, out: JsonWriter): Unit = out.writeVal(x.name);
[info]       private[this] def e0(x: Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e1(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit] = new Array[com.github.plokhotnyuk.jsoniter_scala.macros.Suit](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val javaEnumArrayCodec: JsonValueCodec[Array[Suit]] = make[Array[Suit]](CodecMakerConfig())
[info]                                                                                   ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:38:79: Generated JSON codec for type 'Array[Long]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Long]] {
[info]       def nullValue: Array[Long] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Long]): Array[Long] = d0(in, default);
[info]       def encodeValue(x: Array[Long], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[Long]): Array[Long] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Long](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readLong());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Long], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[Long] = new Array[Long](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val longArrayCodec: JsonValueCodec[Array[Long]] = make[Array[Long]](CodecMakerConfig())
[info]                                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:39:94: Generated JSON codec for type 'Array[java.time.LocalDate]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.LocalDate]] {
[info]       def nullValue: Array[java.time.LocalDate] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.LocalDate]): Array[java.time.LocalDate] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.LocalDate], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.LocalDate]): Array[java.time.LocalDate] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.LocalDate](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readLocalDate(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.LocalDate], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[java.time.LocalDate] = new Array[java.time.LocalDate](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val localDateArrayCodec: JsonValueCodec[Array[LocalDate]] = make[Array[LocalDate]](CodecMakerConfig())
[info]                                                                                              ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:40:106: Generated JSON codec for type 'Array[java.time.LocalDateTime]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.LocalDateTime]] {
[info]       def nullValue: Array[java.time.LocalDateTime] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.LocalDateTime]): Array[java.time.LocalDateTime] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.LocalDateTime], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.LocalDateTime]): Array[java.time.LocalDateTime] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.LocalDateTime](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readLocalDateTime(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.LocalDateTime], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[java.time.LocalDateTime] = new Array[java.time.LocalDateTime](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val localDateTimeArrayCodec: JsonValueCodec[Array[LocalDateTime]] = make[Array[LocalDateTime]](CodecMakerConfig())
[info]                                                                                                          ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:41:94: Generated JSON codec for type 'Array[java.time.LocalTime]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.LocalTime]] {
[info]       def nullValue: Array[java.time.LocalTime] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.LocalTime]): Array[java.time.LocalTime] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.LocalTime], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.LocalTime]): Array[java.time.LocalTime] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.LocalTime](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readLocalTime(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.LocalTime], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[java.time.LocalTime] = new Array[java.time.LocalTime](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val localTimeArrayCodec: JsonValueCodec[Array[LocalTime]] = make[Array[LocalTime]](CodecMakerConfig())
[info]                                                                                              ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:42:109: Generated JSON codec for type 'Array[java.time.OffsetDateTime]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.OffsetDateTime]] {
[info]       def nullValue: Array[java.time.OffsetDateTime] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.OffsetDateTime]): Array[java.time.OffsetDateTime] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.OffsetDateTime], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.OffsetDateTime]): Array[java.time.OffsetDateTime] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.OffsetDateTime](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readOffsetDateTime(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.OffsetDateTime], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[java.time.OffsetDateTime] = new Array[java.time.OffsetDateTime](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val offsetDateTimeArrayCodec: JsonValueCodec[Array[OffsetDateTime]] = make[Array[OffsetDateTime]](CodecMakerConfig())
[info]                                                                                                             ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:43:97: Generated JSON codec for type 'Array[java.time.OffsetTime]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.OffsetTime]] {
[info]       def nullValue: Array[java.time.OffsetTime] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.OffsetTime]): Array[java.time.OffsetTime] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.OffsetTime], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.OffsetTime]): Array[java.time.OffsetTime] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.OffsetTime](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readOffsetTime(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.OffsetTime], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[java.time.OffsetTime] = new Array[java.time.OffsetTime](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val offsetTimeArrayCodec: JsonValueCodec[Array[OffsetTime]] = make[Array[OffsetTime]](CodecMakerConfig())
[info]                                                                                                 ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:44:85: Generated JSON codec for type 'Array[java.time.Period]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.Period]] {
[info]       def nullValue: Array[java.time.Period] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.Period]): Array[java.time.Period] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.Period], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.Period]): Array[java.time.Period] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.Period](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readPeriod(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.Period], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[java.time.Period] = new Array[java.time.Period](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val periodArrayCodec: JsonValueCodec[Array[Period]] = make[Array[Period]](CodecMakerConfig())
[info]                                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:45:82: Generated JSON codec for type 'Array[Short]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[Short]] {
[info]       def nullValue: Array[Short] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[Short]): Array[Short] = d0(in, default);
[info]       def encodeValue(x: Array[Short], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[Short]): Array[Short] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Short](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readShort());
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[Short], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[Short] = new Array[Short](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val shortArrayCodec: JsonValueCodec[Array[Short]] = make[Array[Short]](CodecMakerConfig())
[info]                                                                                  ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:46:79: Generated JSON codec for type 'Array[java.util.UUID]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.util.UUID]] {
[info]       def nullValue: Array[java.util.UUID] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.util.UUID]): Array[java.util.UUID] = d0(in, default);
[info]       def encodeValue(x: Array[java.util.UUID], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[java.util.UUID]): Array[java.util.UUID] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.util.UUID](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readUUID(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.util.UUID], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[java.util.UUID] = new Array[java.util.UUID](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val uuidArrayCodec: JsonValueCodec[Array[UUID]] = make[Array[UUID]](CodecMakerConfig())
[info]                                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:47:79: Generated JSON codec for type 'Array[java.time.Year]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.Year]] {
[info]       def nullValue: Array[java.time.Year] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.Year]): Array[java.time.Year] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.Year], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.Year]): Array[java.time.Year] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.Year](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readYear(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.Year], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[java.time.Year] = new Array[java.time.Year](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val yearArrayCodec: JsonValueCodec[Array[Year]] = make[Array[Year]](CodecMakerConfig())
[info]                                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:48:94: Generated JSON codec for type 'Array[java.time.YearMonth]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.YearMonth]] {
[info]       def nullValue: Array[java.time.YearMonth] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.YearMonth]): Array[java.time.YearMonth] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.YearMonth], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.YearMonth]): Array[java.time.YearMonth] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.YearMonth](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readYearMonth(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.YearMonth], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[java.time.YearMonth] = new Array[java.time.YearMonth](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val yearMonthArrayCodec: JsonValueCodec[Array[YearMonth]] = make[Array[YearMonth]](CodecMakerConfig())
[info]                                                                                              ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:49:106: Generated JSON codec for type 'Array[java.time.ZonedDateTime]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.ZonedDateTime]] {
[info]       def nullValue: Array[java.time.ZonedDateTime] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.ZonedDateTime]): Array[java.time.ZonedDateTime] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.ZonedDateTime], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.ZonedDateTime]): Array[java.time.ZonedDateTime] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.ZonedDateTime](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readZonedDateTime(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.ZonedDateTime], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[java.time.ZonedDateTime] = new Array[java.time.ZonedDateTime](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val zonedDateTimeArrayCodec: JsonValueCodec[Array[ZonedDateTime]] = make[Array[ZonedDateTime]](CodecMakerConfig())
[info]                                                                                                          ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:50:85: Generated JSON codec for type 'Array[java.time.ZoneId]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.ZoneId]] {
[info]       def nullValue: Array[java.time.ZoneId] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.ZoneId]): Array[java.time.ZoneId] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.ZoneId], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.ZoneId]): Array[java.time.ZoneId] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.ZoneId](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readZoneId(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.ZoneId], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[java.time.ZoneId] = new Array[java.time.ZoneId](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val zoneIdArrayCodec: JsonValueCodec[Array[ZoneId]] = make[Array[ZoneId]](CodecMakerConfig())
[info]                                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:51:97: Generated JSON codec for type 'Array[java.time.ZoneOffset]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Array[java.time.ZoneOffset]] {
[info]       def nullValue: Array[java.time.ZoneOffset] = v0;
[info]       def decodeValue(in: JsonReader, default: Array[java.time.ZoneOffset]): Array[java.time.ZoneOffset] = d0(in, default);
[info]       def encodeValue(x: Array[java.time.ZoneOffset], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: Array[java.time.ZoneOffset]): Array[java.time.ZoneOffset] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[java.time.ZoneOffset](16);
[info]             var i = 0;
[info]             do 
[info]               {
[info]                 if (i.==(x.length))
[info]                   x = java.util.Arrays.copyOf(x, i.<<(1))
[info]                 else
[info]                   ();
[info]                 x.update(i, in.readZoneOffset(null));
[info]                 i.+=(1)
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               if (i.==(x.length))
[info]                 x
[info]               else
[info]                 java.util.Arrays.copyOf(x, i)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: Array[java.time.ZoneOffset], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] val v0: Array[java.time.ZoneOffset] = new Array[java.time.ZoneOffset](0)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val zoneOffsetArrayCodec: JsonValueCodec[Array[ZoneOffset]] = make[Array[ZoneOffset]](CodecMakerConfig())
[info]                                                                                                 ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:52:66: Generated JSON codec for type 'scala.collection.immutable.BitSet':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.immutable.BitSet] {
[info]       def nullValue: scala.collection.immutable.BitSet = BitSet.empty;
[info]       def decodeValue(in: JsonReader, default: scala.collection.immutable.BitSet): scala.collection.immutable.BitSet = d0(in, default);
[info]       def encodeValue(x: scala.collection.immutable.BitSet, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.immutable.BitSet): scala.collection.immutable.BitSet = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Long](2);
[info]             var mi = 0;
[info]             do 
[info]               {
[info]                 val v = in.readInt();
[info]                 if (v.<(0).||(v.>=(2147483647)))
[info]                   in.decodeError("illegal value for bit set")
[info]                 else
[info]                   ();
[info]                 val i = v.>>>(6);
[info]                 if (i.>(mi))
[info]                   {
[info]                     mi = i;
[info]                     if (i.>=(x.length))
[info]                       x = java.util.Arrays.copyOf(x, java.lang.Integer.highestOneBit(i).<<(1))
[info]                     else
[info]                       ()
[info]                   }
[info]                 else
[info]                   ();
[info]                 x(i).|=(1L.<<(v.&(63)))
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               {
[info]                 if (mi.>(1).&&(mi.+(1).!=(x.length)))
[info]                   x = java.util.Arrays.copyOf(x, mi.+(1))
[info]                 else
[info]                   ();
[info]                 BitSet.fromBitMaskNoCopy(x)
[info]               }
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: scala.collection.immutable.BitSet, out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val bitSetCodec: JsonValueCodec[BitSet] = make[BitSet](CodecMakerConfig(bitSetValueLimit = Int.MaxValue /*WARNING: don't do this for open-system*/))
[info]                                                                  ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:53:87: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields): com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields): com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields = if (in.isNextToken('{'))
[info]         {
[info]           var _s: String = null;
[info]           var _i: Int = 0;
[info]           var p0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _s = in.readString(_s)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 105 => if (in.isCharBufEqualsTo(l, "i"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _i = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(3).!=(0))
[info]             in.requiredFieldError(f0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields(s = _s, i = _i)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("s");
[info]           out.writeVal(x.s)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("i");
[info]           out.writeVal(x.i)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def f0(i: Int): String = (i: @switch) match {
[info]         case 0 => "s"
[info]         case 1 => "i"
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val extractFieldsCodec: JsonValueCodec[ExtractFields] = make[ExtractFields](CodecMakerConfig())
[info]                                                                                       ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:54:94: Generated JSON codec for type 'scala.collection.immutable.IntMap[Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.immutable.IntMap[Boolean]] {
[info]       def nullValue: scala.collection.immutable.IntMap[Boolean] = IntMap.empty[Boolean];
[info]       def decodeValue(in: JsonReader, default: scala.collection.immutable.IntMap[Boolean]): scala.collection.immutable.IntMap[Boolean] = d0(in, default);
[info]       def encodeValue(x: scala.collection.immutable.IntMap[Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.immutable.IntMap[Boolean]): scala.collection.immutable.IntMap[Boolean] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = IntMap.empty[Boolean];
[info]             do 
[info]               x = x.updated(in.readKeyAsInt(), in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: scala.collection.immutable.IntMap[Boolean], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val intMapOfBooleansCodec: JsonValueCodec[IntMap[Boolean]] = make[IntMap[Boolean]](CodecMakerConfig())
[info]                                                                                              ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:55:89: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix): com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d1(in: JsonReader, default: IndexedSeq[String]): IndexedSeq[String] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[String];
[info]             do 
[info]               x.+=(in.readString(null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d6(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Value): com.github.plokhotnyuk.jsoniter_scala.macros.Value = if (in.isNextToken('{'))
[info]         {
[info]           var _text: String = null;
[info]           var _value: Int = 0;
[info]           var p0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 3556653 => if (in.isCharBufEqualsTo(l, "text"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _text = in.readString(_text)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 111972721 => if (in.isCharBufEqualsTo(l, "value"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _value = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(3).!=(0))
[info]             in.requiredFieldError(f2(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Value(text = _text, value = _value)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d5(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Elements): com.github.plokhotnyuk.jsoniter_scala.macros.Elements = if (in.isNextToken('{'))
[info]         {
[info]           var _distance: com.github.plokhotnyuk.jsoniter_scala.macros.Value = null;
[info]           var _duration: com.github.plokhotnyuk.jsoniter_scala.macros.Value = null;
[info]           var _status: String = null;
[info]           var p0 = 7;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 288459765 => if (in.isCharBufEqualsTo(l, "distance"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _distance = d6(in, _distance)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1992012396 => if (in.isCharBufEqualsTo(l, "duration"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _duration = d6(in, _duration)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -892481550 => if (in.isCharBufEqualsTo(l, "status"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _status = in.readString(_status)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(7).!=(0))
[info]             in.requiredFieldError(f1(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Elements(distance = _distance, duration = _duration, status = _status)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d4(in: JsonReader, default: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Elements]): IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Elements] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.Elements];
[info]             do 
[info]               x.+=(d5(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d3(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Rows): com.github.plokhotnyuk.jsoniter_scala.macros.Rows = if (in.isNextToken('{'))
[info]         {
[info]           var _elements: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Elements] = IndexedSeq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Elements];
[info]           var p0 = 1;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -8339209 => if (in.isCharBufEqualsTo(l, "elements"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _elements = d4(in, _elements)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Rows(elements = _elements)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d2(in: JsonReader, default: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Rows]): IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Rows] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = IndexedSeq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.Rows];
[info]             do 
[info]               x.+=(d3(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix): com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix = if (in.isNextToken('{'))
[info]         {
[info]           var _destination_addresses: IndexedSeq[String] = IndexedSeq.empty[String];
[info]           var _origin_addresses: IndexedSeq[String] = IndexedSeq.empty[String];
[info]           var _rows: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Rows] = IndexedSeq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Rows];
[info]           var _status: String = null;
[info]           var p0 = 15;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 715423921 => if (in.isCharBufEqualsTo(l, "destination_addresses"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _destination_addresses = d1(in, _destination_addresses)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1780936137 => if (in.isCharBufEqualsTo(l, "origin_addresses"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _origin_addresses = d1(in, _origin_addresses)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3506649 => if (in.isCharBufEqualsTo(l, "rows"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _rows = d2(in, _rows)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -892481550 => if (in.isCharBufEqualsTo(l, "status"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _status = in.readString(_status)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(8).!=(0))
[info]             in.requiredFieldError(f0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix(destination_addresses = _destination_addresses, origin_addresses = _origin_addresses, rows = _rows, status = _status)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e1(x: IndexedSeq[String], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e6(x: com.github.plokhotnyuk.jsoniter_scala.macros.Value, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("text");
[info]           out.writeVal(x.text)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("value");
[info]           out.writeVal(x.value)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e5(x: com.github.plokhotnyuk.jsoniter_scala.macros.Elements, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("distance");
[info]           e6(x.distance, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("duration");
[info]           e6(x.duration, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("status");
[info]           out.writeVal(x.status)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e4(x: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Elements], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e5(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e3(x: com.github.plokhotnyuk.jsoniter_scala.macros.Rows, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           val v = x.elements;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("elements");
[info]               e4(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e2(x: IndexedSeq[com.github.plokhotnyuk.jsoniter_scala.macros.Rows], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.size;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e3(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           val v = x.destination_addresses;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("destination_addresses");
[info]               e1(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.origin_addresses;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("origin_addresses");
[info]               e1(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.rows;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("rows");
[info]               e2(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("status");
[info]           out.writeVal(x.status)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def f0(i: Int): String = (i: @switch) match {
[info]         case 0 => "destination_addresses"
[info]         case 1 => "origin_addresses"
[info]         case 2 => "rows"
[info]         case 3 => "status"
[info]       };
[info]       private[this] def f1(i: Int): String = (i: @switch) match {
[info]         case 0 => "distance"
[info]         case 1 => "duration"
[info]         case 2 => "status"
[info]       };
[info]       private[this] def f2(i: Int): String = (i: @switch) match {
[info]         case 0 => "text"
[info]         case 1 => "value"
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val googleMapsAPICodec: JsonValueCodec[DistanceMatrix] = make[DistanceMatrix](CodecMakerConfig())
[info]                                                                                         ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:56:101: Generated JSON codec for type 'scala.collection.immutable.Map[Int,Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.immutable.Map[Int,Boolean]] {
[info]       def nullValue: scala.collection.immutable.Map[Int,Boolean] = Map.empty[Int, Boolean];
[info]       def decodeValue(in: JsonReader, default: scala.collection.immutable.Map[Int,Boolean]): scala.collection.immutable.Map[Int,Boolean] = d0(in, default);
[info]       def encodeValue(x: scala.collection.immutable.Map[Int,Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.immutable.Map[Int,Boolean]): scala.collection.immutable.Map[Int,Boolean] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = Map.empty[Int, Boolean];
[info]             do 
[info]               x = x.updated(in.readKeyAsInt(), in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: scala.collection.immutable.Map[Int,Boolean], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val mapOfIntsToBooleansCodec: JsonValueCodec[Map[Int, Boolean]] = make[Map[Int, Boolean]](CodecMakerConfig())
[info]                                                                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:57:95: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields): com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields): com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields = if (in.isNextToken('{'))
[info]         {
[info]           var _s: String = null;
[info]           var _i: Int = 0;
[info]           var p0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _s = in.readString(_s)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 105 => if (in.isCharBufEqualsTo(l, "i"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _i = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(3).!=(0))
[info]             in.requiredFieldError(f0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields(s = _s, i = _i)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("s");
[info]           out.writeVal(x.s)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("i");
[info]           out.writeVal(x.i)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def f0(i: Int): String = (i: @switch) match {
[info]         case 0 => "s"
[info]         case 1 => "i"
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val missingReqFieldCodec: JsonValueCodec[MissingReqFields] = make[MissingReqFields](CodecMakerConfig())
[info]                                                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:58:89: Generated JSON codec for type 'scala.collection.mutable.BitSet':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.mutable.BitSet] {
[info]       def nullValue: scala.collection.mutable.BitSet = BitSet.empty;
[info]       def decodeValue(in: JsonReader, default: scala.collection.mutable.BitSet): scala.collection.mutable.BitSet = d0(in, default);
[info]       def encodeValue(x: scala.collection.mutable.BitSet, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.mutable.BitSet): scala.collection.mutable.BitSet = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = new Array[Long](2);
[info]             do 
[info]               {
[info]                 val v = in.readInt();
[info]                 if (v.<(0).||(v.>=(2147483647)))
[info]                   in.decodeError("illegal value for bit set")
[info]                 else
[info]                   ();
[info]                 val i = v.>>>(6);
[info]                 if (i.>=(x.length))
[info]                   x = java.util.Arrays.copyOf(x, java.lang.Integer.highestOneBit(i).<<(1))
[info]                 else
[info]                   ();
[info]                 x(i).|=(1L.<<(v.&(63)))
[info]               }
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               BitSet.fromBitMaskNoCopy(x)
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: scala.collection.mutable.BitSet, out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val mutableBitSetCodec: JsonValueCodec[mutable.BitSet] = make[mutable.BitSet](CodecMakerConfig(bitSetValueLimit = Int.MaxValue /*WARNING: don't do this for open-system*/))
[info]                                                                                         ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:59:120: Generated JSON codec for type 'scala.collection.mutable.LongMap[Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.mutable.LongMap[Boolean]] {
[info]       def nullValue: scala.collection.mutable.LongMap[Boolean] = LongMap.empty[Boolean];
[info]       def decodeValue(in: JsonReader, default: scala.collection.mutable.LongMap[Boolean]): scala.collection.mutable.LongMap[Boolean] = d0(in, default);
[info]       def encodeValue(x: scala.collection.mutable.LongMap[Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.mutable.LongMap[Boolean]): scala.collection.mutable.LongMap[Boolean] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.isEmpty)
[info]               default
[info]             else
[info]               LongMap.empty[Boolean];
[info]             do 
[info]               x.update(in.readKeyAsLong(), in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: scala.collection.mutable.LongMap[Boolean], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val mutableLongMapOfBooleansCodec: JsonValueCodec[mutable.LongMap[Boolean]] = make[mutable.LongMap[Boolean]](CodecMakerConfig())
[info]                                                                                                                        ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:60:124: Generated JSON codec for type 'scala.collection.mutable.Map[Int,Boolean]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.mutable.Map[Int,Boolean]] {
[info]       def nullValue: scala.collection.mutable.Map[Int,Boolean] = Map.empty[Int, Boolean];
[info]       def decodeValue(in: JsonReader, default: scala.collection.mutable.Map[Int,Boolean]): scala.collection.mutable.Map[Int,Boolean] = d0(in, default);
[info]       def encodeValue(x: scala.collection.mutable.Map[Int,Boolean], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.mutable.Map[Int,Boolean]): scala.collection.mutable.Map[Int,Boolean] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.isEmpty)
[info]               default
[info]             else
[info]               Map.empty[Int, Boolean];
[info]             do 
[info]               x.update(in.readKeyAsInt(), in.readBoolean())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: scala.collection.mutable.Map[Int,Boolean], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val mutableMapOfIntsToBooleansCodec: JsonValueCodec[mutable.Map[Int, Boolean]] = make[mutable.Map[Int, Boolean]](CodecMakerConfig())
[info]                                                                                                                            ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:61:96: Generated JSON codec for type 'scala.collection.mutable.Set[Int]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.mutable.Set[Int]] {
[info]       def nullValue: scala.collection.mutable.Set[Int] = Set.empty[Int];
[info]       def decodeValue(in: JsonReader, default: scala.collection.mutable.Set[Int]): scala.collection.mutable.Set[Int] = d0(in, default);
[info]       def encodeValue(x: scala.collection.mutable.Set[Int], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.mutable.Set[Int]): scala.collection.mutable.Set[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = default;
[info]             if (x.nonEmpty)
[info]               x.clear()
[info]             else
[info]               ();
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: scala.collection.mutable.Set[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val mutableSetOfIntsCodec: JsonValueCodec[mutable.Set[Int]] = make[mutable.Set[Int]](CodecMakerConfig())
[info]                                                                                                ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:62:78: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.Primitives':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[com.github.plokhotnyuk.jsoniter_scala.macros.Primitives] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives = null;
[info]       def decodeValue(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives): com.github.plokhotnyuk.jsoniter_scala.macros.Primitives = d0(in, default);
[info]       def encodeValue(x: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives, out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives): com.github.plokhotnyuk.jsoniter_scala.macros.Primitives = if (in.isNextToken('{'))
[info]         {
[info]           var _b: Byte = ((0): Byte);
[info]           var _s: Short = ((0): Short);
[info]           var _i: Int = 0;
[info]           var _l: Long = 0L;
[info]           var _bl: Boolean = false;
[info]           var _ch: Char = '\u0000';
[info]           var _dbl: Double = 0.0;
[info]           var _f: Float = 0.0F;
[info]           var p0 = 255;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 98 => if (in.isCharBufEqualsTo(l, "b"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _b = in.readByte()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _s = in.readShort()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 105 => if (in.isCharBufEqualsTo(l, "i"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _i = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 108 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _l = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3146 => if (in.isCharBufEqualsTo(l, "bl"))
[info]                       {
[info]                         if (p0.&(16).!=(0))
[info]                           p0.^=(16)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _bl = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3173 => if (in.isCharBufEqualsTo(l, "ch"))
[info]                       {
[info]                         if (p0.&(32).!=(0))
[info]                           p0.^=(32)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _ch = in.readChar()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 99246 => if (in.isCharBufEqualsTo(l, "dbl"))
[info]                       {
[info]                         if (p0.&(64).!=(0))
[info]                           p0.^=(64)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _dbl = in.readDouble()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 102 => if (in.isCharBufEqualsTo(l, "f"))
[info]                       {
[info]                         if (p0.&(128).!=(0))
[info]                           p0.^=(128)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _f = in.readFloat()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(255).!=(0))
[info]             in.requiredFieldError(f0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Primitives(b = _b, s = _s, i = _i, l = _l, bl = _bl, ch = _ch, dbl = _dbl, f = _f)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("b");
[info]           out.writeVal(x.b)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("s");
[info]           out.writeVal(x.s)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("i");
[info]           out.writeVal(x.i)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("l");
[info]           out.writeVal(x.l)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("bl");
[info]           out.writeVal(x.bl)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("ch");
[info]           out.writeVal(x.ch)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("dbl");
[info]           out.writeVal(x.dbl)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("f");
[info]           out.writeVal(x.f)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def f0(i: Int): String = (i: @switch) match {
[info]         case 0 => "b"
[info]         case 1 => "s"
[info]         case 2 => "i"
[info]         case 3 => "l"
[info]         case 4 => "bl"
[info]         case 5 => "ch"
[info]         case 6 => "dbl"
[info]         case 7 => "f"
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val primitivesCodec: JsonValueCodec[Primitives] = make[Primitives](CodecMakerConfig())
[info]                                                                              ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:63:73: Generated JSON codec for type 'scala.collection.immutable.Set[Int]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[scala.collection.immutable.Set[Int]] {
[info]       def nullValue: scala.collection.immutable.Set[Int] = Set.empty[Int];
[info]       def decodeValue(in: JsonReader, default: scala.collection.immutable.Set[Int]): scala.collection.immutable.Set[Int] = d0(in, default);
[info]       def encodeValue(x: scala.collection.immutable.Set[Int], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d0(in: JsonReader, default: scala.collection.immutable.Set[Int]): scala.collection.immutable.Set[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Set.newBuilder[Int];
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e0(x: scala.collection.immutable.Set[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val setOfIntsCodec: JsonValueCodec[Set[Int]] = make[Set[Int]](CodecMakerConfig())
[info]                                                                         ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:64:78: Generated JSON codec for type 'Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonValueCodec[Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet]] {
[info]       def nullValue: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet];
[info]       def decodeValue(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet]): Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet] = d0(in, default);
[info]       def encodeValue(x: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet], out: JsonWriter): Unit = e0(x, out);
[info]       private[this] def d3(in: JsonReader, default: Seq[String]): Seq[String] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[String];
[info]             do 
[info]               x.+=(in.readString(null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d6(in: JsonReader, default: Seq[Int]): Seq[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[Int];
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d5(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions): com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions = if (in.isNextToken('{'))
[info]         {
[info]           var _screen_name: String = null;
[info]           var _name: String = null;
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _indices: Seq[Int] = Seq.empty[Int];
[info]           var p0 = 31;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -43264386 => if (in.isCharBufEqualsTo(l, "screen_name"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _screen_name = in.readString(_screen_name)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3373707 => if (in.isCharBufEqualsTo(l, "name"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _name = in.readString(_name)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3355 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1193609971 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id_str = in.readString(_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1943391143 => if (in.isCharBufEqualsTo(l, "indices"))
[info]                       {
[info]                         if (p0.&(16).!=(0))
[info]                           p0.^=(16)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _indices = d6(in, _indices)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(15).!=(0))
[info]             in.requiredFieldError(f1(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions(screen_name = _screen_name, name = _name, id = _id, id_str = _id_str, indices = _indices)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d4(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions]): Seq[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions];
[info]             do 
[info]               x.+=(d5(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d8(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Urls): com.github.plokhotnyuk.jsoniter_scala.macros.Urls = if (in.isNextToken('{'))
[info]         {
[info]           var _url: String = null;
[info]           var _expanded_url: String = null;
[info]           var _display_url: String = null;
[info]           var _indices: Seq[Int] = Seq.empty[Int];
[info]           var p0 = 15;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 116079 => if (in.isCharBufEqualsTo(l, "url"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _url = in.readString(_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -518939415 => if (in.isCharBufEqualsTo(l, "expanded_url"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _expanded_url = in.readString(_expanded_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1714674802 => if (in.isCharBufEqualsTo(l, "display_url"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _display_url = in.readString(_display_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1943391143 => if (in.isCharBufEqualsTo(l, "indices"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _indices = d6(in, _indices)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(7).!=(0))
[info]             in.requiredFieldError(f2(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Urls(url = _url, expanded_url = _expanded_url, display_url = _display_url, indices = _indices)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d7(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls]): Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.Urls];
[info]             do 
[info]               x.+=(d8(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def d2(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Entities): com.github.plokhotnyuk.jsoniter_scala.macros.Entities = if (in.isNextToken('{'))
[info]         {
[info]           var _hashtags: Seq[String] = Seq.empty[String];
[info]           var _symbols: Seq[String] = Seq.empty[String];
[info]           var _user_mentions: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions];
[info]           var _urls: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Urls];
[info]           var p0 = 15;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 149143079 => if (in.isCharBufEqualsTo(l, "hashtags"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _hashtags = d3(in, _hashtags)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1743438373 => if (in.isCharBufEqualsTo(l, "symbols"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _symbols = d3(in, _symbols)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -553518659 => if (in.isCharBufEqualsTo(l, "user_mentions"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _user_mentions = d4(in, _user_mentions)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3598564 => if (in.isCharBufEqualsTo(l, "urls"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _urls = d7(in, _urls)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Entities(hashtags = _hashtags, symbols = _symbols, user_mentions = _user_mentions, urls = _urls)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d9(in: JsonReader, default: Option[String]): Option[String] = if (in.isNextToken('n'))
[info]         in.readNullOrError(default, "expected value or null")
[info]       else
[info]         {
[info]           in.rollbackToken();
[info]           Some(in.readString(null))
[info]         };
[info]       private[this] def d12(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Url): com.github.plokhotnyuk.jsoniter_scala.macros.Url = if (in.isNextToken('{'))
[info]         {
[info]           var _urls: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Urls];
[info]           var p0 = 1;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 3598564 => if (in.isCharBufEqualsTo(l, "urls"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _urls = d7(in, _urls)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Url(urls = _urls)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d11(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities): com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities = if (in.isNextToken('{'))
[info]         {
[info]           var _url: com.github.plokhotnyuk.jsoniter_scala.macros.Url = null;
[info]           var _description: com.github.plokhotnyuk.jsoniter_scala.macros.Url = null;
[info]           var p0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 116079 => if (in.isCharBufEqualsTo(l, "url"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _url = d12(in, _url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1724546052 => if (in.isCharBufEqualsTo(l, "description"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _description = d12(in, _description)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(3).!=(0))
[info]             in.requiredFieldError(f4(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities(url = _url, description = _description)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d10(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.User): com.github.plokhotnyuk.jsoniter_scala.macros.User = if (in.isNextToken('{'))
[info]         {
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _name: String = null;
[info]           var _screen_name: String = null;
[info]           var _location: String = null;
[info]           var _description: String = null;
[info]           var _url: String = null;
[info]           var _entities: com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities = null;
[info]           var _protected: Boolean = false;
[info]           var _followers_count: Int = 0;
[info]           var _friends_count: Int = 0;
[info]           var _listed_count: Int = 0;
[info]           var _created_at: String = null;
[info]           var _favourites_count: Int = 0;
[info]           var _utc_offset: Int = 0;
[info]           var _time_zone: String = null;
[info]           var _geo_enabled: Boolean = false;
[info]           var _verified: Boolean = false;
[info]           var _statuses_count: Int = 0;
[info]           var _lang: String = null;
[info]           var _contributors_enabled: Boolean = false;
[info]           var _is_translator: Boolean = false;
[info]           var _is_translation_enabled: Boolean = false;
[info]           var _profile_background_color: String = null;
[info]           var _profile_background_image_url: String = null;
[info]           var _profile_background_image_url_https: String = null;
[info]           var _profile_background_tile: Boolean = false;
[info]           var _profile_image_url: String = null;
[info]           var _profile_image_url_https: String = null;
[info]           var _profile_banner_url: String = null;
[info]           var _profile_link_color: String = null;
[info]           var _profile_sidebar_border_color: String = null;
[info]           var _profile_sidebar_fill_color: String = null;
[info]           var _profile_text_color: String = null;
[info]           var _profile_use_background_image: Boolean = false;
[info]           var _has_extended_profile: Boolean = false;
[info]           var _default_profile: Boolean = false;
[info]           var _default_profile_image: Boolean = false;
[info]           var _following: Boolean = false;
[info]           var _follow_request_sent: Boolean = false;
[info]           var _notifications: Boolean = false;
[info]           var _translator_type: String = null;
[info]           var p0 = -1;
[info]           var p1 = 1023;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 3355 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1193609971 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id_str = in.readString(_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3373707 => if (in.isCharBufEqualsTo(l, "name"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _name = in.readString(_name)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -43264386 => if (in.isCharBufEqualsTo(l, "screen_name"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _screen_name = in.readString(_screen_name)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1901043637 => if (in.isCharBufEqualsTo(l, "location"))
[info]                       {
[info]                         if (p0.&(16).!=(0))
[info]                           p0.^=(16)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _location = in.readString(_location)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1724546052 => if (in.isCharBufEqualsTo(l, "description"))
[info]                       {
[info]                         if (p0.&(32).!=(0))
[info]                           p0.^=(32)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _description = in.readString(_description)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 116079 => if (in.isCharBufEqualsTo(l, "url"))
[info]                       {
[info]                         if (p0.&(64).!=(0))
[info]                           p0.^=(64)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _url = in.readString(_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -2102114367 => if (in.isCharBufEqualsTo(l, "entities"))
[info]                       {
[info]                         if (p0.&(128).!=(0))
[info]                           p0.^=(128)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _entities = d11(in, _entities)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -608539730 => if (in.isCharBufEqualsTo(l, "protected"))
[info]                       {
[info]                         if (p0.&(256).!=(0))
[info]                           p0.^=(256)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _protected = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -460163995 => if (in.isCharBufEqualsTo(l, "followers_count"))
[info]                       {
[info]                         if (p0.&(512).!=(0))
[info]                           p0.^=(512)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _followers_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1666926107 => if (in.isCharBufEqualsTo(l, "friends_count"))
[info]                       {
[info]                         if (p0.&(1024).!=(0))
[info]                           p0.^=(1024)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _friends_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1974943731 => if (in.isCharBufEqualsTo(l, "listed_count"))
[info]                       {
[info]                         if (p0.&(2048).!=(0))
[info]                           p0.^=(2048)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _listed_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1369680106 => if (in.isCharBufEqualsTo(l, "created_at"))
[info]                       {
[info]                         if (p0.&(4096).!=(0))
[info]                           p0.^=(4096)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _created_at = in.readString(_created_at)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 226316666 => if (in.isCharBufEqualsTo(l, "favourites_count"))
[info]                       {
[info]                         if (p0.&(8192).!=(0))
[info]                           p0.^=(8192)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _favourites_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1699658638 => if (in.isCharBufEqualsTo(l, "utc_offset"))
[info]                       {
[info]                         if (p0.&(16384).!=(0))
[info]                           p0.^=(16384)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _utc_offset = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 36848094 => if (in.isCharBufEqualsTo(l, "time_zone"))
[info]                       {
[info]                         if (p0.&(32768).!=(0))
[info]                           p0.^=(32768)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _time_zone = in.readString(_time_zone)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1085743021 => if (in.isCharBufEqualsTo(l, "geo_enabled"))
[info]                       {
[info]                         if (p0.&(65536).!=(0))
[info]                           p0.^=(65536)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _geo_enabled = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1994383672 => if (in.isCharBufEqualsTo(l, "verified"))
[info]                       {
[info]                         if (p0.&(131072).!=(0))
[info]                           p0.^=(131072)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _verified = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1824078800 => if (in.isCharBufEqualsTo(l, "statuses_count"))
[info]                       {
[info]                         if (p0.&(262144).!=(0))
[info]                           p0.^=(262144)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _statuses_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3314158 => if (in.isCharBufEqualsTo(l, "lang"))
[info]                       {
[info]                         if (p0.&(524288).!=(0))
[info]                           p0.^=(524288)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _lang = in.readString(_lang)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 647263482 => if (in.isCharBufEqualsTo(l, "contributors_enabled"))
[info]                       {
[info]                         if (p0.&(1048576).!=(0))
[info]                           p0.^=(1048576)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _contributors_enabled = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 583435343 => if (in.isCharBufEqualsTo(l, "is_translator"))
[info]                       {
[info]                         if (p0.&(2097152).!=(0))
[info]                           p0.^=(2097152)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _is_translator = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1690715422 => if (in.isCharBufEqualsTo(l, "is_translation_enabled"))
[info]                       {
[info]                         if (p0.&(4194304).!=(0))
[info]                           p0.^=(4194304)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _is_translation_enabled = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1592986856 => if (in.isCharBufEqualsTo(l, "profile_background_color"))
[info]                       {
[info]                         if (p0.&(8388608).!=(0))
[info]                           p0.^=(8388608)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_background_color = in.readString(_profile_background_color)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1189803120 => if (in.isCharBufEqualsTo(l, "profile_background_image_url"))
[info]                       {
[info]                         if (p0.&(16777216).!=(0))
[info]                           p0.^=(16777216)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_background_image_url = in.readString(_profile_background_image_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 594447228 => if (in.isCharBufEqualsTo(l, "profile_background_image_url_https"))
[info]                       {
[info]                         if (p0.&(33554432).!=(0))
[info]                           p0.^=(33554432)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_background_image_url_https = in.readString(_profile_background_image_url_https)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1021718665 => if (in.isCharBufEqualsTo(l, "profile_background_tile"))
[info]                       {
[info]                         if (p0.&(67108864).!=(0))
[info]                           p0.^=(67108864)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_background_tile = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -174080651 => if (in.isCharBufEqualsTo(l, "profile_image_url"))
[info]                       {
[info]                         if (p0.&(134217728).!=(0))
[info]                           p0.^=(134217728)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_image_url = in.readString(_profile_image_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -782008927 => if (in.isCharBufEqualsTo(l, "profile_image_url_https"))
[info]                       {
[info]                         if (p0.&(268435456).!=(0))
[info]                           p0.^=(268435456)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_image_url_https = in.readString(_profile_image_url_https)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -690137550 => if (in.isCharBufEqualsTo(l, "profile_banner_url"))
[info]                       {
[info]                         if (p0.&(536870912).!=(0))
[info]                           p0.^=(536870912)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_banner_url = in.readString(_profile_banner_url)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1512257332 => if (in.isCharBufEqualsTo(l, "profile_link_color"))
[info]                       {
[info]                         if (p0.&(1073741824).!=(0))
[info]                           p0.^=(1073741824)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_link_color = in.readString(_profile_link_color)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1412739479 => if (in.isCharBufEqualsTo(l, "profile_sidebar_border_color"))
[info]                       {
[info]                         if (p0.&(-2147483648).!=(0))
[info]                           p0.^=(-2147483648)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_sidebar_border_color = in.readString(_profile_sidebar_border_color)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 486184128 => if (in.isCharBufEqualsTo(l, "profile_sidebar_fill_color"))
[info]                       {
[info]                         if (p1.&(1).!=(0))
[info]                           p1.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_sidebar_fill_color = in.readString(_profile_sidebar_fill_color)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1774134745 => if (in.isCharBufEqualsTo(l, "profile_text_color"))
[info]                       {
[info]                         if (p1.&(2).!=(0))
[info]                           p1.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_text_color = in.readString(_profile_text_color)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -101767272 => if (in.isCharBufEqualsTo(l, "profile_use_background_image"))
[info]                       {
[info]                         if (p1.&(4).!=(0))
[info]                           p1.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _profile_use_background_image = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 284519336 => if (in.isCharBufEqualsTo(l, "has_extended_profile"))
[info]                       {
[info]                         if (p1.&(8).!=(0))
[info]                           p1.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _has_extended_profile = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -312724053 => if (in.isCharBufEqualsTo(l, "default_profile"))
[info]                       {
[info]                         if (p1.&(16).!=(0))
[info]                           p1.^=(16)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _default_profile = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 545330631 => if (in.isCharBufEqualsTo(l, "default_profile_image"))
[info]                       {
[info]                         if (p1.&(32).!=(0))
[info]                           p1.^=(32)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _default_profile_image = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 765915793 => if (in.isCharBufEqualsTo(l, "following"))
[info]                       {
[info]                         if (p1.&(64).!=(0))
[info]                           p1.^=(64)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _following = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 585125142 => if (in.isCharBufEqualsTo(l, "follow_request_sent"))
[info]                       {
[info]                         if (p1.&(128).!=(0))
[info]                           p1.^=(128)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _follow_request_sent = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1272354024 => if (in.isCharBufEqualsTo(l, "notifications"))
[info]                       {
[info]                         if (p1.&(256).!=(0))
[info]                           p1.^=(256)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _notifications = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -475640257 => if (in.isCharBufEqualsTo(l, "translator_type"))
[info]                       {
[info]                         if (p1.&(512).!=(0))
[info]                           p1.^=(512)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _translator_type = in.readString(_translator_type)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(-1).!=(0))
[info]             in.requiredFieldError(f3(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           if (p1.&(1023).!=(0))
[info]             in.requiredFieldError(f3(Integer.numberOfTrailingZeros(p1).+(32)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.User(id = _id, id_str = _id_str, name = _name, screen_name = _screen_name, location = _location, description = _description, url = _url, entities = _entities, `protected` = _protected, followers_count = _followers_count, friends_count = _friends_count, listed_count = _listed_count, created_at = _created_at, favourites_count = _favourites_count, utc_offset = _utc_offset, time_zone = _time_zone, geo_enabled = _geo_enabled, verified = _verified, statuses_count = _statuses_count, lang = _lang, contributors_enabled = _contributors_enabled, is_translator = _is_translator, is_translation_enabled = _is_translation_enabled, profile_background_color = _profile_background_color, profile_background_image_url = _profile_background_image_url, profile_background_image_url_https = _profile_background_image_url_https, profile_background_tile = _profile_background_tile, profile_image_url = _profile_image_url, profile_image_url_https = _profile_image_url_https, profile_banner_url = _profile_banner_url, profile_link_color = _profile_link_color, profile_sidebar_border_color = _profile_sidebar_border_color, profile_sidebar_fill_color = _profile_sidebar_fill_color, profile_text_color = _profile_text_color, profile_use_background_image = _profile_use_background_image, has_extended_profile = _has_extended_profile, default_profile = _default_profile, default_profile_image = _default_profile_image, following = _following, follow_request_sent = _follow_request_sent, notifications = _notifications, translator_type = _translator_type)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d13(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus): com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus = if (in.isNextToken('{'))
[info]         {
[info]           var _created_at: String = null;
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _text: String = null;
[info]           var _truncated: Boolean = false;
[info]           var _entities: com.github.plokhotnyuk.jsoniter_scala.macros.Entities = null;
[info]           var _source: String = null;
[info]           var _in_reply_to_status_id: Option[String] = None;
[info]           var _in_reply_to_status_id_str: Option[String] = None;
[info]           var _in_reply_to_user_id: Option[String] = None;
[info]           var _in_reply_to_user_id_str: Option[String] = None;
[info]           var _in_reply_to_screen_name: Option[String] = None;
[info]           var _user: com.github.plokhotnyuk.jsoniter_scala.macros.User = null;
[info]           var _geo: Option[String] = None;
[info]           var _coordinates: Option[String] = None;
[info]           var _place: Option[String] = None;
[info]           var _contributors: Option[String] = None;
[info]           var _is_quote_status: Boolean = false;
[info]           var _retweet_count: Int = 0;
[info]           var _favorite_count: Int = 0;
[info]           var _favorited: Boolean = false;
[info]           var _retweeted: Boolean = false;
[info]           var _possibly_sensitive: Boolean = false;
[info]           var _lang: String = null;
[info]           var p0 = 16777215;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1369680106 => if (in.isCharBufEqualsTo(l, "created_at"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _created_at = in.readString(_created_at)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3355 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1193609971 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id_str = in.readString(_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3556653 => if (in.isCharBufEqualsTo(l, "text"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _text = in.readString(_text)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1607950270 => if (in.isCharBufEqualsTo(l, "truncated"))
[info]                       {
[info]                         if (p0.&(16).!=(0))
[info]                           p0.^=(16)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _truncated = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -2102114367 => if (in.isCharBufEqualsTo(l, "entities"))
[info]                       {
[info]                         if (p0.&(32).!=(0))
[info]                           p0.^=(32)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _entities = d2(in, _entities)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -896505829 => if (in.isCharBufEqualsTo(l, "source"))
[info]                       {
[info]                         if (p0.&(64).!=(0))
[info]                           p0.^=(64)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _source = in.readString(_source)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1960224851 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id"))
[info]                       {
[info]                         if (p0.&(128).!=(0))
[info]                           p0.^=(128)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_status_id = d9(in, _in_reply_to_status_id)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1577137221 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id_str"))
[info]                       {
[info]                         if (p0.&(256).!=(0))
[info]                           p0.^=(256)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_status_id_str = d9(in, _in_reply_to_status_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 2047002778 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id"))
[info]                       {
[info]                         if (p0.&(512).!=(0))
[info]                           p0.^=(512)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_user_id = d9(in, _in_reply_to_user_id)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1274685172 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id_str"))
[info]                       {
[info]                         if (p0.&(1024).!=(0))
[info]                           p0.^=(1024)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_user_id_str = d9(in, _in_reply_to_user_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -866290807 => if (in.isCharBufEqualsTo(l, "in_reply_to_screen_name"))
[info]                       {
[info]                         if (p0.&(2048).!=(0))
[info]                           p0.^=(2048)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_screen_name = d9(in, _in_reply_to_screen_name)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3599307 => if (in.isCharBufEqualsTo(l, "user"))
[info]                       {
[info]                         if (p0.&(4096).!=(0))
[info]                           p0.^=(4096)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _user = d10(in, _user)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 102225 => if (in.isCharBufEqualsTo(l, "geo"))
[info]                       {
[info]                         if (p0.&(8192).!=(0))
[info]                           p0.^=(8192)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _geo = d9(in, _geo)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(16384).!=(0))
[info]                           p0.^=(16384)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d9(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 106748167 => if (in.isCharBufEqualsTo(l, "place"))
[info]                       {
[info]                         if (p0.&(32768).!=(0))
[info]                           p0.^=(32768)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _place = d9(in, _place)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1375976184 => if (in.isCharBufEqualsTo(l, "contributors"))
[info]                       {
[info]                         if (p0.&(65536).!=(0))
[info]                           p0.^=(65536)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _contributors = d9(in, _contributors)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -920773622 => if (in.isCharBufEqualsTo(l, "is_quote_status"))
[info]                       {
[info]                         if (p0.&(131072).!=(0))
[info]                           p0.^=(131072)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _is_quote_status = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1612760494 => if (in.isCharBufEqualsTo(l, "retweet_count"))
[info]                       {
[info]                         if (p0.&(262144).!=(0))
[info]                           p0.^=(262144)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _retweet_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1435051860 => if (in.isCharBufEqualsTo(l, "favorite_count"))
[info]                       {
[info]                         if (p0.&(524288).!=(0))
[info]                           p0.^=(524288)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _favorite_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1785238968 => if (in.isCharBufEqualsTo(l, "favorited"))
[info]                       {
[info]                         if (p0.&(1048576).!=(0))
[info]                           p0.^=(1048576)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _favorited = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -881681091 => if (in.isCharBufEqualsTo(l, "retweeted"))
[info]                       {
[info]                         if (p0.&(2097152).!=(0))
[info]                           p0.^=(2097152)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _retweeted = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -4566948 => if (in.isCharBufEqualsTo(l, "possibly_sensitive"))
[info]                       {
[info]                         if (p0.&(4194304).!=(0))
[info]                           p0.^=(4194304)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _possibly_sensitive = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3314158 => if (in.isCharBufEqualsTo(l, "lang"))
[info]                       {
[info]                         if (p0.&(8388608).!=(0))
[info]                           p0.^=(8388608)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _lang = in.readString(_lang)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(16650367).!=(0))
[info]             in.requiredFieldError(f5(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus(created_at = _created_at, id = _id, id_str = _id_str, text = _text, truncated = _truncated, entities = _entities, source = _source, in_reply_to_status_id = _in_reply_to_status_id, in_reply_to_status_id_str = _in_reply_to_status_id_str, in_reply_to_user_id = _in_reply_to_user_id, in_reply_to_user_id_str = _in_reply_to_user_id_str, in_reply_to_screen_name = _in_reply_to_screen_name, user = _user, geo = _geo, coordinates = _coordinates, place = _place, contributors = _contributors, is_quote_status = _is_quote_status, retweet_count = _retweet_count, favorite_count = _favorite_count, favorited = _favorited, retweeted = _retweeted, possibly_sensitive = _possibly_sensitive, lang = _lang)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d1(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Tweet): com.github.plokhotnyuk.jsoniter_scala.macros.Tweet = if (in.isNextToken('{'))
[info]         {
[info]           var _created_at: String = null;
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _text: String = null;
[info]           var _truncated: Boolean = false;
[info]           var _entities: com.github.plokhotnyuk.jsoniter_scala.macros.Entities = null;
[info]           var _source: String = null;
[info]           var _in_reply_to_status_id: Option[String] = None;
[info]           var _in_reply_to_status_id_str: Option[String] = None;
[info]           var _in_reply_to_user_id: Option[String] = None;
[info]           var _in_reply_to_user_id_str: Option[String] = None;
[info]           var _in_reply_to_screen_name: Option[String] = None;
[info]           var _user: com.github.plokhotnyuk.jsoniter_scala.macros.User = null;
[info]           var _geo: Option[String] = None;
[info]           var _coordinates: Option[String] = None;
[info]           var _place: Option[String] = None;
[info]           var _contributors: Option[String] = None;
[info]           var _retweeted_status: com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus = null;
[info]           var _is_quote_status: Boolean = false;
[info]           var _retweet_count: Int = 0;
[info]           var _favorite_count: Int = 0;
[info]           var _favorited: Boolean = false;
[info]           var _retweeted: Boolean = false;
[info]           var _possibly_sensitive: Boolean = false;
[info]           var _lang: String = null;
[info]           var p0 = 33554431;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1369680106 => if (in.isCharBufEqualsTo(l, "created_at"))
[info]                       {
[info]                         if (p0.&(1).!=(0))
[info]                           p0.^=(1)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _created_at = in.readString(_created_at)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3355 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         if (p0.&(2).!=(0))
[info]                           p0.^=(2)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1193609971 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         if (p0.&(4).!=(0))
[info]                           p0.^=(4)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _id_str = in.readString(_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3556653 => if (in.isCharBufEqualsTo(l, "text"))
[info]                       {
[info]                         if (p0.&(8).!=(0))
[info]                           p0.^=(8)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _text = in.readString(_text)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1607950270 => if (in.isCharBufEqualsTo(l, "truncated"))
[info]                       {
[info]                         if (p0.&(16).!=(0))
[info]                           p0.^=(16)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _truncated = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -2102114367 => if (in.isCharBufEqualsTo(l, "entities"))
[info]                       {
[info]                         if (p0.&(32).!=(0))
[info]                           p0.^=(32)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _entities = d2(in, _entities)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -896505829 => if (in.isCharBufEqualsTo(l, "source"))
[info]                       {
[info]                         if (p0.&(64).!=(0))
[info]                           p0.^=(64)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _source = in.readString(_source)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1960224851 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id"))
[info]                       {
[info]                         if (p0.&(128).!=(0))
[info]                           p0.^=(128)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_status_id = d9(in, _in_reply_to_status_id)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1577137221 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id_str"))
[info]                       {
[info]                         if (p0.&(256).!=(0))
[info]                           p0.^=(256)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_status_id_str = d9(in, _in_reply_to_status_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 2047002778 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id"))
[info]                       {
[info]                         if (p0.&(512).!=(0))
[info]                           p0.^=(512)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_user_id = d9(in, _in_reply_to_user_id)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1274685172 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id_str"))
[info]                       {
[info]                         if (p0.&(1024).!=(0))
[info]                           p0.^=(1024)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_user_id_str = d9(in, _in_reply_to_user_id_str)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -866290807 => if (in.isCharBufEqualsTo(l, "in_reply_to_screen_name"))
[info]                       {
[info]                         if (p0.&(2048).!=(0))
[info]                           p0.^=(2048)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _in_reply_to_screen_name = d9(in, _in_reply_to_screen_name)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3599307 => if (in.isCharBufEqualsTo(l, "user"))
[info]                       {
[info]                         if (p0.&(4096).!=(0))
[info]                           p0.^=(4096)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _user = d10(in, _user)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 102225 => if (in.isCharBufEqualsTo(l, "geo"))
[info]                       {
[info]                         if (p0.&(8192).!=(0))
[info]                           p0.^=(8192)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _geo = d9(in, _geo)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       {
[info]                         if (p0.&(16384).!=(0))
[info]                           p0.^=(16384)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _coordinates = d9(in, _coordinates)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 106748167 => if (in.isCharBufEqualsTo(l, "place"))
[info]                       {
[info]                         if (p0.&(32768).!=(0))
[info]                           p0.^=(32768)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _place = d9(in, _place)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1375976184 => if (in.isCharBufEqualsTo(l, "contributors"))
[info]                       {
[info]                         if (p0.&(65536).!=(0))
[info]                           p0.^=(65536)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _contributors = d9(in, _contributors)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 364396852 => if (in.isCharBufEqualsTo(l, "retweeted_status"))
[info]                       {
[info]                         if (p0.&(131072).!=(0))
[info]                           p0.^=(131072)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _retweeted_status = d13(in, _retweeted_status)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -920773622 => if (in.isCharBufEqualsTo(l, "is_quote_status"))
[info]                       {
[info]                         if (p0.&(262144).!=(0))
[info]                           p0.^=(262144)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _is_quote_status = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1612760494 => if (in.isCharBufEqualsTo(l, "retweet_count"))
[info]                       {
[info]                         if (p0.&(524288).!=(0))
[info]                           p0.^=(524288)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _retweet_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1435051860 => if (in.isCharBufEqualsTo(l, "favorite_count"))
[info]                       {
[info]                         if (p0.&(1048576).!=(0))
[info]                           p0.^=(1048576)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _favorite_count = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1785238968 => if (in.isCharBufEqualsTo(l, "favorited"))
[info]                       {
[info]                         if (p0.&(2097152).!=(0))
[info]                           p0.^=(2097152)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _favorited = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -881681091 => if (in.isCharBufEqualsTo(l, "retweeted"))
[info]                       {
[info]                         if (p0.&(4194304).!=(0))
[info]                           p0.^=(4194304)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _retweeted = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -4566948 => if (in.isCharBufEqualsTo(l, "possibly_sensitive"))
[info]                       {
[info]                         if (p0.&(8388608).!=(0))
[info]                           p0.^=(8388608)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _possibly_sensitive = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3314158 => if (in.isCharBufEqualsTo(l, "lang"))
[info]                       {
[info]                         if (p0.&(16777216).!=(0))
[info]                           p0.^=(16777216)
[info]                         else
[info]                           in.duplicatedKeyError(l);
[info]                         _lang = in.readString(_lang)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndOrCommaError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (p0.&(33427583).!=(0))
[info]             in.requiredFieldError(f0(Integer.numberOfTrailingZeros(p0)))
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Tweet(created_at = _created_at, id = _id, id_str = _id_str, text = _text, truncated = _truncated, entities = _entities, source = _source, in_reply_to_status_id = _in_reply_to_status_id, in_reply_to_status_id_str = _in_reply_to_status_id_str, in_reply_to_user_id = _in_reply_to_user_id, in_reply_to_user_id_str = _in_reply_to_user_id_str, in_reply_to_screen_name = _in_reply_to_screen_name, user = _user, geo = _geo, coordinates = _coordinates, place = _place, contributors = _contributors, retweeted_status = _retweeted_status, is_quote_status = _is_quote_status, retweet_count = _retweet_count, favorite_count = _favorite_count, favorited = _favorited, retweeted = _retweeted, possibly_sensitive = _possibly_sensitive, lang = _lang)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private[this] def d0(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet]): Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet];
[info]             do 
[info]               x.+=(d1(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndOrCommaError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private[this] def e3(x: Seq[String], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e6(x: Seq[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e5(x: com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("screen_name");
[info]           out.writeVal(x.screen_name)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("name");
[info]           out.writeVal(x.name)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id");
[info]           out.writeVal(x.id)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id_str");
[info]           out.writeVal(x.id_str)
[info]         };
[info]         {
[info]           val v = x.indices;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("indices");
[info]               e6(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e4(x: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           e5(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e8(x: com.github.plokhotnyuk.jsoniter_scala.macros.Urls, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("url");
[info]           out.writeVal(x.url)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("expanded_url");
[info]           out.writeVal(x.expanded_url)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("display_url");
[info]           out.writeVal(x.display_url)
[info]         };
[info]         {
[info]           val v = x.indices;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("indices");
[info]               e6(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e7(x: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           e8(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def e2(x: com.github.plokhotnyuk.jsoniter_scala.macros.Entities, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           val v = x.hashtags;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("hashtags");
[info]               e3(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.symbols;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("symbols");
[info]               e3(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.user_mentions;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("user_mentions");
[info]               e4(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.urls;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("urls");
[info]               e7(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e11(x: com.github.plokhotnyuk.jsoniter_scala.macros.Url, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           val v = x.urls;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("urls");
[info]               e7(v, out)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e10(x: com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("url");
[info]           e11(x.url, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("description");
[info]           e11(x.description, out)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e9(x: com.github.plokhotnyuk.jsoniter_scala.macros.User, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("id");
[info]           out.writeVal(x.id)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id_str");
[info]           out.writeVal(x.id_str)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("name");
[info]           out.writeVal(x.name)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("screen_name");
[info]           out.writeVal(x.screen_name)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("location");
[info]           out.writeVal(x.location)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("description");
[info]           out.writeVal(x.description)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("url");
[info]           out.writeVal(x.url)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("entities");
[info]           e10(x.entities, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("protected");
[info]           out.writeVal(x.`protected`)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("followers_count");
[info]           out.writeVal(x.followers_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("friends_count");
[info]           out.writeVal(x.friends_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("listed_count");
[info]           out.writeVal(x.listed_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("created_at");
[info]           out.writeVal(x.created_at)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("favourites_count");
[info]           out.writeVal(x.favourites_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("utc_offset");
[info]           out.writeVal(x.utc_offset)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("time_zone");
[info]           out.writeVal(x.time_zone)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("geo_enabled");
[info]           out.writeVal(x.geo_enabled)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("verified");
[info]           out.writeVal(x.verified)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("statuses_count");
[info]           out.writeVal(x.statuses_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("lang");
[info]           out.writeVal(x.lang)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("contributors_enabled");
[info]           out.writeVal(x.contributors_enabled)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("is_translator");
[info]           out.writeVal(x.is_translator)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("is_translation_enabled");
[info]           out.writeVal(x.is_translation_enabled)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_background_color");
[info]           out.writeVal(x.profile_background_color)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_background_image_url");
[info]           out.writeVal(x.profile_background_image_url)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_background_image_url_https");
[info]           out.writeVal(x.profile_background_image_url_https)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_background_tile");
[info]           out.writeVal(x.profile_background_tile)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_image_url");
[info]           out.writeVal(x.profile_image_url)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_image_url_https");
[info]           out.writeVal(x.profile_image_url_https)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_banner_url");
[info]           out.writeVal(x.profile_banner_url)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_link_color");
[info]           out.writeVal(x.profile_link_color)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_sidebar_border_color");
[info]           out.writeVal(x.profile_sidebar_border_color)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_sidebar_fill_color");
[info]           out.writeVal(x.profile_sidebar_fill_color)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_text_color");
[info]           out.writeVal(x.profile_text_color)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("profile_use_background_image");
[info]           out.writeVal(x.profile_use_background_image)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("has_extended_profile");
[info]           out.writeVal(x.has_extended_profile)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("default_profile");
[info]           out.writeVal(x.default_profile)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("default_profile_image");
[info]           out.writeVal(x.default_profile_image)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("following");
[info]           out.writeVal(x.following)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("follow_request_sent");
[info]           out.writeVal(x.follow_request_sent)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("notifications");
[info]           out.writeVal(x.notifications)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("translator_type");
[info]           out.writeVal(x.translator_type)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e12(x: com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("created_at");
[info]           out.writeVal(x.created_at)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id");
[info]           out.writeVal(x.id)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id_str");
[info]           out.writeVal(x.id_str)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("text");
[info]           out.writeVal(x.text)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("truncated");
[info]           out.writeVal(x.truncated)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("entities");
[info]           e2(x.entities, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("source");
[info]           out.writeVal(x.source)
[info]         };
[info]         {
[info]           val v = x.in_reply_to_status_id;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_status_id");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_status_id_str;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_status_id_str");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_user_id;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_user_id");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_user_id_str;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_user_id_str");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_screen_name;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_screen_name");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("user");
[info]           e9(x.user, out)
[info]         };
[info]         {
[info]           val v = x.geo;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("geo");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.place;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("place");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.contributors;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("contributors");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("is_quote_status");
[info]           out.writeVal(x.is_quote_status)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("retweet_count");
[info]           out.writeVal(x.retweet_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("favorite_count");
[info]           out.writeVal(x.favorite_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("favorited");
[info]           out.writeVal(x.favorited)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("retweeted");
[info]           out.writeVal(x.retweeted)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("possibly_sensitive");
[info]           out.writeVal(x.possibly_sensitive)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("lang");
[info]           out.writeVal(x.lang)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e1(x: com.github.plokhotnyuk.jsoniter_scala.macros.Tweet, out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         {
[info]           out.writeNonEscapedAsciiKey("created_at");
[info]           out.writeVal(x.created_at)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id");
[info]           out.writeVal(x.id)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("id_str");
[info]           out.writeVal(x.id_str)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("text");
[info]           out.writeVal(x.text)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("truncated");
[info]           out.writeVal(x.truncated)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("entities");
[info]           e2(x.entities, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("source");
[info]           out.writeVal(x.source)
[info]         };
[info]         {
[info]           val v = x.in_reply_to_status_id;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_status_id");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_status_id_str;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_status_id_str");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_user_id;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_user_id");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_user_id_str;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_user_id_str");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.in_reply_to_screen_name;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("in_reply_to_screen_name");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("user");
[info]           e9(x.user, out)
[info]         };
[info]         {
[info]           val v = x.geo;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("geo");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.coordinates;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("coordinates");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.place;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("place");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           val v = x.contributors;
[info]           if (v.isEmpty.`unary_!`)
[info]             {
[info]               out.writeNonEscapedAsciiKey("contributors");
[info]               out.writeVal(v.get)
[info]             }
[info]           else
[info]             ()
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("retweeted_status");
[info]           e12(x.retweeted_status, out)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("is_quote_status");
[info]           out.writeVal(x.is_quote_status)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("retweet_count");
[info]           out.writeVal(x.retweet_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("favorite_count");
[info]           out.writeVal(x.favorite_count)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("favorited");
[info]           out.writeVal(x.favorited)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("retweeted");
[info]           out.writeVal(x.retweeted)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("possibly_sensitive");
[info]           out.writeVal(x.possibly_sensitive)
[info]         };
[info]         {
[info]           out.writeNonEscapedAsciiKey("lang");
[info]           out.writeVal(x.lang)
[info]         };
[info]         out.writeObjectEnd()
[info]       };
[info]       private[this] def e0(x: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           e1(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private[this] def f0(i: Int): String = (i: @switch) match {
[info]         case 0 => "created_at"
[info]         case 1 => "id"
[info]         case 2 => "id_str"
[info]         case 3 => "text"
[info]         case 4 => "truncated"
[info]         case 5 => "entities"
[info]         case 6 => "source"
[info]         case 7 => "in_reply_to_status_id"
[info]         case 8 => "in_reply_to_status_id_str"
[info]         case 9 => "in_reply_to_user_id"
[info]         case 10 => "in_reply_to_user_id_str"
[info]         case 11 => "in_reply_to_screen_name"
[info]         case 12 => "user"
[info]         case 13 => "geo"
[info]         case 14 => "coordinates"
[info]         case 15 => "place"
[info]         case 16 => "contributors"
[info]         case 17 => "retweeted_status"
[info]         case 18 => "is_quote_status"
[info]         case 19 => "retweet_count"
[info]         case 20 => "favorite_count"
[info]         case 21 => "favorited"
[info]         case 22 => "retweeted"
[info]         case 23 => "possibly_sensitive"
[info]         case 24 => "lang"
[info]       };
[info]       private[this] def f1(i: Int): String = (i: @switch) match {
[info]         case 0 => "screen_name"
[info]         case 1 => "name"
[info]         case 2 => "id"
[info]         case 3 => "id_str"
[info]         case 4 => "indices"
[info]       };
[info]       private[this] def f2(i: Int): String = (i: @switch) match {
[info]         case 0 => "url"
[info]         case 1 => "expanded_url"
[info]         case 2 => "display_url"
[info]         case 3 => "indices"
[info]       };
[info]       private[this] def f3(i: Int): String = (i: @switch) match {
[info]         case 0 => "id"
[info]         case 1 => "id_str"
[info]         case 2 => "name"
[info]         case 3 => "screen_name"
[info]         case 4 => "location"
[info]         case 5 => "description"
[info]         case 6 => "url"
[info]         case 7 => "entities"
[info]         case 8 => "protected"
[info]         case 9 => "followers_count"
[info]         case 10 => "friends_count"
[info]         case 11 => "listed_count"
[info]         case 12 => "created_at"
[info]         case 13 => "favourites_count"
[info]         case 14 => "utc_offset"
[info]         case 15 => "time_zone"
[info]         case 16 => "geo_enabled"
[info]         case 17 => "verified"
[info]         case 18 => "statuses_count"
[info]         case 19 => "lang"
[info]         case 20 => "contributors_enabled"
[info]         case 21 => "is_translator"
[info]         case 22 => "is_translation_enabled"
[info]         case 23 => "profile_background_color"
[info]         case 24 => "profile_background_image_url"
[info]         case 25 => "profile_background_image_url_https"
[info]         case 26 => "profile_background_tile"
[info]         case 27 => "profile_image_url"
[info]         case 28 => "profile_image_url_https"
[info]         case 29 => "profile_banner_url"
[info]         case 30 => "profile_link_color"
[info]         case 31 => "profile_sidebar_border_color"
[info]         case 32 => "profile_sidebar_fill_color"
[info]         case 33 => "profile_text_color"
[info]         case 34 => "profile_use_background_image"
[info]         case 35 => "has_extended_profile"
[info]         case 36 => "default_profile"
[info]         case 37 => "default_profile_image"
[info]         case 38 => "following"
[info]         case 39 => "follow_request_sent"
[info]         case 40 => "notifications"
[info]         case 41 => "translator_type"
[info]       };
[info]       private[this] def f4(i: Int): String = (i: @switch) match {
[info]         case 0 => "url"
[info]         case 1 => "description"
[info]       };
[info]       private[this] def f5(i: Int): String = (i: @switch) match {
[info]         case 0 => "created_at"
[info]         case 1 => "id"
[info]         case 2 => "id_str"
[info]         case 3 => "text"
[info]         case 4 => "truncated"
[info]         case 5 => "entities"
[info]         case 6 => "source"
[info]         case 7 => "in_reply_to_status_id"
[info]         case 8 => "in_reply_to_status_id_str"
[info]         case 9 => "in_reply_to_user_id"
[info]         case 10 => "in_reply_to_user_id_str"
[info]         case 11 => "in_reply_to_screen_name"
[info]         case 12 => "user"
[info]         case 13 => "geo"
[info]         case 14 => "coordinates"
[info]         case 15 => "place"
[info]         case 16 => "contributors"
[info]         case 17 => "is_quote_status"
[info]         case 18 => "retweet_count"
[info]         case 19 => "favorite_count"
[info]         case 20 => "favorited"
[info]         case 21 => "retweeted"
[info]         case 22 => "possibly_sensitive"
[info]         case 23 => "lang"
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   implicit val twitterAPICodec: JsonValueCodec[Seq[Tweet]] = make[Seq[Tweet]](CodecMakerConfig())
[info]                                                                              ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:36:18: local val v1 in value primitivesFormat is never used
[warn]     implicit val v1: Format[Char] = Format(
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:43:23: local val v1 in value adtFormat is never used
[warn]     implicit lazy val v1: OFormat[A] = Json.format[A]
[warn]                       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:44:23: local val v2 in value adtFormat is never used
[warn]     implicit lazy val v2: OFormat[B] = Json.format[B]
[warn]                       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:45:23: local val v3 in value adtFormat is never used
[warn]     implicit lazy val v3: OFormat[C] = Json.format[C]
[warn]                       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:50:18: local val v1 in value googleMapsAPIFormat is never used
[warn]     implicit val v1: OFormat[Value] = Json.format[Value]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:51:18: local val v2 in value googleMapsAPIFormat is never used
[warn]     implicit val v2: OFormat[Elements] = Json.format[Elements]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:52:18: local val v3 in value googleMapsAPIFormat is never used
[warn]     implicit val v3: OFormat[Rows] = Json.format[Rows]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:56:18: local val v1 in value twitterAPIFormat is never used
[warn]     implicit val v1: OFormat[Urls] = Json.format[Urls]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:57:18: local val v2 in value twitterAPIFormat is never used
[warn]     implicit val v2: OFormat[Url] = Json.format[Url]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:58:18: local val v3 in value twitterAPIFormat is never used
[warn]     implicit val v3: OFormat[UserEntities] = Json.format[UserEntities]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:59:18: local val v4 in value twitterAPIFormat is never used
[warn]     implicit val v4: OFormat[UserMentions] = Json.format[UserMentions]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:60:18: local val v5 in value twitterAPIFormat is never used
[warn]     implicit val v5: OFormat[Entities] = Json.format[Entities]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:61:18: local val v6 in value twitterAPIFormat is never used
[warn]     implicit val v6: Format[User] = Jsonx.formatCaseClass[User]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:62:18: local val v7 in value twitterAPIFormat is never used
[warn]     implicit val v7: Format[RetweetedStatus] = Jsonx.formatCaseClass[RetweetedStatus]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:10:79: dead code following this construct
[warn]   implicit val adtReaderWriter: ReadWriter[AdtBase] = ReadWriter.merge(macroRW[A], macroRW[B], macroRW[C])
[warn]                                                                               ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:10:91: dead code following this construct
[warn]   implicit val adtReaderWriter: ReadWriter[AdtBase] = ReadWriter.merge(macroRW[A], macroRW[B], macroRW[C])
[warn]                                                                                           ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:10:103: dead code following this construct
[warn]   implicit val adtReaderWriter: ReadWriter[AdtBase] = ReadWriter.merge(macroRW[A], macroRW[B], macroRW[C])
[warn]                                                                                                       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:11:66: dead code following this construct
[warn]   implicit val anyRefsReaderWriter: ReadWriter[AnyRefs] = macroRW[AnyRefs]
[warn]                                                                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:12:78: dead code following this construct
[warn]   implicit val extractFieldsReaderWriter: ReadWriter[ExtractFields] = macroRW[ExtractFields]
[warn]                                                                              ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:17:54: dead code following this construct
[warn]     implicit lazy val v1: ReadWriter[Point] = macroRW[Point]
[warn]                                                      ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:18:59: dead code following this construct
[warn]     implicit lazy val v2: ReadWriter[MultiPoint] = macroRW[MultiPoint]
[warn]                                                           ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:19:59: dead code following this construct
[warn]     implicit lazy val v3: ReadWriter[LineString] = macroRW[LineString]
[warn]                                                           ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:20:64: dead code following this construct
[warn]     implicit lazy val v4: ReadWriter[MultiLineString] = macroRW[MultiLineString]
[warn]                                                                ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:21:56: dead code following this construct
[warn]     implicit lazy val v5: ReadWriter[Polygon] = macroRW[Polygon]
[warn]                                                        ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:22:61: dead code following this construct
[warn]     implicit lazy val v6: ReadWriter[MultiPolygon] = macroRW[MultiPolygon]
[warn]                                                             ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:23:67: dead code following this construct
[warn]     implicit lazy val v7: ReadWriter[GeometryCollection] = macroRW[GeometryCollection]
[warn]                                                                   ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:25:66: dead code following this construct
[warn]     implicit lazy val v9: ReadWriter[FeatureCollection] = macroRW[FeatureCollection]
[warn]                                                                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:26:57: dead code following this construct
[warn]     implicit lazy val v10: ReadWriter[Feature] = macroRW[Feature]
[warn]                                                         ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:30:49: dead code following this construct
[warn]     implicit val v1: ReadWriter[Value] = macroRW[Value]
[warn]                                                 ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:31:52: dead code following this construct
[warn]     implicit val v2: ReadWriter[Elements] = macroRW[Elements]
[warn]                                                    ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:32:48: dead code following this construct
[warn]     implicit val v3: ReadWriter[Rows] = macroRW[Rows]
[warn]                                                ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:33:12: dead code following this construct
[warn]     macroRW[DistanceMatrix]
[warn]            ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:41:78: dead code following this construct
[warn]   implicit val nestedStructsReaderWriter: ReadWriter[NestedStructs] = macroRW[NestedStructs]
[warn]                                                                              ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:42:84: dead code following this construct
[warn]   implicit val missingReqFieldsReaderWriter: ReadWriter[MissingReqFields] = macroRW[MissingReqFields]
[warn]                                                                                    ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:48:72: dead code following this construct
[warn]   implicit val primitivesReaderWriter: ReadWriter[Primitives] = macroRW[Primitives]
[warn]                                                                        ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:53:48: dead code following this construct
[warn]     implicit val v1: ReadWriter[Urls] = macroRW[Urls]
[warn]                                                ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:54:47: dead code following this construct
[warn]     implicit val v2: ReadWriter[Url] = macroRW[Url]
[warn]                                               ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:55:56: dead code following this construct
[warn]     implicit val v3: ReadWriter[UserMentions] = macroRW[UserMentions]
[warn]                                                        ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:56:52: dead code following this construct
[warn]     implicit val v4: ReadWriter[Entities] = macroRW[Entities]
[warn]                                                    ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:57:56: dead code following this construct
[warn]     implicit val v5: ReadWriter[UserEntities] = macroRW[UserEntities]
[warn]                                                        ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:58:48: dead code following this construct
[warn]     implicit val v6: ReadWriter[User] = macroRW[User]
[warn]                                                ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:59:59: dead code following this construct
[warn]     implicit val v7: ReadWriter[RetweetedStatus] = macroRW[RetweetedStatus]
[warn]                                                           ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:60:12: dead code following this construct
[warn]     macroRW[Tweet]
[warn]            ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:6:14: Unused import
[warn] import ujson.BytesRenderer
[warn]              ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:17:23: local val v1 in value geoJsonReaderWriter is never used
[warn]     implicit lazy val v1: ReadWriter[Point] = macroRW[Point]
[warn]                       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:18:23: local val v2 in value geoJsonReaderWriter is never used
[warn]     implicit lazy val v2: ReadWriter[MultiPoint] = macroRW[MultiPoint]
[warn]                       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:19:23: local val v3 in value geoJsonReaderWriter is never used
[warn]     implicit lazy val v3: ReadWriter[LineString] = macroRW[LineString]
[warn]                       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:20:23: local val v4 in value geoJsonReaderWriter is never used
[warn]     implicit lazy val v4: ReadWriter[MultiLineString] = macroRW[MultiLineString]
[warn]                       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:21:23: local val v5 in value geoJsonReaderWriter is never used
[warn]     implicit lazy val v5: ReadWriter[Polygon] = macroRW[Polygon]
[warn]                       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:22:23: local val v6 in value geoJsonReaderWriter is never used
[warn]     implicit lazy val v6: ReadWriter[MultiPolygon] = macroRW[MultiPolygon]
[warn]                       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:23:23: local val v7 in value geoJsonReaderWriter is never used
[warn]     implicit lazy val v7: ReadWriter[GeometryCollection] = macroRW[GeometryCollection]
[warn]                       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:24:23: local val v8 in value geoJsonReaderWriter is never used
[warn]     implicit lazy val v8: ReadWriter[Geometry] = macroRW[Geometry]
[warn]                       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:25:23: local val v9 in value geoJsonReaderWriter is never used
[warn]     implicit lazy val v9: ReadWriter[FeatureCollection] = macroRW[FeatureCollection]
[warn]                       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:26:23: local val v10 in value geoJsonReaderWriter is never used
[warn]     implicit lazy val v10: ReadWriter[Feature] = macroRW[Feature]
[warn]                       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:30:18: local val v1 in value googleMApsAPIReaderWriter is never used
[warn]     implicit val v1: ReadWriter[Value] = macroRW[Value]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:31:18: local val v2 in value googleMApsAPIReaderWriter is never used
[warn]     implicit val v2: ReadWriter[Elements] = macroRW[Elements]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:32:18: local val v3 in value googleMApsAPIReaderWriter is never used
[warn]     implicit val v3: ReadWriter[Rows] = macroRW[Rows]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:53:18: local val v1 in value twitterAPIReaderWriter is never used
[warn]     implicit val v1: ReadWriter[Urls] = macroRW[Urls]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:54:18: local val v2 in value twitterAPIReaderWriter is never used
[warn]     implicit val v2: ReadWriter[Url] = macroRW[Url]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:55:18: local val v3 in value twitterAPIReaderWriter is never used
[warn]     implicit val v3: ReadWriter[UserMentions] = macroRW[UserMentions]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:56:18: local val v4 in value twitterAPIReaderWriter is never used
[warn]     implicit val v4: ReadWriter[Entities] = macroRW[Entities]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:57:18: local val v5 in value twitterAPIReaderWriter is never used
[warn]     implicit val v5: ReadWriter[UserEntities] = macroRW[UserEntities]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:58:18: local val v6 in value twitterAPIReaderWriter is never used
[warn]     implicit val v6: ReadWriter[User] = macroRW[User]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/UPickleReaderWriters.scala:59:18: local val v7 in value twitterAPIReaderWriter is never used
[warn]     implicit val v7: ReadWriter[RetweetedStatus] = macroRW[RetweetedStatus]
[warn]                  ^
[warn] 64 warnings found
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.27.3-SNAPSHOT.jar ...
[info] Compiling 50 Scala sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/test-classes ...
Processing 523 classes from /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes with "reflection" generator
Writing out Java source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/src_managed/jmh and resources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/resource_managed/jmh
[info] Done packaging.
[info] Compiling 694 Java sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes ...
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.27.3-SNAPSHOT-tests.jar ...
[info] Done packaging.
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.27.3-SNAPSHOT-jmh.jar ...
[info] Done packaging.
[info] Running (fork) org.openjdk.jmh.Main -p size=128 -jvm /usr/lib/jvm/jdk-10/bin/java -jvmArgsAppend -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler -prof gc -rf json -rff jdk10graal.json .*Benchmark.*
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce
[info] # Run progress: 0.00% complete, ETA 01:23:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 11699.133 ops/s
[info] # Warmup Iteration   2: 603859.192 ops/s
[info] # Warmup Iteration   3: 721763.392 ops/s
[info] # Warmup Iteration   4: 716613.511 ops/s
[info] # Warmup Iteration   5: 721748.856 ops/s
[info] Iteration   1: 707548.107 ops/s
[info]                  ·gc.alloc.rate:                   1967.925 MB/sec
[info]                  ·gc.alloc.rate.norm:              4377.636 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.185 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2027.022 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4509.096 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 732145.738 ops/s
[info]                  ·gc.alloc.rate:                   2029.398 MB/sec
[info]                  ·gc.alloc.rate.norm:              4363.082 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.224 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2028.848 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4361.901 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 729062.032 ops/s
[info]                  ·gc.alloc.rate:                   2009.555 MB/sec
[info]                  ·gc.alloc.rate.norm:              4338.517 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.135 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1354.118 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2923.464 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 718734.863 ops/s
[info]                  ·gc.alloc.rate:                   2004.924 MB/sec
[info]                  ·gc.alloc.rate.norm:              4389.274 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.091 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2033.528 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4451.895 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 733922.642 ops/s
[info]                  ·gc.alloc.rate:                   2062.124 MB/sec
[info]                  ·gc.alloc.rate.norm:              4421.708 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2035.246 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4364.073 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce":
[info]   724282.676 ±(99.9%) 42550.180 ops/s [Average]
[info]   (min, avg, max) = (707548.107, 724282.676, 733922.642), stdev = 11050.147
[info]   CI (99.9%): [681732.497, 766832.856] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:·gc.alloc.rate":
[info]   2014.785 ±(99.9%) 133.042 MB/sec [Average]
[info]   (min, avg, max) = (1967.925, 2014.785, 2062.124), stdev = 34.551
[info]   CI (99.9%): [1881.743, 2147.827] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   4378.043 ±(99.9%) 118.981 B/op [Average]
[info]   (min, avg, max) = (4338.517, 4378.043, 4421.708), stdev = 30.899
[info]   CI (99.9%): [4259.063, 4497.024] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   0.058 ±(99.9%) 0.154 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.058, 0.104), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.212] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.127 ±(99.9%) 0.335 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.127, 0.224), stdev = 0.087
[info]   CI (99.9%): [≈ 0, 0.462] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1895.752 ±(99.9%) 1165.981 MB/sec [Average]
[info]   (min, avg, max) = (1354.118, 1895.752, 2035.246), stdev = 302.802
[info]   CI (99.9%): [729.771, 3061.734] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   4122.086 ±(99.9%) 2591.196 B/op [Average]
[info]   (min, avg, max) = (2923.464, 4122.086, 4509.096), stdev = 672.925
[info]   CI (99.9%): [1530.890, 6713.282] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readCirce:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala
[info] # Run progress: 0.20% complete, ETA 02:13:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 19295.416 ops/s
[info] # Warmup Iteration   2: 1698344.839 ops/s
[info] # Warmup Iteration   3: 1870941.149 ops/s
[info] # Warmup Iteration   4: 1892222.203 ops/s
[info] # Warmup Iteration   5: 1886721.189 ops/s
[info] Iteration   1: 1811502.024 ops/s
[info]                  ·gc.alloc.rate:                   1168.429 MB/sec
[info]                  ·gc.alloc.rate.norm:              1015.517 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.887 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 585.695 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 1902035.181 ops/s
[info]                  ·gc.alloc.rate:                   1256.196 MB/sec
[info]                  ·gc.alloc.rate.norm:              1039.501 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.052 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.227 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1115.656 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 1896027.418 ops/s
[info]                  ·gc.alloc.rate:                   1238.848 MB/sec
[info]                  ·gc.alloc.rate.norm:              1028.541 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.349 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1120.284 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 1880886.687 ops/s
[info]                  ·gc.alloc.rate:                   1236.851 MB/sec
[info]                  ·gc.alloc.rate.norm:              1035.089 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.052 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.144 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1129.901 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 1899116.632 ops/s
[info]                  ·gc.alloc.rate:                   1232.426 MB/sec
[info]                  ·gc.alloc.rate.norm:              1021.535 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      675.365 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 559.797 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala":
[info]   1877913.588 ±(99.9%) 146360.771 ops/s [Average]
[info]   (min, avg, max) = (1811502.024, 1877913.588, 1902035.181), stdev = 38009.427
[info]   CI (99.9%): [1731552.817, 2024274.359] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1226.550 ±(99.9%) 129.853 MB/sec [Average]
[info]   (min, avg, max) = (1168.429, 1226.550, 1256.196), stdev = 33.723
[info]   CI (99.9%): [1096.697, 1356.404] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   1028.037 ±(99.9%) 37.553 B/op [Average]
[info]   (min, avg, max) = (1015.517, 1028.037, 1039.501), stdev = 9.752
[info]   CI (99.9%): [990.484, 1065.590] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.025 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.157] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.021 ±(99.9%) 0.110 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.052), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.130] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1079.394 ±(99.9%) 1422.822 MB/sec [Average]
[info]   (min, avg, max) = (673.887, 1079.394, 1350.144), stdev = 369.502
[info]   CI (99.9%): [≈ 0, 2502.216] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   902.267 ±(99.9%) 1159.016 B/op [Average]
[info]   (min, avg, max) = (559.797, 902.267, 1129.901), stdev = 300.993
[info]   CI (99.9%): [≈ 0, 2061.282] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJacksonScala:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala
[info] # Run progress: 0.40% complete, ETA 02:13:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2547010.723 ops/s
[info] # Warmup Iteration   2: 5446709.329 ops/s
[info] # Warmup Iteration   3: 5771311.661 ops/s
[info] # Warmup Iteration   4: 5843908.871 ops/s
[info] # Warmup Iteration   5: 5525544.735 ops/s
[info] Iteration   1: 5829321.378 ops/s
[info]                  ·gc.alloc.rate:                   397.469 MB/sec
[info]                  ·gc.alloc.rate.norm:              107.337 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      511.506 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 138.133 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 5737628.526 ops/s
[info]                  ·gc.alloc.rate:      383.816 MB/sec
[info]                  ·gc.alloc.rate.norm: 105.256 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 5837415.390 ops/s
[info]                  ·gc.alloc.rate:                   402.011 MB/sec
[info]                  ·gc.alloc.rate.norm:              108.405 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.694 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 181.937 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 5824087.817 ops/s
[info]                  ·gc.alloc.rate:                   401.559 MB/sec
[info]                  ·gc.alloc.rate.norm:              108.518 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2.675 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.723 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.800 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 182.359 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 5865024.941 ops/s
[info]                  ·gc.alloc.rate:      387.530 MB/sec
[info]                  ·gc.alloc.rate.norm: 104.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala":
[info]   5818695.610 ±(99.9%) 184777.675 ops/s [Average]
[info]   (min, avg, max) = (5737628.526, 5818695.610, 5865024.941), stdev = 47986.175
[info]   CI (99.9%): [5633917.935, 6003473.285] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   394.477 ±(99.9%) 32.089 MB/sec [Average]
[info]   (min, avg, max) = (383.816, 394.477, 402.011), stdev = 8.333
[info]   CI (99.9%): [362.388, 426.566] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   106.703 ±(99.9%) 7.700 B/op [Average]
[info]   (min, avg, max) = (104.000, 106.703, 108.518), stdev = 2.000
[info]   CI (99.9%): [99.004, 114.403] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.535 ±(99.9%) 4.606 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.535, 2.675), stdev = 1.196
[info]   CI (99.9%): [≈ 0, 5.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.145 ±(99.9%) 1.245 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.145, 0.723), stdev = 0.323
[info]   CI (99.9%): [≈ 0, 1.389] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   372.200 ±(99.9%) 1333.265 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 372.200, 674.800), stdev = 346.245
[info]   CI (99.9%): [≈ 0, 1705.465] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   100.486 ±(99.9%) 359.935 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 100.486, 182.359), stdev = 93.474
[info]   CI (99.9%): [≈ 0, 460.421] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readJsoniterScala:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.600, 3.000), stdev = 1.517
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson
[info] # Run progress: 0.60% complete, ETA 02:13:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 866.506 ops/s
[info] # Warmup Iteration   2: 195232.877 ops/s
[info] # Warmup Iteration   3: 272836.702 ops/s
[info] # Warmup Iteration   4: 272508.932 ops/s
[info] # Warmup Iteration   5: 274699.028 ops/s
[info] Iteration   1: 275832.166 ops/s
[info]                  ·gc.alloc.rate:                   2380.519 MB/sec
[info]                  ·gc.alloc.rate.norm:              13586.801 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.238 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2024.149 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11552.824 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 275313.427 ops/s
[info]                  ·gc.alloc.rate:                   2380.767 MB/sec
[info]                  ·gc.alloc.rate.norm:              13605.335 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.357 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2701.063 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15435.726 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 275470.472 ops/s
[info]                  ·gc.alloc.rate:                   2367.696 MB/sec
[info]                  ·gc.alloc.rate.norm:              13529.701 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.238 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2030.748 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11604.285 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 274837.276 ops/s
[info]                  ·gc.alloc.rate:                   2389.704 MB/sec
[info]                  ·gc.alloc.rate.norm:              13687.114 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2033.345 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11646.055 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 271667.522 ops/s
[info]                  ·gc.alloc.rate:                   2388.426 MB/sec
[info]                  ·gc.alloc.rate.norm:              13839.697 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.121 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2713.943 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15725.900 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson":
[info]   274624.172 ±(99.9%) 6511.386 ops/s [Average]
[info]   (min, avg, max) = (271667.522, 274624.172, 275832.166), stdev = 1690.986
[info]   CI (99.9%): [268112.786, 281135.559] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2381.422 ±(99.9%) 33.751 MB/sec [Average]
[info]   (min, avg, max) = (2367.696, 2381.422, 2389.704), stdev = 8.765
[info]   CI (99.9%): [2347.671, 2415.173] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   13649.730 ±(99.9%) 462.971 B/op [Average]
[info]   (min, avg, max) = (13529.701, 13649.730, 13839.697), stdev = 120.232
[info]   CI (99.9%): [13186.758, 14112.701] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   0.033 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   0.191 ±(99.9%) 0.521 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.191, 0.357), stdev = 0.135
[info]   CI (99.9%): [≈ 0, 0.711] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   2300.650 ±(99.9%) 1430.313 MB/sec [Average]
[info]   (min, avg, max) = (2024.149, 2300.650, 2713.943), stdev = 371.448
[info]   CI (99.9%): [870.337, 3730.963] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   13192.958 ±(99.9%) 8403.900 B/op [Average]
[info]   (min, avg, max) = (11552.824, 13192.958, 15725.900), stdev = 2182.466
[info]   CI (99.9%): [4789.058, 21596.858] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.readPlayJson:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce
[info] # Run progress: 0.80% complete, ETA 02:12:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 104478.232 ops/s
[info] # Warmup Iteration   2: 836701.537 ops/s
[info] # Warmup Iteration   3: 891116.702 ops/s
[info] # Warmup Iteration   4: 889123.824 ops/s
[info] # Warmup Iteration   5: 892187.578 ops/s
[info] Iteration   1: 882280.682 ops/s
[info]                  ·gc.alloc.rate:                   2210.603 MB/sec
[info]                  ·gc.alloc.rate.norm:              3943.509 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.186 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2024.754 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3611.973 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 883261.510 ops/s
[info]                  ·gc.alloc.rate:                   2212.361 MB/sec
[info]                  ·gc.alloc.rate.norm:              3942.589 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.074 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2027.920 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3613.901 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 892794.549 ops/s
[info]                  ·gc.alloc.rate:                   2262.369 MB/sec
[info]                  ·gc.alloc.rate.norm:              3988.069 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.073 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2708.276 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4774.106 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 881879.064 ops/s
[info]                  ·gc.alloc.rate:                   2235.983 MB/sec
[info]                  ·gc.alloc.rate.norm:              3990.843 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.149 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2033.584 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3629.595 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 878191.641 ops/s
[info]                  ·gc.alloc.rate:                   2228.270 MB/sec
[info]                  ·gc.alloc.rate.norm:              3994.345 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.112 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2035.889 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3649.486 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce":
[info]   883681.489 ±(99.9%) 20965.128 ops/s [Average]
[info]   (min, avg, max) = (878191.641, 883681.489, 892794.549), stdev = 5444.577
[info]   CI (99.9%): [862716.362, 904646.617] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:·gc.alloc.rate":
[info]   2229.917 ±(99.9%) 81.089 MB/sec [Average]
[info]   (min, avg, max) = (2210.603, 2229.917, 2262.369), stdev = 21.059
[info]   CI (99.9%): [2148.828, 2311.007] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   3971.871 ±(99.9%) 101.682 B/op [Average]
[info]   (min, avg, max) = (3942.589, 3971.871, 3994.345), stdev = 26.406
[info]   CI (99.9%): [3870.189, 4073.553] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   0.067 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.067, 0.104), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.171] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.119 ±(99.9%) 0.187 B/op [Average]
[info]   (min, avg, max) = (0.073, 0.119, 0.186), stdev = 0.049
[info]   CI (99.9%): [≈ 0, 0.306] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   2166.084 ±(99.9%) 1167.232 MB/sec [Average]
[info]   (min, avg, max) = (2024.754, 2166.084, 2708.276), stdev = 303.126
[info]   CI (99.9%): [998.853, 3333.316] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   3855.812 ±(99.9%) 1977.548 B/op [Average]
[info]   (min, avg, max) = (3611.973, 3855.812, 4774.106), stdev = 513.563
[info]   CI (99.9%): [1878.264, 5833.360] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeCirce:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 4.000), stdev = 0.837
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala
[info] # Run progress: 1.00% complete, ETA 02:12:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
[info] WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/tmp/sbt_c0b5d35/target/1bdf7fe1/jackson-module-afterburner-2.9.5.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int)
[info] WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
[info] WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
[info] WARNING: All illegal access operations will be denied in a future release
[info] 46587.056 ops/s
[info] # Warmup Iteration   2: 2484641.238 ops/s
[info] # Warmup Iteration   3: 2644280.709 ops/s
[info] # Warmup Iteration   4: 2632546.761 ops/s
[info] # Warmup Iteration   5: 2632879.736 ops/s
[info] Iteration   1: 2652689.630 ops/s
[info]                  ·gc.alloc.rate:                   1136.999 MB/sec
[info]                  ·gc.alloc.rate.norm:              674.628 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.037 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.224 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 799.956 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 2637651.087 ops/s
[info]                  ·gc.alloc.rate:                   1123.896 MB/sec
[info]                  ·gc.alloc.rate.norm:              670.700 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.028 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 402.235 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 2594174.568 ops/s
[info]                  ·gc.alloc.rate:                   1119.948 MB/sec
[info]                  ·gc.alloc.rate.norm:              679.592 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.038 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.675 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 818.385 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 2597688.689 ops/s
[info]                  ·gc.alloc.rate:                   1135.729 MB/sec
[info]                  ·gc.alloc.rate.norm:              688.150 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.827 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 817.874 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 2646228.592 ops/s
[info]                  ·gc.alloc.rate:                   1117.343 MB/sec
[info]                  ·gc.alloc.rate.norm:              664.688 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.062 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      675.001 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 401.546 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala":
[info]   2625686.513 ±(99.9%) 106697.882 ops/s [Average]
[info]   (min, avg, max) = (2594174.568, 2625686.513, 2652689.630), stdev = 27709.101
[info]   CI (99.9%): [2518988.631, 2732384.395] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1126.783 ±(99.9%) 34.898 MB/sec [Average]
[info]   (min, avg, max) = (1117.343, 1126.783, 1136.999), stdev = 9.063
[info]   CI (99.9%): [1091.885, 1161.682] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   675.552 ±(99.9%) 34.304 B/op [Average]
[info]   (min, avg, max) = (664.688, 675.552, 688.150), stdev = 8.909
[info]   CI (99.9%): [641.247, 709.856] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.046 ±(99.9%) 0.174 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.104), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.220] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.027 ±(99.9%) 0.104 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.027, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.131] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1079.151 ±(99.9%) 1422.356 MB/sec [Average]
[info]   (min, avg, max) = (674.028, 1079.151, 1349.827), stdev = 369.381
[info]   CI (99.9%): [≈ 0, 2501.507] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   647.999 ±(99.9%) 865.578 B/op [Average]
[info]   (min, avg, max) = (401.546, 647.999, 818.385), stdev = 224.788
[info]   CI (99.9%): [≈ 0, 1513.578] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJacksonScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 3.000), stdev = 0.894
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala
[info] # Run progress: 1.20% complete, ETA 02:12:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3161862.076 ops/s
[info] # Warmup Iteration   2: 12149914.438 ops/s
[info] # Warmup Iteration   3: 13148129.853 ops/s
[info] # Warmup Iteration   4: 13528797.020 ops/s
[info] # Warmup Iteration   5: 13672744.623 ops/s
[info] Iteration   1: 13372546.174 ops/s
[info]                  ·gc.alloc.rate:                   699.945 MB/sec
[info]                  ·gc.alloc.rate.norm:              82.389 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2.893 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.341 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.046 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 79.341 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 13704329.791 ops/s
[info]                  ·gc.alloc.rate:                   717.885 MB/sec
[info]                  ·gc.alloc.rate.norm:              82.460 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.676 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 77.267 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 13712202.072 ops/s
[info]                  ·gc.alloc.rate:                   714.911 MB/sec
[info]                  ·gc.alloc.rate.norm:              82.068 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.002 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.700 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 77.223 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 13609538.055 ops/s
[info]                  ·gc.alloc.rate:                   714.317 MB/sec
[info]                  ·gc.alloc.rate.norm:              82.618 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.002 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.024 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 77.726 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 13518886.940 ops/s
[info]                  ·gc.alloc.rate:                   709.618 MB/sec
[info]                  ·gc.alloc.rate.norm:              82.623 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.036 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 78.247 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala":
[info]   13583500.606 ±(99.9%) 546324.845 ops/s [Average]
[info]   (min, avg, max) = (13372546.174, 13583500.606, 13712202.072), stdev = 141878.827
[info]   CI (99.9%): [13037175.761, 14129825.451] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   711.335 ±(99.9%) 27.041 MB/sec [Average]
[info]   (min, avg, max) = (699.945, 711.335, 717.885), stdev = 7.022
[info]   CI (99.9%): [684.294, 738.376] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   82.432 ±(99.9%) 0.873 B/op [Average]
[info]   (min, avg, max) = (82.068, 82.432, 82.623), stdev = 0.227
[info]   CI (99.9%): [81.559, 83.305] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.587 ±(99.9%) 4.965 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.587, 2.893), stdev = 1.289
[info]   CI (99.9%): [≈ 0, 5.551] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.069 ±(99.9%) 0.584 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.069, 0.341), stdev = 0.152
[info]   CI (99.9%): [≈ 0, 0.653] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   672.696 ±(99.9%) 3.169 MB/sec [Average]
[info]   (min, avg, max) = (672.024, 672.696, 674.046), stdev = 0.823
[info]   CI (99.9%): [669.528, 675.865] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   77.961 ±(99.9%) 3.372 B/op [Average]
[info]   (min, avg, max) = (77.223, 77.961, 79.341), stdev = 0.876
[info]   CI (99.9%): [74.589, 81.333] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 1.41% complete, ETA 02:11:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5023937.263 ops/s
[info] # Warmup Iteration   2: 15101640.992 ops/s
[info] # Warmup Iteration   3: 15362981.972 ops/s
[info] # Warmup Iteration   4: 15295754.606 ops/s
[info] # Warmup Iteration   5: 15359399.011 ops/s
[info] Iteration   1: 15243817.770 ops/s
[info]                  ·gc.alloc.rate:      5.089 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.525 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 14855345.392 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 15356954.395 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 15354512.367 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 15402780.470 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc":
[info]   15242682.079 ±(99.9%) 863666.620 ops/s [Average]
[info]   (min, avg, max) = (14855345.392, 15242682.079, 15402780.470), stdev = 224291.479
[info]   CI (99.9%): [14379015.458, 16106348.699] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   1.018 ±(99.9%) 8.763 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 1.018, 5.089), stdev = 2.276
[info]   CI (99.9%): [≈ 0, 9.781] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.105 ±(99.9%) 0.905 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁵, 0.105, 0.525), stdev = 0.235
[info]   CI (99.9%): [≈ 0, 1.010] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson
[info] # Run progress: 1.61% complete, ETA 02:11:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 11461.941 ops/s
[info] # Warmup Iteration   2: 570735.914 ops/s
[info] # Warmup Iteration   3: 688318.834 ops/s
[info] # Warmup Iteration   4: 692281.190 ops/s
[info] # Warmup Iteration   5: 681408.840 ops/s
[info] Iteration   1: 695498.139 ops/s
[info]                  ·gc.alloc.rate:                   1989.333 MB/sec
[info]                  ·gc.alloc.rate.norm:              4502.923 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.094 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2023.494 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4580.248 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 697390.734 ops/s
[info]                  ·gc.alloc.rate:                   1987.361 MB/sec
[info]                  ·gc.alloc.rate.norm:              4485.572 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.188 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2026.873 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4574.753 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 699270.192 ops/s
[info]                  ·gc.alloc.rate:                   1980.245 MB/sec
[info]                  ·gc.alloc.rate.norm:              4457.586 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.094 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1352.433 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3044.364 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 697518.370 ops/s
[info]                  ·gc.alloc.rate:                   2001.928 MB/sec
[info]                  ·gc.alloc.rate.norm:              4517.916 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.047 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2030.389 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4582.147 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 696053.172 ops/s
[info]                  ·gc.alloc.rate:                   1997.514 MB/sec
[info]                  ·gc.alloc.rate.norm:              4517.249 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.141 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2032.810 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4597.069 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson":
[info]   697146.121 ±(99.9%) 5652.865 ops/s [Average]
[info]   (min, avg, max) = (695498.139, 697146.121, 699270.192), stdev = 1468.031
[info]   CI (99.9%): [691493.256, 702798.987] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1991.276 ±(99.9%) 32.964 MB/sec [Average]
[info]   (min, avg, max) = (1980.245, 1991.276, 2001.928), stdev = 8.561
[info]   CI (99.9%): [1958.312, 2024.240] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   4496.249 ±(99.9%) 97.486 B/op [Average]
[info]   (min, avg, max) = (4457.586, 4496.249, 4517.916), stdev = 25.317
[info]   CI (99.9%): [4398.763, 4593.736] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   0.050 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   0.113 ±(99.9%) 0.206 B/op [Average]
[info]   (min, avg, max) = (0.047, 0.113, 0.188), stdev = 0.054
[info]   CI (99.9%): [≈ 0, 0.319] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   1893.200 ±(99.9%) 1164.121 MB/sec [Average]
[info]   (min, avg, max) = (1352.433, 1893.200, 2032.810), stdev = 302.318
[info]   CI (99.9%): [729.079, 3057.320] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   4275.716 ±(99.9%) 2650.770 B/op [Average]
[info]   (min, avg, max) = (3044.364, 4275.716, 4597.069), stdev = 688.396
[info]   CI (99.9%): [1624.946, 6926.486] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AdtBenchmark.writePlayJson:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce
[info] # Run progress: 1.81% complete, ETA 02:11:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 350996.779 ops/s
[info] # Warmup Iteration   2: 1722487.143 ops/s
[info] # Warmup Iteration   3: 1884327.855 ops/s
[info] # Warmup Iteration   4: 1954842.828 ops/s
[info] # Warmup Iteration   5: 1947950.143 ops/s
[info] Iteration   1: 1949470.757 ops/s
[info]                  ·gc.alloc.rate:                   2662.728 MB/sec
[info]                  ·gc.alloc.rate.norm:              2150.088 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.050 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2702.758 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2182.411 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 1943077.764 ops/s
[info]                  ·gc.alloc.rate:                   2664.694 MB/sec
[info]                  ·gc.alloc.rate.norm:              2158.646 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.067 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2707.833 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2193.593 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 1936268.204 ops/s
[info]                  ·gc.alloc.rate:                   2658.301 MB/sec
[info]                  ·gc.alloc.rate.norm:              2161.154 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.068 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2033.286 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1653.027 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 1941517.304 ops/s
[info]                  ·gc.alloc.rate:                   2691.446 MB/sec
[info]                  ·gc.alloc.rate.norm:              2181.132 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.051 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2716.705 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2201.602 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 1933237.267 ops/s
[info]                  ·gc.alloc.rate:                   2682.071 MB/sec
[info]                  ·gc.alloc.rate.norm:              2183.867 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.085 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2718.112 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2213.213 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce":
[info]   1940714.259 ±(99.9%) 24245.309 ops/s [Average]
[info]   (min, avg, max) = (1933237.267, 1940714.259, 1949470.757), stdev = 6296.430
[info]   CI (99.9%): [1916468.951, 1964959.568] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:·gc.alloc.rate":
[info]   2671.848 ±(99.9%) 54.676 MB/sec [Average]
[info]   (min, avg, max) = (2658.301, 2671.848, 2691.446), stdev = 14.199
[info]   CI (99.9%): [2617.172, 2726.524] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   2166.977 ±(99.9%) 56.925 B/op [Average]
[info]   (min, avg, max) = (2150.088, 2166.977, 2183.867), stdev = 14.783
[info]   CI (99.9%): [2110.053, 2223.902] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   0.079 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 0.079, 0.104), stdev = 0.017
[info]   CI (99.9%): [0.012, 0.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.064 ±(99.9%) 0.055 B/op [Average]
[info]   (min, avg, max) = (0.050, 0.064, 0.085), stdev = 0.014
[info]   CI (99.9%): [0.009, 0.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   2575.739 ±(99.9%) 1167.926 MB/sec [Average]
[info]   (min, avg, max) = (2033.286, 2575.739, 2718.112), stdev = 303.307
[info]   CI (99.9%): [1407.813, 3743.665] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   2088.769 ±(99.9%) 938.968 B/op [Average]
[info]   (min, avg, max) = (1653.027, 2088.769, 2213.213), stdev = 243.847
[info]   CI (99.9%): [1149.802, 3027.737] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readCirce:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava
[info] # Run progress: 2.01% complete, ETA 02:11:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.661 ops/s
[info] # Warmup Iteration   2: 8972669.898 ops/s
[info] # Warmup Iteration   3: 9756528.446 ops/s
[info] # Warmup Iteration   4: 10176035.348 ops/s
[info] # Warmup Iteration   5: 10321056.491 ops/s
[info] Iteration   1: 10331323.694 ops/s
[info]                  ·gc.alloc.rate:                   1297.293 MB/sec
[info]                  ·gc.alloc.rate.norm:              197.658 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.013 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1337.470 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 203.780 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 10283911.671 ops/s
[info]                  ·gc.alloc.rate:                   1292.373 MB/sec
[info]                  ·gc.alloc.rate.norm:              197.796 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.010 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1338.263 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 204.819 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 10333351.989 ops/s
[info]                  ·gc.alloc.rate:                   1292.593 MB/sec
[info]                  ·gc.alloc.rate.norm:              196.901 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.019 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1339.452 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 204.039 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 10330938.993 ops/s
[info]                  ·gc.alloc.rate:                   1305.885 MB/sec
[info]                  ·gc.alloc.rate.norm:              198.948 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.003 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1341.238 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 204.334 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 10342695.001 ops/s
[info]                  ·gc.alloc.rate:                   1275.394 MB/sec
[info]                  ·gc.alloc.rate.norm:              194.103 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.003 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      671.059 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 102.129 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava":
[info]   10324444.270 ±(99.9%) 89166.233 ops/s [Average]
[info]   (min, avg, max) = (10283911.671, 10324444.270, 10342695.001), stdev = 23156.188
[info]   CI (99.9%): [10235278.036, 10413610.503] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   1292.708 ±(99.9%) 42.817 MB/sec [Average]
[info]   (min, avg, max) = (1275.394, 1292.708, 1305.885), stdev = 11.119
[info]   CI (99.9%): [1249.890, 1335.525] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   197.081 ±(99.9%) 7.003 B/op [Average]
[info]   (min, avg, max) = (194.103, 197.081, 198.948), stdev = 1.819
[info]   CI (99.9%): [190.078, 204.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   0.062 ±(99.9%) 0.170 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.062, 0.125), stdev = 0.044
[info]   CI (99.9%): [≈ 0, 0.232] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   0.010 ±(99.9%) 0.026 B/op [Average]
[info]   (min, avg, max) = (0.003, 0.010, 0.019), stdev = 0.007
[info]   CI (99.9%): [≈ 0, 0.035] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   1205.496 ±(99.9%) 1150.430 MB/sec [Average]
[info]   (min, avg, max) = (671.059, 1205.496, 1341.238), stdev = 298.763
[info]   CI (99.9%): [55.066, 2355.926] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   183.820 ±(99.9%) 175.853 B/op [Average]
[info]   (min, avg, max) = (102.129, 183.820, 204.819), stdev = 45.668
[info]   CI (99.9%): [7.967, 359.673] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readDslJsonJava:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala
[info] # Run progress: 2.21% complete, ETA 02:11:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 314355.977 ops/s
[info] # Warmup Iteration   2: 3040484.917 ops/s
[info] # Warmup Iteration   3: 3149817.744 ops/s
[info] # Warmup Iteration   4: 3125258.817 ops/s
[info] # Warmup Iteration   5: 3001834.943 ops/s
[info] Iteration   1: 3133667.769 ops/s
[info]                  ·gc.alloc.rate:                   1997.806 MB/sec
[info]                  ·gc.alloc.rate.norm:              1003.528 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.052 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2023.701 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1016.536 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 3158711.066 ops/s
[info]                  ·gc.alloc.rate:                   2013.486 MB/sec
[info]                  ·gc.alloc.rate.norm:              1003.283 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.041 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2026.905 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1009.969 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 3112344.238 ops/s
[info]                  ·gc.alloc.rate:                   1980.946 MB/sec
[info]                  ·gc.alloc.rate.norm:              1001.872 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.063 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2029.469 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1026.413 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 3137117.333 ops/s
[info]                  ·gc.alloc.rate:                   2011.018 MB/sec
[info]                  ·gc.alloc.rate.norm:              1009.070 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.021 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2031.715 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1019.455 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 3137111.084 ops/s
[info]                  ·gc.alloc.rate:                   2025.665 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.471 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.031 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2033.648 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1020.477 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala":
[info]   3135790.298 ±(99.9%) 63362.984 ops/s [Average]
[info]   (min, avg, max) = (3112344.238, 3135790.298, 3158711.066), stdev = 16455.166
[info]   CI (99.9%): [3072427.314, 3199153.282] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   2005.784 ±(99.9%) 65.647 MB/sec [Average]
[info]   (min, avg, max) = (1980.946, 2005.784, 2025.665), stdev = 17.048
[info]   CI (99.9%): [1940.137, 2071.431] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   1006.845 ±(99.9%) 23.267 B/op [Average]
[info]   (min, avg, max) = (1001.872, 1006.845, 1016.471), stdev = 6.042
[info]   CI (99.9%): [983.577, 1030.112] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.083 ±(99.9%) 0.127 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.083, 0.125), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.210] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.042 ±(99.9%) 0.064 B/op [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.063), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.106] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   2029.088 ±(99.9%) 15.114 MB/sec [Average]
[info]   (min, avg, max) = (2023.701, 2029.088, 2033.648), stdev = 3.925
[info]   CI (99.9%): [2013.974, 2044.202] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1018.570 ±(99.9%) 23.107 B/op [Average]
[info]   (min, avg, max) = (1009.969, 1018.570, 1026.413), stdev = 6.001
[info]   CI (99.9%): [995.463, 1041.677] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJacksonScala:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala
[info] # Run progress: 2.41% complete, ETA 02:10:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7774762.226 ops/s
[info] # Warmup Iteration   2: 12227927.366 ops/s
[info] # Warmup Iteration   3: 12638319.003 ops/s
[info] # Warmup Iteration   4: 12818675.744 ops/s
[info] # Warmup Iteration   5: 12887204.436 ops/s
[info] Iteration   1: 12977637.395 ops/s
[info]                  ·gc.alloc.rate:                   1678.957 MB/sec
[info]                  ·gc.alloc.rate.norm:              203.666 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.008 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.936 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 163.269 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 12904121.418 ops/s
[info]                  ·gc.alloc.rate:                   1694.745 MB/sec
[info]                  ·gc.alloc.rate.norm:              206.725 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.003 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2020.799 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 246.497 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 12878707.546 ops/s
[info]                  ·gc.alloc.rate:                   1676.956 MB/sec
[info]                  ·gc.alloc.rate.norm:              204.958 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.015 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.787 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 164.849 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 12764665.263 ops/s
[info]                  ·gc.alloc.rate:                   1689.521 MB/sec
[info]                  ·gc.alloc.rate.norm:              208.328 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2025.596 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 249.768 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 12930186.861 ops/s
[info]                  ·gc.alloc.rate:                   1695.446 MB/sec
[info]                  ·gc.alloc.rate.norm:              206.400 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.008 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1351.976 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 164.587 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala":
[info]   12891063.697 ±(99.9%) 306394.711 ops/s [Average]
[info]   (min, avg, max) = (12764665.263, 12891063.697, 12977637.395), stdev = 79569.733
[info]   CI (99.9%): [12584668.986, 13197458.407] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1687.125 ±(99.9%) 33.524 MB/sec [Average]
[info]   (min, avg, max) = (1676.956, 1687.125, 1695.446), stdev = 8.706
[info]   CI (99.9%): [1653.602, 1720.649] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   206.015 ±(99.9%) 6.845 B/op [Average]
[info]   (min, avg, max) = (203.666, 206.015, 208.328), stdev = 1.778
[info]   CI (99.9%): [199.170, 212.860] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.054 ±(99.9%) 0.185 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.125), stdev = 0.048
[info]   CI (99.9%): [≈ 0, 0.239] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.007 ±(99.9%) 0.023 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.007, 0.015), stdev = 0.006
[info]   CI (99.9%): [≈ 0, 0.029] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   1618.619 ±(99.9%) 1422.190 MB/sec [Average]
[info]   (min, avg, max) = (1345.936, 1618.619, 2025.596), stdev = 369.338
[info]   CI (99.9%): [196.429, 3040.809] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   197.794 ±(99.9%) 177.018 B/op [Average]
[info]   (min, avg, max) = (163.269, 197.794, 249.768), stdev = 45.971
[info]   CI (99.9%): [20.775, 374.812] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readJsoniterScala:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson
[info] # Run progress: 2.61% complete, ETA 02:10:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5092.459 ops/s
[info] # Warmup Iteration   2: 264444.938 ops/s
[info] # Warmup Iteration   3: 706263.719 ops/s
[info] # Warmup Iteration   4: 1173633.780 ops/s
[info] # Warmup Iteration   5: 1170074.443 ops/s
[info] Iteration   1: 1169032.839 ops/s
[info]                  ·gc.alloc.rate:                   2681.022 MB/sec
[info]                  ·gc.alloc.rate.norm:              3609.892 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.084 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2699.614 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3634.925 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 1171448.766 ops/s
[info]                  ·gc.alloc.rate:                   2678.308 MB/sec
[info]                  ·gc.alloc.rate.norm:              3598.684 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.140 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2702.981 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3631.837 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 1163263.211 ops/s
[info]                  ·gc.alloc.rate:                   2657.335 MB/sec
[info]                  ·gc.alloc.rate.norm:              3595.824 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.141 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2707.996 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3664.377 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 1161041.034 ops/s
[info]                  ·gc.alloc.rate:                   2678.624 MB/sec
[info]                  ·gc.alloc.rate.norm:              3631.464 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.085 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2711.480 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3676.008 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 1173257.779 ops/s
[info]                  ·gc.alloc.rate:                   2719.404 MB/sec
[info]                  ·gc.alloc.rate.norm:              3648.755 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.028 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2715.288 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3643.232 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson":
[info]   1167608.726 ±(99.9%) 20257.451 ops/s [Average]
[info]   (min, avg, max) = (1161041.034, 1167608.726, 1173257.779), stdev = 5260.796
[info]   CI (99.9%): [1147351.275, 1187866.177] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2682.939 ±(99.9%) 86.726 MB/sec [Average]
[info]   (min, avg, max) = (2657.335, 2682.939, 2719.404), stdev = 22.523
[info]   CI (99.9%): [2596.212, 2769.665] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   3616.924 ±(99.9%) 87.215 B/op [Average]
[info]   (min, avg, max) = (3595.824, 3616.924, 3648.755), stdev = 22.650
[info]   CI (99.9%): [3529.709, 3704.139] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   0.071 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.071, 0.104), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.205] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   0.095 ±(99.9%) 0.181 B/op [Average]
[info]   (min, avg, max) = (0.028, 0.095, 0.141), stdev = 0.047
[info]   CI (99.9%): [≈ 0, 0.276] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   2707.472 ±(99.9%) 24.303 MB/sec [Average]
[info]   (min, avg, max) = (2699.614, 2707.472, 2715.288), stdev = 6.311
[info]   CI (99.9%): [2683.169, 2731.775] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   3650.076 ±(99.9%) 74.220 B/op [Average]
[info]   (min, avg, max) = (3631.837, 3650.076, 3676.008), stdev = 19.275
[info]   CI (99.9%): [3575.856, 3724.295] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.readPlayJson:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce
[info] # Run progress: 2.81% complete, ETA 02:10:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 499022.555 ops/s
[info] # Warmup Iteration   2: 2319101.924 ops/s
[info] # Warmup Iteration   3: 2470822.856 ops/s
[info] # Warmup Iteration   4: 2516014.669 ops/s
[info] # Warmup Iteration   5: 2505284.500 ops/s
[info] Iteration   1: 2508285.071 ops/s
[info]                  ·gc.alloc.rate:                   2012.997 MB/sec
[info]                  ·gc.alloc.rate.norm:              1262.854 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.052 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2022.477 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1268.802 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 2491334.821 ops/s
[info]                  ·gc.alloc.rate:                   1976.234 MB/sec
[info]                  ·gc.alloc.rate.norm:              1248.413 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.026 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.448 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 852.464 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 2511372.089 ops/s
[info]                  ·gc.alloc.rate:                   2005.619 MB/sec
[info]                  ·gc.alloc.rate.norm:              1257.066 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.052 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2027.165 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1270.570 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 2478628.329 ops/s
[info]                  ·gc.alloc.rate:                   1994.522 MB/sec
[info]                  ·gc.alloc.rate.norm:              1266.288 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.040 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2031.054 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1289.482 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 2501705.274 ops/s
[info]                  ·gc.alloc.rate:                   2026.259 MB/sec
[info]                  ·gc.alloc.rate.norm:              1275.083 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.052 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2032.234 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1278.843 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce":
[info]   2498265.117 ±(99.9%) 51577.767 ops/s [Average]
[info]   (min, avg, max) = (2478628.329, 2498265.117, 2511372.089), stdev = 13394.582
[info]   CI (99.9%): [2446687.350, 2549842.883] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:·gc.alloc.rate":
[info]   2003.126 ±(99.9%) 72.959 MB/sec [Average]
[info]   (min, avg, max) = (1976.234, 2003.126, 2026.259), stdev = 18.947
[info]   CI (99.9%): [1930.167, 2076.085] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   1261.941 ±(99.9%) 38.469 B/op [Average]
[info]   (min, avg, max) = (1248.413, 1261.941, 1275.083), stdev = 9.990
[info]   CI (99.9%): [1223.472, 1300.409] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   0.071 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.071, 0.083), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.045 ±(99.9%) 0.045 B/op [Average]
[info]   (min, avg, max) = (0.026, 0.045, 0.052), stdev = 0.012
[info]   CI (99.9%): [≈ 0, 0.089] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   1892.476 ±(99.9%) 1169.001 MB/sec [Average]
[info]   (min, avg, max) = (1349.448, 1892.476, 2032.234), stdev = 303.586
[info]   CI (99.9%): [723.475, 3061.476] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   1192.032 ±(99.9%) 731.625 B/op [Average]
[info]   (min, avg, max) = (852.464, 1192.032, 1289.482), stdev = 190.001
[info]   CI (99.9%): [460.407, 1923.657] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeCirce:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava
[info] # Run progress: 3.01% complete, ETA 02:10:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.648 ops/s
[info] # Warmup Iteration   2: 17311255.829 ops/s
[info] # Warmup Iteration   3: 17559938.632 ops/s
[info] # Warmup Iteration   4: 17375885.898 ops/s
[info] # Warmup Iteration   5: 17075291.643 ops/s
[info] Iteration   1: 17119529.079 ops/s
[info]                  ·gc.alloc.rate:                   535.648 MB/sec
[info]                  ·gc.alloc.rate.norm:              49.251 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3.973 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.365 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      670.746 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 61.673 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 16932314.562 ops/s
[info]                  ·gc.alloc.rate:      516.359 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 17676476.956 ops/s
[info]                  ·gc.alloc.rate:                   554.532 MB/sec
[info]                  ·gc.alloc.rate.norm:              49.379 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      670.751 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 59.728 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 17748532.049 ops/s
[info]                  ·gc.alloc.rate:                   558.097 MB/sec
[info]                  ·gc.alloc.rate.norm:              49.495 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.007 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      670.066 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 59.425 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 17754498.662 ops/s
[info]                  ·gc.alloc.rate:                   563.591 MB/sec
[info]                  ·gc.alloc.rate.norm:              49.968 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      670.019 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 59.404 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava":
[info]   17446270.262 ±(99.9%) 1504060.138 ops/s [Average]
[info]   (min, avg, max) = (16932314.562, 17446270.262, 17754498.662), stdev = 390599.641
[info]   CI (99.9%): [15942210.124, 18950330.399] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   545.645 ±(99.9%) 74.907 MB/sec [Average]
[info]   (min, avg, max) = (516.359, 545.645, 563.591), stdev = 19.453
[info]   CI (99.9%): [470.739, 620.552] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   49.219 ±(99.9%) 2.823 B/op [Average]
[info]   (min, avg, max) = (48.000, 49.219, 49.968), stdev = 0.733
[info]   CI (99.9%): [46.395, 52.042] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   0.811 ±(99.9%) 6.808 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.811, 3.973), stdev = 1.768
[info]   CI (99.9%): [≈ 0, 7.619] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   0.075 ±(99.9%) 0.626 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.075, 0.365), stdev = 0.163
[info]   CI (99.9%): [≈ 0, 0.701] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   536.316 ±(99.9%) 1154.462 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 536.316, 670.751), stdev = 299.810
[info]   CI (99.9%): [≈ 0, 1690.778] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   48.046 ±(99.9%) 103.486 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 48.046, 61.673), stdev = 26.875
[info]   CI (99.9%): [≈ 0, 151.532] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeDslJsonJava:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 3.000), stdev = 1.095
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala
[info] # Run progress: 3.21% complete, ETA 02:10:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
[info] WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/tmp/sbt_c0b5d35/target/1bdf7fe1/jackson-module-afterburner-2.9.5.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int)
[info] WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
[info] WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
[info] WARNING: All illegal access operations will be denied in a future release
[info] 111999.067 ops/s
[info] # Warmup Iteration   2: 5766080.159 ops/s
[info] # Warmup Iteration   3: 6165404.339 ops/s
[info] # Warmup Iteration   4: 6290448.815 ops/s
[info] # Warmup Iteration   5: 6243833.249 ops/s
[info] Iteration   1: 6137726.291 ops/s
[info]                  ·gc.alloc.rate:                   1726.976 MB/sec
[info]                  ·gc.alloc.rate.norm:              442.942 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.281 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 346.069 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 6144673.216 ops/s
[info]                  ·gc.alloc.rate:                   1730.998 MB/sec
[info]                  ·gc.alloc.rate.norm:              443.422 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.027 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2026.472 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 519.112 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 6219153.774 ops/s
[info]                  ·gc.alloc.rate:                   1757.353 MB/sec
[info]                  ·gc.alloc.rate.norm:              444.818 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1351.609 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 342.116 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 6242641.936 ops/s
[info]                  ·gc.alloc.rate:                   1777.491 MB/sec
[info]                  ·gc.alloc.rate.norm:              448.225 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.021 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2029.287 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 511.720 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 6302290.347 ops/s
[info]                  ·gc.alloc.rate:                   1767.175 MB/sec
[info]                  ·gc.alloc.rate.norm:              441.371 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.026 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1354.813 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 338.379 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala":
[info]   6209297.113 ±(99.9%) 266470.425 ops/s [Average]
[info]   (min, avg, max) = (6137726.291, 6209297.113, 6302290.347), stdev = 69201.523
[info]   CI (99.9%): [5942826.688, 6475767.538] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1751.998 ±(99.9%) 85.584 MB/sec [Average]
[info]   (min, avg, max) = (1726.976, 1751.998, 1777.491), stdev = 22.226
[info]   CI (99.9%): [1666.414, 1837.583] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   444.155 ±(99.9%) 9.960 B/op [Average]
[info]   (min, avg, max) = (441.371, 444.155, 448.225), stdev = 2.587
[info]   CI (99.9%): [434.195, 454.116] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.058 ±(99.9%) 0.207 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.058, 0.104), stdev = 0.054
[info]   CI (99.9%): [≈ 0, 0.266] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.015 ±(99.9%) 0.052 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.015, 0.027), stdev = 0.014
[info]   CI (99.9%): [≈ 0, 0.067] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1622.293 ±(99.9%) 1425.721 MB/sec [Average]
[info]   (min, avg, max) = (1349.281, 1622.293, 2029.287), stdev = 370.255
[info]   CI (99.9%): [196.571, 3048.014] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   411.479 ±(99.9%) 365.641 B/op [Average]
[info]   (min, avg, max) = (338.379, 411.479, 519.112), stdev = 94.956
[info]   CI (99.9%): [45.839, 777.120] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJacksonScala:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala
[info] # Run progress: 3.41% complete, ETA 02:09:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 9026785.289 ops/s
[info] # Warmup Iteration   2: 19093602.221 ops/s
[info] # Warmup Iteration   3: 20469204.307 ops/s
[info] # Warmup Iteration   4: 20430983.605 ops/s
[info] # Warmup Iteration   5: 21048739.610 ops/s
[info] Iteration   1: 20721154.698 ops/s
[info]                  ·gc.alloc.rate:                   647.581 MB/sec
[info]                  ·gc.alloc.rate.norm:              49.181 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2.675 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.203 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.885 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 51.254 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 21418397.138 ops/s
[info]                  ·gc.alloc.rate:                   670.897 MB/sec
[info]                  ·gc.alloc.rate.norm:              49.284 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.340 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 49.537 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 21349282.921 ops/s
[info]                  ·gc.alloc.rate:                   676.801 MB/sec
[info]                  ·gc.alloc.rate.norm:              49.897 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.092 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 49.698 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 21410859.406 ops/s
[info]                  ·gc.alloc.rate:                   669.037 MB/sec
[info]                  ·gc.alloc.rate.norm:              49.188 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.005 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.353 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 49.505 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 21434351.874 ops/s
[info]                  ·gc.alloc.rate:                   677.998 MB/sec
[info]                  ·gc.alloc.rate.norm:              49.793 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.322 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 49.450 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala":
[info]   21266809.208 ±(99.9%) 1181119.767 ops/s [Average]
[info]   (min, avg, max) = (20721154.698, 21266809.208, 21434351.874), stdev = 306733.053
[info]   CI (99.9%): [20085689.441, 22447928.975] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   668.463 ±(99.9%) 47.269 MB/sec [Average]
[info]   (min, avg, max) = (647.581, 668.463, 677.998), stdev = 12.276
[info]   CI (99.9%): [621.194, 715.732] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   49.469 ±(99.9%) 1.341 B/op [Average]
[info]   (min, avg, max) = (49.181, 49.469, 49.897), stdev = 0.348
[info]   CI (99.9%): [48.128, 50.809] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.548 ±(99.9%) 4.581 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.548, 2.675), stdev = 1.190
[info]   CI (99.9%): [≈ 0, 5.129] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.042 ±(99.9%) 0.348 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.203), stdev = 0.090
[info]   CI (99.9%): [≈ 0, 0.390] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   673.998 ±(99.9%) 2.572 MB/sec [Average]
[info]   (min, avg, max) = (673.322, 673.998, 674.885), stdev = 0.668
[info]   CI (99.9%): [671.426, 676.571] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   49.889 ±(99.9%) 2.961 B/op [Average]
[info]   (min, avg, max) = (49.450, 49.889, 51.254), stdev = 0.769
[info]   CI (99.9%): [46.928, 52.850] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 3.000), stdev = 1.095
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 3.61% complete, ETA 02:09:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 10677091.794 ops/s
[info] # Warmup Iteration   2: 21200953.100 ops/s
[info] # Warmup Iteration   3: 22608631.514 ops/s
[info] # Warmup Iteration   4: 22741041.601 ops/s
[info] # Warmup Iteration   5: 22740513.470 ops/s
[info] Iteration   1: 22764214.747 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 22807431.329 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 22727073.912 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 22517578.291 ops/s
[info]                  ·gc.alloc.rate:      7.256 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.507 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 22841937.162 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc":
[info]   22731647.088 ±(99.9%) 490160.533 ops/s [Average]
[info]   (min, avg, max) = (22517578.291, 22731647.088, 22841937.162), stdev = 127293.134
[info]   CI (99.9%): [22241486.555, 23221807.621] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   1.452 ±(99.9%) 12.496 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 1.452, 7.256), stdev = 3.245
[info]   CI (99.9%): [≈ 0, 13.947] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.101 ±(99.9%) 0.873 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁵, 0.101, 0.507), stdev = 0.227
[info]   CI (99.9%): [≈ 0, 0.975] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson
[info] # Run progress: 3.82% complete, ETA 02:09:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 21710.511 ops/s
[info] # Warmup Iteration   2: 1449037.566 ops/s
[info] # Warmup Iteration   3: 1726360.598 ops/s
[info] # Warmup Iteration   4: 1754189.423 ops/s
[info] # Warmup Iteration   5: 1758079.597 ops/s
[info] Iteration   1: 1756506.677 ops/s
[info]                  ·gc.alloc.rate:                   2700.998 MB/sec
[info]                  ·gc.alloc.rate.norm:              2420.658 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.075 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2703.603 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2422.993 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 1742287.493 ops/s
[info]                  ·gc.alloc.rate:                   2660.844 MB/sec
[info]                  ·gc.alloc.rate.norm:              2403.833 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.075 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2030.506 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1834.379 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 1752357.164 ops/s
[info]                  ·gc.alloc.rate:                   2715.525 MB/sec
[info]                  ·gc.alloc.rate.norm:              2439.328 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.075 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2710.727 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2435.019 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 1753142.117 ops/s
[info]                  ·gc.alloc.rate:                   2734.600 MB/sec
[info]                  ·gc.alloc.rate.norm:              2455.273 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.037 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2714.809 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2437.504 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 1758834.044 ops/s
[info]                  ·gc.alloc.rate:                   2743.257 MB/sec
[info]                  ·gc.alloc.rate.norm:              2455.150 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.075 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2717.485 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2432.085 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson":
[info]   1752625.499 ±(99.9%) 24416.152 ops/s [Average]
[info]   (min, avg, max) = (1742287.493, 1752625.499, 1758834.044), stdev = 6340.797
[info]   CI (99.9%): [1728209.347, 1777041.651] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   2711.045 ±(99.9%) 125.273 MB/sec [Average]
[info]   (min, avg, max) = (2660.844, 2711.045, 2743.257), stdev = 32.533
[info]   CI (99.9%): [2585.772, 2836.317] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   2434.849 ±(99.9%) 86.376 B/op [Average]
[info]   (min, avg, max) = (2403.833, 2434.849, 2455.273), stdev = 22.432
[info]   CI (99.9%): [2348.473, 2521.224] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   0.075 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.075, 0.083), stdev = 0.019
[info]   CI (99.9%): [0.003, 0.147] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   0.067 ±(99.9%) 0.064 B/op [Average]
[info]   (min, avg, max) = (0.037, 0.067, 0.075), stdev = 0.017
[info]   CI (99.9%): [0.003, 0.132] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   2575.426 ±(99.9%) 1173.155 MB/sec [Average]
[info]   (min, avg, max) = (2030.506, 2575.426, 2717.485), stdev = 304.665
[info]   CI (99.9%): [1402.271, 3748.581] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   2312.396 ±(99.9%) 1029.184 B/op [Average]
[info]   (min, avg, max) = (1834.379, 2312.396, 2437.504), stdev = 267.276
[info]   CI (99.9%): [1283.212, 3341.580] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefsBenchmark.writePlayJson:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 4.02% complete, ETA 02:08:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 147267.127 ops/s
[info] # Warmup Iteration   2: 294109.621 ops/s
[info] # Warmup Iteration   3: 294598.774 ops/s
[info] # Warmup Iteration   4: 306167.792 ops/s
[info] # Warmup Iteration   5: 304603.877 ops/s
[info] Iteration   1: 302985.592 ops/s
[info]                  ·gc.alloc.rate:                   1711.415 MB/sec
[info]                  ·gc.alloc.rate.norm:              8892.081 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.304 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6989.861 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 306542.461 ops/s
[info]                  ·gc.alloc.rate:                   1726.494 MB/sec
[info]                  ·gc.alloc.rate.norm:              8861.359 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.534 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2021.313 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10374.542 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 306971.058 ops/s
[info]                  ·gc.alloc.rate:                   1723.907 MB/sec
[info]                  ·gc.alloc.rate.norm:              8838.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.213 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.384 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6912.795 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 299653.315 ops/s
[info]                  ·gc.alloc.rate:                   1711.221 MB/sec
[info]                  ·gc.alloc.rate.norm:              8986.199 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.109 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2025.102 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10634.492 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 296573.309 ops/s
[info]                  ·gc.alloc.rate:                   1665.834 MB/sec
[info]                  ·gc.alloc.rate.norm:              8840.236 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.663 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1351.636 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7172.850 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce":
[info]   302545.147 ±(99.9%) 17197.635 ops/s [Average]
[info]   (min, avg, max) = (296573.309, 302545.147, 306971.058), stdev = 4466.171
[info]   CI (99.9%): [285347.512, 319742.782] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:·gc.alloc.rate":
[info]   1707.774 ±(99.9%) 94.219 MB/sec [Average]
[info]   (min, avg, max) = (1665.834, 1707.774, 1726.494), stdev = 24.469
[info]   CI (99.9%): [1613.555, 1801.994] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   8883.576 ±(99.9%) 236.216 B/op [Average]
[info]   (min, avg, max) = (8838.003, 8883.576, 8986.199), stdev = 61.345
[info]   CI (99.9%): [8647.359, 9119.792] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   0.058 ±(99.9%) 0.208 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.058, 0.125), stdev = 0.054
[info]   CI (99.9%): [≈ 0, 0.266] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.304 ±(99.9%) 1.090 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.304, 0.663), stdev = 0.283
[info]   CI (99.9%): [≈ 0, 1.394] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1618.348 ±(99.9%) 1423.176 MB/sec [Average]
[info]   (min, avg, max) = (1345.304, 1618.348, 2025.102), stdev = 369.594
[info]   CI (99.9%): [195.172, 3041.523] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   8416.908 ±(99.9%) 7355.766 B/op [Average]
[info]   (min, avg, max) = (6912.795, 8416.908, 10634.492), stdev = 1910.269
[info]   CI (99.9%): [1061.142, 15772.674] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readCirce:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 3.000), stdev = 0.707
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 4.22% complete, ETA 02:08:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 110572.471 ops/s
[info] # Warmup Iteration   2: 481942.829 ops/s
[info] # Warmup Iteration   3: 511109.538 ops/s
[info] # Warmup Iteration   4: 507910.435 ops/s
[info] # Warmup Iteration   5: 513146.989 ops/s
[info] Iteration   1: 513926.201 ops/s
[info]                  ·gc.alloc.rate:                   676.304 MB/sec
[info]                  ·gc.alloc.rate.norm:              2071.571 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.128 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.990 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2064.483 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 514730.420 ops/s
[info]                  ·gc.alloc.rate:                   673.509 MB/sec
[info]                  ·gc.alloc.rate.norm:              2059.559 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.064 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2061.255 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 514283.201 ops/s
[info]                  ·gc.alloc.rate:                   670.453 MB/sec
[info]                  ·gc.alloc.rate.norm:              2052.056 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.046 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2063.055 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 514168.663 ops/s
[info]                  ·gc.alloc.rate:                   674.913 MB/sec
[info]                  ·gc.alloc.rate.norm:              2066.263 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.255 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.028 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2063.552 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 514666.382 ops/s
[info]                  ·gc.alloc.rate:                   678.908 MB/sec
[info]                  ·gc.alloc.rate.norm:              2076.405 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2061.459 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala":
[info]   514354.973 ±(99.9%) 1308.149 ops/s [Average]
[info]   (min, avg, max) = (513926.201, 514354.973, 514730.420), stdev = 339.722
[info]   CI (99.9%): [513046.824, 515663.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   674.817 ±(99.9%) 12.132 MB/sec [Average]
[info]   (min, avg, max) = (670.453, 674.817, 678.908), stdev = 3.151
[info]   CI (99.9%): [662.685, 686.950] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   2065.171 ±(99.9%) 37.127 B/op [Average]
[info]   (min, avg, max) = (2052.056, 2065.171, 2076.405), stdev = 9.642
[info]   CI (99.9%): [2028.043, 2102.298] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.025 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.083), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.076 ±(99.9%) 0.439 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.076, 0.255), stdev = 0.114
[info]   CI (99.9%): [≈ 0, 0.515] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   674.030 ±(99.9%) 0.108 MB/sec [Average]
[info]   (min, avg, max) = (673.990, 674.030, 674.064), stdev = 0.028
[info]   CI (99.9%): [673.922, 674.138] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2062.761 ±(99.9%) 5.322 B/op [Average]
[info]   (min, avg, max) = (2061.255, 2062.761, 2064.483), stdev = 1.382
[info]   CI (99.9%): [2057.439, 2068.083] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 4.42% complete, ETA 02:08:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 914929.712 ops/s
[info] # Warmup Iteration   2: 1175107.366 ops/s
[info] # Warmup Iteration   3: 1168449.298 ops/s
[info] # Warmup Iteration   4: 1163033.871 ops/s
[info] # Warmup Iteration   5: 1203402.609 ops/s
[info] Iteration   1: 1181830.817 ops/s
[info]                  ·gc.alloc.rate:                   806.339 MB/sec
[info]                  ·gc.alloc.rate.norm:              1073.982 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.723 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 898.679 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 1164004.293 ops/s
[info]                  ·gc.alloc.rate:                   797.772 MB/sec
[info]                  ·gc.alloc.rate.norm:              1078.586 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.028 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.209 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 911.529 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 1193757.121 ops/s
[info]                  ·gc.alloc.rate:                   836.534 MB/sec
[info]                  ·gc.alloc.rate.norm:              1102.638 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.137 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.646 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1777.655 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 1184422.611 ops/s
[info]                  ·gc.alloc.rate:                   809.169 MB/sec
[info]                  ·gc.alloc.rate.norm:              1075.318 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.108 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 895.833 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 1203478.897 ops/s
[info]                  ·gc.alloc.rate:                   819.468 MB/sec
[info]                  ·gc.alloc.rate.norm:              1071.932 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.963 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 881.600 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala":
[info]   1185498.748 ±(99.9%) 56727.117 ops/s [Average]
[info]   (min, avg, max) = (1164004.293, 1185498.748, 1203478.897), stdev = 14731.852
[info]   CI (99.9%): [1128771.631, 1242225.865] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   813.856 ±(99.9%) 57.209 MB/sec [Average]
[info]   (min, avg, max) = (797.772, 813.856, 836.534), stdev = 14.857
[info]   CI (99.9%): [756.647, 871.066] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   1080.491 ±(99.9%) 48.574 B/op [Average]
[info]   (min, avg, max) = (1071.932, 1080.491, 1102.638), stdev = 12.614
[info]   CI (99.9%): [1031.918, 1129.065] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.025 ±(99.9%) 0.174 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.104), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.199] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.033 ±(99.9%) 0.229 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.137), stdev = 0.059
[info]   CI (99.9%): [≈ 0, 0.262] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   809.130 ±(99.9%) 1161.350 MB/sec [Average]
[info]   (min, avg, max) = (673.963, 809.130, 1348.646), stdev = 301.599
[info]   CI (99.9%): [≈ 0, 1970.480] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1073.059 ±(99.9%) 1517.249 B/op [Average]
[info]   (min, avg, max) = (881.600, 1073.059, 1777.655), stdev = 394.025
[info]   CI (99.9%): [≈ 0, 2590.308] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 4.62% complete, ETA 02:08:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 28268.558 ops/s
[info] # Warmup Iteration   2: 105205.272 ops/s
[info] # Warmup Iteration   3: 111052.328 ops/s
[info] # Warmup Iteration   4: 113493.212 ops/s
[info] # Warmup Iteration   5: 113527.975 ops/s
[info] Iteration   1: 113373.816 ops/s
[info]                  ·gc.alloc.rate:                   3577.064 MB/sec
[info]                  ·gc.alloc.rate.norm:              49664.266 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.445 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3388.960 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 47052.614 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 114584.112 ops/s
[info]                  ·gc.alloc.rate:                   3642.120 MB/sec
[info]                  ·gc.alloc.rate.norm:              50025.037 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.144 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3395.416 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 46636.520 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 113452.616 ops/s
[info]                  ·gc.alloc.rate:                   3634.461 MB/sec
[info]                  ·gc.alloc.rate.norm:              50428.598 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.155 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4078.728 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 56592.867 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 114112.798 ops/s
[info]                  ·gc.alloc.rate:                   3630.321 MB/sec
[info]                  ·gc.alloc.rate.norm:              50062.577 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.861 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3403.074 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 46928.813 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 109211.674 ops/s
[info]                  ·gc.alloc.rate:                   3477.898 MB/sec
[info]                  ·gc.alloc.rate.norm:              50123.252 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.800 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3403.772 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 49054.952 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson":
[info]   112947.003 ±(99.9%) 8265.375 ops/s [Average]
[info]   (min, avg, max) = (109211.674, 112947.003, 114584.112), stdev = 2146.492
[info]   CI (99.9%): [104681.629, 121212.378] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3592.373 ±(99.9%) 265.563 MB/sec [Average]
[info]   (min, avg, max) = (3477.898, 3592.373, 3642.120), stdev = 68.966
[info]   CI (99.9%): [3326.810, 3857.935] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   50060.746 ±(99.9%) 1050.487 B/op [Average]
[info]   (min, avg, max) = (49664.266, 50060.746, 50428.598), stdev = 272.808
[info]   CI (99.9%): [49010.259, 51111.232] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   0.092 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 0.092, 0.125), stdev = 0.024
[info]   CI (99.9%): [≈ 10⁻⁴, 0.183] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   1.281 ±(99.9%) 1.371 B/op [Average]
[info]   (min, avg, max) = (0.861, 1.281, 1.800), stdev = 0.356
[info]   CI (99.9%): [≈ 0, 2.652] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   3533.990 ±(99.9%) 1172.823 MB/sec [Average]
[info]   (min, avg, max) = (3388.960, 3533.990, 4078.728), stdev = 304.578
[info]   CI (99.9%): [2361.167, 4706.813] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   49253.153 ±(99.9%) 16223.323 B/op [Average]
[info]   (min, avg, max) = (46636.520, 49253.153, 56592.867), stdev = 4213.146
[info]   CI (99.9%): [33029.830, 65476.476] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 6.000), stdev = 0.837
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 4.82% complete, ETA 02:07:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 322895.383 ops/s
[info] # Warmup Iteration   2: 495265.836 ops/s
[info] # Warmup Iteration   3: 529426.477 ops/s
[info] # Warmup Iteration   4: 527785.153 ops/s
[info] # Warmup Iteration   5: 526734.029 ops/s
[info] Iteration   1: 533118.396 ops/s
[info]                  ·gc.alloc.rate:                   1664.164 MB/sec
[info]                  ·gc.alloc.rate.norm:              4912.673 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.246 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.663 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3972.445 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 525555.900 ops/s
[info]                  ·gc.alloc.rate:                   1657.131 MB/sec
[info]                  ·gc.alloc.rate.norm:              4963.215 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.062 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2019.863 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6049.619 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 532252.057 ops/s
[info]                  ·gc.alloc.rate:                   1663.459 MB/sec
[info]                  ·gc.alloc.rate.norm:              4919.815 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.185 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1347.948 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3986.666 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 528489.503 ops/s
[info]                  ·gc.alloc.rate:                   1652.055 MB/sec
[info]                  ·gc.alloc.rate.norm:              4920.248 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.062 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.525 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4019.235 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 520840.991 ops/s
[info]                  ·gc.alloc.rate:                   1655.115 MB/sec
[info]                  ·gc.alloc.rate.norm:              5002.113 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.126 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2026.270 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6123.825 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readUPickle":
[info]   528051.370 ±(99.9%) 19418.990 ops/s [Average]
[info]   (min, avg, max) = (520840.991, 528051.370, 533118.396), stdev = 5043.050
[info]   CI (99.9%): [508632.380, 547470.359] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readUPickle:·gc.alloc.rate":
[info]   1658.385 ±(99.9%) 20.328 MB/sec [Average]
[info]   (min, avg, max) = (1652.055, 1658.385, 1664.164), stdev = 5.279
[info]   CI (99.9%): [1638.057, 1678.712] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readUPickle:·gc.alloc.rate.norm":
[info]   4943.613 ±(99.9%) 147.587 B/op [Average]
[info]   (min, avg, max) = (4912.673, 4943.613, 5002.113), stdev = 38.328
[info]   CI (99.9%): [4796.026, 5091.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readUPickle:·gc.churn.PS_Eden_Space":
[info]   0.046 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.083), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   0.136 ±(99.9%) 0.307 B/op [Average]
[info]   (min, avg, max) = (0.062, 0.136, 0.246), stdev = 0.080
[info]   CI (99.9%): [≈ 0, 0.443] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readUPickle:·gc.churn.PS_Survivor_Space":
[info]   1617.854 ±(99.9%) 1424.416 MB/sec [Average]
[info]   (min, avg, max) = (1345.663, 1617.854, 2026.270), stdev = 369.916
[info]   CI (99.9%): [193.438, 3042.270] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   4830.358 ±(99.9%) 4417.934 B/op [Average]
[info]   (min, avg, max) = (3972.445, 4830.358, 6123.825), stdev = 1147.324
[info]   CI (99.9%): [412.424, 9248.292] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readUPickle:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.readUPickle:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.200, 3.000), stdev = 0.837
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 5.02% complete, ETA 02:07:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 176023.929 ops/s
[info] # Warmup Iteration   2: 348407.751 ops/s
[info] # Warmup Iteration   3: 354986.226 ops/s
[info] # Warmup Iteration   4: 350808.500 ops/s
[info] # Warmup Iteration   5: 354760.997 ops/s
[info] Iteration   1: 351653.810 ops/s
[info]                  ·gc.alloc.rate:                   556.903 MB/sec
[info]                  ·gc.alloc.rate.norm:              2493.407 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.520 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.329 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.892 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3012.721 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 353483.418 ops/s
[info]                  ·gc.alloc.rate:                   567.674 MB/sec
[info]                  ·gc.alloc.rate.norm:              2527.977 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.361 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2998.626 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   3: 355695.464 ops/s
[info]                  ·gc.alloc.rate:                   569.683 MB/sec
[info]                  ·gc.alloc.rate.norm:              2520.753 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.458 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2979.939 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 355487.111 ops/s
[info]                  ·gc.alloc.rate:      551.138 MB/sec
[info]                  ·gc.alloc.rate.norm: 2440.006 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 355632.687 ops/s
[info]                  ·gc.alloc.rate:                   575.359 MB/sec
[info]                  ·gc.alloc.rate.norm:              2546.633 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.184 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.697 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2981.891 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce":
[info]   354390.498 ±(99.9%) 6877.681 ops/s [Average]
[info]   (min, avg, max) = (351653.810, 354390.498, 355695.464), stdev = 1786.112
[info]   CI (99.9%): [347512.816, 361268.179] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:·gc.alloc.rate":
[info]   564.151 ±(99.9%) 38.047 MB/sec [Average]
[info]   (min, avg, max) = (551.138, 564.151, 575.359), stdev = 9.881
[info]   CI (99.9%): [526.104, 602.199] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   2505.755 ±(99.9%) 159.525 B/op [Average]
[info]   (min, avg, max) = (2440.006, 2505.755, 2546.633), stdev = 41.428
[info]   CI (99.9%): [2346.230, 2665.280] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   0.112 ±(99.9%) 0.881 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.112, 0.520), stdev = 0.229
[info]   CI (99.9%): [≈ 0, 0.993] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.503 ±(99.9%) 3.944 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.503, 2.329), stdev = 1.024
[info]   CI (99.9%): [≈ 0, 4.446] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   538.681 ±(99.9%) 1159.553 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 538.681, 673.697), stdev = 301.132
[info]   CI (99.9%): [≈ 0, 1698.235] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   2394.635 ±(99.9%) 5154.890 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2394.635, 3012.721), stdev = 1338.709
[info]   CI (99.9%): [≈ 0, 7549.525] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeCirce:·gc.time":
[info]   4.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 2.000), stdev = 0.837
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 5.22% complete, ETA 02:07:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 292363.039 ops/s
[info] # Warmup Iteration   2: 786369.223 ops/s
[info] # Warmup Iteration   3: 835542.522 ops/s
[info] # Warmup Iteration   4: 837563.535 ops/s
[info] # Warmup Iteration   5: 840524.327 ops/s
[info] Iteration   1: 837315.346 ops/s
[info]                  ·gc.alloc.rate:                   623.547 MB/sec
[info]                  ·gc.alloc.rate.norm:              1172.129 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1.186 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.230 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.404 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1265.850 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 822021.978 ops/s
[info]                  ·gc.alloc.rate:                   617.469 MB/sec
[info]                  ·gc.alloc.rate.norm:              1182.193 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.130 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1290.674 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 842780.487 ops/s
[info]                  ·gc.alloc.rate:                   625.513 MB/sec
[info]                  ·gc.alloc.rate.norm:              1168.127 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.129 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1258.916 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 826905.609 ops/s
[info]                  ·gc.alloc.rate:                   613.828 MB/sec
[info]                  ·gc.alloc.rate.norm:              1168.436 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.079 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.033 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1283.037 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 840253.569 ops/s
[info]                  ·gc.alloc.rate:                   630.295 MB/sec
[info]                  ·gc.alloc.rate.norm:              1180.619 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.113 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1262.695 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala":
[info]   833855.398 ±(99.9%) 34489.307 ops/s [Average]
[info]   (min, avg, max) = (822021.978, 833855.398, 842780.487), stdev = 8956.764
[info]   CI (99.9%): [799366.091, 868344.705] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   622.130 ±(99.9%) 25.159 MB/sec [Average]
[info]   (min, avg, max) = (613.828, 622.130, 630.295), stdev = 6.534
[info]   CI (99.9%): [596.971, 647.290] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1174.301 ±(99.9%) 25.790 B/op [Average]
[info]   (min, avg, max) = (1168.127, 1174.301, 1182.193), stdev = 6.698
[info]   CI (99.9%): [1148.511, 1200.090] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.246 ±(99.9%) 2.026 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.246, 1.186), stdev = 0.526
[info]   CI (99.9%): [≈ 0, 2.272] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.462 ±(99.9%) 3.809 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.462, 2.230), stdev = 0.989
[info]   CI (99.9%): [≈ 0, 4.271] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   673.962 ±(99.9%) 1.209 MB/sec [Average]
[info]   (min, avg, max) = (673.404, 673.962, 674.130), stdev = 0.314
[info]   CI (99.9%): [672.752, 675.171] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1272.235 ±(99.9%) 53.282 B/op [Average]
[info]   (min, avg, max) = (1258.916, 1272.235, 1290.674), stdev = 13.837
[info]   CI (99.9%): [1218.952, 1325.517] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 5.42% complete, ETA 02:07:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1662038.237 ops/s
[info] # Warmup Iteration   2: 2079741.150 ops/s
[info] # Warmup Iteration   3: 2082414.399 ops/s
[info] # Warmup Iteration   4: 2099154.527 ops/s
[info] # Warmup Iteration   5: 2110406.281 ops/s
[info] Iteration   1: 2131203.328 ops/s
[info]                  ·gc.alloc.rate:                   1000.002 MB/sec
[info]                  ·gc.alloc.rate.norm:              738.634 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.015 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.693 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 496.873 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 2136076.013 ops/s
[info]                  ·gc.alloc.rate:                   1030.401 MB/sec
[info]                  ·gc.alloc.rate.norm:              759.235 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.077 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.606 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 991.489 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 2155828.063 ops/s
[info]                  ·gc.alloc.rate:                   1014.466 MB/sec
[info]                  ·gc.alloc.rate.norm:              740.737 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.691 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 491.181 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 2137626.310 ops/s
[info]                  ·gc.alloc.rate:                   1020.460 MB/sec
[info]                  ·gc.alloc.rate.norm:              751.390 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.092 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.482 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 990.712 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 2129720.658 ops/s
[info]                  ·gc.alloc.rate:                   998.653 MB/sec
[info]                  ·gc.alloc.rate.norm:              738.185 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.306 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 497.695 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala":
[info]   2138090.874 ±(99.9%) 40219.518 ops/s [Average]
[info]   (min, avg, max) = (2129720.658, 2138090.874, 2155828.063), stdev = 10444.881
[info]   CI (99.9%): [2097871.356, 2178310.393] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1012.796 ±(99.9%) 52.203 MB/sec [Average]
[info]   (min, avg, max) = (998.653, 1012.796, 1030.401), stdev = 13.557
[info]   CI (99.9%): [960.593, 1064.999] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   745.636 ±(99.9%) 35.843 B/op [Average]
[info]   (min, avg, max) = (738.185, 745.636, 759.235), stdev = 9.308
[info]   CI (99.9%): [709.793, 781.480] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.050 ±(99.9%) 0.231 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.125), stdev = 0.060
[info]   CI (99.9%): [≈ 0, 0.281] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.037 ±(99.9%) 0.170 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.092), stdev = 0.044
[info]   CI (99.9%): [≈ 0, 0.207] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   941.956 ±(99.9%) 1418.670 MB/sec [Average]
[info]   (min, avg, max) = (672.691, 941.956, 1345.606), stdev = 368.424
[info]   CI (99.9%): [≈ 0, 2360.626] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   693.590 ±(99.9%) 1045.836 B/op [Average]
[info]   (min, avg, max) = (491.181, 693.590, 991.489), stdev = 271.600
[info]   CI (99.9%): [≈ 0, 1739.426] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 5.62% complete, ETA 02:07:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1783486.503 ops/s
[info] # Warmup Iteration   2: 2300176.734 ops/s
[info] # Warmup Iteration   3: 2338459.820 ops/s
[info] # Warmup Iteration   4: 2325246.002 ops/s
[info] # Warmup Iteration   5: 2337997.752 ops/s
[info] Iteration   1: 2339229.577 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 2337935.936 ops/s
[info]                  ·gc.alloc.rate:      0.170 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.115 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 2338588.510 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 2339068.592 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 2338075.191 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   2338579.561 ±(99.9%) 2220.718 ops/s [Average]
[info]   (min, avg, max) = (2337935.936, 2338579.561, 2339229.577), stdev = 576.713
[info]   CI (99.9%): [2336358.843, 2340800.279] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.034 ±(99.9%) 0.293 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.034, 0.170), stdev = 0.076
[info]   CI (99.9%): [≈ 0, 0.327] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.023 ±(99.9%) 0.197 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.023, 0.115), stdev = 0.051
[info]   CI (99.9%): [≈ 0, 0.220] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 5.82% complete, ETA 02:06:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 216906.126 ops/s
[info] # Warmup Iteration   2: 449091.634 ops/s
[info] # Warmup Iteration   3: 454923.049 ops/s
[info] # Warmup Iteration   4: 467100.613 ops/s
[info] # Warmup Iteration   5: 466957.639 ops/s
[info] Iteration   1: 468648.397 ops/s
[info]                  ·gc.alloc.rate:                   699.488 MB/sec
[info]                  ·gc.alloc.rate.norm:              2349.515 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.372 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2261.795 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 470047.688 ops/s
[info]                  ·gc.alloc.rate:                   695.261 MB/sec
[info]                  ·gc.alloc.rate.norm:              2328.033 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.070 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.442 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2254.973 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   3: 468899.598 ops/s
[info]                  ·gc.alloc.rate:                   697.039 MB/sec
[info]                  ·gc.alloc.rate.norm:              2339.707 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.770 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2261.602 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 465601.584 ops/s
[info]                  ·gc.alloc.rate:                   689.262 MB/sec
[info]                  ·gc.alloc.rate.norm:              2330.213 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.141 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.676 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2277.521 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 460644.949 ops/s
[info]                  ·gc.alloc.rate:                   688.204 MB/sec
[info]                  ·gc.alloc.rate.norm:              2350.764 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.311 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2303.307 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson":
[info]   466768.443 ±(99.9%) 14623.353 ops/s [Average]
[info]   (min, avg, max) = (460644.949, 466768.443, 470047.688), stdev = 3797.638
[info]   CI (99.9%): [452145.090, 481391.797] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.alloc.rate":
[info]   693.851 ±(99.9%) 18.949 MB/sec [Average]
[info]   (min, avg, max) = (688.204, 693.851, 699.488), stdev = 4.921
[info]   CI (99.9%): [674.902, 712.800] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   2339.646 ±(99.9%) 40.608 B/op [Average]
[info]   (min, avg, max) = (2328.033, 2339.646, 2350.764), stdev = 10.546
[info]   CI (99.9%): [2299.038, 2380.255] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   0.012 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   0.042 ±(99.9%) 0.242 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.141), stdev = 0.063
[info]   CI (99.9%): [≈ 0, 0.284] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   673.714 ±(99.9%) 1.430 MB/sec [Average]
[info]   (min, avg, max) = (673.372, 673.714, 674.311), stdev = 0.371
[info]   CI (99.9%): [672.284, 675.144] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   2271.840 ±(99.9%) 74.881 B/op [Average]
[info]   (min, avg, max) = (2254.973, 2271.840, 2303.307), stdev = 19.446
[info]   CI (99.9%): [2196.959, 2346.721] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 1.000
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 6.02% complete, ETA 02:06:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 131829.696 ops/s
[info] # Warmup Iteration   2: 182117.260 ops/s
[info] # Warmup Iteration   3: 182745.398 ops/s
[info] # Warmup Iteration   4: 180139.139 ops/s
[info] # Warmup Iteration   5: 182298.968 ops/s
[info] Iteration   1: 183187.027 ops/s
[info]                  ·gc.alloc.rate:                   481.965 MB/sec
[info]                  ·gc.alloc.rate.norm:              4142.003 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.634 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5797.791 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 184512.930 ops/s
[info]                  ·gc.alloc.rate:      468.880 MB/sec
[info]                  ·gc.alloc.rate.norm: 4000.031 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 184148.231 ops/s
[info]                  ·gc.alloc.rate:                   492.192 MB/sec
[info]                  ·gc.alloc.rate.norm:              4207.227 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2.706 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23.130 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.714 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5767.413 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 184958.767 ops/s
[info]                  ·gc.alloc.rate:                   486.615 MB/sec
[info]                  ·gc.alloc.rate.norm:              4141.171 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.036 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5736.149 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 185156.512 ops/s
[info]                  ·gc.alloc.rate:                   486.451 MB/sec
[info]                  ·gc.alloc.rate.norm:              4135.438 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.177 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.006 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5729.893 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeUPickle":
[info]   184392.693 ±(99.9%) 3002.335 ops/s [Average]
[info]   (min, avg, max) = (183187.027, 184392.693, 185156.512), stdev = 779.697
[info]   CI (99.9%): [181390.358, 187395.029] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeUPickle:·gc.alloc.rate":
[info]   483.221 ±(99.9%) 33.881 MB/sec [Average]
[info]   (min, avg, max) = (468.880, 483.221, 492.192), stdev = 8.799
[info]   CI (99.9%): [449.340, 517.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeUPickle:·gc.alloc.rate.norm":
[info]   4125.174 ±(99.9%) 292.230 B/op [Average]
[info]   (min, avg, max) = (4000.031, 4125.174, 4207.227), stdev = 75.891
[info]   CI (99.9%): [3832.944, 4417.404] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeUPickle:·gc.churn.PS_Eden_Space":
[info]   0.545 ±(99.9%) 4.651 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.545, 2.706), stdev = 1.208
[info]   CI (99.9%): [≈ 0, 5.196] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   4.661 ±(99.9%) 39.755 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4.661, 23.130), stdev = 10.324
[info]   CI (99.9%): [≈ 0, 44.417] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space":
[info]   539.478 ±(99.9%) 1161.268 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 539.478, 674.714), stdev = 301.578
[info]   CI (99.9%): [≈ 0, 1700.746] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   4606.249 ±(99.9%) 9915.848 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4606.249, 5797.791), stdev = 2575.114
[info]   CI (99.9%): [≈ 0, 14522.097] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeUPickle:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayBufferOfBooleansBenchmark.writeUPickle:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 3.000), stdev = 1.140
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 6.22% complete, ETA 02:06:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 8006.434 ops/s
[info] # Warmup Iteration   2: 16970.698 ops/s
[info] # Warmup Iteration   3: 16839.953 ops/s
[info] # Warmup Iteration   4: 17422.328 ops/s
[info] # Warmup Iteration   5: 17420.046 ops/s
[info] Iteration   1: 17088.040 ops/s
[info]                  ·gc.alloc.rate:                   1192.939 MB/sec
[info]                  ·gc.alloc.rate.norm:              109907.385 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.917 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.830 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 123993.452 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 17030.036 ops/s
[info]                  ·gc.alloc.rate:                   1204.844 MB/sec
[info]                  ·gc.alloc.rate.norm:              111348.290 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1347.572 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 124538.792 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 17428.024 ops/s
[info]                  ·gc.alloc.rate:                   1192.861 MB/sec
[info]                  ·gc.alloc.rate.norm:              107730.540 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.077 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 60877.684 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 17516.547 ops/s
[info]                  ·gc.alloc.rate:                   1203.761 MB/sec
[info]                  ·gc.alloc.rate.norm:              108172.789 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.870 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.359 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 121256.563 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 17489.729 ops/s
[info]                  ·gc.alloc.rate:                   1200.842 MB/sec
[info]                  ·gc.alloc.rate.norm:              108074.397 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.873 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.647 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 121556.655 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce":
[info]   17310.475 ±(99.9%) 895.924 ops/s [Average]
[info]   (min, avg, max) = (17030.036, 17310.475, 17516.547), stdev = 232.669
[info]   CI (99.9%): [16414.551, 18206.399] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:·gc.alloc.rate":
[info]   1199.050 ±(99.9%) 22.338 MB/sec [Average]
[info]   (min, avg, max) = (1192.861, 1199.050, 1204.844), stdev = 5.801
[info]   CI (99.9%): [1176.711, 1221.388] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   109046.680 ±(99.9%) 5927.824 B/op [Average]
[info]   (min, avg, max) = (107730.540, 109046.680, 111348.290), stdev = 1539.437
[info]   CI (99.9%): [103118.856, 114974.505] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   0.012 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.056] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1.132 ±(99.9%) 3.980 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.132, 1.917), stdev = 1.034
[info]   CI (99.9%): [≈ 0, 5.112] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1213.497 ±(99.9%) 1161.164 MB/sec [Average]
[info]   (min, avg, max) = (674.077, 1213.497, 1350.647), stdev = 301.551
[info]   CI (99.9%): [52.333, 2374.661] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   110444.629 ±(99.9%) 106841.893 B/op [Average]
[info]   (min, avg, max) = (60877.684, 110444.629, 124538.792), stdev = 27746.500
[info]   CI (99.9%): [3602.736, 217286.522] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readCirce:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 6.43% complete, ETA 02:06:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 10900.266 ops/s
[info] # Warmup Iteration   2: 29443.301 ops/s
[info] # Warmup Iteration   3: 30931.456 ops/s
[info] # Warmup Iteration   4: 30961.508 ops/s
[info] # Warmup Iteration   5: 30861.772 ops/s
[info] Iteration   1: 30995.009 ops/s
[info]                  ·gc.alloc.rate:                   793.112 MB/sec
[info]                  ·gc.alloc.rate.norm:              40280.843 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.014 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 34232.037 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 31058.961 ops/s
[info]                  ·gc.alloc.rate:                   789.877 MB/sec
[info]                  ·gc.alloc.rate.norm:              40029.291 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.048 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 34159.308 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 31085.585 ops/s
[info]                  ·gc.alloc.rate:                   796.596 MB/sec
[info]                  ·gc.alloc.rate.norm:              40329.349 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.181 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 34131.840 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 31141.429 ops/s
[info]                  ·gc.alloc.rate:                   805.226 MB/sec
[info]                  ·gc.alloc.rate.norm:              40692.935 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4.208 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.472 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 34085.116 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 31050.880 ops/s
[info]                  ·gc.alloc.rate:                   795.881 MB/sec
[info]                  ·gc.alloc.rate.norm:              40344.768 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.302 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 34181.687 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala":
[info]   31066.373 ±(99.9%) 205.481 ops/s [Average]
[info]   (min, avg, max) = (30995.009, 31066.373, 31141.429), stdev = 53.363
[info]   CI (99.9%): [30860.892, 31271.854] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   796.139 ±(99.9%) 22.056 MB/sec [Average]
[info]   (min, avg, max) = (789.877, 796.139, 805.226), stdev = 5.728
[info]   CI (99.9%): [774.083, 818.194] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   40335.437 ±(99.9%) 912.519 B/op [Average]
[info]   (min, avg, max) = (40029.291, 40335.437, 40692.935), stdev = 236.978
[info]   CI (99.9%): [39422.918, 41247.957] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.017 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.083), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.160] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.842 ±(99.9%) 7.246 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.842, 4.208), stdev = 1.882
[info]   CI (99.9%): [≈ 0, 8.088] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   674.203 ±(99.9%) 0.727 MB/sec [Average]
[info]   (min, avg, max) = (674.014, 674.203, 674.472), stdev = 0.189
[info]   CI (99.9%): [673.476, 674.930] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   34157.998 ±(99.9%) 211.265 B/op [Average]
[info]   (min, avg, max) = (34085.116, 34157.998, 34232.037), stdev = 54.865
[info]   CI (99.9%): [33946.733, 34369.263] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 6.63% complete, ETA 02:05:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 27496.234 ops/s
[info] # Warmup Iteration   2: 38922.783 ops/s
[info] # Warmup Iteration   3: 39067.686 ops/s
[info] # Warmup Iteration   4: 39260.703 ops/s
[info] # Warmup Iteration   5: 39710.774 ops/s
[info] Iteration   1: 39619.542 ops/s
[info]                  ·gc.alloc.rate:                   587.331 MB/sec
[info]                  ·gc.alloc.rate.norm:              23335.574 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2.851 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     113.290 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.008 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 26779.360 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 39819.867 ops/s
[info]                  ·gc.alloc.rate:      573.777 MB/sec
[info]                  ·gc.alloc.rate.norm: 22680.011 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 39883.365 ops/s
[info]                  ·gc.alloc.rate:                   590.885 MB/sec
[info]                  ·gc.alloc.rate.norm:              23320.191 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.376 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 26575.842 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 39802.747 ops/s
[info]                  ·gc.alloc.rate:                   590.715 MB/sec
[info]                  ·gc.alloc.rate.norm:              23361.950 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.330 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 26629.247 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 39522.866 ops/s
[info]                  ·gc.alloc.rate:                   598.163 MB/sec
[info]                  ·gc.alloc.rate.norm:              23823.745 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.690 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 26792.020 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala":
[info]   39729.677 ±(99.9%) 583.961 ops/s [Average]
[info]   (min, avg, max) = (39522.866, 39729.677, 39883.365), stdev = 151.653
[info]   CI (99.9%): [39145.716, 40313.638] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   588.174 ±(99.9%) 34.526 MB/sec [Average]
[info]   (min, avg, max) = (573.777, 588.174, 598.163), stdev = 8.966
[info]   CI (99.9%): [553.648, 622.700] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   23304.294 ±(99.9%) 1569.006 B/op [Average]
[info]   (min, avg, max) = (22680.011, 23304.294, 23823.745), stdev = 407.466
[info]   CI (99.9%): [21735.288, 24873.300] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.570 ±(99.9%) 4.910 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.570, 2.851), stdev = 1.275
[info]   CI (99.9%): [≈ 0, 5.481] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   22.658 ±(99.9%) 195.093 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 22.658, 113.290), stdev = 50.665
[info]   CI (99.9%): [≈ 0, 217.751] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   538.681 ±(99.9%) 1159.552 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 538.681, 674.008), stdev = 301.132
[info]   CI (99.9%): [≈ 0, 1698.233] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   21355.294 ±(99.9%) 45970.293 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 21355.294, 26792.020), stdev = 11938.339
[info]   CI (99.9%): [≈ 0, 67325.587] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 3.000), stdev = 1.095
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 6.83% complete, ETA 02:05:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6172.017 ops/s
[info] # Warmup Iteration   2: 27608.976 ops/s
[info] # Warmup Iteration   3: 28825.214 ops/s
[info] # Warmup Iteration   4: 28975.119 ops/s
[info] # Warmup Iteration   5: 28251.100 ops/s
[info] Iteration   1: 29005.536 ops/s
[info]                  ·gc.alloc.rate:                   1463.093 MB/sec
[info]                  ·gc.alloc.rate.norm:              79393.139 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.129 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.386 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 73168.652 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 29030.904 ops/s
[info]                  ·gc.alloc.rate:                   1466.733 MB/sec
[info]                  ·gc.alloc.rate.norm:              79525.724 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.129 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.084 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 73146.807 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 28994.369 ops/s
[info]                  ·gc.alloc.rate:                   1473.917 MB/sec
[info]                  ·gc.alloc.rate.norm:              80014.024 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.130 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.136 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 73294.374 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 28747.559 ops/s
[info]                  ·gc.alloc.rate:                   1437.038 MB/sec
[info]                  ·gc.alloc.rate.norm:              78682.383 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.140 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1351.417 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 73994.390 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 28976.111 ops/s
[info]                  ·gc.alloc.rate:                   1460.773 MB/sec
[info]                  ·gc.alloc.rate.norm:              79355.624 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.131 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1352.653 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 73482.087 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson":
[info]   28950.896 ±(99.9%) 444.323 ops/s [Average]
[info]   (min, avg, max) = (28747.559, 28950.896, 29030.904), stdev = 115.389
[info]   CI (99.9%): [28506.573, 29395.218] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1460.311 ±(99.9%) 53.633 MB/sec [Average]
[info]   (min, avg, max) = (1437.038, 1460.311, 1473.917), stdev = 13.928
[info]   CI (99.9%): [1406.678, 1513.944] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   79394.179 ±(99.9%) 1836.290 B/op [Average]
[info]   (min, avg, max) = (78682.383, 79394.179, 80014.024), stdev = 476.879
[info]   CI (99.9%): [77557.888, 81230.469] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   0.021 ±(99.9%) 0.001 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.021, 0.021), stdev = 0.001
[info]   CI (99.9%): [0.021, 0.021] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   1.132 ±(99.9%) 0.017 B/op [Average]
[info]   (min, avg, max) = (1.129, 1.132, 1.140), stdev = 0.005
[info]   CI (99.9%): [1.114, 1.149] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   1350.335 ±(99.9%) 6.656 MB/sec [Average]
[info]   (min, avg, max) = (1348.386, 1350.335, 1352.653), stdev = 1.728
[info]   CI (99.9%): [1343.680, 1356.991] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   73417.262 ±(99.9%) 1344.053 B/op [Average]
[info]   (min, avg, max) = (73146.807, 73417.262, 73994.390), stdev = 349.046
[info]   CI (99.9%): [72073.209, 74761.316] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 7.03% complete, ETA 02:05:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 9335.046 ops/s
[info] # Warmup Iteration   2: 23243.371 ops/s
[info] # Warmup Iteration   3: 23228.635 ops/s
[info] # Warmup Iteration   4: 23101.655 ops/s
[info] # Warmup Iteration   5: 23014.694 ops/s
[info] Iteration   1: 23340.937 ops/s
[info]                  ·gc.alloc.rate:                   1365.698 MB/sec
[info]                  ·gc.alloc.rate.norm:              92109.392 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.807 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.204 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 90996.958 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 23434.228 ops/s
[info]                  ·gc.alloc.rate:                   1367.995 MB/sec
[info]                  ·gc.alloc.rate.norm:              91860.102 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1351.154 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 90729.249 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 23485.155 ops/s
[info]                  ·gc.alloc.rate:                   1365.713 MB/sec
[info]                  ·gc.alloc.rate.norm:              91535.711 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.395 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1351.350 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 90573.040 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 23415.339 ops/s
[info]                  ·gc.alloc.rate:                   1360.516 MB/sec
[info]                  ·gc.alloc.rate.norm:              91460.946 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4.197 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1352.667 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 90933.299 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 23413.647 ops/s
[info]                  ·gc.alloc.rate:                   1386.052 MB/sec
[info]                  ·gc.alloc.rate.norm:              93178.777 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1353.432 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 90985.841 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce":
[info]   23417.861 ±(99.9%) 199.508 ops/s [Average]
[info]   (min, avg, max) = (23340.937, 23417.861, 23485.155), stdev = 51.812
[info]   CI (99.9%): [23218.353, 23617.370] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1369.195 ±(99.9%) 37.791 MB/sec [Average]
[info]   (min, avg, max) = (1360.516, 1369.195, 1386.052), stdev = 9.814
[info]   CI (99.9%): [1331.404, 1406.986] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   92028.986 ±(99.9%) 2669.886 B/op [Average]
[info]   (min, avg, max) = (91460.946, 92028.986, 93178.777), stdev = 693.361
[info]   CI (99.9%): [89359.099, 94698.872] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   0.025 ±(99.9%) 0.104 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.129] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1.680 ±(99.9%) 7.030 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.680, 4.197), stdev = 1.826
[info]   CI (99.9%): [≈ 0, 8.710] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   1351.561 ±(99.9%) 6.236 MB/sec [Average]
[info]   (min, avg, max) = (1349.204, 1351.561, 1353.432), stdev = 1.619
[info]   CI (99.9%): [1345.326, 1357.797] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   90843.677 ±(99.9%) 715.423 B/op [Average]
[info]   (min, avg, max) = (90573.040, 90843.677, 90996.958), stdev = 185.793
[info]   CI (99.9%): [90128.255, 91559.100] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeCirce:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 7.23% complete, ETA 02:05:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2244.832 ops/s
[info] # Warmup Iteration   2: 19689.658 ops/s
[info] # Warmup Iteration   3: 21901.719 ops/s
[info] # Warmup Iteration   4: 21581.846 ops/s
[info] # Warmup Iteration   5: 21925.898 ops/s
[info] Iteration   1: 21813.788 ops/s
[info]                  ·gc.alloc.rate:                   1245.085 MB/sec
[info]                  ·gc.alloc.rate.norm:              89844.692 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.502 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1347.371 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 97225.651 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 21871.613 ops/s
[info]                  ·gc.alloc.rate:                   1240.206 MB/sec
[info]                  ·gc.alloc.rate.norm:              89244.599 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.498 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.262 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 97020.243 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 21937.068 ops/s
[info]                  ·gc.alloc.rate:                   1220.533 MB/sec
[info]                  ·gc.alloc.rate.norm:              87573.978 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.060 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 48364.200 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 21927.695 ops/s
[info]                  ·gc.alloc.rate:                   1234.811 MB/sec
[info]                  ·gc.alloc.rate.norm:              88637.906 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5.976 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.404 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 96863.714 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 21852.665 ops/s
[info]                  ·gc.alloc.rate:                   1240.273 MB/sec
[info]                  ·gc.alloc.rate.norm:              89338.997 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.499 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.745 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 97296.492 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala":
[info]   21880.566 ±(99.9%) 199.451 ops/s [Average]
[info]   (min, avg, max) = (21813.788, 21880.566, 21937.068), stdev = 51.797
[info]   CI (99.9%): [21681.115, 22080.017] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1236.181 ±(99.9%) 36.478 MB/sec [Average]
[info]   (min, avg, max) = (1220.533, 1236.181, 1245.085), stdev = 9.473
[info]   CI (99.9%): [1199.703, 1272.660] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   88928.034 ±(99.9%) 3349.733 B/op [Average]
[info]   (min, avg, max) = (87573.978, 88928.034, 89844.692), stdev = 869.915
[info]   CI (99.9%): [85578.302, 92277.767] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.029 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.083), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.151] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   2.095 ±(99.9%) 8.721 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.095, 5.976), stdev = 2.265
[info]   CI (99.9%): [≈ 0, 10.816] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1213.968 ±(99.9%) 1162.205 MB/sec [Average]
[info]   (min, avg, max) = (674.060, 1213.968, 1350.745), stdev = 301.821
[info]   CI (99.9%): [51.764, 2376.173] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   87354.060 ±(99.9%) 83931.188 B/op [Average]
[info]   (min, avg, max) = (48364.200, 87354.060, 97296.492), stdev = 21796.663
[info]   CI (99.9%): [3422.872, 171285.248] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 3.000), stdev = 0.707
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 7.43% complete, ETA 02:04:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 15432.189 ops/s
[info] # Warmup Iteration   2: 24450.272 ops/s
[info] # Warmup Iteration   3: 24838.164 ops/s
[info] # Warmup Iteration   4: 25058.771 ops/s
[info] # Warmup Iteration   5: 24297.037 ops/s
[info] Iteration   1: 24674.980 ops/s
[info]                  ·gc.alloc.rate:                   1327.642 MB/sec
[info]                  ·gc.alloc.rate.norm:              84692.318 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7.967 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.429 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 85826.959 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 24419.914 ops/s
[info]                  ·gc.alloc.rate:                   1279.356 MB/sec
[info]                  ·gc.alloc.rate.norm:              82444.966 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.871 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 43361.520 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 25105.051 ops/s
[info]                  ·gc.alloc.rate:                   1329.320 MB/sec
[info]                  ·gc.alloc.rate.norm:              83343.578 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.610 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.766 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 84374.664 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 25084.594 ops/s
[info]                  ·gc.alloc.rate:                   1338.312 MB/sec
[info]                  ·gc.alloc.rate.norm:              83962.626 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1347.005 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 84507.978 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 25189.051 ops/s
[info]                  ·gc.alloc.rate:                   1356.584 MB/sec
[info]                  ·gc.alloc.rate.norm:              84789.733 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.301 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1347.773 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 84239.018 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala":
[info]   24894.718 ±(99.9%) 1278.055 ops/s [Average]
[info]   (min, avg, max) = (24419.914, 24894.718, 25189.051), stdev = 331.907
[info]   CI (99.9%): [23616.663, 26172.773] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1326.243 ±(99.9%) 110.199 MB/sec [Average]
[info]   (min, avg, max) = (1279.356, 1326.243, 1356.584), stdev = 28.618
[info]   CI (99.9%): [1216.044, 1436.442] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   83846.644 ±(99.9%) 3770.786 B/op [Average]
[info]   (min, avg, max) = (82444.966, 83846.644, 84789.733), stdev = 979.261
[info]   CI (99.9%): [80075.859, 87617.430] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.037 ±(99.9%) 0.200 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.125), stdev = 0.052
[info]   CI (99.9%): [≈ 0, 0.237] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   2.375 ±(99.9%) 12.736 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.375, 7.967), stdev = 3.307
[info]   CI (99.9%): [≈ 0, 15.111] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   1211.769 ±(99.9%) 1160.024 MB/sec [Average]
[info]   (min, avg, max) = (672.871, 1211.769, 1347.773), stdev = 301.255
[info]   CI (99.9%): [51.745, 2371.793] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   76462.028 ±(99.9%) 71293.460 B/op [Average]
[info]   (min, avg, max) = (43361.520, 76462.028, 85826.959), stdev = 18514.685
[info]   CI (99.9%): [5168.568, 147755.488] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 3.000), stdev = 0.837
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 7.63% complete, ETA 02:04:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 16014.294 ops/s
[info] # Warmup Iteration   2: 25781.553 ops/s
[info] # Warmup Iteration   3: 26283.640 ops/s
[info] # Warmup Iteration   4: 26197.682 ops/s
[info] # Warmup Iteration   5: 25805.217 ops/s
[info] Iteration   1: 25876.525 ops/s
[info]                  ·gc.alloc.rate:                   1386.094 MB/sec
[info]                  ·gc.alloc.rate.norm:              84319.023 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.187 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11.395 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1346.689 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 81921.899 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 26443.938 ops/s
[info]                  ·gc.alloc.rate:                   1395.216 MB/sec
[info]                  ·gc.alloc.rate.norm:              83044.574 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.239 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1346.796 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 80162.602 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 26443.054 ops/s
[info]                  ·gc.alloc.rate:                   1380.177 MB/sec
[info]                  ·gc.alloc.rate.norm:              82141.310 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.239 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1347.647 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 80205.280 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 26491.379 ops/s
[info]                  ·gc.alloc.rate:                   1394.499 MB/sec
[info]                  ·gc.alloc.rate.norm:              82848.205 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.081 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 80090.487 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 26461.088 ops/s
[info]                  ·gc.alloc.rate:                   1405.713 MB/sec
[info]                  ·gc.alloc.rate.norm:              83621.828 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.360 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 80269.590 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc":
[info]   26343.197 ±(99.9%) 1007.368 ops/s [Average]
[info]   (min, avg, max) = (25876.525, 26343.197, 26491.379), stdev = 261.610
[info]   CI (99.9%): [25335.829, 27350.564] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   1392.340 ±(99.9%) 37.467 MB/sec [Average]
[info]   (min, avg, max) = (1380.177, 1392.340, 1405.713), stdev = 9.730
[info]   CI (99.9%): [1354.873, 1429.807] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   83194.988 ±(99.9%) 3162.904 B/op [Average]
[info]   (min, avg, max) = (82141.310, 83194.988, 84319.023), stdev = 821.396
[info]   CI (99.9%): [80032.084, 86357.892] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   0.046 ±(99.9%) 0.307 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.187), stdev = 0.080
[info]   CI (99.9%): [≈ 0, 0.353] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   2.775 ±(99.9%) 18.709 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.775, 11.395), stdev = 4.859
[info]   CI (99.9%): [≈ 0, 21.483] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space":
[info]   1347.715 ±(99.9%) 4.193 MB/sec [Average]
[info]   (min, avg, max) = (1346.689, 1347.715, 1349.360), stdev = 1.089
[info]   CI (99.9%): [1343.522, 1351.908] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   80529.972 ±(99.9%) 3006.704 B/op [Average]
[info]   (min, avg, max) = (80090.487, 80529.972, 81921.899), stdev = 780.832
[info]   CI (99.9%): [77523.267, 83536.676] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 7.83% complete, ETA 02:04:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2265.420 ops/s
[info] # Warmup Iteration   2: 7222.672 ops/s
[info] # Warmup Iteration   3: 7653.270 ops/s
[info] # Warmup Iteration   4: 7666.192 ops/s
[info] # Warmup Iteration   5: 7665.973 ops/s
[info] Iteration   1: 7672.863 ops/s
[info]                  ·gc.alloc.rate:                   1013.837 MB/sec
[info]                  ·gc.alloc.rate.norm:              207975.916 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.996 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 138261.747 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 7282.966 ops/s
[info]                  ·gc.alloc.rate:                   973.855 MB/sec
[info]                  ·gc.alloc.rate.norm:              210387.260 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4.498 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.515 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 291327.086 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 7655.252 ops/s
[info]                  ·gc.alloc.rate:                   1014.209 MB/sec
[info]                  ·gc.alloc.rate.norm:              208528.173 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.038 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 138586.772 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 7568.872 ops/s
[info]                  ·gc.alloc.rate:                   1018.661 MB/sec
[info]                  ·gc.alloc.rate.norm:              211768.146 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4.329 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.934 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 280636.060 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 7627.123 ops/s
[info]                  ·gc.alloc.rate:                   1013.815 MB/sec
[info]                  ·gc.alloc.rate.norm:              209205.760 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      675.391 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 139370.306 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson":
[info]   7561.415 ±(99.9%) 618.304 ops/s [Average]
[info]   (min, avg, max) = (7282.966, 7561.415, 7672.863), stdev = 160.572
[info]   CI (99.9%): [6943.111, 8179.719] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1006.875 ±(99.9%) 71.514 MB/sec [Average]
[info]   (min, avg, max) = (973.855, 1006.875, 1018.661), stdev = 18.572
[info]   CI (99.9%): [935.361, 1078.390] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   209573.051 ±(99.9%) 5858.452 B/op [Average]
[info]   (min, avg, max) = (207975.916, 209573.051, 211768.146), stdev = 1521.421
[info]   CI (99.9%): [203714.599, 215431.503] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   0.008 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   1.765 ±(99.9%) 9.311 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.765, 4.498), stdev = 2.418
[info]   CI (99.9%): [≈ 0, 11.076] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   944.375 ±(99.9%) 1423.106 MB/sec [Average]
[info]   (min, avg, max) = (673.996, 944.375, 1349.934), stdev = 369.576
[info]   CI (99.9%): [≈ 0, 2367.481] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   197636.394 ±(99.9%) 310890.520 B/op [Average]
[info]   (min, avg, max) = (138261.747, 197636.394, 291327.086), stdev = 80737.281
[info]   CI (99.9%): [≈ 0, 508526.914] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 8.03% complete, ETA 02:04:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6590.280 ops/s
[info] # Warmup Iteration   2: 17565.331 ops/s
[info] # Warmup Iteration   3: 17711.902 ops/s
[info] # Warmup Iteration   4: 17821.945 ops/s
[info] # Warmup Iteration   5: 17693.927 ops/s
[info] Iteration   1: 17803.232 ops/s
[info]                  ·gc.alloc.rate:                   1413.037 MB/sec
[info]                  ·gc.alloc.rate.norm:              124944.861 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1347.301 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 119132.273 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 17320.973 ops/s
[info]                  ·gc.alloc.rate:                   1392.082 MB/sec
[info]                  ·gc.alloc.rate.norm:              126469.529 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.891 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.135 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 122567.906 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 17703.059 ops/s
[info]                  ·gc.alloc.rate:                   1395.134 MB/sec
[info]                  ·gc.alloc.rate.norm:              124026.376 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.851 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.315 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 120041.994 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 17809.602 ops/s
[info]                  ·gc.alloc.rate:                   1428.775 MB/sec
[info]                  ·gc.alloc.rate.norm:              126269.998 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1351.477 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 119438.652 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 17831.984 ops/s
[info]                  ·gc.alloc.rate:                   1417.299 MB/sec
[info]                  ·gc.alloc.rate.norm:              125083.089 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.837 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1352.930 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 119402.212 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce":
[info]   17693.770 ±(99.9%) 824.897 ops/s [Average]
[info]   (min, avg, max) = (17320.973, 17693.770, 17831.984), stdev = 214.223
[info]   CI (99.9%): [16868.873, 18518.667] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:·gc.alloc.rate":
[info]   1409.265 ±(99.9%) 59.479 MB/sec [Average]
[info]   (min, avg, max) = (1392.082, 1409.265, 1428.775), stdev = 15.447
[info]   CI (99.9%): [1349.786, 1468.744] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   125358.770 ±(99.9%) 3892.159 B/op [Average]
[info]   (min, avg, max) = (124026.376, 125358.770, 126469.529), stdev = 1010.781
[info]   CI (99.9%): [121466.611, 129250.930] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   0.012 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.056] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1.116 ±(99.9%) 3.923 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.116, 1.891), stdev = 1.019
[info]   CI (99.9%): [≈ 0, 5.039] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1350.232 ±(99.9%) 8.311 MB/sec [Average]
[info]   (min, avg, max) = (1347.301, 1350.232, 1352.930), stdev = 2.158
[info]   CI (99.9%): [1341.921, 1358.542] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   120116.607 ±(99.9%) 5429.725 B/op [Average]
[info]   (min, avg, max) = (119132.273, 120116.607, 122567.906), stdev = 1410.082
[info]   CI (99.9%): [114686.882, 125546.333] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readCirce:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 8.23% complete, ETA 02:03:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 12194.000 ops/s
[info] # Warmup Iteration   2: 34738.488 ops/s
[info] # Warmup Iteration   3: 36223.909 ops/s
[info] # Warmup Iteration   4: 35958.861 ops/s
[info] # Warmup Iteration   5: 36538.479 ops/s
[info] Iteration   1: 36021.533 ops/s
[info]                  ·gc.alloc.rate:                   925.692 MB/sec
[info]                  ·gc.alloc.rate.norm:              40436.231 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.729 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1347.251 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 58850.881 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 35926.016 ops/s
[info]                  ·gc.alloc.rate:                   899.643 MB/sec
[info]                  ·gc.alloc.rate.norm:              39399.461 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.617 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 29500.775 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 36378.251 ops/s
[info]                  ·gc.alloc.rate:                   919.092 MB/sec
[info]                  ·gc.alloc.rate.norm:              39768.947 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.688 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 29150.326 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 36438.341 ops/s
[info]                  ·gc.alloc.rate:                   934.716 MB/sec
[info]                  ·gc.alloc.rate.norm:              40376.656 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.798 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1347.767 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 58219.057 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 36386.382 ops/s
[info]                  ·gc.alloc.rate:                   911.682 MB/sec
[info]                  ·gc.alloc.rate.norm:              39442.534 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.990 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 29159.126 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala":
[info]   36230.104 ±(99.9%) 914.688 ops/s [Average]
[info]   (min, avg, max) = (35926.016, 36230.104, 36438.341), stdev = 237.542
[info]   CI (99.9%): [35315.416, 37144.793] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   918.165 ±(99.9%) 51.538 MB/sec [Average]
[info]   (min, avg, max) = (899.643, 918.165, 934.716), stdev = 13.384
[info]   CI (99.9%): [866.627, 969.703] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   39884.766 ±(99.9%) 1916.227 B/op [Average]
[info]   (min, avg, max) = (39399.461, 39884.766, 40436.231), stdev = 497.638
[info]   CI (99.9%): [37968.539, 41800.993] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.021 ±(99.9%) 0.113 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.062), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.905 ±(99.9%) 4.939 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.905, 2.729), stdev = 1.283
[info]   CI (99.9%): [≈ 0, 5.844] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   943.262 ±(99.9%) 1420.984 MB/sec [Average]
[info]   (min, avg, max) = (673.617, 943.262, 1347.767), stdev = 369.025
[info]   CI (99.9%): [≈ 0, 2364.246] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   40976.033 ±(99.9%) 61730.525 B/op [Average]
[info]   (min, avg, max) = (29150.326, 40976.033, 58850.881), stdev = 16031.221
[info]   CI (99.9%): [≈ 0, 102706.558] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJacksonScala:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 3.000), stdev = 0.894
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 8.43% complete, ETA 02:03:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 44776.652 ops/s
[info] # Warmup Iteration   2: 58907.302 ops/s
[info] # Warmup Iteration   3: 58498.372 ops/s
[info] # Warmup Iteration   4: 59943.347 ops/s
[info] # Warmup Iteration   5: 59760.934 ops/s
[info] Iteration   1: 60040.112 ops/s
[info]                  ·gc.alloc.rate:                   800.568 MB/sec
[info]                  ·gc.alloc.rate.norm:              20989.795 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.331 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17653.794 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 59992.322 ops/s
[info]                  ·gc.alloc.rate:                   816.387 MB/sec
[info]                  ·gc.alloc.rate.norm:              21421.417 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.546 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1346.032 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 35318.946 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 59827.666 ops/s
[info]                  ·gc.alloc.rate:                   809.943 MB/sec
[info]                  ·gc.alloc.rate.norm:              21307.230 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.800 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17699.408 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 60089.030 ops/s
[info]                  ·gc.alloc.rate:                   794.022 MB/sec
[info]                  ·gc.alloc.rate.norm:              20799.257 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.727 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17621.953 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   5: 59487.179 ops/s
[info]                  ·gc.alloc.rate:                   786.606 MB/sec
[info]                  ·gc.alloc.rate.norm:              20814.489 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.652 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.717 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17800.853 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala":
[info]   59887.262 ±(99.9%) 940.711 ops/s [Average]
[info]   (min, avg, max) = (59487.179, 59887.262, 60089.030), stdev = 244.300
[info]   CI (99.9%): [58946.551, 60827.972] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   801.505 ±(99.9%) 46.028 MB/sec [Average]
[info]   (min, avg, max) = (786.606, 801.505, 816.387), stdev = 11.953
[info]   CI (99.9%): [755.478, 847.533] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   21066.438 ±(99.9%) 1097.146 B/op [Average]
[info]   (min, avg, max) = (20799.257, 21066.438, 21421.417), stdev = 284.925
[info]   CI (99.9%): [19969.292, 22163.583] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.017 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.440 ±(99.9%) 2.765 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.440, 1.652), stdev = 0.718
[info]   CI (99.9%): [≈ 0, 3.204] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   807.521 ±(99.9%) 1159.186 MB/sec [Average]
[info]   (min, avg, max) = (672.717, 807.521, 1346.032), stdev = 301.037
[info]   CI (99.9%): [≈ 0, 1966.707] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   21218.991 ±(99.9%) 30352.332 B/op [Average]
[info]   (min, avg, max) = (17621.953, 21218.991, 35318.946), stdev = 7882.404
[info]   CI (99.9%): [≈ 0, 51571.323] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 2.000), stdev = 0.894
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 8.63% complete, ETA 02:03:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 952.485 ops/s
[info] # Warmup Iteration   2: 21958.185 ops/s
[info] # Warmup Iteration   3: 27050.696 ops/s
[info] # Warmup Iteration   4: 27442.619 ops/s
[info] # Warmup Iteration   5: 27212.034 ops/s
[info] Iteration   1: 27587.170 ops/s
[info]                  ·gc.alloc.rate:                   1749.441 MB/sec
[info]                  ·gc.alloc.rate.norm:              99814.830 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2023.452 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 115448.624 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 27061.301 ops/s
[info]                  ·gc.alloc.rate:                   1706.240 MB/sec
[info]                  ·gc.alloc.rate.norm:              99245.142 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.421 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.983 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 78523.110 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 27494.301 ops/s
[info]                  ·gc.alloc.rate:                   1746.296 MB/sec
[info]                  ·gc.alloc.rate.norm:              99973.275 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.192 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2026.764 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 116029.701 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 27328.901 ops/s
[info]                  ·gc.alloc.rate:                   1720.530 MB/sec
[info]                  ·gc.alloc.rate.norm:              99107.726 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1352.292 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 77896.080 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 27580.864 ops/s
[info]                  ·gc.alloc.rate:                   1750.342 MB/sec
[info]                  ·gc.alloc.rate.norm:              99895.033 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4.751 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2030.302 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 115872.836 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson":
[info]   27410.507 ±(99.9%) 852.066 ops/s [Average]
[info]   (min, avg, max) = (27061.301, 27410.507, 27587.170), stdev = 221.279
[info]   CI (99.9%): [26558.442, 28262.573] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1734.570 ±(99.9%) 77.184 MB/sec [Average]
[info]   (min, avg, max) = (1706.240, 1734.570, 1750.342), stdev = 20.044
[info]   CI (99.9%): [1657.386, 1811.754] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   99607.201 ±(99.9%) 1540.893 B/op [Average]
[info]   (min, avg, max) = (99107.726, 99607.201, 99973.275), stdev = 400.165
[info]   CI (99.9%): [98066.308, 101148.094] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   0.029 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.083), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   1.673 ±(99.9%) 7.669 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.673, 4.751), stdev = 1.992
[info]   CI (99.9%): [≈ 0, 9.341] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   1756.558 ±(99.9%) 1425.146 MB/sec [Average]
[info]   (min, avg, max) = (1349.983, 1756.558, 2030.302), stdev = 370.106
[info]   CI (99.9%): [331.412, 3181.705] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   100754.070 ±(99.9%) 79255.830 B/op [Average]
[info]   (min, avg, max) = (77896.080, 100754.070, 116029.701), stdev = 20582.487
[info]   CI (99.9%): [21498.240, 180009.901] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.readPlayJson:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 8.84% complete, ETA 02:03:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7273.293 ops/s
[info] # Warmup Iteration   2: 23875.855 ops/s
[info] # Warmup Iteration   3: 25172.789 ops/s
[info] # Warmup Iteration   4: 25293.572 ops/s
[info] # Warmup Iteration   5: 25301.102 ops/s
[info] Iteration   1: 25504.730 ops/s
[info]                  ·gc.alloc.rate:                   1481.655 MB/sec
[info]                  ·gc.alloc.rate.norm:              91446.623 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.284 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.248 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 83212.815 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 25306.392 ops/s
[info]                  ·gc.alloc.rate:                   1473.744 MB/sec
[info]                  ·gc.alloc.rate.norm:              91669.048 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.365 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 83932.479 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 25473.082 ops/s
[info]                  ·gc.alloc.rate:                   1473.931 MB/sec
[info]                  ·gc.alloc.rate.norm:              91053.446 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.286 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.807 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 83447.338 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 25144.434 ops/s
[info]                  ·gc.alloc.rate:                   1476.189 MB/sec
[info]                  ·gc.alloc.rate.norm:              92403.655 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.303 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1351.547 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 84601.587 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 25509.186 ops/s
[info]                  ·gc.alloc.rate:                   1485.191 MB/sec
[info]                  ·gc.alloc.rate.norm:              91651.848 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.569 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1352.609 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 83470.168 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala":
[info]   25387.565 ±(99.9%) 613.493 ops/s [Average]
[info]   (min, avg, max) = (25144.434, 25387.565, 25509.186), stdev = 159.322
[info]   CI (99.9%): [24774.072, 26001.057] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1478.142 ±(99.9%) 19.532 MB/sec [Average]
[info]   (min, avg, max) = (1473.744, 1478.142, 1485.191), stdev = 5.072
[info]   CI (99.9%): [1458.610, 1497.674] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   91644.924 ±(99.9%) 1891.791 B/op [Average]
[info]   (min, avg, max) = (91053.446, 91644.924, 92403.655), stdev = 491.292
[info]   CI (99.9%): [89753.133, 93536.715] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.021 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.077] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1.288 ±(99.9%) 3.497 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.288, 2.569), stdev = 0.908
[info]   CI (99.9%): [≈ 0, 4.786] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1350.515 ±(99.9%) 6.669 MB/sec [Average]
[info]   (min, avg, max) = (1348.248, 1350.515, 1352.609), stdev = 1.732
[info]   CI (99.9%): [1343.846, 1357.184] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   83732.877 ±(99.9%) 2122.672 B/op [Average]
[info]   (min, avg, max) = (83212.815, 83732.877, 84601.587), stdev = 551.251
[info]   CI (99.9%): [81610.206, 85855.549] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 9.04% complete, ETA 02:02:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 25721.552 ops/s
[info] # Warmup Iteration   2: 33871.464 ops/s
[info] # Warmup Iteration   3: 33967.077 ops/s
[info] # Warmup Iteration   4: 34455.035 ops/s
[info] # Warmup Iteration   5: 34872.243 ops/s
[info] Iteration   1: 34646.880 ops/s
[info]                  ·gc.alloc.rate:                   1403.622 MB/sec
[info]                  ·gc.alloc.rate.norm:              63769.975 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4.728 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1344.046 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 61063.295 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 35044.836 ops/s
[info]                  ·gc.alloc.rate:                   1426.918 MB/sec
[info]                  ·gc.alloc.rate.norm:              64092.072 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4.674 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2018.406 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 90659.598 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 35135.693 ops/s
[info]                  ·gc.alloc.rate:                   1424.419 MB/sec
[info]                  ·gc.alloc.rate.norm:              63810.461 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1346.459 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 60318.035 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 35168.332 ops/s
[info]                  ·gc.alloc.rate:                   1412.946 MB/sec
[info]                  ·gc.alloc.rate.norm:              63237.366 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4.658 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1347.709 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 60317.638 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 35126.329 ops/s
[info]                  ·gc.alloc.rate:                   1424.326 MB/sec
[info]                  ·gc.alloc.rate.norm:              63825.360 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.798 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.437 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 60469.514 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala":
[info]   35024.414 ±(99.9%) 831.309 ops/s [Average]
[info]   (min, avg, max) = (34646.880, 35024.414, 35168.332), stdev = 215.888
[info]   CI (99.9%): [34193.105, 35855.723] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1418.446 ±(99.9%) 38.121 MB/sec [Average]
[info]   (min, avg, max) = (1403.622, 1418.446, 1426.918), stdev = 9.900
[info]   CI (99.9%): [1380.325, 1456.567] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   63747.047 ±(99.9%) 1201.588 B/op [Average]
[info]   (min, avg, max) = (63237.366, 63747.047, 64092.072), stdev = 312.048
[info]   CI (99.9%): [62545.459, 64948.635] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.075 ±(99.9%) 0.176 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.075, 0.104), stdev = 0.046
[info]   CI (99.9%): [≈ 0, 0.251] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   3.372 ±(99.9%) 7.912 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.372, 4.728), stdev = 2.055
[info]   CI (99.9%): [≈ 0, 11.284] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   1481.211 ±(99.9%) 1156.377 MB/sec [Average]
[info]   (min, avg, max) = (1344.046, 1481.211, 2018.406), stdev = 300.308
[info]   CI (99.9%): [324.834, 2637.589] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   66565.616 ±(99.9%) 51877.602 B/op [Average]
[info]   (min, avg, max) = (60317.638, 66565.616, 90659.598), stdev = 13472.448
[info]   CI (99.9%): [14688.014, 118443.218] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 9.24% complete, ETA 02:02:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 22406.970 ops/s
[info] # Warmup Iteration   2: 35340.196 ops/s
[info] # Warmup Iteration   3: 35167.274 ops/s
[info] # Warmup Iteration   4: 34856.535 ops/s
[info] # Warmup Iteration   5: 35691.357 ops/s
[info] Iteration   1: 35796.989 ops/s
[info]                  ·gc.alloc.rate:                   1386.139 MB/sec
[info]                  ·gc.alloc.rate.norm:              60946.529 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.746 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.519 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 59160.504 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 35626.779 ops/s
[info]                  ·gc.alloc.rate:                   1372.696 MB/sec
[info]                  ·gc.alloc.rate.norm:              60653.996 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3.678 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.283 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 59442.750 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 35493.336 ops/s
[info]                  ·gc.alloc.rate:                   1371.961 MB/sec
[info]                  ·gc.alloc.rate.norm:              60835.978 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.846 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1346.268 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 59696.670 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 35645.107 ops/s
[info]                  ·gc.alloc.rate:                   1375.003 MB/sec
[info]                  ·gc.alloc.rate.norm:              60720.220 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4.595 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1347.280 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 59495.968 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 35158.604 ops/s
[info]                  ·gc.alloc.rate:                   1364.783 MB/sec
[info]                  ·gc.alloc.rate.norm:              61099.818 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.864 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.771 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 60382.949 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc":
[info]   35544.163 ±(99.9%) 927.707 ops/s [Average]
[info]   (min, avg, max) = (35158.604, 35544.163, 35796.989), stdev = 240.923
[info]   CI (99.9%): [34616.456, 36471.870] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   1374.116 ±(99.9%) 29.771 MB/sec [Average]
[info]   (min, avg, max) = (1364.783, 1374.116, 1386.139), stdev = 7.731
[info]   CI (99.9%): [1344.345, 1403.888] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   60851.308 ±(99.9%) 686.600 B/op [Average]
[info]   (min, avg, max) = (60653.996, 60851.308, 61099.818), stdev = 178.308
[info]   CI (99.9%): [60164.708, 61537.909] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   0.067 ±(99.9%) 0.104 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.067, 0.104), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.171] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   2.946 ±(99.9%) 4.588 B/op [Average]
[info]   (min, avg, max) = (1.846, 2.946, 4.595), stdev = 1.191
[info]   CI (99.9%): [≈ 0, 7.534] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space":
[info]   1346.624 ±(99.9%) 5.509 MB/sec [Average]
[info]   (min, avg, max) = (1345.283, 1346.624, 1348.771), stdev = 1.431
[info]   CI (99.9%): [1341.116, 1352.133] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   59635.768 ±(99.9%) 1769.479 B/op [Average]
[info]   (min, avg, max) = (59160.504, 59635.768, 60382.949), stdev = 459.528
[info]   CI (99.9%): [57866.289, 61405.247] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 9.44% complete, ETA 02:02:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 155687.436 ops/s
[info] # Warmup Iteration   2: 293280.158 ops/s
[info] # Warmup Iteration   3: 320914.046 ops/s
[info] # Warmup Iteration   4: 329158.361 ops/s
[info] # Warmup Iteration   5: 324491.759 ops/s
[info] Iteration   1: 324486.943 ops/s
[info]                  ·gc.alloc.rate:                   1701.905 MB/sec
[info]                  ·gc.alloc.rate.norm:              8256.478 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.202 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2019.648 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9797.949 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 329409.435 ops/s
[info]                  ·gc.alloc.rate:                   1690.611 MB/sec
[info]                  ·gc.alloc.rate.norm:              8077.277 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.398 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.332 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6441.964 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 329680.509 ops/s
[info]                  ·gc.alloc.rate:                   1714.778 MB/sec
[info]                  ·gc.alloc.rate.norm:              8185.383 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.298 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2024.936 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9665.900 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 328919.864 ops/s
[info]                  ·gc.alloc.rate:                   1709.416 MB/sec
[info]                  ·gc.alloc.rate.norm:              8181.179 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1351.269 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6467.104 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 329522.312 ops/s
[info]                  ·gc.alloc.rate:                   1726.701 MB/sec
[info]                  ·gc.alloc.rate.norm:              8249.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.298 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2029.643 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9696.251 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce":
[info]   328403.812 ±(99.9%) 8502.090 ops/s [Average]
[info]   (min, avg, max) = (324486.943, 328403.812, 329680.509), stdev = 2207.966
[info]   CI (99.9%): [319901.723, 336905.902] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:·gc.alloc.rate":
[info]   1708.682 ±(99.9%) 52.193 MB/sec [Average]
[info]   (min, avg, max) = (1690.611, 1708.682, 1726.701), stdev = 13.554
[info]   CI (99.9%): [1656.489, 1760.876] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   8189.864 ±(99.9%) 277.047 B/op [Average]
[info]   (min, avg, max) = (8077.277, 8189.864, 8256.478), stdev = 71.948
[info]   CI (99.9%): [7912.817, 8466.912] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   0.050 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.083), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.172] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.239 ±(99.9%) 0.580 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.239, 0.398), stdev = 0.151
[info]   CI (99.9%): [≈ 0, 0.819] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1754.766 ±(99.9%) 1423.580 MB/sec [Average]
[info]   (min, avg, max) = (1348.332, 1754.766, 2029.643), stdev = 369.699
[info]   CI (99.9%): [331.186, 3178.345] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   8413.833 ±(99.9%) 6889.874 B/op [Average]
[info]   (min, avg, max) = (6441.964, 8413.833, 9797.949), stdev = 1789.278
[info]   CI (99.9%): [1523.960, 15303.707] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readCirce:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 9.64% complete, ETA 02:01:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.742 ops/s
[info] # Warmup Iteration   2: 1231573.051 ops/s
[info] # Warmup Iteration   3: 1302809.421 ops/s
[info] # Warmup Iteration   4: 1301161.573 ops/s
[info] # Warmup Iteration   5: 1312642.009 ops/s
[info] Iteration   1: 1305935.946 ops/s
[info]                  ·gc.alloc.rate:                   428.339 MB/sec
[info]                  ·gc.alloc.rate.norm:              516.321 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      671.338 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 809.233 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 1310097.720 ops/s
[info]                  ·gc.alloc.rate:      412.880 MB/sec
[info]                  ·gc.alloc.rate.norm: 496.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1305611.204 ops/s
[info]                  ·gc.alloc.rate:                   431.618 MB/sec
[info]                  ·gc.alloc.rate.norm:              520.376 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3.776 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4.553 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      671.371 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 809.431 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 1308000.007 ops/s
[info]                  ·gc.alloc.rate:                   432.065 MB/sec
[info]                  ·gc.alloc.rate.norm:              519.938 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      670.090 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 806.372 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 1308991.462 ops/s
[info]                  ·gc.alloc.rate:      412.470 MB/sec
[info]                  ·gc.alloc.rate.norm: 496.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava":
[info]   1307727.268 ±(99.9%) 7451.315 ops/s [Average]
[info]   (min, avg, max) = (1305611.204, 1307727.268, 1310097.720), stdev = 1935.083
[info]   CI (99.9%): [1300275.953, 1315178.582] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   423.475 ±(99.9%) 38.367 MB/sec [Average]
[info]   (min, avg, max) = (412.470, 423.475, 432.065), stdev = 9.964
[info]   CI (99.9%): [385.107, 461.842] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   509.727 ±(99.9%) 48.630 B/op [Average]
[info]   (min, avg, max) = (496.000, 509.727, 520.376), stdev = 12.629
[info]   CI (99.9%): [461.097, 558.357] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   0.755 ±(99.9%) 6.503 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.755, 3.776), stdev = 1.689
[info]   CI (99.9%): [≈ 0, 7.258] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   0.911 ±(99.9%) 7.840 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.911, 4.553), stdev = 2.036
[info]   CI (99.9%): [≈ 0, 8.750] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   402.560 ±(99.9%) 1415.056 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 402.560, 671.371), stdev = 367.486
[info]   CI (99.9%): [≈ 0, 1817.616] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   485.007 ±(99.9%) 1704.875 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 485.007, 809.431), stdev = 442.751
[info]   CI (99.9%): [≈ 0, 2189.882] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readDslJsonJava:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 3.000), stdev = 1.517
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 9.84% complete, ETA 02:01:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 246083.113 ops/s
[info] # Warmup Iteration   2: 655235.550 ops/s
[info] # Warmup Iteration   3: 678417.713 ops/s
[info] # Warmup Iteration   4: 671186.271 ops/s
[info] # Warmup Iteration   5: 669546.663 ops/s
[info] Iteration   1: 668677.297 ops/s
[info]                  ·gc.alloc.rate:                   548.217 MB/sec
[info]                  ·gc.alloc.rate.norm:              1290.703 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1.103 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.597 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.274 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1587.488 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 672567.621 ops/s
[info]                  ·gc.alloc.rate:                   558.025 MB/sec
[info]                  ·gc.alloc.rate.norm:              1305.697 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.867 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1579.089 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 684211.342 ops/s
[info]                  ·gc.alloc.rate:      546.037 MB/sec
[info]                  ·gc.alloc.rate.norm: 1256.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 682178.075 ops/s
[info]                  ·gc.alloc.rate:                   562.763 MB/sec
[info]                  ·gc.alloc.rate.norm:              1298.343 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.048 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.788 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1556.795 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 680401.529 ops/s
[info]                  ·gc.alloc.rate:                   556.182 MB/sec
[info]                  ·gc.alloc.rate.norm:              1286.719 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.048 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.029 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1559.356 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala":
[info]   677607.173 ±(99.9%) 25647.745 ops/s [Average]
[info]   (min, avg, max) = (668677.297, 677607.173, 684211.342), stdev = 6660.638
[info]   CI (99.9%): [651959.428, 703254.918] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   554.245 ±(99.9%) 26.838 MB/sec [Average]
[info]   (min, avg, max) = (546.037, 554.245, 562.763), stdev = 6.970
[info]   CI (99.9%): [527.407, 581.082] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   1287.493 ±(99.9%) 73.359 B/op [Average]
[info]   (min, avg, max) = (1256.001, 1287.493, 1305.697), stdev = 19.051
[info]   CI (99.9%): [1214.134, 1360.851] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.229 ±(99.9%) 1.882 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.229, 1.103), stdev = 0.489
[info]   CI (99.9%): [≈ 0, 2.111] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.539 ±(99.9%) 4.431 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.539, 2.597), stdev = 1.151
[info]   CI (99.9%): [≈ 0, 4.970] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   539.592 ±(99.9%) 1161.512 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 539.592, 674.867), stdev = 301.641
[info]   CI (99.9%): [≈ 0, 1701.104] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1256.546 ±(99.9%) 2705.271 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1256.546, 1587.488), stdev = 702.550
[info]   CI (99.9%): [≈ 0, 3961.817] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJacksonScala:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 0.707
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 10.04% complete, ETA 02:01:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1383415.990 ops/s
[info] # Warmup Iteration   2: 1663253.745 ops/s
[info] # Warmup Iteration   3: 1754992.055 ops/s
[info] # Warmup Iteration   4: 1800067.745 ops/s
[info] # Warmup Iteration   5: 1800210.191 ops/s
[info] Iteration   1: 1796641.729 ops/s
[info]                  ·gc.alloc.rate:                   359.143 MB/sec
[info]                  ·gc.alloc.rate.norm:              314.667 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      511.527 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 448.179 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 1719026.416 ops/s
[info]                  ·gc.alloc.rate:      335.435 MB/sec
[info]                  ·gc.alloc.rate.norm: 307.129 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1780708.769 ops/s
[info]                  ·gc.alloc.rate:                   356.061 MB/sec
[info]                  ·gc.alloc.rate.norm:              314.723 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.105 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 595.843 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 1773524.593 ops/s
[info]                  ·gc.alloc.rate:      342.532 MB/sec
[info]                  ·gc.alloc.rate.norm: 304.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1785601.086 ops/s
[info]                  ·gc.alloc.rate:                   361.570 MB/sec
[info]                  ·gc.alloc.rate.norm:              318.719 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2.800 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.468 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.056 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 594.171 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala":
[info]   1771100.519 ±(99.9%) 116677.158 ops/s [Average]
[info]   (min, avg, max) = (1719026.416, 1771100.519, 1796641.729), stdev = 30300.687
[info]   CI (99.9%): [1654423.360, 1887777.677] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   350.948 ±(99.9%) 43.804 MB/sec [Average]
[info]   (min, avg, max) = (335.435, 350.948, 361.570), stdev = 11.376
[info]   CI (99.9%): [307.144, 394.752] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   311.848 ±(99.9%) 23.366 B/op [Average]
[info]   (min, avg, max) = (304.000, 311.848, 318.719), stdev = 6.068
[info]   CI (99.9%): [288.482, 335.213] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.560 ±(99.9%) 4.821 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.560, 2.800), stdev = 1.252
[info]   CI (99.9%): [≈ 0, 5.381] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.494 ±(99.9%) 4.250 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.494, 2.468), stdev = 1.104
[info]   CI (99.9%): [≈ 0, 4.743] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   371.938 ±(99.9%) 1332.152 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 371.938, 674.105), stdev = 345.956
[info]   CI (99.9%): [≈ 0, 1704.089] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   327.639 ±(99.9%) 1174.600 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 327.639, 595.843), stdev = 305.040
[info]   CI (99.9%): [≈ 0, 1502.239] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readJsoniterScala:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.600, 3.000), stdev = 1.517
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 10.24% complete, ETA 02:01:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 24017.007 ops/s
[info] # Warmup Iteration   2: 91083.227 ops/s
[info] # Warmup Iteration   3: 94205.678 ops/s
[info] # Warmup Iteration   4: 96891.332 ops/s
[info] # Warmup Iteration   5: 95439.761 ops/s
[info] Iteration   1: 95684.810 ops/s
[info]                  ·gc.alloc.rate:                   3191.283 MB/sec
[info]                  ·gc.alloc.rate.norm:              52500.108 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.027 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3386.474 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 55711.215 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 95325.592 ops/s
[info]                  ·gc.alloc.rate:                   3194.522 MB/sec
[info]                  ·gc.alloc.rate.norm:              52749.560 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.375 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2713.575 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 44807.932 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 96821.511 ops/s
[info]                  ·gc.alloc.rate:                   3289.548 MB/sec
[info]                  ·gc.alloc.rate.norm:              53467.190 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.015 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3397.449 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 55220.982 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 97351.577 ops/s
[info]                  ·gc.alloc.rate:                   3254.813 MB/sec
[info]                  ·gc.alloc.rate.norm:              52626.194 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.683 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2719.905 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 43977.406 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 96832.643 ops/s
[info]                  ·gc.alloc.rate:                   3272.893 MB/sec
[info]                  ·gc.alloc.rate.norm:              53194.364 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.015 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3402.791 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 55305.601 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson":
[info]   96403.227 ±(99.9%) 3299.075 ops/s [Average]
[info]   (min, avg, max) = (95325.592, 96403.227, 97351.577), stdev = 856.759
[info]   CI (99.9%): [93104.151, 99702.302] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3240.612 ±(99.9%) 174.305 MB/sec [Average]
[info]   (min, avg, max) = (3191.283, 3240.612, 3289.548), stdev = 45.266
[info]   CI (99.9%): [3066.307, 3414.916] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   52907.483 ±(99.9%) 1570.750 B/op [Average]
[info]   (min, avg, max) = (52500.108, 52907.483, 53467.190), stdev = 407.919
[info]   CI (99.9%): [51336.734, 54478.233] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   0.075 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 0.075, 0.104), stdev = 0.019
[info]   CI (99.9%): [0.003, 0.147] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   1.223 ±(99.9%) 1.154 B/op [Average]
[info]   (min, avg, max) = (1.015, 1.223, 1.683), stdev = 0.300
[info]   CI (99.9%): [0.069, 2.377] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   3124.039 ±(99.9%) 1431.918 MB/sec [Average]
[info]   (min, avg, max) = (2713.575, 3124.039, 3402.791), stdev = 371.864
[info]   CI (99.9%): [1692.121, 4555.957] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   51004.627 ±(99.9%) 23280.388 B/op [Average]
[info]   (min, avg, max) = (43977.406, 51004.627, 55711.215), stdev = 6045.843
[info]   CI (99.9%): [27724.239, 74285.015] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readPlayJson:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 10.44% complete, ETA 02:00:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 364883.256 ops/s
[info] # Warmup Iteration   2: 620064.519 ops/s
[info] # Warmup Iteration   3: 644767.869 ops/s
[info] # Warmup Iteration   4: 655268.250 ops/s
[info] # Warmup Iteration   5: 659003.150 ops/s
[info] Iteration   1: 654235.504 ops/s
[info]                  ·gc.alloc.rate:                   1770.243 MB/sec
[info]                  ·gc.alloc.rate.norm:              4259.330 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.200 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2020.098 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4860.498 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 654812.809 ops/s
[info]                  ·gc.alloc.rate:                   1742.060 MB/sec
[info]                  ·gc.alloc.rate.norm:              4187.754 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.100 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1347.407 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3239.044 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 640846.738 ops/s
[info]                  ·gc.alloc.rate:                   1735.227 MB/sec
[info]                  ·gc.alloc.rate.norm:              4261.773 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.307 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2023.590 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4970.004 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 651507.116 ops/s
[info]                  ·gc.alloc.rate:                   1734.697 MB/sec
[info]                  ·gc.alloc.rate.norm:              4191.344 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.101 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.707 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3263.554 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 661914.965 ops/s
[info]                  ·gc.alloc.rate:                   1790.073 MB/sec
[info]                  ·gc.alloc.rate.norm:              4255.561 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.148 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2029.478 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4824.702 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readUPickle":
[info]   652663.426 ±(99.9%) 29429.945 ops/s [Average]
[info]   (min, avg, max) = (640846.738, 652663.426, 661914.965), stdev = 7642.863
[info]   CI (99.9%): [623233.482, 682093.371] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readUPickle:·gc.alloc.rate":
[info]   1754.460 ±(99.9%) 94.941 MB/sec [Average]
[info]   (min, avg, max) = (1734.697, 1754.460, 1790.073), stdev = 24.656
[info]   CI (99.9%): [1659.519, 1849.401] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readUPickle:·gc.alloc.rate.norm":
[info]   4231.152 ±(99.9%) 146.573 B/op [Average]
[info]   (min, avg, max) = (4187.754, 4231.152, 4261.773), stdev = 38.064
[info]   CI (99.9%): [4084.580, 4377.725] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readUPickle:·gc.churn.PS_Eden_Space":
[info]   0.071 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.071, 0.125), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.205] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   0.171 ±(99.9%) 0.332 B/op [Average]
[info]   (min, avg, max) = (0.100, 0.171, 0.307), stdev = 0.086
[info]   CI (99.9%): [≈ 0, 0.503] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readUPickle:·gc.churn.PS_Survivor_Space":
[info]   1754.256 ±(99.9%) 1424.397 MB/sec [Average]
[info]   (min, avg, max) = (1347.407, 1754.256, 2029.478), stdev = 369.911
[info]   CI (99.9%): [329.859, 3178.653] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   4231.560 ±(99.9%) 3452.079 B/op [Average]
[info]   (min, avg, max) = (3239.044, 4231.560, 4970.004), stdev = 896.494
[info]   CI (99.9%): [779.482, 7683.639] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readUPickle:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.readUPickle:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 10.64% complete, ETA 02:00:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 179511.933 ops/s
[info] # Warmup Iteration   2: 343272.757 ops/s
[info] # Warmup Iteration   3: 349896.614 ops/s
[info] # Warmup Iteration   4: 354570.887 ops/s
[info] # Warmup Iteration   5: 349251.686 ops/s
[info] Iteration   1: 355887.417 ops/s
[info]                  ·gc.alloc.rate:                   566.088 MB/sec
[info]                  ·gc.alloc.rate.norm:              2503.885 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.645 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.854 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.695 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2979.846 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 355925.620 ops/s
[info]                  ·gc.alloc.rate:                   567.014 MB/sec
[info]                  ·gc.alloc.rate.norm:              2507.427 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.092 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.109 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2981.018 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 356310.200 ops/s
[info]                  ·gc.alloc.rate:                   576.531 MB/sec
[info]                  ·gc.alloc.rate.norm:              2546.914 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.041 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2977.680 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 357075.411 ops/s
[info]                  ·gc.alloc.rate:      553.519 MB/sec
[info]                  ·gc.alloc.rate.norm: 2440.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 356092.217 ops/s
[info]                  ·gc.alloc.rate:                   565.101 MB/sec
[info]                  ·gc.alloc.rate.norm:              2497.985 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.184 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.018 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2979.444 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce":
[info]   356258.173 ±(99.9%) 1872.793 ops/s [Average]
[info]   (min, avg, max) = (355887.417, 356258.173, 357075.411), stdev = 486.359
[info]   CI (99.9%): [354385.380, 358130.967] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:·gc.alloc.rate":
[info]   565.650 ±(99.9%) 31.514 MB/sec [Average]
[info]   (min, avg, max) = (553.519, 565.650, 576.531), stdev = 8.184
[info]   CI (99.9%): [534.137, 597.164] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   2499.242 ±(99.9%) 147.539 B/op [Average]
[info]   (min, avg, max) = (2440.001, 2499.242, 2546.914), stdev = 38.315
[info]   CI (99.9%): [2351.704, 2646.781] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   0.142 ±(99.9%) 1.086 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.142, 0.645), stdev = 0.282
[info]   CI (99.9%): [≈ 0, 1.228] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.626 ±(99.9%) 4.805 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.626, 2.854), stdev = 1.248
[info]   CI (99.9%): [≈ 0, 5.431] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   539.173 ±(99.9%) 1160.610 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 539.173, 674.109), stdev = 301.407
[info]   CI (99.9%): [≈ 0, 1699.783] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   2383.598 ±(99.9%) 5130.876 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2383.598, 2981.018), stdev = 1332.472
[info]   CI (99.9%): [≈ 0, 7514.474] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeCirce:·gc.time":
[info]   4.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 2.000), stdev = 0.837
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 10.84% complete, ETA 02:00:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.765 ops/s
[info] # Warmup Iteration   2: 1150362.759 ops/s
[info] # Warmup Iteration   3: 1245912.458 ops/s
[info] # Warmup Iteration   4: 1314083.613 ops/s
[info] # Warmup Iteration   5: 1316038.129 ops/s
[info] Iteration   1: 1314593.799 ops/s
[info]                  ·gc.alloc.rate:                   620.291 MB/sec
[info]                  ·gc.alloc.rate.norm:              742.769 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3.624 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4.340 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      671.324 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 803.879 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 1317855.870 ops/s
[info]                  ·gc.alloc.rate:                   631.163 MB/sec
[info]                  ·gc.alloc.rate.norm:              753.901 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.025 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      670.660 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 801.077 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 1315328.351 ops/s
[info]                  ·gc.alloc.rate:                   629.487 MB/sec
[info]                  ·gc.alloc.rate.norm:              753.331 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      670.700 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 802.653 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 1317736.477 ops/s
[info]                  ·gc.alloc.rate:                   630.727 MB/sec
[info]                  ·gc.alloc.rate.norm:              753.399 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.075 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      670.068 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 800.392 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 1315817.721 ops/s
[info]                  ·gc.alloc.rate:                   630.753 MB/sec
[info]                  ·gc.alloc.rate.norm:              754.546 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      670.050 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 801.556 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava":
[info]   1316266.443 ±(99.9%) 5635.107 ops/s [Average]
[info]   (min, avg, max) = (1314593.799, 1316266.443, 1317855.870), stdev = 1463.420
[info]   CI (99.9%): [1310631.336, 1321901.551] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   628.484 ±(99.9%) 17.801 MB/sec [Average]
[info]   (min, avg, max) = (620.291, 628.484, 631.163), stdev = 4.623
[info]   CI (99.9%): [610.683, 646.285] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   751.589 ±(99.9%) 19.078 B/op [Average]
[info]   (min, avg, max) = (742.769, 751.589, 754.546), stdev = 4.954
[info]   CI (99.9%): [732.512, 770.667] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   0.741 ±(99.9%) 6.206 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.741, 3.624), stdev = 1.612
[info]   CI (99.9%): [≈ 0, 6.948] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   0.888 ±(99.9%) 7.432 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.888, 4.340), stdev = 1.930
[info]   CI (99.9%): [≈ 0, 8.319] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   670.560 ±(99.9%) 2.033 MB/sec [Average]
[info]   (min, avg, max) = (670.050, 670.560, 671.324), stdev = 0.528
[info]   CI (99.9%): [668.527, 672.594] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   801.911 ±(99.9%) 5.291 B/op [Average]
[info]   (min, avg, max) = (800.392, 801.911, 803.879), stdev = 1.374
[info]   CI (99.9%): [796.621, 807.202] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 3.000), stdev = 0.894
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 11.04% complete, ETA 02:00:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 431119.474 ops/s
[info] # Warmup Iteration   2: 946668.712 ops/s
[info] # Warmup Iteration   3: 1016082.326 ops/s
[info] # Warmup Iteration   4: 992004.296 ops/s
[info] # Warmup Iteration   5: 983376.009 ops/s
[info] Iteration   1: 986591.220 ops/s
[info]                  ·gc.alloc.rate:                   710.571 MB/sec
[info]                  ·gc.alloc.rate.norm:              1133.854 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.033 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.945 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1075.409 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 975816.306 ops/s
[info]                  ·gc.alloc.rate:                   716.188 MB/sec
[info]                  ·gc.alloc.rate.norm:              1155.386 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.965 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1087.271 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 987780.245 ops/s
[info]                  ·gc.alloc.rate:                   719.602 MB/sec
[info]                  ·gc.alloc.rate.norm:              1146.741 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.027 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1074.114 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 984085.377 ops/s
[info]                  ·gc.alloc.rate:                   712.047 MB/sec
[info]                  ·gc.alloc.rate.norm:              1138.885 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.133 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.040 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1078.095 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 989386.850 ops/s
[info]                  ·gc.alloc.rate:                   723.593 MB/sec
[info]                  ·gc.alloc.rate.norm:              1151.273 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.033 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.301 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1072.847 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala":
[info]   984732.000 ±(99.9%) 20585.991 ops/s [Average]
[info]   (min, avg, max) = (975816.306, 984732.000, 989386.850), stdev = 5346.117
[info]   CI (99.9%): [964146.009, 1005317.991] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   716.400 ±(99.9%) 20.643 MB/sec [Average]
[info]   (min, avg, max) = (710.571, 716.400, 723.593), stdev = 5.361
[info]   CI (99.9%): [695.757, 737.044] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1145.228 ±(99.9%) 33.988 B/op [Average]
[info]   (min, avg, max) = (1133.854, 1145.228, 1155.386), stdev = 8.827
[info]   CI (99.9%): [1111.240, 1179.216] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.025 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.083), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.157] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.040 ±(99.9%) 0.211 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.040, 0.133), stdev = 0.055
[info]   CI (99.9%): [≈ 0, 0.251] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   674.056 ±(99.9%) 0.551 MB/sec [Average]
[info]   (min, avg, max) = (673.945, 674.056, 674.301), stdev = 0.143
[info]   CI (99.9%): [673.505, 674.606] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1077.547 ±(99.9%) 22.229 B/op [Average]
[info]   (min, avg, max) = (1072.847, 1077.547, 1087.271), stdev = 5.773
[info]   CI (99.9%): [1055.318, 1099.776] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJacksonScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 11.24% complete, ETA 01:59:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1869151.716 ops/s
[info] # Warmup Iteration   2: 2428753.613 ops/s
[info] # Warmup Iteration   3: 2467093.959 ops/s
[info] # Warmup Iteration   4: 2499384.017 ops/s
[info] # Warmup Iteration   5: 2483498.983 ops/s
[info] Iteration   1: 2457578.449 ops/s
[info]                  ·gc.alloc.rate:                   1191.843 MB/sec
[info]                  ·gc.alloc.rate.norm:              763.454 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.080 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.649 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 863.899 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 2516758.592 ops/s
[info]                  ·gc.alloc.rate:                   1181.927 MB/sec
[info]                  ·gc.alloc.rate.norm:              739.208 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.055 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 421.571 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 2438283.663 ops/s
[info]                  ·gc.alloc.rate:                   1157.685 MB/sec
[info]                  ·gc.alloc.rate.norm:              747.336 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.054 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1347.959 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 870.165 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 2527181.089 ops/s
[info]                  ·gc.alloc.rate:                   1210.460 MB/sec
[info]                  ·gc.alloc.rate.norm:              753.565 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.052 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.055 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 840.469 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 2507624.401 ops/s
[info]                  ·gc.alloc.rate:                   1185.954 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.477 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.992 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 423.723 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala":
[info]   2489485.239 ±(99.9%) 150784.631 ops/s [Average]
[info]   (min, avg, max) = (2438283.663, 2489485.239, 2527181.089), stdev = 39158.290
[info]   CI (99.9%): [2338700.607, 2640269.870] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1185.574 ±(99.9%) 73.310 MB/sec [Average]
[info]   (min, avg, max) = (1157.685, 1185.574, 1210.460), stdev = 19.038
[info]   CI (99.9%): [1112.264, 1258.884] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   749.608 ±(99.9%) 35.866 B/op [Average]
[info]   (min, avg, max) = (739.208, 749.608, 763.454), stdev = 9.314
[info]   CI (99.9%): [713.742, 785.474] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.058 ±(99.9%) 0.215 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.058, 0.125), stdev = 0.056
[info]   CI (99.9%): [≈ 0, 0.273] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.037 ±(99.9%) 0.137 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.080), stdev = 0.036
[info]   CI (99.9%): [≈ 0, 0.174] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   1079.142 ±(99.9%) 1422.296 MB/sec [Average]
[info]   (min, avg, max) = (674.055, 1079.142, 1350.055), stdev = 369.366
[info]   CI (99.9%): [≈ 0, 2501.437] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   683.966 ±(99.9%) 919.564 B/op [Average]
[info]   (min, avg, max) = (421.571, 683.966, 870.165), stdev = 238.808
[info]   CI (99.9%): [≈ 0, 1603.530] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 11.45% complete, ETA 01:59:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2307490.514 ops/s
[info] # Warmup Iteration   2: 2717091.583 ops/s
[info] # Warmup Iteration   3: 2825070.845 ops/s
[info] # Warmup Iteration   4: 2766492.903 ops/s
[info] # Warmup Iteration   5: 2825589.301 ops/s
[info] Iteration   1: 2815179.310 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 2822645.538 ops/s
[info]                  ·gc.alloc.rate:      0.068 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.038 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 2825230.924 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 2824669.029 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 2814364.458 ops/s
[info]                  ·gc.alloc.rate:      1.494 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.836 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   2820417.852 ±(99.9%) 20219.242 ops/s [Average]
[info]   (min, avg, max) = (2814364.458, 2820417.852, 2825230.924), stdev = 5250.873
[info]   CI (99.9%): [2800198.610, 2840637.094] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.313 ±(99.9%) 2.546 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.313, 1.494), stdev = 0.661
[info]   CI (99.9%): [≈ 0, 2.859] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.175 ±(99.9%) 1.424 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.175, 0.836), stdev = 0.370
[info]   CI (99.9%): [≈ 0, 1.598] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 11.65% complete, ETA 01:59:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 165395.793 ops/s
[info] # Warmup Iteration   2: 448565.770 ops/s
[info] # Warmup Iteration   3: 470794.555 ops/s
[info] # Warmup Iteration   4: 474044.868 ops/s
[info] # Warmup Iteration   5: 475117.164 ops/s
[info] Iteration   1: 472171.816 ops/s
[info]                  ·gc.alloc.rate:                   562.860 MB/sec
[info]                  ·gc.alloc.rate.norm:              1876.603 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.957 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3.192 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.301 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2248.152 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 475769.869 ops/s
[info]                  ·gc.alloc.rate:                   565.650 MB/sec
[info]                  ·gc.alloc.rate.norm:              1871.444 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.672 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2232.143 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 476713.304 ops/s
[info]                  ·gc.alloc.rate:      547.562 MB/sec
[info]                  ·gc.alloc.rate.norm: 1808.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 464362.067 ops/s
[info]                  ·gc.alloc.rate:                   549.552 MB/sec
[info]                  ·gc.alloc.rate.norm:              1862.880 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.680 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2287.042 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 474671.229 ops/s
[info]                  ·gc.alloc.rate:                   559.957 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.986 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.138 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.313 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2236.224 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson":
[info]   472737.657 ±(99.9%) 19176.967 ops/s [Average]
[info]   (min, avg, max) = (464362.067, 472737.657, 476713.304), stdev = 4980.197
[info]   CI (99.9%): [453560.690, 491914.624] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:·gc.alloc.rate":
[info]   557.116 ±(99.9%) 31.187 MB/sec [Average]
[info]   (min, avg, max) = (547.562, 557.116, 565.650), stdev = 8.099
[info]   CI (99.9%): [525.929, 588.303] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   1855.183 ±(99.9%) 105.663 B/op [Average]
[info]   (min, avg, max) = (1808.001, 1855.183, 1876.603), stdev = 27.440
[info]   CI (99.9%): [1749.520, 1960.846] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   0.200 ±(99.9%) 1.632 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.200, 0.957), stdev = 0.424
[info]   CI (99.9%): [≈ 0, 1.832] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   0.666 ±(99.9%) 5.442 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.666, 3.192), stdev = 1.413
[info]   CI (99.9%): [≈ 0, 6.108] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   539.593 ±(99.9%) 1161.515 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 539.593, 674.680), stdev = 301.642
[info]   CI (99.9%): [≈ 0, 1701.109] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1800.712 ±(99.9%) 3877.068 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1800.712, 2287.042), stdev = 1006.862
[info]   CI (99.9%): [≈ 0, 5677.780] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writePlayJson:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 0.707
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 11.85% complete, ETA 01:59:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 123725.031 ops/s
[info] # Warmup Iteration   2: 179362.123 ops/s
[info] # Warmup Iteration   3: 171287.486 ops/s
[info] # Warmup Iteration   4: 175483.627 ops/s
[info] # Warmup Iteration   5: 181488.301 ops/s
[info] Iteration   1: 181638.758 ops/s
[info]                  ·gc.alloc.rate:                   482.607 MB/sec
[info]                  ·gc.alloc.rate.norm:              4181.932 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.010 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.090 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      675.427 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5852.775 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 182841.767 ops/s
[info]                  ·gc.alloc.rate:      464.638 MB/sec
[info]                  ·gc.alloc.rate.norm: 4000.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 175272.371 ops/s
[info]                  ·gc.alloc.rate:                   460.732 MB/sec
[info]                  ·gc.alloc.rate.norm:              4137.482 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2.394 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21.496 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      675.388 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6065.144 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 182344.402 ops/s
[info]                  ·gc.alloc.rate:                   477.913 MB/sec
[info]                  ·gc.alloc.rate.norm:              4125.517 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.359 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.699 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5824.240 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 182468.460 ops/s
[info]                  ·gc.alloc.rate:      463.630 MB/sec
[info]                  ·gc.alloc.rate.norm: 4000.032 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeUPickle":
[info]   180913.151 ±(99.9%) 12257.502 ops/s [Average]
[info]   (min, avg, max) = (175272.371, 180913.151, 182841.767), stdev = 3183.234
[info]   CI (99.9%): [168655.650, 193170.653] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeUPickle:·gc.alloc.rate":
[info]   469.904 ±(99.9%) 37.370 MB/sec [Average]
[info]   (min, avg, max) = (460.732, 469.904, 482.607), stdev = 9.705
[info]   CI (99.9%): [432.534, 507.274] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeUPickle:·gc.alloc.rate.norm":
[info]   4088.993 ±(99.9%) 323.066 B/op [Average]
[info]   (min, avg, max) = (4000.002, 4088.993, 4181.932), stdev = 83.899
[info]   CI (99.9%): [3765.927, 4412.059] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeUPickle:·gc.churn.PS_Eden_Space":
[info]   0.489 ±(99.9%) 4.100 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.489, 2.394), stdev = 1.065
[info]   CI (99.9%): [≈ 0, 4.589] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   4.389 ±(99.9%) 36.828 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4.389, 21.496), stdev = 9.564
[info]   CI (99.9%): [≈ 0, 41.217] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space":
[info]   405.103 ±(99.9%) 1423.994 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 405.103, 675.427), stdev = 369.807
[info]   CI (99.9%): [≈ 0, 1829.097] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   3548.432 ±(99.9%) 12478.385 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3548.432, 6065.144), stdev = 3240.597
[info]   CI (99.9%): [≈ 0, 16026.817] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeUPickle:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBooleansBenchmark.writeUPickle:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 3.000), stdev = 1.304
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 12.05% complete, ETA 01:58:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 95779.736 ops/s
[info] # Warmup Iteration   2: 148249.646 ops/s
[info] # Warmup Iteration   3: 165498.501 ops/s
[info] # Warmup Iteration   4: 164300.704 ops/s
[info] # Warmup Iteration   5: 163870.688 ops/s
[info] Iteration   1: 165741.598 ops/s
[info]                  ·gc.alloc.rate:                   2045.223 MB/sec
[info]                  ·gc.alloc.rate.norm:              19425.717 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.198 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2021.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19195.733 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 165351.150 ops/s
[info]                  ·gc.alloc.rate:                   2053.022 MB/sec
[info]                  ·gc.alloc.rate.norm:              19539.364 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.991 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2024.967 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19272.357 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 165029.849 ops/s
[info]                  ·gc.alloc.rate:                   2049.512 MB/sec
[info]                  ·gc.alloc.rate.norm:              19541.609 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.993 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2028.462 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19340.900 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 165843.612 ops/s
[info]                  ·gc.alloc.rate:                   2059.563 MB/sec
[info]                  ·gc.alloc.rate.norm:              19541.971 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.198 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2031.009 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19271.041 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 164068.588 ops/s
[info]                  ·gc.alloc.rate:                   2052.852 MB/sec
[info]                  ·gc.alloc.rate.norm:              19693.886 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.599 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2032.897 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19502.446 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce":
[info]   165206.959 ±(99.9%) 2749.381 ops/s [Average]
[info]   (min, avg, max) = (164068.588, 165206.959, 165843.612), stdev = 714.005
[info]   CI (99.9%): [162457.579, 167956.340] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:·gc.alloc.rate":
[info]   2052.035 ±(99.9%) 20.291 MB/sec [Average]
[info]   (min, avg, max) = (2045.223, 2052.035, 2059.563), stdev = 5.270
[info]   CI (99.9%): [2031.743, 2072.326] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   19548.509 ±(99.9%) 367.259 B/op [Average]
[info]   (min, avg, max) = (19425.717, 19548.509, 19693.886), stdev = 95.376
[info]   CI (99.9%): [19181.250, 19915.769] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   0.062 ±(99.9%) 0.160 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.062, 0.104), stdev = 0.042
[info]   CI (99.9%): [≈ 0, 0.223] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.596 ±(99.9%) 1.529 B/op [Average]
[info]   (min, avg, max) = (0.198, 0.596, 0.993), stdev = 0.397
[info]   CI (99.9%): [≈ 0, 2.124] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   2027.669 ±(99.9%) 18.343 MB/sec [Average]
[info]   (min, avg, max) = (2021.010, 2027.669, 2032.897), stdev = 4.763
[info]   CI (99.9%): [2009.327, 2046.012] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   19316.495 ±(99.9%) 446.456 B/op [Average]
[info]   (min, avg, max) = (19195.733, 19316.495, 19502.446), stdev = 115.943
[info]   CI (99.9%): [18870.040, 19762.951] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readCirce:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 12.25% complete, ETA 01:58:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 178159.069 ops/s
[info] # Warmup Iteration   2: 414176.791 ops/s
[info] # Warmup Iteration   3: 441654.438 ops/s
[info] # Warmup Iteration   4: 441048.250 ops/s
[info] # Warmup Iteration   5: 440536.736 ops/s
[info] Iteration   1: 438408.427 ops/s
[info]                  ·gc.alloc.rate:      338.634 MB/sec
[info]                  ·gc.alloc.rate.norm: 1216.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 442083.806 ops/s
[info]                  ·gc.alloc.rate:                   361.400 MB/sec
[info]                  ·gc.alloc.rate.norm:              1286.530 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.514 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2397.610 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 443870.372 ops/s
[info]                  ·gc.alloc.rate:      342.980 MB/sec
[info]                  ·gc.alloc.rate.norm: 1216.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 441205.409 ops/s
[info]                  ·gc.alloc.rate:                   357.847 MB/sec
[info]                  ·gc.alloc.rate.norm:              1276.635 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.791 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.822 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.393 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2402.358 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 441588.246 ops/s
[info]                  ·gc.alloc.rate:      341.124 MB/sec
[info]                  ·gc.alloc.rate.norm: 1216.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala":
[info]   441431.252 ±(99.9%) 7601.549 ops/s [Average]
[info]   (min, avg, max) = (438408.427, 441431.252, 443870.372), stdev = 1974.098
[info]   CI (99.9%): [433829.703, 449032.802] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   348.397 ±(99.9%) 40.199 MB/sec [Average]
[info]   (min, avg, max) = (338.634, 348.397, 361.400), stdev = 10.440
[info]   CI (99.9%): [308.198, 388.596] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   1242.234 ±(99.9%) 138.972 B/op [Average]
[info]   (min, avg, max) = (1216.001, 1242.234, 1286.530), stdev = 36.091
[info]   CI (99.9%): [1103.262, 1381.205] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.158 ±(99.9%) 1.362 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.158, 0.791), stdev = 0.354
[info]   CI (99.9%): [≈ 0, 1.520] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.564 ±(99.9%) 4.859 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.564, 2.822), stdev = 1.262
[info]   CI (99.9%): [≈ 0, 5.424] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   269.381 ±(99.9%) 1420.370 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 269.381, 673.514), stdev = 368.865
[info]   CI (99.9%): [≈ 0, 1689.751] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   959.994 ±(99.9%) 5061.773 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 959.994, 2402.358), stdev = 1314.526
[info]   CI (99.9%): [≈ 0, 6021.767] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:·gc.count":
[info]   2.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.000), stdev = 0.548
[info]   CI (99.9%): [2.000, 2.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJacksonScala:·gc.time":
[info]   3.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 2.000), stdev = 0.894
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 12.45% complete, ETA 01:58:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 875117.254 ops/s
[info] # Warmup Iteration   2: 1130152.944 ops/s
[info] # Warmup Iteration   3: 1200457.351 ops/s
[info] # Warmup Iteration   4: 1198757.814 ops/s
[info] # Warmup Iteration   5: 1201951.263 ops/s
[info] Iteration   1: 1201071.520 ops/s
[info]                  ·gc.alloc.rate:      231.950 MB/sec
[info]                  ·gc.alloc.rate.norm: 304.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1194737.693 ops/s
[info]                  ·gc.alloc.rate:                   246.131 MB/sec
[info]                  ·gc.alloc.rate.norm:              324.296 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.010 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.014 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      511.498 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 673.938 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 1202682.477 ops/s
[info]                  ·gc.alloc.rate:      232.283 MB/sec
[info]                  ·gc.alloc.rate.norm: 304.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1200664.085 ops/s
[info]                  ·gc.alloc.rate:                   245.951 MB/sec
[info]                  ·gc.alloc.rate.norm:              322.432 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.010 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.014 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      511.527 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 670.591 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 1203197.205 ops/s
[info]                  ·gc.alloc.rate:      232.365 MB/sec
[info]                  ·gc.alloc.rate.norm: 304.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala":
[info]   1200470.596 ±(99.9%) 13000.065 ops/s [Average]
[info]   (min, avg, max) = (1194737.693, 1200470.596, 1203197.205), stdev = 3376.076
[info]   CI (99.9%): [1187470.531, 1213470.661] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   237.736 ±(99.9%) 29.200 MB/sec [Average]
[info]   (min, avg, max) = (231.950, 237.736, 246.131), stdev = 7.583
[info]   CI (99.9%): [208.536, 266.936] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   311.746 ±(99.9%) 40.918 B/op [Average]
[info]   (min, avg, max) = (304.000, 311.746, 324.296), stdev = 10.626
[info]   CI (99.9%): [270.828, 352.664] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.004 ±(99.9%) 0.022 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.010), stdev = 0.006
[info]   CI (99.9%): [≈ 0, 0.026] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.005 ±(99.9%) 0.029 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.005, 0.014), stdev = 0.007
[info]   CI (99.9%): [≈ 0, 0.034] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   204.605 ±(99.9%) 1078.823 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 204.605, 511.527), stdev = 280.167
[info]   CI (99.9%): [≈ 0, 1283.428] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   268.906 ±(99.9%) 1417.871 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 268.906, 673.938), stdev = 368.216
[info]   CI (99.9%): [≈ 0, 1686.776] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:·gc.count":
[info]   2.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.000), stdev = 0.548
[info]   CI (99.9%): [2.000, 2.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readJsoniterScala:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 3.000), stdev = 1.414
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 12.65% complete, ETA 01:58:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 11858.830 ops/s
[info] # Warmup Iteration   2: 75927.297 ops/s
[info] # Warmup Iteration   3: 78905.053 ops/s
[info] # Warmup Iteration   4: 81237.947 ops/s
[info] # Warmup Iteration   5: 82176.654 ops/s
[info] Iteration   1: 82155.438 ops/s
[info]                  ·gc.alloc.rate:                   3252.799 MB/sec
[info]                  ·gc.alloc.rate.norm:              62333.983 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.196 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2708.676 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 51906.860 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 80993.778 ops/s
[info]                  ·gc.alloc.rate:                   3264.713 MB/sec
[info]                  ·gc.alloc.rate.norm:              63429.041 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.214 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3392.897 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 65919.479 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 82105.705 ops/s
[info]                  ·gc.alloc.rate:                   3307.071 MB/sec
[info]                  ·gc.alloc.rate.norm:              63401.228 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.146 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.793 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3396.609 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 65117.801 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 82408.415 ops/s
[info]                  ·gc.alloc.rate:                   3292.858 MB/sec
[info]                  ·gc.alloc.rate.norm:              62893.772 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.193 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2719.977 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 51951.712 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 81893.420 ops/s
[info]                  ·gc.alloc.rate:                   3300.981 MB/sec
[info]                  ·gc.alloc.rate.norm:              63447.977 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.200 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3402.287 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 65395.172 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson":
[info]   81911.351 ±(99.9%) 2097.351 ops/s [Average]
[info]   (min, avg, max) = (80993.778, 81911.351, 82408.415), stdev = 544.675
[info]   CI (99.9%): [79814.000, 84008.702] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3283.684 ±(99.9%) 91.207 MB/sec [Average]
[info]   (min, avg, max) = (3252.799, 3283.684, 3307.071), stdev = 23.686
[info]   CI (99.9%): [3192.478, 3374.891] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   63101.200 ±(99.9%) 1875.979 B/op [Average]
[info]   (min, avg, max) = (62333.983, 63101.200, 63447.977), stdev = 487.186
[info]   CI (99.9%): [61225.222, 64977.179] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   0.079 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 0.079, 0.146), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.222] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   1.519 ±(99.9%) 2.743 B/op [Average]
[info]   (min, avg, max) = (1.193, 1.519, 2.793), stdev = 0.712
[info]   CI (99.9%): [≈ 0, 4.262] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   3124.089 ±(99.9%) 1440.513 MB/sec [Average]
[info]   (min, avg, max) = (2708.676, 3124.089, 3402.287), stdev = 374.097
[info]   CI (99.9%): [1683.576, 4564.602] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   60058.205 ±(99.9%) 28595.855 B/op [Average]
[info]   (min, avg, max) = (51906.860, 60058.205, 65919.479), stdev = 7426.253
[info]   CI (99.9%): [31462.350, 88654.059] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readPlayJson:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.400, 6.000), stdev = 1.140
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 12.85% complete, ETA 01:57:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 160733.175 ops/s
[info] # Warmup Iteration   2: 254212.093 ops/s
[info] # Warmup Iteration   3: 259304.383 ops/s
[info] # Warmup Iteration   4: 255575.495 ops/s
[info] # Warmup Iteration   5: 255944.700 ops/s
[info] Iteration   1: 265020.620 ops/s
[info]                  ·gc.alloc.rate:                   1249.202 MB/sec
[info]                  ·gc.alloc.rate.norm:              7420.087 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.247 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1343.994 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7983.137 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 265034.687 ops/s
[info]                  ·gc.alloc.rate:                   1238.921 MB/sec
[info]                  ·gc.alloc.rate.norm:              7353.756 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.494 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1343.157 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7972.460 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 266676.738 ops/s
[info]                  ·gc.alloc.rate:                   1228.913 MB/sec
[info]                  ·gc.alloc.rate.norm:              7254.107 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      671.983 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3966.622 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 264332.375 ops/s
[info]                  ·gc.alloc.rate:                   1232.275 MB/sec
[info]                  ·gc.alloc.rate.norm:              7337.661 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.372 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.435 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8011.481 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 259222.317 ops/s
[info]                  ·gc.alloc.rate:                   1220.886 MB/sec
[info]                  ·gc.alloc.rate.norm:              7413.689 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.506 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1346.593 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8177.024 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readUPickle":
[info]   264057.348 ±(99.9%) 10924.816 ops/s [Average]
[info]   (min, avg, max) = (259222.317, 264057.348, 266676.738), stdev = 2837.140
[info]   CI (99.9%): [253132.532, 274982.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readUPickle:·gc.alloc.rate":
[info]   1234.040 ±(99.9%) 41.120 MB/sec [Average]
[info]   (min, avg, max) = (1220.886, 1234.040, 1249.202), stdev = 10.679
[info]   CI (99.9%): [1192.920, 1275.159] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readUPickle:·gc.alloc.rate.norm":
[info]   7355.860 ±(99.9%) 259.444 B/op [Average]
[info]   (min, avg, max) = (7254.107, 7355.860, 7420.087), stdev = 67.377
[info]   CI (99.9%): [7096.416, 7615.304] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readUPickle:·gc.churn.PS_Eden_Space":
[info]   0.054 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.083), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.188] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   0.324 ±(99.9%) 0.805 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.324, 0.506), stdev = 0.209
[info]   CI (99.9%): [≈ 0, 1.129] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readUPickle:·gc.churn.PS_Survivor_Space":
[info]   1210.232 ±(99.9%) 1158.634 MB/sec [Average]
[info]   (min, avg, max) = (671.983, 1210.232, 1346.593), stdev = 300.894
[info]   CI (99.9%): [51.598, 2368.866] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   7222.145 ±(99.9%) 7014.981 B/op [Average]
[info]   (min, avg, max) = (3966.622, 7222.145, 8177.024), stdev = 1821.768
[info]   CI (99.9%): [207.165, 14237.126] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readUPickle:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.readUPickle:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 13.05% complete, ETA 01:57:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 138240.565 ops/s
[info] # Warmup Iteration   2: 279126.644 ops/s
[info] # Warmup Iteration   3: 287204.594 ops/s
[info] # Warmup Iteration   4: 286313.301 ops/s
[info] # Warmup Iteration   5: 286854.227 ops/s
[info] Iteration   1: 289070.839 ops/s
[info]                  ·gc.alloc.rate:                   1297.479 MB/sec
[info]                  ·gc.alloc.rate.norm:              7066.319 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.595 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3673.971 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 283019.890 ops/s
[info]                  ·gc.alloc.rate:                   1291.669 MB/sec
[info]                  ·gc.alloc.rate.norm:              7183.325 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.166 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7508.641 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 282678.146 ops/s
[info]                  ·gc.alloc.rate:                   1291.249 MB/sec
[info]                  ·gc.alloc.rate.norm:              7189.962 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.348 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1351.525 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7525.594 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 284661.085 ops/s
[info]                  ·gc.alloc.rate:                   1285.393 MB/sec
[info]                  ·gc.alloc.rate.norm:              7108.006 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.230 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1352.433 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7478.726 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 288857.397 ops/s
[info]                  ·gc.alloc.rate:                   1316.552 MB/sec
[info]                  ·gc.alloc.rate.norm:              7174.639 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.340 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1353.381 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7375.341 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce":
[info]   285657.471 ±(99.9%) 11979.868 ops/s [Average]
[info]   (min, avg, max) = (282678.146, 285657.471, 289070.839), stdev = 3111.134
[info]   CI (99.9%): [273677.603, 297637.339] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:·gc.alloc.rate":
[info]   1296.469 ±(99.9%) 46.261 MB/sec [Average]
[info]   (min, avg, max) = (1285.393, 1296.469, 1316.552), stdev = 12.014
[info]   CI (99.9%): [1250.208, 1342.729] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   7144.450 ±(99.9%) 210.263 B/op [Average]
[info]   (min, avg, max) = (7066.319, 7144.450, 7189.962), stdev = 54.605
[info]   CI (99.9%): [6934.187, 7354.713] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   0.033 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.062), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.184 ±(99.9%) 0.670 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.184, 0.348), stdev = 0.174
[info]   CI (99.9%): [≈ 0, 0.854] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   1216.420 ±(99.9%) 1166.329 MB/sec [Average]
[info]   (min, avg, max) = (674.595, 1216.420, 1353.381), stdev = 302.892
[info]   CI (99.9%): [50.091, 2382.749] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   6712.455 ±(99.9%) 6544.419 B/op [Average]
[info]   (min, avg, max) = (3673.971, 6712.455, 7525.594), stdev = 1699.565
[info]   CI (99.9%): [168.036, 13256.873] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeCirce:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 13.25% complete, ETA 01:57:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 779562.184 ops/s
[info] # Warmup Iteration   2: 1742998.046 ops/s
[info] # Warmup Iteration   3: 1728175.759 ops/s
[info] # Warmup Iteration   4: 1812957.461 ops/s
[info] # Warmup Iteration   5: 1769159.838 ops/s
[info] Iteration   1: 1781901.431 ops/s
[info]                  ·gc.alloc.rate:                   938.051 MB/sec
[info]                  ·gc.alloc.rate.norm:              828.523 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.037 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.139 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 595.426 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 1786453.467 ops/s
[info]                  ·gc.alloc.rate:                   942.452 MB/sec
[info]                  ·gc.alloc.rate.norm:              830.294 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.134 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 593.908 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 1815268.047 ops/s
[info]                  ·gc.alloc.rate:                   976.541 MB/sec
[info]                  ·gc.alloc.rate.norm:              846.788 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.090 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.728 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1169.523 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 1819494.905 ops/s
[info]                  ·gc.alloc.rate:                   951.345 MB/sec
[info]                  ·gc.alloc.rate.norm:              823.060 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.688 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 583.709 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 1805084.354 ops/s
[info]                  ·gc.alloc.rate:                   941.687 MB/sec
[info]                  ·gc.alloc.rate.norm:              821.207 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.639 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 588.325 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala":
[info]   1801640.441 ±(99.9%) 64910.104 ops/s [Average]
[info]   (min, avg, max) = (1781901.431, 1801640.441, 1819494.905), stdev = 16856.948
[info]   CI (99.9%): [1736730.337, 1866550.545] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   950.015 ±(99.9%) 60.121 MB/sec [Average]
[info]   (min, avg, max) = (938.051, 950.015, 976.541), stdev = 15.613
[info]   CI (99.9%): [889.894, 1010.135] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   829.974 ±(99.9%) 38.965 B/op [Average]
[info]   (min, avg, max) = (821.207, 829.974, 846.788), stdev = 10.119
[info]   CI (99.9%): [791.009, 868.940] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.029 ±(99.9%) 0.176 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.104), stdev = 0.046
[info]   CI (99.9%): [≈ 0, 0.205] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.025 ±(99.9%) 0.152 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.090), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.178] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   809.266 ±(99.9%) 1161.234 MB/sec [Average]
[info]   (min, avg, max) = (674.134, 809.266, 1348.728), stdev = 301.569
[info]   CI (99.9%): [≈ 0, 1970.500] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   706.178 ±(99.9%) 997.546 B/op [Average]
[info]   (min, avg, max) = (583.709, 706.178, 1169.523), stdev = 259.059
[info]   CI (99.9%): [≈ 0, 1703.724] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJacksonScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 13.45% complete, ETA 01:56:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1883175.513 ops/s
[info] # Warmup Iteration   2: 2434885.512 ops/s
[info] # Warmup Iteration   3: 2430450.940 ops/s
[info] # Warmup Iteration   4: 2433691.031 ops/s
[info] # Warmup Iteration   5: 2433654.855 ops/s
[info] Iteration   1: 2442004.163 ops/s
[info]                  ·gc.alloc.rate:                   682.069 MB/sec
[info]                  ·gc.alloc.rate.norm:              439.653 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2.747 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.771 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 434.479 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 2339306.255 ops/s
[info]                  ·gc.alloc.rate:                   650.077 MB/sec
[info]                  ·gc.alloc.rate.norm:              437.340 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.522 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 453.113 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 2448784.065 ops/s
[info]                  ·gc.alloc.rate:                   673.155 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.699 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.027 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.384 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 432.846 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 2449655.490 ops/s
[info]                  ·gc.alloc.rate:                   685.685 MB/sec
[info]                  ·gc.alloc.rate.norm:              440.650 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.631 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 432.261 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 2417674.194 ops/s
[info]                  ·gc.alloc.rate:                   685.130 MB/sec
[info]                  ·gc.alloc.rate.norm:              446.068 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.724 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 437.990 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala":
[info]   2419484.833 ±(99.9%) 179661.702 ops/s [Average]
[info]   (min, avg, max) = (2339306.255, 2419484.833, 2449655.490), stdev = 46657.573
[info]   CI (99.9%): [2239823.132, 2599146.535] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   675.223 ±(99.9%) 57.472 MB/sec [Average]
[info]   (min, avg, max) = (650.077, 675.223, 685.685), stdev = 14.925
[info]   CI (99.9%): [617.751, 732.696] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   439.282 ±(99.9%) 18.782 B/op [Average]
[info]   (min, avg, max) = (432.699, 439.282, 446.068), stdev = 4.878
[info]   CI (99.9%): [420.500, 458.063] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.558 ±(99.9%) 4.714 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.558, 2.747), stdev = 1.224
[info]   CI (99.9%): [≈ 0, 5.272] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.360 ±(99.9%) 3.039 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.360, 1.771), stdev = 0.789
[info]   CI (99.9%): [≈ 0, 3.398] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   673.261 ±(99.9%) 2.260 MB/sec [Average]
[info]   (min, avg, max) = (672.631, 673.261, 674.042), stdev = 0.587
[info]   CI (99.9%): [671.000, 675.521] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   438.138 ±(99.9%) 33.358 B/op [Average]
[info]   (min, avg, max) = (432.261, 438.138, 453.113), stdev = 8.663
[info]   CI (99.9%): [404.779, 471.496] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 3.000), stdev = 0.894
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 13.65% complete, ETA 01:56:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2133931.179 ops/s
[info] # Warmup Iteration   2: 2602699.621 ops/s
[info] # Warmup Iteration   3: 2530301.054 ops/s
[info] # Warmup Iteration   4: 2665508.783 ops/s
[info] # Warmup Iteration   5: 2671510.990 ops/s
[info] Iteration   1: 2669919.203 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 2666960.163 ops/s
[info]                  ·gc.alloc.rate:      0.181 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.107 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 2667796.451 ops/s
[info]                  ·gc.alloc.rate:      0.004 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.003 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 2670609.249 ops/s
[info]                  ·gc.alloc.rate:      0.045 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.027 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 2668101.402 ops/s
[info]                  ·gc.alloc.rate:      0.088 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.052 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc":
[info]   2668677.293 ±(99.9%) 5881.177 ops/s [Average]
[info]   (min, avg, max) = (2666960.163, 2668677.293, 2670609.249), stdev = 1527.323
[info]   CI (99.9%): [2662796.117, 2674558.470] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.064 ±(99.9%) 0.287 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻³, 0.064, 0.181), stdev = 0.075
[info]   CI (99.9%): [≈ 0, 0.351] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.038 ±(99.9%) 0.169 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.038, 0.107), stdev = 0.044
[info]   CI (99.9%): [≈ 0, 0.207] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 13.86% complete, ETA 01:56:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 16383.630 ops/s
[info] # Warmup Iteration   2: 42955.425 ops/s
[info] # Warmup Iteration   3: 45323.243 ops/s
[info] # Warmup Iteration   4: 44701.390 ops/s
[info] # Warmup Iteration   5: 45867.295 ops/s
[info] Iteration   1: 45626.041 ops/s
[info]                  ·gc.alloc.rate:                   1973.531 MB/sec
[info]                  ·gc.alloc.rate.norm:              68075.214 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.872 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2026.779 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 69911.960 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 45320.012 ops/s
[info]                  ·gc.alloc.rate:                   1969.812 MB/sec
[info]                  ·gc.alloc.rate.norm:              68412.473 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.892 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2028.620 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 70454.887 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 45682.431 ops/s
[info]                  ·gc.alloc.rate:                   1985.569 MB/sec
[info]                  ·gc.alloc.rate.norm:              68413.561 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.152 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2030.900 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 69975.448 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 45090.215 ops/s
[info]                  ·gc.alloc.rate:                   1947.081 MB/sec
[info]                  ·gc.alloc.rate.norm:              67974.927 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1355.019 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 47305.317 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 45721.411 ops/s
[info]                  ·gc.alloc.rate:                   2015.671 MB/sec
[info]                  ·gc.alloc.rate.norm:              69399.260 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.150 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2034.291 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 70040.355 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson":
[info]   45488.022 ±(99.9%) 1050.655 ops/s [Average]
[info]   (min, avg, max) = (45090.215, 45488.022, 45721.411), stdev = 272.852
[info]   CI (99.9%): [44437.367, 46538.677] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1978.333 ±(99.9%) 96.628 MB/sec [Average]
[info]   (min, avg, max) = (1947.081, 1978.333, 2015.671), stdev = 25.094
[info]   CI (99.9%): [1881.705, 2074.961] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   68455.087 ±(99.9%) 2169.608 B/op [Average]
[info]   (min, avg, max) = (67974.927, 68455.087, 69399.260), stdev = 563.440
[info]   CI (99.9%): [66285.479, 70624.695] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   0.058 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.058, 0.083), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.190] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   2.013 ±(99.9%) 4.556 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.013, 2.892), stdev = 1.183
[info]   CI (99.9%): [≈ 0, 6.570] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   1895.122 ±(99.9%) 1162.663 MB/sec [Average]
[info]   (min, avg, max) = (1355.019, 1895.122, 2034.291), stdev = 301.940
[info]   CI (99.9%): [732.459, 3057.785] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   65537.593 ±(99.9%) 39254.864 B/op [Average]
[info]   (min, avg, max) = (47305.317, 65537.593, 70454.887), stdev = 10194.363
[info]   CI (99.9%): [26282.730, 104792.457] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writePlayJson:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 14.06% complete, ETA 01:56:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 100337.802 ops/s
[info] # Warmup Iteration   2: 145788.546 ops/s
[info] # Warmup Iteration   3: 148971.992 ops/s
[info] # Warmup Iteration   4: 152833.880 ops/s
[info] # Warmup Iteration   5: 152646.498 ops/s
[info] Iteration   1: 152723.268 ops/s
[info]                  ·gc.alloc.rate:                   844.337 MB/sec
[info]                  ·gc.alloc.rate.norm:              8703.101 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.215 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1346.635 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13880.604 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 151885.148 ops/s
[info]                  ·gc.alloc.rate:                   826.689 MB/sec
[info]                  ·gc.alloc.rate.norm:              8567.890 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.672 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6971.640 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 152944.030 ops/s
[info]                  ·gc.alloc.rate:                   831.260 MB/sec
[info]                  ·gc.alloc.rate.norm:              8554.405 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.768 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6923.375 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 152913.696 ops/s
[info]                  ·gc.alloc.rate:                   831.716 MB/sec
[info]                  ·gc.alloc.rate.norm:              8560.996 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.429 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.741 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6924.643 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 153057.109 ops/s
[info]                  ·gc.alloc.rate:                   831.586 MB/sec
[info]                  ·gc.alloc.rate.norm:              8552.607 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.663 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6918.129 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeUPickle":
[info]   152704.650 ±(99.9%) 1823.638 ops/s [Average]
[info]   (min, avg, max) = (151885.148, 152704.650, 153057.109), stdev = 473.593
[info]   CI (99.9%): [150881.013, 154528.288] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeUPickle:·gc.alloc.rate":
[info]   833.118 ±(99.9%) 25.466 MB/sec [Average]
[info]   (min, avg, max) = (826.689, 833.118, 844.337), stdev = 6.614
[info]   CI (99.9%): [807.651, 858.584] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeUPickle:·gc.alloc.rate.norm":
[info]   8587.800 ±(99.9%) 249.275 B/op [Average]
[info]   (min, avg, max) = (8552.607, 8587.800, 8703.101), stdev = 64.736
[info]   CI (99.9%): [8338.525, 8837.074] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeUPickle:·gc.churn.PS_Eden_Space":
[info]   0.012 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   0.129 ±(99.9%) 0.738 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.129, 0.429), stdev = 0.192
[info]   CI (99.9%): [≈ 0, 0.867] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space":
[info]   807.496 ±(99.9%) 1160.539 MB/sec [Average]
[info]   (min, avg, max) = (672.663, 807.496, 1346.635), stdev = 301.388
[info]   CI (99.9%): [≈ 0, 1968.034] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   8323.678 ±(99.9%) 11961.992 B/op [Average]
[info]   (min, avg, max) = (6918.129, 8323.678, 13880.604), stdev = 3106.491
[info]   CI (99.9%): [≈ 0, 20285.670] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeUPickle:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfBytesBenchmark.writeUPickle:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 14.26% complete, ETA 01:55:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 113658.889 ops/s
[info] # Warmup Iteration   2: 245614.908 ops/s
[info] # Warmup Iteration   3: 234099.458 ops/s
[info] # Warmup Iteration   4: 251306.678 ops/s
[info] # Warmup Iteration   5: 249489.043 ops/s
[info] Iteration   1: 247450.216 ops/s
[info]                  ·gc.alloc.rate:                   2597.627 MB/sec
[info]                  ·gc.alloc.rate.norm:              16522.445 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.397 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2022.263 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12862.792 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 244250.684 ops/s
[info]                  ·gc.alloc.rate:                   2603.910 MB/sec
[info]                  ·gc.alloc.rate.norm:              16776.615 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.146 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.939 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2702.222 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17410.020 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 246902.913 ops/s
[info]                  ·gc.alloc.rate:                   2645.535 MB/sec
[info]                  ·gc.alloc.rate.norm:              16864.706 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.531 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2707.000 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17256.526 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 240677.113 ops/s
[info]                  ·gc.alloc.rate:                   2582.228 MB/sec
[info]                  ·gc.alloc.rate.norm:              16886.849 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.272 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2711.568 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17732.681 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 250989.733 ops/s
[info]                  ·gc.alloc.rate:                   2662.540 MB/sec
[info]                  ·gc.alloc.rate.norm:              16693.067 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.261 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2036.989 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12771.110 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce":
[info]   246054.132 ±(99.9%) 14813.022 ops/s [Average]
[info]   (min, avg, max) = (240677.113, 246054.132, 250989.733), stdev = 3846.895
[info]   CI (99.9%): [231241.110, 260867.154] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:·gc.alloc.rate":
[info]   2618.368 ±(99.9%) 131.070 MB/sec [Average]
[info]   (min, avg, max) = (2582.228, 2618.368, 2662.540), stdev = 34.039
[info]   CI (99.9%): [2487.298, 2749.438] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   16748.737 ±(99.9%) 569.870 B/op [Average]
[info]   (min, avg, max) = (16522.445, 16748.737, 16886.849), stdev = 147.993
[info]   CI (99.9%): [16178.867, 17318.606] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   0.075 ±(99.9%) 0.166 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.075, 0.146), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.241] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.480 ±(99.9%) 1.074 B/op [Average]
[info]   (min, avg, max) = (0.261, 0.480, 0.939), stdev = 0.279
[info]   CI (99.9%): [≈ 0, 1.554] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   2436.008 ±(99.9%) 1428.688 MB/sec [Average]
[info]   (min, avg, max) = (2022.263, 2436.008, 2711.568), stdev = 371.026
[info]   CI (99.9%): [1007.320, 3864.696] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   15606.626 ±(99.9%) 9829.196 B/op [Average]
[info]   (min, avg, max) = (12771.110, 15606.626, 17732.681), stdev = 2552.611
[info]   CI (99.9%): [5777.430, 25435.822] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readCirce:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.400, 4.000), stdev = 0.894
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 14.46% complete, ETA 01:55:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 110088.151 ops/s
[info] # Warmup Iteration   2: 349270.593 ops/s
[info] # Warmup Iteration   3: 355120.896 ops/s
[info] # Warmup Iteration   4: 369522.447 ops/s
[info] # Warmup Iteration   5: 365259.474 ops/s
[info] Iteration   1: 367484.846 ops/s
[info]                  ·gc.alloc.rate:                   1781.878 MB/sec
[info]                  ·gc.alloc.rate.norm:              7633.306 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.089 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.961 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5783.039 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 360796.510 ops/s
[info]                  ·gc.alloc.rate:                   1780.974 MB/sec
[info]                  ·gc.alloc.rate.norm:              7769.554 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.454 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2026.853 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8842.208 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 369608.044 ops/s
[info]                  ·gc.alloc.rate:                   1800.558 MB/sec
[info]                  ·gc.alloc.rate.norm:              7667.924 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.089 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1352.784 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5761.017 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 368602.316 ops/s
[info]                  ·gc.alloc.rate:                   1822.254 MB/sec
[info]                  ·gc.alloc.rate.norm:              7781.835 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.089 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2031.347 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8674.755 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 369610.930 ops/s
[info]                  ·gc.alloc.rate:                   1827.668 MB/sec
[info]                  ·gc.alloc.rate.norm:              7781.906 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.266 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2033.863 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8659.846 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala":
[info]   367220.529 ±(99.9%) 14234.558 ops/s [Average]
[info]   (min, avg, max) = (360796.510, 367220.529, 369610.930), stdev = 3696.670
[info]   CI (99.9%): [352985.971, 381455.088] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1802.667 ±(99.9%) 84.274 MB/sec [Average]
[info]   (min, avg, max) = (1780.974, 1802.667, 1827.668), stdev = 21.886
[info]   CI (99.9%): [1718.393, 1886.941] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   7726.905 ±(99.9%) 272.968 B/op [Average]
[info]   (min, avg, max) = (7633.306, 7726.905, 7781.906), stdev = 70.889
[info]   CI (99.9%): [7453.937, 7999.873] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.046 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.104), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.197 ±(99.9%) 0.626 B/op [Average]
[info]   (min, avg, max) = (0.089, 0.197, 0.454), stdev = 0.163
[info]   CI (99.9%): [≈ 0, 0.824] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1758.962 ±(99.9%) 1432.770 MB/sec [Average]
[info]   (min, avg, max) = (1349.961, 1758.962, 2033.863), stdev = 372.086
[info]   CI (99.9%): [326.192, 3191.732] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   7544.173 ±(99.9%) 6235.510 B/op [Average]
[info]   (min, avg, max) = (5761.017, 7544.173, 8842.208), stdev = 1619.342
[info]   CI (99.9%): [1308.664, 13779.683] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJacksonScala:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 14.66% complete, ETA 01:55:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1717376.296 ops/s
[info] # Warmup Iteration   2: 2116898.362 ops/s
[info] # Warmup Iteration   3: 2178230.893 ops/s
[info] # Warmup Iteration   4: 2138816.532 ops/s
[info] # Warmup Iteration   5: 2183388.977 ops/s
[info] Iteration   1: 2190861.513 ops/s
[info]                  ·gc.alloc.rate:                   779.592 MB/sec
[info]                  ·gc.alloc.rate.norm:              560.191 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.286 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 483.802 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 2191562.394 ops/s
[info]                  ·gc.alloc.rate:                   781.671 MB/sec
[info]                  ·gc.alloc.rate.norm:              561.433 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.030 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.369 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 483.646 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 2193174.041 ops/s
[info]                  ·gc.alloc.rate:                   771.734 MB/sec
[info]                  ·gc.alloc.rate.norm:              553.856 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.716 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 482.793 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 2181540.782 ops/s
[info]                  ·gc.alloc.rate:                   793.926 MB/sec
[info]                  ·gc.alloc.rate.norm:              572.848 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.030 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.425 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 970.775 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 2189151.844 ops/s
[info]                  ·gc.alloc.rate:                   774.113 MB/sec
[info]                  ·gc.alloc.rate.norm:              556.593 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.704 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 483.680 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala":
[info]   2189258.115 ±(99.9%) 17517.635 ops/s [Average]
[info]   (min, avg, max) = (2181540.782, 2189258.115, 2193174.041), stdev = 4549.274
[info]   CI (99.9%): [2171740.480, 2206775.750] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   780.207 ±(99.9%) 33.328 MB/sec [Average]
[info]   (min, avg, max) = (771.734, 780.207, 793.926), stdev = 8.655
[info]   CI (99.9%): [746.879, 813.535] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   560.984 ±(99.9%) 28.011 B/op [Average]
[info]   (min, avg, max) = (553.856, 560.984, 572.848), stdev = 7.274
[info]   CI (99.9%): [532.973, 588.995] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.017 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.104] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.012 ±(99.9%) 0.063 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.030), stdev = 0.016
[info]   CI (99.9%): [≈ 0, 0.075] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   807.500 ±(99.9%) 1157.924 MB/sec [Average]
[info]   (min, avg, max) = (672.704, 807.500, 1345.425), stdev = 300.709
[info]   CI (99.9%): [≈ 0, 1965.424] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   580.939 ±(99.9%) 839.152 B/op [Average]
[info]   (min, avg, max) = (482.793, 580.939, 970.775), stdev = 217.925
[info]   CI (99.9%): [≈ 0, 1420.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readJsoniterScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 14.86% complete, ETA 01:55:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6123.641 ops/s
[info] # Warmup Iteration   2: 81858.760 ops/s
[info] # Warmup Iteration   3: 89031.315 ops/s
[info] # Warmup Iteration   4: 90482.808 ops/s
[info] # Warmup Iteration   5: 91571.425 ops/s
[info] Iteration   1: 91568.871 ops/s
[info]                  ·gc.alloc.rate:                   3589.301 MB/sec
[info]                  ·gc.alloc.rate.norm:              61706.296 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.073 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3386.394 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 58217.967 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 91678.587 ops/s
[info]                  ·gc.alloc.rate:                   3621.524 MB/sec
[info]                  ·gc.alloc.rate.norm:              62179.019 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.146 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.502 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3392.856 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 58252.952 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 91726.519 ops/s
[info]                  ·gc.alloc.rate:                   3652.048 MB/sec
[info]                  ·gc.alloc.rate.norm:              62641.475 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.785 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4076.720 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 69925.626 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 91369.838 ops/s
[info]                  ·gc.alloc.rate:                   3616.164 MB/sec
[info]                  ·gc.alloc.rate.norm:              62278.551 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.359 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3401.889 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 58588.255 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 91697.606 ops/s
[info]                  ·gc.alloc.rate:                   3618.119 MB/sec
[info]                  ·gc.alloc.rate.norm:              62109.215 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.357 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3403.540 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 58425.726 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson":
[info]   91608.284 ±(99.9%) 562.346 ops/s [Average]
[info]   (min, avg, max) = (91369.838, 91608.284, 91726.519), stdev = 146.039
[info]   CI (99.9%): [91045.938, 92170.630] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3619.431 ±(99.9%) 85.854 MB/sec [Average]
[info]   (min, avg, max) = (3589.301, 3619.431, 3652.048), stdev = 22.296
[info]   CI (99.9%): [3533.577, 3705.285] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   62182.911 ±(99.9%) 1294.465 B/op [Average]
[info]   (min, avg, max) = (61706.296, 62182.911, 62641.475), stdev = 336.168
[info]   CI (99.9%): [60888.446, 63477.376] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   0.071 ±(99.9%) 0.209 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.071, 0.146), stdev = 0.054
[info]   CI (99.9%): [≈ 0, 0.280] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   1.215 ±(99.9%) 3.586 B/op [Average]
[info]   (min, avg, max) = (0.357, 1.215, 2.502), stdev = 0.931
[info]   CI (99.9%): [≈ 0, 4.801] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   3532.280 ±(99.9%) 1172.254 MB/sec [Average]
[info]   (min, avg, max) = (3386.394, 3532.280, 4076.720), stdev = 304.431
[info]   CI (99.9%): [2360.026, 4704.534] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   60682.105 ±(99.9%) 19905.530 B/op [Average]
[info]   (min, avg, max) = (58217.967, 60682.105, 69925.626), stdev = 5169.403
[info]   CI (99.9%): [40776.576, 80587.635] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readPlayJson:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.200, 6.000), stdev = 0.837
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 15.06% complete, ETA 01:54:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 176382.008 ops/s
[info] # Warmup Iteration   2: 325952.657 ops/s
[info] # Warmup Iteration   3: 329515.598 ops/s
[info] # Warmup Iteration   4: 329305.463 ops/s
[info] # Warmup Iteration   5: 336944.840 ops/s
[info] Iteration   1: 338815.146 ops/s
[info]                  ·gc.alloc.rate:                   1643.721 MB/sec
[info]                  ·gc.alloc.rate.norm:              7636.409 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.193 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2018.180 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9376.072 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 333572.477 ops/s
[info]                  ·gc.alloc.rate:                   1622.855 MB/sec
[info]                  ·gc.alloc.rate.norm:              7654.764 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.295 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1346.676 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6352.073 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 339722.563 ops/s
[info]                  ·gc.alloc.rate:                   1666.646 MB/sec
[info]                  ·gc.alloc.rate.norm:              7722.174 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.289 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2021.695 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9367.245 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 341370.404 ops/s
[info]                  ·gc.alloc.rate:                   1647.339 MB/sec
[info]                  ·gc.alloc.rate.norm:              7595.728 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.365 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6221.800 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 338531.179 ops/s
[info]                  ·gc.alloc.rate:                   1633.187 MB/sec
[info]                  ·gc.alloc.rate.norm:              7593.766 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.718 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6280.382 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readUPickle":
[info]   338402.354 ±(99.9%) 11237.512 ops/s [Average]
[info]   (min, avg, max) = (333572.477, 338402.354, 341370.404), stdev = 2918.346
[info]   CI (99.9%): [327164.842, 349639.866] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readUPickle:·gc.alloc.rate":
[info]   1642.749 ±(99.9%) 63.281 MB/sec [Average]
[info]   (min, avg, max) = (1622.855, 1642.749, 1666.646), stdev = 16.434
[info]   CI (99.9%): [1579.468, 1706.030] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readUPickle:·gc.alloc.rate.norm":
[info]   7640.568 ±(99.9%) 202.656 B/op [Average]
[info]   (min, avg, max) = (7593.766, 7640.568, 7722.174), stdev = 52.629
[info]   CI (99.9%): [7437.912, 7843.224] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readUPickle:·gc.churn.PS_Eden_Space":
[info]   0.033 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.062), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   0.155 ±(99.9%) 0.568 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.155, 0.295), stdev = 0.148
[info]   CI (99.9%): [≈ 0, 0.724] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space":
[info]   1617.327 ±(99.9%) 1415.253 MB/sec [Average]
[info]   (min, avg, max) = (1346.676, 1617.327, 2021.695), stdev = 367.537
[info]   CI (99.9%): [202.074, 3032.580] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   7519.514 ±(99.9%) 6512.983 B/op [Average]
[info]   (min, avg, max) = (6221.800, 7519.514, 9376.072), stdev = 1691.401
[info]   CI (99.9%): [1006.531, 14032.497] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readUPickle:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.readUPickle:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 15.26% complete, ETA 01:54:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 105786.967 ops/s
[info] # Warmup Iteration   2: 221721.341 ops/s
[info] # Warmup Iteration   3: 234550.187 ops/s
[info] # Warmup Iteration   4: 235535.455 ops/s
[info] # Warmup Iteration   5: 235500.261 ops/s
[info] Iteration   1: 232375.831 ops/s
[info]                  ·gc.alloc.rate:                   1563.978 MB/sec
[info]                  ·gc.alloc.rate.norm:              10595.316 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.282 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2024.548 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13715.486 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 232961.043 ops/s
[info]                  ·gc.alloc.rate:                   1555.474 MB/sec
[info]                  ·gc.alloc.rate.norm:              10507.539 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.141 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.958 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9125.996 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 228340.867 ops/s
[info]                  ·gc.alloc.rate:                   1531.495 MB/sec
[info]                  ·gc.alloc.rate.norm:              10556.532 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.143 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1352.114 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9320.063 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 234616.471 ops/s
[info]                  ·gc.alloc.rate:                   1559.637 MB/sec
[info]                  ·gc.alloc.rate.norm:              10463.852 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.838 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1353.358 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9079.895 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 230403.070 ops/s
[info]                  ·gc.alloc.rate:                   1580.197 MB/sec
[info]                  ·gc.alloc.rate.norm:              10795.426 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.142 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2032.466 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13885.184 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce":
[info]   231739.457 ±(99.9%) 9335.488 ops/s [Average]
[info]   (min, avg, max) = (228340.867, 231739.457, 234616.471), stdev = 2424.397
[info]   CI (99.9%): [222403.969, 241074.944] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1558.156 ±(99.9%) 67.795 MB/sec [Average]
[info]   (min, avg, max) = (1531.495, 1558.156, 1580.197), stdev = 17.606
[info]   CI (99.9%): [1490.362, 1625.951] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   10583.733 ±(99.9%) 494.118 B/op [Average]
[info]   (min, avg, max) = (10463.852, 10583.733, 10795.426), stdev = 128.321
[info]   CI (99.9%): [10089.615, 11077.851] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   0.046 ±(99.9%) 0.174 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.125), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.220] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.309 ±(99.9%) 1.162 B/op [Average]
[info]   (min, avg, max) = (0.141, 0.309, 0.838), stdev = 0.302
[info]   CI (99.9%): [≈ 0, 1.471] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   1622.689 ±(99.9%) 1426.551 MB/sec [Average]
[info]   (min, avg, max) = (1350.958, 1622.689, 2032.466), stdev = 370.471
[info]   CI (99.9%): [196.137, 3049.240] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   11025.325 ±(99.9%) 9763.457 B/op [Average]
[info]   (min, avg, max) = (9079.895, 11025.325, 13885.184), stdev = 2535.539
[info]   CI (99.9%): [1261.868, 20788.782] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeCirce:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 15.46% complete, ETA 01:54:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 711510.134 ops/s
[info] # Warmup Iteration   2: 1350206.760 ops/s
[info] # Warmup Iteration   3: 1409244.537 ops/s
[info] # Warmup Iteration   4: 1376419.808 ops/s
[info] # Warmup Iteration   5: 1385753.118 ops/s
[info] Iteration   1: 1390295.595 ops/s
[info]                  ·gc.alloc.rate:                   842.753 MB/sec
[info]                  ·gc.alloc.rate.norm:              954.373 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.024 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.221 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 762.387 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 1405754.271 ops/s
[info]                  ·gc.alloc.rate:                   836.476 MB/sec
[info]                  ·gc.alloc.rate.norm:              936.663 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.308 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 753.952 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 1391337.605 ops/s
[info]                  ·gc.alloc.rate:                   851.687 MB/sec
[info]                  ·gc.alloc.rate.norm:              963.351 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.141 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1347.695 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1524.391 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 1402202.535 ops/s
[info]                  ·gc.alloc.rate:                   838.493 MB/sec
[info]                  ·gc.alloc.rate.norm:              941.252 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 756.647 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 1377361.538 ops/s
[info]                  ·gc.alloc.rate:                   822.885 MB/sec
[info]                  ·gc.alloc.rate.norm:              940.242 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.024 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.494 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 770.688 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala":
[info]   1393390.309 ±(99.9%) 43104.654 ops/s [Average]
[info]   (min, avg, max) = (1377361.538, 1393390.309, 1405754.271), stdev = 11194.142
[info]   CI (99.9%): [1350285.655, 1436494.962] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   838.459 ±(99.9%) 40.381 MB/sec [Average]
[info]   (min, avg, max) = (822.885, 838.459, 851.687), stdev = 10.487
[info]   CI (99.9%): [798.077, 878.840] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   947.176 ±(99.9%) 43.357 B/op [Average]
[info]   (min, avg, max) = (936.663, 947.176, 963.351), stdev = 11.260
[info]   CI (99.9%): [903.820, 990.533] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.033 ±(99.9%) 0.201 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.125), stdev = 0.052
[info]   CI (99.9%): [≈ 0, 0.235] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.038 ±(99.9%) 0.228 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.038, 0.141), stdev = 0.059
[info]   CI (99.9%): [≈ 0, 0.265] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   808.552 ±(99.9%) 1160.548 MB/sec [Average]
[info]   (min, avg, max) = (673.221, 808.552, 1347.695), stdev = 301.391
[info]   CI (99.9%): [≈ 0, 1969.100] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   913.613 ±(99.9%) 1314.977 B/op [Average]
[info]   (min, avg, max) = (753.952, 913.613, 1524.391), stdev = 341.495
[info]   CI (99.9%): [≈ 0, 2228.590] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJacksonScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 15.66% complete, ETA 01:54:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2229805.379 ops/s
[info] # Warmup Iteration   2: 2664476.357 ops/s
[info] # Warmup Iteration   3: 2763422.558 ops/s
[info] # Warmup Iteration   4: 2775907.170 ops/s
[info] # Warmup Iteration   5: 2771969.847 ops/s
[info] Iteration   1: 2816524.125 ops/s
[info]                  ·gc.alloc.rate:                   989.156 MB/sec
[info]                  ·gc.alloc.rate.norm:              552.861 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.012 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.972 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 752.293 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 2825757.810 ops/s
[info]                  ·gc.alloc.rate:                   987.026 MB/sec
[info]                  ·gc.alloc.rate.norm:              549.764 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.771 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 374.727 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 2819273.223 ops/s
[info]                  ·gc.alloc.rate:                   994.767 MB/sec
[info]                  ·gc.alloc.rate.norm:              555.343 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.070 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.519 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 751.155 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 2796028.280 ops/s
[info]                  ·gc.alloc.rate:                   965.852 MB/sec
[info]                  ·gc.alloc.rate.norm:              543.714 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.741 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 378.711 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 2793418.920 ops/s
[info]                  ·gc.alloc.rate:                   981.696 MB/sec
[info]                  ·gc.alloc.rate.norm:              553.037 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.059 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1346.407 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 758.497 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala":
[info]   2810200.471 ±(99.9%) 56026.726 ops/s [Average]
[info]   (min, avg, max) = (2793418.920, 2810200.471, 2825757.810), stdev = 14549.963
[info]   CI (99.9%): [2754173.745, 2866227.197] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   983.699 ±(99.9%) 42.439 MB/sec [Average]
[info]   (min, avg, max) = (965.852, 983.699, 994.767), stdev = 11.021
[info]   CI (99.9%): [941.260, 1026.139] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   550.944 ±(99.9%) 17.335 B/op [Average]
[info]   (min, avg, max) = (543.714, 550.944, 555.343), stdev = 4.502
[info]   CI (99.9%): [533.609, 568.279] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.050 ±(99.9%) 0.231 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.125), stdev = 0.060
[info]   CI (99.9%): [≈ 0, 0.281] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.028 ±(99.9%) 0.129 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.028, 0.070), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.157] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   1076.682 ±(99.9%) 1419.858 MB/sec [Average]
[info]   (min, avg, max) = (672.741, 1076.682, 1346.407), stdev = 368.733
[info]   CI (99.9%): [≈ 0, 2496.540] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   603.077 ±(99.9%) 795.770 B/op [Average]
[info]   (min, avg, max) = (374.727, 603.077, 758.497), stdev = 206.659
[info]   CI (99.9%): [≈ 0, 1398.847] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 15.86% complete, ETA 01:53:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2480651.867 ops/s
[info] # Warmup Iteration   2: 3024899.026 ops/s
[info] # Warmup Iteration   3: 3109365.969 ops/s
[info] # Warmup Iteration   4: 3080343.914 ops/s
[info] # Warmup Iteration   5: 3106939.521 ops/s
[info] Iteration   1: 3109449.924 ops/s
[info]                  ·gc.alloc.rate:      0.272 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.138 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 3108776.723 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 3108823.282 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 3102198.058 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 3108456.228 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc":
[info]   3107540.843 ±(99.9%) 11583.963 ops/s [Average]
[info]   (min, avg, max) = (3102198.058, 3107540.843, 3109449.924), stdev = 3008.318
[info]   CI (99.9%): [3095956.880, 3119124.806] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.055 ±(99.9%) 0.468 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.055, 0.272), stdev = 0.122
[info]   CI (99.9%): [≈ 0, 0.523] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.028 ±(99.9%) 0.237 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.028, 0.138), stdev = 0.062
[info]   CI (99.9%): [≈ 0, 0.265] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 16.06% complete, ETA 01:53:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 125973.064 ops/s
[info] # Warmup Iteration   2: 359021.591 ops/s
[info] # Warmup Iteration   3: 377923.386 ops/s
[info] # Warmup Iteration   4: 372847.534 ops/s
[info] # Warmup Iteration   5: 377762.512 ops/s
[info] Iteration   1: 379760.860 ops/s
[info]                  ·gc.alloc.rate:                   2415.571 MB/sec
[info]                  ·gc.alloc.rate.norm:              10011.143 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.518 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2027.664 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8403.494 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 379040.201 ops/s
[info]                  ·gc.alloc.rate:                   2411.746 MB/sec
[info]                  ·gc.alloc.rate.norm:              10012.611 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.259 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2030.967 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8431.767 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 376926.754 ops/s
[info]                  ·gc.alloc.rate:                   2393.514 MB/sec
[info]                  ·gc.alloc.rate.norm:              9994.521 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.348 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2710.802 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11319.410 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 374476.329 ops/s
[info]                  ·gc.alloc.rate:                   2372.143 MB/sec
[info]                  ·gc.alloc.rate.norm:              9970.417 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.262 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2035.564 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8555.736 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 375697.397 ops/s
[info]                  ·gc.alloc.rate:                   2431.194 MB/sec
[info]                  ·gc.alloc.rate.norm:              10186.637 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.174 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2716.754 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11383.127 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson":
[info]   377180.308 ±(99.9%) 8544.020 ops/s [Average]
[info]   (min, avg, max) = (374476.329, 377180.308, 379760.860), stdev = 2218.855
[info]   CI (99.9%): [368636.288, 385724.328] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   2404.834 ±(99.9%) 87.274 MB/sec [Average]
[info]   (min, avg, max) = (2372.143, 2404.834, 2431.194), stdev = 22.665
[info]   CI (99.9%): [2317.559, 2492.108] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   10035.066 ±(99.9%) 332.773 B/op [Average]
[info]   (min, avg, max) = (9970.417, 10035.066, 10186.637), stdev = 86.420
[info]   CI (99.9%): [9702.292, 10367.839] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   0.075 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.075, 0.125), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.197] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   0.312 ±(99.9%) 0.501 B/op [Average]
[info]   (min, avg, max) = (0.174, 0.312, 0.518), stdev = 0.130
[info]   CI (99.9%): [≈ 0, 0.813] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   2304.350 ±(99.9%) 1439.259 MB/sec [Average]
[info]   (min, avg, max) = (2027.664, 2304.350, 2716.754), stdev = 373.771
[info]   CI (99.9%): [865.091, 3743.609] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   9618.707 ±(99.9%) 6094.806 B/op [Average]
[info]   (min, avg, max) = (8403.494, 9618.707, 11383.127), stdev = 1582.802
[info]   CI (99.9%): [3523.900, 15713.513] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writePlayJson:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 16.27% complete, ETA 01:53:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 71144.045 ops/s
[info] # Warmup Iteration   2: 99299.115 ops/s
[info] # Warmup Iteration   3: 100878.370 ops/s
[info] # Warmup Iteration   4: 103689.705 ops/s
[info] # Warmup Iteration   5: 103575.709 ops/s
[info] Iteration   1: 98466.314 ops/s
[info]                  ·gc.alloc.rate:                   554.971 MB/sec
[info]                  ·gc.alloc.rate.norm:              8868.304 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2.936 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     46.917 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.662 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10764.946 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 103876.096 ops/s
[info]                  ·gc.alloc.rate:      567.096 MB/sec
[info]                  ·gc.alloc.rate.norm: 8592.004 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 103765.555 ops/s
[info]                  ·gc.alloc.rate:                   580.841 MB/sec
[info]                  ·gc.alloc.rate.norm:              8811.061 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.730 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10204.972 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 103900.749 ops/s
[info]                  ·gc.alloc.rate:                   589.205 MB/sec
[info]                  ·gc.alloc.rate.norm:              8926.194 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.733 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10191.616 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   5: 103142.719 ops/s
[info]                  ·gc.alloc.rate:                   591.067 MB/sec
[info]                  ·gc.alloc.rate.norm:              9019.569 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.318 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.134 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10256.637 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeUPickle":
[info]   102630.286 ±(99.9%) 9042.089 ops/s [Average]
[info]   (min, avg, max) = (98466.314, 102630.286, 103900.749), stdev = 2348.202
[info]   CI (99.9%): [93588.198, 111672.375] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeUPickle:·gc.alloc.rate":
[info]   576.636 ±(99.9%) 59.164 MB/sec [Average]
[info]   (min, avg, max) = (554.971, 576.636, 591.067), stdev = 15.365
[info]   CI (99.9%): [517.472, 635.799] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeUPickle:·gc.alloc.rate.norm":
[info]   8843.426 ±(99.9%) 617.174 B/op [Average]
[info]   (min, avg, max) = (8592.004, 8843.426, 9019.569), stdev = 160.278
[info]   CI (99.9%): [8226.253, 9460.600] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space":
[info]   0.591 ±(99.9%) 5.047 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.591, 2.936), stdev = 1.311
[info]   CI (99.9%): [≈ 0, 5.639] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   9.447 ±(99.9%) 80.659 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 9.447, 46.917), stdev = 20.947
[info]   CI (99.9%): [≈ 0, 90.106] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space":
[info]   538.252 ±(99.9%) 1158.629 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 538.252, 673.662), stdev = 300.892
[info]   CI (99.9%): [≈ 0, 1696.881] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   8283.634 ±(99.9%) 17854.720 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 8283.634, 10764.946), stdev = 4636.814
[info]   CI (99.9%): [≈ 0, 26138.354] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeUPickle:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfCharsBenchmark.writeUPickle:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 3.000), stdev = 1.304
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 16.47% complete, ETA 01:52:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7954.046 ops/s
[info] # Warmup Iteration   2: 24345.155 ops/s
[info] # Warmup Iteration   3: 24869.460 ops/s
[info] # Warmup Iteration   4: 25158.817 ops/s
[info] # Warmup Iteration   5: 25245.457 ops/s
[info] Iteration   1: 25326.660 ops/s
[info]                  ·gc.alloc.rate:                   1484.123 MB/sec
[info]                  ·gc.alloc.rate.norm:              92241.619 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.293 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1347.595 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 83756.110 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 25472.260 ops/s
[info]                  ·gc.alloc.rate:                   1487.617 MB/sec
[info]                  ·gc.alloc.rate.norm:              91896.490 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.286 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.177 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 83344.444 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 25535.355 ops/s
[info]                  ·gc.alloc.rate:                   1488.168 MB/sec
[info]                  ·gc.alloc.rate.norm:              91732.210 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.091 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 83220.969 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 25480.645 ops/s
[info]                  ·gc.alloc.rate:                   1497.192 MB/sec
[info]                  ·gc.alloc.rate.norm:              92470.097 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.286 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1351.679 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 83482.861 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 25074.566 ops/s
[info]                  ·gc.alloc.rate:                   1473.417 MB/sec
[info]                  ·gc.alloc.rate.norm:              92481.472 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.307 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1352.915 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 84917.973 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce":
[info]   25377.897 ±(99.9%) 717.527 ops/s [Average]
[info]   (min, avg, max) = (25074.566, 25377.897, 25535.355), stdev = 186.339
[info]   CI (99.9%): [24660.370, 26095.424] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:·gc.alloc.rate":
[info]   1486.103 ±(99.9%) 33.034 MB/sec [Average]
[info]   (min, avg, max) = (1473.417, 1486.103, 1497.192), stdev = 8.579
[info]   CI (99.9%): [1453.070, 1519.137] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   92164.377 ±(99.9%) 1303.704 B/op [Average]
[info]   (min, avg, max) = (91732.210, 92164.377, 92481.472), stdev = 338.568
[info]   CI (99.9%): [90860.673, 93468.081] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   0.017 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.053] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1.034 ±(99.9%) 2.227 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.034, 1.307), stdev = 0.578
[info]   CI (99.9%): [≈ 0, 3.261] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1350.291 ±(99.9%) 8.021 MB/sec [Average]
[info]   (min, avg, max) = (1347.595, 1350.291, 1352.915), stdev = 2.083
[info]   CI (99.9%): [1342.270, 1358.313] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   83744.471 ±(99.9%) 2639.699 B/op [Average]
[info]   (min, avg, max) = (83220.969, 83744.471, 84917.973), stdev = 685.522
[info]   CI (99.9%): [81104.772, 86384.171] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readCirce:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 16.67% complete, ETA 01:52:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.741 ops/s
[info] # Warmup Iteration   2: 80288.798 ops/s
[info] # Warmup Iteration   3: 87130.690 ops/s
[info] # Warmup Iteration   4: 87693.182 ops/s
[info] # Warmup Iteration   5: 86678.517 ops/s
[info] Iteration   1: 86673.191 ops/s
[info]                  ·gc.alloc.rate:                   815.939 MB/sec
[info]                  ·gc.alloc.rate.norm:              14818.743 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.134 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1338.763 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 24314.034 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 86200.708 ops/s
[info]                  ·gc.alloc.rate:                   798.707 MB/sec
[info]                  ·gc.alloc.rate.norm:              14584.574 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      668.735 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12211.271 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 87456.282 ops/s
[info]                  ·gc.alloc.rate:                   809.809 MB/sec
[info]                  ·gc.alloc.rate.norm:              14575.532 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      668.702 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12035.787 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 87604.692 ops/s
[info]                  ·gc.alloc.rate:                   804.189 MB/sec
[info]                  ·gc.alloc.rate.norm:              14449.195 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.374 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      668.728 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12015.320 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 87938.665 ops/s
[info]                  ·gc.alloc.rate:                   814.293 MB/sec
[info]                  ·gc.alloc.rate.norm:              14574.694 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.745 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      668.751 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11969.692 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava":
[info]   87174.707 ±(99.9%) 2755.294 ops/s [Average]
[info]   (min, avg, max) = (86200.708, 87174.707, 87938.665), stdev = 715.541
[info]   CI (99.9%): [84419.413, 89930.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   808.587 ±(99.9%) 27.572 MB/sec [Average]
[info]   (min, avg, max) = (798.707, 808.587, 815.939), stdev = 7.160
[info]   CI (99.9%): [781.016, 836.159] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   14600.548 ±(99.9%) 516.856 B/op [Average]
[info]   (min, avg, max) = (14449.195, 14600.548, 14818.743), stdev = 134.226
[info]   CI (99.9%): [14083.692, 15117.403] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   0.025 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.129] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   0.451 ±(99.9%) 1.892 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.451, 1.134), stdev = 0.491
[info]   CI (99.9%): [≈ 0, 2.343] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   802.736 ±(99.9%) 1153.838 MB/sec [Average]
[info]   (min, avg, max) = (668.702, 802.736, 1338.763), stdev = 299.648
[info]   CI (99.9%): [≈ 0, 1956.574] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   14509.221 ±(99.9%) 21108.551 B/op [Average]
[info]   (min, avg, max) = (11969.692, 14509.221, 24314.034), stdev = 5481.824
[info]   CI (99.9%): [≈ 0, 35617.772] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readDslJsonJava:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 16.87% complete, ETA 01:52:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 17107.480 ops/s
[info] # Warmup Iteration   2: 56718.243 ops/s
[info] # Warmup Iteration   3: 57666.104 ops/s
[info] # Warmup Iteration   4: 58480.836 ops/s
[info] # Warmup Iteration   5: 58536.577 ops/s
[info] Iteration   1: 59148.495 ops/s
[info]                  ·gc.alloc.rate:                   989.317 MB/sec
[info]                  ·gc.alloc.rate.norm:              26329.873 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.108 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.990 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17937.708 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 59368.754 ops/s
[info]                  ·gc.alloc.rate:                   1018.272 MB/sec
[info]                  ·gc.alloc.rate.norm:              26988.054 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.581 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 35742.494 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 59463.219 ops/s
[info]                  ·gc.alloc.rate:                   999.855 MB/sec
[info]                  ·gc.alloc.rate.norm:              26469.002 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.012 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17843.000 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 59505.805 ops/s
[info]                  ·gc.alloc.rate:                   1015.535 MB/sec
[info]                  ·gc.alloc.rate.norm:              26862.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.753 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.445 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 35694.255 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 58807.148 ops/s
[info]                  ·gc.alloc.rate:                   1000.535 MB/sec
[info]                  ·gc.alloc.rate.norm:              26783.845 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.963 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 18068.446 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala":
[info]   59258.684 ±(99.9%) 1107.764 ops/s [Average]
[info]   (min, avg, max) = (58807.148, 59258.684, 59505.805), stdev = 287.683
[info]   CI (99.9%): [58150.920, 60366.448] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1004.703 ±(99.9%) 46.331 MB/sec [Average]
[info]   (min, avg, max) = (989.317, 1004.703, 1018.272), stdev = 12.032
[info]   CI (99.9%): [958.372, 1051.034] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   26686.555 ±(99.9%) 1064.514 B/op [Average]
[info]   (min, avg, max) = (26329.873, 26686.555, 26988.054), stdev = 276.451
[info]   CI (99.9%): [25622.041, 27751.069] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.029 ±(99.9%) 0.176 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.104), stdev = 0.046
[info]   CI (99.9%): [≈ 0, 0.205] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.772 ±(99.9%) 4.647 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.772, 2.753), stdev = 1.207
[info]   CI (99.9%): [≈ 0, 5.419] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   944.198 ±(99.9%) 1422.982 MB/sec [Average]
[info]   (min, avg, max) = (673.990, 944.198, 1349.445), stdev = 369.544
[info]   CI (99.9%): [≈ 0, 2367.180] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   25057.181 ±(99.9%) 37476.924 B/op [Average]
[info]   (min, avg, max) = (17843.000, 25057.181, 35742.494), stdev = 9732.638
[info]   CI (99.9%): [≈ 0, 62534.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJacksonScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 17.07% complete, ETA 01:52:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 91554.915 ops/s
[info] # Warmup Iteration   2: 131580.205 ops/s
[info] # Warmup Iteration   3: 134635.649 ops/s
[info] # Warmup Iteration   4: 134723.990 ops/s
[info] # Warmup Iteration   5: 135162.566 ops/s
[info] Iteration   1: 135478.720 ops/s
[info]                  ·gc.alloc.rate:                   888.561 MB/sec
[info]                  ·gc.alloc.rate.norm:              10324.571 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.672 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7816.069 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 135657.495 ops/s
[info]                  ·gc.alloc.rate:                   892.728 MB/sec
[info]                  ·gc.alloc.rate.norm:              10357.697 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.096 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7797.857 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 137655.576 ops/s
[info]                  ·gc.alloc.rate:                   931.033 MB/sec
[info]                  ·gc.alloc.rate.norm:              10644.453 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.428 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1344.277 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15369.051 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 133556.833 ops/s
[info]                  ·gc.alloc.rate:                   878.991 MB/sec
[info]                  ·gc.alloc.rate.norm:              10359.420 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7920.268 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 137679.621 ops/s
[info]                  ·gc.alloc.rate:                   903.459 MB/sec
[info]                  ·gc.alloc.rate.norm:              10329.012 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.009 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7682.907 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala":
[info]   136005.649 ±(99.9%) 6647.244 ops/s [Average]
[info]   (min, avg, max) = (133556.833, 136005.649, 137679.621), stdev = 1726.268
[info]   CI (99.9%): [129358.405, 142652.894] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   898.954 ±(99.9%) 76.884 MB/sec [Average]
[info]   (min, avg, max) = (878.991, 898.954, 931.033), stdev = 19.966
[info]   CI (99.9%): [822.071, 975.838] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   10403.031 ±(99.9%) 523.307 B/op [Average]
[info]   (min, avg, max) = (10324.571, 10403.031, 10644.453), stdev = 135.901
[info]   CI (99.9%): [9879.724, 10926.337] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.025 ±(99.9%) 0.215 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.125), stdev = 0.056
[info]   CI (99.9%): [≈ 0, 0.240] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.286 ±(99.9%) 2.459 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.286, 1.428), stdev = 0.639
[info]   CI (99.9%): [≈ 0, 2.745] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   806.617 ±(99.9%) 1157.354 MB/sec [Average]
[info]   (min, avg, max) = (672.009, 806.617, 1344.277), stdev = 300.561
[info]   CI (99.9%): [≈ 0, 1963.971] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   9317.231 ±(99.9%) 13031.036 B/op [Average]
[info]   (min, avg, max) = (7682.907, 9317.231, 15369.051), stdev = 3384.119
[info]   CI (99.9%): [≈ 0, 22348.266] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readJsoniterScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 17.27% complete, ETA 01:51:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5156.052 ops/s
[info] # Warmup Iteration   2: 33700.702 ops/s
[info] # Warmup Iteration   3: 34994.490 ops/s
[info] # Warmup Iteration   4: 34687.078 ops/s
[info] # Warmup Iteration   5: 35251.693 ops/s
[info] Iteration   1: 35759.490 ops/s
[info]                  ·gc.alloc.rate:                   1734.712 MB/sec
[info]                  ·gc.alloc.rate.norm:              76367.142 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1347.948 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 59340.635 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 35867.971 ops/s
[info]                  ·gc.alloc.rate:                   1749.000 MB/sec
[info]                  ·gc.alloc.rate.norm:              76736.560 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.740 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2024.319 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 88816.050 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 35876.957 ops/s
[info]                  ·gc.alloc.rate:                   1760.043 MB/sec
[info]                  ·gc.alloc.rate.norm:              77214.601 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.826 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2026.701 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 88913.143 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 35534.804 ops/s
[info]                  ·gc.alloc.rate:                   1728.960 MB/sec
[info]                  ·gc.alloc.rate.norm:              76589.043 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.922 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1352.691 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 59921.157 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 35284.487 ops/s
[info]                  ·gc.alloc.rate:                   1717.078 MB/sec
[info]                  ·gc.alloc.rate.norm:              76583.767 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1354.375 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 60406.773 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson":
[info]   35664.742 ±(99.9%) 975.651 ops/s [Average]
[info]   (min, avg, max) = (35284.487, 35664.742, 35876.957), stdev = 253.373
[info]   CI (99.9%): [34689.091, 36640.392] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1737.959 ±(99.9%) 64.924 MB/sec [Average]
[info]   (min, avg, max) = (1717.078, 1737.959, 1760.043), stdev = 16.861
[info]   CI (99.9%): [1673.035, 1802.883] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   76698.223 ±(99.9%) 1221.861 B/op [Average]
[info]   (min, avg, max) = (76367.142, 76698.223, 77214.601), stdev = 317.313
[info]   CI (99.9%): [75476.362, 77920.083] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   0.025 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.130] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   1.098 ±(99.9%) 4.585 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.098, 2.740), stdev = 1.191
[info]   CI (99.9%): [≈ 0, 5.682] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   1621.207 ±(99.9%) 1421.216 MB/sec [Average]
[info]   (min, avg, max) = (1347.948, 1621.207, 2026.701), stdev = 369.085
[info]   CI (99.9%): [199.991, 3042.422] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   71479.552 ±(99.9%) 61128.305 B/op [Average]
[info]   (min, avg, max) = (59340.635, 71479.552, 88913.143), stdev = 15874.827
[info]   CI (99.9%): [10351.247, 132607.857] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readPlayJson:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 17.47% complete, ETA 01:51:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 40348.740 ops/s
[info] # Warmup Iteration   2: 61461.916 ops/s
[info] # Warmup Iteration   3: 65080.453 ops/s
[info] # Warmup Iteration   4: 64627.359 ops/s
[info] # Warmup Iteration   5: 64560.750 ops/s
[info] Iteration   1: 65021.526 ops/s
[info]                  ·gc.alloc.rate:                   1205.611 MB/sec
[info]                  ·gc.alloc.rate.norm:              29189.728 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.910 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 32586.605 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 65812.329 ops/s
[info]                  ·gc.alloc.rate:                   1200.615 MB/sec
[info]                  ·gc.alloc.rate.norm:              28705.447 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.930 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16089.051 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 65911.464 ops/s
[info]                  ·gc.alloc.rate:                   1215.723 MB/sec
[info]                  ·gc.alloc.rate.norm:              29033.981 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.485 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1346.724 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 32162.566 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 63968.110 ops/s
[info]                  ·gc.alloc.rate:                   1182.618 MB/sec
[info]                  ·gc.alloc.rate.norm:              29088.899 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.537 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1347.331 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 33140.358 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 64465.050 ops/s
[info]                  ·gc.alloc.rate:                   1182.054 MB/sec
[info]                  ·gc.alloc.rate.norm:              28861.661 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.091 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16458.966 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readUPickle":
[info]   65035.696 ±(99.9%) 3242.156 ops/s [Average]
[info]   (min, avg, max) = (63968.110, 65035.696, 65911.464), stdev = 841.978
[info]   CI (99.9%): [61793.540, 68277.852] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readUPickle:·gc.alloc.rate":
[info]   1197.324 ±(99.9%) 56.706 MB/sec [Average]
[info]   (min, avg, max) = (1182.054, 1197.324, 1215.723), stdev = 14.726
[info]   CI (99.9%): [1140.618, 1254.030] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readUPickle:·gc.alloc.rate.norm":
[info]   28975.943 ±(99.9%) 740.836 B/op [Average]
[info]   (min, avg, max) = (28705.447, 28975.943, 29189.728), stdev = 192.393
[info]   CI (99.9%): [28235.108, 29716.779] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readUPickle:·gc.churn.PS_Eden_Space":
[info]   0.033 ±(99.9%) 0.185 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.104), stdev = 0.048
[info]   CI (99.9%): [≈ 0, 0.218] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   0.804 ±(99.9%) 4.434 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.804, 2.485), stdev = 1.151
[info]   CI (99.9%): [≈ 0, 5.238] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readUPickle:·gc.churn.PS_Survivor_Space":
[info]   1077.397 ±(99.9%) 1419.722 MB/sec [Average]
[info]   (min, avg, max) = (672.930, 1077.397, 1347.331), stdev = 368.697
[info]   CI (99.9%): [≈ 0, 2497.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   26087.509 ±(99.9%) 34525.337 B/op [Average]
[info]   (min, avg, max) = (16089.051, 26087.509, 33140.358), stdev = 8966.120
[info]   CI (99.9%): [≈ 0, 60612.846] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readUPickle:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.readUPickle:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 17.67% complete, ETA 01:51:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 12656.592 ops/s
[info] # Warmup Iteration   2: 29479.979 ops/s
[info] # Warmup Iteration   3: 30636.384 ops/s
[info] # Warmup Iteration   4: 30503.081 ops/s
[info] # Warmup Iteration   5: 30501.683 ops/s
[info] Iteration   1: 30753.346 ops/s
[info]                  ·gc.alloc.rate:      351.184 MB/sec
[info]                  ·gc.alloc.rate.norm: 17976.013 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 30539.185 ops/s
[info]                  ·gc.alloc.rate:                   365.725 MB/sec
[info]                  ·gc.alloc.rate.norm:              18848.708 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.073 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.750 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 34723.674 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 30882.350 ops/s
[info]                  ·gc.alloc.rate:      353.311 MB/sec
[info]                  ·gc.alloc.rate.norm: 18004.946 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 30729.389 ops/s
[info]                  ·gc.alloc.rate:                   369.588 MB/sec
[info]                  ·gc.alloc.rate.norm:              18926.535 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.729 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     37.316 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.897 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 34510.139 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 30894.736 ops/s
[info]                  ·gc.alloc.rate:      352.862 MB/sec
[info]                  ·gc.alloc.rate.norm: 17976.013 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce":
[info]   30759.801 ±(99.9%) 554.225 ops/s [Average]
[info]   (min, avg, max) = (30539.185, 30759.801, 30894.736), stdev = 143.930
[info]   CI (99.9%): [30205.577, 31314.026] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:·gc.alloc.rate":
[info]   358.534 ±(99.9%) 32.639 MB/sec [Average]
[info]   (min, avg, max) = (351.184, 358.534, 369.588), stdev = 8.476
[info]   CI (99.9%): [325.895, 391.172] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   18346.443 ±(99.9%) 1905.809 B/op [Average]
[info]   (min, avg, max) = (17976.013, 18346.443, 18926.535), stdev = 494.932
[info]   CI (99.9%): [16440.634, 20252.252] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   0.150 ±(99.9%) 1.246 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.150, 0.729), stdev = 0.324
[info]   CI (99.9%): [≈ 0, 1.396] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   7.678 ±(99.9%) 63.824 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 7.678, 37.316), stdev = 16.575
[info]   CI (99.9%): [≈ 0, 71.502] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   269.529 ±(99.9%) 1421.150 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 269.529, 673.897), stdev = 369.068
[info]   CI (99.9%): [≈ 0, 1690.680] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   13846.763 ±(99.9%) 73010.562 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 13846.763, 34723.674), stdev = 18960.611
[info]   CI (99.9%): [≈ 0, 86857.324] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:·gc.count":
[info]   2.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.000), stdev = 0.548
[info]   CI (99.9%): [2.000, 2.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeCirce:·gc.time":
[info]   4.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 2.000), stdev = 1.095
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 17.87% complete, ETA 01:51:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 13836.219 ops/s
[info] # Warmup Iteration   2: 29009.227 ops/s
[info] # Warmup Iteration   3: 29307.210 ops/s
[info] # Warmup Iteration   4: 29661.733 ops/s
[info] # Warmup Iteration   5: 29686.464 ops/s
[info] Iteration   1: 29938.617 ops/s
[info]                  ·gc.alloc.rate:      334.735 MB/sec
[info]                  ·gc.alloc.rate.norm: 17600.017 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 29835.799 ops/s
[info]                  ·gc.alloc.rate:                   345.108 MB/sec
[info]                  ·gc.alloc.rate.norm:              18206.689 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.359 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 35576.811 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 29875.065 ops/s
[info]                  ·gc.alloc.rate:      334.047 MB/sec
[info]                  ·gc.alloc.rate.norm: 17600.015 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 29782.268 ops/s
[info]                  ·gc.alloc.rate:                   347.189 MB/sec
[info]                  ·gc.alloc.rate.norm:              18347.727 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1.145 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     60.496 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.363 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 35637.716 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 29920.956 ops/s
[info]                  ·gc.alloc.rate:      334.661 MB/sec
[info]                  ·gc.alloc.rate.norm: 17600.014 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala":
[info]   29870.541 ±(99.9%) 245.019 ops/s [Average]
[info]   (min, avg, max) = (29782.268, 29870.541, 29938.617), stdev = 63.631
[info]   CI (99.9%): [29625.522, 30115.560] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   339.148 ±(99.9%) 24.792 MB/sec [Average]
[info]   (min, avg, max) = (334.047, 339.148, 347.189), stdev = 6.438
[info]   CI (99.9%): [314.356, 363.940] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   17870.892 ±(99.9%) 1441.107 B/op [Average]
[info]   (min, avg, max) = (17600.014, 17870.892, 18347.727), stdev = 374.251
[info]   CI (99.9%): [16429.786, 19311.999] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.229 ±(99.9%) 1.971 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.229, 1.145), stdev = 0.512
[info]   CI (99.9%): [≈ 0, 2.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   12.099 ±(99.9%) 104.178 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 12.099, 60.496), stdev = 27.055
[info]   CI (99.9%): [≈ 0, 116.277] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   269.744 ±(99.9%) 1422.285 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 269.744, 674.363), stdev = 369.363
[info]   CI (99.9%): [≈ 0, 1692.029] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   14242.905 ±(99.9%) 75098.775 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 14242.905, 35637.716), stdev = 19502.913
[info]   CI (99.9%): [≈ 0, 89341.681] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:·gc.count":
[info]   2.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.000), stdev = 0.548
[info]   CI (99.9%): [2.000, 2.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJacksonScala:·gc.time":
[info]   3.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 2.000), stdev = 0.894
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 18.07% complete, ETA 01:50:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 21541.232 ops/s
[info] # Warmup Iteration   2: 30536.334 ops/s
[info] # Warmup Iteration   3: 32982.325 ops/s
[info] # Warmup Iteration   4: 32150.042 ops/s
[info] # Warmup Iteration   5: 33192.408 ops/s
[info] Iteration   1: 33351.899 ops/s
[info]                  ·gc.alloc.rate:                   377.836 MB/sec
[info]                  ·gc.alloc.rate.norm:              17831.984 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.031 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.474 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      511.522 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 24141.326 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 33393.281 ops/s
[info]                  ·gc.alloc.rate:      366.825 MB/sec
[info]                  ·gc.alloc.rate.norm: 17288.016 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 33330.344 ops/s
[info]                  ·gc.alloc.rate:                   388.625 MB/sec
[info]                  ·gc.alloc.rate.norm:              18349.639 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.170 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 31832.221 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 33508.742 ops/s
[info]                  ·gc.alloc.rate:      368.085 MB/sec
[info]                  ·gc.alloc.rate.norm: 17288.012 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 31833.647 ops/s
[info]                  ·gc.alloc.rate:                   370.873 MB/sec
[info]                  ·gc.alloc.rate.norm:              18330.859 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2.894 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     143.047 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.273 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 33326.809 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala":
[info]   33083.583 ±(99.9%) 2703.619 ops/s [Average]
[info]   (min, avg, max) = (31833.647, 33083.583, 33508.742), stdev = 702.121
[info]   CI (99.9%): [30379.964, 35787.202] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   374.449 ±(99.9%) 34.647 MB/sec [Average]
[info]   (min, avg, max) = (366.825, 374.449, 388.625), stdev = 8.998
[info]   CI (99.9%): [339.802, 409.096] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   17817.702 ±(99.9%) 2026.286 B/op [Average]
[info]   (min, avg, max) = (17288.012, 17817.702, 18349.639), stdev = 526.220
[info]   CI (99.9%): [15791.416, 19843.988] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.585 ±(99.9%) 4.971 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.585, 2.894), stdev = 1.291
[info]   CI (99.9%): [≈ 0, 5.556] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   28.904 ±(99.9%) 245.713 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 28.904, 143.047), stdev = 63.811
[info]   CI (99.9%): [≈ 0, 274.617] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   371.993 ±(99.9%) 1332.387 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 371.993, 674.273), stdev = 346.017
[info]   CI (99.9%): [≈ 0, 1704.381] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   17860.071 ±(99.9%) 64199.005 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 17860.071, 33326.809), stdev = 16672.278
[info]   CI (99.9%): [≈ 0, 82059.076] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.800, 3.000), stdev = 1.643
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 18.27% complete, ETA 01:50:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 24782.289 ops/s
[info] # Warmup Iteration   2: 31589.400 ops/s
[info] # Warmup Iteration   3: 32971.794 ops/s
[info] # Warmup Iteration   4: 33017.327 ops/s
[info] # Warmup Iteration   5: 33301.882 ops/s
[info] Iteration   1: 33418.759 ops/s
[info]                  ·gc.alloc.rate:                   338.562 MB/sec
[info]                  ·gc.alloc.rate.norm:              15943.206 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      511.640 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 24093.656 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 33505.399 ops/s
[info]                  ·gc.alloc.rate:      329.958 MB/sec
[info]                  ·gc.alloc.rate.norm: 15498.821 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 33440.557 ops/s
[info]                  ·gc.alloc.rate:                   344.925 MB/sec
[info]                  ·gc.alloc.rate.norm:              16232.452 B/op
[info]                  ·gc.churn.PS_Eden_Space:          ≈ 10⁻⁵ MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.001 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.162 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 31726.580 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 33558.296 ops/s
[info]                  ·gc.alloc.rate:      330.219 MB/sec
[info]                  ·gc.alloc.rate.norm: 15488.012 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 33358.910 ops/s
[info]                  ·gc.alloc.rate:                   346.037 MB/sec
[info]                  ·gc.alloc.rate.norm:              16322.065 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2.811 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     132.584 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.275 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 31804.553 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc":
[info]   33456.384 ±(99.9%) 297.996 ops/s [Average]
[info]   (min, avg, max) = (33358.910, 33456.384, 33558.296), stdev = 77.389
[info]   CI (99.9%): [33158.388, 33754.380] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   337.940 ±(99.9%) 29.707 MB/sec [Average]
[info]   (min, avg, max) = (329.958, 337.940, 346.037), stdev = 7.715
[info]   CI (99.9%): [308.233, 367.647] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   15896.911 ±(99.9%) 1517.419 B/op [Average]
[info]   (min, avg, max) = (15488.012, 15896.911, 16322.065), stdev = 394.069
[info]   CI (99.9%): [14379.493, 17414.330] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   0.562 ±(99.9%) 4.840 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.562, 2.811), stdev = 1.257
[info]   CI (99.9%): [≈ 0, 5.403] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   26.517 ±(99.9%) 228.318 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 26.517, 132.584), stdev = 59.293
[info]   CI (99.9%): [≈ 0, 254.835] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space":
[info]   372.015 ±(99.9%) 1332.427 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 372.015, 674.275), stdev = 346.027
[info]   CI (99.9%): [≈ 0, 1704.443] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   17524.958 ±(99.9%) 62772.258 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 17524.958, 31804.553), stdev = 16301.756
[info]   CI (99.9%): [≈ 0, 80297.216] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.600, 3.000), stdev = 1.517
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 18.47% complete, ETA 01:50:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 16378.640 ops/s
[info] # Warmup Iteration   2: 26488.644 ops/s
[info] # Warmup Iteration   3: 25745.988 ops/s
[info] # Warmup Iteration   4: 26821.708 ops/s
[info] # Warmup Iteration   5: 26481.176 ops/s
[info] Iteration   1: 26333.171 ops/s
[info]                  ·gc.alloc.rate:                   481.976 MB/sec
[info]                  ·gc.alloc.rate.norm:              28815.567 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      675.233 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 40369.658 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 26867.702 ops/s
[info]                  ·gc.alloc.rate:      460.421 MB/sec
[info]                  ·gc.alloc.rate.norm: 26969.993 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 26387.225 ops/s
[info]                  ·gc.alloc.rate:                   474.683 MB/sec
[info]                  ·gc.alloc.rate.norm:              28310.065 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2.415 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     144.024 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      675.505 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 40287.059 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 26829.956 ops/s
[info]                  ·gc.alloc.rate:                   478.973 MB/sec
[info]                  ·gc.alloc.rate.norm:              28094.565 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.442 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.833 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 39582.914 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 26876.792 ops/s
[info]                  ·gc.alloc.rate:      460.428 MB/sec
[info]                  ·gc.alloc.rate.norm: 26960.607 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeUPickle":
[info]   26658.969 ±(99.9%) 1054.967 ops/s [Average]
[info]   (min, avg, max) = (26333.171, 26658.969, 26876.792), stdev = 273.972
[info]   CI (99.9%): [25604.002, 27713.936] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeUPickle:·gc.alloc.rate":
[info]   471.296 ±(99.9%) 39.498 MB/sec [Average]
[info]   (min, avg, max) = (460.421, 471.296, 481.976), stdev = 10.258
[info]   CI (99.9%): [431.798, 510.794] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeUPickle:·gc.alloc.rate.norm":
[info]   27830.160 ±(99.9%) 3202.787 B/op [Average]
[info]   (min, avg, max) = (26960.607, 27830.160, 28815.567), stdev = 831.754
[info]   CI (99.9%): [24627.372, 31032.947] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeUPickle:·gc.churn.PS_Eden_Space":
[info]   0.491 ±(99.9%) 4.141 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.491, 2.415), stdev = 1.075
[info]   CI (99.9%): [≈ 0, 4.633] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   29.293 ±(99.9%) 247.001 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 29.293, 144.024), stdev = 64.145
[info]   CI (99.9%): [≈ 0, 276.294] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space":
[info]   405.114 ±(99.9%) 1424.034 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 405.114, 675.505), stdev = 369.817
[info]   CI (99.9%): [≈ 0, 1829.149] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   24047.926 ±(99.9%) 84540.046 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 24047.926, 40369.658), stdev = 21954.782
[info]   CI (99.9%): [≈ 0, 108587.972] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeUPickle:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDoublesBenchmark.writeUPickle:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 3.000), stdev = 1.304
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 18.67% complete, ETA 01:50:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5244.066 ops/s
[info] # Warmup Iteration   2: 18926.361 ops/s
[info] # Warmup Iteration   3: 20394.547 ops/s
[info] # Warmup Iteration   4: 20873.579 ops/s
[info] # Warmup Iteration   5: 20938.659 ops/s
[info] Iteration   1: 20612.259 ops/s
[info]                  ·gc.alloc.rate:                   748.117 MB/sec
[info]                  ·gc.alloc.rate.norm:              57120.500 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.178 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 51475.087 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 20127.040 ops/s
[info]                  ·gc.alloc.rate:                   723.864 MB/sec
[info]                  ·gc.alloc.rate.norm:              56610.428 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.058 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 52715.296 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 20702.890 ops/s
[info]                  ·gc.alloc.rate:                   743.964 MB/sec
[info]                  ·gc.alloc.rate.norm:              56560.518 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.582 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.398 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 51271.705 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 21023.075 ops/s
[info]                  ·gc.alloc.rate:                   748.966 MB/sec
[info]                  ·gc.alloc.rate.norm:              56073.858 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3.117 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.403 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 50491.425 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   5: 21007.252 ops/s
[info]                  ·gc.alloc.rate:                   757.429 MB/sec
[info]                  ·gc.alloc.rate.norm:              56758.676 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.640 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 50554.828 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce":
[info]   20694.503 ±(99.9%) 1407.752 ops/s [Average]
[info]   (min, avg, max) = (20127.040, 20694.503, 21023.075), stdev = 365.589
[info]   CI (99.9%): [19286.751, 22102.255] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:·gc.alloc.rate":
[info]   744.468 ±(99.9%) 48.183 MB/sec [Average]
[info]   (min, avg, max) = (723.864, 744.468, 757.429), stdev = 12.513
[info]   CI (99.9%): [696.285, 792.651] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   56624.796 ±(99.9%) 1455.519 B/op [Average]
[info]   (min, avg, max) = (56073.858, 56624.796, 57120.500), stdev = 377.994
[info]   CI (99.9%): [55169.277, 58080.315] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   0.012 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.940 ±(99.9%) 5.378 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.940, 3.117), stdev = 1.397
[info]   CI (99.9%): [≈ 0, 6.318] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   674.335 ±(99.9%) 0.868 MB/sec [Average]
[info]   (min, avg, max) = (674.058, 674.335, 674.640), stdev = 0.225
[info]   CI (99.9%): [673.468, 675.203] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   51301.668 ±(99.9%) 3467.494 B/op [Average]
[info]   (min, avg, max) = (50491.425, 51301.668, 52715.296), stdev = 900.497
[info]   CI (99.9%): [47834.175, 54769.162] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readCirce:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 0.707
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 18.88% complete, ETA 01:49:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5247.443 ops/s
[info] # Warmup Iteration   2: 16837.664 ops/s
[info] # Warmup Iteration   3: 18659.114 ops/s
[info] # Warmup Iteration   4: 19163.667 ops/s
[info] # Warmup Iteration   5: 18766.059 ops/s
[info] Iteration   1: 19110.171 ops/s
[info]                  ·gc.alloc.rate:                   555.274 MB/sec
[info]                  ·gc.alloc.rate.norm:              45736.385 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1.311 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     107.998 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.320 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 55541.889 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 19084.018 ops/s
[info]                  ·gc.alloc.rate:                   575.667 MB/sec
[info]                  ·gc.alloc.rate.norm:              47482.510 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.997 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 55592.986 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 19272.463 ops/s
[info]                  ·gc.alloc.rate:      545.998 MB/sec
[info]                  ·gc.alloc.rate.norm: 44592.021 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 19192.046 ops/s
[info]                  ·gc.alloc.rate:                   566.717 MB/sec
[info]                  ·gc.alloc.rate.norm:              46477.177 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.707 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.022 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 55277.330 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 19063.329 ops/s
[info]                  ·gc.alloc.rate:                   558.041 MB/sec
[info]                  ·gc.alloc.rate.norm:              46060.374 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.310 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 55657.134 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala":
[info]   19144.405 ±(99.9%) 333.811 ops/s [Average]
[info]   (min, avg, max) = (19063.329, 19144.405, 19272.463), stdev = 86.690
[info]   CI (99.9%): [18810.595, 19478.216] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   560.339 ±(99.9%) 43.575 MB/sec [Average]
[info]   (min, avg, max) = (545.998, 560.339, 575.667), stdev = 11.316
[info]   CI (99.9%): [516.764, 603.915] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   46069.694 ±(99.9%) 4064.568 B/op [Average]
[info]   (min, avg, max) = (44592.021, 46069.694, 47482.510), stdev = 1055.556
[info]   CI (99.9%): [42005.125, 50134.262] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.266 ±(99.9%) 2.249 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.266, 1.311), stdev = 0.584
[info]   CI (99.9%): [≈ 0, 2.516] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   21.941 ±(99.9%) 185.266 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 21.941, 107.998), stdev = 48.113
[info]   CI (99.9%): [≈ 0, 207.207] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   539.330 ±(99.9%) 1160.948 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 539.330, 674.320), stdev = 301.494
[info]   CI (99.9%): [≈ 0, 1700.278] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   44413.868 ±(99.9%) 95605.817 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 44413.868, 55657.134), stdev = 24828.527
[info]   CI (99.9%): [≈ 0, 140019.685] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJacksonScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 0.837
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 19.08% complete, ETA 01:49:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 90251.248 ops/s
[info] # Warmup Iteration   2: 96098.429 ops/s
[info] # Warmup Iteration   3: 103555.015 ops/s
[info] # Warmup Iteration   4: 101618.431 ops/s
[info] # Warmup Iteration   5: 103692.153 ops/s
[info] Iteration   1: 100249.740 ops/s
[info]                  ·gc.alloc.rate:                   271.195 MB/sec
[info]                  ·gc.alloc.rate.norm:              4257.559 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      511.597 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8031.699 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 104002.603 ops/s
[info]                  ·gc.alloc.rate:      270.625 MB/sec
[info]                  ·gc.alloc.rate.norm: 4096.004 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 103465.320 ops/s
[info]                  ·gc.alloc.rate:                   282.259 MB/sec
[info]                  ·gc.alloc.rate.norm:              4294.645 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      511.462 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7782.016 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 100806.543 ops/s
[info]                  ·gc.alloc.rate:      268.103 MB/sec
[info]                  ·gc.alloc.rate.norm: 4186.181 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 103940.814 ops/s
[info]                  ·gc.alloc.rate:                   286.732 MB/sec
[info]                  ·gc.alloc.rate.norm:              4342.298 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.332 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10196.996 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala":
[info]   102493.004 ±(99.9%) 6994.200 ops/s [Average]
[info]   (min, avg, max) = (100249.740, 102493.004, 104002.603), stdev = 1816.372
[info]   CI (99.9%): [95498.804, 109487.204] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   275.783 ±(99.9%) 31.546 MB/sec [Average]
[info]   (min, avg, max) = (268.103, 275.783, 286.732), stdev = 8.192
[info]   CI (99.9%): [244.237, 307.329] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   4235.337 ±(99.9%) 371.751 B/op [Average]
[info]   (min, avg, max) = (4096.004, 4235.337, 4342.298), stdev = 96.542
[info]   CI (99.9%): [3863.587, 4607.088] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   339.278 ±(99.9%) 1219.433 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 339.278, 673.332), stdev = 316.683
[info]   CI (99.9%): [≈ 0, 1558.711] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   5202.142 ±(99.9%) 18640.386 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 5202.142, 10196.996), stdev = 4840.849
[info]   CI (99.9%): [≈ 0, 23842.528] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readJsoniterScala:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.600, 3.000), stdev = 1.517
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 19.28% complete, ETA 01:49:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2788.495 ops/s
[info] # Warmup Iteration   2: 13794.669 ops/s
[info] # Warmup Iteration   3: 15838.108 ops/s
[info] # Warmup Iteration   4: 16098.648 ops/s
[info] # Warmup Iteration   5: 16084.124 ops/s
[info] Iteration   1: 15642.337 ops/s
[info]                  ·gc.alloc.rate:                   971.642 MB/sec
[info]                  ·gc.alloc.rate.norm:              97778.235 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.094 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.680 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 67894.374 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 15673.585 ops/s
[info]                  ·gc.alloc.rate:                   980.022 MB/sec
[info]                  ·gc.alloc.rate.norm:              98415.882 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.753 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 67760.110 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 15106.265 ops/s
[info]                  ·gc.alloc.rate:                   990.252 MB/sec
[info]                  ·gc.alloc.rate.norm:              103183.422 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.396 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 140605.929 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 16085.169 ops/s
[info]                  ·gc.alloc.rate:                   997.239 MB/sec
[info]                  ·gc.alloc.rate.norm:              97592.096 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.629 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 66020.728 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 15881.691 ops/s
[info]                  ·gc.alloc.rate:                   1000.166 MB/sec
[info]                  ·gc.alloc.rate.norm:              99132.252 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.063 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.968 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 133803.182 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson":
[info]   15677.809 ±(99.9%) 1408.842 ops/s [Average]
[info]   (min, avg, max) = (15106.265, 15677.809, 16085.169), stdev = 365.872
[info]   CI (99.9%): [14268.968, 17086.651] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   987.864 ±(99.9%) 45.950 MB/sec [Average]
[info]   (min, avg, max) = (971.642, 987.864, 1000.166), stdev = 11.933
[info]   CI (99.9%): [941.914, 1033.814] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   99220.377 ±(99.9%) 8842.192 B/op [Average]
[info]   (min, avg, max) = (97592.096, 99220.377, 103183.422), stdev = 2296.289
[info]   CI (99.9%): [90378.186, 108062.569] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   0.008 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   0.831 ±(99.9%) 4.384 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.831, 2.094), stdev = 1.139
[info]   CI (99.9%): [≈ 0, 5.216] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   944.685 ±(99.9%) 1423.622 MB/sec [Average]
[info]   (min, avg, max) = (674.629, 944.685, 1349.968), stdev = 369.710
[info]   CI (99.9%): [≈ 0, 2368.307] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   95216.865 ±(99.9%) 147910.312 B/op [Average]
[info]   (min, avg, max) = (66020.728, 95216.865, 140605.929), stdev = 38411.838
[info]   CI (99.9%): [≈ 0, 243127.177] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readPlayJson:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 3.000), stdev = 0.894
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 19.48% complete, ETA 01:48:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2615.161 ops/s
[info] # Warmup Iteration   2: 15498.804 ops/s
[info] # Warmup Iteration   3: 20206.622 ops/s
[info] # Warmup Iteration   4: 20251.007 ops/s
[info] # Warmup Iteration   5: 20110.787 ops/s
[info] Iteration   1: 20448.386 ops/s
[info]                  ·gc.alloc.rate:                   632.944 MB/sec
[info]                  ·gc.alloc.rate.norm:              48725.923 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3.122 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     240.329 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.653 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 51782.797 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 20429.822 ops/s
[info]                  ·gc.alloc.rate:                   643.417 MB/sec
[info]                  ·gc.alloc.rate.norm:              49573.843 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4.811 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.013 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 51777.096 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 20727.206 ops/s
[info]                  ·gc.alloc.rate:                   645.924 MB/sec
[info]                  ·gc.alloc.rate.norm:              49049.268 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.078 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 51035.318 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   4: 20840.288 ops/s
[info]                  ·gc.alloc.rate:                   641.912 MB/sec
[info]                  ·gc.alloc.rate.norm:              48487.549 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.572 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      671.312 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 50708.339 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 20750.552 ops/s
[info]                  ·gc.alloc.rate:                   645.855 MB/sec
[info]                  ·gc.alloc.rate.norm:              48990.380 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      671.403 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 50928.236 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readUPickle":
[info]   20639.251 ±(99.9%) 722.521 ops/s [Average]
[info]   (min, avg, max) = (20429.822, 20639.251, 20840.288), stdev = 187.636
[info]   CI (99.9%): [19916.730, 21361.771] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readUPickle:·gc.alloc.rate":
[info]   642.011 ±(99.9%) 20.583 MB/sec [Average]
[info]   (min, avg, max) = (632.944, 642.011, 645.924), stdev = 5.345
[info]   CI (99.9%): [621.428, 662.593] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readUPickle:·gc.alloc.rate.norm":
[info]   48965.393 ±(99.9%) 1568.341 B/op [Average]
[info]   (min, avg, max) = (48487.549, 48965.393, 49573.843), stdev = 407.293
[info]   CI (99.9%): [47397.051, 50533.734] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readUPickle:·gc.churn.PS_Eden_Space":
[info]   0.641 ±(99.9%) 5.341 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.641, 3.122), stdev = 1.387
[info]   CI (99.9%): [≈ 0, 5.982] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   49.342 ±(99.9%) 411.183 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 49.342, 240.329), stdev = 106.783
[info]   CI (99.9%): [≈ 0, 460.526] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space":
[info]   671.892 ±(99.9%) 2.112 MB/sec [Average]
[info]   (min, avg, max) = (671.312, 671.892, 672.653), stdev = 0.548
[info]   CI (99.9%): [669.780, 674.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   51246.357 ±(99.9%) 1929.797 B/op [Average]
[info]   (min, avg, max) = (50708.339, 51246.357, 51782.797), stdev = 501.162
[info]   CI (99.9%): [49316.560, 53176.154] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readUPickle:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.readUPickle:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.600, 3.000), stdev = 1.140
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 19.68% complete, ETA 01:48:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 22351.516 ops/s
[info] # Warmup Iteration   2: 43223.079 ops/s
[info] # Warmup Iteration   3: 43515.671 ops/s
[info] # Warmup Iteration   4: 43368.075 ops/s
[info] # Warmup Iteration   5: 43493.886 ops/s
[info] Iteration   1: 43726.780 ops/s
[info]                  ·gc.alloc.rate:                   686.634 MB/sec
[info]                  ·gc.alloc.rate.norm:              24717.958 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.749 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.672 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 24287.355 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 43831.306 ops/s
[info]                  ·gc.alloc.rate:                   676.508 MB/sec
[info]                  ·gc.alloc.rate.norm:              24294.283 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.664 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 24228.080 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 43409.143 ops/s
[info]                  ·gc.alloc.rate:                   671.304 MB/sec
[info]                  ·gc.alloc.rate.norm:              24333.725 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.755 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.979 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 24466.934 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 43609.811 ops/s
[info]                  ·gc.alloc.rate:                   687.973 MB/sec
[info]                  ·gc.alloc.rate.norm:              24830.382 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.764 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 24353.620 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 44061.843 ops/s
[info]                  ·gc.alloc.rate:                   691.729 MB/sec
[info]                  ·gc.alloc.rate.norm:              24707.097 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.744 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.808 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 24102.734 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce":
[info]   43727.777 ±(99.9%) 938.807 ops/s [Average]
[info]   (min, avg, max) = (43409.143, 43727.777, 44061.843), stdev = 243.805
[info]   CI (99.9%): [42788.970, 44666.583] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:·gc.alloc.rate":
[info]   682.829 ±(99.9%) 32.952 MB/sec [Average]
[info]   (min, avg, max) = (671.304, 682.829, 691.729), stdev = 8.558
[info]   CI (99.9%): [649.878, 715.781] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   24576.689 ±(99.9%) 943.423 B/op [Average]
[info]   (min, avg, max) = (24294.283, 24576.689, 24830.382), stdev = 245.004
[info]   CI (99.9%): [23633.266, 25520.112] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   0.012 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.056] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.450 ±(99.9%) 1.580 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.450, 0.755), stdev = 0.410
[info]   CI (99.9%): [≈ 0, 2.030] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   674.777 ±(99.9%) 0.493 MB/sec [Average]
[info]   (min, avg, max) = (674.664, 674.777, 674.979), stdev = 0.128
[info]   CI (99.9%): [674.285, 675.270] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   24287.745 ±(99.9%) 524.584 B/op [Average]
[info]   (min, avg, max) = (24102.734, 24287.745, 24466.934), stdev = 136.233
[info]   CI (99.9%): [23763.161, 24812.329] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeCirce:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 19.88% complete, ETA 01:48:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 21773.615 ops/s
[info] # Warmup Iteration   2: 51675.758 ops/s
[info] # Warmup Iteration   3: 54380.286 ops/s
[info] # Warmup Iteration   4: 54860.406 ops/s
[info] # Warmup Iteration   5: 53173.763 ops/s
[info] Iteration   1: 54602.862 ops/s
[info]                  ·gc.alloc.rate:                   789.669 MB/sec
[info]                  ·gc.alloc.rate.norm:              22762.437 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.600 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1346.850 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 38823.348 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 54657.899 ops/s
[info]                  ·gc.alloc.rate:                   780.388 MB/sec
[info]                  ·gc.alloc.rate.norm:              22473.249 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.334 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19390.371 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 54607.357 ops/s
[info]                  ·gc.alloc.rate:                   771.812 MB/sec
[info]                  ·gc.alloc.rate.norm:              22247.074 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.600 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.395 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19410.252 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 54673.296 ops/s
[info]                  ·gc.alloc.rate:                   778.951 MB/sec
[info]                  ·gc.alloc.rate.norm:              22425.210 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.397 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.053 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19405.291 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 54730.130 ops/s
[info]                  ·gc.alloc.rate:                   774.924 MB/sec
[info]                  ·gc.alloc.rate.norm:              22287.254 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.016 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19385.085 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala":
[info]   54654.309 ±(99.9%) 201.686 ops/s [Average]
[info]   (min, avg, max) = (54602.862, 54654.309, 54730.130), stdev = 52.377
[info]   CI (99.9%): [54452.623, 54855.995] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   779.149 ±(99.9%) 26.111 MB/sec [Average]
[info]   (min, avg, max) = (771.812, 779.149, 789.669), stdev = 6.781
[info]   CI (99.9%): [753.038, 805.259] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   22439.045 ±(99.9%) 784.051 B/op [Average]
[info]   (min, avg, max) = (22247.074, 22439.045, 22762.437), stdev = 203.616
[info]   CI (99.9%): [21654.994, 23223.096] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.025 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.083), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.157] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.719 ±(99.9%) 3.791 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.719, 2.397), stdev = 0.985
[info]   CI (99.9%): [≈ 0, 4.511] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   808.330 ±(99.9%) 1159.206 MB/sec [Average]
[info]   (min, avg, max) = (673.334, 808.330, 1346.850), stdev = 301.042
[info]   CI (99.9%): [≈ 0, 1967.536] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   23282.869 ±(99.9%) 33452.076 B/op [Average]
[info]   (min, avg, max) = (19385.085, 23282.869, 38823.348), stdev = 8687.398
[info]   CI (99.9%): [≈ 0, 56734.945] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJacksonScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 3.000), stdev = 0.894
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 20.08% complete, ETA 01:48:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 137143.288 ops/s
[info] # Warmup Iteration   2: 161083.845 ops/s
[info] # Warmup Iteration   3: 170545.511 ops/s
[info] # Warmup Iteration   4: 170453.550 ops/s
[info] # Warmup Iteration   5: 171085.069 ops/s
[info] Iteration   1: 165858.031 ops/s
[info]                  ·gc.alloc.rate:                   272.442 MB/sec
[info]                  ·gc.alloc.rate.norm:              2585.199 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      511.601 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4854.577 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 170232.740 ops/s
[info]                  ·gc.alloc.rate:      270.021 MB/sec
[info]                  ·gc.alloc.rate.norm: 2496.566 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 168811.556 ops/s
[info]                  ·gc.alloc.rate:                   283.211 MB/sec
[info]                  ·gc.alloc.rate.norm:              2640.290 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      511.619 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4769.670 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 171388.003 ops/s
[info]                  ·gc.alloc.rate:      271.837 MB/sec
[info]                  ·gc.alloc.rate.norm: 2496.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 170770.352 ops/s
[info]                  ·gc.alloc.rate:                   283.167 MB/sec
[info]                  ·gc.alloc.rate.norm:              2608.777 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.010 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.096 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.377 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6212.947 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala":
[info]   169412.136 ±(99.9%) 8483.343 ops/s [Average]
[info]   (min, avg, max) = (165858.031, 169412.136, 171388.003), stdev = 2203.097
[info]   CI (99.9%): [160928.794, 177895.479] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   276.135 ±(99.9%) 25.030 MB/sec [Average]
[info]   (min, avg, max) = (270.021, 276.135, 283.211), stdev = 6.500
[info]   CI (99.9%): [251.106, 301.165] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   2565.367 ±(99.9%) 254.231 B/op [Average]
[info]   (min, avg, max) = (2496.002, 2565.367, 2640.290), stdev = 66.023
[info]   CI (99.9%): [2311.136, 2819.598] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.002 ±(99.9%) 0.018 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.002, 0.010), stdev = 0.005
[info]   CI (99.9%): [≈ 0, 0.020] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.019 ±(99.9%) 0.165 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.019, 0.096), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.184] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   339.519 ±(99.9%) 1220.580 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 339.519, 674.377), stdev = 316.981
[info]   CI (99.9%): [≈ 0, 1560.099] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   3167.439 ±(99.9%) 11350.265 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3167.439, 6212.947), stdev = 2947.628
[info]   CI (99.9%): [≈ 0, 14517.704] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 3.000), stdev = 1.342
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 20.28% complete, ETA 01:47:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 136850.943 ops/s
[info] # Warmup Iteration   2: 166246.850 ops/s
[info] # Warmup Iteration   3: 174159.108 ops/s
[info] # Warmup Iteration   4: 178014.375 ops/s
[info] # Warmup Iteration   5: 177779.705 ops/s
[info] Iteration   1: 177958.776 ops/s
[info]                  ·gc.alloc.rate:      0.002 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.020 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 177705.329 ops/s
[info]                  ·gc.alloc.rate:      0.249 MB/sec
[info]                  ·gc.alloc.rate.norm: 2.202 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 177618.637 ops/s
[info]                  ·gc.alloc.rate:      0.163 MB/sec
[info]                  ·gc.alloc.rate.norm: 1.441 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 177990.681 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.003 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 177823.953 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc":
[info]   177819.475 ±(99.9%) 615.204 ops/s [Average]
[info]   (min, avg, max) = (177618.637, 177819.475, 177990.681), stdev = 159.766
[info]   CI (99.9%): [177204.271, 178434.679] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.083 ±(99.9%) 0.447 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.083, 0.249), stdev = 0.116
[info]   CI (99.9%): [≈ 0, 0.530] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.734 ±(99.9%) 3.962 B/op [Average]
[info]   (min, avg, max) = (0.002, 0.734, 2.202), stdev = 1.029
[info]   CI (99.9%): [≈ 0, 4.696] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 20.48% complete, ETA 01:47:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 25735.985 ops/s
[info] # Warmup Iteration   2: 52807.016 ops/s
[info] # Warmup Iteration   3: 52616.110 ops/s
[info] # Warmup Iteration   4: 53475.758 ops/s
[info] # Warmup Iteration   5: 54196.886 ops/s
[info] Iteration   1: 52813.923 ops/s
[info]                  ·gc.alloc.rate:                   835.436 MB/sec
[info]                  ·gc.alloc.rate.norm:              24902.335 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.301 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 20069.485 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 54235.546 ops/s
[info]                  ·gc.alloc.rate:                   868.758 MB/sec
[info]                  ·gc.alloc.rate.norm:              25209.285 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.833 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19553.031 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   3: 54042.664 ops/s
[info]                  ·gc.alloc.rate:                   880.422 MB/sec
[info]                  ·gc.alloc.rate.norm:              25644.744 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.819 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1347.720 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 39256.125 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 53002.630 ops/s
[info]                  ·gc.alloc.rate:                   844.423 MB/sec
[info]                  ·gc.alloc.rate.norm:              25076.929 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.063 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 20017.712 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 54068.024 ops/s
[info]                  ·gc.alloc.rate:                   858.103 MB/sec
[info]                  ·gc.alloc.rate.norm:              24978.167 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.818 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.751 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19641.047 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson":
[info]   53632.558 ±(99.9%) 2574.743 ops/s [Average]
[info]   (min, avg, max) = (52813.923, 53632.558, 54235.546), stdev = 668.653
[info]   CI (99.9%): [51057.814, 56207.301] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   857.428 ±(99.9%) 69.693 MB/sec [Average]
[info]   (min, avg, max) = (835.436, 857.428, 880.422), stdev = 18.099
[info]   CI (99.9%): [787.736, 927.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   25162.292 ±(99.9%) 1128.795 B/op [Average]
[info]   (min, avg, max) = (24902.335, 25162.292, 25644.744), stdev = 293.144
[info]   CI (99.9%): [24033.497, 26291.087] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   0.025 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.157] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   0.727 ±(99.9%) 3.835 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.727, 1.819), stdev = 0.996
[info]   CI (99.9%): [≈ 0, 4.562] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   808.734 ±(99.9%) 1160.211 MB/sec [Average]
[info]   (min, avg, max) = (673.301, 808.734, 1347.720), stdev = 301.303
[info]   CI (99.9%): [≈ 0, 1968.945] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   23707.480 ±(99.9%) 33480.960 B/op [Average]
[info]   (min, avg, max) = (19553.031, 23707.480, 39256.125), stdev = 8694.899
[info]   CI (99.9%): [≈ 0, 57188.440] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writePlayJson:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 0.837
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 20.68% complete, ETA 01:47:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 13484.434 ops/s
[info] # Warmup Iteration   2: 17850.561 ops/s
[info] # Warmup Iteration   3: 17851.043 ops/s
[info] # Warmup Iteration   4: 18435.698 ops/s
[info] # Warmup Iteration   5: 18230.873 ops/s
[info] Iteration   1: 17934.403 ops/s
[info]                  ·gc.alloc.rate:                   360.619 MB/sec
[info]                  ·gc.alloc.rate.norm:              31649.217 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.010 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.914 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      511.532 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 44893.877 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 18427.178 ops/s
[info]                  ·gc.alloc.rate:      357.004 MB/sec
[info]                  ·gc.alloc.rate.norm: 30495.572 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 18359.096 ops/s
[info]                  ·gc.alloc.rate:                   375.079 MB/sec
[info]                  ·gc.alloc.rate.norm:              32156.019 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.428 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 57733.925 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 18461.775 ops/s
[info]                  ·gc.alloc.rate:      355.101 MB/sec
[info]                  ·gc.alloc.rate.norm: 30280.029 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 18368.096 ops/s
[info]                  ·gc.alloc.rate:                   371.889 MB/sec
[info]                  ·gc.alloc.rate.norm:              31867.802 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2.966 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     254.162 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.373 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 57702.500 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeUPickle":
[info]   18310.109 ±(99.9%) 825.029 ops/s [Average]
[info]   (min, avg, max) = (17934.403, 18310.109, 18461.775), stdev = 214.257
[info]   CI (99.9%): [17485.081, 19135.138] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeUPickle:·gc.alloc.rate":
[info]   363.938 ±(99.9%) 34.683 MB/sec [Average]
[info]   (min, avg, max) = (355.101, 363.938, 375.079), stdev = 9.007
[info]   CI (99.9%): [329.255, 398.622] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeUPickle:·gc.alloc.rate.norm":
[info]   31289.728 ±(99.9%) 3258.312 B/op [Average]
[info]   (min, avg, max) = (30280.029, 31289.728, 32156.019), stdev = 846.173
[info]   CI (99.9%): [28031.416, 34548.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space":
[info]   0.595 ±(99.9%) 5.103 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.595, 2.966), stdev = 1.325
[info]   CI (99.9%): [≈ 0, 5.698] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   51.015 ±(99.9%) 437.292 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 51.015, 254.162), stdev = 113.563
[info]   CI (99.9%): [≈ 0, 488.307] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space":
[info]   371.667 ±(99.9%) 1331.010 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 371.667, 673.428), stdev = 345.659
[info]   CI (99.9%): [≈ 0, 1702.677] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   32066.061 ±(99.9%) 114505.417 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 32066.061, 57733.925), stdev = 29736.693
[info]   CI (99.9%): [≈ 0, 146571.478] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeUPickle:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfDurationsBenchmark.writeUPickle:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.600, 3.000), stdev = 1.517
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 20.88% complete, ETA 01:47:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 31754.313 ops/s
[info] # Warmup Iteration   2: 88207.292 ops/s
[info] # Warmup Iteration   3: 88347.241 ops/s
[info] # Warmup Iteration   4: 88985.314 ops/s
[info] # Warmup Iteration   5: 88838.068 ops/s
[info] Iteration   1: 94120.319 ops/s
[info]                  ·gc.alloc.rate:                   1938.977 MB/sec
[info]                  ·gc.alloc.rate.norm:              32429.154 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.044 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2026.713 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 33896.539 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 93042.832 ops/s
[info]                  ·gc.alloc.rate:                   1938.891 MB/sec
[info]                  ·gc.alloc.rate.norm:              32793.220 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.704 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2029.318 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 34322.646 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 94048.824 ops/s
[info]                  ·gc.alloc.rate:                   1943.797 MB/sec
[info]                  ·gc.alloc.rate.norm:              32531.386 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.742 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2031.494 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 33999.073 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 93310.797 ops/s
[info]                  ·gc.alloc.rate:                   1916.836 MB/sec
[info]                  ·gc.alloc.rate.norm:              32334.767 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.702 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1355.430 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 22864.498 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 94243.753 ops/s
[info]                  ·gc.alloc.rate:                   1962.723 MB/sec
[info]                  ·gc.alloc.rate.norm:              32782.267 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2034.543 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 33981.836 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce":
[info]   93753.305 ±(99.9%) 2076.454 ops/s [Average]
[info]   (min, avg, max) = (93042.832, 93753.305, 94243.753), stdev = 539.249
[info]   CI (99.9%): [91676.851, 95829.759] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.alloc.rate":
[info]   1940.245 ±(99.9%) 62.958 MB/sec [Average]
[info]   (min, avg, max) = (1916.836, 1940.245, 1962.723), stdev = 16.350
[info]   CI (99.9%): [1877.287, 2003.203] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   32574.159 ±(99.9%) 797.235 B/op [Average]
[info]   (min, avg, max) = (32334.767, 32574.159, 32793.220), stdev = 207.039
[info]   CI (99.9%): [31776.924, 33371.394] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   0.050 ±(99.9%) 0.146 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.104), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.196] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.839 ±(99.9%) 2.434 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.839, 1.742), stdev = 0.632
[info]   CI (99.9%): [≈ 0, 3.272] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1895.500 ±(99.9%) 1162.594 MB/sec [Average]
[info]   (min, avg, max) = (1355.430, 1895.500, 2034.543), stdev = 301.922
[info]   CI (99.9%): [732.905, 3058.094] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   31812.918 ±(99.9%) 19272.262 B/op [Average]
[info]   (min, avg, max) = (22864.498, 31812.918, 34322.646), stdev = 5004.945
[info]   CI (99.9%): [12540.657, 51085.180] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readCirce:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 4.000), stdev = 0.837
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 21.08% complete, ETA 01:46:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 45213.868 ops/s
[info] # Warmup Iteration   2: 115184.198 ops/s
[info] # Warmup Iteration   3: 116571.733 ops/s
[info] # Warmup Iteration   4: 120249.091 ops/s
[info] # Warmup Iteration   5: 120066.643 ops/s
[info] Iteration   1: 120539.812 ops/s
[info]                  ·gc.alloc.rate:                   1606.269 MB/sec
[info]                  ·gc.alloc.rate.norm:              20972.897 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.272 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.572 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17621.226 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 119127.184 ops/s
[info]                  ·gc.alloc.rate:                   1606.613 MB/sec
[info]                  ·gc.alloc.rate.norm:              21227.498 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.119 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17838.553 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 120110.845 ops/s
[info]                  ·gc.alloc.rate:                   1620.509 MB/sec
[info]                  ·gc.alloc.rate.norm:              21236.921 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.364 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2027.797 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 26574.458 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 120205.310 ops/s
[info]                  ·gc.alloc.rate:                   1608.510 MB/sec
[info]                  ·gc.alloc.rate.norm:              21058.130 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1353.676 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17721.920 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 120298.371 ops/s
[info]                  ·gc.alloc.rate:                   1622.450 MB/sec
[info]                  ·gc.alloc.rate.norm:              21229.745 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.272 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1354.412 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17722.473 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala":
[info]   120056.304 ±(99.9%) 2092.160 ops/s [Average]
[info]   (min, avg, max) = (119127.184, 120056.304, 120539.812), stdev = 543.327
[info]   CI (99.9%): [117964.144, 122148.464] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1612.870 ±(99.9%) 30.555 MB/sec [Average]
[info]   (min, avg, max) = (1606.269, 1612.870, 1622.450), stdev = 7.935
[info]   CI (99.9%): [1582.315, 1643.426] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   21145.038 ±(99.9%) 470.044 B/op [Average]
[info]   (min, avg, max) = (20972.897, 21145.038, 21236.921), stdev = 122.069
[info]   CI (99.9%): [20674.994, 21615.082] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.029 ±(99.9%) 0.166 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.104), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.195] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.382 ±(99.9%) 2.178 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.382, 1.364), stdev = 0.566
[info]   CI (99.9%): [≈ 0, 2.560] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1487.115 ±(99.9%) 1163.886 MB/sec [Average]
[info]   (min, avg, max) = (1349.572, 1487.115, 2027.797), stdev = 302.258
[info]   CI (99.9%): [323.229, 2651.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   19495.726 ±(99.9%) 15240.384 B/op [Average]
[info]   (min, avg, max) = (17621.226, 19495.726, 26574.458), stdev = 3957.879
[info]   CI (99.9%): [4255.342, 34736.110] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJacksonScala:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 3.000), stdev = 0.707
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 21.29% complete, ETA 01:46:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 136794.181 ops/s
[info] # Warmup Iteration   2: 189548.692 ops/s
[info] # Warmup Iteration   3: 195877.432 ops/s
[info] # Warmup Iteration   4: 188384.337 ops/s
[info] # Warmup Iteration   5: 193721.421 ops/s
[info] Iteration   1: 200024.844 ops/s
[info]                  ·gc.alloc.rate:      130.123 MB/sec
[info]                  ·gc.alloc.rate.norm: 1024.003 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 199109.841 ops/s
[info]                  ·gc.alloc.rate:                   138.536 MB/sec
[info]                  ·gc.alloc.rate.norm:              1095.161 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      511.558 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4043.982 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 199471.413 ops/s
[info]                  ·gc.alloc.rate:      129.781 MB/sec
[info]                  ·gc.alloc.rate.norm: 1024.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 199364.494 ops/s
[info]                  ·gc.alloc.rate:      129.692 MB/sec
[info]                  ·gc.alloc.rate.norm: 1024.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 199455.696 ops/s
[info]                  ·gc.alloc.rate:      129.761 MB/sec
[info]                  ·gc.alloc.rate.norm: 1024.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala":
[info]   199485.257 ±(99.9%) 1288.298 ops/s [Average]
[info]   (min, avg, max) = (199109.841, 199485.257, 200024.844), stdev = 334.567
[info]   CI (99.9%): [198196.959, 200773.556] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   131.578 ±(99.9%) 14.991 MB/sec [Average]
[info]   (min, avg, max) = (129.692, 131.578, 138.536), stdev = 3.893
[info]   CI (99.9%): [116.587, 146.570] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   1038.234 ±(99.9%) 122.540 B/op [Average]
[info]   (min, avg, max) = (1024.002, 1038.234, 1095.161), stdev = 31.823
[info]   CI (99.9%): [915.694, 1160.774] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   102.312 ±(99.9%) 880.934 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 102.312, 511.558), stdev = 228.776
[info]   CI (99.9%): [≈ 0, 983.245] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   808.796 ±(99.9%) 6963.980 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 808.796, 4043.982), stdev = 1808.524
[info]   CI (99.9%): [≈ 0, 7772.777] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:·gc.count":
[info]   1.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.200, 1.000), stdev = 0.447
[info]   CI (99.9%): [1.000, 1.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readJsoniterScala:·gc.time":
[info]   3.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 3.000), stdev = 1.342
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 21.49% complete, ETA 01:46:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4978.189 ops/s
[info] # Warmup Iteration   2: 49124.489 ops/s
[info] # Warmup Iteration   3: 52545.799 ops/s
[info] # Warmup Iteration   4: 52687.879 ops/s
[info] # Warmup Iteration   5: 51751.386 ops/s
[info] Iteration   1: 53609.963 ops/s
[info]                  ·gc.alloc.rate:                   2817.281 MB/sec
[info]                  ·gc.alloc.rate.norm:              82721.810 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.833 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2705.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 79429.280 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 53877.920 ops/s
[info]                  ·gc.alloc.rate:                   2844.077 MB/sec
[info]                  ·gc.alloc.rate.norm:              83090.173 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.432 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2710.162 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 79177.830 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 53759.936 ops/s
[info]                  ·gc.alloc.rate:                   2865.604 MB/sec
[info]                  ·gc.alloc.rate.norm:              83907.969 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.438 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2713.326 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 79449.099 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 53591.406 ops/s
[info]                  ·gc.alloc.rate:                   2856.821 MB/sec
[info]                  ·gc.alloc.rate.norm:              83906.169 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2716.877 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 79795.927 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 53871.603 ops/s
[info]                  ·gc.alloc.rate:                   2871.775 MB/sec
[info]                  ·gc.alloc.rate.norm:              83909.395 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.824 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2718.799 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 79439.640 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson":
[info]   53742.166 ±(99.9%) 529.744 ops/s [Average]
[info]   (min, avg, max) = (53591.406, 53742.166, 53877.920), stdev = 137.573
[info]   CI (99.9%): [53212.421, 54271.910] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2851.112 ±(99.9%) 83.115 MB/sec [Average]
[info]   (min, avg, max) = (2817.281, 2851.112, 2871.775), stdev = 21.585
[info]   CI (99.9%): [2767.997, 2934.227] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   83507.103 ±(99.9%) 2171.692 B/op [Average]
[info]   (min, avg, max) = (82721.810, 83507.103, 83909.395), stdev = 563.982
[info]   CI (99.9%): [81335.411, 85678.796] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   0.058 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.058, 0.083), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.190] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   1.706 ±(99.9%) 3.852 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.706, 2.438), stdev = 1.000
[info]   CI (99.9%): [≈ 0, 5.558] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   2712.862 ±(99.9%) 20.949 MB/sec [Average]
[info]   (min, avg, max) = (2705.146, 2712.862, 2718.799), stdev = 5.441
[info]   CI (99.9%): [2691.912, 2733.811] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   79458.355 ±(99.9%) 847.864 B/op [Average]
[info]   (min, avg, max) = (79177.830, 79458.355, 79795.927), stdev = 220.188
[info]   CI (99.9%): [78610.491, 80306.220] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readPlayJson:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 21.69% complete, ETA 01:45:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 52470.910 ops/s
[info] # Warmup Iteration   2: 106217.997 ops/s
[info] # Warmup Iteration   3: 105957.974 ops/s
[info] # Warmup Iteration   4: 107749.795 ops/s
[info] # Warmup Iteration   5: 110066.033 ops/s
[info] Iteration   1: 110157.274 ops/s
[info]                  ·gc.alloc.rate:                   1659.901 MB/sec
[info]                  ·gc.alloc.rate.norm:              23721.460 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.190 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1343.270 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19196.531 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 110192.244 ops/s
[info]                  ·gc.alloc.rate:                   1657.725 MB/sec
[info]                  ·gc.alloc.rate.norm:              23680.562 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.595 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1344.091 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19200.297 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 109996.186 ops/s
[info]                  ·gc.alloc.rate:                   1682.412 MB/sec
[info]                  ·gc.alloc.rate.norm:              24074.878 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.187 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.680 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2018.918 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 28890.185 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 110551.219 ops/s
[info]                  ·gc.alloc.rate:                   1675.113 MB/sec
[info]                  ·gc.alloc.rate.norm:              23849.044 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.889 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.138 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19193.816 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 110446.336 ops/s
[info]                  ·gc.alloc.rate:                   1686.783 MB/sec
[info]                  ·gc.alloc.rate.norm:              24040.766 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.593 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2024.326 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 28851.573 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readUPickle":
[info]   110268.652 ±(99.9%) 869.378 ops/s [Average]
[info]   (min, avg, max) = (109996.186, 110268.652, 110551.219), stdev = 225.775
[info]   CI (99.9%): [109399.274, 111138.030] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readUPickle:·gc.alloc.rate":
[info]   1672.387 ±(99.9%) 50.430 MB/sec [Average]
[info]   (min, avg, max) = (1657.725, 1672.387, 1686.783), stdev = 13.096
[info]   CI (99.9%): [1621.957, 1722.817] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readUPickle:·gc.alloc.rate.norm":
[info]   23873.342 ±(99.9%) 692.768 B/op [Average]
[info]   (min, avg, max) = (23680.562, 23873.342, 24074.878), stdev = 179.910
[info]   CI (99.9%): [23180.573, 24566.110] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readUPickle:·gc.churn.PS_Eden_Space":
[info]   0.083 ±(99.9%) 0.234 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.083, 0.187), stdev = 0.061
[info]   CI (99.9%): [≈ 0, 0.317] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   1.189 ±(99.9%) 3.347 B/op [Average]
[info]   (min, avg, max) = (0.593, 1.189, 2.680), stdev = 0.869
[info]   CI (99.9%): [≈ 0, 4.536] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space":
[info]   1615.749 ±(99.9%) 1426.739 MB/sec [Average]
[info]   (min, avg, max) = (1343.270, 1615.749, 2024.326), stdev = 370.520
[info]   CI (99.9%): [189.010, 3042.488] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   23066.480 ±(99.9%) 20403.349 B/op [Average]
[info]   (min, avg, max) = (19193.816, 23066.480, 28890.185), stdev = 5298.685
[info]   CI (99.9%): [2663.132, 43469.829] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readUPickle:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.readUPickle:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.200, 3.000), stdev = 0.837
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 21.89% complete, ETA 01:45:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 86140.549 ops/s
[info] # Warmup Iteration   2: 168718.987 ops/s
[info] # Warmup Iteration   3: 171045.977 ops/s
[info] # Warmup Iteration   4: 169900.343 ops/s
[info] # Warmup Iteration   5: 170935.906 ops/s
[info] Iteration   1: 169810.666 ops/s
[info]                  ·gc.alloc.rate:                   605.018 MB/sec
[info]                  ·gc.alloc.rate.norm:              5607.686 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.479 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4.437 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.093 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6247.918 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 170146.672 ops/s
[info]                  ·gc.alloc.rate:                   610.148 MB/sec
[info]                  ·gc.alloc.rate.norm:              5643.589 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.193 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.135 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6235.436 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 165749.582 ops/s
[info]                  ·gc.alloc.rate:                   589.907 MB/sec
[info]                  ·gc.alloc.rate.norm:              5602.032 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.198 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.041 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6401.007 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 172820.929 ops/s
[info]                  ·gc.alloc.rate:                   619.036 MB/sec
[info]                  ·gc.alloc.rate.norm:              5637.424 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.800 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6145.256 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 172940.682 ops/s
[info]                  ·gc.alloc.rate:                   612.851 MB/sec
[info]                  ·gc.alloc.rate.norm:              5578.168 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.189 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.691 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6141.028 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce":
[info]   170293.706 ±(99.9%) 11275.442 ops/s [Average]
[info]   (min, avg, max) = (165749.582, 170293.706, 172940.682), stdev = 2928.197
[info]   CI (99.9%): [159018.264, 181569.148] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:·gc.alloc.rate":
[info]   607.392 ±(99.9%) 42.372 MB/sec [Average]
[info]   (min, avg, max) = (589.907, 607.392, 619.036), stdev = 11.004
[info]   CI (99.9%): [565.020, 649.764] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   5613.780 ±(99.9%) 103.519 B/op [Average]
[info]   (min, avg, max) = (5578.168, 5613.780, 5643.589), stdev = 26.884
[info]   CI (99.9%): [5510.260, 5717.299] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   0.108 ±(99.9%) 0.798 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.108, 0.479), stdev = 0.207
[info]   CI (99.9%): [≈ 0, 0.907] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1.003 ±(99.9%) 7.399 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.003, 4.437), stdev = 1.922
[info]   CI (99.9%): [≈ 0, 8.402] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   674.352 ±(99.9%) 1.397 MB/sec [Average]
[info]   (min, avg, max) = (674.041, 674.352, 674.800), stdev = 0.363
[info]   CI (99.9%): [672.955, 675.749] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   6234.129 ±(99.9%) 406.632 B/op [Average]
[info]   (min, avg, max) = (6141.028, 6234.129, 6401.007), stdev = 105.601
[info]   CI (99.9%): [5827.497, 6640.761] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeCirce:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 22.09% complete, ETA 01:45:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 153220.019 ops/s
[info] # Warmup Iteration   2: 369628.111 ops/s
[info] # Warmup Iteration   3: 375679.713 ops/s
[info] # Warmup Iteration   4: 367064.575 ops/s
[info] # Warmup Iteration   5: 364063.811 ops/s
[info] Iteration   1: 362253.795 ops/s
[info]                  ·gc.alloc.rate:                   389.295 MB/sec
[info]                  ·gc.alloc.rate.norm:              1691.151 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.090 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.244 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2924.666 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 362225.008 ops/s
[info]                  ·gc.alloc.rate:      366.640 MB/sec
[info]                  ·gc.alloc.rate.norm: 1592.814 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 368848.175 ops/s
[info]                  ·gc.alloc.rate:                   391.581 MB/sec
[info]                  ·gc.alloc.rate.norm:              1671.130 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.562 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.398 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.002 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2872.137 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 377572.429 ops/s
[info]                  ·gc.alloc.rate:      382.029 MB/sec
[info]                  ·gc.alloc.rate.norm: 1592.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 373267.893 ops/s
[info]                  ·gc.alloc.rate:                   400.834 MB/sec
[info]                  ·gc.alloc.rate.norm:              1689.668 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.638 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2839.637 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala":
[info]   368833.460 ±(99.9%) 26045.103 ops/s [Average]
[info]   (min, avg, max) = (362225.008, 368833.460, 377572.429), stdev = 6763.831
[info]   CI (99.9%): [342788.357, 394878.563] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   386.076 ±(99.9%) 49.185 MB/sec [Average]
[info]   (min, avg, max) = (366.640, 386.076, 400.834), stdev = 12.773
[info]   CI (99.9%): [336.891, 435.261] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1647.353 ±(99.9%) 195.517 B/op [Average]
[info]   (min, avg, max) = (1592.001, 1647.353, 1691.151), stdev = 50.775
[info]   CI (99.9%): [1451.836, 1842.870] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.117 ±(99.9%) 0.959 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.117, 0.562), stdev = 0.249
[info]   CI (99.9%): [≈ 0, 1.076] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.498 ±(99.9%) 4.094 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.498, 2.398), stdev = 1.063
[info]   CI (99.9%): [≈ 0, 4.591] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   403.977 ±(99.9%) 1420.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 403.977, 673.638), stdev = 368.779
[info]   CI (99.9%): [≈ 0, 1824.013] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1727.288 ±(99.9%) 6072.785 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1727.288, 2924.666), stdev = 1577.083
[info]   CI (99.9%): [≈ 0, 7800.073] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJacksonScala:·gc.time":
[info]   4.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 2.000), stdev = 0.837
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 22.29% complete, ETA 01:45:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 520341.641 ops/s
[info] # Warmup Iteration   2: 608386.463 ops/s
[info] # Warmup Iteration   3: 636501.075 ops/s
[info] # Warmup Iteration   4: 634637.881 ops/s
[info] # Warmup Iteration   5: 639342.749 ops/s
[info] Iteration   1: 635452.644 ops/s
[info]                  ·gc.alloc.rate:                   503.318 MB/sec
[info]                  ·gc.alloc.rate.norm:              1246.668 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.112 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1669.707 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 636067.981 ops/s
[info]                  ·gc.alloc.rate:                   504.010 MB/sec
[info]                  ·gc.alloc.rate.norm:              1247.282 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2.726 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6.747 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.974 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1667.896 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 637833.989 ops/s
[info]                  ·gc.alloc.rate:      491.309 MB/sec
[info]                  ·gc.alloc.rate.norm: 1212.496 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 640183.829 ops/s
[info]                  ·gc.alloc.rate:                   511.024 MB/sec
[info]                  ·gc.alloc.rate.norm:              1256.497 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.400 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1655.745 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 640576.307 ops/s
[info]                  ·gc.alloc.rate:                   505.899 MB/sec
[info]                  ·gc.alloc.rate.norm:              1243.149 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.385 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1654.713 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala":
[info]   638022.950 ±(99.9%) 8959.083 ops/s [Average]
[info]   (min, avg, max) = (635452.644, 638022.950, 640576.307), stdev = 2326.645
[info]   CI (99.9%): [629063.867, 646982.032] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   503.112 ±(99.9%) 27.935 MB/sec [Average]
[info]   (min, avg, max) = (491.309, 503.112, 511.024), stdev = 7.255
[info]   CI (99.9%): [475.177, 531.047] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1241.219 ±(99.9%) 64.681 B/op [Average]
[info]   (min, avg, max) = (1212.496, 1241.219, 1256.497), stdev = 16.798
[info]   CI (99.9%): [1176.537, 1305.900] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.545 ±(99.9%) 4.695 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.545, 2.726), stdev = 1.219
[info]   CI (99.9%): [≈ 0, 5.240] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1.349 ±(99.9%) 11.619 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.349, 6.747), stdev = 3.017
[info]   CI (99.9%): [≈ 0, 12.968] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   538.974 ±(99.9%) 1160.183 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 538.974, 674.112), stdev = 301.296
[info]   CI (99.9%): [≈ 0, 1699.157] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1329.612 ±(99.9%) 2862.211 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1329.612, 1669.707), stdev = 743.307
[info]   CI (99.9%): [≈ 0, 4191.824] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 2.000), stdev = 0.894
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 22.49% complete, ETA 01:44:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 524439.022 ops/s
[info] # Warmup Iteration   2: 657372.244 ops/s
[info] # Warmup Iteration   3: 665248.080 ops/s
[info] # Warmup Iteration   4: 669556.679 ops/s
[info] # Warmup Iteration   5: 670112.905 ops/s
[info] Iteration   1: 670180.975 ops/s
[info]                  ·gc.alloc.rate:      0.002 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.004 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 670405.480 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 670364.673 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 670030.295 ops/s
[info]                  ·gc.alloc.rate:      0.103 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.243 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 665622.408 ops/s
[info]                  ·gc.alloc.rate:      1.046 MB/sec
[info]                  ·gc.alloc.rate.norm: 2.474 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc":
[info]   669320.766 ±(99.9%) 7981.984 ops/s [Average]
[info]   (min, avg, max) = (665622.408, 669320.766, 670405.480), stdev = 2072.896
[info]   CI (99.9%): [661338.782, 677302.750] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.230 ±(99.9%) 1.764 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.230, 1.046), stdev = 0.458
[info]   CI (99.9%): [≈ 0, 1.995] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.544 ±(99.9%) 4.172 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.544, 2.474), stdev = 1.084
[info]   CI (99.9%): [≈ 0, 4.717] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 22.69% complete, ETA 01:44:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 68820.582 ops/s
[info] # Warmup Iteration   2: 263522.454 ops/s
[info] # Warmup Iteration   3: 267254.079 ops/s
[info] # Warmup Iteration   4: 271828.005 ops/s
[info] # Warmup Iteration   5: 272411.291 ops/s
[info] Iteration   1: 273128.839 ops/s
[info]                  ·gc.alloc.rate:                   774.621 MB/sec
[info]                  ·gc.alloc.rate.norm:              4463.732 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.120 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.779 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3888.392 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 273256.742 ops/s
[info]                  ·gc.alloc.rate:                   767.750 MB/sec
[info]                  ·gc.alloc.rate.norm:              4422.056 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.790 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3886.627 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 272476.397 ops/s
[info]                  ·gc.alloc.rate:                   782.189 MB/sec
[info]                  ·gc.alloc.rate.norm:              4517.477 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.361 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.419 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7787.694 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 271836.047 ops/s
[info]                  ·gc.alloc.rate:                   771.196 MB/sec
[info]                  ·gc.alloc.rate.norm:              4464.192 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.582 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3904.927 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 270952.593 ops/s
[info]                  ·gc.alloc.rate:                   764.581 MB/sec
[info]                  ·gc.alloc.rate.norm:              4441.823 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.121 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.367 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3917.722 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson":
[info]   272330.123 ±(99.9%) 3683.189 ops/s [Average]
[info]   (min, avg, max) = (270952.593, 272330.123, 273256.742), stdev = 956.512
[info]   CI (99.9%): [268646.934, 276013.312] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   772.068 ±(99.9%) 26.146 MB/sec [Average]
[info]   (min, avg, max) = (764.581, 772.068, 782.189), stdev = 6.790
[info]   CI (99.9%): [745.922, 798.214] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   4461.856 ±(99.9%) 137.334 B/op [Average]
[info]   (min, avg, max) = (4422.056, 4461.856, 4517.477), stdev = 35.665
[info]   CI (99.9%): [4324.522, 4599.190] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   0.021 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.062), stdev = 0.025
[info]   CI (99.9%): [≈ 0, 0.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   0.120 ±(99.9%) 0.567 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.120, 0.361), stdev = 0.147
[info]   CI (99.9%): [≈ 0, 0.687] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   809.387 ±(99.9%) 1160.306 MB/sec [Average]
[info]   (min, avg, max) = (674.367, 809.387, 1348.419), stdev = 301.328
[info]   CI (99.9%): [≈ 0, 1969.694] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   4677.072 ±(99.9%) 6696.027 B/op [Average]
[info]   (min, avg, max) = (3886.627, 4677.072, 7787.694), stdev = 1738.937
[info]   CI (99.9%): [≈ 0, 11373.099] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writePlayJson:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 22.89% complete, ETA 01:44:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 37185.481 ops/s
[info] # Warmup Iteration   2: 47966.750 ops/s
[info] # Warmup Iteration   3: 48233.342 ops/s
[info] # Warmup Iteration   4: 48834.529 ops/s
[info] # Warmup Iteration   5: 48977.713 ops/s
[info] Iteration   1: 48962.215 ops/s
[info]                  ·gc.alloc.rate:      226.431 MB/sec
[info]                  ·gc.alloc.rate.norm: 7280.230 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 48706.881 ops/s
[info]                  ·gc.alloc.rate:                   237.491 MB/sec
[info]                  ·gc.alloc.rate.norm:              7673.016 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      511.668 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16531.313 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 48741.633 ops/s
[info]                  ·gc.alloc.rate:      228.073 MB/sec
[info]                  ·gc.alloc.rate.norm: 7363.602 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 48618.805 ops/s
[info]                  ·gc.alloc.rate:                   232.908 MB/sec
[info]                  ·gc.alloc.rate.norm:              7538.328 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      511.642 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16559.868 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 48805.268 ops/s
[info]                  ·gc.alloc.rate:      225.733 MB/sec
[info]                  ·gc.alloc.rate.norm: 7280.008 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeUPickle":
[info]   48766.960 ±(99.9%) 493.847 ops/s [Average]
[info]   (min, avg, max) = (48618.805, 48766.960, 48962.215), stdev = 128.250
[info]   CI (99.9%): [48273.113, 49260.807] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeUPickle:·gc.alloc.rate":
[info]   230.127 ±(99.9%) 19.171 MB/sec [Average]
[info]   (min, avg, max) = (225.733, 230.127, 237.491), stdev = 4.979
[info]   CI (99.9%): [210.956, 249.298] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeUPickle:·gc.alloc.rate.norm":
[info]   7427.037 ±(99.9%) 667.187 B/op [Average]
[info]   (min, avg, max) = (7280.008, 7427.037, 7673.016), stdev = 173.266
[info]   CI (99.9%): [6759.850, 8094.224] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space":
[info]   204.662 ±(99.9%) 1079.124 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 204.662, 511.668), stdev = 280.245
[info]   CI (99.9%): [≈ 0, 1283.786] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   6618.236 ±(99.9%) 34896.070 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 6618.236, 16559.868), stdev = 9062.399
[info]   CI (99.9%): [≈ 0, 41514.306] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeUPickle:·gc.count":
[info]   2.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.000), stdev = 0.548
[info]   CI (99.9%): [2.000, 2.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfEnumsBenchmark.writeUPickle:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 3.000), stdev = 1.643
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 23.09% complete, ETA 01:44:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 16373.274 ops/s
[info] # Warmup Iteration   2: 36766.374 ops/s
[info] # Warmup Iteration   3: 36746.081 ops/s
[info] # Warmup Iteration   4: 36334.503 ops/s
[info] # Warmup Iteration   5: 35930.719 ops/s
[info] Iteration   1: 36396.473 ops/s
[info]                  ·gc.alloc.rate:                   1737.456 MB/sec
[info]                  ·gc.alloc.rate.norm:              75141.611 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.900 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.385 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 58315.032 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 36619.726 ops/s
[info]                  ·gc.alloc.rate:                   1755.419 MB/sec
[info]                  ·gc.alloc.rate.norm:              75443.051 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.895 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2024.873 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 87023.448 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 36759.002 ops/s
[info]                  ·gc.alloc.rate:                   1757.317 MB/sec
[info]                  ·gc.alloc.rate.norm:              75216.078 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.783 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1352.032 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 57869.188 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 36976.051 ops/s
[info]                  ·gc.alloc.rate:                   1781.202 MB/sec
[info]                  ·gc.alloc.rate.norm:              75826.124 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.886 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2029.718 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 86405.520 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 37132.911 ops/s
[info]                  ·gc.alloc.rate:                   1761.303 MB/sec
[info]                  ·gc.alloc.rate.norm:              74640.895 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.765 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1355.084 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 57426.052 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce":
[info]   36776.832 ±(99.9%) 1116.277 ops/s [Average]
[info]   (min, avg, max) = (36396.473, 36776.832, 37132.911), stdev = 289.894
[info]   CI (99.9%): [35660.555, 37893.110] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:·gc.alloc.rate":
[info]   1758.539 ±(99.9%) 60.179 MB/sec [Average]
[info]   (min, avg, max) = (1737.456, 1758.539, 1781.202), stdev = 15.628
[info]   CI (99.9%): [1698.361, 1818.718] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   75253.552 ±(99.9%) 1670.744 B/op [Average]
[info]   (min, avg, max) = (74640.895, 75253.552, 75826.124), stdev = 433.887
[info]   CI (99.9%): [73582.808, 76924.296] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   0.029 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.029, 0.042), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.073] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1.246 ±(99.9%) 1.856 B/op [Average]
[info]   (min, avg, max) = (0.886, 1.246, 1.783), stdev = 0.482
[info]   CI (99.9%): [≈ 0, 3.102] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1622.018 ±(99.9%) 1424.651 MB/sec [Average]
[info]   (min, avg, max) = (1348.385, 1622.018, 2029.718), stdev = 369.977
[info]   CI (99.9%): [197.367, 3046.669] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   69407.848 ±(99.9%) 60853.116 B/op [Average]
[info]   (min, avg, max) = (57426.052, 69407.848, 87023.448), stdev = 15803.361
[info]   CI (99.9%): [8554.732, 130260.965] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readCirce:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 23.29% complete, ETA 01:43:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.821 ops/s
[info] # Warmup Iteration   2: 265467.686 ops/s
[info] # Warmup Iteration   3: 266853.221 ops/s
[info] # Warmup Iteration   4: 279513.077 ops/s
[info] # Warmup Iteration   5: 281632.993 ops/s
[info] Iteration   1: 286538.515 ops/s
[info]                  ·gc.alloc.rate:                   304.484 MB/sec
[info]                  ·gc.alloc.rate.norm:              1672.648 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.017 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.091 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      511.540 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2810.087 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 286183.208 ops/s
[info]                  ·gc.alloc.rate:      297.310 MB/sec
[info]                  ·gc.alloc.rate.norm: 1634.673 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 282341.794 ops/s
[info]                  ·gc.alloc.rate:                   305.911 MB/sec
[info]                  ·gc.alloc.rate.norm:              1705.482 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      671.385 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3743.031 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 280947.247 ops/s
[info]                  ·gc.alloc.rate:      291.266 MB/sec
[info]                  ·gc.alloc.rate.norm: 1632.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 283333.027 ops/s
[info]                  ·gc.alloc.rate:                   311.821 MB/sec
[info]                  ·gc.alloc.rate.norm:              1732.422 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3.710 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20.609 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      671.362 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3729.967 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava":
[info]   283868.758 ±(99.9%) 9360.734 ops/s [Average]
[info]   (min, avg, max) = (280947.247, 283868.758, 286538.515), stdev = 2430.953
[info]   CI (99.9%): [274508.024, 293229.492] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   302.158 ±(99.9%) 30.746 MB/sec [Average]
[info]   (min, avg, max) = (291.266, 302.158, 311.821), stdev = 7.985
[info]   CI (99.9%): [271.413, 332.904] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   1675.445 ±(99.9%) 169.013 B/op [Average]
[info]   (min, avg, max) = (1632.001, 1675.445, 1732.422), stdev = 43.892
[info]   CI (99.9%): [1506.432, 1844.458] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   0.745 ±(99.9%) 6.381 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.745, 3.710), stdev = 1.657
[info]   CI (99.9%): [≈ 0, 7.126] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   4.140 ±(99.9%) 35.452 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4.140, 20.609), stdev = 9.207
[info]   CI (99.9%): [≈ 0, 39.592] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   370.857 ±(99.9%) 1327.609 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 370.857, 671.385), stdev = 344.776
[info]   CI (99.9%): [≈ 0, 1698.467] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   2056.617 ±(99.9%) 7374.551 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2056.617, 3743.031), stdev = 1915.147
[info]   CI (99.9%): [≈ 0, 9431.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readDslJsonJava:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.800, 3.000), stdev = 1.643
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 23.49% complete, ETA 01:43:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 31433.477 ops/s
[info] # Warmup Iteration   2: 102850.947 ops/s
[info] # Warmup Iteration   3: 101488.326 ops/s
[info] # Warmup Iteration   4: 103809.129 ops/s
[info] # Warmup Iteration   5: 104474.660 ops/s
[info] Iteration   1: 106690.217 ops/s
[info]                  ·gc.alloc.rate:                   1204.528 MB/sec
[info]                  ·gc.alloc.rate.norm:              17771.392 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.614 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.072 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19889.209 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 106819.833 ops/s
[info]                  ·gc.alloc.rate:                   1193.806 MB/sec
[info]                  ·gc.alloc.rate.norm:              17587.938 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.164 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9932.225 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 106678.360 ops/s
[info]                  ·gc.alloc.rate:                   1209.567 MB/sec
[info]                  ·gc.alloc.rate.norm:              17846.643 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.307 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.771 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19900.528 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 106054.029 ops/s
[info]                  ·gc.alloc.rate:                   1199.204 MB/sec
[info]                  ·gc.alloc.rate.norm:              17799.112 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.309 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.081 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 20038.499 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 106789.854 ops/s
[info]                  ·gc.alloc.rate:                   1225.576 MB/sec
[info]                  ·gc.alloc.rate.norm:              18066.510 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.307 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.661 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19910.417 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala":
[info]   106606.458 ±(99.9%) 1212.382 ops/s [Average]
[info]   (min, avg, max) = (106054.029, 106606.458, 106819.833), stdev = 314.852
[info]   CI (99.9%): [105394.076, 107818.840] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1206.536 ±(99.9%) 46.827 MB/sec [Average]
[info]   (min, avg, max) = (1193.806, 1206.536, 1225.576), stdev = 12.161
[info]   CI (99.9%): [1159.709, 1253.363] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   17814.319 ±(99.9%) 661.279 B/op [Average]
[info]   (min, avg, max) = (17587.938, 17814.319, 18066.510), stdev = 171.732
[info]   CI (99.9%): [17153.040, 18475.598] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.021 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.077] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.307 ±(99.9%) 0.836 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.307, 0.614), stdev = 0.217
[info]   CI (99.9%): [≈ 0, 1.144] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1214.350 ±(99.9%) 1162.797 MB/sec [Average]
[info]   (min, avg, max) = (674.164, 1214.350, 1350.661), stdev = 301.975
[info]   CI (99.9%): [51.552, 2377.147] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   17934.175 ±(99.9%) 17226.373 B/op [Average]
[info]   (min, avg, max) = (9932.225, 17934.175, 20038.499), stdev = 4473.634
[info]   CI (99.9%): [707.803, 35160.548] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJacksonScala:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 3.000), stdev = 0.894
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 23.69% complete, ETA 01:43:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 360695.134 ops/s
[info] # Warmup Iteration   2: 426639.920 ops/s
[info] # Warmup Iteration   3: 443788.599 ops/s
[info] # Warmup Iteration   4: 443278.110 ops/s
[info] # Warmup Iteration   5: 440314.248 ops/s
[info] Iteration   1: 443858.940 ops/s
[info]                  ·gc.alloc.rate:      288.777 MB/sec
[info]                  ·gc.alloc.rate.norm: 1024.064 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 439744.533 ops/s
[info]                  ·gc.alloc.rate:                   299.591 MB/sec
[info]                  ·gc.alloc.rate.norm:              1072.331 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      511.552 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1831.003 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 444217.075 ops/s
[info]                  ·gc.alloc.rate:      289.076 MB/sec
[info]                  ·gc.alloc.rate.norm: 1024.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 439304.760 ops/s
[info]                  ·gc.alloc.rate:                   307.010 MB/sec
[info]                  ·gc.alloc.rate.norm:              1099.630 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.271 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2415.062 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 442262.061 ops/s
[info]                  ·gc.alloc.rate:      287.736 MB/sec
[info]                  ·gc.alloc.rate.norm: 1024.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala":
[info]   441877.474 ±(99.9%) 8763.100 ops/s [Average]
[info]   (min, avg, max) = (439304.760, 441877.474, 444217.075), stdev = 2275.749
[info]   CI (99.9%): [433114.373, 450640.574] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   294.438 ±(99.9%) 32.806 MB/sec [Average]
[info]   (min, avg, max) = (287.736, 294.438, 307.010), stdev = 8.520
[info]   CI (99.9%): [261.632, 327.244] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   1048.805 ±(99.9%) 135.858 B/op [Average]
[info]   (min, avg, max) = (1024.001, 1048.805, 1099.630), stdev = 35.282
[info]   CI (99.9%): [912.947, 1184.663] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   237.164 ±(99.9%) 1269.970 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 237.164, 674.271), stdev = 329.807
[info]   CI (99.9%): [≈ 0, 1507.135] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   849.213 ±(99.9%) 4547.708 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 849.213, 2415.062), stdev = 1181.025
[info]   CI (99.9%): [≈ 0, 5396.921] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:·gc.count":
[info]   2.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.000), stdev = 0.548
[info]   CI (99.9%): [2.000, 2.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readJsoniterScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 3.000), stdev = 1.643
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 23.90% complete, ETA 01:43:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4339.552 ops/s
[info] # Warmup Iteration   2: 33914.994 ops/s
[info] # Warmup Iteration   3: 39135.036 ops/s
[info] # Warmup Iteration   4: 38495.012 ops/s
[info] # Warmup Iteration   5: 39634.144 ops/s
[info] Iteration   1: 39587.976 ops/s
[info]                  ·gc.alloc.rate:                   1934.794 MB/sec
[info]                  ·gc.alloc.rate.norm:              76936.283 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.828 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2024.639 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 80508.942 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 39698.875 ops/s
[info]                  ·gc.alloc.rate:                   1934.130 MB/sec
[info]                  ·gc.alloc.rate.norm:              76686.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.825 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1351.436 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 53582.852 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 39202.752 ops/s
[info]                  ·gc.alloc.rate:                   1924.985 MB/sec
[info]                  ·gc.alloc.rate.norm:              77286.366 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.836 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2028.833 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 81455.778 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 38991.832 ops/s
[info]                  ·gc.alloc.rate:                   1913.362 MB/sec
[info]                  ·gc.alloc.rate.norm:              77228.668 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3.361 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2031.777 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 82008.226 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 38955.274 ops/s
[info]                  ·gc.alloc.rate:                   1939.164 MB/sec
[info]                  ·gc.alloc.rate.norm:              78353.853 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.841 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2033.427 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 82162.629 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson":
[info]   39287.342 ±(99.9%) 1312.175 ops/s [Average]
[info]   (min, avg, max) = (38955.274, 39287.342, 39698.875), stdev = 340.768
[info]   CI (99.9%): [37975.167, 40599.517] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1929.287 ±(99.9%) 39.619 MB/sec [Average]
[info]   (min, avg, max) = (1913.362, 1929.287, 1939.164), stdev = 10.289
[info]   CI (99.9%): [1889.668, 1968.906] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   77298.236 ±(99.9%) 2454.419 B/op [Average]
[info]   (min, avg, max) = (76686.008, 77298.236, 78353.853), stdev = 637.405
[info]   CI (99.9%): [74843.816, 79752.655] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   0.033 ±(99.9%) 0.108 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.033, 0.083), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   1.338 ±(99.9%) 4.354 B/op [Average]
[info]   (min, avg, max) = (0.825, 1.338, 3.361), stdev = 1.131
[info]   CI (99.9%): [≈ 0, 5.693] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   1894.022 ±(99.9%) 1168.029 MB/sec [Average]
[info]   (min, avg, max) = (1351.436, 1894.022, 2033.427), stdev = 303.333
[info]   CI (99.9%): [725.993, 3062.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   75943.685 ±(99.9%) 48197.909 B/op [Average]
[info]   (min, avg, max) = (53582.852, 75943.685, 82162.629), stdev = 12516.844
[info]   CI (99.9%): [27745.776, 124141.595] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readPlayJson:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 24.10% complete, ETA 01:42:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 45306.741 ops/s
[info] # Warmup Iteration   2: 75315.100 ops/s
[info] # Warmup Iteration   3: 75688.579 ops/s
[info] # Warmup Iteration   4: 77415.404 ops/s
[info] # Warmup Iteration   5: 78754.233 ops/s
[info] Iteration   1: 77176.321 ops/s
[info]                  ·gc.alloc.rate:                   1391.537 MB/sec
[info]                  ·gc.alloc.rate.norm:              28378.237 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.123 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1343.568 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 27399.990 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 78779.167 ops/s
[info]                  ·gc.alloc.rate:                   1412.293 MB/sec
[info]                  ·gc.alloc.rate.norm:              28209.099 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.832 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1344.525 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 26855.512 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 78600.988 ops/s
[info]                  ·gc.alloc.rate:                   1419.383 MB/sec
[info]                  ·gc.alloc.rate.norm:              28422.894 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.667 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1344.712 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 26927.601 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 78708.003 ops/s
[info]                  ·gc.alloc.rate:                   1421.215 MB/sec
[info]                  ·gc.alloc.rate.norm:              28423.470 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.416 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.990 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 26919.009 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 79133.616 ops/s
[info]                  ·gc.alloc.rate:                   1425.746 MB/sec
[info]                  ·gc.alloc.rate.norm:              28358.315 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.828 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1347.448 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 26800.961 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readUPickle":
[info]   78479.619 ±(99.9%) 2909.032 ops/s [Average]
[info]   (min, avg, max) = (77176.321, 78479.619, 79133.616), stdev = 755.466
[info]   CI (99.9%): [75570.587, 81388.651] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readUPickle:·gc.alloc.rate":
[info]   1414.035 ±(99.9%) 51.895 MB/sec [Average]
[info]   (min, avg, max) = (1391.537, 1414.035, 1425.746), stdev = 13.477
[info]   CI (99.9%): [1362.140, 1465.930] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readUPickle:·gc.alloc.rate.norm":
[info]   28358.403 ±(99.9%) 339.414 B/op [Average]
[info]   (min, avg, max) = (28209.099, 28358.403, 28423.470), stdev = 88.145
[info]   CI (99.9%): [28018.989, 28697.817] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readUPickle:·gc.churn.PS_Eden_Space":
[info]   0.058 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.058, 0.104), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.190] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   1.173 ±(99.9%) 2.691 B/op [Average]
[info]   (min, avg, max) = (0.416, 1.173, 2.123), stdev = 0.699
[info]   CI (99.9%): [≈ 0, 3.864] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space":
[info]   1345.249 ±(99.9%) 5.784 MB/sec [Average]
[info]   (min, avg, max) = (1343.568, 1345.249, 1347.448), stdev = 1.502
[info]   CI (99.9%): [1339.465, 1351.032] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   26980.615 ±(99.9%) 924.169 B/op [Average]
[info]   (min, avg, max) = (26800.961, 26980.615, 27399.990), stdev = 240.004
[info]   CI (99.9%): [26056.446, 27904.783] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readUPickle:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.readUPickle:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 24.30% complete, ETA 01:42:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 32166.050 ops/s
[info] # Warmup Iteration   2: 70895.924 ops/s
[info] # Warmup Iteration   3: 72847.650 ops/s
[info] # Warmup Iteration   4: 72849.637 ops/s
[info] # Warmup Iteration   5: 72913.542 ops/s
[info] Iteration   1: 73323.293 ops/s
[info]                  ·gc.alloc.rate:      360.088 MB/sec
[info]                  ·gc.alloc.rate.norm: 7731.079 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 73493.052 ops/s
[info]                  ·gc.alloc.rate:                   372.517 MB/sec
[info]                  ·gc.alloc.rate.norm:              7978.451 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.705 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 14450.623 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 73730.741 ops/s
[info]                  ·gc.alloc.rate:      354.156 MB/sec
[info]                  ·gc.alloc.rate.norm: 7560.670 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 73611.100 ops/s
[info]                  ·gc.alloc.rate:                   373.734 MB/sec
[info]                  ·gc.alloc.rate.norm:              7991.336 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.562 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12.017 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.745 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 14427.658 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 73224.815 ops/s
[info]                  ·gc.alloc.rate:      352.169 MB/sec
[info]                  ·gc.alloc.rate.norm: 7570.757 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce":
[info]   73476.600 ±(99.9%) 793.474 ops/s [Average]
[info]   (min, avg, max) = (73224.815, 73476.600, 73730.741), stdev = 206.063
[info]   CI (99.9%): [72683.127, 74270.074] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:·gc.alloc.rate":
[info]   362.533 ±(99.9%) 38.923 MB/sec [Average]
[info]   (min, avg, max) = (352.169, 362.533, 373.734), stdev = 10.108
[info]   CI (99.9%): [323.610, 401.456] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   7766.459 ±(99.9%) 810.949 B/op [Average]
[info]   (min, avg, max) = (7560.670, 7766.459, 7991.336), stdev = 210.601
[info]   CI (99.9%): [6955.510, 8577.407] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   0.112 ±(99.9%) 0.968 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.112, 0.562), stdev = 0.251
[info]   CI (99.9%): [≈ 0, 1.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   2.403 ±(99.9%) 20.694 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.403, 12.017), stdev = 5.374
[info]   CI (99.9%): [≈ 0, 23.098] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   269.890 ±(99.9%) 1423.052 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 269.890, 674.745), stdev = 369.562
[info]   CI (99.9%): [≈ 0, 1692.942] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   5775.656 ±(99.9%) 30453.384 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 5775.656, 14450.623), stdev = 7908.647
[info]   CI (99.9%): [≈ 0, 36229.041] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:·gc.count":
[info]   2.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.000), stdev = 0.548
[info]   CI (99.9%): [2.000, 2.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeCirce:·gc.time":
[info]   2.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.000), stdev = 0.548
[info]   CI (99.9%): [2.000, 2.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 24.50% complete, ETA 01:42:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.866 ops/s
[info] # Warmup Iteration   2: 81046.403 ops/s
[info] # Warmup Iteration   3: 83303.155 ops/s
[info] # Warmup Iteration   4: 84338.233 ops/s
[info] # Warmup Iteration   5: 84741.371 ops/s
[info] Iteration   1: 84298.920 ops/s
[info]                  ·gc.alloc.rate:                   440.360 MB/sec
[info]                  ·gc.alloc.rate.norm:              8221.372 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.050 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.935 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      670.840 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12524.357 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 84321.558 ops/s
[info]                  ·gc.alloc.rate:                   443.520 MB/sec
[info]                  ·gc.alloc.rate.norm:              8278.625 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3.946 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     73.662 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      670.806 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12521.090 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 84576.269 ops/s
[info]                  ·gc.alloc.rate:      423.828 MB/sec
[info]                  ·gc.alloc.rate.norm: 7888.006 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 84568.402 ops/s
[info]                  ·gc.alloc.rate:                   440.553 MB/sec
[info]                  ·gc.alloc.rate.norm:              8199.052 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.387 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      670.154 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12472.126 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 84623.324 ops/s
[info]                  ·gc.alloc.rate:      424.079 MB/sec
[info]                  ·gc.alloc.rate.norm: 7888.005 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava":
[info]   84477.695 ±(99.9%) 594.959 ops/s [Average]
[info]   (min, avg, max) = (84298.920, 84477.695, 84623.324), stdev = 154.509
[info]   CI (99.9%): [83882.736, 85072.653] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   434.468 ±(99.9%) 37.275 MB/sec [Average]
[info]   (min, avg, max) = (423.828, 434.468, 443.520), stdev = 9.680
[info]   CI (99.9%): [397.193, 471.743] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   8095.012 ±(99.9%) 736.189 B/op [Average]
[info]   (min, avg, max) = (7888.005, 8095.012, 8278.625), stdev = 191.186
[info]   CI (99.9%): [7358.823, 8831.202] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   0.803 ±(99.9%) 6.766 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.803, 3.946), stdev = 1.757
[info]   CI (99.9%): [≈ 0, 7.569] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   14.997 ±(99.9%) 126.290 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 14.997, 73.662), stdev = 32.797
[info]   CI (99.9%): [≈ 0, 141.288] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   402.360 ±(99.9%) 1414.353 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 402.360, 670.840), stdev = 367.303
[info]   CI (99.9%): [≈ 0, 1816.713] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   7503.515 ±(99.9%) 26376.031 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 7503.515, 12524.357), stdev = 6849.772
[info]   CI (99.9%): [≈ 0, 33879.546] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 3.000), stdev = 1.517
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 24.70% complete, ETA 01:41:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 35716.866 ops/s
[info] # Warmup Iteration   2: 71185.745 ops/s
[info] # Warmup Iteration   3: 72111.636 ops/s
[info] # Warmup Iteration   4: 72724.635 ops/s
[info] # Warmup Iteration   5: 72206.825 ops/s
[info] Iteration   1: 72796.025 ops/s
[info]                  ·gc.alloc.rate:                   402.516 MB/sec
[info]                  ·gc.alloc.rate.norm:              8703.834 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.900 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.384 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 14560.955 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 73099.508 ops/s
[info]                  ·gc.alloc.rate:      384.329 MB/sec
[info]                  ·gc.alloc.rate.norm: 8272.006 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 72675.766 ops/s
[info]                  ·gc.alloc.rate:                   400.486 MB/sec
[info]                  ·gc.alloc.rate.norm:              8673.403 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.978 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21.189 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.449 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 14584.995 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 73061.004 ops/s
[info]                  ·gc.alloc.rate:      384.016 MB/sec
[info]                  ·gc.alloc.rate.norm: 8272.007 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 73012.676 ops/s
[info]                  ·gc.alloc.rate:                   406.229 MB/sec
[info]                  ·gc.alloc.rate.norm:              8758.656 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.795 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.344 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 14517.883 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala":
[info]   72928.996 ±(99.9%) 708.219 ops/s [Average]
[info]   (min, avg, max) = (72675.766, 72928.996, 73099.508), stdev = 183.922
[info]   CI (99.9%): [72220.777, 73637.215] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   395.515 ±(99.9%) 40.655 MB/sec [Average]
[info]   (min, avg, max) = (384.016, 395.515, 406.229), stdev = 10.558
[info]   CI (99.9%): [354.860, 436.171] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   8535.981 ±(99.9%) 935.335 B/op [Average]
[info]   (min, avg, max) = (8272.006, 8535.981, 8758.656), stdev = 242.904
[info]   CI (99.9%): [7600.646, 9471.317] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.221 ±(99.9%) 1.636 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.221, 0.978), stdev = 0.425
[info]   CI (99.9%): [≈ 0, 1.857] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   4.777 ±(99.9%) 35.444 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4.777, 21.189), stdev = 9.205
[info]   CI (99.9%): [≈ 0, 40.221] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   404.035 ±(99.9%) 1420.241 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 404.035, 673.449), stdev = 368.832
[info]   CI (99.9%): [≈ 0, 1824.277] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   8732.767 ±(99.9%) 30697.045 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 8732.767, 14584.995), stdev = 7971.925
[info]   CI (99.9%): [≈ 0, 39429.811] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJacksonScala:·gc.time":
[info]   4.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 2.000), stdev = 0.837
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 24.90% complete, ETA 01:41:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 65574.313 ops/s
[info] # Warmup Iteration   2: 77183.918 ops/s
[info] # Warmup Iteration   3: 83930.739 ops/s
[info] # Warmup Iteration   4: 84164.974 ops/s
[info] # Warmup Iteration   5: 82560.852 ops/s
[info] Iteration   1: 84905.097 ops/s
[info]                  ·gc.alloc.rate:      425.723 MB/sec
[info]                  ·gc.alloc.rate.norm: 7891.160 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 84408.583 ops/s
[info]                  ·gc.alloc.rate:                   441.144 MB/sec
[info]                  ·gc.alloc.rate.norm:              8225.919 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.110 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12569.994 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 84478.137 ops/s
[info]                  ·gc.alloc.rate:                   438.942 MB/sec
[info]                  ·gc.alloc.rate.norm:              8178.931 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2.862 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53.328 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.056 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12559.877 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 84974.516 ops/s
[info]                  ·gc.alloc.rate:      425.846 MB/sec
[info]                  ·gc.alloc.rate.norm: 7888.005 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 84721.379 ops/s
[info]                  ·gc.alloc.rate:                   445.076 MB/sec
[info]                  ·gc.alloc.rate.norm:              8268.892 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.387 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.420 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12511.186 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala":
[info]   84697.542 ±(99.9%) 966.500 ops/s [Average]
[info]   (min, avg, max) = (84408.583, 84697.542, 84974.516), stdev = 250.997
[info]   CI (99.9%): [83731.042, 85664.042] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   435.346 ±(99.9%) 34.661 MB/sec [Average]
[info]   (min, avg, max) = (425.723, 435.346, 445.076), stdev = 9.001
[info]   CI (99.9%): [400.686, 470.007] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   8090.582 ±(99.9%) 717.096 B/op [Average]
[info]   (min, avg, max) = (7888.005, 8090.582, 8268.892), stdev = 186.228
[info]   CI (99.9%): [7373.486, 8807.678] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.577 ±(99.9%) 4.920 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.577, 2.862), stdev = 1.278
[info]   CI (99.9%): [≈ 0, 5.496] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   10.743 ±(99.9%) 91.671 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 10.743, 53.328), stdev = 23.807
[info]   CI (99.9%): [≈ 0, 102.414] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   404.317 ±(99.9%) 1421.232 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 404.317, 674.110), stdev = 369.090
[info]   CI (99.9%): [≈ 0, 1825.549] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   7528.212 ±(99.9%) 26462.863 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 7528.212, 12569.994), stdev = 6872.321
[info]   CI (99.9%): [≈ 0, 33991.074] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 1.095
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 25.10% complete, ETA 01:41:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 63172.330 ops/s
[info] # Warmup Iteration   2: 76657.815 ops/s
[info] # Warmup Iteration   3: 83972.838 ops/s
[info] # Warmup Iteration   4: 84085.635 ops/s
[info] # Warmup Iteration   5: 79839.073 ops/s
[info] Iteration   1: 81910.590 ops/s
[info]                  ·gc.alloc.rate:                   359.142 MB/sec
[info]                  ·gc.alloc.rate.norm:              6900.740 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      511.588 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9829.920 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 84363.991 ops/s
[info]                  ·gc.alloc.rate:      356.280 MB/sec
[info]                  ·gc.alloc.rate.norm: 6648.005 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 84173.533 ops/s
[info]                  ·gc.alloc.rate:                   376.005 MB/sec
[info]                  ·gc.alloc.rate.norm:              7031.346 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.389 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.357 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12591.880 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 84270.530 ops/s
[info]                  ·gc.alloc.rate:      355.892 MB/sec
[info]                  ·gc.alloc.rate.norm: 6648.005 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 83828.940 ops/s
[info]                  ·gc.alloc.rate:                   378.256 MB/sec
[info]                  ·gc.alloc.rate.norm:              7102.575 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2.904 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     54.520 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.370 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12643.993 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc":
[info]   83709.517 ±(99.9%) 3949.859 ops/s [Average]
[info]   (min, avg, max) = (81910.590, 83709.517, 84363.991), stdev = 1025.766
[info]   CI (99.9%): [79759.657, 87659.376] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   365.115 ±(99.9%) 42.622 MB/sec [Average]
[info]   (min, avg, max) = (355.892, 365.115, 378.256), stdev = 11.069
[info]   CI (99.9%): [322.493, 407.736] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   6866.134 ±(99.9%) 815.840 B/op [Average]
[info]   (min, avg, max) = (6648.005, 6866.134, 7102.575), stdev = 211.871
[info]   CI (99.9%): [6050.294, 7681.974] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   0.585 ±(99.9%) 4.991 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.585, 2.904), stdev = 1.296
[info]   CI (99.9%): [≈ 0, 5.576] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   10.982 ±(99.9%) 93.722 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 10.982, 54.520), stdev = 24.339
[info]   CI (99.9%): [≈ 0, 104.704] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space":
[info]   371.663 ±(99.9%) 1330.970 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 371.663, 673.370), stdev = 345.649
[info]   CI (99.9%): [≈ 0, 1702.633] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   7013.159 ±(99.9%) 25038.911 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 7013.159, 12643.993), stdev = 6502.526
[info]   CI (99.9%): [≈ 0, 32052.069] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.600, 3.000), stdev = 1.517
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 25.30% complete, ETA 01:41:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2975.119 ops/s
[info] # Warmup Iteration   2: 9454.546 ops/s
[info] # Warmup Iteration   3: 9684.168 ops/s
[info] # Warmup Iteration   4: 9729.544 ops/s
[info] # Warmup Iteration   5: 9719.870 ops/s
[info] Iteration   1: 9750.285 ops/s
[info]                  ·gc.alloc.rate:                   1575.737 MB/sec
[info]                  ·gc.alloc.rate.norm:              254394.206 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13.441 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2020.683 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 326228.423 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 9807.551 ops/s
[info]                  ·gc.alloc.rate:                   1571.705 MB/sec
[info]                  ·gc.alloc.rate.norm:              252242.734 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.816 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 216471.241 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 9853.331 ops/s
[info]                  ·gc.alloc.rate:                   1577.796 MB/sec
[info]                  ·gc.alloc.rate.norm:              251942.761 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16.625 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.660 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 215673.623 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 9695.670 ops/s
[info]                  ·gc.alloc.rate:                   1539.941 MB/sec
[info]                  ·gc.alloc.rate.norm:              249962.497 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1351.401 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 219358.769 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 9884.446 ops/s
[info]                  ·gc.alloc.rate:                   1609.065 MB/sec
[info]                  ·gc.alloc.rate.norm:              256251.233 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9.943 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2029.489 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 323205.761 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce":
[info]   9798.257 ±(99.9%) 294.351 ops/s [Average]
[info]   (min, avg, max) = (9695.670, 9798.257, 9884.446), stdev = 76.442
[info]   CI (99.9%): [9503.906, 10092.607] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:·gc.alloc.rate":
[info]   1574.849 ±(99.9%) 94.491 MB/sec [Average]
[info]   (min, avg, max) = (1539.941, 1574.849, 1609.065), stdev = 24.539
[info]   CI (99.9%): [1480.358, 1669.339] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   252958.686 ±(99.9%) 9318.125 B/op [Average]
[info]   (min, avg, max) = (249962.497, 252958.686, 256251.233), stdev = 2419.887
[info]   CI (99.9%): [243640.561, 262276.811] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   0.050 ±(99.9%) 0.185 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.104), stdev = 0.048
[info]   CI (99.9%): [≈ 0, 0.235] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   8.002 ±(99.9%) 29.563 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 8.002, 16.625), stdev = 7.677
[info]   CI (99.9%): [≈ 0, 37.564] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1620.210 ±(99.9%) 1423.252 MB/sec [Average]
[info]   (min, avg, max) = (1348.816, 1620.210, 2029.489), stdev = 369.614
[info]   CI (99.9%): [196.958, 3043.462] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   260187.563 ±(99.9%) 226929.122 B/op [Average]
[info]   (min, avg, max) = (215673.623, 260187.563, 326228.423), stdev = 58932.772
[info]   CI (99.9%): [33258.441, 487116.685] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readCirce:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 25.50% complete, ETA 01:40:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1619.972 ops/s
[info] # Warmup Iteration   2: 8924.038 ops/s
[info] # Warmup Iteration   3: 9728.957 ops/s
[info] # Warmup Iteration   4: 9740.027 ops/s
[info] # Warmup Iteration   5: 9718.702 ops/s
[info] Iteration   1: 9369.517 ops/s
[info]                  ·gc.alloc.rate:                   1432.388 MB/sec
[info]                  ·gc.alloc.rate.norm:              240620.201 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3.496 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.052 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 226453.033 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 9743.084 ops/s
[info]                  ·gc.alloc.rate:                   1481.783 MB/sec
[info]                  ·gc.alloc.rate.norm:              239395.335 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6.725 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.690 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 217892.909 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 9660.772 ops/s
[info]                  ·gc.alloc.rate:                   1490.394 MB/sec
[info]                  ·gc.alloc.rate.norm:              242755.744 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3.388 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.316 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 219777.019 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 9742.268 ops/s
[info]                  ·gc.alloc.rate:                   1490.752 MB/sec
[info]                  ·gc.alloc.rate.norm:              240818.707 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3.363 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1351.165 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 218269.514 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 9741.375 ops/s
[info]                  ·gc.alloc.rate:                   1490.170 MB/sec
[info]                  ·gc.alloc.rate.norm:              240796.869 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3.363 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1351.897 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 218453.333 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala":
[info]   9651.403 ±(99.9%) 621.805 ops/s [Average]
[info]   (min, avg, max) = (9369.517, 9651.403, 9743.084), stdev = 161.481
[info]   CI (99.9%): [9029.598, 10273.208] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1477.097 ±(99.9%) 97.321 MB/sec [Average]
[info]   (min, avg, max) = (1432.388, 1477.097, 1490.752), stdev = 25.274
[info]   CI (99.9%): [1379.777, 1574.418] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   240877.371 ±(99.9%) 4637.099 B/op [Average]
[info]   (min, avg, max) = (239395.335, 240877.371, 242755.744), stdev = 1204.240
[info]   CI (99.9%): [236240.272, 245514.470] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.025 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.025, 0.042), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.061] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   4.067 ±(99.9%) 5.726 B/op [Average]
[info]   (min, avg, max) = (3.363, 4.067, 6.725), stdev = 1.487
[info]   CI (99.9%): [≈ 0, 9.793] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1349.824 ±(99.9%) 6.322 MB/sec [Average]
[info]   (min, avg, max) = (1348.052, 1349.824, 1351.897), stdev = 1.642
[info]   CI (99.9%): [1343.502, 1356.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   220169.162 ±(99.9%) 13799.988 B/op [Average]
[info]   (min, avg, max) = (217892.909, 220169.162, 226453.033), stdev = 3583.813
[info]   CI (99.9%): [206369.174, 233969.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJacksonScala:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 25.70% complete, ETA 01:40:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 117896.789 ops/s
[info] # Warmup Iteration   2: 140357.615 ops/s
[info] # Warmup Iteration   3: 148314.517 ops/s
[info] # Warmup Iteration   4: 148082.949 ops/s
[info] # Warmup Iteration   5: 148639.428 ops/s
[info] Iteration   1: 148423.126 ops/s
[info]                  ·gc.alloc.rate:                   394.758 MB/sec
[info]                  ·gc.alloc.rate.norm:              4186.189 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      511.587 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5425.094 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 148424.412 ops/s
[info]                  ·gc.alloc.rate:                   405.358 MB/sec
[info]                  ·gc.alloc.rate.norm:              4298.906 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.010 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.110 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.051 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7148.451 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 148784.153 ops/s
[info]                  ·gc.alloc.rate:      387.180 MB/sec
[info]                  ·gc.alloc.rate.norm: 4096.003 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 148111.799 ops/s
[info]                  ·gc.alloc.rate:                   399.721 MB/sec
[info]                  ·gc.alloc.rate.norm:              4248.093 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2.851 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     30.304 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.017 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7163.217 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 148823.421 ops/s
[info]                  ·gc.alloc.rate:      387.304 MB/sec
[info]                  ·gc.alloc.rate.norm: 4096.003 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala":
[info]   148513.382 ±(99.9%) 1133.771 ops/s [Average]
[info]   (min, avg, max) = (148111.799, 148513.382, 148823.421), stdev = 294.437
[info]   CI (99.9%): [147379.612, 149647.153] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   394.864 ±(99.9%) 30.437 MB/sec [Average]
[info]   (min, avg, max) = (387.180, 394.864, 405.358), stdev = 7.904
[info]   CI (99.9%): [364.427, 425.301] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   4185.039 ±(99.9%) 348.679 B/op [Average]
[info]   (min, avg, max) = (4096.003, 4185.039, 4298.906), stdev = 90.551
[info]   CI (99.9%): [3836.360, 4533.718] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.572 ±(99.9%) 4.906 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.572, 2.851), stdev = 1.274
[info]   CI (99.9%): [≈ 0, 5.478] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   6.083 ±(99.9%) 52.138 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 6.083, 30.304), stdev = 13.540
[info]   CI (99.9%): [≈ 0, 58.221] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   371.931 ±(99.9%) 1332.097 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 371.931, 674.051), stdev = 345.941
[info]   CI (99.9%): [≈ 0, 1704.028] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   3947.352 ±(99.9%) 14139.745 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3947.352, 7163.217), stdev = 3672.047
[info]   CI (99.9%): [≈ 0, 18087.098] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readJsoniterScala:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.600, 3.000), stdev = 1.517
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 25.90% complete, ETA 01:40:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1038.299 ops/s
[info] # Warmup Iteration   2: 5015.248 ops/s
[info] # Warmup Iteration   3: 5125.068 ops/s
[info] # Warmup Iteration   4: 5453.040 ops/s
[info] # Warmup Iteration   5: 5485.066 ops/s
[info] Iteration   1: 5452.892 ops/s
[info]                  ·gc.alloc.rate:                   1415.421 MB/sec
[info]                  ·gc.alloc.rate.norm:              408550.124 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.561 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 389251.402 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 5462.358 ops/s
[info]                  ·gc.alloc.rate:                   1417.645 MB/sec
[info]                  ·gc.alloc.rate.norm:              408364.592 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5.997 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.067 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 388898.108 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 5441.910 ops/s
[info]                  ·gc.alloc.rate:                   1405.006 MB/sec
[info]                  ·gc.alloc.rate.norm:              406309.738 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6.020 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.651 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 390591.189 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 5448.142 ops/s
[info]                  ·gc.alloc.rate:                   1416.375 MB/sec
[info]                  ·gc.alloc.rate.norm:              409223.304 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1351.149 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 390378.111 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 5446.502 ops/s
[info]                  ·gc.alloc.rate:                   1415.290 MB/sec
[info]                  ·gc.alloc.rate.norm:              409019.921 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1352.614 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 390906.355 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson":
[info]   5450.361 ±(99.9%) 29.923 ops/s [Average]
[info]   (min, avg, max) = (5441.910, 5450.361, 5462.358), stdev = 7.771
[info]   CI (99.9%): [5420.437, 5480.284] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1413.947 ±(99.9%) 19.587 MB/sec [Average]
[info]   (min, avg, max) = (1405.006, 1413.947, 1417.645), stdev = 5.087
[info]   CI (99.9%): [1394.361, 1433.534] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   408293.536 ±(99.9%) 4473.400 B/op [Average]
[info]   (min, avg, max) = (406309.738, 408293.536, 409223.304), stdev = 1161.728
[info]   CI (99.9%): [403820.136, 412766.935] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   0.008 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   2.403 ±(99.9%) 12.673 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.403, 6.020), stdev = 3.291
[info]   CI (99.9%): [≈ 0, 15.076] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   1350.608 ±(99.9%) 5.712 MB/sec [Average]
[info]   (min, avg, max) = (1348.561, 1350.608, 1352.614), stdev = 1.483
[info]   CI (99.9%): [1344.896, 1356.320] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   390005.033 ±(99.9%) 3383.525 B/op [Average]
[info]   (min, avg, max) = (388898.108, 390005.033, 390906.355), stdev = 878.691
[info]   CI (99.9%): [386621.508, 393388.558] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readPlayJson:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 26.10% complete, ETA 01:40:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2188.632 ops/s
[info] # Warmup Iteration   2: 9370.605 ops/s
[info] # Warmup Iteration   3: 9991.975 ops/s
[info] # Warmup Iteration   4: 9770.260 ops/s
[info] # Warmup Iteration   5: 9853.389 ops/s
[info] Iteration   1: 10069.771 ops/s
[info]                  ·gc.alloc.rate:                   1587.802 MB/sec
[info]                  ·gc.alloc.rate.norm:              248188.554 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1342.732 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 209881.773 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 10053.643 ops/s
[info]                  ·gc.alloc.rate:                   1576.121 MB/sec
[info]                  ·gc.alloc.rate.norm:              246771.553 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3.259 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1343.440 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 210340.904 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 9970.932 ops/s
[info]                  ·gc.alloc.rate:                   1588.974 MB/sec
[info]                  ·gc.alloc.rate.norm:              250841.825 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6.571 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2017.391 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 318473.549 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 10011.767 ops/s
[info]                  ·gc.alloc.rate:                   1579.029 MB/sec
[info]                  ·gc.alloc.rate.norm:              248253.266 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9.817 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1346.693 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 211725.651 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 10059.259 ops/s
[info]                  ·gc.alloc.rate:                   1586.723 MB/sec
[info]                  ·gc.alloc.rate.norm:              248292.394 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3.257 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.719 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 211049.240 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readUPickle":
[info]   10033.075 ±(99.9%) 158.429 ops/s [Average]
[info]   (min, avg, max) = (9970.932, 10033.075, 10069.771), stdev = 41.143
[info]   CI (99.9%): [9874.646, 10191.503] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readUPickle:·gc.alloc.rate":
[info]   1583.730 ±(99.9%) 22.206 MB/sec [Average]
[info]   (min, avg, max) = (1576.121, 1583.730, 1588.974), stdev = 5.767
[info]   CI (99.9%): [1561.524, 1605.936] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readUPickle:·gc.alloc.rate.norm":
[info]   248469.519 ±(99.9%) 5668.431 B/op [Average]
[info]   (min, avg, max) = (246771.553, 248469.519, 250841.825), stdev = 1472.074
[info]   CI (99.9%): [242801.087, 254137.950] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readUPickle:·gc.churn.PS_Eden_Space":
[info]   0.029 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   4.581 ±(99.9%) 14.390 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4.581, 9.817), stdev = 3.737
[info]   CI (99.9%): [≈ 0, 18.971] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space":
[info]   1479.795 ±(99.9%) 1157.254 MB/sec [Average]
[info]   (min, avg, max) = (1342.732, 1479.795, 2017.391), stdev = 300.535
[info]   CI (99.9%): [322.541, 2637.049] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   232294.223 ±(99.9%) 185527.104 B/op [Average]
[info]   (min, avg, max) = (209881.773, 232294.223, 318473.549), stdev = 48180.800
[info]   CI (99.9%): [46767.120, 417821.327] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readUPickle:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.readUPickle:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 26.31% complete, ETA 01:39:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 10105.554 ops/s
[info] # Warmup Iteration   2: 19674.165 ops/s
[info] # Warmup Iteration   3: 19994.990 ops/s
[info] # Warmup Iteration   4: 19855.780 ops/s
[info] # Warmup Iteration   5: 19380.682 ops/s
[info] Iteration   1: 19932.893 ops/s
[info]                  ·gc.alloc.rate:                   1093.679 MB/sec
[info]                  ·gc.alloc.rate.norm:              86371.124 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.305 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 53251.903 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 19562.837 ops/s
[info]                  ·gc.alloc.rate:                   1092.059 MB/sec
[info]                  ·gc.alloc.rate.norm:              87844.213 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.675 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.733 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 108571.318 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 20143.109 ops/s
[info]                  ·gc.alloc.rate:                   1101.010 MB/sec
[info]                  ·gc.alloc.rate.norm:              86018.539 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      675.169 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 52748.884 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 19631.029 ops/s
[info]                  ·gc.alloc.rate:                   1100.039 MB/sec
[info]                  ·gc.alloc.rate.norm:              88203.523 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.669 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.367 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 108275.418 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 20066.349 ops/s
[info]                  ·gc.alloc.rate:                   1108.734 MB/sec
[info]                  ·gc.alloc.rate.norm:              86937.930 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4.898 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1351.925 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 106007.011 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce":
[info]   19867.243 ±(99.9%) 997.672 ops/s [Average]
[info]   (min, avg, max) = (19562.837, 19867.243, 20143.109), stdev = 259.092
[info]   CI (99.9%): [18869.571, 20864.915] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1099.104 ±(99.9%) 25.564 MB/sec [Average]
[info]   (min, avg, max) = (1092.059, 1099.104, 1108.734), stdev = 6.639
[info]   CI (99.9%): [1073.540, 1124.668] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   87075.066 ±(99.9%) 3599.679 B/op [Average]
[info]   (min, avg, max) = (86018.539, 87075.066, 88203.523), stdev = 934.825
[info]   CI (99.9%): [83475.387, 90674.744] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   0.021 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.062), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1.648 ±(99.9%) 7.700 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.648, 4.898), stdev = 2.000
[info]   CI (99.9%): [≈ 0, 9.349] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   1080.300 ±(99.9%) 1425.614 MB/sec [Average]
[info]   (min, avg, max) = (674.305, 1080.300, 1351.925), stdev = 370.227
[info]   CI (99.9%): [≈ 0, 2505.914] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   85770.907 ±(99.9%) 115258.322 B/op [Average]
[info]   (min, avg, max) = (52748.884, 85770.907, 108571.318), stdev = 29932.220
[info]   CI (99.9%): [≈ 0, 201029.229] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeCirce:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 26.51% complete, ETA 01:39:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 8323.361 ops/s
[info] # Warmup Iteration   2: 21707.814 ops/s
[info] # Warmup Iteration   3: 21726.629 ops/s
[info] # Warmup Iteration   4: 21218.687 ops/s
[info] # Warmup Iteration   5: 21843.200 ops/s
[info] Iteration   1: 21644.447 ops/s
[info]                  ·gc.alloc.rate:                   1225.697 MB/sec
[info]                  ·gc.alloc.rate.norm:              89141.902 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.514 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.345 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 98061.812 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 21715.193 ops/s
[info]                  ·gc.alloc.rate:                   1226.865 MB/sec
[info]                  ·gc.alloc.rate.norm:              88919.084 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3.017 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.256 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 97789.525 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 21511.708 ops/s
[info]                  ·gc.alloc.rate:                   1213.753 MB/sec
[info]                  ·gc.alloc.rate.norm:              88807.761 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4.569 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.847 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 98765.478 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 21903.934 ops/s
[info]                  ·gc.alloc.rate:                   1220.519 MB/sec
[info]                  ·gc.alloc.rate.norm:              87711.679 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      675.038 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 48511.059 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 21845.479 ops/s
[info]                  ·gc.alloc.rate:                   1236.024 MB/sec
[info]                  ·gc.alloc.rate.norm:              89063.439 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7.498 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1351.319 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 97371.199 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala":
[info]   21724.152 ±(99.9%) 604.586 ops/s [Average]
[info]   (min, avg, max) = (21511.708, 21724.152, 21903.934), stdev = 157.009
[info]   CI (99.9%): [21119.566, 22328.738] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1224.572 ±(99.9%) 31.704 MB/sec [Average]
[info]   (min, avg, max) = (1213.753, 1224.572, 1236.024), stdev = 8.233
[info]   CI (99.9%): [1192.867, 1256.276] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   88728.773 ±(99.9%) 2244.973 B/op [Average]
[info]   (min, avg, max) = (87711.679, 88728.773, 89141.902), stdev = 583.012
[info]   CI (99.9%): [86483.800, 90973.746] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.046 ±(99.9%) 0.154 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.104), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   3.320 ±(99.9%) 11.126 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.320, 7.498), stdev = 2.889
[info]   CI (99.9%): [≈ 0, 14.446] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1214.761 ±(99.9%) 1161.803 MB/sec [Average]
[info]   (min, avg, max) = (675.038, 1214.761, 1351.319), stdev = 301.716
[info]   CI (99.9%): [52.958, 2376.564] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   88099.815 ±(99.9%) 85240.167 B/op [Average]
[info]   (min, avg, max) = (48511.059, 88099.815, 98765.478), stdev = 22136.601
[info]   CI (99.9%): [2859.647, 173339.982] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJacksonScala:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 26.71% complete, ETA 01:39:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 108037.116 ops/s
[info] # Warmup Iteration   2: 124337.349 ops/s
[info] # Warmup Iteration   3: 130423.267 ops/s
[info] # Warmup Iteration   4: 128255.591 ops/s
[info] # Warmup Iteration   5: 131319.070 ops/s
[info] Iteration   1: 132360.911 ops/s
[info]                  ·gc.alloc.rate:      292.620 MB/sec
[info]                  ·gc.alloc.rate.norm: 3480.003 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 131542.257 ops/s
[info]                  ·gc.alloc.rate:                   302.823 MB/sec
[info]                  ·gc.alloc.rate.norm:              3622.178 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      511.736 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6121.070 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 131823.924 ops/s
[info]                  ·gc.alloc.rate:      291.460 MB/sec
[info]                  ·gc.alloc.rate.norm: 3480.003 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 131007.737 ops/s
[info]                  ·gc.alloc.rate:                   301.711 MB/sec
[info]                  ·gc.alloc.rate.norm:              3624.051 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.010 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.125 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.238 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8098.719 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 131832.427 ops/s
[info]                  ·gc.alloc.rate:      291.453 MB/sec
[info]                  ·gc.alloc.rate.norm: 3480.003 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala":
[info]   131713.451 ±(99.9%) 1899.059 ops/s [Average]
[info]   (min, avg, max) = (131007.737, 131713.451, 132360.911), stdev = 493.180
[info]   CI (99.9%): [129814.392, 133612.510] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   296.013 ±(99.9%) 22.109 MB/sec [Average]
[info]   (min, avg, max) = (291.453, 296.013, 302.823), stdev = 5.742
[info]   CI (99.9%): [273.904, 318.123] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   3537.248 ±(99.9%) 301.846 B/op [Average]
[info]   (min, avg, max) = (3480.003, 3537.248, 3624.051), stdev = 78.388
[info]   CI (99.9%): [3235.402, 3839.093] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.002 ±(99.9%) 0.018 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.002, 0.010), stdev = 0.005
[info]   CI (99.9%): [≈ 0, 0.020] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.025 ±(99.9%) 0.215 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.125), stdev = 0.056
[info]   CI (99.9%): [≈ 0, 0.240] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   237.195 ±(99.9%) 1270.075 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 237.195, 674.238), stdev = 329.835
[info]   CI (99.9%): [≈ 0, 1507.270] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2843.958 ±(99.9%) 15235.157 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2843.958, 8098.719), stdev = 3956.522
[info]   CI (99.9%): [≈ 0, 18079.115] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.count":
[info]   2.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.000), stdev = 0.548
[info]   CI (99.9%): [2.000, 2.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 4.000), stdev = 1.789
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 26.91% complete, ETA 01:38:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 113771.214 ops/s
[info] # Warmup Iteration   2: 135572.756 ops/s
[info] # Warmup Iteration   3: 137279.946 ops/s
[info] # Warmup Iteration   4: 137537.139 ops/s
[info] # Warmup Iteration   5: 137636.529 ops/s
[info] Iteration   1: 137528.494 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.004 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 137459.675 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.003 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 137534.002 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.003 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 137511.750 ops/s
[info]                  ·gc.alloc.rate:      0.016 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.186 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 137492.901 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.003 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc":
[info]   137505.364 ±(99.9%) 116.139 ops/s [Average]
[info]   (min, avg, max) = (137459.675, 137505.364, 137534.002), stdev = 30.161
[info]   CI (99.9%): [137389.225, 137621.504] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.003 ±(99.9%) 0.027 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.003, 0.016), stdev = 0.007
[info]   CI (99.9%): [≈ 0, 0.031] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.040 ±(99.9%) 0.314 B/op [Average]
[info]   (min, avg, max) = (0.003, 0.040, 0.186), stdev = 0.082
[info]   CI (99.9%): [≈ 0, 0.354] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 27.11% complete, ETA 01:38:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 8486.854 ops/s
[info] # Warmup Iteration   2: 22138.425 ops/s
[info] # Warmup Iteration   3: 21994.032 ops/s
[info] # Warmup Iteration   4: 22590.953 ops/s
[info] # Warmup Iteration   5: 22701.695 ops/s
[info] Iteration   1: 22421.249 ops/s
[info]                  ·gc.alloc.rate:                   1260.391 MB/sec
[info]                  ·gc.alloc.rate.norm:              88491.135 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1346.981 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 94570.567 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 22711.360 ops/s
[info]                  ·gc.alloc.rate:                   1274.134 MB/sec
[info]                  ·gc.alloc.rate.norm:              88304.792 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.885 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.120 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 93432.438 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 22655.642 ops/s
[info]                  ·gc.alloc.rate:                   1270.922 MB/sec
[info]                  ·gc.alloc.rate.norm:              88295.863 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.446 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.180 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 93732.763 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 22694.229 ops/s
[info]                  ·gc.alloc.rate:                   1287.879 MB/sec
[info]                  ·gc.alloc.rate.norm:              89319.507 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.444 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.130 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 93636.881 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 22752.389 ops/s
[info]                  ·gc.alloc.rate:                   1254.854 MB/sec
[info]                  ·gc.alloc.rate.norm:              86816.669 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.440 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      675.325 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 46722.154 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson":
[info]   22646.974 ±(99.9%) 503.970 ops/s [Average]
[info]   (min, avg, max) = (22421.249, 22646.974, 22752.389), stdev = 130.879
[info]   CI (99.9%): [22143.003, 23150.944] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1269.636 ±(99.9%) 49.411 MB/sec [Average]
[info]   (min, avg, max) = (1254.854, 1269.636, 1287.879), stdev = 12.832
[info]   CI (99.9%): [1220.225, 1319.047] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   88245.593 ±(99.9%) 3477.025 B/op [Average]
[info]   (min, avg, max) = (86816.669, 88245.593, 89319.507), stdev = 902.972
[info]   CI (99.9%): [84768.568, 91722.618] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   0.021 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.077] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   1.443 ±(99.9%) 3.928 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.443, 2.885), stdev = 1.020
[info]   CI (99.9%): [≈ 0, 5.371] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   1213.947 ±(99.9%) 1159.433 MB/sec [Average]
[info]   (min, avg, max) = (675.325, 1213.947, 1350.130), stdev = 301.101
[info]   CI (99.9%): [54.514, 2373.380] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   84418.961 ±(99.9%) 81162.405 B/op [Average]
[info]   (min, avg, max) = (46722.154, 84418.961, 94570.567), stdev = 21077.619
[info]   CI (99.9%): [3256.556, 165581.366] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writePlayJson:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 27.31% complete, ETA 01:38:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6575.924 ops/s
[info] # Warmup Iteration   2: 9611.942 ops/s
[info] # Warmup Iteration   3: 10057.743 ops/s
[info] # Warmup Iteration   4: 10097.299 ops/s
[info] # Warmup Iteration   5: 10094.160 ops/s
[info] Iteration   1: 10127.260 ops/s
[info]                  ·gc.alloc.rate:                   624.909 MB/sec
[info]                  ·gc.alloc.rate.norm:              97133.327 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2.695 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     418.944 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.670 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 104867.952 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 9910.606 ops/s
[info]                  ·gc.alloc.rate:                   612.078 MB/sec
[info]                  ·gc.alloc.rate.norm:              97173.629 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.269 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 107047.202 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 10210.918 ops/s
[info]                  ·gc.alloc.rate:                   624.174 MB/sec
[info]                  ·gc.alloc.rate.norm:              96198.599 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.161 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 103902.762 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 10219.874 ops/s
[info]                  ·gc.alloc.rate:                   629.626 MB/sec
[info]                  ·gc.alloc.rate.norm:              96942.932 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3.206 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.569 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 103708.700 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 10205.302 ops/s
[info]                  ·gc.alloc.rate:      623.908 MB/sec
[info]                  ·gc.alloc.rate.norm: 96196.088 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeUPickle":
[info]   10134.792 ±(99.9%) 503.250 ops/s [Average]
[info]   (min, avg, max) = (9910.606, 10134.792, 10219.874), stdev = 130.692
[info]   CI (99.9%): [9631.542, 10638.042] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeUPickle:·gc.alloc.rate":
[info]   622.939 ±(99.9%) 25.032 MB/sec [Average]
[info]   (min, avg, max) = (612.078, 622.939, 629.626), stdev = 6.501
[info]   CI (99.9%): [597.907, 647.971] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeUPickle:·gc.alloc.rate.norm":
[info]   96728.915 ±(99.9%) 1898.432 B/op [Average]
[info]   (min, avg, max) = (96196.088, 96728.915, 97173.629), stdev = 493.017
[info]   CI (99.9%): [94830.483, 98627.347] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space":
[info]   0.543 ±(99.9%) 4.633 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.543, 2.695), stdev = 1.203
[info]   CI (99.9%): [≈ 0, 5.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   84.430 ±(99.9%) 720.087 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 84.430, 418.944), stdev = 187.004
[info]   CI (99.9%): [≈ 0, 804.517] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space":
[info]   539.334 ±(99.9%) 1160.958 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 539.334, 674.670), stdev = 301.497
[info]   CI (99.9%): [≈ 0, 1700.292] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   83905.323 ±(99.9%) 180684.598 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 83905.323, 107047.202), stdev = 46923.216
[info]   CI (99.9%): [≈ 0, 264589.922] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeUPickle:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfInstantsBenchmark.writeUPickle:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 3.000), stdev = 1.095
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 27.51% complete, ETA 01:38:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 62509.643 ops/s
[info] # Warmup Iteration   2: 128838.104 ops/s
[info] # Warmup Iteration   3: 129990.248 ops/s
[info] # Warmup Iteration   4: 131231.223 ops/s
[info] # Warmup Iteration   5: 123902.570 ops/s
[info] Iteration   1: 131472.175 ops/s
[info]                  ·gc.alloc.rate:                   1753.013 MB/sec
[info]                  ·gc.alloc.rate.norm:              20984.089 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.748 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2026.190 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 24254.096 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 130640.724 ops/s
[info]                  ·gc.alloc.rate:                   1738.288 MB/sec
[info]                  ·gc.alloc.rate.norm:              20940.650 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.251 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1352.316 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16290.959 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 131993.785 ops/s
[info]                  ·gc.alloc.rate:                   1756.535 MB/sec
[info]                  ·gc.alloc.rate.norm:              20946.438 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.745 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2029.865 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 24205.851 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 132493.196 ops/s
[info]                  ·gc.alloc.rate:                   1762.545 MB/sec
[info]                  ·gc.alloc.rate.norm:              20939.495 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.247 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1354.701 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16094.202 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 131539.373 ops/s
[info]                  ·gc.alloc.rate:                   1764.006 MB/sec
[info]                  ·gc.alloc.rate.norm:              21106.328 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.747 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2034.715 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 24345.359 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce":
[info]   131627.850 ±(99.9%) 2646.329 ops/s [Average]
[info]   (min, avg, max) = (130640.724, 131627.850, 132493.196), stdev = 687.243
[info]   CI (99.9%): [128981.522, 134274.179] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:·gc.alloc.rate":
[info]   1754.878 ±(99.9%) 39.624 MB/sec [Average]
[info]   (min, avg, max) = (1738.288, 1754.878, 1764.006), stdev = 10.290
[info]   CI (99.9%): [1715.254, 1794.501] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   20983.400 ±(99.9%) 273.864 B/op [Average]
[info]   (min, avg, max) = (20939.495, 20983.400, 21106.328), stdev = 71.122
[info]   CI (99.9%): [20709.536, 21257.264] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   0.046 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.062), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.548 ±(99.9%) 1.049 B/op [Average]
[info]   (min, avg, max) = (0.247, 0.548, 0.748), stdev = 0.272
[info]   CI (99.9%): [≈ 0, 1.597] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1759.557 ±(99.9%) 1427.369 MB/sec [Average]
[info]   (min, avg, max) = (1352.316, 1759.557, 2034.715), stdev = 370.683
[info]   CI (99.9%): [332.188, 3186.927] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   21038.093 ±(99.9%) 17035.859 B/op [Average]
[info]   (min, avg, max) = (16094.202, 21038.093, 24345.359), stdev = 4424.159
[info]   CI (99.9%): [4002.234, 38073.953] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readCirce:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 27.71% complete, ETA 01:37:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.789 ops/s
[info] # Warmup Iteration   2: 475227.009 ops/s
[info] # Warmup Iteration   3: 508499.931 ops/s
[info] # Warmup Iteration   4: 512870.102 ops/s
[info] # Warmup Iteration   5: 513200.536 ops/s
[info] Iteration   1: 512467.427 ops/s
[info]                  ·gc.alloc.rate:                   544.162 MB/sec
[info]                  ·gc.alloc.rate.norm:              1671.329 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3.696 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11.353 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.076 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2064.203 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 514692.333 ops/s
[info]                  ·gc.alloc.rate:      548.922 MB/sec
[info]                  ·gc.alloc.rate.norm: 1678.486 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 513093.432 ops/s
[info]                  ·gc.alloc.rate:                   539.662 MB/sec
[info]                  ·gc.alloc.rate.norm:              1655.122 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      670.897 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2057.614 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 513301.305 ops/s
[info]                  ·gc.alloc.rate:                   546.463 MB/sec
[info]                  ·gc.alloc.rate.norm:              1675.751 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.064 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      670.718 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2056.784 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 513464.542 ops/s
[info]                  ·gc.alloc.rate:                   553.737 MB/sec
[info]                  ·gc.alloc.rate.norm:              1697.505 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      670.032 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2054.010 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava":
[info]   513403.808 ±(99.9%) 3132.798 ops/s [Average]
[info]   (min, avg, max) = (512467.427, 513403.808, 514692.333), stdev = 813.578
[info]   CI (99.9%): [510271.010, 516536.606] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   546.589 ±(99.9%) 20.232 MB/sec [Average]
[info]   (min, avg, max) = (539.662, 546.589, 553.737), stdev = 5.254
[info]   CI (99.9%): [526.357, 566.821] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   1675.639 ±(99.9%) 58.580 B/op [Average]
[info]   (min, avg, max) = (1655.122, 1675.639, 1697.505), stdev = 15.213
[info]   CI (99.9%): [1617.058, 1734.219] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   0.743 ±(99.9%) 6.356 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.743, 3.696), stdev = 1.651
[info]   CI (99.9%): [≈ 0, 7.100] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   2.283 ±(99.9%) 19.523 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.283, 11.353), stdev = 5.070
[info]   CI (99.9%): [≈ 0, 21.806] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   536.745 ±(99.9%) 1155.387 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 536.745, 672.076), stdev = 300.050
[info]   CI (99.9%): [≈ 0, 1692.131] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   1646.522 ±(99.9%) 3544.292 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1646.522, 2064.203), stdev = 920.441
[info]   CI (99.9%): [≈ 0, 5190.814] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readDslJsonJava:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 1.000
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 27.91% complete, ETA 01:37:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 127205.746 ops/s
[info] # Warmup Iteration   2: 281784.826 ops/s
[info] # Warmup Iteration   3: 298474.876 ops/s
[info] # Warmup Iteration   4: 298725.937 ops/s
[info] # Warmup Iteration   5: 302301.944 ops/s
[info] Iteration   1: 301214.034 ops/s
[info]                  ·gc.alloc.rate:                   430.373 MB/sec
[info]                  ·gc.alloc.rate.norm:              2248.793 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.794 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3525.941 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 300700.266 ops/s
[info]                  ·gc.alloc.rate:                   437.148 MB/sec
[info]                  ·gc.alloc.rate.norm:              2288.277 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1.145 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5.993 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.742 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3531.979 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 302952.938 ops/s
[info]                  ·gc.alloc.rate:      420.603 MB/sec
[info]                  ·gc.alloc.rate.norm: 2184.886 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 306482.021 ops/s
[info]                  ·gc.alloc.rate:                   442.542 MB/sec
[info]                  ·gc.alloc.rate.norm:              2272.899 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.107 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.704 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3465.287 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 308019.312 ops/s
[info]                  ·gc.alloc.rate:      427.447 MB/sec
[info]                  ·gc.alloc.rate.norm: 2184.457 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala":
[info]   303873.714 ±(99.9%) 12474.800 ops/s [Average]
[info]   (min, avg, max) = (300700.266, 303873.714, 308019.312), stdev = 3239.666
[info]   CI (99.9%): [291398.914, 316348.514] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   431.623 ±(99.9%) 32.797 MB/sec [Average]
[info]   (min, avg, max) = (420.603, 431.623, 442.542), stdev = 8.517
[info]   CI (99.9%): [398.825, 464.420] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   2235.862 ±(99.9%) 187.927 B/op [Average]
[info]   (min, avg, max) = (2184.457, 2235.862, 2288.277), stdev = 48.804
[info]   CI (99.9%): [2047.936, 2423.789] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.233 ±(99.9%) 1.963 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.233, 1.145), stdev = 0.510
[info]   CI (99.9%): [≈ 0, 2.196] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1.220 ±(99.9%) 10.275 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.220, 5.993), stdev = 2.668
[info]   CI (99.9%): [≈ 0, 11.495] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   404.848 ±(99.9%) 1423.098 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 404.848, 674.794), stdev = 369.574
[info]   CI (99.9%): [≈ 0, 1827.946] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2104.642 ±(99.9%) 7398.793 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2104.642, 3531.979), stdev = 1921.443
[info]   CI (99.9%): [≈ 0, 9503.435] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJacksonScala:·gc.time":
[info]   4.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 2.000), stdev = 0.837
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 28.11% complete, ETA 01:37:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 583499.355 ops/s
[info] # Warmup Iteration   2: 656351.662 ops/s
[info] # Warmup Iteration   3: 712679.556 ops/s
[info] # Warmup Iteration   4: 702839.600 ops/s
[info] # Warmup Iteration   5: 684104.212 ops/s
[info] Iteration   1: 713391.085 ops/s
[info]                  ·gc.alloc.rate:                   477.723 MB/sec
[info]                  ·gc.alloc.rate.norm:              1054.085 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.070 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1487.321 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 715515.667 ops/s
[info]                  ·gc.alloc.rate:      465.477 MB/sec
[info]                  ·gc.alloc.rate.norm: 1024.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 711491.118 ops/s
[info]                  ·gc.alloc.rate:                   487.753 MB/sec
[info]                  ·gc.alloc.rate.norm:              1079.060 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2.852 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6.309 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.066 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1491.242 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 710714.814 ops/s
[info]                  ·gc.alloc.rate:                   485.668 MB/sec
[info]                  ·gc.alloc.rate.norm:              1075.575 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.442 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1491.424 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 713074.037 ops/s
[info]                  ·gc.alloc.rate:                   488.737 MB/sec
[info]                  ·gc.alloc.rate.norm:              1078.450 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.046 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.668 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1486.520 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala":
[info]   712837.344 ±(99.9%) 7166.110 ops/s [Average]
[info]   (min, avg, max) = (710714.814, 712837.344, 715515.667), stdev = 1861.016
[info]   CI (99.9%): [705671.234, 720003.454] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   481.072 ±(99.9%) 37.478 MB/sec [Average]
[info]   (min, avg, max) = (465.477, 481.072, 488.737), stdev = 9.733
[info]   CI (99.9%): [443.594, 518.550] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   1062.234 ±(99.9%) 91.372 B/op [Average]
[info]   (min, avg, max) = (1024.001, 1062.234, 1079.060), stdev = 23.729
[info]   CI (99.9%): [970.862, 1153.606] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.574 ±(99.9%) 4.902 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.574, 2.852), stdev = 1.273
[info]   CI (99.9%): [≈ 0, 5.476] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1.271 ±(99.9%) 10.844 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.271, 6.309), stdev = 2.816
[info]   CI (99.9%): [≈ 0, 12.115] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   539.049 ±(99.9%) 1160.345 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 539.049, 674.070), stdev = 301.338
[info]   CI (99.9%): [≈ 0, 1699.394] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1191.301 ±(99.9%) 2564.381 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1191.301, 1491.424), stdev = 665.961
[info]   CI (99.9%): [≈ 0, 3755.682] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readJsoniterScala:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.600, 3.000), stdev = 1.342
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 28.31% complete, ETA 01:37:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 10625.541 ops/s
[info] # Warmup Iteration   2: 74144.174 ops/s
[info] # Warmup Iteration   3: 75254.403 ops/s
[info] # Warmup Iteration   4: 77378.897 ops/s
[info] # Warmup Iteration   5: 77737.291 ops/s
[info] Iteration   1: 77543.804 ops/s
[info]                  ·gc.alloc.rate:                   3170.285 MB/sec
[info]                  ·gc.alloc.rate.norm:              64356.986 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.690 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3385.755 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 68731.044 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 77543.960 ops/s
[info]                  ·gc.alloc.rate:                   3224.061 MB/sec
[info]                  ·gc.alloc.rate.norm:              65411.452 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.533 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3390.563 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 68789.536 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 76323.786 ops/s
[info]                  ·gc.alloc.rate:                   3149.110 MB/sec
[info]                  ·gc.alloc.rate.norm:              64949.083 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.717 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2716.648 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 56029.730 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 75998.065 ops/s
[info]                  ·gc.alloc.rate:                   3135.198 MB/sec
[info]                  ·gc.alloc.rate.norm:              64934.820 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.862 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2719.471 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 56324.473 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 77437.486 ops/s
[info]                  ·gc.alloc.rate:                   3221.204 MB/sec
[info]                  ·gc.alloc.rate.norm:              65480.292 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.115 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3401.311 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 69141.491 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson":
[info]   76969.420 ±(99.9%) 2881.218 ops/s [Average]
[info]   (min, avg, max) = (75998.065, 76969.420, 77543.960), stdev = 748.243
[info]   CI (99.9%): [74088.202, 79850.638] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3179.972 ±(99.9%) 157.535 MB/sec [Average]
[info]   (min, avg, max) = (3135.198, 3179.972, 3224.061), stdev = 40.911
[info]   CI (99.9%): [3022.437, 3337.506] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   65026.527 ±(99.9%) 1740.009 B/op [Average]
[info]   (min, avg, max) = (64356.986, 65026.527, 65480.292), stdev = 451.875
[info]   CI (99.9%): [63286.517, 66766.536] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   0.087 ±(99.9%) 0.119 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.087, 0.125), stdev = 0.031
[info]   CI (99.9%): [≈ 0, 0.206] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   1.784 ±(99.9%) 2.385 B/op [Average]
[info]   (min, avg, max) = (0.862, 1.784, 2.533), stdev = 0.619
[info]   CI (99.9%): [≈ 0, 4.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   3122.750 ±(99.9%) 1422.713 MB/sec [Average]
[info]   (min, avg, max) = (2716.648, 3122.750, 3401.311), stdev = 369.474
[info]   CI (99.9%): [1700.036, 4545.463] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   63803.255 ±(99.9%) 26816.822 B/op [Average]
[info]   (min, avg, max) = (56029.730, 63803.255, 69141.491), stdev = 6964.243
[info]   CI (99.9%): [36986.433, 90620.076] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readPlayJson:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.400, 5.000), stdev = 0.894
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 28.51% complete, ETA 01:36:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 139561.901 ops/s
[info] # Warmup Iteration   2: 203049.825 ops/s
[info] # Warmup Iteration   3: 204476.738 ops/s
[info] # Warmup Iteration   4: 209045.088 ops/s
[info] # Warmup Iteration   5: 210842.989 ops/s
[info] Iteration   1: 210329.566 ops/s
[info]                  ·gc.alloc.rate:                   1126.068 MB/sec
[info]                  ·gc.alloc.rate.norm:              8427.811 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.156 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1344.007 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10058.928 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 209739.424 ops/s
[info]                  ·gc.alloc.rate:                   1122.272 MB/sec
[info]                  ·gc.alloc.rate.norm:              8420.291 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.156 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1344.462 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10087.364 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 211634.492 ops/s
[info]                  ·gc.alloc.rate:                   1120.154 MB/sec
[info]                  ·gc.alloc.rate.norm:              8330.208 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.460 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5000.862 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 211190.977 ops/s
[info]                  ·gc.alloc.rate:                   1134.881 MB/sec
[info]                  ·gc.alloc.rate.norm:              8454.658 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.465 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.726 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10025.420 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 208990.212 ops/s
[info]                  ·gc.alloc.rate:                   1107.071 MB/sec
[info]                  ·gc.alloc.rate.norm:              8338.536 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.671 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5066.602 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readUPickle":
[info]   210376.934 ±(99.9%) 4118.469 ops/s [Average]
[info]   (min, avg, max) = (208990.212, 210376.934, 211634.492), stdev = 1069.553
[info]   CI (99.9%): [206258.465, 214495.404] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readUPickle:·gc.alloc.rate":
[info]   1122.089 ±(99.9%) 38.927 MB/sec [Average]
[info]   (min, avg, max) = (1107.071, 1122.089, 1134.881), stdev = 10.109
[info]   CI (99.9%): [1083.162, 1161.016] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readUPickle:·gc.alloc.rate.norm":
[info]   8394.301 ±(99.9%) 216.623 B/op [Average]
[info]   (min, avg, max) = (8330.208, 8394.301, 8454.658), stdev = 56.256
[info]   CI (99.9%): [8177.678, 8610.924] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readUPickle:·gc.churn.PS_Eden_Space":
[info]   0.021 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.062), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   0.155 ±(99.9%) 0.732 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.155, 0.465), stdev = 0.190
[info]   CI (99.9%): [≈ 0, 0.887] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space":
[info]   1075.865 ±(99.9%) 1417.658 MB/sec [Average]
[info]   (min, avg, max) = (672.460, 1075.865, 1345.726), stdev = 368.161
[info]   CI (99.9%): [≈ 0, 2493.523] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   8047.835 ±(99.9%) 10595.712 B/op [Average]
[info]   (min, avg, max) = (5000.862, 8047.835, 10087.364), stdev = 2751.673
[info]   CI (99.9%): [≈ 0, 18643.547] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readUPickle:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.readUPickle:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 28.71% complete, ETA 01:36:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 84986.735 ops/s
[info] # Warmup Iteration   2: 182496.284 ops/s
[info] # Warmup Iteration   3: 187242.573 ops/s
[info] # Warmup Iteration   4: 187457.249 ops/s
[info] # Warmup Iteration   5: 186903.227 ops/s
[info] Iteration   1: 179263.273 ops/s
[info]                  ·gc.alloc.rate:                   915.688 MB/sec
[info]                  ·gc.alloc.rate.norm:              8038.495 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.872 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5924.456 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 187375.939 ops/s
[info]                  ·gc.alloc.rate:                   944.703 MB/sec
[info]                  ·gc.alloc.rate.norm:              7933.299 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.943 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5667.948 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 186980.257 ops/s
[info]                  ·gc.alloc.rate:                   972.332 MB/sec
[info]                  ·gc.alloc.rate.norm:              8185.303 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.051 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.442 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11359.900 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 188042.434 ops/s
[info]                  ·gc.alloc.rate:                   949.858 MB/sec
[info]                  ·gc.alloc.rate.norm:              7948.437 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      675.598 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5653.422 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 183491.031 ops/s
[info]                  ·gc.alloc.rate:                   964.855 MB/sec
[info]                  ·gc.alloc.rate.norm:              8276.679 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1351.139 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11590.279 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce":
[info]   185030.587 ±(99.9%) 14148.858 ops/s [Average]
[info]   (min, avg, max) = (179263.273, 185030.587, 188042.434), stdev = 3674.413
[info]   CI (99.9%): [170881.729, 199179.445] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:·gc.alloc.rate":
[info]   949.487 ±(99.9%) 84.440 MB/sec [Average]
[info]   (min, avg, max) = (915.688, 949.487, 972.332), stdev = 21.929
[info]   CI (99.9%): [865.048, 1033.927] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   8076.443 ±(99.9%) 578.433 B/op [Average]
[info]   (min, avg, max) = (7933.299, 8076.443, 8276.679), stdev = 150.217
[info]   CI (99.9%): [7498.010, 8654.876] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   0.025 ±(99.9%) 0.215 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.125), stdev = 0.056
[info]   CI (99.9%): [≈ 0, 0.240] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.210 ±(99.9%) 1.810 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.210, 1.051), stdev = 0.470
[info]   CI (99.9%): [≈ 0, 2.021] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   945.199 ±(99.9%) 1423.957 MB/sec [Average]
[info]   (min, avg, max) = (674.872, 945.199, 1351.139), stdev = 369.797
[info]   CI (99.9%): [≈ 0, 2369.156] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   8039.201 ±(99.9%) 12088.834 B/op [Average]
[info]   (min, avg, max) = (5653.422, 8039.201, 11590.279), stdev = 3139.432
[info]   CI (99.9%): [≈ 0, 20128.035] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeCirce:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 28.92% complete, ETA 01:36:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.852 ops/s
[info] # Warmup Iteration   2: 564786.580 ops/s
[info] # Warmup Iteration   3: 614467.309 ops/s
[info] # Warmup Iteration   4: 624055.588 ops/s
[info] # Warmup Iteration   5: 622102.397 ops/s
[info] Iteration   1: 624375.999 ops/s
[info]                  ·gc.alloc.rate:      339.800 MB/sec
[info]                  ·gc.alloc.rate.norm: 856.735 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 620448.522 ops/s
[info]                  ·gc.alloc.rate:                   352.902 MB/sec
[info]                  ·gc.alloc.rate.norm:              895.094 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      671.559 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1703.331 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 624908.348 ops/s
[info]                  ·gc.alloc.rate:      339.884 MB/sec
[info]                  ·gc.alloc.rate.norm: 856.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 623545.544 ops/s
[info]                  ·gc.alloc.rate:                   360.098 MB/sec
[info]                  ·gc.alloc.rate.norm:              909.025 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3.609 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9.110 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      671.403 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1694.878 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 625955.418 ops/s
[info]                  ·gc.alloc.rate:      340.391 MB/sec
[info]                  ·gc.alloc.rate.norm: 856.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava":
[info]   623846.766 ±(99.9%) 8052.417 ops/s [Average]
[info]   (min, avg, max) = (620448.522, 623846.766, 625955.418), stdev = 2091.187
[info]   CI (99.9%): [615794.349, 631899.184] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   346.615 ±(99.9%) 36.113 MB/sec [Average]
[info]   (min, avg, max) = (339.800, 346.615, 360.098), stdev = 9.378
[info]   CI (99.9%): [310.503, 382.728] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   874.571 ±(99.9%) 98.476 B/op [Average]
[info]   (min, avg, max) = (856.001, 874.571, 909.025), stdev = 25.574
[info]   CI (99.9%): [776.095, 973.048] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   0.722 ±(99.9%) 6.215 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.722, 3.609), stdev = 1.614
[info]   CI (99.9%): [≈ 0, 6.937] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   1.822 ±(99.9%) 15.689 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.822, 9.110), stdev = 4.074
[info]   CI (99.9%): [≈ 0, 17.511] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   268.593 ±(99.9%) 1416.211 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 268.593, 671.559), stdev = 367.786
[info]   CI (99.9%): [≈ 0, 1684.804] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   679.642 ±(99.9%) 3583.573 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 679.642, 1703.331), stdev = 930.643
[info]   CI (99.9%): [≈ 0, 4263.215] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:·gc.count":
[info]   2.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.000), stdev = 0.548
[info]   CI (99.9%): [2.000, 2.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeDslJsonJava:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 3.000), stdev = 1.414
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 29.12% complete, ETA 01:36:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 332700.037 ops/s
[info] # Warmup Iteration   2: 596848.370 ops/s
[info] # Warmup Iteration   3: 625212.144 ops/s
[info] # Warmup Iteration   4: 625189.485 ops/s
[info] # Warmup Iteration   5: 619229.265 ops/s
[info] Iteration   1: 625731.362 ops/s
[info]                  ·gc.alloc.rate:      464.275 MB/sec
[info]                  ·gc.alloc.rate.norm: 1168.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 627002.511 ops/s
[info]                  ·gc.alloc.rate:                   487.871 MB/sec
[info]                  ·gc.alloc.rate.norm:              1224.567 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.854 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.142 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.832 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1691.333 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 625341.239 ops/s
[info]                  ·gc.alloc.rate:                   488.182 MB/sec
[info]                  ·gc.alloc.rate.norm:              1228.730 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.103 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1696.684 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 631285.165 ops/s
[info]                  ·gc.alloc.rate:      468.621 MB/sec
[info]                  ·gc.alloc.rate.norm: 1168.425 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 627597.010 ops/s
[info]                  ·gc.alloc.rate:                   486.054 MB/sec
[info]                  ·gc.alloc.rate.norm:              1219.129 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.052 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.003 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1690.546 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala":
[info]   627391.457 ±(99.9%) 9094.737 ops/s [Average]
[info]   (min, avg, max) = (625341.239, 627391.457, 631285.165), stdev = 2361.874
[info]   CI (99.9%): [618296.721, 636486.194] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   479.001 ±(99.9%) 44.629 MB/sec [Average]
[info]   (min, avg, max) = (464.275, 479.001, 488.182), stdev = 11.590
[info]   CI (99.9%): [434.372, 523.629] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1201.770 ±(99.9%) 118.687 B/op [Average]
[info]   (min, avg, max) = (1168.001, 1201.770, 1228.730), stdev = 30.823
[info]   CI (99.9%): [1083.084, 1320.457] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.175 ±(99.9%) 1.461 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.175, 0.854), stdev = 0.379
[info]   CI (99.9%): [≈ 0, 1.636] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.439 ±(99.9%) 3.668 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.439, 2.142), stdev = 0.953
[info]   CI (99.9%): [≈ 0, 4.107] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   404.387 ±(99.9%) 1421.479 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 404.387, 674.103), stdev = 369.154
[info]   CI (99.9%): [≈ 0, 1825.867] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1015.712 ±(99.9%) 3570.384 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1015.712, 1696.684), stdev = 927.217
[info]   CI (99.9%): [≈ 0, 4586.097] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJacksonScala:·gc.time":
[info]   4.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 2.000), stdev = 0.837
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 29.32% complete, ETA 01:35:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 761692.336 ops/s
[info] # Warmup Iteration   2: 905381.370 ops/s
[info] # Warmup Iteration   3: 958957.222 ops/s
[info] # Warmup Iteration   4: 986904.078 ops/s
[info] # Warmup Iteration   5: 999471.504 ops/s
[info] Iteration   1: 941325.517 ops/s
[info]                  ·gc.alloc.rate:      512.069 MB/sec
[info]                  ·gc.alloc.rate.norm: 856.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 979956.195 ops/s
[info]                  ·gc.alloc.rate:                   554.407 MB/sec
[info]                  ·gc.alloc.rate.norm:              890.601 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2.820 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4.530 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.969 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1082.666 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 1002846.478 ops/s
[info]                  ·gc.alloc.rate:                   566.095 MB/sec
[info]                  ·gc.alloc.rate.norm:              888.501 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.033 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.377 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1056.884 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 1003192.791 ops/s
[info]                  ·gc.alloc.rate:                   558.733 MB/sec
[info]                  ·gc.alloc.rate.norm:              876.666 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.396 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1056.575 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 987744.529 ops/s
[info]                  ·gc.alloc.rate:                   566.612 MB/sec
[info]                  ·gc.alloc.rate.norm:              902.953 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.066 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.713 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1072.036 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala":
[info]   983013.102 ±(99.9%) 97607.719 ops/s [Average]
[info]   (min, avg, max) = (941325.517, 983013.102, 1003192.791), stdev = 25348.415
[info]   CI (99.9%): [885405.383, 1080620.821] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   551.583 ±(99.9%) 87.320 MB/sec [Average]
[info]   (min, avg, max) = (512.069, 551.583, 566.612), stdev = 22.677
[info]   CI (99.9%): [464.263, 638.903] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   882.944 ±(99.9%) 68.213 B/op [Average]
[info]   (min, avg, max) = (856.001, 882.944, 902.953), stdev = 17.715
[info]   CI (99.9%): [814.731, 951.158] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.576 ±(99.9%) 4.830 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.576, 2.820), stdev = 1.254
[info]   CI (99.9%): [≈ 0, 5.406] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.926 ±(99.9%) 7.759 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.926, 4.530), stdev = 2.015
[info]   CI (99.9%): [≈ 0, 8.685] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   538.691 ±(99.9%) 1159.574 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 538.691, 673.969), stdev = 301.138
[info]   CI (99.9%): [≈ 0, 1698.265] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   853.632 ±(99.9%) 1837.993 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 853.632, 1082.666), stdev = 477.321
[info]   CI (99.9%): [≈ 0, 2691.625] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScala:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 0.707
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 29.52% complete, ETA 01:35:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 885318.810 ops/s
[info] # Warmup Iteration   2: 998260.915 ops/s
[info] # Warmup Iteration   3: 1060894.617 ops/s
[info] # Warmup Iteration   4: 1062848.921 ops/s
[info] # Warmup Iteration   5: 1058342.337 ops/s
[info] Iteration   1: 1060276.322 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1061935.606 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1060820.029 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1060093.253 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1059976.030 ops/s
[info]                  ·gc.alloc.rate:      2.547 MB/sec
[info]                  ·gc.alloc.rate.norm: 3.783 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc":
[info]   1060620.248 ±(99.9%) 3093.186 ops/s [Average]
[info]   (min, avg, max) = (1059976.030, 1060620.248, 1061935.606), stdev = 803.291
[info]   CI (99.9%): [1057527.061, 1063713.434] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.510 ±(99.9%) 4.386 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.510, 2.547), stdev = 1.139
[info]   CI (99.9%): [≈ 0, 4.896] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.757 ±(99.9%) 6.513 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻³, 0.757, 3.783), stdev = 1.691
[info]   CI (99.9%): [≈ 0, 7.270] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 29.72% complete, ETA 01:35:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 12705.821 ops/s
[info] # Warmup Iteration   2: 31453.497 ops/s
[info] # Warmup Iteration   3: 33482.507 ops/s
[info] # Warmup Iteration   4: 33289.542 ops/s
[info] # Warmup Iteration   5: 33527.841 ops/s
[info] Iteration   1: 33550.135 ops/s
[info]                  ·gc.alloc.rate:                   1745.296 MB/sec
[info]                  ·gc.alloc.rate.norm:              81890.022 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.930 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2024.670 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 94998.392 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 33366.900 ops/s
[info]                  ·gc.alloc.rate:                   1747.900 MB/sec
[info]                  ·gc.alloc.rate.norm:              82500.375 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.146 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6.873 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2025.725 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 95613.591 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 33178.332 ops/s
[info]                  ·gc.alloc.rate:                   1731.088 MB/sec
[info]                  ·gc.alloc.rate.norm:              82085.197 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.987 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1353.347 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 64173.382 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 33243.160 ops/s
[info]                  ·gc.alloc.rate:                   1719.591 MB/sec
[info]                  ·gc.alloc.rate.norm:              81427.415 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.986 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1353.358 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 64085.251 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 33775.876 ops/s
[info]                  ·gc.alloc.rate:                   1760.722 MB/sec
[info]                  ·gc.alloc.rate.norm:              82059.198 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.970 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2032.650 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 94732.519 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson":
[info]   33422.881 ±(99.9%) 935.391 ops/s [Average]
[info]   (min, avg, max) = (33178.332, 33422.881, 33775.876), stdev = 242.918
[info]   CI (99.9%): [32487.489, 34358.272] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1740.920 ±(99.9%) 61.235 MB/sec [Average]
[info]   (min, avg, max) = (1719.591, 1740.920, 1760.722), stdev = 15.903
[info]   CI (99.9%): [1679.684, 1802.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   81992.441 ±(99.9%) 1492.344 B/op [Average]
[info]   (min, avg, max) = (81427.415, 81992.441, 82500.375), stdev = 387.557
[info]   CI (99.9%): [80500.098, 83484.785] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   0.054 ±(99.9%) 0.209 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.146), stdev = 0.054
[info]   CI (99.9%): [≈ 0, 0.263] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   2.549 ±(99.9%) 9.859 B/op [Average]
[info]   (min, avg, max) = (0.970, 2.549, 6.873), stdev = 2.560
[info]   CI (99.9%): [≈ 0, 12.408] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   1757.950 ±(99.9%) 1422.266 MB/sec [Average]
[info]   (min, avg, max) = (1353.347, 1757.950, 2032.650), stdev = 369.358
[info]   CI (99.9%): [335.684, 3180.216] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   82720.627 ±(99.9%) 65362.770 B/op [Average]
[info]   (min, avg, max) = (64085.251, 82720.627, 95613.591), stdev = 16974.504
[info]   CI (99.9%): [17357.857, 148083.397] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writePlayJson:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 29.92% complete, ETA 01:34:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 79305.156 ops/s
[info] # Warmup Iteration   2: 127516.934 ops/s
[info] # Warmup Iteration   3: 130184.256 ops/s
[info] # Warmup Iteration   4: 129709.930 ops/s
[info] # Warmup Iteration   5: 130432.082 ops/s
[info] Iteration   1: 130327.880 ops/s
[info]                  ·gc.alloc.rate:                   906.043 MB/sec
[info]                  ·gc.alloc.rate.norm:              10944.586 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.251 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.275 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8132.861 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   2: 127275.883 ops/s
[info]                  ·gc.alloc.rate:                   908.241 MB/sec
[info]                  ·gc.alloc.rate.norm:              11231.201 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.515 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.607 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16639.618 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 130840.437 ops/s
[info]                  ·gc.alloc.rate:                   904.261 MB/sec
[info]                  ·gc.alloc.rate.norm:              10877.264 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.133 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8085.015 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 129681.167 ops/s
[info]                  ·gc.alloc.rate:                   895.617 MB/sec
[info]                  ·gc.alloc.rate.norm:              10868.818 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.505 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.168 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8157.136 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   5: 130966.452 ops/s
[info]                  ·gc.alloc.rate:                   901.612 MB/sec
[info]                  ·gc.alloc.rate.norm:              10834.029 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.250 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.832 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8084.935 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeUPickle":
[info]   129818.364 ±(99.9%) 5809.681 ops/s [Average]
[info]   (min, avg, max) = (127275.883, 129818.364, 130966.452), stdev = 1508.756
[info]   CI (99.9%): [124008.683, 135628.045] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeUPickle:·gc.alloc.rate":
[info]   903.155 ±(99.9%) 18.729 MB/sec [Average]
[info]   (min, avg, max) = (895.617, 903.155, 908.241), stdev = 4.864
[info]   CI (99.9%): [884.426, 921.884] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeUPickle:·gc.alloc.rate.norm":
[info]   10951.180 ±(99.9%) 622.170 B/op [Average]
[info]   (min, avg, max) = (10834.029, 10951.180, 11231.201), stdev = 161.576
[info]   CI (99.9%): [10329.010, 11573.350] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space":
[info]   0.025 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   0.304 ±(99.9%) 0.824 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.304, 0.515), stdev = 0.214
[info]   CI (99.9%): [≈ 0, 1.128] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space":
[info]   807.203 ±(99.9%) 1158.957 MB/sec [Average]
[info]   (min, avg, max) = (672.133, 807.203, 1345.607), stdev = 300.978
[info]   CI (99.9%): [≈ 0, 1966.160] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   9819.913 ±(99.9%) 14680.421 B/op [Average]
[info]   (min, avg, max) = (8084.935, 9819.913, 16639.618), stdev = 3812.459
[info]   CI (99.9%): [≈ 0, 24500.334] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeUPickle:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfIntsBenchmark.writeUPickle:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 1.000
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 30.12% complete, ETA 01:34:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 51863.687 ops/s
[info] # Warmup Iteration   2: 121260.147 ops/s
[info] # Warmup Iteration   3: 122442.091 ops/s
[info] # Warmup Iteration   4: 125109.570 ops/s
[info] # Warmup Iteration   5: 124077.450 ops/s
[info] Iteration   1: 122384.996 ops/s
[info]                  ·gc.alloc.rate:                   1389.768 MB/sec
[info]                  ·gc.alloc.rate.norm:              17876.675 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.268 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.294 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17356.048 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 124263.129 ops/s
[info]                  ·gc.alloc.rate:                   1402.589 MB/sec
[info]                  ·gc.alloc.rate.norm:              17765.363 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.264 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.233 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17102.217 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 123479.789 ops/s
[info]                  ·gc.alloc.rate:                   1403.374 MB/sec
[info]                  ·gc.alloc.rate.norm:              17890.565 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1351.328 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17227.073 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 125389.702 ops/s
[info]                  ·gc.alloc.rate:                   1423.369 MB/sec
[info]                  ·gc.alloc.rate.norm:              17865.051 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.306 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1352.978 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16981.563 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 123565.697 ops/s
[info]                  ·gc.alloc.rate:                   1390.374 MB/sec
[info]                  ·gc.alloc.rate.norm:              17708.604 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.265 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1354.313 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17249.302 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce":
[info]   123816.663 ±(99.9%) 4261.847 ops/s [Average]
[info]   (min, avg, max) = (122384.996, 123816.663, 125389.702), stdev = 1106.788
[info]   CI (99.9%): [119554.816, 128078.510] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:·gc.alloc.rate":
[info]   1401.895 ±(99.9%) 52.501 MB/sec [Average]
[info]   (min, avg, max) = (1389.768, 1401.895, 1423.369), stdev = 13.634
[info]   CI (99.9%): [1349.394, 1454.396] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   17821.252 ±(99.9%) 308.097 B/op [Average]
[info]   (min, avg, max) = (17708.604, 17821.252, 17890.565), stdev = 80.012
[info]   CI (99.9%): [17513.155, 18129.348] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   0.033 ±(99.9%) 0.156 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.104), stdev = 0.041
[info]   CI (99.9%): [≈ 0, 0.190] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.421 ±(99.9%) 1.958 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.421, 1.306), stdev = 0.508
[info]   CI (99.9%): [≈ 0, 2.378] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1351.629 ±(99.9%) 7.824 MB/sec [Average]
[info]   (min, avg, max) = (1349.294, 1351.629, 1354.313), stdev = 2.032
[info]   CI (99.9%): [1343.805, 1359.453] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   17183.241 ±(99.9%) 555.969 B/op [Average]
[info]   (min, avg, max) = (16981.563, 17183.241, 17356.048), stdev = 144.383
[info]   CI (99.9%): [16627.272, 17739.210] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readCirce:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 3.000), stdev = 0.837
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 30.32% complete, ETA 01:34:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 52255.228 ops/s
[info] # Warmup Iteration   2: 159613.064 ops/s
[info] # Warmup Iteration   3: 166896.470 ops/s
[info] # Warmup Iteration   4: 171201.906 ops/s
[info] # Warmup Iteration   5: 172045.189 ops/s
[info] Iteration   1: 171442.966 ops/s
[info]                  ·gc.alloc.rate:                   929.311 MB/sec
[info]                  ·gc.alloc.rate.norm:              8531.549 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.573 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.157 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12376.763 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 169419.727 ops/s
[info]                  ·gc.alloc.rate:                   908.266 MB/sec
[info]                  ·gc.alloc.rate.norm:              8437.855 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.089 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6262.335 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 172113.266 ops/s
[info]                  ·gc.alloc.rate:                   921.773 MB/sec
[info]                  ·gc.alloc.rate.norm:              8427.378 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.253 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6164.404 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 169751.022 ops/s
[info]                  ·gc.alloc.rate:                   926.722 MB/sec
[info]                  ·gc.alloc.rate.norm:              8593.475 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.386 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.426 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12503.929 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 171635.247 ops/s
[info]                  ·gc.alloc.rate:                   915.045 MB/sec
[info]                  ·gc.alloc.rate.norm:              8392.160 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.191 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.294 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6184.154 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala":
[info]   170872.446 ±(99.9%) 4642.772 ops/s [Average]
[info]   (min, avg, max) = (169419.727, 170872.446, 172113.266), stdev = 1205.713
[info]   CI (99.9%): [166229.674, 175515.217] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   920.223 ±(99.9%) 33.182 MB/sec [Average]
[info]   (min, avg, max) = (908.266, 920.223, 929.311), stdev = 8.617
[info]   CI (99.9%): [887.042, 953.405] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   8476.483 ±(99.9%) 320.630 B/op [Average]
[info]   (min, avg, max) = (8392.160, 8476.483, 8593.475), stdev = 83.266
[info]   CI (99.9%): [8155.854, 8797.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.025 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.129] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.230 ±(99.9%) 0.962 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.230, 0.573), stdev = 0.250
[info]   CI (99.9%): [≈ 0, 1.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   943.843 ±(99.9%) 1421.691 MB/sec [Average]
[info]   (min, avg, max) = (674.089, 943.843, 1348.426), stdev = 369.209
[info]   CI (99.9%): [≈ 0, 2365.534] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   8698.317 ±(99.9%) 13155.655 B/op [Average]
[info]   (min, avg, max) = (6164.404, 8698.317, 12503.929), stdev = 3416.482
[info]   CI (99.9%): [≈ 0, 21853.972] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 30.52% complete, ETA 01:34:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 145445.433 ops/s
[info] # Warmup Iteration   2: 215467.928 ops/s
[info] # Warmup Iteration   3: 219557.136 ops/s
[info] # Warmup Iteration   4: 224053.974 ops/s
[info] # Warmup Iteration   5: 221199.455 ops/s
[info] Iteration   1: 223722.192 ops/s
[info]                  ·gc.alloc.rate:                   1036.573 MB/sec
[info]                  ·gc.alloc.rate.norm:              7294.037 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.627 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4733.068 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 224664.479 ops/s
[info]                  ·gc.alloc.rate:                   1064.114 MB/sec
[info]                  ·gc.alloc.rate.norm:              7455.196 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.146 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1344.814 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9421.784 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 224499.007 ops/s
[info]                  ·gc.alloc.rate:                   1039.234 MB/sec
[info]                  ·gc.alloc.rate.norm:              7286.944 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.008 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4712.019 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 224318.482 ops/s
[info]                  ·gc.alloc.rate:                   1052.502 MB/sec
[info]                  ·gc.alloc.rate.norm:              7385.611 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.584 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.426 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9441.115 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 224153.425 ops/s
[info]                  ·gc.alloc.rate:                   1047.735 MB/sec
[info]                  ·gc.alloc.rate.norm:              7357.399 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.034 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4726.181 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala":
[info]   224271.517 ±(99.9%) 1393.805 ops/s [Average]
[info]   (min, avg, max) = (223722.192, 224271.517, 224664.479), stdev = 361.967
[info]   CI (99.9%): [222877.712, 225665.322] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1048.031 ±(99.9%) 42.506 MB/sec [Average]
[info]   (min, avg, max) = (1036.573, 1048.031, 1064.114), stdev = 11.039
[info]   CI (99.9%): [1005.525, 1090.538] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   7355.837 ±(99.9%) 267.658 B/op [Average]
[info]   (min, avg, max) = (7286.944, 7355.837, 7455.196), stdev = 69.510
[info]   CI (99.9%): [7088.179, 7623.495] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.021 ±(99.9%) 0.139 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.083), stdev = 0.036
[info]   CI (99.9%): [≈ 0, 0.160] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.146 ±(99.9%) 0.974 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.146, 0.584), stdev = 0.253
[info]   CI (99.9%): [≈ 0, 1.120] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   941.582 ±(99.9%) 1418.493 MB/sec [Average]
[info]   (min, avg, max) = (672.008, 941.582, 1345.426), stdev = 368.378
[info]   CI (99.9%): [≈ 0, 2360.075] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   6606.833 ±(99.9%) 9929.002 B/op [Average]
[info]   (min, avg, max) = (4712.019, 6606.833, 9441.115), stdev = 2578.530
[info]   CI (99.9%): [≈ 0, 16535.835] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 30.72% complete, ETA 01:33:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 8165.542 ops/s
[info] # Warmup Iteration   2: 58076.195 ops/s
[info] # Warmup Iteration   3: 66543.064 ops/s
[info] # Warmup Iteration   4: 67177.651 ops/s
[info] # Warmup Iteration   5: 66066.832 ops/s
[info] Iteration   1: 67203.044 ops/s
[info]                  ·gc.alloc.rate:                   2549.252 MB/sec
[info]                  ·gc.alloc.rate.norm:              59689.241 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.438 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2702.352 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 63273.986 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 66862.468 ops/s
[info]                  ·gc.alloc.rate:                   2549.333 MB/sec
[info]                  ·gc.alloc.rate.norm:              60014.841 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.980 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2705.599 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 63693.560 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 67571.466 ops/s
[info]                  ·gc.alloc.rate:                   2562.284 MB/sec
[info]                  ·gc.alloc.rate.norm:              59686.656 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.970 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2032.721 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 47350.841 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 66420.124 ops/s
[info]                  ·gc.alloc.rate:                   2561.867 MB/sec
[info]                  ·gc.alloc.rate.norm:              60703.798 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.493 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2713.963 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 64307.736 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 65894.404 ops/s
[info]                  ·gc.alloc.rate:                   2540.746 MB/sec
[info]                  ·gc.alloc.rate.norm:              60684.662 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2716.509 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 64882.679 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson":
[info]   66790.301 ±(99.9%) 2529.030 ops/s [Average]
[info]   (min, avg, max) = (65894.404, 66790.301, 67571.466), stdev = 656.781
[info]   CI (99.9%): [64261.270, 69319.331] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2552.697 ±(99.9%) 35.606 MB/sec [Average]
[info]   (min, avg, max) = (2540.746, 2552.697, 2562.284), stdev = 9.247
[info]   CI (99.9%): [2517.091, 2588.302] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   60155.840 ±(99.9%) 1961.222 B/op [Average]
[info]   (min, avg, max) = (59686.656, 60155.840, 60703.798), stdev = 509.323
[info]   CI (99.9%): [58194.618, 62117.061] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   0.042 ±(99.9%) 0.150 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.104), stdev = 0.039
[info]   CI (99.9%): [≈ 0, 0.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   0.976 ±(99.9%) 3.509 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.976, 2.438), stdev = 0.911
[info]   CI (99.9%): [≈ 0, 4.485] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   2574.229 ±(99.9%) 1165.852 MB/sec [Average]
[info]   (min, avg, max) = (2032.721, 2574.229, 2716.509), stdev = 302.768
[info]   CI (99.9%): [1408.377, 3740.081] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   60701.760 ±(99.9%) 28834.703 B/op [Average]
[info]   (min, avg, max) = (47350.841, 60701.760, 64882.679), stdev = 7488.281
[info]   CI (99.9%): [31867.058, 89536.463] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 30.92% complete, ETA 01:33:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 60405.725 ops/s
[info] # Warmup Iteration   2: 153144.821 ops/s
[info] # Warmup Iteration   3: 155604.159 ops/s
[info] # Warmup Iteration   4: 159200.876 ops/s
[info] # Warmup Iteration   5: 159944.384 ops/s
[info] Iteration   1: 162494.933 ops/s
[info]                  ·gc.alloc.rate:                   1175.844 MB/sec
[info]                  ·gc.alloc.rate.norm:              11390.402 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.403 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1346.801 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13046.468 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 162841.215 ops/s
[info]                  ·gc.alloc.rate:                   1156.586 MB/sec
[info]                  ·gc.alloc.rate.norm:              11176.114 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.967 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6502.897 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 162006.199 ops/s
[info]                  ·gc.alloc.rate:                   1174.070 MB/sec
[info]                  ·gc.alloc.rate.norm:              11406.890 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.809 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.862 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13075.974 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 162229.137 ops/s
[info]                  ·gc.alloc.rate:                   1165.824 MB/sec
[info]                  ·gc.alloc.rate.norm:              11310.676 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1346.601 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13064.546 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 153193.294 ops/s
[info]                  ·gc.alloc.rate:                                  1097.274 MB/sec
[info]                  ·gc.alloc.rate.norm:                             11273.099 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.395 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 4.055 B/op
[info]                  ·gc.churn.Compressed_Class_Space:                0.017 MB/sec
[info]                  ·gc.churn.Compressed_Class_Space.norm:           0.179 B/op
[info]                  ·gc.churn.PS_Eden_Space:                         0.167 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:                    1.711 B/op
[info]                  ·gc.churn.PS_Old_Gen:                            0.055 MB/sec
[info]                  ·gc.churn.PS_Old_Gen.norm:                       0.561 B/op
[info]                  ·gc.churn.PS_Survivor_Space:                     917.908 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm:                9430.342 B/op
[info]                  ·gc.count:                                       3.000 counts
[info]                  ·gc.time:                                        67.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readUPickle":
[info]   160552.956 ±(99.9%) 15887.527 ops/s [Average]
[info]   (min, avg, max) = (153193.294, 160552.956, 162841.215), stdev = 4125.940
[info]   CI (99.9%): [144665.429, 176440.483] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readUPickle:·gc.alloc.rate":
[info]   1153.920 ±(99.9%) 125.430 MB/sec [Average]
[info]   (min, avg, max) = (1097.274, 1153.920, 1175.844), stdev = 32.574
[info]   CI (99.9%): [1028.489, 1279.350] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readUPickle:·gc.alloc.rate.norm":
[info]   11311.436 ±(99.9%) 360.860 B/op [Average]
[info]   (min, avg, max) = (11176.114, 11311.436, 11406.890), stdev = 93.714
[info]   CI (99.9%): [10950.576, 11672.296] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readUPickle:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.079 ±(99.9%) 0.680 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.079, 0.395), stdev = 0.177
[info]   CI (99.9%): [≈ 0, 0.759] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readUPickle:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   0.811 ±(99.9%) 6.984 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.811, 4.055), stdev = 1.814
[info]   CI (99.9%): [≈ 0, 7.795] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readUPickle:·gc.churn.Compressed_Class_Space":
[info]   0.003 ±(99.9%) 0.030 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.003, 0.017), stdev = 0.008
[info]   CI (99.9%): [≈ 0, 0.033] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readUPickle:·gc.churn.Compressed_Class_Space.norm":
[info]   0.036 ±(99.9%) 0.308 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.036, 0.179), stdev = 0.080
[info]   CI (99.9%): [≈ 0, 0.343] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readUPickle:·gc.churn.PS_Eden_Space":
[info]   0.058 ±(99.9%) 0.268 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.058, 0.167), stdev = 0.070
[info]   CI (99.9%): [≈ 0, 0.327] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   0.585 ±(99.9%) 2.747 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.585, 1.711), stdev = 0.713
[info]   CI (99.9%): [≈ 0, 3.331] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readUPickle:·gc.churn.PS_Old_Gen":
[info]   0.011 ±(99.9%) 0.094 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.011, 0.055), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readUPickle:·gc.churn.PS_Old_Gen.norm":
[info]   0.112 ±(99.9%) 0.967 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.112, 0.561), stdev = 0.251
[info]   CI (99.9%): [≈ 0, 1.079] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space":
[info]   1126.028 ±(99.9%) 1208.971 MB/sec [Average]
[info]   (min, avg, max) = (672.967, 1126.028, 1346.801), stdev = 313.966
[info]   CI (99.9%): [≈ 0, 2334.999] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   11024.045 ±(99.9%) 11462.527 B/op [Average]
[info]   (min, avg, max) = (6502.897, 11024.045, 13075.974), stdev = 2976.782
[info]   CI (99.9%): [≈ 0, 22486.573] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readUPickle:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 3.000), stdev = 0.707
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.readUPickle:·gc.time":
[info]   73.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 14.600, 67.000), stdev = 29.297
[info]   CI (99.9%): [73.000, 73.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 31.12% complete, ETA 01:33:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 87840.267 ops/s
[info] # Warmup Iteration   2: 169461.489 ops/s
[info] # Warmup Iteration   3: 175141.241 ops/s
[info] # Warmup Iteration   4: 175886.382 ops/s
[info] # Warmup Iteration   5: 178201.816 ops/s
[info] Iteration   1: 175431.039 ops/s
[info]                  ·gc.alloc.rate:                   623.287 MB/sec
[info]                  ·gc.alloc.rate.norm:              5593.635 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.614 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5.512 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.235 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6041.892 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 178222.577 ops/s
[info]                  ·gc.alloc.rate:                   631.377 MB/sec
[info]                  ·gc.alloc.rate.norm:              5576.473 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.027 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5953.172 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 176624.928 ops/s
[info]                  ·gc.alloc.rate:                   634.448 MB/sec
[info]                  ·gc.alloc.rate.norm:              5654.008 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.076 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6007.161 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 176024.114 ops/s
[info]                  ·gc.alloc.rate:                   630.937 MB/sec
[info]                  ·gc.alloc.rate.norm:              5641.771 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.074 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6027.497 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 178587.686 ops/s
[info]                  ·gc.alloc.rate:                   633.224 MB/sec
[info]                  ·gc.alloc.rate.norm:              5581.129 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.183 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.029 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5940.774 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce":
[info]   176978.069 ±(99.9%) 5296.458 ops/s [Average]
[info]   (min, avg, max) = (175431.039, 176978.069, 178587.686), stdev = 1375.473
[info]   CI (99.9%): [171681.611, 182274.526] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:·gc.alloc.rate":
[info]   630.655 ±(99.9%) 16.771 MB/sec [Average]
[info]   (min, avg, max) = (623.287, 630.655, 634.448), stdev = 4.355
[info]   CI (99.9%): [613.884, 647.425] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   5609.403 ±(99.9%) 138.432 B/op [Average]
[info]   (min, avg, max) = (5576.473, 5609.403, 5654.008), stdev = 35.950
[info]   CI (99.9%): [5470.971, 5747.836] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   0.127 ±(99.9%) 1.049 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.127, 0.614), stdev = 0.273
[info]   CI (99.9%): [≈ 0, 1.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1.139 ±(99.9%) 9.418 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.139, 5.512), stdev = 2.446
[info]   CI (99.9%): [≈ 0, 10.558] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   673.888 ±(99.9%) 1.408 MB/sec [Average]
[info]   (min, avg, max) = (673.235, 673.888, 674.076), stdev = 0.366
[info]   CI (99.9%): [672.480, 675.297] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   5994.099 ±(99.9%) 173.158 B/op [Average]
[info]   (min, avg, max) = (5940.774, 5994.099, 6041.892), stdev = 44.969
[info]   CI (99.9%): [5820.941, 6167.257] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeCirce:·gc.time":
[info]   4.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 31.33% complete, ETA 01:33:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 321777.208 ops/s
[info] # Warmup Iteration   2: 660925.223 ops/s
[info] # Warmup Iteration   3: 682903.134 ops/s
[info] # Warmup Iteration   4: 684898.243 ops/s
[info] # Warmup Iteration   5: 673315.407 ops/s
[info] Iteration   1: 683847.518 ops/s
[info]                  ·gc.alloc.rate:                   714.460 MB/sec
[info]                  ·gc.alloc.rate.norm:              1644.431 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.048 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.085 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1551.502 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 682743.804 ops/s
[info]                  ·gc.alloc.rate:                   713.279 MB/sec
[info]                  ·gc.alloc.rate.norm:              1644.169 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.048 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.178 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1554.037 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 683211.909 ops/s
[info]                  ·gc.alloc.rate:                   715.581 MB/sec
[info]                  ·gc.alloc.rate.norm:              1648.703 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.011 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1552.928 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 680883.981 ops/s
[info]                  ·gc.alloc.rate:                   704.698 MB/sec
[info]                  ·gc.alloc.rate.norm:              1628.851 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.096 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.154 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1558.252 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 681274.977 ops/s
[info]                  ·gc.alloc.rate:                   713.691 MB/sec
[info]                  ·gc.alloc.rate.norm:              1648.567 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.048 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1557.269 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala":
[info]   682392.438 ±(99.9%) 4884.557 ops/s [Average]
[info]   (min, avg, max) = (680883.981, 682392.438, 683847.518), stdev = 1268.504
[info]   CI (99.9%): [677507.881, 687276.995] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   712.342 ±(99.9%) 16.796 MB/sec [Average]
[info]   (min, avg, max) = (704.698, 712.342, 715.581), stdev = 4.362
[info]   CI (99.9%): [695.545, 729.138] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1642.944 ±(99.9%) 31.467 B/op [Average]
[info]   (min, avg, max) = (1628.851, 1642.944, 1648.703), stdev = 8.172
[info]   CI (99.9%): [1611.477, 1674.411] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.021 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.077] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.048 ±(99.9%) 0.131 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.048, 0.096), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.179] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   674.119 ±(99.9%) 0.271 MB/sec [Average]
[info]   (min, avg, max) = (674.011, 674.119, 674.178), stdev = 0.070
[info]   CI (99.9%): [673.848, 674.390] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1554.798 ±(99.9%) 11.057 B/op [Average]
[info]   (min, avg, max) = (1551.502, 1554.798, 1558.252), stdev = 2.871
[info]   CI (99.9%): [1543.741, 1565.854] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 31.53% complete, ETA 01:32:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 506847.736 ops/s
[info] # Warmup Iteration   2: 604333.738 ops/s
[info] # Warmup Iteration   3: 643518.655 ops/s
[info] # Warmup Iteration   4: 641582.300 ops/s
[info] # Warmup Iteration   5: 649281.805 ops/s
[info] Iteration   1: 646705.269 ops/s
[info]                  ·gc.alloc.rate:                   516.122 MB/sec
[info]                  ·gc.alloc.rate.norm:              1256.374 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.983 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1640.647 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 646489.594 ops/s
[info]                  ·gc.alloc.rate:                   510.810 MB/sec
[info]                  ·gc.alloc.rate.norm:              1243.872 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2.747 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6.690 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.961 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1641.159 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 647176.933 ops/s
[info]                  ·gc.alloc.rate:                   515.627 MB/sec
[info]                  ·gc.alloc.rate.norm:              1253.913 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.516 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1637.873 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 650468.161 ops/s
[info]                  ·gc.alloc.rate:      499.302 MB/sec
[info]                  ·gc.alloc.rate.norm: 1208.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 644745.161 ops/s
[info]                  ·gc.alloc.rate:                   517.287 MB/sec
[info]                  ·gc.alloc.rate.norm:              1262.879 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.051 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.384 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1643.967 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala":
[info]   647117.024 ±(99.9%) 8036.381 ops/s [Average]
[info]   (min, avg, max) = (644745.161, 647117.024, 650468.161), stdev = 2087.023
[info]   CI (99.9%): [639080.643, 655153.405] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   511.830 ±(99.9%) 28.597 MB/sec [Average]
[info]   (min, avg, max) = (499.302, 511.830, 517.287), stdev = 7.427
[info]   CI (99.9%): [483.233, 540.427] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1245.008 ±(99.9%) 83.894 B/op [Average]
[info]   (min, avg, max) = (1208.001, 1245.008, 1262.879), stdev = 21.787
[info]   CI (99.9%): [1161.114, 1328.902] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.554 ±(99.9%) 4.722 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.554, 2.747), stdev = 1.226
[info]   CI (99.9%): [≈ 0, 5.275] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1.348 ±(99.9%) 11.498 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.348, 6.690), stdev = 2.986
[info]   CI (99.9%): [≈ 0, 12.846] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   538.969 ±(99.9%) 1160.172 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 538.969, 673.983), stdev = 301.293
[info]   CI (99.9%): [≈ 0, 1699.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1312.729 ±(99.9%) 2825.761 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1312.729, 1643.967), stdev = 733.841
[info]   CI (99.9%): [≈ 0, 4138.490] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 3.000), stdev = 1.342
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 31.73% complete, ETA 01:32:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 548866.033 ops/s
[info] # Warmup Iteration   2: 699974.094 ops/s
[info] # Warmup Iteration   3: 703104.520 ops/s
[info] # Warmup Iteration   4: 703012.777 ops/s
[info] # Warmup Iteration   5: 698134.571 ops/s
[info] Iteration   1: 703271.611 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 701584.343 ops/s
[info]                  ·gc.alloc.rate:      1.325 MB/sec
[info]                  ·gc.alloc.rate.norm: 2.974 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 701385.949 ops/s
[info]                  ·gc.alloc.rate:      0.170 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.382 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 703065.304 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 703383.016 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc":
[info]   702538.045 ±(99.9%) 3736.795 ops/s [Average]
[info]   (min, avg, max) = (701385.949, 702538.045, 703383.016), stdev = 970.434
[info]   CI (99.9%): [698801.250, 706274.840] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.299 ±(99.9%) 2.227 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.299, 1.325), stdev = 0.578
[info]   CI (99.9%): [≈ 0, 2.526] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.672 ±(99.9%) 4.996 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.672, 2.974), stdev = 1.297
[info]   CI (99.9%): [≈ 0, 5.668] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 31.93% complete, ETA 01:32:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 136542.713 ops/s
[info] # Warmup Iteration   2: 344438.129 ops/s
[info] # Warmup Iteration   3: 345564.270 ops/s
[info] # Warmup Iteration   4: 347174.375 ops/s
[info] # Warmup Iteration   5: 347892.814 ops/s
[info] Iteration   1: 348052.079 ops/s
[info]                  ·gc.alloc.rate:                   959.765 MB/sec
[info]                  ·gc.alloc.rate.norm:              4340.781 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.650 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3051.277 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 348518.960 ops/s
[info]                  ·gc.alloc.rate:                   953.603 MB/sec
[info]                  ·gc.alloc.rate.norm:              4305.928 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.874 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3047.347 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   3: 346950.835 ops/s
[info]                  ·gc.alloc.rate:                   974.619 MB/sec
[info]                  ·gc.alloc.rate.norm:              4422.048 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.094 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.309 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6122.092 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 339391.687 ops/s
[info]                  ·gc.alloc.rate:                   929.555 MB/sec
[info]                  ·gc.alloc.rate.norm:              4309.761 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      675.055 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3129.806 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 348187.610 ops/s
[info]                  ·gc.alloc.rate:                   979.439 MB/sec
[info]                  ·gc.alloc.rate.norm:              4427.144 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.094 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.542 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6104.564 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson":
[info]   346220.234 ±(99.9%) 14872.809 ops/s [Average]
[info]   (min, avg, max) = (339391.687, 346220.234, 348518.960), stdev = 3862.421
[info]   CI (99.9%): [331347.425, 361093.044] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   959.396 ±(99.9%) 75.987 MB/sec [Average]
[info]   (min, avg, max) = (929.555, 959.396, 979.439), stdev = 19.734
[info]   CI (99.9%): [883.409, 1035.383] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   4361.132 ±(99.9%) 229.178 B/op [Average]
[info]   (min, avg, max) = (4305.928, 4361.132, 4427.144), stdev = 59.517
[info]   CI (99.9%): [4131.954, 4590.311] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   0.008 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   0.038 ±(99.9%) 0.199 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.038, 0.094), stdev = 0.052
[info]   CI (99.9%): [≈ 0, 0.237] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   944.886 ±(99.9%) 1423.772 MB/sec [Average]
[info]   (min, avg, max) = (674.650, 944.886, 1350.542), stdev = 369.749
[info]   CI (99.9%): [≈ 0, 2368.658] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   4291.017 ±(99.9%) 6406.977 B/op [Average]
[info]   (min, avg, max) = (3047.347, 4291.017, 6122.092), stdev = 1663.872
[info]   CI (99.9%): [≈ 0, 10697.994] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 2.000), stdev = 0.894
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 32.13% complete, ETA 01:31:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 35114.948 ops/s
[info] # Warmup Iteration   2: 47658.629 ops/s
[info] # Warmup Iteration   3: 48107.570 ops/s
[info] # Warmup Iteration   4: 48546.855 ops/s
[info] # Warmup Iteration   5: 48780.500 ops/s
[info] Iteration   1: 49005.265 ops/s
[info]                  ·gc.alloc.rate:      226.698 MB/sec
[info]                  ·gc.alloc.rate.norm: 7280.402 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 48802.829 ops/s
[info]                  ·gc.alloc.rate:                   237.990 MB/sec
[info]                  ·gc.alloc.rate.norm:              7674.009 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      511.658 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16498.461 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 48801.697 ops/s
[info]                  ·gc.alloc.rate:      225.933 MB/sec
[info]                  ·gc.alloc.rate.norm: 7285.512 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 48632.293 ops/s
[info]                  ·gc.alloc.rate:                   234.248 MB/sec
[info]                  ·gc.alloc.rate.norm:              7579.857 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      511.661 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16556.463 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 48812.551 ops/s
[info]                  ·gc.alloc.rate:      225.827 MB/sec
[info]                  ·gc.alloc.rate.norm: 7280.008 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeUPickle":
[info]   48810.927 ±(99.9%) 508.776 ops/s [Average]
[info]   (min, avg, max) = (48632.293, 48810.927, 49005.265), stdev = 132.127
[info]   CI (99.9%): [48302.151, 49319.703] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeUPickle:·gc.alloc.rate":
[info]   230.139 ±(99.9%) 21.668 MB/sec [Average]
[info]   (min, avg, max) = (225.827, 230.139, 237.990), stdev = 5.627
[info]   CI (99.9%): [208.471, 251.807] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeUPickle:·gc.alloc.rate.norm":
[info]   7419.957 ±(99.9%) 738.800 B/op [Average]
[info]   (min, avg, max) = (7280.008, 7419.957, 7674.009), stdev = 191.864
[info]   CI (99.9%): [6681.158, 8158.757] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space":
[info]   204.664 ±(99.9%) 1079.134 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 204.664, 511.661), stdev = 280.248
[info]   CI (99.9%): [≈ 0, 1283.798] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   6610.985 ±(99.9%) 34857.904 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 6610.985, 16556.463), stdev = 9052.487
[info]   CI (99.9%): [≈ 0, 41468.889] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeUPickle:·gc.count":
[info]   2.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.000), stdev = 0.548
[info]   CI (99.9%): [2.000, 2.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfJavaEnumsBenchmark.writeUPickle:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 4.000), stdev = 1.789
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 32.33% complete, ETA 01:31:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3896.654 ops/s
[info] # Warmup Iteration   2: 9980.351 ops/s
[info] # Warmup Iteration   3: 10071.712 ops/s
[info] # Warmup Iteration   4: 10152.997 ops/s
[info] # Warmup Iteration   5: 10103.689 ops/s
[info] Iteration   1: 10169.096 ops/s
[info]                  ·gc.alloc.rate:                   1233.203 MB/sec
[info]                  ·gc.alloc.rate.norm:              190896.986 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.989 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 104177.175 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 9963.438 ops/s
[info]                  ·gc.alloc.rate:                   1229.552 MB/sec
[info]                  ·gc.alloc.rate.norm:              194216.062 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3.288 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1346.859 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 212745.402 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 10011.105 ops/s
[info]                  ·gc.alloc.rate:                   1227.477 MB/sec
[info]                  ·gc.alloc.rate.norm:              192984.830 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.144 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 211956.239 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 10126.746 ops/s
[info]                  ·gc.alloc.rate:                   1241.569 MB/sec
[info]                  ·gc.alloc.rate.norm:              192924.729 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3.235 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.757 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 209735.904 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 10141.688 ops/s
[info]                  ·gc.alloc.rate:                   1218.673 MB/sec
[info]                  ·gc.alloc.rate.norm:              189092.623 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      675.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 104754.241 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce":
[info]   10082.415 ±(99.9%) 345.662 ops/s [Average]
[info]   (min, avg, max) = (9963.438, 10082.415, 10169.096), stdev = 89.767
[info]   CI (99.9%): [9736.753, 10428.076] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:·gc.alloc.rate":
[info]   1230.095 ±(99.9%) 32.155 MB/sec [Average]
[info]   (min, avg, max) = (1218.673, 1230.095, 1241.569), stdev = 8.351
[info]   CI (99.9%): [1197.940, 1262.250] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   192023.046 ±(99.9%) 7797.618 B/op [Average]
[info]   (min, avg, max) = (189092.623, 192023.046, 194216.062), stdev = 2025.017
[info]   CI (99.9%): [184225.428, 199820.663] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   0.008 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1.305 ±(99.9%) 6.879 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.305, 3.288), stdev = 1.787
[info]   CI (99.9%): [≈ 0, 8.184] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1078.575 ±(99.9%) 1421.946 MB/sec [Average]
[info]   (min, avg, max) = (672.989, 1078.575, 1349.757), stdev = 369.275
[info]   CI (99.9%): [≈ 0, 2500.520] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   168673.792 ±(99.9%) 225741.818 B/op [Average]
[info]   (min, avg, max) = (104177.175, 168673.792, 212745.402), stdev = 58624.433
[info]   CI (99.9%): [≈ 0, 394415.610] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readCirce:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 32.53% complete, ETA 01:31:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2479.427 ops/s
[info] # Warmup Iteration   2: 9396.089 ops/s
[info] # Warmup Iteration   3: 9961.370 ops/s
[info] # Warmup Iteration   4: 9946.945 ops/s
[info] # Warmup Iteration   5: 9955.534 ops/s
[info] Iteration   1: 9921.996 ops/s
[info]                  ·gc.alloc.rate:                   1126.784 MB/sec
[info]                  ·gc.alloc.rate.norm:              178762.682 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.996 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 106928.548 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   2: 9906.515 ops/s
[info]                  ·gc.alloc.rate:                   1154.676 MB/sec
[info]                  ·gc.alloc.rate.norm:              183465.984 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3.307 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1347.985 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 214180.828 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 10169.361 ops/s
[info]                  ·gc.alloc.rate:                   1182.484 MB/sec
[info]                  ·gc.alloc.rate.norm:              183030.450 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3.222 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.755 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 208766.729 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 10189.489 ops/s
[info]                  ·gc.alloc.rate:                   1156.650 MB/sec
[info]                  ·gc.alloc.rate.norm:              178666.970 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6.431 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.761 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 104229.957 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 10186.023 ops/s
[info]                  ·gc.alloc.rate:                   1179.868 MB/sec
[info]                  ·gc.alloc.rate.norm:              182340.340 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3.216 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.943 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 208624.220 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala":
[info]   10074.677 ±(99.9%) 565.057 ops/s [Average]
[info]   (min, avg, max) = (9906.515, 10074.677, 10189.489), stdev = 146.744
[info]   CI (99.9%): [9509.619, 10639.734] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1160.092 ±(99.9%) 87.026 MB/sec [Average]
[info]   (min, avg, max) = (1126.784, 1160.092, 1182.484), stdev = 22.600
[info]   CI (99.9%): [1073.066, 1247.118] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   181253.285 ±(99.9%) 9056.827 B/op [Average]
[info]   (min, avg, max) = (178666.970, 181253.285, 183465.984), stdev = 2352.029
[info]   CI (99.9%): [172196.458, 190310.112] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.021 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.077] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   3.235 ±(99.9%) 8.756 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.235, 6.431), stdev = 2.274
[info]   CI (99.9%): [≈ 0, 11.991] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1079.088 ±(99.9%) 1422.614 MB/sec [Average]
[info]   (min, avg, max) = (673.996, 1079.088, 1349.943), stdev = 369.448
[info]   CI (99.9%): [≈ 0, 2501.702] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   168546.056 ±(99.9%) 221535.648 B/op [Average]
[info]   (min, avg, max) = (104229.957, 168546.056, 214180.828), stdev = 57532.104
[info]   CI (99.9%): [≈ 0, 390081.704] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.600, 3.000), stdev = 1.140
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 32.73% complete, ETA 01:31:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 194662.001 ops/s
[info] # Warmup Iteration   2: 236011.784 ops/s
[info] # Warmup Iteration   3: 254091.025 ops/s
[info] # Warmup Iteration   4: 253367.096 ops/s
[info] # Warmup Iteration   5: 255015.699 ops/s
[info] Iteration   1: 257323.703 ops/s
[info]                  ·gc.alloc.rate:                   1718.972 MB/sec
[info]                  ·gc.alloc.rate.norm:              10516.376 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.382 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2019.269 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12353.540 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 258961.918 ops/s
[info]                  ·gc.alloc.rate:                   1723.805 MB/sec
[info]                  ·gc.alloc.rate.norm:              10475.841 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1347.716 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8190.292 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 256540.664 ops/s
[info]                  ·gc.alloc.rate:                   1738.044 MB/sec
[info]                  ·gc.alloc.rate.norm:              10661.647 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.766 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2023.902 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12415.180 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 259058.840 ops/s
[info]                  ·gc.alloc.rate:                   1729.976 MB/sec
[info]                  ·gc.alloc.rate.norm:              10508.762 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1351.084 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8207.176 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 255733.664 ops/s
[info]                  ·gc.alloc.rate:                   1739.100 MB/sec
[info]                  ·gc.alloc.rate.norm:              10705.260 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.256 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2028.564 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12487.098 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala":
[info]   257523.758 ±(99.9%) 5657.864 ops/s [Average]
[info]   (min, avg, max) = (255733.664, 257523.758, 259058.840), stdev = 1469.329
[info]   CI (99.9%): [251865.894, 263181.622] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1729.979 ±(99.9%) 33.762 MB/sec [Average]
[info]   (min, avg, max) = (1718.972, 1729.979, 1739.100), stdev = 8.768
[info]   CI (99.9%): [1696.217, 1763.742] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   10573.577 ±(99.9%) 395.146 B/op [Average]
[info]   (min, avg, max) = (10475.841, 10573.577, 10705.260), stdev = 102.618
[info]   CI (99.9%): [10178.431, 10968.724] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.046 ±(99.9%) 0.200 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.125), stdev = 0.052
[info]   CI (99.9%): [≈ 0, 0.245] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.281 ±(99.9%) 1.224 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.281, 0.766), stdev = 0.318
[info]   CI (99.9%): [≈ 0, 1.505] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   1754.107 ±(99.9%) 1422.666 MB/sec [Average]
[info]   (min, avg, max) = (1347.716, 1754.107, 2028.564), stdev = 369.462
[info]   CI (99.9%): [331.441, 3176.773] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   10730.657 ±(99.9%) 8901.958 B/op [Average]
[info]   (min, avg, max) = (8190.292, 10730.657, 12487.098), stdev = 2311.810
[info]   CI (99.9%): [1828.699, 19632.615] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 32.93% complete, ETA 01:30:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 856.458 ops/s
[info] # Warmup Iteration   2: 7081.511 ops/s
[info] # Warmup Iteration   3: 7806.161 ops/s
[info] # Warmup Iteration   4: 7840.854 ops/s
[info] # Warmup Iteration   5: 7811.049 ops/s
[info] Iteration   1: 7822.686 ops/s
[info]                  ·gc.alloc.rate:                   1414.003 MB/sec
[info]                  ·gc.alloc.rate.norm:              284405.582 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.461 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 271222.725 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 7758.723 ops/s
[info]                  ·gc.alloc.rate:                   1400.676 MB/sec
[info]                  ·gc.alloc.rate.norm:              284087.311 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.942 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 273594.434 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 7833.422 ops/s
[info]                  ·gc.alloc.rate:                   1396.451 MB/sec
[info]                  ·gc.alloc.rate.norm:              280601.369 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4.182 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.053 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 271278.054 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 7818.675 ops/s
[info]                  ·gc.alloc.rate:                   1396.479 MB/sec
[info]                  ·gc.alloc.rate.norm:              281054.664 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1351.647 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 272031.800 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 7817.468 ops/s
[info]                  ·gc.alloc.rate:                   1399.554 MB/sec
[info]                  ·gc.alloc.rate.norm:              281797.230 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4.191 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1352.065 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 272235.488 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson":
[info]   7810.195 ±(99.9%) 113.410 ops/s [Average]
[info]   (min, avg, max) = (7758.723, 7810.195, 7833.422), stdev = 29.452
[info]   CI (99.9%): [7696.785, 7923.604] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1401.433 ±(99.9%) 27.998 MB/sec [Average]
[info]   (min, avg, max) = (1396.451, 1401.433, 1414.003), stdev = 7.271
[info]   CI (99.9%): [1373.434, 1429.431] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   282389.231 ±(99.9%) 6746.085 B/op [Average]
[info]   (min, avg, max) = (280601.369, 282389.231, 284405.582), stdev = 1751.937
[info]   CI (99.9%): [275643.146, 289135.317] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   0.008 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   1.675 ±(99.9%) 8.830 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.675, 4.191), stdev = 2.293
[info]   CI (99.9%): [≈ 0, 10.504] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   1350.233 ±(99.9%) 6.148 MB/sec [Average]
[info]   (min, avg, max) = (1348.461, 1350.233, 1352.065), stdev = 1.597
[info]   CI (99.9%): [1344.086, 1356.381] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   272072.500 ±(99.9%) 3702.312 B/op [Average]
[info]   (min, avg, max) = (271222.725, 272072.500, 273594.434), stdev = 961.479
[info]   CI (99.9%): [268370.188, 275774.812] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 3.000), stdev = 0.707
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 33.13% complete, ETA 01:30:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4331.671 ops/s
[info] # Warmup Iteration   2: 10387.326 ops/s
[info] # Warmup Iteration   3: 10724.158 ops/s
[info] # Warmup Iteration   4: 10654.700 ops/s
[info] # Warmup Iteration   5: 10693.475 ops/s
[info] Iteration   1: 10781.894 ops/s
[info]                  ·gc.alloc.rate:                   1271.965 MB/sec
[info]                  ·gc.alloc.rate.norm:              185696.896 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6.077 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1342.707 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 196024.593 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 10589.759 ops/s
[info]                  ·gc.alloc.rate:                   1238.795 MB/sec
[info]                  ·gc.alloc.rate.norm:              184086.993 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1343.040 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 199577.909 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 10486.235 ops/s
[info]                  ·gc.alloc.rate:                   1207.261 MB/sec
[info]                  ·gc.alloc.rate.norm:              181206.553 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6.249 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      671.421 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 100778.471 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 10598.835 ops/s
[info]                  ·gc.alloc.rate:                   1233.509 MB/sec
[info]                  ·gc.alloc.rate.norm:              183185.950 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1344.078 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 199606.298 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 10768.925 ops/s
[info]                  ·gc.alloc.rate:                   1265.051 MB/sec
[info]                  ·gc.alloc.rate.norm:              184904.654 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6.084 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.287 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 196632.336 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readUPickle":
[info]   10645.130 ±(99.9%) 488.920 ops/s [Average]
[info]   (min, avg, max) = (10486.235, 10645.130, 10781.894), stdev = 126.971
[info]   CI (99.9%): [10156.210, 11134.049] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readUPickle:·gc.alloc.rate":
[info]   1243.316 ±(99.9%) 100.223 MB/sec [Average]
[info]   (min, avg, max) = (1207.261, 1243.316, 1271.965), stdev = 26.028
[info]   CI (99.9%): [1143.094, 1343.539] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readUPickle:·gc.alloc.rate.norm":
[info]   183816.209 ±(99.9%) 6670.220 B/op [Average]
[info]   (min, avg, max) = (181206.553, 183816.209, 185696.896), stdev = 1732.235
[info]   CI (99.9%): [177145.989, 190486.429] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readUPickle:·gc.churn.PS_Eden_Space":
[info]   0.025 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.042), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   3.682 ±(99.9%) 12.945 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.682, 6.249), stdev = 3.362
[info]   CI (99.9%): [≈ 0, 16.627] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readUPickle:·gc.churn.PS_Survivor_Space":
[info]   1209.307 ±(99.9%) 1157.845 MB/sec [Average]
[info]   (min, avg, max) = (671.421, 1209.307, 1345.287), stdev = 300.689
[info]   CI (99.9%): [51.462, 2367.152] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   178523.922 ±(99.9%) 167472.914 B/op [Average]
[info]   (min, avg, max) = (100778.471, 178523.922, 199606.298), stdev = 43492.184
[info]   CI (99.9%): [11051.008, 345996.835] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readUPickle:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.readUPickle:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 33.33% complete, ETA 01:30:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 8117.972 ops/s
[info] # Warmup Iteration   2: 24244.880 ops/s
[info] # Warmup Iteration   3: 24500.622 ops/s
[info] # Warmup Iteration   4: 24394.141 ops/s
[info] # Warmup Iteration   5: 23844.739 ops/s
[info] Iteration   1: 24197.533 ops/s
[info]                  ·gc.alloc.rate:                   986.624 MB/sec
[info]                  ·gc.alloc.rate.norm:              64159.318 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.555 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 43865.769 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 24347.789 ops/s
[info]                  ·gc.alloc.rate:                   1014.990 MB/sec
[info]                  ·gc.alloc.rate.norm:              65615.059 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.346 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.080 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 87212.692 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 24397.346 ops/s
[info]                  ·gc.alloc.rate:                   1009.114 MB/sec
[info]                  ·gc.alloc.rate.norm:              65103.265 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.717 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 43529.526 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 24538.347 ops/s
[info]                  ·gc.alloc.rate:                   1017.985 MB/sec
[info]                  ·gc.alloc.rate.norm:              65301.797 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8.011 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.081 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 86605.148 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 24548.660 ops/s
[info]                  ·gc.alloc.rate:                   1011.767 MB/sec
[info]                  ·gc.alloc.rate.norm:              64877.319 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      675.643 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 43324.116 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce":
[info]   24405.935 ±(99.9%) 560.628 ops/s [Average]
[info]   (min, avg, max) = (24197.533, 24405.935, 24548.660), stdev = 145.593
[info]   CI (99.9%): [23845.307, 24966.563] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.alloc.rate":
[info]   1008.096 ±(99.9%) 47.974 MB/sec [Average]
[info]   (min, avg, max) = (986.624, 1008.096, 1017.985), stdev = 12.459
[info]   CI (99.9%): [960.121, 1056.070] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   65011.352 ±(99.9%) 2110.136 B/op [Average]
[info]   (min, avg, max) = (64159.318, 65011.352, 65615.059), stdev = 547.996
[info]   CI (99.9%): [62901.216, 67121.487] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   0.029 ±(99.9%) 0.209 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.125), stdev = 0.054
[info]   CI (99.9%): [≈ 0, 0.238] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1.871 ±(99.9%) 13.405 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.871, 8.011), stdev = 3.481
[info]   CI (99.9%): [≈ 0, 15.277] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   944.815 ±(99.9%) 1422.810 MB/sec [Average]
[info]   (min, avg, max) = (674.555, 944.815, 1350.081), stdev = 369.499
[info]   CI (99.9%): [≈ 0, 2367.625] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   60907.450 ±(99.9%) 91405.605 B/op [Average]
[info]   (min, avg, max) = (43324.116, 60907.450, 87212.692), stdev = 23737.745
[info]   CI (99.9%): [≈ 0, 152313.056] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 2.000), stdev = 0.894
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 33.53% complete, ETA 01:30:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 8785.384 ops/s
[info] # Warmup Iteration   2: 27286.316 ops/s
[info] # Warmup Iteration   3: 28442.211 ops/s
[info] # Warmup Iteration   4: 28485.861 ops/s
[info] # Warmup Iteration   5: 27838.164 ops/s
[info] Iteration   1: 28500.278 ops/s
[info]                  ·gc.alloc.rate:                   1132.659 MB/sec
[info]                  ·gc.alloc.rate.norm:              62561.713 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.150 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1347.969 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 74454.230 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 28499.862 ops/s
[info]                  ·gc.alloc.rate:                   1139.869 MB/sec
[info]                  ·gc.alloc.rate.norm:              62957.395 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5.748 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.024 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 74454.230 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 28549.254 ops/s
[info]                  ·gc.alloc.rate:                   1124.374 MB/sec
[info]                  ·gc.alloc.rate.norm:              61991.341 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.718 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 37199.954 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 28559.711 ops/s
[info]                  ·gc.alloc.rate:                   1130.522 MB/sec
[info]                  ·gc.alloc.rate.norm:              62299.295 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.294 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.967 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 74392.216 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 28571.891 ops/s
[info]                  ·gc.alloc.rate:                   1150.852 MB/sec
[info]                  ·gc.alloc.rate.norm:              63392.282 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.147 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.934 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 74413.414 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala":
[info]   28536.199 ±(99.9%) 130.692 ops/s [Average]
[info]   (min, avg, max) = (28499.862, 28536.199, 28571.891), stdev = 33.940
[info]   CI (99.9%): [28405.507, 28666.891] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1135.655 ±(99.9%) 39.045 MB/sec [Average]
[info]   (min, avg, max) = (1124.374, 1135.655, 1150.852), stdev = 10.140
[info]   CI (99.9%): [1096.610, 1174.701] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   62640.405 ±(99.9%) 2117.534 B/op [Average]
[info]   (min, avg, max) = (61991.341, 62640.405, 63392.282), stdev = 549.917
[info]   CI (99.9%): [60522.871, 64757.939] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.037 ±(99.9%) 0.154 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.104), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   2.068 ±(99.9%) 8.515 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.068, 5.748), stdev = 2.211
[info]   CI (99.9%): [≈ 0, 10.583] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1214.323 ±(99.9%) 1161.550 MB/sec [Average]
[info]   (min, avg, max) = (674.718, 1214.323, 1350.934), stdev = 301.651
[info]   CI (99.9%): [52.773, 2375.872] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   66982.809 ±(99.9%) 64109.923 B/op [Average]
[info]   (min, avg, max) = (37199.954, 66982.809, 74454.230), stdev = 16649.143
[info]   CI (99.9%): [2872.886, 131092.732] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 33.73% complete, ETA 01:29:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 346367.452 ops/s
[info] # Warmup Iteration   2: 429303.257 ops/s
[info] # Warmup Iteration   3: 453667.103 ops/s
[info] # Warmup Iteration   4: 469739.118 ops/s
[info] # Warmup Iteration   5: 470509.942 ops/s
[info] Iteration   1: 470498.064 ops/s
[info]                  ·gc.alloc.rate:                   874.873 MB/sec
[info]                  ·gc.alloc.rate.norm:              2927.293 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.637 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2257.312 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 470517.270 ops/s
[info]                  ·gc.alloc.rate:                   874.465 MB/sec
[info]                  ·gc.alloc.rate.norm:              2924.922 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.159 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2254.935 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   3: 473291.589 ops/s
[info]                  ·gc.alloc.rate:                   870.018 MB/sec
[info]                  ·gc.alloc.rate.norm:              2893.322 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.041 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2241.584 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 472838.765 ops/s
[info]                  ·gc.alloc.rate:                   890.964 MB/sec
[info]                  ·gc.alloc.rate.norm:              2965.970 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.416 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1346.723 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4483.169 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 471949.927 ops/s
[info]                  ·gc.alloc.rate:                   868.423 MB/sec
[info]                  ·gc.alloc.rate.norm:              2895.285 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.603 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2245.763 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala":
[info]   471819.123 ±(99.9%) 4970.521 ops/s [Average]
[info]   (min, avg, max) = (470498.064, 471819.123, 473291.589), stdev = 1290.828
[info]   CI (99.9%): [466848.602, 476789.644] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   875.749 ±(99.9%) 34.464 MB/sec [Average]
[info]   (min, avg, max) = (868.423, 875.749, 890.964), stdev = 8.950
[info]   CI (99.9%): [841.285, 910.212] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   2921.358 ±(99.9%) 113.969 B/op [Average]
[info]   (min, avg, max) = (2893.322, 2921.358, 2965.970), stdev = 29.597
[info]   CI (99.9%): [2807.390, 3035.327] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.025 ±(99.9%) 0.215 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.125), stdev = 0.056
[info]   CI (99.9%): [≈ 0, 0.240] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.083 ±(99.9%) 0.716 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.083, 0.416), stdev = 0.186
[info]   CI (99.9%): [≈ 0, 0.799] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   808.633 ±(99.9%) 1158.282 MB/sec [Average]
[info]   (min, avg, max) = (673.603, 808.633, 1346.723), stdev = 300.802
[info]   CI (99.9%): [≈ 0, 1966.914] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2696.553 ±(99.9%) 3845.907 B/op [Average]
[info]   (min, avg, max) = (2241.584, 2696.553, 4483.169), stdev = 998.770
[info]   CI (99.9%): [≈ 0, 6542.460] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 1.095
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 33.94% complete, ETA 01:29:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 394426.412 ops/s
[info] # Warmup Iteration   2: 524185.703 ops/s
[info] # Warmup Iteration   3: 521958.300 ops/s
[info] # Warmup Iteration   4: 528651.665 ops/s
[info] # Warmup Iteration   5: 529359.594 ops/s
[info] Iteration   1: 529276.354 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 529494.601 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 529304.433 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 529463.011 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 529230.164 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc":
[info]   529353.713 ±(99.9%) 453.464 ops/s [Average]
[info]   (min, avg, max) = (529230.164, 529353.713, 529494.601), stdev = 117.763
[info]   CI (99.9%): [528900.249, 529807.177] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
[info]   CI (99.9%): [≈ 10⁻³, 0.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 34.14% complete, ETA 01:29:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 11742.185 ops/s
[info] # Warmup Iteration   2: 26277.285 ops/s
[info] # Warmup Iteration   3: 27179.440 ops/s
[info] # Warmup Iteration   4: 27510.256 ops/s
[info] # Warmup Iteration   5: 27248.754 ops/s
[info] Iteration   1: 27485.572 ops/s
[info]                  ·gc.alloc.rate:                   1120.225 MB/sec
[info]                  ·gc.alloc.rate.norm:              64155.360 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.669 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 38638.372 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 27270.919 ops/s
[info]                  ·gc.alloc.rate:                   1140.952 MB/sec
[info]                  ·gc.alloc.rate.norm:              65842.438 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.403 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.647 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 77885.869 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 27459.902 ops/s
[info]                  ·gc.alloc.rate:                   1138.851 MB/sec
[info]                  ·gc.alloc.rate.norm:              65280.344 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.077 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 77388.078 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 27511.500 ops/s
[info]                  ·gc.alloc.rate:                   1120.742 MB/sec
[info]                  ·gc.alloc.rate.norm:              64124.495 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.382 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      675.334 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 38639.970 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 27259.580 ops/s
[info]                  ·gc.alloc.rate:                   1124.714 MB/sec
[info]                  ·gc.alloc.rate.norm:              64953.861 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.404 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1351.230 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 78035.531 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson":
[info]   27397.495 ±(99.9%) 470.392 ops/s [Average]
[info]   (min, avg, max) = (27259.580, 27397.495, 27511.500), stdev = 122.159
[info]   CI (99.9%): [26927.103, 27867.886] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1129.097 ±(99.9%) 38.671 MB/sec [Average]
[info]   (min, avg, max) = (1120.225, 1129.097, 1140.952), stdev = 10.043
[info]   CI (99.9%): [1090.426, 1167.768] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   64871.299 ±(99.9%) 2847.609 B/op [Average]
[info]   (min, avg, max) = (64124.495, 64871.299, 65842.438), stdev = 739.515
[info]   CI (99.9%): [62023.690, 67718.909] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   0.025 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.042), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   1.438 ±(99.9%) 5.054 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.438, 2.404), stdev = 1.312
[info]   CI (99.9%): [≈ 0, 6.491] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   1080.191 ±(99.9%) 1424.302 MB/sec [Average]
[info]   (min, avg, max) = (674.669, 1080.191, 1351.230), stdev = 369.887
[info]   CI (99.9%): [≈ 0, 2504.493] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   62117.564 ±(99.9%) 82535.019 B/op [Average]
[info]   (min, avg, max) = (38638.372, 62117.564, 78035.531), stdev = 21434.082
[info]   CI (99.9%): [≈ 0, 144652.583] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 34.34% complete, ETA 01:28:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 10656.066 ops/s
[info] # Warmup Iteration   2: 15058.587 ops/s
[info] # Warmup Iteration   3: 15056.328 ops/s
[info] # Warmup Iteration   4: 15112.295 ops/s
[info] # Warmup Iteration   5: 15038.117 ops/s
[info] Iteration   1: 15189.581 ops/s
[info]                  ·gc.alloc.rate:                   656.842 MB/sec
[info]                  ·gc.alloc.rate.norm:              68055.918 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2.769 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     286.854 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.112 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 69845.252 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 15191.549 ops/s
[info]                  ·gc.alloc.rate:                   665.853 MB/sec
[info]                  ·gc.alloc.rate.norm:              68987.605 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.420 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 69771.642 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 15065.644 ops/s
[info]                  ·gc.alloc.rate:                   663.536 MB/sec
[info]                  ·gc.alloc.rate.norm:              69323.077 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.414 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 70355.079 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 15223.469 ops/s
[info]                  ·gc.alloc.rate:                   667.467 MB/sec
[info]                  ·gc.alloc.rate.norm:              69008.038 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.152 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.724 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 69551.570 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 14736.947 ops/s
[info]                  ·gc.alloc.rate:                   645.827 MB/sec
[info]                  ·gc.alloc.rate.norm:              68982.926 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.710 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 71854.384 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeUPickle":
[info]   15081.438 ±(99.9%) 777.114 ops/s [Average]
[info]   (min, avg, max) = (14736.947, 15081.438, 15223.469), stdev = 201.814
[info]   CI (99.9%): [14304.325, 15858.552] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeUPickle:·gc.alloc.rate":
[info]   659.905 ±(99.9%) 34.079 MB/sec [Average]
[info]   (min, avg, max) = (645.827, 659.905, 667.467), stdev = 8.850
[info]   CI (99.9%): [625.826, 693.984] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeUPickle:·gc.alloc.rate.norm":
[info]   68871.513 ±(99.9%) 1840.304 B/op [Average]
[info]   (min, avg, max) = (68055.918, 68871.513, 69323.077), stdev = 477.921
[info]   CI (99.9%): [67031.209, 70711.817] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeUPickle:·gc.churn.PS_Eden_Space":
[info]   0.558 ±(99.9%) 4.759 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.558, 2.769), stdev = 1.236
[info]   CI (99.9%): [≈ 0, 5.317] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   57.801 ±(99.9%) 493.067 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 57.801, 286.854), stdev = 128.048
[info]   CI (99.9%): [≈ 0, 550.868] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space":
[info]   673.276 ±(99.9%) 2.248 MB/sec [Average]
[info]   (min, avg, max) = (672.710, 673.276, 674.112), stdev = 0.584
[info]   CI (99.9%): [671.028, 675.524] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   70275.586 ±(99.9%) 3582.479 B/op [Average]
[info]   (min, avg, max) = (69551.570, 70275.586, 71854.384), stdev = 930.358
[info]   CI (99.9%): [66693.107, 73858.064] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeUPickle:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDateTimesBenchmark.writeUPickle:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 3.000), stdev = 0.894
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 34.54% complete, ETA 01:28:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 11600.356 ops/s
[info] # Warmup Iteration   2: 31229.059 ops/s
[info] # Warmup Iteration   3: 31678.610 ops/s
[info] # Warmup Iteration   4: 31358.040 ops/s
[info] # Warmup Iteration   5: 31684.662 ops/s
[info] Iteration   1: 31883.635 ops/s
[info]                  ·gc.alloc.rate:                   1619.606 MB/sec
[info]                  ·gc.alloc.rate.norm:              79954.724 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.055 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1347.515 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 66522.493 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 31784.636 ops/s
[info]                  ·gc.alloc.rate:                   1624.293 MB/sec
[info]                  ·gc.alloc.rate.norm:              80425.852 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3.092 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2024.189 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 100226.436 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 31663.933 ops/s
[info]                  ·gc.alloc.rate:                   1614.366 MB/sec
[info]                  ·gc.alloc.rate.norm:              80252.852 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.069 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.750 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 67148.067 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 31257.873 ops/s
[info]                  ·gc.alloc.rate:                   1594.740 MB/sec
[info]                  ·gc.alloc.rate.norm:              80307.737 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3.144 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1352.066 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 68087.173 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 31745.429 ops/s
[info]                  ·gc.alloc.rate:                   1644.394 MB/sec
[info]                  ·gc.alloc.rate.norm:              81538.304 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4.128 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2030.360 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 100676.638 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce":
[info]   31667.101 ±(99.9%) 931.972 ops/s [Average]
[info]   (min, avg, max) = (31257.873, 31667.101, 31883.635), stdev = 242.030
[info]   CI (99.9%): [30735.130, 32599.073] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:·gc.alloc.rate":
[info]   1619.480 ±(99.9%) 68.939 MB/sec [Average]
[info]   (min, avg, max) = (1594.740, 1619.480, 1644.394), stdev = 17.903
[info]   CI (99.9%): [1550.541, 1688.419] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   80495.894 ±(99.9%) 2341.354 B/op [Average]
[info]   (min, avg, max) = (79954.724, 80495.894, 81538.304), stdev = 608.042
[info]   CI (99.9%): [78154.540, 82837.248] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   0.058 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.058, 0.083), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   2.898 ±(99.9%) 3.340 B/op [Average]
[info]   (min, avg, max) = (2.055, 2.898, 4.128), stdev = 0.867
[info]   CI (99.9%): [≈ 0, 6.237] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1620.976 ±(99.9%) 1428.235 MB/sec [Average]
[info]   (min, avg, max) = (1347.515, 1620.976, 2030.360), stdev = 370.908
[info]   CI (99.9%): [192.741, 3049.211] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   80532.161 ±(99.9%) 70054.922 B/op [Average]
[info]   (min, avg, max) = (66522.493, 80532.161, 100676.638), stdev = 18193.041
[info]   CI (99.9%): [10477.239, 150587.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readCirce:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.400, 3.000), stdev = 0.894
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 34.74% complete, ETA 01:28:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 9037.667 ops/s
[info] # Warmup Iteration   2: 30077.970 ops/s
[info] # Warmup Iteration   3: 29956.721 ops/s
[info] # Warmup Iteration   4: 30473.558 ops/s
[info] # Warmup Iteration   5: 30023.998 ops/s
[info] Iteration   1: 30465.583 ops/s
[info]                  ·gc.alloc.rate:                   1334.226 MB/sec
[info]                  ·gc.alloc.rate.norm:              68930.759 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3.226 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.200 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 69652.702 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 30558.356 ops/s
[info]                  ·gc.alloc.rate:                   1327.094 MB/sec
[info]                  ·gc.alloc.rate.norm:              68336.396 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.072 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.207 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 69475.065 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 30539.096 ops/s
[info]                  ·gc.alloc.rate:                   1322.005 MB/sec
[info]                  ·gc.alloc.rate.norm:              68134.830 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.073 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.514 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 69552.612 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 30571.757 ops/s
[info]                  ·gc.alloc.rate:                   1334.671 MB/sec
[info]                  ·gc.alloc.rate.norm:              68710.714 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.143 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.898 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 69546.134 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 30600.981 ops/s
[info]                  ·gc.alloc.rate:                   1308.411 MB/sec
[info]                  ·gc.alloc.rate.norm:              67306.560 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      675.999 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 34774.379 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala":
[info]   30547.155 ±(99.9%) 195.843 ops/s [Average]
[info]   (min, avg, max) = (30465.583, 30547.155, 30600.981), stdev = 50.860
[info]   CI (99.9%): [30351.311, 30742.998] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1325.281 ±(99.9%) 41.597 MB/sec [Average]
[info]   (min, avg, max) = (1308.411, 1325.281, 1334.671), stdev = 10.803
[info]   CI (99.9%): [1283.684, 1366.878] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   68283.852 ±(99.9%) 2420.680 B/op [Average]
[info]   (min, avg, max) = (67306.560, 68283.852, 68930.759), stdev = 628.643
[info]   CI (99.9%): [65863.172, 70704.532] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.029 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1.503 ±(99.9%) 4.720 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.503, 3.226), stdev = 1.226
[info]   CI (99.9%): [≈ 0, 6.223] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1214.764 ±(99.9%) 1159.737 MB/sec [Average]
[info]   (min, avg, max) = (675.999, 1214.764, 1350.898), stdev = 301.180
[info]   CI (99.9%): [55.027, 2374.501] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   62600.178 ±(99.9%) 59897.626 B/op [Average]
[info]   (min, avg, max) = (34774.379, 62600.178, 69652.702), stdev = 15555.223
[info]   CI (99.9%): [2702.552, 122497.804] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 34.94% complete, ETA 01:28:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 321222.095 ops/s
[info] # Warmup Iteration   2: 415108.457 ops/s
[info] # Warmup Iteration   3: 433295.956 ops/s
[info] # Warmup Iteration   4: 436358.559 ops/s
[info] # Warmup Iteration   5: 428663.365 ops/s
[info] Iteration   1: 439252.835 ops/s
[info]                  ·gc.alloc.rate:                   1164.084 MB/sec
[info]                  ·gc.alloc.rate.norm:              4171.918 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.637 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2410.640 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 439634.454 ops/s
[info]                  ·gc.alloc.rate:                   1180.198 MB/sec
[info]                  ·gc.alloc.rate.norm:              4225.865 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.298 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.359 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4817.245 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 435877.352 ops/s
[info]                  ·gc.alloc.rate:                   1165.521 MB/sec
[info]                  ·gc.alloc.rate.norm:              4209.143 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.439 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4858.895 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 439786.514 ops/s
[info]                  ·gc.alloc.rate:                   1172.419 MB/sec
[info]                  ·gc.alloc.rate.norm:              4194.804 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.074 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.202 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4813.008 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 440528.910 ops/s
[info]                  ·gc.alloc.rate:                   1159.794 MB/sec
[info]                  ·gc.alloc.rate.norm:              4144.115 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.683 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2407.169 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala":
[info]   439016.013 ±(99.9%) 6987.693 ops/s [Average]
[info]   (min, avg, max) = (435877.352, 439016.013, 440528.910), stdev = 1814.682
[info]   CI (99.9%): [432028.320, 446003.706] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1168.403 ±(99.9%) 30.825 MB/sec [Average]
[info]   (min, avg, max) = (1159.794, 1168.403, 1180.198), stdev = 8.005
[info]   CI (99.9%): [1137.578, 1199.228] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   4189.169 ±(99.9%) 123.353 B/op [Average]
[info]   (min, avg, max) = (4144.115, 4189.169, 4225.865), stdev = 32.034
[info]   CI (99.9%): [4065.816, 4312.522] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.021 ±(99.9%) 0.139 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.083), stdev = 0.036
[info]   CI (99.9%): [≈ 0, 0.160] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.075 ±(99.9%) 0.497 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.075, 0.298), stdev = 0.129
[info]   CI (99.9%): [≈ 0, 0.572] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   1076.464 ±(99.9%) 1417.671 MB/sec [Average]
[info]   (min, avg, max) = (672.637, 1076.464, 1345.439), stdev = 368.165
[info]   CI (99.9%): [≈ 0, 2494.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   3861.391 ±(99.9%) 5106.165 B/op [Average]
[info]   (min, avg, max) = (2407.169, 3861.391, 4858.895), stdev = 1326.055
[info]   CI (99.9%): [≈ 0, 8967.557] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 3.000), stdev = 1.140
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 35.14% complete, ETA 01:27:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1232.279 ops/s
[info] # Warmup Iteration   2: 15116.022 ops/s
[info] # Warmup Iteration   3: 17205.371 ops/s
[info] # Warmup Iteration   4: 17338.634 ops/s
[info] # Warmup Iteration   5: 17198.250 ops/s
[info] Iteration   1: 17285.719 ops/s
[info]                  ·gc.alloc.rate:                   1736.109 MB/sec
[info]                  ·gc.alloc.rate.norm:              158028.393 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3.790 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.853 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 122869.576 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 17139.216 ops/s
[info]                  ·gc.alloc.rate:                   1759.259 MB/sec
[info]                  ·gc.alloc.rate.norm:              161513.053 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.912 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2027.174 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 186109.700 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 17150.231 ops/s
[info]                  ·gc.alloc.rate:                   1732.041 MB/sec
[info]                  ·gc.alloc.rate.norm:              158900.248 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1352.583 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 124088.217 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 16975.550 ops/s
[info]                  ·gc.alloc.rate:                   1723.033 MB/sec
[info]                  ·gc.alloc.rate.norm:              159772.351 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.930 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2029.541 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 188194.073 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 17062.313 ops/s
[info]                  ·gc.alloc.rate:                   1718.735 MB/sec
[info]                  ·gc.alloc.rate.norm:              158502.665 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.920 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1355.242 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 124981.165 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson":
[info]   17122.606 ±(99.9%) 442.847 ops/s [Average]
[info]   (min, avg, max) = (16975.550, 17122.606, 17285.719), stdev = 115.006
[info]   CI (99.9%): [16679.759, 17565.453] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1733.835 ±(99.9%) 60.867 MB/sec [Average]
[info]   (min, avg, max) = (1718.735, 1733.835, 1759.259), stdev = 15.807
[info]   CI (99.9%): [1672.968, 1794.703] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   159343.342 ±(99.9%) 5281.090 B/op [Average]
[info]   (min, avg, max) = (158028.393, 159343.342, 161513.053), stdev = 1371.482
[info]   CI (99.9%): [154062.252, 164624.432] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   0.021 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.078] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   1.910 ±(99.9%) 5.161 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.910, 3.790), stdev = 1.340
[info]   CI (99.9%): [≈ 0, 7.071] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   1622.879 ±(99.9%) 1425.338 MB/sec [Average]
[info]   (min, avg, max) = (1349.853, 1622.879, 2029.541), stdev = 370.156
[info]   CI (99.9%): [197.540, 3048.217] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   149248.546 ±(99.9%) 133297.045 B/op [Average]
[info]   (min, avg, max) = (122869.576, 149248.546, 188194.073), stdev = 34616.819
[info]   CI (99.9%): [15951.501, 282545.591] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readPlayJson:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.200, 3.000), stdev = 0.837
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 35.34% complete, ETA 01:27:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 11225.736 ops/s
[info] # Warmup Iteration   2: 28216.629 ops/s
[info] # Warmup Iteration   3: 29519.167 ops/s
[info] # Warmup Iteration   4: 29649.858 ops/s
[info] # Warmup Iteration   5: 28767.985 ops/s
[info] Iteration   1: 28587.002 ops/s
[info]                  ·gc.alloc.rate:                   1387.170 MB/sec
[info]                  ·gc.alloc.rate.norm:              76383.912 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.292 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1342.683 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 73934.290 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 29484.335 ops/s
[info]                  ·gc.alloc.rate:                   1424.888 MB/sec
[info]                  ·gc.alloc.rate.norm:              76060.123 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.222 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1342.933 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 71685.348 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 29500.636 ops/s
[info]                  ·gc.alloc.rate:                   1434.252 MB/sec
[info]                  ·gc.alloc.rate.norm:              76523.844 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1344.124 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 71715.121 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 29573.845 ops/s
[info]                  ·gc.alloc.rate:                   1436.513 MB/sec
[info]                  ·gc.alloc.rate.norm:              76452.036 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.216 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.515 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 71609.031 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 27318.902 ops/s
[info]                  ·gc.alloc.rate:                                  1343.265 MB/sec
[info]                  ·gc.alloc.rate.norm:                             77387.324 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.698 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 40.188 B/op
[info]                  ·gc.churn.Compressed_Class_Space:                0.006 MB/sec
[info]                  ·gc.churn.Compressed_Class_Space.norm:           0.335 B/op
[info]                  ·gc.churn.PS_Eden_Space:                         0.208 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:                    11.993 B/op
[info]                  ·gc.churn.PS_Old_Gen:                            0.019 MB/sec
[info]                  ·gc.churn.PS_Old_Gen.norm:                       1.088 B/op
[info]                  ·gc.churn.PS_Survivor_Space:                     1360.515 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm:                78381.120 B/op
[info]                  ·gc.count:                                       4.000 counts
[info]                  ·gc.time:                                        68.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readUPickle":
[info]   28892.944 ±(99.9%) 3730.293 ops/s [Average]
[info]   (min, avg, max) = (27318.902, 28892.944, 29573.845), stdev = 968.745
[info]   CI (99.9%): [25162.651, 32623.237] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readUPickle:·gc.alloc.rate":
[info]   1405.218 ±(99.9%) 153.703 MB/sec [Average]
[info]   (min, avg, max) = (1343.265, 1405.218, 1436.513), stdev = 39.916
[info]   CI (99.9%): [1251.515, 1558.921] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readUPickle:·gc.alloc.rate.norm":
[info]   76561.448 ±(99.9%) 1904.318 B/op [Average]
[info]   (min, avg, max) = (76060.123, 76561.448, 77387.324), stdev = 494.545
[info]   CI (99.9%): [74657.129, 78465.766] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readUPickle:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.140 ±(99.9%) 1.201 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.140, 0.698), stdev = 0.312
[info]   CI (99.9%): [≈ 0, 1.341] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readUPickle:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   8.038 ±(99.9%) 69.206 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 8.038, 40.188), stdev = 17.972
[info]   CI (99.9%): [≈ 0, 77.243] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readUPickle:·gc.churn.Compressed_Class_Space":
[info]   0.001 ±(99.9%) 0.010 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.006), stdev = 0.003
[info]   CI (99.9%): [≈ 0, 0.011] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readUPickle:·gc.churn.Compressed_Class_Space.norm":
[info]   0.067 ±(99.9%) 0.577 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.067, 0.335), stdev = 0.150
[info]   CI (99.9%): [≈ 0, 0.644] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readUPickle:·gc.churn.PS_Eden_Space":
[info]   0.067 ±(99.9%) 0.313 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.067, 0.208), stdev = 0.081
[info]   CI (99.9%): [≈ 0, 0.379] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   3.745 ±(99.9%) 18.145 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.745, 11.993), stdev = 4.712
[info]   CI (99.9%): [≈ 0, 21.890] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readUPickle:·gc.churn.PS_Old_Gen":
[info]   0.004 ±(99.9%) 0.033 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.019), stdev = 0.008
[info]   CI (99.9%): [≈ 0, 0.036] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readUPickle:·gc.churn.PS_Old_Gen.norm":
[info]   0.218 ±(99.9%) 1.874 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.218, 1.088), stdev = 0.487
[info]   CI (99.9%): [≈ 0, 2.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readUPickle:·gc.churn.PS_Survivor_Space":
[info]   1347.154 ±(99.9%) 29.084 MB/sec [Average]
[info]   (min, avg, max) = (1342.683, 1347.154, 1360.515), stdev = 7.553
[info]   CI (99.9%): [1318.070, 1376.238] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   73464.982 ±(99.9%) 11236.745 B/op [Average]
[info]   (min, avg, max) = (71609.031, 73464.982, 78381.120), stdev = 2918.147
[info]   CI (99.9%): [62228.237, 84701.727] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readUPickle:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 4.000), stdev = 0.894
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.readUPickle:·gc.time":
[info]   75.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 15.000, 68.000), stdev = 29.631
[info]   CI (99.9%): [75.000, 75.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 35.54% complete, ETA 01:27:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 23908.437 ops/s
[info] # Warmup Iteration   2: 52291.463 ops/s
[info] # Warmup Iteration   3: 51314.334 ops/s
[info] # Warmup Iteration   4: 53336.428 ops/s
[info] # Warmup Iteration   5: 54093.676 ops/s
[info] Iteration   1: 54271.361 ops/s
[info]                  ·gc.alloc.rate:                   1249.652 MB/sec
[info]                  ·gc.alloc.rate.norm:              36239.519 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.811 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.912 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 39118.041 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 54227.710 ops/s
[info]                  ·gc.alloc.rate:                   1244.981 MB/sec
[info]                  ·gc.alloc.rate.norm:              36136.996 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.416 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.676 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 39175.887 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 54219.922 ops/s
[info]                  ·gc.alloc.rate:                   1237.748 MB/sec
[info]                  ·gc.alloc.rate.norm:              35933.320 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.208 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.714 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 39212.837 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 54473.863 ops/s
[info]                  ·gc.alloc.rate:                   1253.743 MB/sec
[info]                  ·gc.alloc.rate.norm:              36224.838 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.804 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1351.854 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 39059.615 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 54527.930 ops/s
[info]                  ·gc.alloc.rate:                   1229.060 MB/sec
[info]                  ·gc.alloc.rate.norm:              35476.032 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      676.103 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19515.277 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce":
[info]   54344.157 ±(99.9%) 560.959 ops/s [Average]
[info]   (min, avg, max) = (54219.922, 54344.157, 54527.930), stdev = 145.679
[info]   CI (99.9%): [53783.198, 54905.116] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:·gc.alloc.rate":
[info]   1243.037 ±(99.9%) 37.800 MB/sec [Average]
[info]   (min, avg, max) = (1229.060, 1243.037, 1253.743), stdev = 9.817
[info]   CI (99.9%): [1205.236, 1280.837] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   36002.141 ±(99.9%) 1226.258 B/op [Average]
[info]   (min, avg, max) = (35476.032, 36002.141, 36239.519), stdev = 318.455
[info]   CI (99.9%): [34775.883, 37228.399] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   0.050 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.083), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.172] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1.448 ±(99.9%) 3.524 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.448, 2.416), stdev = 0.915
[info]   CI (99.9%): [≈ 0, 4.972] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   1215.452 ±(99.9%) 1160.997 MB/sec [Average]
[info]   (min, avg, max) = (676.103, 1215.452, 1351.854), stdev = 301.507
[info]   CI (99.9%): [54.455, 2376.449] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   35216.331 ±(99.9%) 33798.446 B/op [Average]
[info]   (min, avg, max) = (19515.277, 35216.331, 39212.837), stdev = 8777.349
[info]   CI (99.9%): [1417.886, 69014.777] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeCirce:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 35.74% complete, ETA 01:27:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 48716.607 ops/s
[info] # Warmup Iteration   2: 101907.967 ops/s
[info] # Warmup Iteration   3: 103474.772 ops/s
[info] # Warmup Iteration   4: 103818.995 ops/s
[info] # Warmup Iteration   5: 103146.483 ops/s
[info] Iteration   1: 104360.768 ops/s
[info]                  ·gc.alloc.rate:                   1103.632 MB/sec
[info]                  ·gc.alloc.rate.norm:              16644.694 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.119 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10166.889 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   2: 106482.466 ops/s
[info]                  ·gc.alloc.rate:                   1153.385 MB/sec
[info]                  ·gc.alloc.rate.norm:              17049.696 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.308 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.127 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19928.428 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 106373.905 ops/s
[info]                  ·gc.alloc.rate:                   1143.354 MB/sec
[info]                  ·gc.alloc.rate.norm:              16911.091 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.308 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.980 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19967.244 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 104751.504 ops/s
[info]                  ·gc.alloc.rate:                   1107.930 MB/sec
[info]                  ·gc.alloc.rate.norm:              16647.976 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      675.059 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10143.571 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 104297.259 ops/s
[info]                  ·gc.alloc.rate:                   1136.962 MB/sec
[info]                  ·gc.alloc.rate.norm:              17160.306 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.942 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.660 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 20385.683 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala":
[info]   105253.180 ±(99.9%) 4186.870 ops/s [Average]
[info]   (min, avg, max) = (104297.259, 105253.180, 106482.466), stdev = 1087.317
[info]   CI (99.9%): [101066.311, 109440.050] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1129.053 ±(99.9%) 85.053 MB/sec [Average]
[info]   (min, avg, max) = (1103.632, 1129.053, 1153.385), stdev = 22.088
[info]   CI (99.9%): [1044.000, 1214.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   16882.753 ±(99.9%) 897.912 B/op [Average]
[info]   (min, avg, max) = (16644.694, 16882.753, 17160.306), stdev = 233.185
[info]   CI (99.9%): [15984.840, 17780.665] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.021 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.062), stdev = 0.025
[info]   CI (99.9%): [≈ 0, 0.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.312 ±(99.9%) 1.482 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.312, 0.942), stdev = 0.385
[info]   CI (99.9%): [≈ 0, 1.793] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1079.589 ±(99.9%) 1423.636 MB/sec [Average]
[info]   (min, avg, max) = (674.119, 1079.589, 1350.660), stdev = 369.714
[info]   CI (99.9%): [≈ 0, 2503.225] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   16118.363 ±(99.9%) 20972.641 B/op [Average]
[info]   (min, avg, max) = (10143.571, 16118.363, 20385.683), stdev = 5446.528
[info]   CI (99.9%): [≈ 0, 37091.005] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 2.000), stdev = 0.894
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 35.94% complete, ETA 01:26:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 639642.780 ops/s
[info] # Warmup Iteration   2: 766667.181 ops/s
[info] # Warmup Iteration   3: 805505.670 ops/s
[info] # Warmup Iteration   4: 825942.192 ops/s
[info] # Warmup Iteration   5: 823858.615 ops/s
[info] Iteration   1: 824810.510 ops/s
[info]                  ·gc.alloc.rate:                   914.079 MB/sec
[info]                  ·gc.alloc.rate.norm:              1744.168 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.469 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1285.057 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 817298.080 ops/s
[info]                  ·gc.alloc.rate:                   925.602 MB/sec
[info]                  ·gc.alloc.rate.norm:              1782.123 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.200 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.833 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2591.221 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 790064.997 ops/s
[info]                  ·gc.alloc.rate:                   878.855 MB/sec
[info]                  ·gc.alloc.rate.norm:              1751.032 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.684 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1340.257 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 823941.387 ops/s
[info]                  ·gc.alloc.rate:                   901.665 MB/sec
[info]                  ·gc.alloc.rate.norm:              1722.252 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.040 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.801 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1285.104 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 824541.605 ops/s
[info]                  ·gc.alloc.rate:                   899.666 MB/sec
[info]                  ·gc.alloc.rate.norm:              1717.410 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.079 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.741 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1284.222 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala":
[info]   816131.316 ±(99.9%) 57369.197 ops/s [Average]
[info]   (min, avg, max) = (790064.997, 816131.316, 824810.510), stdev = 14898.598
[info]   CI (99.9%): [758762.119, 873500.513] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   903.974 ±(99.9%) 67.379 MB/sec [Average]
[info]   (min, avg, max) = (878.855, 903.974, 925.602), stdev = 17.498
[info]   CI (99.9%): [836.595, 971.352] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1743.397 ±(99.9%) 99.690 B/op [Average]
[info]   (min, avg, max) = (1717.410, 1743.397, 1782.123), stdev = 25.889
[info]   CI (99.9%): [1643.706, 1843.087] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.033 ±(99.9%) 0.166 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.104), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.064 ±(99.9%) 0.320 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.064, 0.200), stdev = 0.083
[info]   CI (99.9%): [≈ 0, 0.384] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   807.506 ±(99.9%) 1158.791 MB/sec [Average]
[info]   (min, avg, max) = (672.684, 807.506, 1345.833), stdev = 300.934
[info]   CI (99.9%): [≈ 0, 1966.296] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1557.172 ±(99.9%) 2227.789 B/op [Average]
[info]   (min, avg, max) = (1284.222, 1557.172, 2591.221), stdev = 578.550
[info]   CI (99.9%): [≈ 0, 3784.961] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 36.14% complete, ETA 01:26:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 747314.340 ops/s
[info] # Warmup Iteration   2: 920538.628 ops/s
[info] # Warmup Iteration   3: 930981.465 ops/s
[info] # Warmup Iteration   4: 944815.400 ops/s
[info] # Warmup Iteration   5: 944545.416 ops/s
[info] Iteration   1: 941489.337 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 943684.578 ops/s
[info]                  ·gc.alloc.rate:      0.170 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.284 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 944587.873 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 944946.295 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 939823.158 ops/s
[info]                  ·gc.alloc.rate:      0.078 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.130 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc":
[info]   942906.248 ±(99.9%) 8416.219 ops/s [Average]
[info]   (min, avg, max) = (939823.158, 942906.248, 944946.295), stdev = 2185.665
[info]   CI (99.9%): [934490.029, 951322.467] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.050 ±(99.9%) 0.290 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.050, 0.170), stdev = 0.075
[info]   CI (99.9%): [≈ 0, 0.340] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.083 ±(99.9%) 0.484 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻³, 0.083, 0.284), stdev = 0.126
[info]   CI (99.9%): [≈ 0, 0.567] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 36.35% complete, ETA 01:26:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 26628.344 ops/s
[info] # Warmup Iteration   2: 60928.769 ops/s
[info] # Warmup Iteration   3: 60617.515 ops/s
[info] # Warmup Iteration   4: 61364.036 ops/s
[info] # Warmup Iteration   5: 62414.882 ops/s
[info] Iteration   1: 62356.797 ops/s
[info]                  ·gc.alloc.rate:                   1369.750 MB/sec
[info]                  ·gc.alloc.rate.norm:              34580.276 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.525 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.600 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 34046.313 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 62257.065 ops/s
[info]                  ·gc.alloc.rate:                   1356.614 MB/sec
[info]                  ·gc.alloc.rate.norm:              34284.814 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.985 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 34117.283 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 60654.147 ops/s
[info]                  ·gc.alloc.rate:                   1342.997 MB/sec
[info]                  ·gc.alloc.rate.norm:              34849.878 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.540 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.816 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 35052.783 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 61026.686 ops/s
[info]                  ·gc.alloc.rate:                   1326.159 MB/sec
[info]                  ·gc.alloc.rate.norm:              34206.675 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.537 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1352.033 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 34874.081 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 60966.180 ops/s
[info]                  ·gc.alloc.rate:                   1351.042 MB/sec
[info]                  ·gc.alloc.rate.norm:              34869.142 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.537 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1353.895 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 34942.789 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson":
[info]   61452.175 ±(99.9%) 3056.517 ops/s [Average]
[info]   (min, avg, max) = (60654.147, 61452.175, 62356.797), stdev = 793.768
[info]   CI (99.9%): [58395.658, 64508.692] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1349.312 ±(99.9%) 62.387 MB/sec [Average]
[info]   (min, avg, max) = (1326.159, 1349.312, 1369.750), stdev = 16.202
[info]   CI (99.9%): [1286.925, 1411.699] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   34558.157 ±(99.9%) 1187.721 B/op [Average]
[info]   (min, avg, max) = (34206.675, 34558.157, 34869.142), stdev = 308.447
[info]   CI (99.9%): [33370.436, 35745.878] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   0.017 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   0.428 ±(99.9%) 0.921 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.428, 0.540), stdev = 0.239
[info]   CI (99.9%): [≈ 0, 1.349] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   1351.066 ±(99.9%) 7.762 MB/sec [Average]
[info]   (min, avg, max) = (1348.600, 1351.066, 1353.895), stdev = 2.016
[info]   CI (99.9%): [1343.303, 1358.828] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   34606.650 ±(99.9%) 1863.689 B/op [Average]
[info]   (min, avg, max) = (34046.313, 34606.650, 35052.783), stdev = 483.994
[info]   CI (99.9%): [32742.961, 36470.338] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writePlayJson:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 36.55% complete, ETA 01:25:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 21883.742 ops/s
[info] # Warmup Iteration   2: 29687.320 ops/s
[info] # Warmup Iteration   3: 30337.065 ops/s
[info] # Warmup Iteration   4: 29225.602 ops/s
[info] # Warmup Iteration   5: 29238.659 ops/s
[info] Iteration   1: 30458.860 ops/s
[info]                  ·gc.alloc.rate:      436.881 MB/sec
[info]                  ·gc.alloc.rate.norm: 22576.013 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 30331.936 ops/s
[info]                  ·gc.alloc.rate:                   449.370 MB/sec
[info]                  ·gc.alloc.rate.norm:              23311.544 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.052 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.700 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.636 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 34945.620 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 30342.385 ops/s
[info]                  ·gc.alloc.rate:                   453.515 MB/sec
[info]                  ·gc.alloc.rate.norm:              23521.987 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2.894 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     150.086 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.501 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 34931.802 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 30566.952 ops/s
[info]                  ·gc.alloc.rate:      438.496 MB/sec
[info]                  ·gc.alloc.rate.norm: 22576.016 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 30334.431 ops/s
[info]                  ·gc.alloc.rate:                   451.563 MB/sec
[info]                  ·gc.alloc.rate.norm:              23432.193 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.684 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 34906.452 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeUPickle":
[info]   30406.913 ±(99.9%) 400.865 ops/s [Average]
[info]   (min, avg, max) = (30331.936, 30406.913, 30566.952), stdev = 104.103
[info]   CI (99.9%): [30006.048, 30807.778] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeUPickle:·gc.alloc.rate":
[info]   445.965 ±(99.9%) 29.716 MB/sec [Average]
[info]   (min, avg, max) = (436.881, 445.965, 453.515), stdev = 7.717
[info]   CI (99.9%): [416.248, 475.681] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeUPickle:·gc.alloc.rate.norm":
[info]   23083.551 ±(99.9%) 1807.080 B/op [Average]
[info]   (min, avg, max) = (22576.013, 23083.551, 23521.987), stdev = 469.293
[info]   CI (99.9%): [21276.470, 24890.631] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeUPickle:·gc.churn.PS_Eden_Space":
[info]   0.589 ±(99.9%) 4.962 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.589, 2.894), stdev = 1.288
[info]   CI (99.9%): [≈ 0, 5.551] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   30.557 ±(99.9%) 257.334 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 30.557, 150.086), stdev = 66.829
[info]   CI (99.9%): [≈ 0, 287.891] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space":
[info]   403.964 ±(99.9%) 1419.992 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 403.964, 673.636), stdev = 368.767
[info]   CI (99.9%): [≈ 0, 1823.956] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   20956.775 ±(99.9%) 73666.037 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 20956.775, 34945.620), stdev = 19130.836
[info]   CI (99.9%): [≈ 0, 94622.812] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeUPickle:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalDatesBenchmark.writeUPickle:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 3.000), stdev = 1.304
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 36.75% complete, ETA 01:25:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5612.738 ops/s
[info] # Warmup Iteration   2: 16426.103 ops/s
[info] # Warmup Iteration   3: 16647.825 ops/s
[info] # Warmup Iteration   4: 16598.005 ops/s
[info] # Warmup Iteration   5: 16272.695 ops/s
[info] Iteration   1: 16666.627 ops/s
[info]                  ·gc.alloc.rate:                   1483.496 MB/sec
[info]                  ·gc.alloc.rate.norm:              140109.375 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5.897 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1346.347 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 127156.352 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 15984.479 ops/s
[info]                  ·gc.alloc.rate:                   1425.492 MB/sec
[info]                  ·gc.alloc.rate.norm:              140337.333 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1347.531 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 132662.242 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 16651.140 ops/s
[info]                  ·gc.alloc.rate:                   1487.720 MB/sec
[info]                  ·gc.alloc.rate.norm:              140598.013 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.968 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.447 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 127530.364 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 16611.261 ops/s
[info]                  ·gc.alloc.rate:                   1466.761 MB/sec
[info]                  ·gc.alloc.rate.norm:              138981.671 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.972 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.814 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 127995.192 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 16668.219 ops/s
[info]                  ·gc.alloc.rate:                   1512.105 MB/sec
[info]                  ·gc.alloc.rate.norm:              142740.617 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3.931 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2029.351 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 191567.979 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce":
[info]   16516.345 ±(99.9%) 1148.291 ops/s [Average]
[info]   (min, avg, max) = (15984.479, 16516.345, 16668.219), stdev = 298.207
[info]   CI (99.9%): [15368.055, 17664.636] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:·gc.alloc.rate":
[info]   1475.115 ±(99.9%) 123.726 MB/sec [Average]
[info]   (min, avg, max) = (1425.492, 1475.115, 1512.105), stdev = 32.131
[info]   CI (99.9%): [1351.389, 1598.840] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   140553.402 ±(99.9%) 5272.740 B/op [Average]
[info]   (min, avg, max) = (138981.671, 140553.402, 142740.617), stdev = 1369.314
[info]   CI (99.9%): [135280.662, 145826.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   0.029 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   2.754 ±(99.9%) 8.627 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.754, 5.897), stdev = 2.240
[info]   CI (99.9%): [≈ 0, 11.381] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1484.698 ±(99.9%) 1172.426 MB/sec [Average]
[info]   (min, avg, max) = (1346.347, 1484.698, 2029.351), stdev = 304.475
[info]   CI (99.9%): [312.272, 2657.124] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   141382.426 ±(99.9%) 108368.610 B/op [Average]
[info]   (min, avg, max) = (127156.352, 141382.426, 191567.979), stdev = 28142.984
[info]   CI (99.9%): [33013.816, 249751.036] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readCirce:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 36.95% complete, ETA 01:25:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3031.496 ops/s
[info] # Warmup Iteration   2: 15420.121 ops/s
[info] # Warmup Iteration   3: 16363.334 ops/s
[info] # Warmup Iteration   4: 16277.523 ops/s
[info] # Warmup Iteration   5: 16211.019 ops/s
[info] Iteration   1: 16395.572 ops/s
[info]                  ·gc.alloc.rate:                   1349.309 MB/sec
[info]                  ·gc.alloc.rate.norm:              129541.960 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3.997 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.095 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 129425.407 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 16372.207 ops/s
[info]                  ·gc.alloc.rate:                   1333.453 MB/sec
[info]                  ·gc.alloc.rate.norm:              128187.390 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.554 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 129735.266 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 16033.755 ops/s
[info]                  ·gc.alloc.rate:                   1318.586 MB/sec
[info]                  ·gc.alloc.rate.norm:              129440.605 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      675.054 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 66267.492 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 16411.832 ops/s
[info]                  ·gc.alloc.rate:                   1339.832 MB/sec
[info]                  ·gc.alloc.rate.norm:              128490.865 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.996 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.510 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 129514.946 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 16446.830 ops/s
[info]                  ·gc.alloc.rate:                   1346.624 MB/sec
[info]                  ·gc.alloc.rate.norm:              128889.129 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9.959 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1351.201 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 129327.135 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala":
[info]   16332.039 ±(99.9%) 650.539 ops/s [Average]
[info]   (min, avg, max) = (16033.755, 16332.039, 16446.830), stdev = 168.943
[info]   CI (99.9%): [15681.500, 16982.579] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1337.561 ±(99.9%) 47.248 MB/sec [Average]
[info]   (min, avg, max) = (1318.586, 1337.561, 1349.309), stdev = 12.270
[info]   CI (99.9%): [1290.312, 1384.809] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   128909.990 ±(99.9%) 2261.078 B/op [Average]
[info]   (min, avg, max) = (128187.390, 128909.990, 129541.960), stdev = 587.195
[info]   CI (99.9%): [126648.912, 131171.068] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.033 ±(99.9%) 0.166 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.104), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.199] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   3.190 ±(99.9%) 15.906 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.190, 9.959), stdev = 4.131
[info]   CI (99.9%): [≈ 0, 19.096] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1214.883 ±(99.9%) 1162.031 MB/sec [Average]
[info]   (min, avg, max) = (675.054, 1214.883, 1351.201), stdev = 301.776
[info]   CI (99.9%): [52.852, 2376.914] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   116854.049 ±(99.9%) 108892.927 B/op [Average]
[info]   (min, avg, max) = (66267.492, 116854.049, 129735.266), stdev = 28279.147
[info]   CI (99.9%): [7961.122, 225746.976] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 3.000), stdev = 0.707
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 37.15% complete, ETA 01:25:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 503319.649 ops/s
[info] # Warmup Iteration   2: 654461.282 ops/s
[info] # Warmup Iteration   3: 686010.432 ops/s
[info] # Warmup Iteration   4: 692923.648 ops/s
[info] # Warmup Iteration   5: 679326.624 ops/s
[info] Iteration   1: 670593.480 ops/s
[info]                  ·gc.alloc.rate:                   1800.214 MB/sec
[info]                  ·gc.alloc.rate.norm:              4226.150 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.098 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2019.536 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4741.027 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 676881.254 ops/s
[info]                  ·gc.alloc.rate:                   1801.552 MB/sec
[info]                  ·gc.alloc.rate.norm:              4189.424 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.145 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.089 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3134.918 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 691202.916 ops/s
[info]                  ·gc.alloc.rate:                   1866.014 MB/sec
[info]                  ·gc.alloc.rate.norm:              4249.632 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.095 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2024.707 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4611.039 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 692175.781 ops/s
[info]                  ·gc.alloc.rate:                   1867.752 MB/sec
[info]                  ·gc.alloc.rate.norm:              4247.514 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.142 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2027.369 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4610.503 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 691751.473 ops/s
[info]                  ·gc.alloc.rate:                   1853.508 MB/sec
[info]                  ·gc.alloc.rate.norm:              4217.999 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1352.632 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3078.163 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala":
[info]   684520.981 ±(99.9%) 38883.159 ops/s [Average]
[info]   (min, avg, max) = (670593.480, 684520.981, 692175.781), stdev = 10097.833
[info]   CI (99.9%): [645637.821, 723404.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1837.808 ±(99.9%) 131.523 MB/sec [Average]
[info]   (min, avg, max) = (1800.214, 1837.808, 1867.752), stdev = 34.156
[info]   CI (99.9%): [1706.285, 1969.331] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   4226.144 ±(99.9%) 94.773 B/op [Average]
[info]   (min, avg, max) = (4189.424, 4226.144, 4249.632), stdev = 24.612
[info]   CI (99.9%): [4131.371, 4320.917] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.042 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.062), stdev = 0.025
[info]   CI (99.9%): [≈ 0, 0.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.096 ±(99.9%) 0.226 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.096, 0.145), stdev = 0.059
[info]   CI (99.9%): [≈ 0, 0.322] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   1754.467 ±(99.9%) 1420.544 MB/sec [Average]
[info]   (min, avg, max) = (1348.089, 1754.467, 2027.369), stdev = 368.911
[info]   CI (99.9%): [333.922, 3175.011] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   4035.130 ±(99.9%) 3271.452 B/op [Average]
[info]   (min, avg, max) = (3078.163, 4035.130, 4741.027), stdev = 849.586
[info]   CI (99.9%): [763.679, 7306.582] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 37.35% complete, ETA 01:24:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1309.179 ops/s
[info] # Warmup Iteration   2: 10071.297 ops/s
[info] # Warmup Iteration   3: 11320.431 ops/s
[info] # Warmup Iteration   4: 11322.079 ops/s
[info] # Warmup Iteration   5: 11270.741 ops/s
[info] Iteration   1: 11350.321 ops/s
[info]                  ·gc.alloc.rate:                   1554.449 MB/sec
[info]                  ·gc.alloc.rate.norm:              215574.873 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.843 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 187061.008 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 11286.142 ops/s
[info]                  ·gc.alloc.rate:                   1549.867 MB/sec
[info]                  ·gc.alloc.rate.norm:              216105.169 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.903 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.958 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 188230.956 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 11272.128 ops/s
[info]                  ·gc.alloc.rate:                   1544.860 MB/sec
[info]                  ·gc.alloc.rate.norm:              215721.902 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5.813 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.661 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 188604.180 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 11312.011 ops/s
[info]                  ·gc.alloc.rate:                   1552.019 MB/sec
[info]                  ·gc.alloc.rate.norm:              215903.753 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.896 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2028.141 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 282137.838 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 11263.293 ops/s
[info]                  ·gc.alloc.rate:                   1566.061 MB/sec
[info]                  ·gc.alloc.rate.norm:              218869.321 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1353.248 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 189127.146 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson":
[info]   11296.779 ±(99.9%) 135.334 ops/s [Average]
[info]   (min, avg, max) = (11263.293, 11296.779, 11350.321), stdev = 35.146
[info]   CI (99.9%): [11161.445, 11432.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1553.451 ±(99.9%) 30.363 MB/sec [Average]
[info]   (min, avg, max) = (1544.860, 1553.451, 1566.061), stdev = 7.885
[info]   CI (99.9%): [1523.088, 1583.814] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   216435.004 ±(99.9%) 5295.600 B/op [Average]
[info]   (min, avg, max) = (215574.873, 216435.004, 218869.321), stdev = 1375.251
[info]   CI (99.9%): [211139.403, 221730.604] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   0.017 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   2.322 ±(99.9%) 9.360 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.322, 5.813), stdev = 2.431
[info]   CI (99.9%): [≈ 0, 11.682] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   1486.170 ±(99.9%) 1166.649 MB/sec [Average]
[info]   (min, avg, max) = (1348.843, 1486.170, 2028.141), stdev = 302.975
[info]   CI (99.9%): [319.521, 2652.820] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   207032.226 ±(99.9%) 161696.958 B/op [Average]
[info]   (min, avg, max) = (187061.008, 207032.226, 282137.838), stdev = 41992.187
[info]   CI (99.9%): [45335.267, 368729.184] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readPlayJson:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 37.55% complete, ETA 01:24:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4405.628 ops/s
[info] # Warmup Iteration   2: 14139.964 ops/s
[info] # Warmup Iteration   3: 15186.382 ops/s
[info] # Warmup Iteration   4: 14823.921 ops/s
[info] # Warmup Iteration   5: 14715.407 ops/s
[info] Iteration   1: 14994.761 ops/s
[info]                  ·gc.alloc.rate:                   1239.921 MB/sec
[info]                  ·gc.alloc.rate.norm:              130158.724 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.725 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 70618.241 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 15194.862 ops/s
[info]                  ·gc.alloc.rate:                   1270.507 MB/sec
[info]                  ·gc.alloc.rate.norm:              131607.175 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.522 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 139377.740 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 15117.005 ops/s
[info]                  ·gc.alloc.rate:                   1270.050 MB/sec
[info]                  ·gc.alloc.rate.norm:              132239.783 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.421 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 140087.534 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 15221.568 ops/s
[info]                  ·gc.alloc.rate:                   1275.590 MB/sec
[info]                  ·gc.alloc.rate.norm:              131897.341 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.152 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1346.209 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 139199.428 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 15295.850 ops/s
[info]                  ·gc.alloc.rate:                   1268.702 MB/sec
[info]                  ·gc.alloc.rate.norm:              130575.151 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6.426 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1347.199 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 138654.111 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readUPickle":
[info]   15164.810 ±(99.9%) 441.139 ops/s [Average]
[info]   (min, avg, max) = (14994.761, 15164.810, 15295.850), stdev = 114.562
[info]   CI (99.9%): [14723.671, 15605.948] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readUPickle:·gc.alloc.rate":
[info]   1264.954 ±(99.9%) 54.816 MB/sec [Average]
[info]   (min, avg, max) = (1239.921, 1264.954, 1275.590), stdev = 14.235
[info]   CI (99.9%): [1210.138, 1319.770] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readUPickle:·gc.alloc.rate.norm":
[info]   131295.635 ±(99.9%) 3423.710 B/op [Average]
[info]   (min, avg, max) = (130158.724, 131295.635, 132239.783), stdev = 889.127
[info]   CI (99.9%): [127871.924, 134719.345] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readUPickle:·gc.churn.PS_Eden_Space":
[info]   0.017 ±(99.9%) 0.104 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   1.716 ±(99.9%) 10.755 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.716, 6.426), stdev = 2.793
[info]   CI (99.9%): [≈ 0, 12.471] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readUPickle:·gc.churn.PS_Survivor_Space":
[info]   1211.415 ±(99.9%) 1159.574 MB/sec [Average]
[info]   (min, avg, max) = (672.725, 1211.415, 1347.199), stdev = 301.138
[info]   CI (99.9%): [51.841, 2370.989] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   125587.411 ±(99.9%) 118341.729 B/op [Average]
[info]   (min, avg, max) = (70618.241, 125587.411, 140087.534), stdev = 30732.971
[info]   CI (99.9%): [7245.682, 243929.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readUPickle:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.readUPickle:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 3.000), stdev = 0.707
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 37.75% complete, ETA 01:24:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 14389.914 ops/s
[info] # Warmup Iteration   2: 42210.432 ops/s
[info] # Warmup Iteration   3: 43108.128 ops/s
[info] # Warmup Iteration   4: 42388.361 ops/s
[info] # Warmup Iteration   5: 43355.610 ops/s
[info] Iteration   1: 43336.259 ops/s
[info]                  ·gc.alloc.rate:                   1387.950 MB/sec
[info]                  ·gc.alloc.rate.norm:              50418.102 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.512 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.266 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 49012.896 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 43342.404 ops/s
[info]                  ·gc.alloc.rate:                   1381.685 MB/sec
[info]                  ·gc.alloc.rate.norm:              50167.783 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.756 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.233 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 49025.777 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 42456.546 ops/s
[info]                  ·gc.alloc.rate:                   1360.171 MB/sec
[info]                  ·gc.alloc.rate.norm:              50427.321 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.717 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 50076.819 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 42446.559 ops/s
[info]                  ·gc.alloc.rate:                   1360.054 MB/sec
[info]                  ·gc.alloc.rate.norm:              50414.479 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.544 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1352.595 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 50138.012 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 43285.110 ops/s
[info]                  ·gc.alloc.rate:                   1373.349 MB/sec
[info]                  ·gc.alloc.rate.norm:              49945.067 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.271 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1353.300 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 49215.957 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce":
[info]   42973.376 ±(99.9%) 1836.331 ops/s [Average]
[info]   (min, avg, max) = (42446.559, 42973.376, 43342.404), stdev = 476.889
[info]   CI (99.9%): [41137.045, 44809.706] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:·gc.alloc.rate":
[info]   1372.642 ±(99.9%) 48.348 MB/sec [Average]
[info]   (min, avg, max) = (1360.054, 1372.642, 1387.950), stdev = 12.556
[info]   CI (99.9%): [1324.293, 1420.990] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   50274.550 ±(99.9%) 824.714 B/op [Average]
[info]   (min, avg, max) = (49945.067, 50274.550, 50427.321), stdev = 214.176
[info]   CI (99.9%): [49449.837, 51099.264] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   0.033 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1.216 ±(99.9%) 3.333 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.216, 2.271), stdev = 0.866
[info]   CI (99.9%): [≈ 0, 4.550] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   1351.222 ±(99.9%) 6.462 MB/sec [Average]
[info]   (min, avg, max) = (1349.266, 1351.222, 1353.300), stdev = 1.678
[info]   CI (99.9%): [1344.760, 1357.684] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   49493.892 ±(99.9%) 2180.320 B/op [Average]
[info]   (min, avg, max) = (49012.896, 49493.892, 50138.012), stdev = 566.222
[info]   CI (99.9%): [47313.572, 51674.212] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeCirce:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 3.000), stdev = 0.837
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 37.95% complete, ETA 01:24:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 17955.826 ops/s
[info] # Warmup Iteration   2: 52647.704 ops/s
[info] # Warmup Iteration   3: 53423.019 ops/s
[info] # Warmup Iteration   4: 53819.205 ops/s
[info] # Warmup Iteration   5: 53869.001 ops/s
[info] Iteration   1: 53174.629 ops/s
[info]                  ·gc.alloc.rate:                   1447.652 MB/sec
[info]                  ·gc.alloc.rate.norm:              42855.907 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.926 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 39933.266 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 52966.441 ops/s
[info]                  ·gc.alloc.rate:                   1446.827 MB/sec
[info]                  ·gc.alloc.rate.norm:              42987.988 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.619 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.368 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 40122.011 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 52433.383 ops/s
[info]                  ·gc.alloc.rate:                   1442.996 MB/sec
[info]                  ·gc.alloc.rate.norm:              43321.304 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.499 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1351.397 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 40571.333 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 52309.461 ops/s
[info]                  ·gc.alloc.rate:                   1439.009 MB/sec
[info]                  ·gc.alloc.rate.norm:              43282.398 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.626 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1352.968 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 40694.449 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 52129.037 ops/s
[info]                  ·gc.alloc.rate:                   1435.945 MB/sec
[info]                  ·gc.alloc.rate.norm:              43361.727 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.257 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1353.320 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 40866.670 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala":
[info]   52602.590 ±(99.9%) 1720.363 ops/s [Average]
[info]   (min, avg, max) = (52129.037, 52602.590, 53174.629), stdev = 446.773
[info]   CI (99.9%): [50882.228, 54322.953] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1442.486 ±(99.9%) 19.316 MB/sec [Average]
[info]   (min, avg, max) = (1435.945, 1442.486, 1447.652), stdev = 5.016
[info]   CI (99.9%): [1423.169, 1461.802] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   43161.865 ±(99.9%) 869.037 B/op [Average]
[info]   (min, avg, max) = (42855.907, 43161.865, 43361.727), stdev = 225.686
[info]   CI (99.9%): [42292.828, 44030.902] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.033 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.083), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1.000 ±(99.9%) 3.653 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.499), stdev = 0.949
[info]   CI (99.9%): [≈ 0, 4.653] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1351.396 ±(99.9%) 7.029 MB/sec [Average]
[info]   (min, avg, max) = (1348.926, 1351.396, 1353.320), stdev = 1.825
[info]   CI (99.9%): [1344.367, 1358.425] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   40437.546 ±(99.9%) 1518.328 B/op [Average]
[info]   (min, avg, max) = (39933.266, 40437.546, 40866.670), stdev = 394.305
[info]   CI (99.9%): [38919.218, 41955.874] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 38.15% complete, ETA 01:23:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 836803.303 ops/s
[info] # Warmup Iteration   2: 983750.769 ops/s
[info] # Warmup Iteration   3: 993800.052 ops/s
[info] # Warmup Iteration   4: 1009879.676 ops/s
[info] # Warmup Iteration   5: 1010042.162 ops/s
[info] Iteration   1: 1003221.602 ops/s
[info]                  ·gc.alloc.rate:                   944.344 MB/sec
[info]                  ·gc.alloc.rate.norm:              1481.498 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.196 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1346.208 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2111.945 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 1010700.765 ops/s
[info]                  ·gc.alloc.rate:                   940.904 MB/sec
[info]                  ·gc.alloc.rate.norm:              1465.360 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.714 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1047.683 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 1010407.062 ops/s
[info]                  ·gc.alloc.rate:                   937.939 MB/sec
[info]                  ·gc.alloc.rate.norm:              1461.231 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.682 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1047.982 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 1007799.054 ops/s
[info]                  ·gc.alloc.rate:                   948.521 MB/sec
[info]                  ·gc.alloc.rate.norm:              1481.361 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.098 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.541 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2101.409 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 1000525.810 ops/s
[info]                  ·gc.alloc.rate:                   925.616 MB/sec
[info]                  ·gc.alloc.rate.norm:              1455.611 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.008 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1058.363 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala":
[info]   1006530.859 ±(99.9%) 17331.445 ops/s [Average]
[info]   (min, avg, max) = (1000525.810, 1006530.859, 1010700.765), stdev = 4500.921
[info]   CI (99.9%): [989199.414, 1023862.304] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   939.465 ±(99.9%) 33.460 MB/sec [Average]
[info]   (min, avg, max) = (925.616, 939.465, 948.521), stdev = 8.689
[info]   CI (99.9%): [906.005, 972.924] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1469.012 ±(99.9%) 45.636 B/op [Average]
[info]   (min, avg, max) = (1455.611, 1469.012, 1481.498), stdev = 11.851
[info]   CI (99.9%): [1423.376, 1514.648] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.037 ±(99.9%) 0.215 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.125), stdev = 0.056
[info]   CI (99.9%): [≈ 0, 0.253] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.059 ±(99.9%) 0.337 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.059, 0.196), stdev = 0.088
[info]   CI (99.9%): [≈ 0, 0.396] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   942.030 ±(99.9%) 1419.568 MB/sec [Average]
[info]   (min, avg, max) = (672.682, 942.030, 1346.208), stdev = 368.657
[info]   CI (99.9%): [≈ 0, 2361.599] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1473.477 ±(99.9%) 2225.897 B/op [Average]
[info]   (min, avg, max) = (1047.683, 1473.477, 2111.945), stdev = 578.058
[info]   CI (99.9%): [≈ 0, 3699.373] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 38.35% complete, ETA 01:23:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 896114.073 ops/s
[info] # Warmup Iteration   2: 1067191.141 ops/s
[info] # Warmup Iteration   3: 1108104.904 ops/s
[info] # Warmup Iteration   4: 1108318.970 ops/s
[info] # Warmup Iteration   5: 1107048.906 ops/s
[info] Iteration   1: 1108891.724 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1108134.643 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1107704.484 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1108714.133 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1107967.500 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc":
[info]   1108282.497 ±(99.9%) 1937.462 ops/s [Average]
[info]   (min, avg, max) = (1107704.484, 1108282.497, 1108891.724), stdev = 503.153
[info]   CI (99.9%): [1106345.035, 1110219.959] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻³ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 38.55% complete, ETA 01:23:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 15568.236 ops/s
[info] # Warmup Iteration   2: 39260.328 ops/s
[info] # Warmup Iteration   3: 38708.876 ops/s
[info] # Warmup Iteration   4: 38477.550 ops/s
[info] # Warmup Iteration   5: 39296.566 ops/s
[info] Iteration   1: 39345.404 ops/s
[info]                  ·gc.alloc.rate:                   1237.921 MB/sec
[info]                  ·gc.alloc.rate.norm:              49511.278 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.665 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1347.810 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 53906.362 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 39118.816 ops/s
[info]                  ·gc.alloc.rate:                   1219.416 MB/sec
[info]                  ·gc.alloc.rate.norm:              49054.022 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.675 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.111 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 54271.346 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 39093.195 ops/s
[info]                  ·gc.alloc.rate:                   1197.111 MB/sec
[info]                  ·gc.alloc.rate.norm:              48200.599 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.723 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 27167.127 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 39249.386 ops/s
[info]                  ·gc.alloc.rate:                   1214.561 MB/sec
[info]                  ·gc.alloc.rate.norm:              48699.965 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.669 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.290 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 54142.282 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 39272.787 ops/s
[info]                  ·gc.alloc.rate:                   1214.728 MB/sec
[info]                  ·gc.alloc.rate.norm:              48688.817 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3.337 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1351.361 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 54165.348 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson":
[info]   39215.918 ±(99.9%) 411.185 ops/s [Average]
[info]   (min, avg, max) = (39093.195, 39215.918, 39345.404), stdev = 106.783
[info]   CI (99.9%): [38804.733, 39627.102] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1216.747 ±(99.9%) 56.128 MB/sec [Average]
[info]   (min, avg, max) = (1197.111, 1216.747, 1237.921), stdev = 14.576
[info]   CI (99.9%): [1160.619, 1272.875] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   48830.936 ±(99.9%) 1873.911 B/op [Average]
[info]   (min, avg, max) = (48200.599, 48830.936, 49511.278), stdev = 486.649
[info]   CI (99.9%): [46957.025, 50704.848] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   0.042 ±(99.9%) 0.113 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.083), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   1.669 ±(99.9%) 4.543 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.669, 3.337), stdev = 1.180
[info]   CI (99.9%): [≈ 0, 6.212] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   1214.659 ±(99.9%) 1162.264 MB/sec [Average]
[info]   (min, avg, max) = (674.723, 1214.659, 1351.361), stdev = 301.836
[info]   CI (99.9%): [52.395, 2376.923] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   48730.493 ±(99.9%) 46419.610 B/op [Average]
[info]   (min, avg, max) = (27167.127, 48730.493, 54271.346), stdev = 12055.025
[info]   CI (99.9%): [2310.883, 95150.103] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writePlayJson:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 38.76% complete, ETA 01:22:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 23783.977 ops/s
[info] # Warmup Iteration   2: 33633.160 ops/s
[info] # Warmup Iteration   3: 32749.947 ops/s
[info] # Warmup Iteration   4: 33457.744 ops/s
[info] # Warmup Iteration   5: 34043.683 ops/s
[info] Iteration   1: 34156.490 ops/s
[info]                  ·gc.alloc.rate:                   491.087 MB/sec
[info]                  ·gc.alloc.rate.norm:              22632.679 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.000 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 31062.552 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 34076.242 ops/s
[info]                  ·gc.alloc.rate:                   496.604 MB/sec
[info]                  ·gc.alloc.rate.norm:              22938.733 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2.841 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     131.238 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.056 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 31135.465 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 34265.964 ops/s
[info]                  ·gc.alloc.rate:      480.325 MB/sec
[info]                  ·gc.alloc.rate.norm: 22064.012 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 34061.743 ops/s
[info]                  ·gc.alloc.rate:                   493.183 MB/sec
[info]                  ·gc.alloc.rate.norm:              22790.678 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.372 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 31117.481 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 34240.516 ops/s
[info]                  ·gc.alloc.rate:                   493.019 MB/sec
[info]                  ·gc.alloc.rate.norm:              22665.692 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.323 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 30954.838 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeUPickle":
[info]   34160.191 ±(99.9%) 357.059 ops/s [Average]
[info]   (min, avg, max) = (34061.743, 34160.191, 34265.964), stdev = 92.727
[info]   CI (99.9%): [33803.132, 34517.250] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeUPickle:·gc.alloc.rate":
[info]   490.844 ±(99.9%) 23.899 MB/sec [Average]
[info]   (min, avg, max) = (480.325, 490.844, 496.604), stdev = 6.206
[info]   CI (99.9%): [466.945, 514.742] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeUPickle:·gc.alloc.rate.norm":
[info]   22618.359 ±(99.9%) 1280.129 B/op [Average]
[info]   (min, avg, max) = (22064.012, 22618.359, 22938.733), stdev = 332.445
[info]   CI (99.9%): [21338.230, 23898.487] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeUPickle:·gc.churn.PS_Eden_Space":
[info]   0.568 ±(99.9%) 4.893 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.568, 2.841), stdev = 1.271
[info]   CI (99.9%): [≈ 0, 5.461] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   26.248 ±(99.9%) 226.000 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 26.248, 131.238), stdev = 58.692
[info]   CI (99.9%): [≈ 0, 252.248] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space":
[info]   538.950 ±(99.9%) 1160.131 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 538.950, 674.056), stdev = 301.282
[info]   CI (99.9%): [≈ 0, 1699.081] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   24854.067 ±(99.9%) 53500.941 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 24854.067, 31135.465), stdev = 13894.024
[info]   CI (99.9%): [≈ 0, 78355.008] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeUPickle:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLocalTimesBenchmark.writeUPickle:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.600, 3.000), stdev = 1.342
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 38.96% complete, ETA 01:22:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 71074.167 ops/s
[info] # Warmup Iteration   2: 121492.741 ops/s
[info] # Warmup Iteration   3: 126068.423 ops/s
[info] # Warmup Iteration   4: 126586.596 ops/s
[info] # Warmup Iteration   5: 123890.147 ops/s
[info] Iteration   1: 124078.225 ops/s
[info]                  ·gc.alloc.rate:                   1769.690 MB/sec
[info]                  ·gc.alloc.rate.norm:              22452.923 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.940 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17076.602 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 126500.571 ops/s
[info]                  ·gc.alloc.rate:                   1816.499 MB/sec
[info]                  ·gc.alloc.rate.norm:              22604.109 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.295 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2020.710 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 25145.270 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 125087.350 ops/s
[info]                  ·gc.alloc.rate:                   1798.110 MB/sec
[info]                  ·gc.alloc.rate.norm:              22613.617 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.523 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2023.006 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 25441.972 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 126452.480 ops/s
[info]                  ·gc.alloc.rate:                   1817.358 MB/sec
[info]                  ·gc.alloc.rate.norm:              22624.046 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.631 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16813.828 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 124763.149 ops/s
[info]                  ·gc.alloc.rate:                   1802.180 MB/sec
[info]                  ·gc.alloc.rate.norm:              22739.342 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.050 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2028.259 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 25591.933 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce":
[info]   125376.355 ±(99.9%) 4114.333 ops/s [Average]
[info]   (min, avg, max) = (124078.225, 125376.355, 126500.571), stdev = 1068.479
[info]   CI (99.9%): [121262.022, 129490.688] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:·gc.alloc.rate":
[info]   1800.767 ±(99.9%) 74.507 MB/sec [Average]
[info]   (min, avg, max) = (1769.690, 1800.767, 1817.358), stdev = 19.349
[info]   CI (99.9%): [1726.260, 1875.275] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   22606.807 ±(99.9%) 392.674 B/op [Average]
[info]   (min, avg, max) = (22452.923, 22606.807, 22739.342), stdev = 101.976
[info]   CI (99.9%): [22214.133, 22999.482] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   0.046 ±(99.9%) 0.183 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.104), stdev = 0.047
[info]   CI (99.9%): [≈ 0, 0.229] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.574 ±(99.9%) 2.285 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.574, 1.295), stdev = 0.593
[info]   CI (99.9%): [≈ 0, 2.859] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1753.709 ±(99.9%) 1425.174 MB/sec [Average]
[info]   (min, avg, max) = (1345.940, 1753.709, 2028.259), stdev = 370.113
[info]   CI (99.9%): [328.535, 3178.883] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   22013.921 ±(99.9%) 17831.552 B/op [Average]
[info]   (min, avg, max) = (16813.828, 22013.921, 25591.933), stdev = 4630.797
[info]   CI (99.9%): [4182.369, 39845.473] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readCirce:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 39.16% complete, ETA 01:22:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.775 ops/s
[info] # Warmup Iteration   2: 339031.552 ops/s
[info] # Warmup Iteration   3: 341676.530 ops/s
[info] # Warmup Iteration   4: 347146.571 ops/s
[info] # Warmup Iteration   5: 348475.318 ops/s
[info] Iteration   1: 350020.491 ops/s
[info]                  ·gc.alloc.rate:                   721.702 MB/sec
[info]                  ·gc.alloc.rate.norm:              3245.337 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      670.768 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3016.300 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 355667.929 ops/s
[info]                  ·gc.alloc.rate:                   736.071 MB/sec
[info]                  ·gc.alloc.rate.norm:              3257.748 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      670.695 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2968.399 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 354783.254 ops/s
[info]                  ·gc.alloc.rate:                   729.494 MB/sec
[info]                  ·gc.alloc.rate.norm:              3236.466 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.092 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      670.045 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2972.714 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 356097.092 ops/s
[info]                  ·gc.alloc.rate:                   733.856 MB/sec
[info]                  ·gc.alloc.rate.norm:              3243.659 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.276 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      670.071 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2961.730 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 355572.138 ops/s
[info]                  ·gc.alloc.rate:                   737.965 MB/sec
[info]                  ·gc.alloc.rate.norm:              3266.732 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      670.045 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2966.069 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava":
[info]   354428.181 ±(99.9%) 9662.102 ops/s [Average]
[info]   (min, avg, max) = (350020.491, 354428.181, 356097.092), stdev = 2509.217
[info]   CI (99.9%): [344766.079, 364090.283] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   731.818 ±(99.9%) 24.938 MB/sec [Average]
[info]   (min, avg, max) = (721.702, 731.818, 737.965), stdev = 6.476
[info]   CI (99.9%): [706.880, 756.756] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   3249.989 ±(99.9%) 46.572 B/op [Average]
[info]   (min, avg, max) = (3236.466, 3249.989, 3266.732), stdev = 12.095
[info]   CI (99.9%): [3203.416, 3296.561] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   0.017 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   0.074 ±(99.9%) 0.462 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.074, 0.276), stdev = 0.120
[info]   CI (99.9%): [≈ 0, 0.536] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   670.325 ±(99.9%) 1.434 MB/sec [Average]
[info]   (min, avg, max) = (670.045, 670.325, 670.768), stdev = 0.372
[info]   CI (99.9%): [668.891, 671.759] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   2977.042 ±(99.9%) 85.876 B/op [Average]
[info]   (min, avg, max) = (2961.730, 2977.042, 3016.300), stdev = 22.302
[info]   CI (99.9%): [2891.166, 3062.918] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readDslJsonJava:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 39.36% complete, ETA 01:22:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 103409.808 ops/s
[info] # Warmup Iteration   2: 244936.973 ops/s
[info] # Warmup Iteration   3: 248734.487 ops/s
[info] # Warmup Iteration   4: 246880.106 ops/s
[info] # Warmup Iteration   5: 248170.043 ops/s
[info] Iteration   1: 246851.967 ops/s
[info]                  ·gc.alloc.rate:                   560.822 MB/sec
[info]                  ·gc.alloc.rate.norm:              3576.975 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.770 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4.911 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.230 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4293.926 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 248166.634 ops/s
[info]                  ·gc.alloc.rate:                   557.852 MB/sec
[info]                  ·gc.alloc.rate.norm:              3537.050 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.264 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.302 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4275.401 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 247921.888 ops/s
[info]                  ·gc.alloc.rate:                   553.721 MB/sec
[info]                  ·gc.alloc.rate.norm:              3515.303 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.107 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4279.574 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 249204.825 ops/s
[info]                  ·gc.alloc.rate:      540.831 MB/sec
[info]                  ·gc.alloc.rate.norm: 3416.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 247865.022 ops/s
[info]                  ·gc.alloc.rate:                   554.059 MB/sec
[info]                  ·gc.alloc.rate.norm:              3518.103 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.397 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.099 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4280.316 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala":
[info]   248002.067 ±(99.9%) 3234.111 ops/s [Average]
[info]   (min, avg, max) = (246851.967, 248002.067, 249204.825), stdev = 839.888
[info]   CI (99.9%): [244767.956, 251236.178] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   553.457 ±(99.9%) 29.414 MB/sec [Average]
[info]   (min, avg, max) = (540.831, 553.457, 560.822), stdev = 7.639
[info]   CI (99.9%): [524.043, 582.871] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   3512.687 ±(99.9%) 228.706 B/op [Average]
[info]   (min, avg, max) = (3416.002, 3512.687, 3576.975), stdev = 59.394
[info]   CI (99.9%): [3283.980, 3741.393] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.175 ±(99.9%) 1.285 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.175, 0.770), stdev = 0.334
[info]   CI (99.9%): [≈ 0, 1.460] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1.114 ±(99.9%) 8.199 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.114, 4.911), stdev = 2.129
[info]   CI (99.9%): [≈ 0, 9.313] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   539.147 ±(99.9%) 1160.557 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 539.147, 674.302), stdev = 301.393
[info]   CI (99.9%): [≈ 0, 1699.704] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   3425.844 ±(99.9%) 7374.436 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3425.844, 4293.926), stdev = 1915.118
[info]   CI (99.9%): [≈ 0, 10800.279] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJacksonScala:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 0.707
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 39.56% complete, ETA 01:21:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 389119.930 ops/s
[info] # Warmup Iteration   2: 455325.574 ops/s
[info] # Warmup Iteration   3: 472001.154 ops/s
[info] # Warmup Iteration   4: 470746.068 ops/s
[info] # Warmup Iteration   5: 475281.456 ops/s
[info] Iteration   1: 475455.438 ops/s
[info]                  ·gc.alloc.rate:                   622.612 MB/sec
[info]                  ·gc.alloc.rate.norm:              2061.422 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2.362 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7.821 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      675.987 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2238.144 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 476120.209 ops/s
[info]                  ·gc.alloc.rate:                   618.470 MB/sec
[info]                  ·gc.alloc.rate.norm:              2044.664 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      675.394 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2232.854 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 475772.283 ops/s
[info]                  ·gc.alloc.rate:                   623.937 MB/sec
[info]                  ·gc.alloc.rate.norm:              2064.244 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      675.401 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2234.506 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 452730.673 ops/s
[info]                  ·gc.alloc.rate:                   598.381 MB/sec
[info]                  ·gc.alloc.rate.norm:              2080.360 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.076 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2343.528 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 477229.861 ops/s
[info]                  ·gc.alloc.rate:      601.580 MB/sec
[info]                  ·gc.alloc.rate.norm: 1984.192 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala":
[info]   471461.693 ±(99.9%) 40402.221 ops/s [Average]
[info]   (min, avg, max) = (452730.673, 471461.693, 477229.861), stdev = 10492.329
[info]   CI (99.9%): [431059.472, 511863.914] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   612.996 ±(99.9%) 46.610 MB/sec [Average]
[info]   (min, avg, max) = (598.381, 612.996, 623.937), stdev = 12.104
[info]   CI (99.9%): [566.386, 659.606] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   2046.976 ±(99.9%) 143.673 B/op [Average]
[info]   (min, avg, max) = (1984.192, 2046.976, 2080.360), stdev = 37.311
[info]   CI (99.9%): [1903.303, 2190.650] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.472 ±(99.9%) 4.068 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.472, 2.362), stdev = 1.056
[info]   CI (99.9%): [≈ 0, 4.540] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1.564 ±(99.9%) 13.468 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.564, 7.821), stdev = 3.498
[info]   CI (99.9%): [≈ 0, 15.033] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   540.172 ±(99.9%) 1162.763 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 540.172, 675.987), stdev = 301.966
[info]   CI (99.9%): [≈ 0, 1702.935] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1809.806 ±(99.9%) 3899.939 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1809.806, 2343.528), stdev = 1012.802
[info]   CI (99.9%): [≈ 0, 5709.746] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readJsoniterScala:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 0.707
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 39.76% complete, ETA 01:21:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 13098.393 ops/s
[info] # Warmup Iteration   2: 70572.505 ops/s
[info] # Warmup Iteration   3: 71657.266 ops/s
[info] # Warmup Iteration   4: 72727.928 ops/s
[info] # Warmup Iteration   5: 72783.693 ops/s
[info] Iteration   1: 73360.382 ops/s
[info]                  ·gc.alloc.rate:                   3063.779 MB/sec
[info]                  ·gc.alloc.rate.norm:              65715.962 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.786 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2708.387 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 58093.051 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 73476.818 ops/s
[info]                  ·gc.alloc.rate:                   3111.184 MB/sec
[info]                  ·gc.alloc.rate.norm:              66636.219 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.783 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3390.728 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 72623.576 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 72454.397 ops/s
[info]                  ·gc.alloc.rate:                   3049.833 MB/sec
[info]                  ·gc.alloc.rate.norm:              66254.624 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.904 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2716.231 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 59007.451 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 73892.767 ops/s
[info]                  ·gc.alloc.rate:                   3140.829 MB/sec
[info]                  ·gc.alloc.rate.norm:              66905.472 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.217 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3398.868 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 72402.183 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 73243.505 ops/s
[info]                  ·gc.alloc.rate:                   3088.243 MB/sec
[info]                  ·gc.alloc.rate.norm:              66372.537 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.342 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2720.682 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 58472.909 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson":
[info]   73285.574 ±(99.9%) 2022.485 ops/s [Average]
[info]   (min, avg, max) = (72454.397, 73285.574, 73892.767), stdev = 525.233
[info]   CI (99.9%): [71263.089, 75308.058] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3090.774 ±(99.9%) 140.606 MB/sec [Average]
[info]   (min, avg, max) = (3049.833, 3090.774, 3140.829), stdev = 36.515
[info]   CI (99.9%): [2950.168, 3231.379] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   66376.963 ±(99.9%) 1720.385 B/op [Average]
[info]   (min, avg, max) = (65715.962, 66376.963, 66905.472), stdev = 446.779
[info]   CI (99.9%): [64656.578, 68097.348] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   0.075 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.075, 0.104), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.166] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   1.607 ±(99.9%) 1.925 B/op [Average]
[info]   (min, avg, max) = (0.904, 1.607, 2.217), stdev = 0.500
[info]   CI (99.9%): [≈ 0, 3.531] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   2986.979 ±(99.9%) 1433.683 MB/sec [Average]
[info]   (min, avg, max) = (2708.387, 2986.979, 3398.868), stdev = 372.323
[info]   CI (99.9%): [1553.296, 4420.662] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   64119.834 ±(99.9%) 29530.778 B/op [Average]
[info]   (min, avg, max) = (58093.051, 64119.834, 72623.576), stdev = 7669.049
[info]   CI (99.9%): [34589.056, 93650.612] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.readPlayJson:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 39.96% complete, ETA 01:21:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 67211.668 ops/s
[info] # Warmup Iteration   2: 121242.096 ops/s
[info] # Warmup Iteration   3: 121072.034 ops/s
[info] # Warmup Iteration   4: 125529.285 ops/s
[info] # Warmup Iteration   5: 126105.587 ops/s
[info] Iteration   1: 126035.408 ops/s
[info]                  ·gc.alloc.rate:                   699.625 MB/sec
[info]                  ·gc.alloc.rate.norm:              8735.957 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.780 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.829 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8426.339 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 125983.991 ops/s
[info]                  ·gc.alloc.rate:                   699.129 MB/sec
[info]                  ·gc.alloc.rate.norm:              8732.661 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.878 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8429.750 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 121040.270 ops/s
[info]                  ·gc.alloc.rate:                   681.191 MB/sec
[info]                  ·gc.alloc.rate.norm:              8854.346 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      675.016 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8774.078 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 125675.574 ops/s
[info]                  ·gc.alloc.rate:                   698.866 MB/sec
[info]                  ·gc.alloc.rate.norm:              8752.712 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.261 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.744 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8450.607 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 125968.989 ops/s
[info]                  ·gc.alloc.rate:                   708.268 MB/sec
[info]                  ·gc.alloc.rate.norm:              8850.806 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.664 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8430.887 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce":
[info]   124940.846 ±(99.9%) 8413.814 ops/s [Average]
[info]   (min, avg, max) = (121040.270, 124940.846, 126035.408), stdev = 2185.041
[info]   CI (99.9%): [116527.032, 133354.660] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:·gc.alloc.rate":
[info]   697.416 ±(99.9%) 38.067 MB/sec [Average]
[info]   (min, avg, max) = (681.191, 697.416, 708.268), stdev = 9.886
[info]   CI (99.9%): [659.349, 735.482] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   8785.296 ±(99.9%) 238.352 B/op [Average]
[info]   (min, avg, max) = (8732.661, 8785.296, 8854.346), stdev = 61.899
[info]   CI (99.9%): [8546.945, 9023.648] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   0.017 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.208 ±(99.9%) 1.305 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.208, 0.780), stdev = 0.339
[info]   CI (99.9%): [≈ 0, 1.513] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   674.826 ±(99.9%) 0.515 MB/sec [Average]
[info]   (min, avg, max) = (674.664, 674.826, 675.016), stdev = 0.134
[info]   CI (99.9%): [674.311, 675.341] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   8502.332 ±(99.9%) 586.099 B/op [Average]
[info]   (min, avg, max) = (8426.339, 8502.332, 8774.078), stdev = 152.208
[info]   CI (99.9%): [7916.234, 9088.431] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeCirce:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 40.16% complete, ETA 01:21:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.745 ops/s
[info] # Warmup Iteration   2: 197928.015 ops/s
[info] # Warmup Iteration   3: 202463.662 ops/s
[info] # Warmup Iteration   4: 195889.861 ops/s
[info] # Warmup Iteration   5: 206576.780 ops/s
[info] Iteration   1: 205354.013 ops/s
[info]                  ·gc.alloc.rate:                   166.529 MB/sec
[info]                  ·gc.alloc.rate.norm:              1276.224 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.033 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.256 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      511.639 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3921.036 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 205875.006 ops/s
[info]                  ·gc.alloc.rate:      161.578 MB/sec
[info]                  ·gc.alloc.rate.norm: 1235.452 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 205982.206 ops/s
[info]                  ·gc.alloc.rate:      161.227 MB/sec
[info]                  ·gc.alloc.rate.norm: 1232.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 204965.762 ops/s
[info]                  ·gc.alloc.rate:                   166.530 MB/sec
[info]                  ·gc.alloc.rate.norm:              1278.869 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      511.562 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3928.554 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 205619.032 ops/s
[info]                  ·gc.alloc.rate:      160.943 MB/sec
[info]                  ·gc.alloc.rate.norm: 1232.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava":
[info]   205559.204 ±(99.9%) 1583.591 ops/s [Average]
[info]   (min, avg, max) = (204965.762, 205559.204, 205982.206), stdev = 411.254
[info]   CI (99.9%): [203975.613, 207142.795] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   163.361 ±(99.9%) 11.169 MB/sec [Average]
[info]   (min, avg, max) = (160.943, 163.361, 166.530), stdev = 2.901
[info]   CI (99.9%): [152.192, 174.531] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   1250.910 ±(99.9%) 93.857 B/op [Average]
[info]   (min, avg, max) = (1232.002, 1250.910, 1278.869), stdev = 24.374
[info]   CI (99.9%): [1157.052, 1344.767] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   0.007 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.007, 0.033), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.064] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   0.051 ±(99.9%) 0.440 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.051, 0.256), stdev = 0.114
[info]   CI (99.9%): [≈ 0, 0.492] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   204.640 ±(99.9%) 1079.009 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 204.640, 511.639), stdev = 280.215
[info]   CI (99.9%): [≈ 0, 1283.649] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   1569.918 ±(99.9%) 8277.731 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1569.918, 3928.554), stdev = 2149.700
[info]   CI (99.9%): [≈ 0, 9847.649] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:·gc.count":
[info]   2.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.000), stdev = 0.548
[info]   CI (99.9%): [2.000, 2.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeDslJsonJava:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 4.000), stdev = 1.949
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 40.36% complete, ETA 01:20:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 208021.576 ops/s
[info] # Warmup Iteration   2: 396203.860 ops/s
[info] # Warmup Iteration   3: 396429.005 ops/s
[info] # Warmup Iteration   4: 403089.169 ops/s
[info] # Warmup Iteration   5: 404657.512 ops/s
[info] Iteration   1: 401846.982 ops/s
[info]                  ·gc.alloc.rate:                   407.498 MB/sec
[info]                  ·gc.alloc.rate.norm:              1596.108 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.392 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2637.576 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 404845.029 ops/s
[info]                  ·gc.alloc.rate:      397.216 MB/sec
[info]                  ·gc.alloc.rate.norm: 1544.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 400614.685 ops/s
[info]                  ·gc.alloc.rate:                   416.628 MB/sec
[info]                  ·gc.alloc.rate.norm:              1636.941 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.708 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.780 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.357 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2645.639 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 401445.276 ops/s
[info]                  ·gc.alloc.rate:                   416.687 MB/sec
[info]                  ·gc.alloc.rate.norm:              1633.846 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.082 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.022 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2642.868 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 402058.847 ops/s
[info]                  ·gc.alloc.rate:      394.369 MB/sec
[info]                  ·gc.alloc.rate.norm: 1544.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala":
[info]   402162.164 ±(99.9%) 6153.926 ops/s [Average]
[info]   (min, avg, max) = (400614.685, 402162.164, 404845.029), stdev = 1598.155
[info]   CI (99.9%): [396008.238, 408316.089] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   406.479 ±(99.9%) 40.417 MB/sec [Average]
[info]   (min, avg, max) = (394.369, 406.479, 416.687), stdev = 10.496
[info]   CI (99.9%): [366.062, 446.896] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1590.979 ±(99.9%) 176.356 B/op [Average]
[info]   (min, avg, max) = (1544.001, 1590.979, 1636.941), stdev = 45.799
[info]   CI (99.9%): [1414.623, 1767.336] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.146 ±(99.9%) 1.210 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.146, 0.708), stdev = 0.314
[info]   CI (99.9%): [≈ 0, 1.356] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.572 ±(99.9%) 4.755 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.572, 2.780), stdev = 1.235
[info]   CI (99.9%): [≈ 0, 5.327] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   404.154 ±(99.9%) 1420.659 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 404.154, 674.022), stdev = 368.941
[info]   CI (99.9%): [≈ 0, 1824.813] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1585.217 ±(99.9%) 5572.271 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1585.217, 2645.639), stdev = 1447.101
[info]   CI (99.9%): [≈ 0, 7157.487] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJacksonScala:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 1.000
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 40.56% complete, ETA 01:20:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 369712.182 ops/s
[info] # Warmup Iteration   2: 400561.021 ops/s
[info] # Warmup Iteration   3: 441894.508 ops/s
[info] # Warmup Iteration   4: 444774.886 ops/s
[info] # Warmup Iteration   5: 422162.045 ops/s
[info] Iteration   1: 436862.855 ops/s
[info]                  ·gc.alloc.rate:                   354.145 MB/sec
[info]                  ·gc.alloc.rate.norm:              1275.587 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      511.728 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1843.182 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 445061.914 ops/s
[info]                  ·gc.alloc.rate:      348.448 MB/sec
[info]                  ·gc.alloc.rate.norm: 1232.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 442851.035 ops/s
[info]                  ·gc.alloc.rate:                   360.890 MB/sec
[info]                  ·gc.alloc.rate.norm:              1282.807 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.074 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.037 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2395.906 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 443966.347 ops/s
[info]                  ·gc.alloc.rate:      347.551 MB/sec
[info]                  ·gc.alloc.rate.norm: 1232.282 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 442047.092 ops/s
[info]                  ·gc.alloc.rate:                   371.424 MB/sec
[info]                  ·gc.alloc.rate.norm:              1322.544 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2.716 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9.672 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.075 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2400.204 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala":
[info]   442157.848 ±(99.9%) 12212.369 ops/s [Average]
[info]   (min, avg, max) = (436862.855, 442157.848, 445061.914), stdev = 3171.513
[info]   CI (99.9%): [429945.479, 454370.217] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   356.492 ±(99.9%) 38.142 MB/sec [Average]
[info]   (min, avg, max) = (347.551, 356.492, 371.424), stdev = 9.905
[info]   CI (99.9%): [318.349, 394.634] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1269.044 ±(99.9%) 146.856 B/op [Average]
[info]   (min, avg, max) = (1232.002, 1269.044, 1322.544), stdev = 38.138
[info]   CI (99.9%): [1122.189, 1415.900] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.547 ±(99.9%) 4.669 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.547, 2.716), stdev = 1.213
[info]   CI (99.9%): [≈ 0, 5.216] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1.949 ±(99.9%) 16.625 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.949, 9.672), stdev = 4.317
[info]   CI (99.9%): [≈ 0, 18.574] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   371.968 ±(99.9%) 1332.188 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 371.968, 674.075), stdev = 345.965
[info]   CI (99.9%): [≈ 0, 1704.156] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1327.858 ±(99.9%) 4748.417 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1327.858, 2400.204), stdev = 1233.149
[info]   CI (99.9%): [≈ 0, 6076.276] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScala:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.600, 3.000), stdev = 1.517
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 40.76% complete, ETA 01:20:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 359668.070 ops/s
[info] # Warmup Iteration   2: 457495.148 ops/s
[info] # Warmup Iteration   3: 446338.270 ops/s
[info] # Warmup Iteration   4: 469013.692 ops/s
[info] # Warmup Iteration   5: 469113.484 ops/s
[info] Iteration   1: 469296.857 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 469271.203 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 464025.792 ops/s
[info]                  ·gc.alloc.rate:      2.856 MB/sec
[info]                  ·gc.alloc.rate.norm: 9.686 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 468865.496 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 469054.649 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc":
[info]   468102.799 ±(99.9%) 8802.039 ops/s [Average]
[info]   (min, avg, max) = (464025.792, 468102.799, 469296.857), stdev = 2285.862
[info]   CI (99.9%): [459300.760, 476904.838] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.571 ±(99.9%) 4.917 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.571, 2.856), stdev = 1.277
[info]   CI (99.9%): [≈ 0, 5.489] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   1.938 ±(99.9%) 16.679 B/op [Average]
[info]   (min, avg, max) = (0.001, 1.938, 9.686), stdev = 4.331
[info]   CI (99.9%): [≈ 0, 18.617] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 40.96% complete, ETA 01:19:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 9628.664 ops/s
[info] # Warmup Iteration   2: 25481.831 ops/s
[info] # Warmup Iteration   3: 26647.006 ops/s
[info] # Warmup Iteration   4: 26563.992 ops/s
[info] # Warmup Iteration   5: 26559.116 ops/s
[info] Iteration   1: 26768.923 ops/s
[info]                  ·gc.alloc.rate:                   1364.585 MB/sec
[info]                  ·gc.alloc.rate.norm:              80243.910 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.224 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.037 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 79270.826 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 26714.082 ops/s
[info]                  ·gc.alloc.rate:                   1363.243 MB/sec
[info]                  ·gc.alloc.rate.norm:              80301.869 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.453 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.843 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 79512.500 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 26706.010 ops/s
[info]                  ·gc.alloc.rate:                   1361.309 MB/sec
[info]                  ·gc.alloc.rate.norm:              80233.437 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.763 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 79611.850 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 26772.002 ops/s
[info]                  ·gc.alloc.rate:                   1374.345 MB/sec
[info]                  ·gc.alloc.rate.norm:              80792.967 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.224 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1351.632 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 79457.750 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 26804.728 ops/s
[info]                  ·gc.alloc.rate:                   1351.881 MB/sec
[info]                  ·gc.alloc.rate.norm:              79395.535 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.222 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1352.607 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 79438.168 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson":
[info]   26753.149 ±(99.9%) 161.233 ops/s [Average]
[info]   (min, avg, max) = (26706.010, 26753.149, 26804.728), stdev = 41.872
[info]   CI (99.9%): [26591.917, 26914.382] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1363.073 ±(99.9%) 30.911 MB/sec [Average]
[info]   (min, avg, max) = (1351.881, 1363.073, 1374.345), stdev = 8.027
[info]   CI (99.9%): [1332.162, 1393.983] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   80193.543 ±(99.9%) 1936.829 B/op [Average]
[info]   (min, avg, max) = (79395.535, 80193.543, 80792.967), stdev = 502.988
[info]   CI (99.9%): [78256.714, 82130.372] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   0.021 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.078] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   1.225 ±(99.9%) 3.339 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.225, 2.453), stdev = 0.867
[info]   CI (99.9%): [≈ 0, 4.564] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   1350.576 ±(99.9%) 6.741 MB/sec [Average]
[info]   (min, avg, max) = (1348.037, 1350.576, 1352.607), stdev = 1.751
[info]   CI (99.9%): [1343.835, 1357.318] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   79458.219 ±(99.9%) 479.662 B/op [Average]
[info]   (min, avg, max) = (79270.826, 79458.219, 79611.850), stdev = 124.567
[info]   CI (99.9%): [78978.557, 79937.880] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfLongsBenchmark.writePlayJson:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 41.16% complete, ETA 01:19:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2111.933 ops/s
[info] # Warmup Iteration   2: 7483.934 ops/s
[info] # Warmup Iteration   3: 8181.538 ops/s
[info] # Warmup Iteration   4: 8180.438 ops/s
[info] # Warmup Iteration   5: 8203.160 ops/s
[info] Iteration   1: 8154.875 ops/s
[info]                  ·gc.alloc.rate:                   1136.308 MB/sec
[info]                  ·gc.alloc.rate.norm:              219360.480 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1347.109 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 260055.075 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 8220.743 ops/s
[info]                  ·gc.alloc.rate:                   1133.304 MB/sec
[info]                  ·gc.alloc.rate.norm:              216997.753 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.971 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 129047.660 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 8183.824 ops/s
[info]                  ·gc.alloc.rate:                   1140.831 MB/sec
[info]                  ·gc.alloc.rate.norm:              219393.370 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4.003 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.976 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 259421.674 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 8163.217 ops/s
[info]                  ·gc.alloc.rate:                   1146.401 MB/sec
[info]                  ·gc.alloc.rate.norm:              221028.495 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4.013 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.162 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 260313.968 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 8152.945 ops/s
[info]                  ·gc.alloc.rate:                   1129.427 MB/sec
[info]                  ·gc.alloc.rate.norm:              218065.392 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      675.282 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 130380.878 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce":
[info]   8175.121 ±(99.9%) 108.921 ops/s [Average]
[info]   (min, avg, max) = (8152.945, 8175.121, 8220.743), stdev = 28.286
[info]   CI (99.9%): [8066.200, 8284.041] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.alloc.rate":
[info]   1137.254 ±(99.9%) 25.414 MB/sec [Average]
[info]   (min, avg, max) = (1129.427, 1137.254, 1146.401), stdev = 6.600
[info]   CI (99.9%): [1111.841, 1162.668] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   218969.098 ±(99.9%) 5864.238 B/op [Average]
[info]   (min, avg, max) = (216997.753, 218969.098, 221028.495), stdev = 1522.924
[info]   CI (99.9%): [213104.860, 224833.336] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   0.008 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1.603 ±(99.9%) 8.454 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.603, 4.013), stdev = 2.195
[info]   CI (99.9%): [≈ 0, 10.057] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1079.100 ±(99.9%) 1421.789 MB/sec [Average]
[info]   (min, avg, max) = (673.971, 1079.100, 1350.162), stdev = 369.234
[info]   CI (99.9%): [≈ 0, 2500.889] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   207843.851 ±(99.9%) 274645.331 B/op [Average]
[info]   (min, avg, max) = (129047.660, 207843.851, 260313.968), stdev = 71324.520
[info]   CI (99.9%): [≈ 0, 482489.182] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 41.37% complete, ETA 01:19:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2047.958 ops/s
[info] # Warmup Iteration   2: 6771.324 ops/s
[info] # Warmup Iteration   3: 7119.783 ops/s
[info] # Warmup Iteration   4: 7118.816 ops/s
[info] # Warmup Iteration   5: 7164.936 ops/s
[info] Iteration   1: 7162.017 ops/s
[info]                  ·gc.alloc.rate:                   950.808 MB/sec
[info]                  ·gc.alloc.rate.norm:              208982.717 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.918 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 148123.801 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 7165.649 ops/s
[info]                  ·gc.alloc.rate:                   951.841 MB/sec
[info]                  ·gc.alloc.rate.norm:              209093.993 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4.571 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.915 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 148041.143 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 7156.920 ops/s
[info]                  ·gc.alloc.rate:                   981.459 MB/sec
[info]                  ·gc.alloc.rate.norm:              215813.026 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4.577 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.195 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 296454.508 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 7258.994 ops/s
[info]                  ·gc.alloc.rate:                   963.737 MB/sec
[info]                  ·gc.alloc.rate.norm:              208964.893 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4.513 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.680 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 146289.421 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 7254.608 ops/s
[info]                  ·gc.alloc.rate:                   989.705 MB/sec
[info]                  ·gc.alloc.rate.norm:              214712.643 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4.516 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.887 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 292852.710 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala":
[info]   7199.638 ±(99.9%) 201.381 ops/s [Average]
[info]   (min, avg, max) = (7156.920, 7199.638, 7258.994), stdev = 52.298
[info]   CI (99.9%): [6998.257, 7401.019] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   967.510 ±(99.9%) 67.412 MB/sec [Average]
[info]   (min, avg, max) = (950.808, 967.510, 989.705), stdev = 17.507
[info]   CI (99.9%): [900.098, 1034.922] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   211513.454 ±(99.9%) 13265.834 B/op [Average]
[info]   (min, avg, max) = (208964.893, 211513.454, 215813.026), stdev = 3445.095
[info]   CI (99.9%): [198247.621, 224779.288] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.017 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   3.635 ±(99.9%) 7.827 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.635, 4.577), stdev = 2.033
[info]   CI (99.9%): [≈ 0, 11.462] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   944.119 ±(99.9%) 1423.360 MB/sec [Average]
[info]   (min, avg, max) = (673.915, 944.119, 1349.887), stdev = 369.642
[info]   CI (99.9%): [≈ 0, 2367.479] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   206352.317 ±(99.9%) 310443.032 B/op [Average]
[info]   (min, avg, max) = (146289.421, 206352.317, 296454.508), stdev = 80621.069
[info]   CI (99.9%): [≈ 0, 516795.348] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 41.57% complete, ETA 01:19:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 119963.015 ops/s
[info] # Warmup Iteration   2: 174510.341 ops/s
[info] # Warmup Iteration   3: 177576.909 ops/s
[info] # Warmup Iteration   4: 177213.659 ops/s
[info] # Warmup Iteration   5: 177960.978 ops/s
[info] Iteration   1: 177463.199 ops/s
[info]                  ·gc.alloc.rate:                   1747.509 MB/sec
[info]                  ·gc.alloc.rate.norm:              15500.974 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.369 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1347.696 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11954.507 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 173387.117 ops/s
[info]                  ·gc.alloc.rate:                   1732.946 MB/sec
[info]                  ·gc.alloc.rate.norm:              15731.506 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.945 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2022.951 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 18364.139 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 177404.001 ops/s
[info]                  ·gc.alloc.rate:                   1772.500 MB/sec
[info]                  ·gc.alloc.rate.norm:              15723.834 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.185 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.352 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11978.964 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 176851.730 ops/s
[info]                  ·gc.alloc.rate:                   1792.698 MB/sec
[info]                  ·gc.alloc.rate.norm:              15957.047 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.371 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2027.346 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 18045.678 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 177795.406 ops/s
[info]                  ·gc.alloc.rate:                   1776.045 MB/sec
[info]                  ·gc.alloc.rate.norm:              15724.341 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.553 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1352.698 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11976.212 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala":
[info]   176580.291 ±(99.9%) 6996.252 ops/s [Average]
[info]   (min, avg, max) = (173387.117, 176580.291, 177795.406), stdev = 1816.904
[info]   CI (99.9%): [169584.039, 183576.543] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1764.340 ±(99.9%) 91.865 MB/sec [Average]
[info]   (min, avg, max) = (1732.946, 1764.340, 1792.698), stdev = 23.857
[info]   CI (99.9%): [1672.475, 1856.204] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   15727.540 ±(99.9%) 621.034 B/op [Average]
[info]   (min, avg, max) = (15500.974, 15727.540, 15957.047), stdev = 161.280
[info]   CI (99.9%): [15106.507, 16348.574] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.054 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.104), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.484 ±(99.9%) 1.111 B/op [Average]
[info]   (min, avg, max) = (0.185, 0.484, 0.945), stdev = 0.288
[info]   CI (99.9%): [≈ 0, 1.595] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   1620.209 ±(99.9%) 1423.449 MB/sec [Average]
[info]   (min, avg, max) = (1347.696, 1620.209, 2027.346), stdev = 369.665
[info]   CI (99.9%): [196.760, 3043.658] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   14463.900 ±(99.9%) 13157.367 B/op [Average]
[info]   (min, avg, max) = (11954.507, 14463.900, 18364.139), stdev = 3416.926
[info]   CI (99.9%): [1306.533, 27621.267] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 41.77% complete, ETA 01:18:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1641.868 ops/s
[info] # Warmup Iteration   2: 6638.125 ops/s
[info] # Warmup Iteration   3: 7008.680 ops/s
[info] # Warmup Iteration   4: 7130.547 ops/s
[info] # Warmup Iteration   5: 7119.646 ops/s
[info] Iteration   1: 7115.033 ops/s
[info]                  ·gc.alloc.rate:                   1222.317 MB/sec
[info]                  ·gc.alloc.rate.norm:              270375.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4.604 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1346.795 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 297909.326 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 7120.029 ops/s
[info]                  ·gc.alloc.rate:                   1229.711 MB/sec
[info]                  ·gc.alloc.rate.norm:              271851.934 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9.203 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1347.490 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 297889.236 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 7039.516 ops/s
[info]                  ·gc.alloc.rate:                   1193.682 MB/sec
[info]                  ·gc.alloc.rate.norm:              266909.964 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.016 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 150711.392 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 7047.468 ops/s
[info]                  ·gc.alloc.rate:                   1215.498 MB/sec
[info]                  ·gc.alloc.rate.norm:              271471.660 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.402 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 301378.206 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 7126.906 ops/s
[info]                  ·gc.alloc.rate:                   1242.513 MB/sec
[info]                  ·gc.alloc.rate.norm:              274438.263 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4.597 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.027 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 298185.122 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson":
[info]   7089.790 ±(99.9%) 163.911 ops/s [Average]
[info]   (min, avg, max) = (7039.516, 7089.790, 7126.906), stdev = 42.567
[info]   CI (99.9%): [6925.879, 7253.701] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1220.744 ±(99.9%) 69.862 MB/sec [Average]
[info]   (min, avg, max) = (1193.682, 1220.744, 1242.513), stdev = 18.143
[info]   CI (99.9%): [1150.883, 1290.606] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   271009.365 ±(99.9%) 10525.804 B/op [Average]
[info]   (min, avg, max) = (266909.964, 271009.365, 274438.263), stdev = 2733.518
[info]   CI (99.9%): [260483.561, 281535.169] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   0.017 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   3.681 ±(99.9%) 14.824 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.681, 9.203), stdev = 3.850
[info]   CI (99.9%): [≈ 0, 18.505] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   1213.546 ±(99.9%) 1161.391 MB/sec [Average]
[info]   (min, avg, max) = (674.016, 1213.546, 1350.027), stdev = 301.610
[info]   CI (99.9%): [52.155, 2374.937] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   269214.656 ±(99.9%) 255149.991 B/op [Average]
[info]   (min, avg, max) = (150711.392, 269214.656, 301378.206), stdev = 66261.642
[info]   CI (99.9%): [14064.665, 524364.648] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 3.000), stdev = 0.707
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 41.97% complete, ETA 01:18:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3307.232 ops/s
[info] # Warmup Iteration   2: 7738.273 ops/s
[info] # Warmup Iteration   3: 7851.560 ops/s
[info] # Warmup Iteration   4: 7864.961 ops/s
[info] # Warmup Iteration   5: 7867.324 ops/s
[info] Iteration   1: 8085.846 ops/s
[info]                  ·gc.alloc.rate:                   1090.086 MB/sec
[info]                  ·gc.alloc.rate.norm:              212212.324 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      671.372 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 130699.222 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 7995.067 ops/s
[info]                  ·gc.alloc.rate:                   1109.016 MB/sec
[info]                  ·gc.alloc.rate.norm:              218268.839 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4.098 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1342.437 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 264209.158 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 8119.615 ops/s
[info]                  ·gc.alloc.rate:                   1112.567 MB/sec
[info]                  ·gc.alloc.rate.norm:              215671.574 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4.035 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1342.142 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 260174.934 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 8113.348 ops/s
[info]                  ·gc.alloc.rate:                   1105.224 MB/sec
[info]                  ·gc.alloc.rate.norm:              214411.164 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      671.307 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 130232.209 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 8029.585 ops/s
[info]                  ·gc.alloc.rate:                   1106.958 MB/sec
[info]                  ·gc.alloc.rate.norm:              217015.589 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4.080 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1343.310 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 263351.736 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readUPickle":
[info]   8068.692 ±(99.9%) 209.423 ops/s [Average]
[info]   (min, avg, max) = (7995.067, 8068.692, 8119.615), stdev = 54.386
[info]   CI (99.9%): [7859.269, 8278.115] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readUPickle:·gc.alloc.rate":
[info]   1104.770 ±(99.9%) 33.316 MB/sec [Average]
[info]   (min, avg, max) = (1090.086, 1104.770, 1112.567), stdev = 8.652
[info]   CI (99.9%): [1071.454, 1138.086] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readUPickle:·gc.alloc.rate.norm":
[info]   215515.898 ±(99.9%) 9027.693 B/op [Average]
[info]   (min, avg, max) = (212212.324, 215515.898, 218268.839), stdev = 2344.463
[info]   CI (99.9%): [206488.205, 224543.590] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readUPickle:·gc.churn.PS_Eden_Space":
[info]   0.012 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.056] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   2.443 ±(99.9%) 8.586 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.443, 4.098), stdev = 2.230
[info]   CI (99.9%): [≈ 0, 11.029] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readUPickle:·gc.churn.PS_Survivor_Space":
[info]   1074.114 ±(99.9%) 1415.809 MB/sec [Average]
[info]   (min, avg, max) = (671.307, 1074.114, 1343.310), stdev = 367.681
[info]   CI (99.9%): [≈ 0, 2489.923] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   209733.452 ±(99.9%) 278698.074 B/op [Average]
[info]   (min, avg, max) = (130232.209, 209733.452, 264209.158), stdev = 72377.005
[info]   CI (99.9%): [≈ 0, 488431.526] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readUPickle:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.readUPickle:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 42.17% complete, ETA 01:18:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6874.007 ops/s
[info] # Warmup Iteration   2: 18927.520 ops/s
[info] # Warmup Iteration   3: 19469.914 ops/s
[info] # Warmup Iteration   4: 19427.708 ops/s
[info] # Warmup Iteration   5: 19022.308 ops/s
[info] Iteration   1: 18815.623 ops/s
[info]                  ·gc.alloc.rate:                   810.624 MB/sec
[info]                  ·gc.alloc.rate.norm:              67796.608 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.246 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 56390.632 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 19111.258 ops/s
[info]                  ·gc.alloc.rate:                   814.410 MB/sec
[info]                  ·gc.alloc.rate.norm:              67070.474 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 55517.365 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 19166.496 ops/s
[info]                  ·gc.alloc.rate:                   813.753 MB/sec
[info]                  ·gc.alloc.rate.norm:              66825.936 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.709 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.072 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 55355.186 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 19126.889 ops/s
[info]                  ·gc.alloc.rate:                   833.118 MB/sec
[info]                  ·gc.alloc.rate.norm:              68533.697 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3.422 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1347.832 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 110874.962 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 19175.811 ops/s
[info]                  ·gc.alloc.rate:                   815.408 MB/sec
[info]                  ·gc.alloc.rate.norm:              66932.647 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.751 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 55386.771 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce":
[info]   19079.215 ±(99.9%) 576.727 ops/s [Average]
[info]   (min, avg, max) = (18815.623, 19079.215, 19175.811), stdev = 149.774
[info]   CI (99.9%): [18502.488, 19655.942] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.alloc.rate":
[info]   817.463 ±(99.9%) 34.395 MB/sec [Average]
[info]   (min, avg, max) = (810.624, 817.463, 833.118), stdev = 8.932
[info]   CI (99.9%): [783.068, 851.858] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   67431.872 ±(99.9%) 2786.096 B/op [Average]
[info]   (min, avg, max) = (66825.936, 67431.872, 68533.697), stdev = 723.540
[info]   CI (99.9%): [64645.776, 70217.968] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   0.012 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1.026 ±(99.9%) 5.892 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.026, 3.422), stdev = 1.530
[info]   CI (99.9%): [≈ 0, 6.919] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   809.005 ±(99.9%) 1159.865 MB/sec [Average]
[info]   (min, avg, max) = (674.072, 809.005, 1347.832), stdev = 301.213
[info]   CI (99.9%): [≈ 0, 1968.870] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   66704.983 ±(99.9%) 95093.278 B/op [Average]
[info]   (min, avg, max) = (55355.186, 66704.983, 110874.962), stdev = 24695.422
[info]   CI (99.9%): [≈ 0, 161798.261] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 42.37% complete, ETA 01:18:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 8849.879 ops/s
[info] # Warmup Iteration   2: 20930.645 ops/s
[info] # Warmup Iteration   3: 21518.863 ops/s
[info] # Warmup Iteration   4: 21768.492 ops/s
[info] # Warmup Iteration   5: 21757.394 ops/s
[info] Iteration   1: 21409.080 ops/s
[info]                  ·gc.alloc.rate:                   849.776 MB/sec
[info]                  ·gc.alloc.rate.norm:              62474.508 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.101 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 49559.075 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   2: 21001.526 ops/s
[info]                  ·gc.alloc.rate:                   823.395 MB/sec
[info]                  ·gc.alloc.rate.norm:              61709.556 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.084 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 50519.348 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 21884.426 ops/s
[info]                  ·gc.alloc.rate:                   886.816 MB/sec
[info]                  ·gc.alloc.rate.norm:              63787.128 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7.485 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.046 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 96962.620 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 21963.214 ops/s
[info]                  ·gc.alloc.rate:                   865.860 MB/sec
[info]                  ·gc.alloc.rate.norm:              62044.098 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.120 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 48304.757 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 21989.482 ops/s
[info]                  ·gc.alloc.rate:                   864.564 MB/sec
[info]                  ·gc.alloc.rate.norm:              61870.449 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.566 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 48273.687 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala":
[info]   21649.546 ±(99.9%) 1663.891 ops/s [Average]
[info]   (min, avg, max) = (21001.526, 21649.546, 21989.482), stdev = 432.107
[info]   CI (99.9%): [19985.655, 23313.437] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   858.082 ±(99.9%) 90.312 MB/sec [Average]
[info]   (min, avg, max) = (823.395, 858.082, 886.816), stdev = 23.454
[info]   CI (99.9%): [767.771, 948.394] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   62377.148 ±(99.9%) 3227.926 B/op [Average]
[info]   (min, avg, max) = (61709.556, 62377.148, 63787.128), stdev = 838.282
[info]   CI (99.9%): [59149.222, 65605.074] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.021 ±(99.9%) 0.179 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.104), stdev = 0.047
[info]   CI (99.9%): [≈ 0, 0.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1.497 ±(99.9%) 12.890 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.497, 7.485), stdev = 3.348
[info]   CI (99.9%): [≈ 0, 14.387] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   808.983 ±(99.9%) 1160.374 MB/sec [Average]
[info]   (min, avg, max) = (674.084, 808.983, 1348.046), stdev = 301.345
[info]   CI (99.9%): [≈ 0, 1969.357] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   58723.898 ±(99.9%) 82391.046 B/op [Average]
[info]   (min, avg, max) = (48273.687, 58723.898, 96962.620), stdev = 21396.693
[info]   CI (99.9%): [≈ 0, 141114.943] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 0.837
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 42.57% complete, ETA 01:17:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 239789.976 ops/s
[info] # Warmup Iteration   2: 297655.238 ops/s
[info] # Warmup Iteration   3: 314681.491 ops/s
[info] # Warmup Iteration   4: 314673.517 ops/s
[info] # Warmup Iteration   5: 314226.760 ops/s
[info] Iteration   1: 315472.714 ops/s
[info]                  ·gc.alloc.rate:                   729.067 MB/sec
[info]                  ·gc.alloc.rate.norm:              3638.237 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.104 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.281 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3359.851 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 310071.759 ops/s
[info]                  ·gc.alloc.rate:                   717.316 MB/sec
[info]                  ·gc.alloc.rate.norm:              3641.224 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.411 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3418.354 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 311694.592 ops/s
[info]                  ·gc.alloc.rate:                   730.103 MB/sec
[info]                  ·gc.alloc.rate.norm:              3686.066 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.862 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3397.075 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 311041.089 ops/s
[info]                  ·gc.alloc.rate:                   728.825 MB/sec
[info]                  ·gc.alloc.rate.norm:              3688.564 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.316 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.651 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3404.271 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 316012.075 ops/s
[info]                  ·gc.alloc.rate:                   736.559 MB/sec
[info]                  ·gc.alloc.rate.norm:              3668.584 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.104 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.746 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3350.751 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala":
[info]   312858.446 ±(99.9%) 10404.356 ops/s [Average]
[info]   (min, avg, max) = (310071.759, 312858.446, 316012.075), stdev = 2701.978
[info]   CI (99.9%): [302454.090, 323262.801] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   728.374 ±(99.9%) 26.743 MB/sec [Average]
[info]   (min, avg, max) = (717.316, 728.374, 736.559), stdev = 6.945
[info]   CI (99.9%): [701.631, 755.117] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   3664.535 ±(99.9%) 92.182 B/op [Average]
[info]   (min, avg, max) = (3638.237, 3664.535, 3688.564), stdev = 23.939
[info]   CI (99.9%): [3572.353, 3756.717] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.021 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.062), stdev = 0.025
[info]   CI (99.9%): [≈ 0, 0.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.105 ±(99.9%) 0.497 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.105, 0.316), stdev = 0.129
[info]   CI (99.9%): [≈ 0, 0.601] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   672.990 ±(99.9%) 1.295 MB/sec [Average]
[info]   (min, avg, max) = (672.651, 672.990, 673.411), stdev = 0.336
[info]   CI (99.9%): [671.695, 674.286] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   3386.060 ±(99.9%) 112.751 B/op [Average]
[info]   (min, avg, max) = (3350.751, 3386.060, 3418.354), stdev = 29.281
[info]   CI (99.9%): [3273.310, 3498.811] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 42.77% complete, ETA 01:17:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 296990.738 ops/s
[info] # Warmup Iteration   2: 406741.853 ops/s
[info] # Warmup Iteration   3: 414519.002 ops/s
[info] # Warmup Iteration   4: 413996.058 ops/s
[info] # Warmup Iteration   5: 414961.251 ops/s
[info] Iteration   1: 414420.137 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 415055.338 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 414530.528 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 414687.486 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 406803.310 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc":
[info]   413099.360 ±(99.9%) 13584.225 ops/s [Average]
[info]   (min, avg, max) = (406803.310, 413099.360, 415055.338), stdev = 3527.780
[info]   CI (99.9%): [399515.135, 426683.585] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
[info]   CI (99.9%): [0.001, 0.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 42.97% complete, ETA 01:17:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 10803.702 ops/s
[info] # Warmup Iteration   2: 20944.633 ops/s
[info] # Warmup Iteration   3: 21600.504 ops/s
[info] # Warmup Iteration   4: 21619.753 ops/s
[info] # Warmup Iteration   5: 21389.921 ops/s
[info] Iteration   1: 21660.053 ops/s
[info]                  ·gc.alloc.rate:                   936.942 MB/sec
[info]                  ·gc.alloc.rate.norm:              68080.614 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.445 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 48934.192 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 21690.614 ops/s
[info]                  ·gc.alloc.rate:                   932.335 MB/sec
[info]                  ·gc.alloc.rate.norm:              67647.199 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.463 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 48864.270 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   3: 21574.449 ops/s
[info]                  ·gc.alloc.rate:                   954.779 MB/sec
[info]                  ·gc.alloc.rate.norm:              69657.348 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6.074 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.078 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 98351.074 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 21484.356 ops/s
[info]                  ·gc.alloc.rate:                   936.958 MB/sec
[info]                  ·gc.alloc.rate.norm:              68644.430 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.394 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 49408.191 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 21644.735 ops/s
[info]                  ·gc.alloc.rate:                   931.164 MB/sec
[info]                  ·gc.alloc.rate.norm:              67722.351 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.297 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 49040.750 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson":
[info]   21610.841 ±(99.9%) 317.866 ops/s [Average]
[info]   (min, avg, max) = (21484.356, 21610.841, 21690.614), stdev = 82.549
[info]   CI (99.9%): [21292.975, 21928.708] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.alloc.rate":
[info]   938.436 ±(99.9%) 36.612 MB/sec [Average]
[info]   (min, avg, max) = (931.164, 938.436, 954.779), stdev = 9.508
[info]   CI (99.9%): [901.823, 975.048] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   68350.388 ±(99.9%) 3196.433 B/op [Average]
[info]   (min, avg, max) = (67647.199, 68350.388, 69657.348), stdev = 830.104
[info]   CI (99.9%): [65153.955, 71546.822] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   0.017 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.083), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.160] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   1.215 ±(99.9%) 10.460 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.215, 6.074), stdev = 2.716
[info]   CI (99.9%): [≈ 0, 11.675] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   808.735 ±(99.9%) 1160.978 MB/sec [Average]
[info]   (min, avg, max) = (673.445, 808.735, 1348.078), stdev = 301.502
[info]   CI (99.9%): [≈ 0, 1969.713] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   58919.695 ±(99.9%) 84882.853 B/op [Average]
[info]   (min, avg, max) = (48864.270, 58919.695, 98351.074), stdev = 22043.807
[info]   CI (99.9%): [≈ 0, 143802.548] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 0.707
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 43.17% complete, ETA 01:16:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 8232.019 ops/s
[info] # Warmup Iteration   2: 11600.493 ops/s
[info] # Warmup Iteration   3: 11498.066 ops/s
[info] # Warmup Iteration   4: 11859.402 ops/s
[info] # Warmup Iteration   5: 11789.287 ops/s
[info] Iteration   1: 11891.152 ops/s
[info]                  ·gc.alloc.rate:                   660.836 MB/sec
[info]                  ·gc.alloc.rate.norm:              87460.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2.540 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     336.112 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      675.451 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 89394.322 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 11863.056 ops/s
[info]                  ·gc.alloc.rate:                   665.505 MB/sec
[info]                  ·gc.alloc.rate.norm:              88291.043 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.762 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.745 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 89516.896 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 11810.195 ops/s
[info]                  ·gc.alloc.rate:                   654.955 MB/sec
[info]                  ·gc.alloc.rate.norm:              87270.860 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.825 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 89918.521 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 11821.342 ops/s
[info]                  ·gc.alloc.rate:                   658.043 MB/sec
[info]                  ·gc.alloc.rate.norm:              87625.193 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5.543 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.305 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 89657.505 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 11667.313 ops/s
[info]                  ·gc.alloc.rate:                   659.926 MB/sec
[info]                  ·gc.alloc.rate.norm:              89031.116 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.338 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 90840.646 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeUPickle":
[info]   11810.612 ±(99.9%) 332.847 ops/s [Average]
[info]   (min, avg, max) = (11667.313, 11810.612, 11891.152), stdev = 86.439
[info]   CI (99.9%): [11477.764, 12143.459] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeUPickle:·gc.alloc.rate":
[info]   659.853 ±(99.9%) 14.937 MB/sec [Average]
[info]   (min, avg, max) = (654.955, 659.853, 665.505), stdev = 3.879
[info]   CI (99.9%): [644.916, 674.789] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeUPickle:·gc.alloc.rate.norm":
[info]   87935.642 ±(99.9%) 2784.021 B/op [Average]
[info]   (min, avg, max) = (87270.860, 87935.642, 89031.116), stdev = 723.001
[info]   CI (99.9%): [85151.622, 90719.663] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeUPickle:·gc.churn.PS_Eden_Space":
[info]   0.520 ±(99.9%) 4.347 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.520, 2.540), stdev = 1.129
[info]   CI (99.9%): [≈ 0, 4.867] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   68.883 ±(99.9%) 575.297 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 68.883, 336.112), stdev = 149.403
[info]   CI (99.9%): [≈ 0, 644.181] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space":
[info]   674.333 ±(99.9%) 3.708 MB/sec [Average]
[info]   (min, avg, max) = (673.305, 674.333, 675.451), stdev = 0.963
[info]   CI (99.9%): [670.625, 678.041] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   89865.578 ±(99.9%) 2229.150 B/op [Average]
[info]   (min, avg, max) = (89394.322, 89865.578, 90840.646), stdev = 578.903
[info]   CI (99.9%): [87636.427, 92094.728] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeUPickle:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetDateTimesBenchmark.writeUPickle:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 43.37% complete, ETA 01:16:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2897.225 ops/s
[info] # Warmup Iteration   2: 12939.904 ops/s
[info] # Warmup Iteration   3: 13410.979 ops/s
[info] # Warmup Iteration   4: 13558.371 ops/s
[info] # Warmup Iteration   5: 13581.662 ops/s
[info] Iteration   1: 13498.286 ops/s
[info]                  ·gc.alloc.rate:                   1334.145 MB/sec
[info]                  ·gc.alloc.rate.norm:              155565.051 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.427 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.474 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 157235.917 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 13324.569 ops/s
[info]                  ·gc.alloc.rate:                   1306.732 MB/sec
[info]                  ·gc.alloc.rate.norm:              154349.365 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4.918 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.549 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 159406.841 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 13234.931 ops/s
[info]                  ·gc.alloc.rate:                   1292.458 MB/sec
[info]                  ·gc.alloc.rate.norm:              153685.962 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7.426 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.683 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 160609.492 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 13509.084 ops/s
[info]                  ·gc.alloc.rate:                   1332.542 MB/sec
[info]                  ·gc.alloc.rate.norm:              155254.866 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.425 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1351.544 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 157468.781 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 13626.796 ops/s
[info]                  ·gc.alloc.rate:                   1337.638 MB/sec
[info]                  ·gc.alloc.rate.norm:              154529.956 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1352.607 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 156259.289 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce":
[info]   13438.733 ±(99.9%) 604.049 ops/s [Average]
[info]   (min, avg, max) = (13234.931, 13438.733, 13626.796), stdev = 156.870
[info]   CI (99.9%): [12834.684, 14042.783] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:·gc.alloc.rate":
[info]   1320.703 ±(99.9%) 77.028 MB/sec [Average]
[info]   (min, avg, max) = (1292.458, 1320.703, 1337.638), stdev = 20.004
[info]   CI (99.9%): [1243.675, 1397.731] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   154677.040 ±(99.9%) 2877.494 B/op [Average]
[info]   (min, avg, max) = (153685.962, 154677.040, 155565.051), stdev = 747.276
[info]   CI (99.9%): [151799.546, 157554.534] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   0.029 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   3.439 ±(99.9%) 10.885 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.439, 7.426), stdev = 2.827
[info]   CI (99.9%): [≈ 0, 14.324] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1350.571 ±(99.9%) 6.253 MB/sec [Average]
[info]   (min, avg, max) = (1348.474, 1350.571, 1352.607), stdev = 1.624
[info]   CI (99.9%): [1344.319, 1356.824] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   158196.064 ±(99.9%) 6805.008 B/op [Average]
[info]   (min, avg, max) = (156259.289, 158196.064, 160609.492), stdev = 1767.239
[info]   CI (99.9%): [151391.056, 165001.072] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readCirce:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 43.57% complete, ETA 01:16:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2914.503 ops/s
[info] # Warmup Iteration   2: 12297.949 ops/s
[info] # Warmup Iteration   3: 13181.822 ops/s
[info] # Warmup Iteration   4: 13141.268 ops/s
[info] # Warmup Iteration   5: 13164.640 ops/s
[info] Iteration   1: 13084.854 ops/s
[info]                  ·gc.alloc.rate:                   1147.988 MB/sec
[info]                  ·gc.alloc.rate.norm:              138089.794 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.087 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 81084.963 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 13149.527 ops/s
[info]                  ·gc.alloc.rate:                   1176.998 MB/sec
[info]                  ·gc.alloc.rate.norm:              140886.340 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.491 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.110 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 161368.448 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 13159.867 ops/s
[info]                  ·gc.alloc.rate:                   1163.719 MB/sec
[info]                  ·gc.alloc.rate.norm:              139189.946 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.490 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.453 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 161405.180 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 13122.198 ops/s
[info]                  ·gc.alloc.rate:                   1161.287 MB/sec
[info]                  ·gc.alloc.rate.norm:              139313.695 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.948 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 80970.040 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 13155.090 ops/s
[info]                  ·gc.alloc.rate:                   1172.112 MB/sec
[info]                  ·gc.alloc.rate.norm:              140263.373 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.490 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.525 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 161613.629 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala":
[info]   13134.307 ±(99.9%) 120.376 ops/s [Average]
[info]   (min, avg, max) = (13084.854, 13134.307, 13159.867), stdev = 31.261
[info]   CI (99.9%): [13013.931, 13254.684] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1164.421 ±(99.9%) 42.952 MB/sec [Average]
[info]   (min, avg, max) = (1147.988, 1164.421, 1176.998), stdev = 11.154
[info]   CI (99.9%): [1121.469, 1207.372] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   139548.629 ±(99.9%) 4134.907 B/op [Average]
[info]   (min, avg, max) = (138089.794, 139548.629, 140886.340), stdev = 1073.822
[info]   CI (99.9%): [135413.723, 143683.536] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.012 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.056] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1.494 ±(99.9%) 5.253 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.494, 2.491), stdev = 1.364
[info]   CI (99.9%): [≈ 0, 6.747] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1079.425 ±(99.9%) 1423.310 MB/sec [Average]
[info]   (min, avg, max) = (674.087, 1079.425, 1350.525), stdev = 369.629
[info]   CI (99.9%): [≈ 0, 2502.735] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   129288.452 ±(99.9%) 169644.495 B/op [Average]
[info]   (min, avg, max) = (80970.040, 129288.452, 161613.629), stdev = 44056.137
[info]   CI (99.9%): [≈ 0, 298932.946] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 43.78% complete, ETA 01:16:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 194415.453 ops/s
[info] # Warmup Iteration   2: 249507.128 ops/s
[info] # Warmup Iteration   3: 265893.558 ops/s
[info] # Warmup Iteration   4: 267141.752 ops/s
[info] # Warmup Iteration   5: 260335.957 ops/s
[info] Iteration   1: 262236.593 ops/s
[info]                  ·gc.alloc.rate:                   1564.600 MB/sec
[info]                  ·gc.alloc.rate.norm:              9391.715 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.375 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2017.433 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12109.902 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 267810.773 ops/s
[info]                  ·gc.alloc.rate:                   1588.979 MB/sec
[info]                  ·gc.alloc.rate.norm:              9339.859 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.245 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.998 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7911.639 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 268401.462 ops/s
[info]                  ·gc.alloc.rate:                   1592.413 MB/sec
[info]                  ·gc.alloc.rate.norm:              9339.984 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.366 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1346.610 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7898.274 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 267730.208 ops/s
[info]                  ·gc.alloc.rate:                   1629.095 MB/sec
[info]                  ·gc.alloc.rate.norm:              9573.761 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.122 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2024.702 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11898.638 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 267808.539 ops/s
[info]                  ·gc.alloc.rate:                   1604.285 MB/sec
[info]                  ·gc.alloc.rate.norm:              9427.938 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.122 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.895 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7938.835 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala":
[info]   266797.515 ±(99.9%) 9872.497 ops/s [Average]
[info]   (min, avg, max) = (262236.593, 266797.515, 268401.462), stdev = 2563.856
[info]   CI (99.9%): [256925.018, 276670.012] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1595.874 ±(99.9%) 90.551 MB/sec [Average]
[info]   (min, avg, max) = (1564.600, 1595.874, 1629.095), stdev = 23.516
[info]   CI (99.9%): [1505.324, 1686.425] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   9414.651 ±(99.9%) 371.280 B/op [Average]
[info]   (min, avg, max) = (9339.859, 9414.651, 9573.761), stdev = 96.420
[info]   CI (99.9%): [9043.371, 9785.932] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.042 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.062), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.246 ±(99.9%) 0.478 B/op [Average]
[info]   (min, avg, max) = (0.122, 0.246, 0.375), stdev = 0.124
[info]   CI (99.9%): [≈ 0, 0.724] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   1617.127 ±(99.9%) 1419.959 MB/sec [Average]
[info]   (min, avg, max) = (1345.998, 1617.127, 2024.702), stdev = 368.759
[info]   CI (99.9%): [197.169, 3037.086] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   9551.458 ±(99.9%) 8626.960 B/op [Average]
[info]   (min, avg, max) = (7898.274, 9551.458, 12109.902), stdev = 2240.394
[info]   CI (99.9%): [924.497, 18178.418] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 43.98% complete, ETA 01:15:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 980.355 ops/s
[info] # Warmup Iteration   2: 10555.133 ops/s
[info] # Warmup Iteration   3: 11910.778 ops/s
[info] # Warmup Iteration   4: 11993.860 ops/s
[info] # Warmup Iteration   5: 11961.512 ops/s
[info] Iteration   1: 12010.229 ops/s
[info]                  ·gc.alloc.rate:                   1470.450 MB/sec
[info]                  ·gc.alloc.rate.norm:              192723.620 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.509 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 176348.244 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 12017.975 ops/s
[info]                  ·gc.alloc.rate:                   1461.656 MB/sec
[info]                  ·gc.alloc.rate.norm:              191444.164 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.726 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1346.282 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 176332.783 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 12028.324 ops/s
[info]                  ·gc.alloc.rate:                   1469.115 MB/sec
[info]                  ·gc.alloc.rate.norm:              192238.556 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5.447 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1347.440 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 176316.952 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 11877.122 ops/s
[info]                  ·gc.alloc.rate:                   1451.187 MB/sec
[info]                  ·gc.alloc.rate.norm:              192263.755 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5.516 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.070 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 178734.545 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 11963.521 ops/s
[info]                  ·gc.alloc.rate:                   1487.154 MB/sec
[info]                  ·gc.alloc.rate.norm:              195638.838 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2025.667 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 266481.666 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson":
[info]   11979.434 ±(99.9%) 240.048 ops/s [Average]
[info]   (min, avg, max) = (11877.122, 11979.434, 12028.324), stdev = 62.340
[info]   CI (99.9%): [11739.386, 12219.482] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1467.913 ±(99.9%) 50.829 MB/sec [Average]
[info]   (min, avg, max) = (1451.187, 1467.913, 1487.154), stdev = 13.200
[info]   CI (99.9%): [1417.083, 1518.742] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   192861.787 ±(99.9%) 6234.838 B/op [Average]
[info]   (min, avg, max) = (191444.164, 192861.787, 195638.838), stdev = 1619.168
[info]   CI (99.9%): [186626.948, 199096.625] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   0.021 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   2.738 ±(99.9%) 10.555 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.738, 5.516), stdev = 2.741
[info]   CI (99.9%): [≈ 0, 13.293] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   1482.794 ±(99.9%) 1168.588 MB/sec [Average]
[info]   (min, avg, max) = (1345.509, 1482.794, 2025.667), stdev = 303.479
[info]   CI (99.9%): [314.206, 2651.382] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   194842.838 ±(99.9%) 154259.979 B/op [Average]
[info]   (min, avg, max) = (176316.952, 194842.838, 266481.666), stdev = 40060.827
[info]   CI (99.9%): [40582.859, 349102.817] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.200, 3.000), stdev = 0.837
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 44.18% complete, ETA 01:15:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4967.090 ops/s
[info] # Warmup Iteration   2: 11941.007 ops/s
[info] # Warmup Iteration   3: 12117.126 ops/s
[info] # Warmup Iteration   4: 12160.260 ops/s
[info] # Warmup Iteration   5: 12157.208 ops/s
[info] Iteration   1: 12201.930 ops/s
[info]                  ·gc.alloc.rate:                   1100.348 MB/sec
[info]                  ·gc.alloc.rate.norm:              141920.611 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8.054 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1341.548 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 173030.075 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 12212.858 ops/s
[info]                  ·gc.alloc.rate:                   1088.701 MB/sec
[info]                  ·gc.alloc.rate.norm:              140298.341 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      670.744 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 86437.134 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 12233.977 ops/s
[info]                  ·gc.alloc.rate:                   1104.972 MB/sec
[info]                  ·gc.alloc.rate.norm:              142134.841 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.678 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1342.414 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 172677.398 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 12115.795 ops/s
[info]                  ·gc.alloc.rate:                   1078.245 MB/sec
[info]                  ·gc.alloc.rate.norm:              140061.190 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.704 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      671.474 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 87222.694 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 12214.947 ops/s
[info]                  ·gc.alloc.rate:                   1116.182 MB/sec
[info]                  ·gc.alloc.rate.norm:              143793.702 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1343.695 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 173103.437 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readUPickle":
[info]   12195.901 ±(99.9%) 178.063 ops/s [Average]
[info]   (min, avg, max) = (12115.795, 12195.901, 12233.977), stdev = 46.242
[info]   CI (99.9%): [12017.838, 12373.964] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readUPickle:·gc.alloc.rate":
[info]   1097.690 ±(99.9%) 56.493 MB/sec [Average]
[info]   (min, avg, max) = (1078.245, 1097.690, 1116.182), stdev = 14.671
[info]   CI (99.9%): [1041.197, 1154.182] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readUPickle:·gc.alloc.rate.norm":
[info]   141641.737 ±(99.9%) 5857.132 B/op [Average]
[info]   (min, avg, max) = (140061.190, 141641.737, 143793.702), stdev = 1521.079
[info]   CI (99.9%): [135784.605, 147498.869] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readUPickle:·gc.churn.PS_Eden_Space":
[info]   0.021 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.062), stdev = 0.025
[info]   CI (99.9%): [≈ 0, 0.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   2.687 ±(99.9%) 12.662 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.687, 8.054), stdev = 3.288
[info]   CI (99.9%): [≈ 0, 15.349] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readUPickle:·gc.churn.PS_Survivor_Space":
[info]   1073.975 ±(99.9%) 1416.134 MB/sec [Average]
[info]   (min, avg, max) = (670.744, 1073.975, 1343.695), stdev = 367.766
[info]   CI (99.9%): [≈ 0, 2490.109] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   138494.148 ±(99.9%) 181611.268 B/op [Average]
[info]   (min, avg, max) = (86437.134, 138494.148, 173103.437), stdev = 47163.870
[info]   CI (99.9%): [≈ 0, 320105.415] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readUPickle:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.readUPickle:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 44.38% complete, ETA 01:15:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 12961.922 ops/s
[info] # Warmup Iteration   2: 30600.423 ops/s
[info] # Warmup Iteration   3: 31163.348 ops/s
[info] # Warmup Iteration   4: 30660.845 ops/s
[info] # Warmup Iteration   5: 31215.839 ops/s
[info] Iteration   1: 31865.987 ops/s
[info]                  ·gc.alloc.rate:                   1079.176 MB/sec
[info]                  ·gc.alloc.rate.norm:              53304.787 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3.084 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.491 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 66656.678 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 31306.220 ops/s
[info]                  ·gc.alloc.rate:                   1046.342 MB/sec
[info]                  ·gc.alloc.rate.norm:              52604.264 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.763 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 33923.336 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 31856.022 ops/s
[info]                  ·gc.alloc.rate:                   1081.019 MB/sec
[info]                  ·gc.alloc.rate.norm:              53395.439 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.028 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.547 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 66708.416 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 30416.234 ops/s
[info]                  ·gc.alloc.rate:                   1023.896 MB/sec
[info]                  ·gc.alloc.rate.norm:              52963.325 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      675.664 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 34950.235 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 31264.382 ops/s
[info]                  ·gc.alloc.rate:                   1064.645 MB/sec
[info]                  ·gc.alloc.rate.norm:              53594.857 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.096 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1351.518 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 68036.222 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce":
[info]   31341.769 ±(99.9%) 2280.615 ops/s [Average]
[info]   (min, avg, max) = (30416.234, 31341.769, 31865.987), stdev = 592.268
[info]   CI (99.9%): [29061.154, 33622.384] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:·gc.alloc.rate":
[info]   1059.016 ±(99.9%) 92.662 MB/sec [Average]
[info]   (min, avg, max) = (1023.896, 1059.016, 1081.019), stdev = 24.064
[info]   CI (99.9%): [966.353, 1151.678] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   53172.535 ±(99.9%) 1506.474 B/op [Average]
[info]   (min, avg, max) = (52604.264, 53172.535, 53594.857), stdev = 391.226
[info]   CI (99.9%): [51666.061, 54679.008] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   0.025 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.129] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1.242 ±(99.9%) 5.186 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.242, 3.084), stdev = 1.347
[info]   CI (99.9%): [≈ 0, 6.427] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   1080.396 ±(99.9%) 1424.279 MB/sec [Average]
[info]   (min, avg, max) = (674.763, 1080.396, 1351.518), stdev = 369.881
[info]   CI (99.9%): [≈ 0, 2504.676] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   54054.977 ±(99.9%) 69007.733 B/op [Average]
[info]   (min, avg, max) = (33923.336, 54054.977, 68036.222), stdev = 17921.089
[info]   CI (99.9%): [≈ 0, 123062.710] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeCirce:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 44.58% complete, ETA 01:15:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 34744.054 ops/s
[info] # Warmup Iteration   2: 70768.220 ops/s
[info] # Warmup Iteration   3: 71539.156 ops/s
[info] # Warmup Iteration   4: 69956.041 ops/s
[info] # Warmup Iteration   5: 71806.466 ops/s
[info] Iteration   1: 71262.678 ops/s
[info]                  ·gc.alloc.rate:                   1584.129 MB/sec
[info]                  ·gc.alloc.rate.norm:              34993.342 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.460 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.334 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 29806.729 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 69643.788 ops/s
[info]                  ·gc.alloc.rate:                   1557.832 MB/sec
[info]                  ·gc.alloc.rate.norm:              35210.037 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.048 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 30513.718 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 72014.946 ops/s
[info]                  ·gc.alloc.rate:                   1622.371 MB/sec
[info]                  ·gc.alloc.rate.norm:              35454.802 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.275 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2028.186 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 44323.355 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 69986.178 ops/s
[info]                  ·gc.alloc.rate:                   1577.898 MB/sec
[info]                  ·gc.alloc.rate.norm:              35482.990 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.936 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1353.344 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 30433.347 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 69768.093 ops/s
[info]                  ·gc.alloc.rate:                   1573.018 MB/sec
[info]                  ·gc.alloc.rate.norm:              35490.109 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.939 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1354.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 30550.532 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala":
[info]   70535.137 ±(99.9%) 4040.134 ops/s [Average]
[info]   (min, avg, max) = (69643.788, 70535.137, 72014.946), stdev = 1049.210
[info]   CI (99.9%): [66495.003, 74575.270] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1583.050 ±(99.9%) 92.545 MB/sec [Average]
[info]   (min, avg, max) = (1557.832, 1583.050, 1622.371), stdev = 24.034
[info]   CI (99.9%): [1490.504, 1675.595] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   35326.256 ±(99.9%) 844.240 B/op [Average]
[info]   (min, avg, max) = (34993.342, 35326.256, 35490.109), stdev = 219.247
[info]   CI (99.9%): [34482.016, 36170.496] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.042 ±(99.9%) 0.150 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.104), stdev = 0.039
[info]   CI (99.9%): [≈ 0, 0.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.922 ±(99.9%) 3.275 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.922, 2.275), stdev = 0.851
[info]   CI (99.9%): [≈ 0, 4.197] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1486.999 ±(99.9%) 1164.973 MB/sec [Average]
[info]   (min, avg, max) = (1349.334, 1486.999, 2028.186), stdev = 302.540
[info]   CI (99.9%): [322.026, 2651.972] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   33125.536 ±(99.9%) 24132.338 B/op [Average]
[info]   (min, avg, max) = (29806.729, 33125.536, 44323.355), stdev = 6267.092
[info]   CI (99.9%): [8993.198, 57257.874] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 3.000), stdev = 0.707
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 44.78% complete, ETA 01:14:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 441512.826 ops/s
[info] # Warmup Iteration   2: 562493.517 ops/s
[info] # Warmup Iteration   3: 585387.957 ops/s
[info] # Warmup Iteration   4: 581964.808 ops/s
[info] # Warmup Iteration   5: 577353.225 ops/s
[info] Iteration   1: 576240.082 ops/s
[info]                  ·gc.alloc.rate:                   822.829 MB/sec
[info]                  ·gc.alloc.rate.norm:              2247.771 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.114 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1346.746 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3678.984 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 591244.924 ops/s
[info]                  ·gc.alloc.rate:                   836.653 MB/sec
[info]                  ·gc.alloc.rate.norm:              2227.512 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.701 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1791.004 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 563729.039 ops/s
[info]                  ·gc.alloc.rate:                   795.745 MB/sec
[info]                  ·gc.alloc.rate.norm:              2221.698 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.759 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1878.325 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 587193.615 ops/s
[info]                  ·gc.alloc.rate:                   826.989 MB/sec
[info]                  ·gc.alloc.rate.norm:              2216.820 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.167 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.707 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1803.251 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 588002.094 ops/s
[info]                  ·gc.alloc.rate:                   822.096 MB/sec
[info]                  ·gc.alloc.rate.norm:              2200.030 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.924 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1800.828 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala":
[info]   581281.951 ±(99.9%) 43603.084 ops/s [Average]
[info]   (min, avg, max) = (563729.039, 581281.951, 591244.924), stdev = 11323.583
[info]   CI (99.9%): [537678.867, 624885.035] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   820.863 ±(99.9%) 58.498 MB/sec [Average]
[info]   (min, avg, max) = (795.745, 820.863, 836.653), stdev = 15.192
[info]   CI (99.9%): [762.365, 879.361] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   2222.766 ±(99.9%) 66.728 B/op [Average]
[info]   (min, avg, max) = (2200.030, 2222.766, 2247.771), stdev = 17.329
[info]   CI (99.9%): [2156.038, 2289.494] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.021 ±(99.9%) 0.113 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.062), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.056 ±(99.9%) 0.305 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.056, 0.167), stdev = 0.079
[info]   CI (99.9%): [≈ 0, 0.362] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   807.567 ±(99.9%) 1160.623 MB/sec [Average]
[info]   (min, avg, max) = (672.701, 807.567, 1346.746), stdev = 301.410
[info]   CI (99.9%): [≈ 0, 1968.190] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2190.478 ±(99.9%) 3206.942 B/op [Average]
[info]   (min, avg, max) = (1791.004, 2190.478, 3678.984), stdev = 832.833
[info]   CI (99.9%): [≈ 0, 5397.421] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 44.98% complete, ETA 01:14:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 471990.998 ops/s
[info] # Warmup Iteration   2: 670041.682 ops/s
[info] # Warmup Iteration   3: 676846.032 ops/s
[info] # Warmup Iteration   4: 676580.879 ops/s
[info] # Warmup Iteration   5: 678620.362 ops/s
[info] Iteration   1: 677160.209 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 677974.209 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 675891.636 ops/s
[info]                  ·gc.alloc.rate:      2.583 MB/sec
[info]                  ·gc.alloc.rate.norm: 6.015 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 677902.157 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 678442.976 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc":
[info]   677474.237 ±(99.9%) 3838.487 ops/s [Average]
[info]   (min, avg, max) = (675891.636, 677474.237, 678442.976), stdev = 996.843
[info]   CI (99.9%): [673635.751, 681312.724] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.517 ±(99.9%) 4.448 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.517, 2.583), stdev = 1.155
[info]   CI (99.9%): [≈ 0, 4.965] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   1.204 ±(99.9%) 10.358 B/op [Average]
[info]   (min, avg, max) = (0.001, 1.204, 6.015), stdev = 2.690
[info]   CI (99.9%): [≈ 0, 11.561] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 45.18% complete, ETA 01:14:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 30317.667 ops/s
[info] # Warmup Iteration   2: 67763.015 ops/s
[info] # Warmup Iteration   3: 67428.558 ops/s
[info] # Warmup Iteration   4: 69774.681 ops/s
[info] # Warmup Iteration   5: 69695.703 ops/s
[info] Iteration   1: 69739.197 ops/s
[info]                  ·gc.alloc.rate:                   1554.218 MB/sec
[info]                  ·gc.alloc.rate.norm:              35073.111 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.470 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2024.529 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 45686.344 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 69180.176 ops/s
[info]                  ·gc.alloc.rate:                   1533.113 MB/sec
[info]                  ·gc.alloc.rate.norm:              34874.361 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.947 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1351.115 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 30734.385 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 68221.531 ops/s
[info]                  ·gc.alloc.rate:                   1510.010 MB/sec
[info]                  ·gc.alloc.rate.norm:              34833.168 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.960 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1351.642 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 31179.903 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 65825.103 ops/s
[info]                  ·gc.alloc.rate:                   1457.592 MB/sec
[info]                  ·gc.alloc.rate.norm:              34849.642 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.493 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1352.937 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 32347.432 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 69004.066 ops/s
[info]                  ·gc.alloc.rate:                   1527.325 MB/sec
[info]                  ·gc.alloc.rate.norm:              34835.802 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1353.566 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 30872.644 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson":
[info]   68394.014 ±(99.9%) 5911.956 ops/s [Average]
[info]   (min, avg, max) = (65825.103, 68394.014, 69739.197), stdev = 1535.316
[info]   CI (99.9%): [62482.058, 74305.971] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1516.452 ±(99.9%) 140.536 MB/sec [Average]
[info]   (min, avg, max) = (1457.592, 1516.452, 1554.218), stdev = 36.497
[info]   CI (99.9%): [1375.916, 1656.987] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   34893.217 ±(99.9%) 392.305 B/op [Average]
[info]   (min, avg, max) = (34833.168, 34893.217, 35073.111), stdev = 101.880
[info]   CI (99.9%): [34500.912, 35285.522] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   0.033 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   0.774 ±(99.9%) 2.173 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.774, 1.493), stdev = 0.564
[info]   CI (99.9%): [≈ 0, 2.947] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   1486.758 ±(99.9%) 1157.599 MB/sec [Average]
[info]   (min, avg, max) = (1351.115, 1486.758, 2024.529), stdev = 300.625
[info]   CI (99.9%): [329.159, 2644.357] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   34164.142 ±(99.9%) 24922.654 B/op [Average]
[info]   (min, avg, max) = (30734.385, 34164.142, 45686.344), stdev = 6472.334
[info]   CI (99.9%): [9241.488, 59086.795] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 45.38% complete, ETA 01:13:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 15843.899 ops/s
[info] # Warmup Iteration   2: 20976.486 ops/s
[info] # Warmup Iteration   3: 21915.779 ops/s
[info] # Warmup Iteration   4: 21896.387 ops/s
[info] # Warmup Iteration   5: 21894.743 ops/s
[info] Iteration   1: 21989.704 ops/s
[info]                  ·gc.alloc.rate:      531.202 MB/sec
[info]                  ·gc.alloc.rate.norm: 38018.871 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 21652.394 ops/s
[info]                  ·gc.alloc.rate:                   548.148 MB/sec
[info]                  ·gc.alloc.rate.norm:              39846.559 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2.935 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     213.361 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.441 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 48954.529 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 22044.860 ops/s
[info]                  ·gc.alloc.rate:                   543.048 MB/sec
[info]                  ·gc.alloc.rate.norm:              38768.770 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.835 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 48034.369 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 22027.864 ops/s
[info]                  ·gc.alloc.rate:                   544.369 MB/sec
[info]                  ·gc.alloc.rate.norm:              38897.226 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.732 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 48069.252 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 22072.625 ops/s
[info]                  ·gc.alloc.rate:      530.888 MB/sec
[info]                  ·gc.alloc.rate.norm: 37856.018 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeUPickle":
[info]   21957.489 ±(99.9%) 666.850 ops/s [Average]
[info]   (min, avg, max) = (21652.394, 21957.489, 22072.625), stdev = 173.179
[info]   CI (99.9%): [21290.639, 22624.340] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeUPickle:·gc.alloc.rate":
[info]   539.531 ±(99.9%) 30.690 MB/sec [Average]
[info]   (min, avg, max) = (530.888, 539.531, 548.148), stdev = 7.970
[info]   CI (99.9%): [508.841, 570.221] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeUPickle:·gc.alloc.rate.norm":
[info]   38677.489 ±(99.9%) 3063.581 B/op [Average]
[info]   (min, avg, max) = (37856.018, 38677.489, 39846.559), stdev = 795.602
[info]   CI (99.9%): [35613.907, 41741.070] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeUPickle:·gc.churn.PS_Eden_Space":
[info]   0.587 ±(99.9%) 5.054 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.587, 2.935), stdev = 1.313
[info]   CI (99.9%): [≈ 0, 5.641] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   42.672 ±(99.9%) 367.421 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 42.672, 213.361), stdev = 95.418
[info]   CI (99.9%): [≈ 0, 410.093] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space":
[info]   403.802 ±(99.9%) 1419.420 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 403.802, 673.441), stdev = 368.619
[info]   CI (99.9%): [≈ 0, 1823.221] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   29011.630 ±(99.9%) 101989.851 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 29011.630, 48954.529), stdev = 26486.441
[info]   CI (99.9%): [≈ 0, 131001.482] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeUPickle:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfOffsetTimesBenchmark.writeUPickle:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 3.000), stdev = 1.225
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 45.58% complete, ETA 01:13:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2261.663 ops/s
[info] # Warmup Iteration   2: 16925.981 ops/s
[info] # Warmup Iteration   3: 18465.049 ops/s
[info] # Warmup Iteration   4: 18591.553 ops/s
[info] # Warmup Iteration   5: 18489.239 ops/s
[info] Iteration   1: 18506.013 ops/s
[info]                  ·gc.alloc.rate:                   667.559 MB/sec
[info]                  ·gc.alloc.rate.norm:              56784.793 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.499 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     42.487 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.290 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 57272.303 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 18377.996 ops/s
[info]                  ·gc.alloc.rate:                   671.781 MB/sec
[info]                  ·gc.alloc.rate.norm:              57535.806 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.026 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 57728.153 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 18565.178 ops/s
[info]                  ·gc.alloc.rate:                   664.323 MB/sec
[info]                  ·gc.alloc.rate.norm:              56308.684 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.765 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.211 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 57146.799 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 18505.698 ops/s
[info]                  ·gc.alloc.rate:                   673.599 MB/sec
[info]                  ·gc.alloc.rate.norm:              57293.786 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.770 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.012 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 57328.953 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 18599.186 ops/s
[info]                  ·gc.alloc.rate:                   667.788 MB/sec
[info]                  ·gc.alloc.rate.norm:              56503.932 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.761 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.115 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 57039.288 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce":
[info]   18510.814 ±(99.9%) 324.775 ops/s [Average]
[info]   (min, avg, max) = (18377.996, 18510.814, 18599.186), stdev = 84.343
[info]   CI (99.9%): [18186.039, 18835.589] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:·gc.alloc.rate":
[info]   669.010 ±(99.9%) 14.188 MB/sec [Average]
[info]   (min, avg, max) = (664.323, 669.010, 673.599), stdev = 3.685
[info]   CI (99.9%): [654.822, 683.198] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   56885.400 ±(99.9%) 1999.044 B/op [Average]
[info]   (min, avg, max) = (56308.684, 56885.400, 57535.806), stdev = 519.145
[info]   CI (99.9%): [54886.356, 58884.444] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   0.112 ±(99.9%) 0.834 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.112, 0.499), stdev = 0.217
[info]   CI (99.9%): [≈ 0, 0.946] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   9.557 ±(99.9%) 70.946 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 9.557, 42.487), stdev = 18.424
[info]   CI (99.9%): [≈ 0, 80.503] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   673.931 ±(99.9%) 1.413 MB/sec [Average]
[info]   (min, avg, max) = (673.290, 673.931, 674.211), stdev = 0.367
[info]   CI (99.9%): [672.517, 675.344] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   57303.099 ±(99.9%) 1012.056 B/op [Average]
[info]   (min, avg, max) = (57039.288, 57303.099, 57728.153), stdev = 262.828
[info]   CI (99.9%): [56291.043, 58315.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readCirce:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 45.78% complete, ETA 01:13:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6987.708 ops/s
[info] # Warmup Iteration   2: 17841.903 ops/s
[info] # Warmup Iteration   3: 19323.983 ops/s
[info] # Warmup Iteration   4: 19236.987 ops/s
[info] # Warmup Iteration   5: 19324.190 ops/s
[info] Iteration   1: 19351.732 ops/s
[info]                  ·gc.alloc.rate:                   563.358 MB/sec
[info]                  ·gc.alloc.rate.norm:              45824.835 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.937 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     76.185 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.684 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 54798.999 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 19285.980 ops/s
[info]                  ·gc.alloc.rate:                   562.941 MB/sec
[info]                  ·gc.alloc.rate.norm:              45946.322 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.001 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 55010.830 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 19481.525 ops/s
[info]                  ·gc.alloc.rate:      556.217 MB/sec
[info]                  ·gc.alloc.rate.norm: 44939.773 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 19454.672 ops/s
[info]                  ·gc.alloc.rate:                   551.516 MB/sec
[info]                  ·gc.alloc.rate.norm:              44619.499 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.018 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 54530.263 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 19407.058 ops/s
[info]                  ·gc.alloc.rate:                   555.307 MB/sec
[info]                  ·gc.alloc.rate.norm:              45034.361 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.688 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.095 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 54667.916 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala":
[info]   19396.194 ±(99.9%) 304.073 ops/s [Average]
[info]   (min, avg, max) = (19285.980, 19396.194, 19481.525), stdev = 78.967
[info]   CI (99.9%): [19092.120, 19700.267] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   557.868 ±(99.9%) 19.776 MB/sec [Average]
[info]   (min, avg, max) = (551.516, 557.868, 563.358), stdev = 5.136
[info]   CI (99.9%): [538.092, 577.644] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   45272.958 ±(99.9%) 2239.453 B/op [Average]
[info]   (min, avg, max) = (44619.499, 45272.958, 45946.322), stdev = 581.579
[info]   CI (99.9%): [43033.505, 47512.411] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.191 ±(99.9%) 1.604 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.191, 0.937), stdev = 0.417
[info]   CI (99.9%): [≈ 0, 1.796] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   15.575 ±(99.9%) 130.499 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 15.575, 76.185), stdev = 33.890
[info]   CI (99.9%): [≈ 0, 146.073] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   539.160 ±(99.9%) 1160.582 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 539.160, 674.095), stdev = 301.399
[info]   CI (99.9%): [≈ 0, 1699.742] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   43801.601 ±(99.9%) 94288.715 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 43801.601, 55010.830), stdev = 24486.480
[info]   CI (99.9%): [≈ 0, 138090.317] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJacksonScala:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 0.707
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 45.98% complete, ETA 01:13:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 97504.477 ops/s
[info] # Warmup Iteration   2: 109780.204 ops/s
[info] # Warmup Iteration   3: 112191.616 ops/s
[info] # Warmup Iteration   4: 116164.769 ops/s
[info] # Warmup Iteration   5: 115100.218 ops/s
[info] Iteration   1: 116551.652 ops/s
[info]                  ·gc.alloc.rate:      292.605 MB/sec
[info]                  ·gc.alloc.rate.norm: 3952.004 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 112473.577 ops/s
[info]                  ·gc.alloc.rate:                   298.520 MB/sec
[info]                  ·gc.alloc.rate.norm:              4177.118 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      511.606 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7158.788 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 116684.410 ops/s
[info]                  ·gc.alloc.rate:      292.959 MB/sec
[info]                  ·gc.alloc.rate.norm: 3952.003 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 116383.308 ops/s
[info]                  ·gc.alloc.rate:                   308.846 MB/sec
[info]                  ·gc.alloc.rate.norm:              4177.177 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.031 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.422 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.013 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9116.094 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 116714.291 ops/s
[info]                  ·gc.alloc.rate:      293.095 MB/sec
[info]                  ·gc.alloc.rate.norm: 3952.004 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala":
[info]   115761.448 ±(99.9%) 7095.273 ops/s [Average]
[info]   (min, avg, max) = (112473.577, 115761.448, 116714.291), stdev = 1842.620
[info]   CI (99.9%): [108666.174, 122856.721] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   297.205 ±(99.9%) 26.770 MB/sec [Average]
[info]   (min, avg, max) = (292.605, 297.205, 308.846), stdev = 6.952
[info]   CI (99.9%): [270.435, 323.975] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   4042.061 ±(99.9%) 474.847 B/op [Average]
[info]   (min, avg, max) = (3952.003, 4042.061, 4177.177), stdev = 123.316
[info]   CI (99.9%): [3567.214, 4516.908] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.006 ±(99.9%) 0.054 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.006, 0.031), stdev = 0.014
[info]   CI (99.9%): [≈ 0, 0.060] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.084 ±(99.9%) 0.727 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.084, 0.422), stdev = 0.189
[info]   CI (99.9%): [≈ 0, 0.812] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   237.124 ±(99.9%) 1269.685 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 237.124, 674.013), stdev = 329.733
[info]   CI (99.9%): [≈ 0, 1506.809] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   3254.976 ±(99.9%) 17368.182 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3254.976, 9116.094), stdev = 4510.462
[info]   CI (99.9%): [≈ 0, 20623.158] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.count":
[info]   2.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.000), stdev = 0.548
[info]   CI (99.9%): [2.000, 2.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 3.000), stdev = 1.643
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 46.18% complete, ETA 01:12:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3042.194 ops/s
[info] # Warmup Iteration   2: 15319.692 ops/s
[info] # Warmup Iteration   3: 16425.780 ops/s
[info] # Warmup Iteration   4: 16460.203 ops/s
[info] # Warmup Iteration   5: 16446.300 ops/s
[info] Iteration   1: 16539.633 ops/s
[info]                  ·gc.alloc.rate:                   1016.943 MB/sec
[info]                  ·gc.alloc.rate.norm:              96781.665 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.981 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.975 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 64141.617 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 15967.760 ops/s
[info]                  ·gc.alloc.rate:                   1002.422 MB/sec
[info]                  ·gc.alloc.rate.norm:              98799.893 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.052 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.341 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 132894.040 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 16139.777 ops/s
[info]                  ·gc.alloc.rate:                   1013.275 MB/sec
[info]                  ·gc.alloc.rate.norm:              98819.415 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.075 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 65738.998 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 16573.584 ops/s
[info]                  ·gc.alloc.rate:                   1034.972 MB/sec
[info]                  ·gc.alloc.rate.norm:              98291.631 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.977 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.749 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 128091.114 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 16598.825 ops/s
[info]                  ·gc.alloc.rate:                   1021.389 MB/sec
[info]                  ·gc.alloc.rate.norm:              96876.478 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.562 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 63980.694 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson":
[info]   16363.916 ±(99.9%) 1118.009 ops/s [Average]
[info]   (min, avg, max) = (15967.760, 16363.916, 16598.825), stdev = 290.343
[info]   CI (99.9%): [15245.907, 17481.925] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1017.800 ±(99.9%) 45.783 MB/sec [Average]
[info]   (min, avg, max) = (1002.422, 1017.800, 1034.972), stdev = 11.890
[info]   CI (99.9%): [972.017, 1063.583] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   97913.816 ±(99.9%) 3901.246 B/op [Average]
[info]   (min, avg, max) = (96781.665, 97913.816, 98819.415), stdev = 1013.141
[info]   CI (99.9%): [94012.570, 101815.063] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   0.012 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.056] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   1.202 ±(99.9%) 4.226 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.202, 2.052), stdev = 1.098
[info]   CI (99.9%): [≈ 0, 5.428] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   943.940 ±(99.9%) 1422.243 MB/sec [Average]
[info]   (min, avg, max) = (673.975, 943.940, 1348.749), stdev = 369.352
[info]   CI (99.9%): [≈ 0, 2366.183] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   90969.293 ±(99.9%) 139108.882 B/op [Average]
[info]   (min, avg, max) = (63980.694, 90969.293, 132894.040), stdev = 36126.135
[info]   CI (99.9%): [≈ 0, 230078.175] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readPlayJson:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 46.39% complete, ETA 01:12:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 9675.620 ops/s
[info] # Warmup Iteration   2: 19305.840 ops/s
[info] # Warmup Iteration   3: 19324.759 ops/s
[info] # Warmup Iteration   4: 19333.650 ops/s
[info] # Warmup Iteration   5: 19520.818 ops/s
[info] Iteration   1: 18980.798 ops/s
[info]                  ·gc.alloc.rate:                   588.765 MB/sec
[info]                  ·gc.alloc.rate.norm:              48832.834 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3.111 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     258.051 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.277 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 55842.306 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 19471.746 ops/s
[info]                  ·gc.alloc.rate:                   598.912 MB/sec
[info]                  ·gc.alloc.rate.norm:              48415.828 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.065 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 54329.526 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 19551.464 ops/s
[info]                  ·gc.alloc.rate:      579.751 MB/sec
[info]                  ·gc.alloc.rate.norm: 46672.021 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 19516.970 ops/s
[info]                  ·gc.alloc.rate:                   596.357 MB/sec
[info]                  ·gc.alloc.rate.norm:              48094.303 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.050 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 54198.719 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 19520.135 ops/s
[info]                  ·gc.alloc.rate:                   597.425 MB/sec
[info]                  ·gc.alloc.rate.norm:              48170.793 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.678 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      671.450 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 54139.456 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readUPickle":
[info]   19408.223 ±(99.9%) 926.549 ops/s [Average]
[info]   (min, avg, max) = (18980.798, 19408.223, 19551.464), stdev = 240.622
[info]   CI (99.9%): [18481.674, 20334.771] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readUPickle:·gc.alloc.rate":
[info]   592.242 ±(99.9%) 30.829 MB/sec [Average]
[info]   (min, avg, max) = (579.751, 592.242, 598.912), stdev = 8.006
[info]   CI (99.9%): [561.414, 623.071] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readUPickle:·gc.alloc.rate.norm":
[info]   48037.156 ±(99.9%) 3140.822 B/op [Average]
[info]   (min, avg, max) = (46672.021, 48037.156, 48832.834), stdev = 815.661
[info]   CI (99.9%): [44896.334, 51177.978] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readUPickle:·gc.churn.PS_Eden_Space":
[info]   0.626 ±(99.9%) 5.349 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.626, 3.111), stdev = 1.389
[info]   CI (99.9%): [≈ 0, 5.975] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   51.946 ±(99.9%) 443.666 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 51.946, 258.051), stdev = 115.219
[info]   CI (99.9%): [≈ 0, 495.612] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space":
[info]   537.768 ±(99.9%) 1157.590 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 537.768, 673.277), stdev = 300.622
[info]   CI (99.9%): [≈ 0, 1695.358] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   43702.001 ±(99.9%) 94110.985 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 43702.001, 55842.306), stdev = 24440.324
[info]   CI (99.9%): [≈ 0, 137812.986] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readUPickle:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.readUPickle:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 3.000), stdev = 1.095
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 46.59% complete, ETA 01:12:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 22553.178 ops/s
[info] # Warmup Iteration   2: 45926.211 ops/s
[info] # Warmup Iteration   3: 46625.005 ops/s
[info] # Warmup Iteration   4: 46929.534 ops/s
[info] # Warmup Iteration   5: 47084.202 ops/s
[info] Iteration   1: 47104.775 ops/s
[info]                  ·gc.alloc.rate:                   852.819 MB/sec
[info]                  ·gc.alloc.rate.norm:              28500.524 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.975 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 22523.696 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 46937.281 ops/s
[info]                  ·gc.alloc.rate:                   876.732 MB/sec
[info]                  ·gc.alloc.rate.norm:              29403.381 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3.490 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.305 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 45252.311 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 47178.000 ops/s
[info]                  ·gc.alloc.rate:                   862.963 MB/sec
[info]                  ·gc.alloc.rate.norm:              28790.723 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.739 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 22511.073 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 47255.632 ops/s
[info]                  ·gc.alloc.rate:                   862.531 MB/sec
[info]                  ·gc.alloc.rate.norm:              28721.821 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.693 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.903 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 22473.923 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 47248.827 ops/s
[info]                  ·gc.alloc.rate:                   857.859 MB/sec
[info]                  ·gc.alloc.rate.norm:              28576.226 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.693 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      675.434 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 22499.441 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce":
[info]   47144.903 ±(99.9%) 505.279 ops/s [Average]
[info]   (min, avg, max) = (46937.281, 47144.903, 47255.632), stdev = 131.219
[info]   CI (99.9%): [46639.625, 47650.182] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:·gc.alloc.rate":
[info]   862.581 ±(99.9%) 34.333 MB/sec [Average]
[info]   (min, avg, max) = (852.819, 862.581, 876.732), stdev = 8.916
[info]   CI (99.9%): [828.248, 896.913] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   28798.535 ±(99.9%) 1374.978 B/op [Average]
[info]   (min, avg, max) = (28500.524, 28798.535, 29403.381), stdev = 357.077
[info]   CI (99.9%): [27423.557, 30173.513] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   0.029 ±(99.9%) 0.166 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.104), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.195] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.975 ±(99.9%) 5.575 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.975, 3.490), stdev = 1.448
[info]   CI (99.9%): [≈ 0, 6.550] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   809.671 ±(99.9%) 1161.604 MB/sec [Average]
[info]   (min, avg, max) = (673.975, 809.671, 1349.305), stdev = 301.665
[info]   CI (99.9%): [≈ 0, 1971.275] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   27052.089 ±(99.9%) 39177.414 B/op [Average]
[info]   (min, avg, max) = (22473.923, 27052.089, 45252.311), stdev = 10174.250
[info]   CI (99.9%): [≈ 0, 66229.502] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeCirce:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 3.000), stdev = 0.894
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 46.79% complete, ETA 01:12:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 24960.167 ops/s
[info] # Warmup Iteration   2: 64909.599 ops/s
[info] # Warmup Iteration   3: 65857.593 ops/s
[info] # Warmup Iteration   4: 66332.579 ops/s
[info] # Warmup Iteration   5: 66282.915 ops/s
[info] Iteration   1: 66258.903 ops/s
[info]                  ·gc.alloc.rate:                   1085.734 MB/sec
[info]                  ·gc.alloc.rate.norm:              25794.280 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.340 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15996.836 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 66288.493 ops/s
[info]                  ·gc.alloc.rate:                   1115.882 MB/sec
[info]                  ·gc.alloc.rate.norm:              26498.961 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.483 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1347.948 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 32009.861 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 66289.548 ops/s
[info]                  ·gc.alloc.rate:                   1086.767 MB/sec
[info]                  ·gc.alloc.rate.norm:              25806.030 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.378 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16013.563 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 66368.288 ops/s
[info]                  ·gc.alloc.rate:                   1103.033 MB/sec
[info]                  ·gc.alloc.rate.norm:              26151.207 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.481 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.871 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 32003.359 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 66535.700 ops/s
[info]                  ·gc.alloc.rate:                   1101.431 MB/sec
[info]                  ·gc.alloc.rate.norm:              26057.868 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      675.015 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15969.642 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala":
[info]   66348.186 ±(99.9%) 432.828 ops/s [Average]
[info]   (min, avg, max) = (66258.903, 66348.186, 66535.700), stdev = 112.404
[info]   CI (99.9%): [65915.359, 66781.014] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1098.569 ±(99.9%) 48.397 MB/sec [Average]
[info]   (min, avg, max) = (1085.734, 1098.569, 1115.882), stdev = 12.569
[info]   CI (99.9%): [1050.172, 1146.967] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   26061.669 ±(99.9%) 1116.195 B/op [Average]
[info]   (min, avg, max) = (25794.280, 26061.669, 26498.961), stdev = 289.872
[info]   CI (99.9%): [24945.474, 27177.864] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.025 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.157] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.593 ±(99.9%) 3.125 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.593, 1.483), stdev = 0.812
[info]   CI (99.9%): [≈ 0, 3.718] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   944.110 ±(99.9%) 1422.931 MB/sec [Average]
[info]   (min, avg, max) = (673.340, 944.110, 1349.871), stdev = 369.531
[info]   CI (99.9%): [≈ 0, 2367.041] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   22398.652 ±(99.9%) 33773.381 B/op [Average]
[info]   (min, avg, max) = (15969.642, 22398.652, 32009.861), stdev = 8770.840
[info]   CI (99.9%): [≈ 0, 56172.033] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 46.99% complete, ETA 01:11:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 224250.677 ops/s
[info] # Warmup Iteration   2: 294744.131 ops/s
[info] # Warmup Iteration   3: 301150.717 ops/s
[info] # Warmup Iteration   4: 295814.560 ops/s
[info] # Warmup Iteration   5: 301666.908 ops/s
[info] Iteration   1: 300348.431 ops/s
[info]                  ·gc.alloc.rate:                   594.600 MB/sec
[info]                  ·gc.alloc.rate.norm:              3116.312 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2.466 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12.926 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      675.348 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3539.515 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 300723.247 ops/s
[info]                  ·gc.alloc.rate:                   594.307 MB/sec
[info]                  ·gc.alloc.rate.norm:              3110.732 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.545 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.722 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3531.639 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 299716.043 ops/s
[info]                  ·gc.alloc.rate:      574.277 MB/sec
[info]                  ·gc.alloc.rate.norm: 3016.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 300803.352 ops/s
[info]                  ·gc.alloc.rate:                   592.907 MB/sec
[info]                  ·gc.alloc.rate.norm:              3101.870 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.834 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3530.477 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 299951.971 ops/s
[info]                  ·gc.alloc.rate:                   594.373 MB/sec
[info]                  ·gc.alloc.rate.norm:              3119.095 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.218 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.008 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3536.996 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala":
[info]   300308.609 ±(99.9%) 1823.073 ops/s [Average]
[info]   (min, avg, max) = (299716.043, 300308.609, 300803.352), stdev = 473.446
[info]   CI (99.9%): [298485.535, 302131.682] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   590.093 ±(99.9%) 34.142 MB/sec [Average]
[info]   (min, avg, max) = (574.277, 590.093, 594.600), stdev = 8.867
[info]   CI (99.9%): [555.951, 624.235] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   3092.802 ±(99.9%) 167.249 B/op [Average]
[info]   (min, avg, max) = (3016.001, 3092.802, 3119.095), stdev = 43.434
[info]   CI (99.9%): [2925.553, 3260.051] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.522 ±(99.9%) 4.188 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.522, 2.466), stdev = 1.088
[info]   CI (99.9%): [≈ 0, 4.710] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   2.738 ±(99.9%) 21.948 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.738, 12.926), stdev = 5.700
[info]   CI (99.9%): [≈ 0, 24.686] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   539.782 ±(99.9%) 1161.923 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 539.782, 675.348), stdev = 301.748
[info]   CI (99.9%): [≈ 0, 1701.706] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2827.725 ±(99.9%) 6086.909 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2827.725, 3539.515), stdev = 1580.751
[info]   CI (99.9%): [≈ 0, 8914.634] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 3.000), stdev = 1.304
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 47.19% complete, ETA 01:11:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 247995.647 ops/s
[info] # Warmup Iteration   2: 320771.093 ops/s
[info] # Warmup Iteration   3: 329556.433 ops/s
[info] # Warmup Iteration   4: 329134.924 ops/s
[info] # Warmup Iteration   5: 329181.535 ops/s
[info] Iteration   1: 329207.545 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 329445.508 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 329628.652 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 328532.587 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 329334.338 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc":
[info]   329229.726 ±(99.9%) 1614.451 ops/s [Average]
[info]   (min, avg, max) = (328532.587, 329229.726, 329628.652), stdev = 419.268
[info]   CI (99.9%): [327615.275, 330844.177] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.001, 0.002), stdev = 0.001
[info]   CI (99.9%): [0.001, 0.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 47.39% complete, ETA 01:11:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 30774.473 ops/s
[info] # Warmup Iteration   2: 60911.367 ops/s
[info] # Warmup Iteration   3: 62279.487 ops/s
[info] # Warmup Iteration   4: 63370.972 ops/s
[info] # Warmup Iteration   5: 63017.303 ops/s
[info] Iteration   1: 63390.747 ops/s
[info]                  ·gc.alloc.rate:                   1173.624 MB/sec
[info]                  ·gc.alloc.rate.norm:              29143.611 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1347.408 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 33459.033 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 63328.521 ops/s
[info]                  ·gc.alloc.rate:                   1152.878 MB/sec
[info]                  ·gc.alloc.rate.norm:              28655.318 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.053 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16753.906 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 63219.707 ops/s
[info]                  ·gc.alloc.rate:                   1164.393 MB/sec
[info]                  ·gc.alloc.rate.norm:              28992.511 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.518 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.700 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 33581.629 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 63045.126 ops/s
[info]                  ·gc.alloc.rate:                   1171.606 MB/sec
[info]                  ·gc.alloc.rate.norm:              29250.830 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.039 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.115 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 33707.554 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 63432.292 ops/s
[info]                  ·gc.alloc.rate:                   1162.684 MB/sec
[info]                  ·gc.alloc.rate.norm:              28853.399 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      675.689 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16768.026 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson":
[info]   63283.279 ±(99.9%) 598.276 ops/s [Average]
[info]   (min, avg, max) = (63045.126, 63283.279, 63432.292), stdev = 155.370
[info]   CI (99.9%): [62685.003, 63881.554] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1165.037 ±(99.9%) 31.677 MB/sec [Average]
[info]   (min, avg, max) = (1152.878, 1165.037, 1173.624), stdev = 8.227
[info]   CI (99.9%): [1133.360, 1196.714] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   28979.134 ±(99.9%) 906.573 B/op [Average]
[info]   (min, avg, max) = (28655.318, 28979.134, 29250.830), stdev = 235.434
[info]   CI (99.9%): [28072.561, 29885.707] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   0.012 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   0.312 ±(99.9%) 1.789 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.312, 1.039), stdev = 0.465
[info]   CI (99.9%): [≈ 0, 2.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   1079.193 ±(99.9%) 1421.256 MB/sec [Average]
[info]   (min, avg, max) = (674.053, 1079.193, 1350.115), stdev = 369.096
[info]   CI (99.9%): [≈ 0, 2500.449] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   26854.030 ±(99.9%) 35480.159 B/op [Average]
[info]   (min, avg, max) = (16753.906, 26854.030, 33707.554), stdev = 9214.085
[info]   CI (99.9%): [≈ 0, 62334.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writePlayJson:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 3.000), stdev = 0.837
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 47.59% complete, ETA 01:11:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 12098.867 ops/s
[info] # Warmup Iteration   2: 16595.530 ops/s
[info] # Warmup Iteration   3: 16766.850 ops/s
[info] # Warmup Iteration   4: 16668.204 ops/s
[info] # Warmup Iteration   5: 16763.012 ops/s
[info] Iteration   1: 16760.429 ops/s
[info]                  ·gc.alloc.rate:                   381.874 MB/sec
[info]                  ·gc.alloc.rate.norm:              35861.922 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      511.528 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 48037.841 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 16672.874 ops/s
[info]                  ·gc.alloc.rate:                   392.346 MB/sec
[info]                  ·gc.alloc.rate.norm:              37034.525 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.141 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 63633.900 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 16829.047 ops/s
[info]                  ·gc.alloc.rate:      368.893 MB/sec
[info]                  ·gc.alloc.rate.norm: 34504.394 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 16726.197 ops/s
[info]                  ·gc.alloc.rate:                   385.809 MB/sec
[info]                  ·gc.alloc.rate.norm:              36305.715 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2.831 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     266.376 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.033 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 63428.506 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 16770.537 ops/s
[info]                  ·gc.alloc.rate:      367.652 MB/sec
[info]                  ·gc.alloc.rate.norm: 34504.024 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeUPickle":
[info]   16751.817 ±(99.9%) 221.851 ops/s [Average]
[info]   (min, avg, max) = (16672.874, 16751.817, 16829.047), stdev = 57.614
[info]   CI (99.9%): [16529.965, 16973.668] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeUPickle:·gc.alloc.rate":
[info]   379.315 ±(99.9%) 41.436 MB/sec [Average]
[info]   (min, avg, max) = (367.652, 379.315, 392.346), stdev = 10.761
[info]   CI (99.9%): [337.879, 420.750] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeUPickle:·gc.alloc.rate.norm":
[info]   35642.116 ±(99.9%) 4312.526 B/op [Average]
[info]   (min, avg, max) = (34504.024, 35642.116, 37034.525), stdev = 1119.949
[info]   CI (99.9%): [31329.590, 39954.642] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space":
[info]   0.566 ±(99.9%) 4.875 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.566, 2.831), stdev = 1.266
[info]   CI (99.9%): [≈ 0, 5.441] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   53.275 ±(99.9%) 458.715 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 53.275, 266.376), stdev = 119.127
[info]   CI (99.9%): [≈ 0, 511.990] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space":
[info]   371.941 ±(99.9%) 1332.164 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 371.941, 674.141), stdev = 345.959
[info]   CI (99.9%): [≈ 0, 1704.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   35020.049 ±(99.9%) 125487.037 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 35020.049, 63633.900), stdev = 32588.585
[info]   CI (99.9%): [≈ 0, 160507.086] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeUPickle:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfPeriodsBenchmark.writeUPickle:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.800, 3.000), stdev = 1.643
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 47.79% complete, ETA 01:10:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 76482.040 ops/s
[info] # Warmup Iteration   2: 145406.591 ops/s
[info] # Warmup Iteration   3: 148765.175 ops/s
[info] # Warmup Iteration   4: 153199.473 ops/s
[info] # Warmup Iteration   5: 150566.341 ops/s
[info] Iteration   1: 151563.056 ops/s
[info]                  ·gc.alloc.rate:                   1922.057 MB/sec
[info]                  ·gc.alloc.rate.norm:              19965.021 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.432 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2017.462 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 20956.025 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 152724.458 ops/s
[info]                  ·gc.alloc.rate:                   1923.224 MB/sec
[info]                  ·gc.alloc.rate.norm:              19815.738 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.644 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2021.461 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 20827.908 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 152260.767 ops/s
[info]                  ·gc.alloc.rate:                   1920.063 MB/sec
[info]                  ·gc.alloc.rate.norm:              19833.484 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2022.990 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 20896.683 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 152731.739 ops/s
[info]                  ·gc.alloc.rate:                   1921.812 MB/sec
[info]                  ·gc.alloc.rate.norm:              19806.890 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.215 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.725 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13921.064 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 149417.102 ops/s
[info]                  ·gc.alloc.rate:                   1908.479 MB/sec
[info]                  ·gc.alloc.rate.norm:              20107.507 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.658 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2028.566 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 21372.732 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce":
[info]   151739.425 ±(99.9%) 5325.548 ops/s [Average]
[info]   (min, avg, max) = (149417.102, 151739.425, 152731.739), stdev = 1383.028
[info]   CI (99.9%): [146413.877, 157064.972] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:·gc.alloc.rate":
[info]   1919.127 ±(99.9%) 23.330 MB/sec [Average]
[info]   (min, avg, max) = (1908.479, 1919.127, 1923.224), stdev = 6.059
[info]   CI (99.9%): [1895.797, 1942.457] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   19905.728 ±(99.9%) 499.534 B/op [Average]
[info]   (min, avg, max) = (19806.890, 19905.728, 20107.507), stdev = 129.727
[info]   CI (99.9%): [19406.194, 20405.262] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   0.037 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.390 ±(99.9%) 1.090 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.390, 0.658), stdev = 0.283
[info]   CI (99.9%): [≈ 0, 1.480] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1888.241 ±(99.9%) 1157.144 MB/sec [Average]
[info]   (min, avg, max) = (1350.725, 1888.241, 2028.566), stdev = 300.507
[info]   CI (99.9%): [731.097, 3045.385] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   19594.882 ±(99.9%) 12240.674 B/op [Average]
[info]   (min, avg, max) = (13921.064, 19594.882, 21372.732), stdev = 3178.864
[info]   CI (99.9%): [7354.208, 31835.557] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readCirce:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 47.99% complete, ETA 01:10:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.804 ops/s
[info] # Warmup Iteration   2: 695311.900 ops/s
[info] # Warmup Iteration   3: 722852.131 ops/s
[info] # Warmup Iteration   4: 760385.147 ops/s
[info] # Warmup Iteration   5: 763514.615 ops/s
[info] Iteration   1: 763033.136 ops/s
[info]                  ·gc.alloc.rate:                   435.307 MB/sec
[info]                  ·gc.alloc.rate.norm:              897.741 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      670.910 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1383.628 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 766009.428 ops/s
[info]                  ·gc.alloc.rate:      424.372 MB/sec
[info]                  ·gc.alloc.rate.norm: 872.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 740279.713 ops/s
[info]                  ·gc.alloc.rate:                   430.901 MB/sec
[info]                  ·gc.alloc.rate.norm:              916.271 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3.961 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8.424 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      670.685 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1426.150 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 746923.090 ops/s
[info]                  ·gc.alloc.rate:                   429.340 MB/sec
[info]                  ·gc.alloc.rate.norm:              904.761 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      670.076 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1412.070 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 747269.131 ops/s
[info]                  ·gc.alloc.rate:      413.954 MB/sec
[info]                  ·gc.alloc.rate.norm: 872.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava":
[info]   752702.900 ±(99.9%) 43096.478 ops/s [Average]
[info]   (min, avg, max) = (740279.713, 752702.900, 766009.428), stdev = 11192.018
[info]   CI (99.9%): [709606.422, 795799.377] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   426.775 ±(99.9%) 31.434 MB/sec [Average]
[info]   (min, avg, max) = (413.954, 426.775, 435.307), stdev = 8.163
[info]   CI (99.9%): [395.341, 458.209] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   892.555 ±(99.9%) 76.610 B/op [Average]
[info]   (min, avg, max) = (872.001, 892.555, 916.271), stdev = 19.895
[info]   CI (99.9%): [815.945, 969.164] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   0.792 ±(99.9%) 6.822 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.792, 3.961), stdev = 1.772
[info]   CI (99.9%): [≈ 0, 7.614] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   1.685 ±(99.9%) 14.506 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.685, 8.424), stdev = 3.767
[info]   CI (99.9%): [≈ 0, 16.191] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   402.334 ±(99.9%) 1414.262 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 402.334, 670.910), stdev = 367.279
[info]   CI (99.9%): [≈ 0, 1816.596] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   844.370 ±(99.9%) 2968.665 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 844.370, 1426.150), stdev = 770.953
[info]   CI (99.9%): [≈ 0, 3813.035] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readDslJsonJava:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 3.000), stdev = 1.517
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 48.19% complete, ETA 01:10:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 162504.766 ops/s
[info] # Warmup Iteration   2: 362319.730 ops/s
[info] # Warmup Iteration   3: 382203.932 ops/s
[info] # Warmup Iteration   4: 386919.051 ops/s
[info] # Warmup Iteration   5: 376342.555 ops/s
[info] Iteration   1: 375625.590 ops/s
[info]                  ·gc.alloc.rate:                   375.111 MB/sec
[info]                  ·gc.alloc.rate.norm:              1572.255 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.582 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2823.277 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 385761.321 ops/s
[info]                  ·gc.alloc.rate:      372.532 MB/sec
[info]                  ·gc.alloc.rate.norm: 1520.065 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 384092.014 ops/s
[info]                  ·gc.alloc.rate:                   389.772 MB/sec
[info]                  ·gc.alloc.rate.norm:              1597.346 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.978 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4.009 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.725 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2761.034 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 386330.140 ops/s
[info]                  ·gc.alloc.rate:      373.057 MB/sec
[info]                  ·gc.alloc.rate.norm: 1520.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 371138.137 ops/s
[info]                  ·gc.alloc.rate:                   385.165 MB/sec
[info]                  ·gc.alloc.rate.norm:              1633.462 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.057 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2858.641 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala":
[info]   380589.441 ±(99.9%) 26253.581 ops/s [Average]
[info]   (min, avg, max) = (371138.137, 380589.441, 386330.140), stdev = 6817.971
[info]   CI (99.9%): [354335.860, 406843.021] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   379.127 ±(99.9%) 30.211 MB/sec [Average]
[info]   (min, avg, max) = (372.532, 379.127, 389.772), stdev = 7.846
[info]   CI (99.9%): [348.916, 409.339] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   1568.626 ±(99.9%) 190.250 B/op [Average]
[info]   (min, avg, max) = (1520.001, 1568.626, 1633.462), stdev = 49.407
[info]   CI (99.9%): [1378.376, 1758.876] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.196 ±(99.9%) 1.685 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.196, 0.978), stdev = 0.438
[info]   CI (99.9%): [≈ 0, 1.880] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.802 ±(99.9%) 6.904 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.802, 4.009), stdev = 1.793
[info]   CI (99.9%): [≈ 0, 7.706] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   404.273 ±(99.9%) 1421.076 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 404.273, 674.057), stdev = 369.049
[info]   CI (99.9%): [≈ 0, 1825.349] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1688.590 ±(99.9%) 5937.158 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1688.590, 2858.641), stdev = 1541.861
[info]   CI (99.9%): [≈ 0, 7625.748] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJacksonScala:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 1.000
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 48.39% complete, ETA 01:09:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 905322.104 ops/s
[info] # Warmup Iteration   2: 1052469.144 ops/s
[info] # Warmup Iteration   3: 1076607.850 ops/s
[info] # Warmup Iteration   4: 1087162.716 ops/s
[info] # Warmup Iteration   5: 1087730.726 ops/s
[info] Iteration   1: 1066184.373 ops/s
[info]                  ·gc.alloc.rate:                   379.666 MB/sec
[info]                  ·gc.alloc.rate.norm:              560.521 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      511.542 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 755.216 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 1086967.867 ops/s
[info]                  ·gc.alloc.rate:                   401.116 MB/sec
[info]                  ·gc.alloc.rate.norm:              580.874 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.010 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.015 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.056 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 976.129 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 1076688.047 ops/s
[info]                  ·gc.alloc.rate:      372.136 MB/sec
[info]                  ·gc.alloc.rate.norm: 544.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1087091.357 ops/s
[info]                  ·gc.alloc.rate:                   394.219 MB/sec
[info]                  ·gc.alloc.rate.norm:              570.725 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2.727 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3.948 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.152 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 975.995 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 1091197.728 ops/s
[info]                  ·gc.alloc.rate:      377.218 MB/sec
[info]                  ·gc.alloc.rate.norm: 544.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala":
[info]   1081625.875 ±(99.9%) 39120.101 ops/s [Average]
[info]   (min, avg, max) = (1066184.373, 1081625.875, 1091197.728), stdev = 10159.366
[info]   CI (99.9%): [1042505.774, 1120745.976] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   384.871 ±(99.9%) 47.126 MB/sec [Average]
[info]   (min, avg, max) = (372.136, 384.871, 401.116), stdev = 12.238
[info]   CI (99.9%): [337.745, 431.997] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   560.024 ±(99.9%) 62.772 B/op [Average]
[info]   (min, avg, max) = (544.000, 560.024, 580.874), stdev = 16.302
[info]   CI (99.9%): [497.252, 622.796] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.548 ±(99.9%) 4.692 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.548, 2.727), stdev = 1.218
[info]   CI (99.9%): [≈ 0, 5.239] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.793 ±(99.9%) 6.792 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.793, 3.948), stdev = 1.764
[info]   CI (99.9%): [≈ 0, 7.585] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   371.950 ±(99.9%) 1332.197 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 371.950, 674.152), stdev = 345.967
[info]   CI (99.9%): [≈ 0, 1704.147] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   541.468 ±(99.9%) 1934.740 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 541.468, 976.129), stdev = 502.446
[info]   CI (99.9%): [≈ 0, 2476.208] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readJsoniterScala:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.800, 3.000), stdev = 1.643
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 48.59% complete, ETA 01:09:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 14635.914 ops/s
[info] # Warmup Iteration   2: 70970.076 ops/s
[info] # Warmup Iteration   3: 73917.970 ops/s
[info] # Warmup Iteration   4: 75952.426 ops/s
[info] # Warmup Iteration   5: 75602.281 ops/s
[info] Iteration   1: 75101.664 ops/s
[info]                  ·gc.alloc.rate:                   2991.147 MB/sec
[info]                  ·gc.alloc.rate.norm:              62679.205 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.745 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2705.962 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 56703.175 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 75229.529 ops/s
[info]                  ·gc.alloc.rate:                   3008.734 MB/sec
[info]                  ·gc.alloc.rate.norm:              62943.818 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.307 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2710.220 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 56698.805 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 73900.945 ops/s
[info]                  ·gc.alloc.rate:                   2983.502 MB/sec
[info]                  ·gc.alloc.rate.norm:              63540.542 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.217 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2713.895 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 57798.655 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 75086.459 ops/s
[info]                  ·gc.alloc.rate:                   3058.160 MB/sec
[info]                  ·gc.alloc.rate.norm:              64079.161 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.745 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3397.772 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 71195.209 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 75766.266 ops/s
[info]                  ·gc.alloc.rate:                   3057.810 MB/sec
[info]                  ·gc.alloc.rate.norm:              63529.950 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.865 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2719.927 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 56510.001 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson":
[info]   75016.973 ±(99.9%) 2628.710 ops/s [Average]
[info]   (min, avg, max) = (73900.945, 75016.973, 75766.266), stdev = 682.668
[info]   CI (99.9%): [72388.263, 77645.682] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3019.871 ±(99.9%) 138.533 MB/sec [Average]
[info]   (min, avg, max) = (2983.502, 3019.871, 3058.160), stdev = 35.977
[info]   CI (99.9%): [2881.337, 3158.404] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   63354.535 ±(99.9%) 2122.409 B/op [Average]
[info]   (min, avg, max) = (62679.205, 63354.535, 64079.161), stdev = 551.183
[info]   CI (99.9%): [61232.126, 65476.944] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   0.075 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.075, 0.104), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.166] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   1.576 ±(99.9%) 1.969 B/op [Average]
[info]   (min, avg, max) = (0.865, 1.576, 2.217), stdev = 0.511
[info]   CI (99.9%): [≈ 0, 3.545] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   2849.555 ±(99.9%) 1180.242 MB/sec [Average]
[info]   (min, avg, max) = (2705.962, 2849.555, 3397.772), stdev = 306.505
[info]   CI (99.9%): [1669.313, 4029.798] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   59781.169 ±(99.9%) 24647.598 B/op [Average]
[info]   (min, avg, max) = (56510.001, 59781.169, 71195.209), stdev = 6400.903
[info]   CI (99.9%): [35133.571, 84428.767] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readPlayJson:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.000, 5.000), stdev = 0.707
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 48.80% complete, ETA 01:09:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 141783.084 ops/s
[info] # Warmup Iteration   2: 242287.488 ops/s
[info] # Warmup Iteration   3: 249114.163 ops/s
[info] # Warmup Iteration   4: 243099.322 ops/s
[info] # Warmup Iteration   5: 241084.213 ops/s
[info] Iteration   1: 250361.568 ops/s
[info]                  ·gc.alloc.rate:                   1202.655 MB/sec
[info]                  ·gc.alloc.rate.norm:              7559.047 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.580 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4233.651 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 242088.490 ops/s
[info]                  ·gc.alloc.rate:                   1176.799 MB/sec
[info]                  ·gc.alloc.rate.norm:              7650.094 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.406 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.686 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8747.986 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 246591.246 ops/s
[info]                  ·gc.alloc.rate:                   1204.220 MB/sec
[info]                  ·gc.alloc.rate.norm:              7686.299 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.266 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1346.192 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8592.481 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 251187.570 ops/s
[info]                  ·gc.alloc.rate:                   1210.841 MB/sec
[info]                  ·gc.alloc.rate.norm:              7587.562 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.391 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1346.805 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8439.563 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 250112.958 ops/s
[info]                  ·gc.alloc.rate:                   1203.667 MB/sec
[info]                  ·gc.alloc.rate.norm:              7575.640 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.000 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4242.023 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readUPickle":
[info]   248068.366 ±(99.9%) 14549.801 ops/s [Average]
[info]   (min, avg, max) = (242088.490, 248068.366, 251187.570), stdev = 3778.537
[info]   CI (99.9%): [233518.565, 262618.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readUPickle:·gc.alloc.rate":
[info]   1199.636 ±(99.9%) 50.700 MB/sec [Average]
[info]   (min, avg, max) = (1176.799, 1199.636, 1210.841), stdev = 13.167
[info]   CI (99.9%): [1148.936, 1250.336] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readUPickle:·gc.alloc.rate.norm":
[info]   7611.728 ±(99.9%) 208.206 B/op [Average]
[info]   (min, avg, max) = (7559.047, 7611.728, 7686.299), stdev = 54.070
[info]   CI (99.9%): [7403.522, 7819.934] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readUPickle:·gc.churn.PS_Eden_Space":
[info]   0.033 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.062), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   0.213 ±(99.9%) 0.776 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.213, 0.406), stdev = 0.202
[info]   CI (99.9%): [≈ 0, 0.989] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space":
[info]   1077.253 ±(99.9%) 1418.229 MB/sec [Average]
[info]   (min, avg, max) = (673.580, 1077.253, 1346.805), stdev = 368.309
[info]   CI (99.9%): [≈ 0, 2495.481] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   6851.140 ±(99.9%) 9195.730 B/op [Average]
[info]   (min, avg, max) = (4233.651, 6851.140, 8747.986), stdev = 2388.102
[info]   CI (99.9%): [≈ 0, 16046.870] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readUPickle:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.readUPickle:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 49.00% complete, ETA 01:09:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 116765.474 ops/s
[info] # Warmup Iteration   2: 244887.832 ops/s
[info] # Warmup Iteration   3: 249436.366 ops/s
[info] # Warmup Iteration   4: 248520.885 ops/s
[info] # Warmup Iteration   5: 245639.600 ops/s
[info] Iteration   1: 243802.294 ops/s
[info]                  ·gc.alloc.rate:                   1139.081 MB/sec
[info]                  ·gc.alloc.rate.norm:              7355.117 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.134 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.964 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4351.830 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 252118.251 ops/s
[info]                  ·gc.alloc.rate:                   1185.487 MB/sec
[info]                  ·gc.alloc.rate.norm:              7400.901 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.520 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.416 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8424.301 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 253025.692 ops/s
[info]                  ·gc.alloc.rate:                   1185.706 MB/sec
[info]                  ·gc.alloc.rate.norm:              7376.315 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.518 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.744 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8403.027 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 253072.004 ops/s
[info]                  ·gc.alloc.rate:                   1183.861 MB/sec
[info]                  ·gc.alloc.rate.norm:              7358.047 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1351.328 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8398.902 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 253283.151 ops/s
[info]                  ·gc.alloc.rate:                   1181.741 MB/sec
[info]                  ·gc.alloc.rate.norm:              7342.316 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.259 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      676.520 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4203.311 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce":
[info]   251060.279 ±(99.9%) 15718.069 ops/s [Average]
[info]   (min, avg, max) = (243802.294, 251060.279, 253283.151), stdev = 4081.933
[info]   CI (99.9%): [235342.210, 266778.347] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1175.175 ±(99.9%) 77.936 MB/sec [Average]
[info]   (min, avg, max) = (1139.081, 1175.175, 1185.706), stdev = 20.240
[info]   CI (99.9%): [1097.239, 1253.111] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   7366.539 ±(99.9%) 87.504 B/op [Average]
[info]   (min, avg, max) = (7342.316, 7366.539, 7400.901), stdev = 22.725
[info]   CI (99.9%): [7279.035, 7454.043] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   0.046 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.083), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.286 ±(99.9%) 0.891 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.286, 0.520), stdev = 0.231
[info]   CI (99.9%): [≈ 0, 1.177] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   1080.395 ±(99.9%) 1424.174 MB/sec [Average]
[info]   (min, avg, max) = (673.964, 1080.395, 1351.328), stdev = 369.854
[info]   CI (99.9%): [≈ 0, 2504.569] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   6756.274 ±(99.9%) 8715.418 B/op [Average]
[info]   (min, avg, max) = (4203.311, 6756.274, 8424.301), stdev = 2263.366
[info]   CI (99.9%): [≈ 0, 15471.692] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeCirce:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 49.20% complete, ETA 01:08:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.806 ops/s
[info] # Warmup Iteration   2: 1055611.956 ops/s
[info] # Warmup Iteration   3: 1122612.666 ops/s
[info] # Warmup Iteration   4: 1161787.317 ops/s
[info] # Warmup Iteration   5: 1146354.325 ops/s
[info] Iteration   1: 1147293.666 ops/s
[info]                  ·gc.alloc.rate:                   408.961 MB/sec
[info]                  ·gc.alloc.rate.norm:              561.124 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.017 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.023 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      670.654 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 920.186 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 1163957.817 ops/s
[info]                  ·gc.alloc.rate:      396.455 MB/sec
[info]                  ·gc.alloc.rate.norm: 536.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1152886.551 ops/s
[info]                  ·gc.alloc.rate:                   413.603 MB/sec
[info]                  ·gc.alloc.rate.norm:              564.638 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3.958 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5.403 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      670.797 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 915.750 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 1164009.912 ops/s
[info]                  ·gc.alloc.rate:      396.494 MB/sec
[info]                  ·gc.alloc.rate.norm: 536.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1161301.011 ops/s
[info]                  ·gc.alloc.rate:                   408.111 MB/sec
[info]                  ·gc.alloc.rate.norm:              553.202 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      669.989 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 908.182 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava":
[info]   1157889.791 ±(99.9%) 28765.593 ops/s [Average]
[info]   (min, avg, max) = (1147293.666, 1157889.791, 1164009.912), stdev = 7470.333
[info]   CI (99.9%): [1129124.198, 1186655.385] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   404.725 ±(99.9%) 30.097 MB/sec [Average]
[info]   (min, avg, max) = (396.455, 404.725, 413.603), stdev = 7.816
[info]   CI (99.9%): [374.628, 434.822] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   550.193 ±(99.9%) 52.376 B/op [Average]
[info]   (min, avg, max) = (536.000, 550.193, 564.638), stdev = 13.602
[info]   CI (99.9%): [497.817, 602.569] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   0.795 ±(99.9%) 6.808 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.795, 3.958), stdev = 1.768
[info]   CI (99.9%): [≈ 0, 7.603] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   1.085 ±(99.9%) 9.295 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.085, 5.403), stdev = 2.414
[info]   CI (99.9%): [≈ 0, 10.380] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   402.288 ±(99.9%) 1414.099 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 402.288, 670.797), stdev = 367.237
[info]   CI (99.9%): [≈ 0, 1816.387] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   548.824 ±(99.9%) 1929.263 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 548.824, 920.186), stdev = 501.024
[info]   CI (99.9%): [≈ 0, 2478.087] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeDslJsonJava:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 3.000), stdev = 1.517
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 49.40% complete, ETA 01:08:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 467969.979 ops/s
[info] # Warmup Iteration   2: 862514.917 ops/s
[info] # Warmup Iteration   3: 894312.672 ops/s
[info] # Warmup Iteration   4: 895844.615 ops/s
[info] # Warmup Iteration   5: 897658.116 ops/s
[info] Iteration   1: 894492.802 ops/s
[info]                  ·gc.alloc.rate:                   545.653 MB/sec
[info]                  ·gc.alloc.rate.norm:              960.313 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.520 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.916 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.627 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1185.540 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 897108.777 ops/s
[info]                  ·gc.alloc.rate:                   536.687 MB/sec
[info]                  ·gc.alloc.rate.norm:              941.713 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.007 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1182.666 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 905336.658 ops/s
[info]                  ·gc.alloc.rate:      529.241 MB/sec
[info]                  ·gc.alloc.rate.norm: 920.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 904056.518 ops/s
[info]                  ·gc.alloc.rate:                   543.857 MB/sec
[info]                  ·gc.alloc.rate.norm:              946.790 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.130 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1173.578 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 903424.939 ops/s
[info]                  ·gc.alloc.rate:                   542.431 MB/sec
[info]                  ·gc.alloc.rate.norm:              944.851 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.109 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.178 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1174.339 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala":
[info]   900883.939 ±(99.9%) 18411.466 ops/s [Average]
[info]   (min, avg, max) = (894492.802, 900883.939, 905336.658), stdev = 4781.399
[info]   CI (99.9%): [882472.472, 919295.405] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   539.574 ±(99.9%) 25.728 MB/sec [Average]
[info]   (min, avg, max) = (529.241, 539.574, 545.653), stdev = 6.681
[info]   CI (99.9%): [513.846, 565.302] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   942.733 ±(99.9%) 56.060 B/op [Average]
[info]   (min, avg, max) = (920.000, 942.733, 960.313), stdev = 14.559
[info]   CI (99.9%): [886.674, 998.793] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.117 ±(99.9%) 0.875 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.117, 0.520), stdev = 0.227
[info]   CI (99.9%): [≈ 0, 0.992] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.205 ±(99.9%) 1.541 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.205, 0.916), stdev = 0.400
[info]   CI (99.9%): [≈ 0, 1.746] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   539.189 ±(99.9%) 1160.644 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 539.189, 674.178), stdev = 301.416
[info]   CI (99.9%): [≈ 0, 1699.833] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   943.225 ±(99.9%) 2030.460 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 943.225, 1185.540), stdev = 527.304
[info]   CI (99.9%): [≈ 0, 2973.685] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJacksonScala:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 0.707
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 49.60% complete, ETA 01:08:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1223935.463 ops/s
[info] # Warmup Iteration   2: 1715993.426 ops/s
[info] # Warmup Iteration   3: 1781205.681 ops/s
[info] # Warmup Iteration   4: 1747353.568 ops/s
[info] # Warmup Iteration   5: 1784063.596 ops/s
[info] Iteration   1: 1747432.965 ops/s
[info]                  ·gc.alloc.rate:                   612.492 MB/sec
[info]                  ·gc.alloc.rate.norm:              551.652 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2.810 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.531 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.135 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 607.172 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 1765966.884 ops/s
[info]                  ·gc.alloc.rate:                   621.131 MB/sec
[info]                  ·gc.alloc.rate.norm:              553.653 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.358 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 600.206 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   3: 1772103.737 ops/s
[info]                  ·gc.alloc.rate:                   627.663 MB/sec
[info]                  ·gc.alloc.rate.norm:              557.444 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.474 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 598.130 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 1772366.900 ops/s
[info]                  ·gc.alloc.rate:                   619.250 MB/sec
[info]                  ·gc.alloc.rate.norm:              549.853 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.037 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.851 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 597.447 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 1769241.276 ops/s
[info]                  ·gc.alloc.rate:      602.577 MB/sec
[info]                  ·gc.alloc.rate.norm: 536.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala":
[info]   1765422.352 ±(99.9%) 39987.709 ops/s [Average]
[info]   (min, avg, max) = (1747432.965, 1765422.352, 1772366.900), stdev = 10384.681
[info]   CI (99.9%): [1725434.643, 1805410.062] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   616.623 ±(99.9%) 36.706 MB/sec [Average]
[info]   (min, avg, max) = (602.577, 616.623, 627.663), stdev = 9.533
[info]   CI (99.9%): [579.916, 653.329] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   549.720 ±(99.9%) 31.466 B/op [Average]
[info]   (min, avg, max) = (536.000, 549.720, 557.444), stdev = 8.172
[info]   CI (99.9%): [518.254, 581.187] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.570 ±(99.9%) 4.822 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.570, 2.810), stdev = 1.252
[info]   CI (99.9%): [≈ 0, 5.392] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.514 ±(99.9%) 4.343 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.514, 2.531), stdev = 1.128
[info]   CI (99.9%): [≈ 0, 4.857] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   538.764 ±(99.9%) 1159.731 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 538.764, 674.135), stdev = 301.178
[info]   CI (99.9%): [≈ 0, 1698.494] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   480.591 ±(99.9%) 1034.615 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 480.591, 607.172), stdev = 268.686
[info]   CI (99.9%): [≈ 0, 1515.205] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScala:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 3.000), stdev = 1.225
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 49.80% complete, ETA 01:08:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1440999.750 ops/s
[info] # Warmup Iteration   2: 1898662.536 ops/s
[info] # Warmup Iteration   3: 1920598.865 ops/s
[info] # Warmup Iteration   4: 1897624.014 ops/s
[info] # Warmup Iteration   5: 1920300.322 ops/s
[info] Iteration   1: 1919612.373 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1918795.771 ops/s
[info]                  ·gc.alloc.rate:      0.048 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.040 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1918100.250 ops/s
[info]                  ·gc.alloc.rate:      0.469 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.385 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1920490.551 ops/s
[info]                  ·gc.alloc.rate:      0.078 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.064 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1920953.786 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc":
[info]   1919590.546 ±(99.9%) 4524.121 ops/s [Average]
[info]   (min, avg, max) = (1918100.250, 1919590.546, 1920953.786), stdev = 1174.900
[info]   CI (99.9%): [1915066.425, 1924114.668] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.119 ±(99.9%) 0.764 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.119, 0.469), stdev = 0.198
[info]   CI (99.9%): [≈ 0, 0.883] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.098 ±(99.9%) 0.627 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.098, 0.385), stdev = 0.163
[info]   CI (99.9%): [≈ 0, 0.725] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 50.00% complete, ETA 01:07:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 16037.416 ops/s
[info] # Warmup Iteration   2: 39131.467 ops/s
[info] # Warmup Iteration   3: 39966.934 ops/s
[info] # Warmup Iteration   4: 40267.130 ops/s
[info] # Warmup Iteration   5: 40333.567 ops/s
[info] Iteration   1: 40817.931 ops/s
[info]                  ·gc.alloc.rate:                   1886.365 MB/sec
[info]                  ·gc.alloc.rate.norm:              72752.311 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.803 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2024.540 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 78081.348 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 41156.936 ops/s
[info]                  ·gc.alloc.rate:                   1897.398 MB/sec
[info]                  ·gc.alloc.rate.norm:              72554.258 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.592 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2027.837 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 77542.097 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 40983.800 ops/s
[info]                  ·gc.alloc.rate:                   1902.531 MB/sec
[info]                  ·gc.alloc.rate.norm:              73073.156 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3.198 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2029.404 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 77946.111 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 40800.246 ops/s
[info]                  ·gc.alloc.rate:                   1880.376 MB/sec
[info]                  ·gc.alloc.rate.norm:              72545.711 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1354.652 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 52263.069 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 41142.143 ops/s
[info]                  ·gc.alloc.rate:                   1923.477 MB/sec
[info]                  ·gc.alloc.rate.norm:              73594.573 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.389 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2033.666 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 77810.562 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson":
[info]   40980.211 ±(99.9%) 656.274 ops/s [Average]
[info]   (min, avg, max) = (40800.246, 40980.211, 41156.936), stdev = 170.432
[info]   CI (99.9%): [40323.937, 41636.485] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1898.029 ±(99.9%) 64.316 MB/sec [Average]
[info]   (min, avg, max) = (1880.376, 1898.029, 1923.477), stdev = 16.703
[info]   CI (99.9%): [1833.713, 1962.346] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   72904.002 ±(99.9%) 1699.531 B/op [Average]
[info]   (min, avg, max) = (72545.711, 72904.002, 73594.573), stdev = 441.363
[info]   CI (99.9%): [71204.471, 74603.532] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   0.042 ±(99.9%) 0.127 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.083), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   1.596 ±(99.9%) 4.860 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.596, 3.198), stdev = 1.262
[info]   CI (99.9%): [≈ 0, 6.456] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   1894.020 ±(99.9%) 1161.098 MB/sec [Average]
[info]   (min, avg, max) = (1354.652, 1894.020, 2033.666), stdev = 301.533
[info]   CI (99.9%): [732.922, 3055.118] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   72728.637 ±(99.9%) 44060.369 B/op [Average]
[info]   (min, avg, max) = (52263.069, 72728.637, 78081.348), stdev = 11442.338
[info]   CI (99.9%): [28668.269, 116789.006] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writePlayJson:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.000, 4.000), stdev = 0.707
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 50.20% complete, ETA 01:07:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 92449.616 ops/s
[info] # Warmup Iteration   2: 147290.563 ops/s
[info] # Warmup Iteration   3: 150119.385 ops/s
[info] # Warmup Iteration   4: 150671.265 ops/s
[info] # Warmup Iteration   5: 149087.887 ops/s
[info] Iteration   1: 150645.009 ops/s
[info]                  ·gc.alloc.rate:                   851.248 MB/sec
[info]                  ·gc.alloc.rate.norm:              8895.941 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.435 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.179 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 14057.751 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 150832.599 ops/s
[info]                  ·gc.alloc.rate:                   837.217 MB/sec
[info]                  ·gc.alloc.rate.norm:              8737.390 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.006 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7013.212 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 150962.727 ops/s
[info]                  ·gc.alloc.rate:                   849.057 MB/sec
[info]                  ·gc.alloc.rate.norm:              8849.603 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.217 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.280 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7007.081 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   4: 149564.778 ops/s
[info]                  ·gc.alloc.rate:                   837.816 MB/sec
[info]                  ·gc.alloc.rate.norm:              8816.445 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.876 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.119 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7072.801 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 150882.805 ops/s
[info]                  ·gc.alloc.rate:                   866.273 MB/sec
[info]                  ·gc.alloc.rate.norm:              9036.511 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.869 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1344.520 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 14025.344 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeUPickle":
[info]   150577.583 ±(99.9%) 2226.100 ops/s [Average]
[info]   (min, avg, max) = (149564.778, 150577.583, 150962.727), stdev = 578.111
[info]   CI (99.9%): [148351.484, 152803.683] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeUPickle:·gc.alloc.rate":
[info]   848.322 ±(99.9%) 45.766 MB/sec [Average]
[info]   (min, avg, max) = (837.217, 848.322, 866.273), stdev = 11.885
[info]   CI (99.9%): [802.556, 894.088] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeUPickle:·gc.alloc.rate.norm":
[info]   8867.178 ±(99.9%) 427.181 B/op [Average]
[info]   (min, avg, max) = (8737.390, 8867.178, 9036.511), stdev = 110.938
[info]   CI (99.9%): [8439.997, 9294.359] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space":
[info]   0.046 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.083), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   0.479 ±(99.9%) 1.503 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.479, 0.876), stdev = 0.390
[info]   CI (99.9%): [≈ 0, 1.983] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space":
[info]   941.221 ±(99.9%) 1418.813 MB/sec [Average]
[info]   (min, avg, max) = (672.006, 941.221, 1345.179), stdev = 368.461
[info]   CI (99.9%): [≈ 0, 2360.034] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   9835.238 ±(99.9%) 14786.168 B/op [Average]
[info]   (min, avg, max) = (7007.081, 9835.238, 14057.751), stdev = 3839.921
[info]   CI (99.9%): [≈ 0, 24621.406] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeUPickle:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfShortsBenchmark.writeUPickle:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 2.000), stdev = 0.894
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 50.40% complete, ETA 01:07:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 21129.694 ops/s
[info] # Warmup Iteration   2: 36069.678 ops/s
[info] # Warmup Iteration   3: 38467.431 ops/s
[info] # Warmup Iteration   4: 37722.055 ops/s
[info] # Warmup Iteration   5: 38906.996 ops/s
[info] Iteration   1: 38906.697 ops/s
[info]                  ·gc.alloc.rate:                   766.437 MB/sec
[info]                  ·gc.alloc.rate.norm:              31004.627 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.375 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15.158 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.571 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 54432.285 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 39112.941 ops/s
[info]                  ·gc.alloc.rate:                   751.693 MB/sec
[info]                  ·gc.alloc.rate.norm:              30251.875 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.034 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 27086.225 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   3: 39069.273 ops/s
[info]                  ·gc.alloc.rate:                   745.309 MB/sec
[info]                  ·gc.alloc.rate.norm:              30014.041 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.345 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 27116.032 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 38253.354 ops/s
[info]                  ·gc.alloc.rate:                   727.686 MB/sec
[info]                  ·gc.alloc.rate.norm:              29930.716 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4.282 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.666 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 27708.783 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 39124.382 ops/s
[info]                  ·gc.alloc.rate:                   750.544 MB/sec
[info]                  ·gc.alloc.rate.norm:              30198.054 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.329 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 27091.317 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce":
[info]   38893.329 ±(99.9%) 1417.849 ops/s [Average]
[info]   (min, avg, max) = (38253.354, 38893.329, 39124.382), stdev = 368.211
[info]   CI (99.9%): [37475.480, 40311.179] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:·gc.alloc.rate":
[info]   748.334 ±(99.9%) 53.750 MB/sec [Average]
[info]   (min, avg, max) = (727.686, 748.334, 766.437), stdev = 13.959
[info]   CI (99.9%): [694.584, 802.083] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   30279.863 ±(99.9%) 1639.718 B/op [Average]
[info]   (min, avg, max) = (29930.716, 30279.863, 31004.627), stdev = 425.830
[info]   CI (99.9%): [28640.145, 31919.581] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   0.096 ±(99.9%) 0.625 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.096, 0.375), stdev = 0.162
[info]   CI (99.9%): [≈ 0, 0.721] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   3.888 ±(99.9%) 25.288 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.888, 15.158), stdev = 6.567
[info]   CI (99.9%): [≈ 0, 29.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   807.789 ±(99.9%) 1157.617 MB/sec [Average]
[info]   (min, avg, max) = (673.034, 807.789, 1345.571), stdev = 300.629
[info]   CI (99.9%): [≈ 0, 1965.405] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   32686.929 ±(99.9%) 46819.623 B/op [Average]
[info]   (min, avg, max) = (27086.225, 32686.929, 54432.285), stdev = 12158.907
[info]   CI (99.9%): [≈ 0, 79506.551] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readCirce:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 0.707
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 50.60% complete, ETA 01:06:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 25061.140 ops/s
[info] # Warmup Iteration   2: 60537.443 ops/s
[info] # Warmup Iteration   3: 59089.043 ops/s
[info] # Warmup Iteration   4: 62365.035 ops/s
[info] # Warmup Iteration   5: 61953.493 ops/s
[info] Iteration   1: 62274.096 ops/s
[info]                  ·gc.alloc.rate:                   671.765 MB/sec
[info]                  ·gc.alloc.rate.norm:              16980.601 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.578 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.002 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17037.150 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 62226.649 ops/s
[info]                  ·gc.alloc.rate:                   674.736 MB/sec
[info]                  ·gc.alloc.rate.norm:              17067.879 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.030 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17050.016 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 62259.996 ops/s
[info]                  ·gc.alloc.rate:                   676.284 MB/sec
[info]                  ·gc.alloc.rate.norm:              17096.931 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.071 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17040.981 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 61618.589 ops/s
[info]                  ·gc.alloc.rate:                   665.620 MB/sec
[info]                  ·gc.alloc.rate.norm:              17003.660 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.063 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.019 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17218.220 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 62259.231 ops/s
[info]                  ·gc.alloc.rate:                   671.144 MB/sec
[info]                  ·gc.alloc.rate.norm:              16968.371 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.005 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17040.707 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala":
[info]   62127.712 ±(99.9%) 1097.972 ops/s [Average]
[info]   (min, avg, max) = (61618.589, 62127.712, 62274.096), stdev = 285.140
[info]   CI (99.9%): [61029.740, 63225.684] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   671.910 ±(99.9%) 15.794 MB/sec [Average]
[info]   (min, avg, max) = (665.620, 671.910, 676.284), stdev = 4.102
[info]   CI (99.9%): [656.116, 687.703] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   17023.488 ±(99.9%) 216.414 B/op [Average]
[info]   (min, avg, max) = (16968.371, 17023.488, 17096.931), stdev = 56.202
[info]   CI (99.9%): [16807.074, 17239.903] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.021 ±(99.9%) 0.113 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.062), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.528 ±(99.9%) 2.873 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.528, 1.578), stdev = 0.746
[info]   CI (99.9%): [≈ 0, 3.401] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   674.025 ±(99.9%) 0.107 MB/sec [Average]
[info]   (min, avg, max) = (674.002, 674.025, 674.071), stdev = 0.028
[info]   CI (99.9%): [673.919, 674.132] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   17077.415 ±(99.9%) 303.646 B/op [Average]
[info]   (min, avg, max) = (17037.150, 17077.415, 17218.220), stdev = 78.856
[info]   CI (99.9%): [16773.769, 17381.061] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJacksonScala:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 50.80% complete, ETA 01:06:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 142551.116 ops/s
[info] # Warmup Iteration   2: 197092.381 ops/s
[info] # Warmup Iteration   3: 198329.415 ops/s
[info] # Warmup Iteration   4: 200297.045 ops/s
[info] # Warmup Iteration   5: 194515.297 ops/s
[info] Iteration   1: 201029.580 ops/s
[info]                  ·gc.alloc.rate:                   678.441 MB/sec
[info]                  ·gc.alloc.rate.norm:              5310.893 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2.779 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21.757 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.210 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5277.770 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 201143.373 ops/s
[info]                  ·gc.alloc.rate:                   683.028 MB/sec
[info]                  ·gc.alloc.rate.norm:              5344.077 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.505 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5269.567 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 202356.364 ops/s
[info]                  ·gc.alloc.rate:                   688.668 MB/sec
[info]                  ·gc.alloc.rate.norm:              5356.069 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.485 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5237.984 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 206064.162 ops/s
[info]                  ·gc.alloc.rate:                   687.697 MB/sec
[info]                  ·gc.alloc.rate.norm:              5250.856 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.318 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.990 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5138.557 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 206709.325 ops/s
[info]                  ·gc.alloc.rate:                   694.640 MB/sec
[info]                  ·gc.alloc.rate.norm:              5288.844 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.158 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.786 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5122.452 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala":
[info]   203460.561 ±(99.9%) 10515.763 ops/s [Average]
[info]   (min, avg, max) = (201029.580, 203460.561, 206709.325), stdev = 2730.910
[info]   CI (99.9%): [192944.798, 213976.324] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   686.495 ±(99.9%) 23.532 MB/sec [Average]
[info]   (min, avg, max) = (678.441, 686.495, 694.640), stdev = 6.111
[info]   CI (99.9%): [662.963, 710.027] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   5310.148 ±(99.9%) 163.707 B/op [Average]
[info]   (min, avg, max) = (5250.856, 5310.148, 5356.069), stdev = 42.514
[info]   CI (99.9%): [5146.440, 5473.855] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.568 ±(99.9%) 4.760 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.568, 2.779), stdev = 1.236
[info]   CI (99.9%): [≈ 0, 5.328] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   4.447 ±(99.9%) 37.266 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4.447, 21.757), stdev = 9.678
[info]   CI (99.9%): [≈ 0, 41.712] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   673.395 ±(99.9%) 2.126 MB/sec [Average]
[info]   (min, avg, max) = (672.786, 673.395, 674.210), stdev = 0.552
[info]   CI (99.9%): [671.269, 675.521] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   5209.266 ±(99.9%) 283.553 B/op [Average]
[info]   (min, avg, max) = (5122.452, 5209.266, 5277.770), stdev = 73.638
[info]   CI (99.9%): [4925.713, 5492.819] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 3.000), stdev = 0.894
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 51.00% complete, ETA 01:06:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7703.831 ops/s
[info] # Warmup Iteration   2: 23384.214 ops/s
[info] # Warmup Iteration   3: 23865.746 ops/s
[info] # Warmup Iteration   4: 23523.820 ops/s
[info] # Warmup Iteration   5: 23688.085 ops/s
[info] Iteration   1: 23787.671 ops/s
[info]                  ·gc.alloc.rate:                   1221.732 MB/sec
[info]                  ·gc.alloc.rate.norm:              80852.786 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.377 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1347.965 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 89206.751 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 23868.409 ops/s
[info]                  ·gc.alloc.rate:                   1222.489 MB/sec
[info]                  ·gc.alloc.rate.norm:              80595.771 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.373 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.177 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 88947.989 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 23889.276 ops/s
[info]                  ·gc.alloc.rate:                   1215.233 MB/sec
[info]                  ·gc.alloc.rate.norm:              80066.895 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.372 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.897 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 88939.363 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 23847.891 ops/s
[info]                  ·gc.alloc.rate:                   1208.305 MB/sec
[info]                  ·gc.alloc.rate.norm:              79749.891 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      675.093 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 44557.116 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 23686.718 ops/s
[info]                  ·gc.alloc.rate:                   1213.428 MB/sec
[info]                  ·gc.alloc.rate.norm:              80607.739 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5.533 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1351.207 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 89760.336 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson":
[info]   23815.993 ±(99.9%) 314.302 ops/s [Average]
[info]   (min, avg, max) = (23686.718, 23815.993, 23889.276), stdev = 81.623
[info]   CI (99.9%): [23501.691, 24130.296] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1216.237 ±(99.9%) 22.870 MB/sec [Average]
[info]   (min, avg, max) = (1208.305, 1216.237, 1222.489), stdev = 5.939
[info]   CI (99.9%): [1193.368, 1239.107] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   80374.616 ±(99.9%) 1740.129 B/op [Average]
[info]   (min, avg, max) = (79749.891, 80374.616, 80852.786), stdev = 451.906
[info]   CI (99.9%): [78634.487, 82114.745] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   0.029 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.083), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.151] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   1.931 ±(99.9%) 8.084 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.931, 5.533), stdev = 2.099
[info]   CI (99.9%): [≈ 0, 10.015] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   1214.668 ±(99.9%) 1161.484 MB/sec [Average]
[info]   (min, avg, max) = (675.093, 1214.668, 1351.207), stdev = 301.634
[info]   CI (99.9%): [53.184, 2376.152] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   80282.311 ±(99.9%) 76911.894 B/op [Average]
[info]   (min, avg, max) = (44557.116, 80282.311, 89760.336), stdev = 19973.775
[info]   CI (99.9%): [3370.417, 157194.205] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readPlayJson:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 51.20% complete, ETA 01:06:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 22370.347 ops/s
[info] # Warmup Iteration   2: 34979.865 ops/s
[info] # Warmup Iteration   3: 36232.883 ops/s
[info] # Warmup Iteration   4: 35531.917 ops/s
[info] # Warmup Iteration   5: 36475.441 ops/s
[info] Iteration   1: 36549.502 ops/s
[info]                  ·gc.alloc.rate:                   458.224 MB/sec
[info]                  ·gc.alloc.rate.norm:              19733.018 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.896 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.424 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 29000.420 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 36676.410 ops/s
[info]                  ·gc.alloc.rate:      446.795 MB/sec
[info]                  ·gc.alloc.rate.norm: 19176.011 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 35786.917 ops/s
[info]                  ·gc.alloc.rate:                   471.835 MB/sec
[info]                  ·gc.alloc.rate.norm:              20754.162 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2.914 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     128.172 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.364 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 29618.639 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 36699.311 ops/s
[info]                  ·gc.alloc.rate:                   470.353 MB/sec
[info]                  ·gc.alloc.rate.norm:              20165.173 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.986 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 28852.552 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 36684.057 ops/s
[info]                  ·gc.alloc.rate:      446.899 MB/sec
[info]                  ·gc.alloc.rate.norm: 19176.011 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readUPickle":
[info]   36479.239 ±(99.9%) 1508.038 ops/s [Average]
[info]   (min, avg, max) = (35786.917, 36479.239, 36699.311), stdev = 391.633
[info]   CI (99.9%): [34971.201, 37987.277] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readUPickle:·gc.alloc.rate":
[info]   458.821 ±(99.9%) 46.744 MB/sec [Average]
[info]   (min, avg, max) = (446.795, 458.821, 471.835), stdev = 12.139
[info]   CI (99.9%): [412.077, 505.565] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readUPickle:·gc.alloc.rate.norm":
[info]   19800.875 ±(99.9%) 2602.380 B/op [Average]
[info]   (min, avg, max) = (19176.011, 19800.875, 20754.162), stdev = 675.830
[info]   CI (99.9%): [17198.495, 22403.255] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readUPickle:·gc.churn.PS_Eden_Space":
[info]   0.587 ±(99.9%) 5.009 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.587, 2.914), stdev = 1.301
[info]   CI (99.9%): [≈ 0, 5.596] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   25.814 ±(99.9%) 220.338 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 25.814, 128.172), stdev = 57.221
[info]   CI (99.9%): [≈ 0, 246.152] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space":
[info]   403.955 ±(99.9%) 1419.958 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 403.955, 673.424), stdev = 368.759
[info]   CI (99.9%): [≈ 0, 1823.912] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   17494.322 ±(99.9%) 61504.962 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 17494.322, 29618.639), stdev = 15972.643
[info]   CI (99.9%): [≈ 0, 78999.284] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readUPickle:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.readUPickle:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.600, 4.000), stdev = 1.817
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 51.41% complete, ETA 01:05:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 21877.355 ops/s
[info] # Warmup Iteration   2: 45137.399 ops/s
[info] # Warmup Iteration   3: 45138.944 ops/s
[info] # Warmup Iteration   4: 46386.015 ops/s
[info] # Warmup Iteration   5: 45251.111 ops/s
[info] Iteration   1: 46414.567 ops/s
[info]                  ·gc.alloc.rate:                   711.708 MB/sec
[info]                  ·gc.alloc.rate.norm:              24134.325 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.084 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 22858.473 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 46453.531 ops/s
[info]                  ·gc.alloc.rate:                   703.187 MB/sec
[info]                  ·gc.alloc.rate.norm:              23816.812 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.705 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.341 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 22839.778 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 45964.631 ops/s
[info]                  ·gc.alloc.rate:                   706.870 MB/sec
[info]                  ·gc.alloc.rate.norm:              24205.976 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.068 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 23082.722 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 46442.494 ops/s
[info]                  ·gc.alloc.rate:                   702.917 MB/sec
[info]                  ·gc.alloc.rate.norm:              23824.039 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.705 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.022 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 22844.695 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 46484.606 ops/s
[info]                  ·gc.alloc.rate:                   713.014 MB/sec
[info]                  ·gc.alloc.rate.norm:              24144.933 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.674 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 22846.611 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce":
[info]   46351.966 ±(99.9%) 839.342 ops/s [Average]
[info]   (min, avg, max) = (45964.631, 46351.966, 46484.606), stdev = 217.974
[info]   CI (99.9%): [45512.624, 47191.308] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:·gc.alloc.rate":
[info]   707.539 ±(99.9%) 18.071 MB/sec [Average]
[info]   (min, avg, max) = (702.917, 707.539, 713.014), stdev = 4.693
[info]   CI (99.9%): [689.468, 725.610] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   24025.217 ±(99.9%) 727.598 B/op [Average]
[info]   (min, avg, max) = (23816.812, 24025.217, 24205.976), stdev = 188.955
[info]   CI (99.9%): [23297.619, 24752.815] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   0.008 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.282 ±(99.9%) 1.488 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.282, 0.705), stdev = 0.386
[info]   CI (99.9%): [≈ 0, 1.770] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   674.238 ±(99.9%) 1.054 MB/sec [Average]
[info]   (min, avg, max) = (674.022, 674.238, 674.674), stdev = 0.274
[info]   CI (99.9%): [673.184, 675.291] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   22894.456 ±(99.9%) 406.120 B/op [Average]
[info]   (min, avg, max) = (22839.778, 22894.456, 23082.722), stdev = 105.468
[info]   CI (99.9%): [22488.336, 23300.576] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeCirce:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 51.61% complete, ETA 01:05:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 47398.969 ops/s
[info] # Warmup Iteration   2: 93927.157 ops/s
[info] # Warmup Iteration   3: 99292.347 ops/s
[info] # Warmup Iteration   4: 99753.684 ops/s
[info] # Warmup Iteration   5: 99828.354 ops/s
[info] Iteration   1: 100011.920 ops/s
[info]                  ·gc.alloc.rate:                   1405.458 MB/sec
[info]                  ·gc.alloc.rate.norm:              22123.065 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.328 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.632 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 21228.569 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 100003.405 ops/s
[info]                  ·gc.alloc.rate:                   1399.848 MB/sec
[info]                  ·gc.alloc.rate.norm:              22027.664 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.983 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.133 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 21245.356 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 99719.367 ops/s
[info]                  ·gc.alloc.rate:                   1393.988 MB/sec
[info]                  ·gc.alloc.rate.norm:              22003.901 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.765 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 21321.624 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 100012.303 ops/s
[info]                  ·gc.alloc.rate:                   1397.365 MB/sec
[info]                  ·gc.alloc.rate.norm:              21991.600 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.655 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1351.757 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 21273.830 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 99705.205 ops/s
[info]                  ·gc.alloc.rate:                   1418.861 MB/sec
[info]                  ·gc.alloc.rate.norm:              22401.268 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.329 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1352.666 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 21356.162 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala":
[info]   99890.440 ±(99.9%) 626.683 ops/s [Average]
[info]   (min, avg, max) = (99705.205, 99890.440, 100012.303), stdev = 162.748
[info]   CI (99.9%): [99263.757, 100517.123] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1403.104 ±(99.9%) 37.555 MB/sec [Average]
[info]   (min, avg, max) = (1393.988, 1403.104, 1418.861), stdev = 9.753
[info]   CI (99.9%): [1365.549, 1440.659] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   22109.500 ±(99.9%) 658.734 B/op [Average]
[info]   (min, avg, max) = (21991.600, 22109.500, 22401.268), stdev = 171.071
[info]   CI (99.9%): [21450.766, 22768.233] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.029 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.459 ±(99.9%) 1.438 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.459, 0.983), stdev = 0.373
[info]   CI (99.9%): [≈ 0, 1.897] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1350.790 ±(99.9%) 5.948 MB/sec [Average]
[info]   (min, avg, max) = (1348.632, 1350.790, 1352.666), stdev = 1.545
[info]   CI (99.9%): [1344.842, 1356.738] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   21285.108 ±(99.9%) 204.539 B/op [Average]
[info]   (min, avg, max) = (21228.569, 21285.108, 21356.162), stdev = 53.118
[info]   CI (99.9%): [21080.569, 21489.647] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 51.81% complete, ETA 01:05:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 135383.085 ops/s
[info] # Warmup Iteration   2: 171391.686 ops/s
[info] # Warmup Iteration   3: 174144.792 ops/s
[info] # Warmup Iteration   4: 177691.587 ops/s
[info] # Warmup Iteration   5: 178283.435 ops/s
[info] Iteration   1: 177881.525 ops/s
[info]                  ·gc.alloc.rate:                   581.542 MB/sec
[info]                  ·gc.alloc.rate.norm:              5145.775 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2.789 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24.682 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.109 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5964.851 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 178943.035 ops/s
[info]                  ·gc.alloc.rate:      570.899 MB/sec
[info]                  ·gc.alloc.rate.norm: 5021.204 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 178902.354 ops/s
[info]                  ·gc.alloc.rate:                   596.189 MB/sec
[info]                  ·gc.alloc.rate.norm:              5243.386 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.681 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5924.920 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 179027.701 ops/s
[info]                  ·gc.alloc.rate:                   587.556 MB/sec
[info]                  ·gc.alloc.rate.norm:              5165.881 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.413 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5920.750 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 178960.547 ops/s
[info]                  ·gc.alloc.rate:                   587.461 MB/sec
[info]                  ·gc.alloc.rate.norm:              5165.151 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.732 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.981 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5917.075 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala":
[info]   178743.032 ±(99.9%) 1862.621 ops/s [Average]
[info]   (min, avg, max) = (177881.525, 178743.032, 179027.701), stdev = 483.717
[info]   CI (99.9%): [176880.411, 180605.654] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   584.729 ±(99.9%) 35.926 MB/sec [Average]
[info]   (min, avg, max) = (570.899, 584.729, 596.189), stdev = 9.330
[info]   CI (99.9%): [548.803, 620.656] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   5148.279 ±(99.9%) 309.217 B/op [Average]
[info]   (min, avg, max) = (5021.204, 5148.279, 5243.386), stdev = 80.303
[info]   CI (99.9%): [4839.062, 5457.496] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.575 ±(99.9%) 4.770 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.575, 2.789), stdev = 1.239
[info]   CI (99.9%): [≈ 0, 5.344] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   5.083 ±(99.9%) 42.206 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 5.083, 24.682), stdev = 10.961
[info]   CI (99.9%): [≈ 0, 47.288] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   538.837 ±(99.9%) 1159.888 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 538.837, 674.109), stdev = 301.219
[info]   CI (99.9%): [≈ 0, 1698.725] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   4745.519 ±(99.9%) 10215.356 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4745.519, 5964.851), stdev = 2652.896
[info]   CI (99.9%): [≈ 0, 14960.875] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 0.707
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 52.01% complete, ETA 01:05:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 153961.477 ops/s
[info] # Warmup Iteration   2: 185143.693 ops/s
[info] # Warmup Iteration   3: 192614.287 ops/s
[info] # Warmup Iteration   4: 192678.664 ops/s
[info] # Warmup Iteration   5: 192576.456 ops/s
[info] Iteration   1: 193059.259 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.003 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 190256.400 ops/s
[info]                  ·gc.alloc.rate:      0.003 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.029 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 193091.680 ops/s
[info]                  ·gc.alloc.rate:      0.013 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.104 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 193035.775 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 192865.180 ops/s
[info]                  ·gc.alloc.rate:      0.463 MB/sec
[info]                  ·gc.alloc.rate.norm: 3.778 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc":
[info]   192461.659 ±(99.9%) 4758.957 ops/s [Average]
[info]   (min, avg, max) = (190256.400, 192461.659, 193091.680), stdev = 1235.886
[info]   CI (99.9%): [187702.702, 197220.616] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.096 ±(99.9%) 0.790 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.096, 0.463), stdev = 0.205
[info]   CI (99.9%): [≈ 0, 0.886] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.783 ±(99.9%) 6.448 B/op [Average]
[info]   (min, avg, max) = (0.002, 0.783, 3.778), stdev = 1.675
[info]   CI (99.9%): [≈ 0, 7.231] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 52.21% complete, ETA 01:04:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 36616.492 ops/s
[info] # Warmup Iteration   2: 64645.790 ops/s
[info] # Warmup Iteration   3: 64882.657 ops/s
[info] # Warmup Iteration   4: 65910.667 ops/s
[info] # Warmup Iteration   5: 66022.227 ops/s
[info] Iteration   1: 62378.880 ops/s
[info]                  ·gc.alloc.rate:                   955.596 MB/sec
[info]                  ·gc.alloc.rate.norm:              24113.699 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.028 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 34016.410 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 66080.136 ops/s
[info]                  ·gc.alloc.rate:                   999.894 MB/sec
[info]                  ·gc.alloc.rate.norm:              23817.997 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.354 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16063.474 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 65853.917 ops/s
[info]                  ·gc.alloc.rate:                   993.583 MB/sec
[info]                  ·gc.alloc.rate.norm:              23747.773 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.406 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16119.080 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 66034.656 ops/s
[info]                  ·gc.alloc.rate:                   1011.630 MB/sec
[info]                  ·gc.alloc.rate.norm:              24113.284 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.488 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.414 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 32164.713 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 66224.046 ops/s
[info]                  ·gc.alloc.rate:                   994.907 MB/sec
[info]                  ·gc.alloc.rate.norm:              23644.972 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.484 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      675.462 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16053.025 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson":
[info]   65314.327 ±(99.9%) 6339.233 ops/s [Average]
[info]   (min, avg, max) = (62378.880, 65314.327, 66224.046), stdev = 1646.279
[info]   CI (99.9%): [58975.094, 71653.560] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   991.122 ±(99.9%) 81.229 MB/sec [Average]
[info]   (min, avg, max) = (955.596, 991.122, 1011.630), stdev = 21.095
[info]   CI (99.9%): [909.893, 1072.352] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   23887.545 ±(99.9%) 828.825 B/op [Average]
[info]   (min, avg, max) = (23644.972, 23887.545, 24113.699), stdev = 215.243
[info]   CI (99.9%): [23058.719, 24716.370] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   0.025 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.157] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   0.595 ±(99.9%) 3.135 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.595, 1.488), stdev = 0.814
[info]   CI (99.9%): [≈ 0, 3.729] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   944.333 ±(99.9%) 1421.484 MB/sec [Average]
[info]   (min, avg, max) = (674.354, 944.333, 1349.414), stdev = 369.155
[info]   CI (99.9%): [≈ 0, 2365.816] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   22883.340 ±(99.9%) 35968.401 B/op [Average]
[info]   (min, avg, max) = (16053.025, 22883.340, 34016.410), stdev = 9340.879
[info]   CI (99.9%): [≈ 0, 58851.741] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writePlayJson:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 52.41% complete, ETA 01:04:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 9020.749 ops/s
[info] # Warmup Iteration   2: 10642.340 ops/s
[info] # Warmup Iteration   3: 11124.162 ops/s
[info] # Warmup Iteration   4: 11033.648 ops/s
[info] # Warmup Iteration   5: 11078.139 ops/s
[info] Iteration   1: 11048.990 ops/s
[info]                  ·gc.alloc.rate:                   284.059 MB/sec
[info]                  ·gc.alloc.rate.norm:              40448.679 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.965 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      511.756 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 72871.810 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 11039.645 ops/s
[info]                  ·gc.alloc.rate:                   289.861 MB/sec
[info]                  ·gc.alloc.rate.norm:              41312.736 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      511.705 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 72931.205 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 11084.566 ops/s
[info]                  ·gc.alloc.rate:      274.627 MB/sec
[info]                  ·gc.alloc.rate.norm: 38992.551 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 11091.841 ops/s
[info]                  ·gc.alloc.rate:      274.781 MB/sec
[info]                  ·gc.alloc.rate.norm: 38995.535 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 10975.742 ops/s
[info]                  ·gc.alloc.rate:                   287.759 MB/sec
[info]                  ·gc.alloc.rate.norm:              41270.009 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.988 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 96662.317 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeUPickle":
[info]   11048.157 ±(99.9%) 178.037 ops/s [Average]
[info]   (min, avg, max) = (10975.742, 11048.157, 11091.841), stdev = 46.236
[info]   CI (99.9%): [10870.119, 11226.194] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeUPickle:·gc.alloc.rate":
[info]   282.217 ±(99.9%) 27.596 MB/sec [Average]
[info]   (min, avg, max) = (274.627, 282.217, 289.861), stdev = 7.167
[info]   CI (99.9%): [254.621, 309.814] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeUPickle:·gc.alloc.rate.norm":
[info]   40203.902 ±(99.9%) 4454.754 B/op [Average]
[info]   (min, avg, max) = (38992.551, 40203.902, 41312.736), stdev = 1156.885
[info]   CI (99.9%): [35749.149, 44658.656] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space":
[info]   0.004 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   0.593 ±(99.9%) 5.106 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.593, 2.965), stdev = 1.326
[info]   CI (99.9%): [≈ 0, 5.699] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space":
[info]   339.490 ±(99.9%) 1220.310 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 339.490, 673.988), stdev = 316.911
[info]   CI (99.9%): [≈ 0, 1559.800] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   48493.066 ±(99.9%) 174504.468 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 48493.066, 96662.317), stdev = 45318.256
[info]   CI (99.9%): [≈ 0, 222997.535] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeUPickle:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfUUIDsBenchmark.writeUPickle:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 3.000), stdev = 1.342
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 52.61% complete, ETA 01:04:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 8102.907 ops/s
[info] # Warmup Iteration   2: 23753.438 ops/s
[info] # Warmup Iteration   3: 23852.391 ops/s
[info] # Warmup Iteration   4: 23567.186 ops/s
[info] # Warmup Iteration   5: 23766.713 ops/s
[info] Iteration   1: 23835.910 ops/s
[info]                  ·gc.alloc.rate:                   1256.135 MB/sec
[info]                  ·gc.alloc.rate.norm:              82960.018 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.374 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.942 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 89089.374 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 23904.767 ops/s
[info]                  ·gc.alloc.rate:                   1251.598 MB/sec
[info]                  ·gc.alloc.rate.norm:              82416.400 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.370 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.974 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 88894.335 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 23909.589 ops/s
[info]                  ·gc.alloc.rate:                   1244.384 MB/sec
[info]                  ·gc.alloc.rate.norm:              81897.632 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.370 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1351.468 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 88945.238 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 23321.781 ops/s
[info]                  ·gc.alloc.rate:                   1212.928 MB/sec
[info]                  ·gc.alloc.rate.norm:              81848.705 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.405 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1352.318 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 91254.792 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 23685.105 ops/s
[info]                  ·gc.alloc.rate:                   1229.512 MB/sec
[info]                  ·gc.alloc.rate.norm:              81702.345 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      676.443 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 44950.354 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce":
[info]   23731.431 ±(99.9%) 948.426 ops/s [Average]
[info]   (min, avg, max) = (23321.781, 23731.431, 23909.589), stdev = 246.303
[info]   CI (99.9%): [22783.005, 24679.856] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:·gc.alloc.rate":
[info]   1238.911 ±(99.9%) 68.099 MB/sec [Average]
[info]   (min, avg, max) = (1212.928, 1238.911, 1256.135), stdev = 17.685
[info]   CI (99.9%): [1170.813, 1307.010] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   82165.020 ±(99.9%) 2001.625 B/op [Average]
[info]   (min, avg, max) = (81702.345, 82165.020, 82960.018), stdev = 519.816
[info]   CI (99.9%): [80163.395, 84166.645] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   0.017 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1.104 ±(99.9%) 2.377 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.104, 1.405), stdev = 0.617
[info]   CI (99.9%): [≈ 0, 3.481] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1215.829 ±(99.9%) 1161.080 MB/sec [Average]
[info]   (min, avg, max) = (676.443, 1215.829, 1352.318), stdev = 301.529
[info]   CI (99.9%): [54.749, 2376.909] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   80626.819 ±(99.9%) 76890.686 B/op [Average]
[info]   (min, avg, max) = (44950.354, 80626.819, 91254.792), stdev = 19968.267
[info]   CI (99.9%): [3736.133, 157517.505] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readCirce:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 52.81% complete, ETA 01:03:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 8443.653 ops/s
[info] # Warmup Iteration   2: 26230.895 ops/s
[info] # Warmup Iteration   3: 26716.824 ops/s
[info] # Warmup Iteration   4: 26618.805 ops/s
[info] # Warmup Iteration   5: 25940.481 ops/s
[info] Iteration   1: 26711.260 ops/s
[info]                  ·gc.alloc.rate:                   1091.717 MB/sec
[info]                  ·gc.alloc.rate.norm:              64335.438 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7.359 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1346.696 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 79361.457 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 25767.765 ops/s
[info]                  ·gc.alloc.rate:                   1031.322 MB/sec
[info]                  ·gc.alloc.rate.norm:              62989.600 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.407 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 41129.402 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 26712.395 ops/s
[info]                  ·gc.alloc.rate:                   1084.469 MB/sec
[info]                  ·gc.alloc.rate.norm:              63899.848 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3.679 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1347.439 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 79394.762 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 26719.913 ops/s
[info]                  ·gc.alloc.rate:                   1078.710 MB/sec
[info]                  ·gc.alloc.rate.norm:              63535.446 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.617 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 79432.820 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 26761.006 ops/s
[info]                  ·gc.alloc.rate:                   1069.391 MB/sec
[info]                  ·gc.alloc.rate.norm:              62907.552 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.313 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 39666.848 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala":
[info]   26534.468 ±(99.9%) 1652.253 ops/s [Average]
[info]   (min, avg, max) = (25767.765, 26534.468, 26761.006), stdev = 429.085
[info]   CI (99.9%): [24882.214, 28186.721] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1071.122 ±(99.9%) 91.263 MB/sec [Average]
[info]   (min, avg, max) = (1031.322, 1071.122, 1091.717), stdev = 23.701
[info]   CI (99.9%): [979.858, 1162.385] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   63533.577 ±(99.9%) 2330.322 B/op [Average]
[info]   (min, avg, max) = (62907.552, 63533.577, 64335.438), stdev = 605.177
[info]   CI (99.9%): [61203.254, 65863.899] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.037 ±(99.9%) 0.215 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.125), stdev = 0.056
[info]   CI (99.9%): [≈ 0, 0.253] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   2.208 ±(99.9%) 12.673 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.208, 7.359), stdev = 3.291
[info]   CI (99.9%): [≈ 0, 14.881] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1078.094 ±(99.9%) 1420.943 MB/sec [Average]
[info]   (min, avg, max) = (673.407, 1078.094, 1348.617), stdev = 369.015
[info]   CI (99.9%): [≈ 0, 2499.038] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   63797.058 ±(99.9%) 82274.699 B/op [Average]
[info]   (min, avg, max) = (39666.848, 63797.058, 79432.820), stdev = 21366.478
[info]   CI (99.9%): [≈ 0, 146071.757] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 3.000), stdev = 0.837
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 53.01% complete, ETA 01:03:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 398538.175 ops/s
[info] # Warmup Iteration   2: 507932.520 ops/s
[info] # Warmup Iteration   3: 524314.874 ops/s
[info] # Warmup Iteration   4: 534525.604 ops/s
[info] # Warmup Iteration   5: 538778.011 ops/s
[info] Iteration   1: 539197.152 ops/s
[info]                  ·gc.alloc.rate:                   1457.476 MB/sec
[info]                  ·gc.alloc.rate.norm:              4254.808 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.182 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2022.166 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5903.308 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 539239.193 ops/s
[info]                  ·gc.alloc.rate:                   1431.679 MB/sec
[info]                  ·gc.alloc.rate.norm:              4178.465 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.372 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3935.327 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 539220.684 ops/s
[info]                  ·gc.alloc.rate:                   1443.681 MB/sec
[info]                  ·gc.alloc.rate.norm:              4214.421 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.182 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.791 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3937.417 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 540100.176 ops/s
[info]                  ·gc.alloc.rate:                   1445.588 MB/sec
[info]                  ·gc.alloc.rate.norm:              4212.998 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.121 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.790 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3933.805 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 538495.089 ops/s
[info]                  ·gc.alloc.rate:                   1455.481 MB/sec
[info]                  ·gc.alloc.rate.norm:              4254.313 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.824 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3948.405 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala":
[info]   539250.459 ±(99.9%) 2192.213 ops/s [Average]
[info]   (min, avg, max) = (538495.089, 539250.459, 540100.176), stdev = 569.311
[info]   CI (99.9%): [537058.246, 541442.672] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1446.781 ±(99.9%) 39.885 MB/sec [Average]
[info]   (min, avg, max) = (1431.679, 1446.781, 1457.476), stdev = 10.358
[info]   CI (99.9%): [1406.896, 1486.666] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   4223.001 ±(99.9%) 124.019 B/op [Average]
[info]   (min, avg, max) = (4178.465, 4223.001, 4254.808), stdev = 32.207
[info]   CI (99.9%): [4098.982, 4347.021] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.033 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.062), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.097 ±(99.9%) 0.355 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.097, 0.182), stdev = 0.092
[info]   CI (99.9%): [≈ 0, 0.452] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   1483.989 ±(99.9%) 1158.474 MB/sec [Average]
[info]   (min, avg, max) = (1348.372, 1483.989, 2022.166), stdev = 300.852
[info]   CI (99.9%): [325.515, 2642.462] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   4331.652 ±(99.9%) 3383.178 B/op [Average]
[info]   (min, avg, max) = (3933.805, 4331.652, 5903.308), stdev = 878.601
[info]   CI (99.9%): [948.474, 7714.831] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 3.000), stdev = 0.707
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 53.21% complete, ETA 01:03:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1840.031 ops/s
[info] # Warmup Iteration   2: 18747.234 ops/s
[info] # Warmup Iteration   3: 22923.621 ops/s
[info] # Warmup Iteration   4: 23150.594 ops/s
[info] # Warmup Iteration   5: 22941.867 ops/s
[info] Iteration   1: 22663.241 ops/s
[info]                  ·gc.alloc.rate:                   1703.111 MB/sec
[info]                  ·gc.alloc.rate.norm:              118292.269 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.446 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2021.971 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 140439.242 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 23223.527 ops/s
[info]                  ·gc.alloc.rate:                   1712.569 MB/sec
[info]                  ·gc.alloc.rate.norm:              116067.741 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.531 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 91463.167 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 23225.101 ops/s
[info]                  ·gc.alloc.rate:                   1727.331 MB/sec
[info]                  ·gc.alloc.rate.norm:              117006.318 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4.232 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2026.684 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 137283.970 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 23157.577 ops/s
[info]                  ·gc.alloc.rate:                   1709.576 MB/sec
[info]                  ·gc.alloc.rate.norm:              116204.973 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.830 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1352.080 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 91904.895 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 22548.178 ops/s
[info]                  ·gc.alloc.rate:                   1692.734 MB/sec
[info]                  ·gc.alloc.rate.norm:              118162.868 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.453 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2029.861 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 141696.318 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson":
[info]   22963.525 ±(99.9%) 1271.825 ops/s [Average]
[info]   (min, avg, max) = (22548.178, 22963.525, 23225.101), stdev = 330.289
[info]   CI (99.9%): [21691.700, 24235.350] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1709.064 ±(99.9%) 49.023 MB/sec [Average]
[info]   (min, avg, max) = (1692.734, 1709.064, 1727.331), stdev = 12.731
[info]   CI (99.9%): [1660.041, 1758.087] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   117146.834 ±(99.9%) 4045.758 B/op [Average]
[info]   (min, avg, max) = (116067.741, 117146.834, 118292.269), stdev = 1050.671
[info]   CI (99.9%): [113101.075, 121192.592] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   0.029 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   1.992 ±(99.9%) 6.171 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.992, 4.232), stdev = 1.603
[info]   CI (99.9%): [≈ 0, 8.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   1756.026 ±(99.9%) 1424.451 MB/sec [Average]
[info]   (min, avg, max) = (1349.531, 1756.026, 2029.861), stdev = 369.925
[info]   CI (99.9%): [331.574, 3180.477] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   120557.518 ±(99.9%) 101684.710 B/op [Average]
[info]   (min, avg, max) = (91463.167, 120557.518, 141696.318), stdev = 26407.196
[info]   CI (99.9%): [18872.808, 222242.228] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readPlayJson:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 53.41% complete, ETA 01:03:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 11796.311 ops/s
[info] # Warmup Iteration   2: 26417.116 ops/s
[info] # Warmup Iteration   3: 25948.781 ops/s
[info] # Warmup Iteration   4: 26589.463 ops/s
[info] # Warmup Iteration   5: 26463.203 ops/s
[info] Iteration   1: 27164.841 ops/s
[info]                  ·gc.alloc.rate:                   1218.916 MB/sec
[info]                  ·gc.alloc.rate.norm:              70628.771 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      671.371 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 38901.899 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 27299.148 ops/s
[info]                  ·gc.alloc.rate:                   1239.569 MB/sec
[info]                  ·gc.alloc.rate.norm:              71474.842 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1342.758 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 77424.796 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 27185.416 ops/s
[info]                  ·gc.alloc.rate:                   1222.685 MB/sec
[info]                  ·gc.alloc.rate.norm:              70795.486 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.205 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1342.734 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 77746.569 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 27138.102 ops/s
[info]                  ·gc.alloc.rate:                   1223.668 MB/sec
[info]                  ·gc.alloc.rate.norm:              70972.853 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3.622 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1344.109 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 77958.456 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 27276.308 ops/s
[info]                  ·gc.alloc.rate:                   1236.344 MB/sec
[info]                  ·gc.alloc.rate.norm:              71344.340 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.402 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.410 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 77638.132 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readUPickle":
[info]   27212.763 ±(99.9%) 273.089 ops/s [Average]
[info]   (min, avg, max) = (27138.102, 27212.763, 27299.148), stdev = 70.920
[info]   CI (99.9%): [26939.674, 27485.852] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readUPickle:·gc.alloc.rate":
[info]   1228.236 ±(99.9%) 35.120 MB/sec [Average]
[info]   (min, avg, max) = (1218.916, 1228.236, 1239.569), stdev = 9.120
[info]   CI (99.9%): [1193.116, 1263.356] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readUPickle:·gc.alloc.rate.norm":
[info]   71043.259 ±(99.9%) 1381.763 B/op [Average]
[info]   (min, avg, max) = (70628.771, 71043.259, 71474.842), stdev = 358.839
[info]   CI (99.9%): [69661.496, 72425.021] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readUPickle:·gc.churn.PS_Eden_Space":
[info]   0.025 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.129] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   1.446 ±(99.9%) 6.054 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.446, 3.622), stdev = 1.572
[info]   CI (99.9%): [≈ 0, 7.500] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space":
[info]   1209.277 ±(99.9%) 1157.889 MB/sec [Average]
[info]   (min, avg, max) = (671.371, 1209.277, 1345.410), stdev = 300.700
[info]   CI (99.9%): [51.387, 2367.166] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   69933.971 ±(99.9%) 66802.987 B/op [Average]
[info]   (min, avg, max) = (38901.899, 69933.971, 77958.456), stdev = 17348.524
[info]   CI (99.9%): [3130.984, 136736.957] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readUPickle:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.readUPickle:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 53.61% complete, ETA 01:02:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 33453.208 ops/s
[info] # Warmup Iteration   2: 68737.657 ops/s
[info] # Warmup Iteration   3: 70799.788 ops/s
[info] # Warmup Iteration   4: 71421.318 ops/s
[info] # Warmup Iteration   5: 69786.140 ops/s
[info] Iteration   1: 69668.450 ops/s
[info]                  ·gc.alloc.rate:                   1374.384 MB/sec
[info]                  ·gc.alloc.rate.norm:              31052.198 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.470 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.753 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 30495.684 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 70649.677 ops/s
[info]                  ·gc.alloc.rate:                   1386.639 MB/sec
[info]                  ·gc.alloc.rate.norm:              30893.920 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.927 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.704 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 30093.288 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 71553.923 ops/s
[info]                  ·gc.alloc.rate:                   1401.409 MB/sec
[info]                  ·gc.alloc.rate.norm:              30829.246 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1351.750 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 29736.809 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 71549.057 ops/s
[info]                  ·gc.alloc.rate:                   1414.389 MB/sec
[info]                  ·gc.alloc.rate.norm:              31109.882 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.916 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1353.057 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 29760.867 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 71494.431 ops/s
[info]                  ·gc.alloc.rate:                   1425.140 MB/sec
[info]                  ·gc.alloc.rate.norm:              31377.150 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.458 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1354.025 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 29811.420 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce":
[info]   70983.108 ±(99.9%) 3191.090 ops/s [Average]
[info]   (min, avg, max) = (69668.450, 70983.108, 71553.923), stdev = 828.716
[info]   CI (99.9%): [67792.017, 74174.198] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.alloc.rate":
[info]   1400.392 ±(99.9%) 78.796 MB/sec [Average]
[info]   (min, avg, max) = (1374.384, 1400.392, 1425.140), stdev = 20.463
[info]   CI (99.9%): [1321.597, 1479.188] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   31052.479 ±(99.9%) 825.154 B/op [Average]
[info]   (min, avg, max) = (30829.246, 31052.479, 31377.150), stdev = 214.290
[info]   CI (99.9%): [30227.325, 31877.634] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   0.025 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.554 ±(99.9%) 1.483 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.554, 0.927), stdev = 0.385
[info]   CI (99.9%): [≈ 0, 2.038] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   1351.858 ±(99.9%) 6.644 MB/sec [Average]
[info]   (min, avg, max) = (1349.753, 1351.858, 1354.025), stdev = 1.725
[info]   CI (99.9%): [1345.214, 1358.501] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   29979.614 ±(99.9%) 1239.321 B/op [Average]
[info]   (min, avg, max) = (29736.809, 29979.614, 30495.684), stdev = 321.848
[info]   CI (99.9%): [28740.292, 31218.935] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeCirce:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 3.000), stdev = 0.837
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 53.82% complete, ETA 01:02:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 70957.335 ops/s
[info] # Warmup Iteration   2: 125936.659 ops/s
[info] # Warmup Iteration   3: 130751.744 ops/s
[info] # Warmup Iteration   4: 132517.493 ops/s
[info] # Warmup Iteration   5: 128926.448 ops/s
[info] Iteration   1: 130281.452 ops/s
[info]                  ·gc.alloc.rate:                   1284.603 MB/sec
[info]                  ·gc.alloc.rate.norm:              15519.984 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.006 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1347.470 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16279.512 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 132813.101 ops/s
[info]                  ·gc.alloc.rate:                   1296.709 MB/sec
[info]                  ·gc.alloc.rate.norm:              15367.972 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.247 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.166 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15977.820 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 132810.459 ops/s
[info]                  ·gc.alloc.rate:                   1294.728 MB/sec
[info]                  ·gc.alloc.rate.norm:              15343.727 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.480 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.607 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15994.090 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 132701.726 ops/s
[info]                  ·gc.alloc.rate:                   1280.415 MB/sec
[info]                  ·gc.alloc.rate.norm:              15187.542 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      675.401 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8011.212 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 132810.469 ops/s
[info]                  ·gc.alloc.rate:                   1316.325 MB/sec
[info]                  ·gc.alloc.rate.norm:              15601.684 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1351.410 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16017.532 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala":
[info]   132283.441 ±(99.9%) 4313.309 ops/s [Average]
[info]   (min, avg, max) = (130281.452, 132283.441, 132813.101), stdev = 1120.153
[info]   CI (99.9%): [127970.132, 136596.751] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1294.556 ±(99.9%) 53.687 MB/sec [Average]
[info]   (min, avg, max) = (1280.415, 1294.556, 1316.325), stdev = 13.942
[info]   CI (99.9%): [1240.869, 1348.243] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   15404.182 ±(99.9%) 621.840 B/op [Average]
[info]   (min, avg, max) = (15187.542, 15404.182, 15601.684), stdev = 161.490
[info]   CI (99.9%): [14782.341, 16026.022] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.046 ±(99.9%) 0.215 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.125), stdev = 0.056
[info]   CI (99.9%): [≈ 0, 0.261] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.547 ±(99.9%) 2.562 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.547, 1.480), stdev = 0.665
[info]   CI (99.9%): [≈ 0, 3.108] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1214.411 ±(99.9%) 1160.274 MB/sec [Average]
[info]   (min, avg, max) = (675.401, 1214.411, 1351.410), stdev = 301.319
[info]   CI (99.9%): [54.137, 2374.685] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   14456.033 ±(99.9%) 13881.094 B/op [Average]
[info]   (min, avg, max) = (8011.212, 14456.033, 16279.512), stdev = 3604.876
[info]   CI (99.9%): [574.939, 28337.127] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 3.000), stdev = 0.837
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 54.02% complete, ETA 01:02:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 859449.823 ops/s
[info] # Warmup Iteration   2: 999529.690 ops/s
[info] # Warmup Iteration   3: 1059125.283 ops/s
[info] # Warmup Iteration   4: 1052379.724 ops/s
[info] # Warmup Iteration   5: 1060161.646 ops/s
[info] Iteration   1: 1064654.966 ops/s
[info]                  ·gc.alloc.rate:                   903.119 MB/sec
[info]                  ·gc.alloc.rate.norm:              1335.463 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.031 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.916 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 996.536 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 1061779.809 ops/s
[info]                  ·gc.alloc.rate:                   920.676 MB/sec
[info]                  ·gc.alloc.rate.norm:              1364.584 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.093 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.726 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1994.574 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 1056370.638 ops/s
[info]                  ·gc.alloc.rate:                   895.368 MB/sec
[info]                  ·gc.alloc.rate.norm:              1334.259 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.621 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1002.326 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 1048763.876 ops/s
[info]                  ·gc.alloc.rate:                   886.720 MB/sec
[info]                  ·gc.alloc.rate.norm:              1330.879 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.062 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.695 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1009.649 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 1050572.642 ops/s
[info]                  ·gc.alloc.rate:                   902.367 MB/sec
[info]                  ·gc.alloc.rate.norm:              1352.045 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.125 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.979 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2016.723 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala":
[info]   1056428.386 ±(99.9%) 26493.446 ops/s [Average]
[info]   (min, avg, max) = (1048763.876, 1056428.386, 1064654.966), stdev = 6880.264
[info]   CI (99.9%): [1029934.940, 1082921.833] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   901.650 ±(99.9%) 48.211 MB/sec [Average]
[info]   (min, avg, max) = (886.720, 901.650, 920.676), stdev = 12.520
[info]   CI (99.9%): [853.439, 949.861] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1343.446 ±(99.9%) 55.361 B/op [Average]
[info]   (min, avg, max) = (1330.879, 1343.446, 1364.584), stdev = 14.377
[info]   CI (99.9%): [1288.085, 1398.807] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.042 ±(99.9%) 0.127 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.083), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.062 ±(99.9%) 0.190 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.062, 0.125), stdev = 0.049
[info]   CI (99.9%): [≈ 0, 0.252] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   942.187 ±(99.9%) 1418.941 MB/sec [Average]
[info]   (min, avg, max) = (672.621, 942.187, 1345.979), stdev = 368.495
[info]   CI (99.9%): [≈ 0, 2361.129] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1403.961 ±(99.9%) 2115.305 B/op [Average]
[info]   (min, avg, max) = (996.536, 1403.961, 2016.723), stdev = 549.338
[info]   CI (99.9%): [≈ 0, 3519.266] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 54.22% complete, ETA 01:02:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 880542.844 ops/s
[info] # Warmup Iteration   2: 1085911.281 ops/s
[info] # Warmup Iteration   3: 1181664.405 ops/s
[info] # Warmup Iteration   4: 1183816.107 ops/s
[info] # Warmup Iteration   5: 1182605.612 ops/s
[info] Iteration   1: 1182574.715 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1181221.015 ops/s
[info]                  ·gc.alloc.rate:      0.104 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.139 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1183024.017 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1184141.803 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1183293.383 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc":
[info]   1182850.987 ±(99.9%) 4140.560 ops/s [Average]
[info]   (min, avg, max) = (1181221.015, 1182850.987, 1184141.803), stdev = 1075.290
[info]   CI (99.9%): [1178710.427, 1186991.547] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.021 ±(99.9%) 0.179 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.021, 0.104), stdev = 0.046
[info]   CI (99.9%): [≈ 0, 0.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.028 ±(99.9%) 0.238 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻³, 0.028, 0.139), stdev = 0.062
[info]   CI (99.9%): [≈ 0, 0.266] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 54.42% complete, ETA 01:01:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 47644.844 ops/s
[info] # Warmup Iteration   2: 132237.479 ops/s
[info] # Warmup Iteration   3: 134560.323 ops/s
[info] # Warmup Iteration   4: 135903.548 ops/s
[info] # Warmup Iteration   5: 135821.340 ops/s
[info] Iteration   1: 135930.583 ops/s
[info]                  ·gc.alloc.rate:                   1309.149 MB/sec
[info]                  ·gc.alloc.rate.norm:              15161.389 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.639 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15618.730 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 135402.400 ops/s
[info]                  ·gc.alloc.rate:                   1294.544 MB/sec
[info]                  ·gc.alloc.rate.norm:              15049.752 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.484 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.401 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15687.486 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 136083.819 ops/s
[info]                  ·gc.alloc.rate:                   1280.887 MB/sec
[info]                  ·gc.alloc.rate.norm:              14816.492 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.998 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7807.946 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 135587.639 ops/s
[info]                  ·gc.alloc.rate:                   1305.500 MB/sec
[info]                  ·gc.alloc.rate.norm:              15149.996 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.483 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.892 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15676.758 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 135737.023 ops/s
[info]                  ·gc.alloc.rate:                   1302.537 MB/sec
[info]                  ·gc.alloc.rate.norm:              15106.176 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.241 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1351.261 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15671.253 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson":
[info]   135748.293 ±(99.9%) 1039.292 ops/s [Average]
[info]   (min, avg, max) = (135402.400, 135748.293, 136083.819), stdev = 269.901
[info]   CI (99.9%): [134709.000, 136787.585] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1298.523 ±(99.9%) 43.248 MB/sec [Average]
[info]   (min, avg, max) = (1280.887, 1298.523, 1309.149), stdev = 11.231
[info]   CI (99.9%): [1255.276, 1341.771] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   15056.761 ±(99.9%) 544.086 B/op [Average]
[info]   (min, avg, max) = (14816.492, 15056.761, 15161.389), stdev = 141.297
[info]   CI (99.9%): [14512.675, 15600.847] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   0.021 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   0.242 ±(99.9%) 0.931 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.242, 0.484), stdev = 0.242
[info]   CI (99.9%): [≈ 0, 1.173] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   1215.038 ±(99.9%) 1162.485 MB/sec [Average]
[info]   (min, avg, max) = (674.998, 1215.038, 1351.261), stdev = 301.894
[info]   CI (99.9%): [52.553, 2377.524] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   14092.435 ±(99.9%) 13528.221 B/op [Average]
[info]   (min, avg, max) = (7807.946, 14092.435, 15687.486), stdev = 3513.236
[info]   CI (99.9%): [564.214, 27620.655] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writePlayJson:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 3.000), stdev = 0.707
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 54.62% complete, ETA 01:01:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 27948.360 ops/s
[info] # Warmup Iteration   2: 37126.831 ops/s
[info] # Warmup Iteration   3: 39011.848 ops/s
[info] # Warmup Iteration   4: 39161.172 ops/s
[info] # Warmup Iteration   5: 39273.351 ops/s
[info] Iteration   1: 38240.871 ops/s
[info]                  ·gc.alloc.rate:                   523.304 MB/sec
[info]                  ·gc.alloc.rate.norm:              21542.606 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.857 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.653 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 27690.785 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 39339.287 ops/s
[info]                  ·gc.alloc.rate:                   531.961 MB/sec
[info]                  ·gc.alloc.rate.norm:              21283.813 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.746 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 26916.631 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 39358.227 ops/s
[info]                  ·gc.alloc.rate:      519.777 MB/sec
[info]                  ·gc.alloc.rate.norm: 20784.011 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 39292.692 ops/s
[info]                  ·gc.alloc.rate:                   533.281 MB/sec
[info]                  ·gc.alloc.rate.norm:              21363.991 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.688 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 26948.822 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 39245.823 ops/s
[info]                  ·gc.alloc.rate:                   532.485 MB/sec
[info]                  ·gc.alloc.rate.norm:              21358.057 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.670 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.341 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 27007.804 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeUPickle":
[info]   39095.380 ±(99.9%) 1847.035 ops/s [Average]
[info]   (min, avg, max) = (38240.871, 39095.380, 39358.227), stdev = 479.669
[info]   CI (99.9%): [37248.345, 40942.415] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeUPickle:·gc.alloc.rate":
[info]   528.162 ±(99.9%) 23.834 MB/sec [Average]
[info]   (min, avg, max) = (519.777, 528.162, 533.281), stdev = 6.190
[info]   CI (99.9%): [504.328, 551.996] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeUPickle:·gc.alloc.rate.norm":
[info]   21266.496 ±(99.9%) 1101.339 B/op [Average]
[info]   (min, avg, max) = (20784.011, 21266.496, 21542.606), stdev = 286.014
[info]   CI (99.9%): [20165.156, 22367.835] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space":
[info]   0.012 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   0.505 ±(99.9%) 2.885 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.505, 1.670), stdev = 0.749
[info]   CI (99.9%): [≈ 0, 3.390] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space":
[info]   538.286 ±(99.9%) 1158.701 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 538.286, 673.341), stdev = 300.911
[info]   CI (99.9%): [≈ 0, 1696.987] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   21712.808 ±(99.9%) 46754.605 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 21712.808, 27690.785), stdev = 12142.023
[info]   CI (99.9%): [≈ 0, 68467.414] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeUPickle:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearMonthsBenchmark.writeUPickle:·gc.time":
[info]   4.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 54.82% complete, ETA 01:01:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 8175.566 ops/s
[info] # Warmup Iteration   2: 38457.781 ops/s
[info] # Warmup Iteration   3: 38292.457 ops/s
[info] # Warmup Iteration   4: 38718.812 ops/s
[info] # Warmup Iteration   5: 39065.689 ops/s
[info] Iteration   1: 39121.109 ops/s
[info]                  ·gc.alloc.rate:                   1447.928 MB/sec
[info]                  ·gc.alloc.rate.norm:              58262.248 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.512 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1347.977 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 54240.386 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 38977.907 ops/s
[info]                  ·gc.alloc.rate:                   1447.559 MB/sec
[info]                  ·gc.alloc.rate.norm:              58455.321 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3.362 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2023.829 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 81726.258 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 39111.806 ops/s
[info]                  ·gc.alloc.rate:                   1431.279 MB/sec
[info]                  ·gc.alloc.rate.norm:              57595.369 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.513 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 54345.292 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 39150.187 ops/s
[info]                  ·gc.alloc.rate:                   1443.909 MB/sec
[info]                  ·gc.alloc.rate.norm:              58058.712 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.511 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1351.313 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 54335.497 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 38690.418 ops/s
[info]                  ·gc.alloc.rate:                   1441.991 MB/sec
[info]                  ·gc.alloc.rate.norm:              58663.500 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.694 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1352.815 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 55035.607 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala":
[info]   39010.285 ±(99.9%) 734.466 ops/s [Average]
[info]   (min, avg, max) = (38690.418, 39010.285, 39150.187), stdev = 190.738
[info]   CI (99.9%): [38275.819, 39744.751] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1442.533 ±(99.9%) 26.060 MB/sec [Average]
[info]   (min, avg, max) = (1431.279, 1442.533, 1447.928), stdev = 6.768
[info]   CI (99.9%): [1416.474, 1468.593] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   58207.030 ±(99.9%) 1574.991 B/op [Average]
[info]   (min, avg, max) = (57595.369, 58207.030, 58663.500), stdev = 409.020
[info]   CI (99.9%): [56632.039, 59782.021] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.050 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.083), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.171] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   2.016 ±(99.9%) 4.898 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.016, 3.362), stdev = 1.272
[info]   CI (99.9%): [≈ 0, 6.913] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1485.290 ±(99.9%) 1159.267 MB/sec [Average]
[info]   (min, avg, max) = (1347.977, 1485.290, 2023.829), stdev = 301.058
[info]   CI (99.9%): [326.023, 2644.556] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   59936.608 ±(99.9%) 46919.858 B/op [Average]
[info]   (min, avg, max) = (54240.386, 59936.608, 81726.258), stdev = 12184.938
[info]   CI (99.9%): [13016.750, 106856.466] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJacksonScala:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 3.000), stdev = 0.707
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 55.02% complete, ETA 01:00:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 540900.078 ops/s
[info] # Warmup Iteration   2: 645987.093 ops/s
[info] # Warmup Iteration   3: 726622.708 ops/s
[info] # Warmup Iteration   4: 728297.464 ops/s
[info] # Warmup Iteration   5: 726230.861 ops/s
[info] Iteration   1: 731177.772 ops/s
[info]                  ·gc.alloc.rate:                   1458.631 MB/sec
[info]                  ·gc.alloc.rate.norm:              3140.240 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.134 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.374 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2896.413 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 729330.838 ops/s
[info]                  ·gc.alloc.rate:                   1465.516 MB/sec
[info]                  ·gc.alloc.rate.norm:              3162.167 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.270 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1346.390 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2905.128 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 729066.052 ops/s
[info]                  ·gc.alloc.rate:                   1477.807 MB/sec
[info]                  ·gc.alloc.rate.norm:              3190.096 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1347.646 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2909.120 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 731703.233 ops/s
[info]                  ·gc.alloc.rate:                   1467.368 MB/sec
[info]                  ·gc.alloc.rate.norm:              3156.481 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.090 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.806 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2901.440 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 702751.848 ops/s
[info]                  ·gc.alloc.rate:                   1426.416 MB/sec
[info]                  ·gc.alloc.rate.norm:              3194.923 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.103 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3023.995 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala":
[info]   724805.949 ±(99.9%) 47675.697 ops/s [Average]
[info]   (min, avg, max) = (702751.848, 724805.949, 731703.233), stdev = 12381.227
[info]   CI (99.9%): [677130.252, 772481.646] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1459.147 ±(99.9%) 75.258 MB/sec [Average]
[info]   (min, avg, max) = (1426.416, 1459.147, 1477.807), stdev = 19.544
[info]   CI (99.9%): [1383.889, 1534.406] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   3168.781 ±(99.9%) 89.219 B/op [Average]
[info]   (min, avg, max) = (3140.240, 3168.781, 3194.923), stdev = 23.170
[info]   CI (99.9%): [3079.563, 3258.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.046 ±(99.9%) 0.200 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.125), stdev = 0.052
[info]   CI (99.9%): [≈ 0, 0.245] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.099 ±(99.9%) 0.431 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.099, 0.270), stdev = 0.112
[info]   CI (99.9%): [≈ 0, 0.529] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   1347.664 ±(99.9%) 7.235 MB/sec [Average]
[info]   (min, avg, max) = (1345.374, 1347.664, 1350.103), stdev = 1.879
[info]   CI (99.9%): [1340.429, 1354.898] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2927.219 ±(99.9%) 209.098 B/op [Average]
[info]   (min, avg, max) = (2896.413, 2927.219, 3023.995), stdev = 54.302
[info]   CI (99.9%): [2718.122, 3136.317] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readJsoniterScala:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 3.000), stdev = 0.707
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 55.22% complete, ETA 01:00:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2991.321 ops/s
[info] # Warmup Iteration   2: 27332.016 ops/s
[info] # Warmup Iteration   3: 29445.748 ops/s
[info] # Warmup Iteration   4: 29451.024 ops/s
[info] # Warmup Iteration   5: 28279.970 ops/s
[info] Iteration   1: 29588.378 ops/s
[info]                  ·gc.alloc.rate:                   2093.004 MB/sec
[info]                  ·gc.alloc.rate.norm:              111357.491 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3.322 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2024.043 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 107688.429 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 29662.629 ops/s
[info]                  ·gc.alloc.rate:                   2096.481 MB/sec
[info]                  ·gc.alloc.rate.norm:              111252.097 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3.314 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2026.467 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 107536.740 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 29658.581 ops/s
[info]                  ·gc.alloc.rate:                   2107.839 MB/sec
[info]                  ·gc.alloc.rate.norm:              111873.121 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.209 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2029.671 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 107724.358 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 29632.547 ops/s
[info]                  ·gc.alloc.rate:                   2093.441 MB/sec
[info]                  ·gc.alloc.rate.norm:              111199.883 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3.317 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2031.857 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 107928.639 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 29653.297 ops/s
[info]                  ·gc.alloc.rate:                   2121.692 MB/sec
[info]                  ·gc.alloc.rate.norm:              112639.874 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3.314 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2034.106 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 107989.999 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson":
[info]   29639.086 ±(99.9%) 117.906 ops/s [Average]
[info]   (min, avg, max) = (29588.378, 29639.086, 29662.629), stdev = 30.620
[info]   CI (99.9%): [29521.180, 29756.993] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2102.491 ±(99.9%) 47.367 MB/sec [Average]
[info]   (min, avg, max) = (2093.004, 2102.491, 2121.692), stdev = 12.301
[info]   CI (99.9%): [2055.124, 2149.859] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   111664.493 ±(99.9%) 2338.356 B/op [Average]
[info]   (min, avg, max) = (111199.883, 111664.493, 112639.874), stdev = 607.264
[info]   CI (99.9%): [109326.137, 114002.849] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   0.058 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.058, 0.062), stdev = 0.009
[info]   CI (99.9%): [0.022, 0.094] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   3.095 ±(99.9%) 1.907 B/op [Average]
[info]   (min, avg, max) = (2.209, 3.095, 3.322), stdev = 0.495
[info]   CI (99.9%): [1.188, 5.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   2029.229 ±(99.9%) 15.571 MB/sec [Average]
[info]   (min, avg, max) = (2024.043, 2029.229, 2034.106), stdev = 4.044
[info]   CI (99.9%): [2013.657, 2044.800] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   107773.633 ±(99.9%) 711.711 B/op [Average]
[info]   (min, avg, max) = (107536.740, 107773.633, 107989.999), stdev = 184.829
[info]   CI (99.9%): [107061.922, 108485.344] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readPlayJson:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 55.42% complete, ETA 01:00:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 16204.396 ops/s
[info] # Warmup Iteration   2: 37059.681 ops/s
[info] # Warmup Iteration   3: 39796.295 ops/s
[info] # Warmup Iteration   4: 39312.304 ops/s
[info] # Warmup Iteration   5: 39793.269 ops/s
[info] Iteration   1: 40143.125 ops/s
[info]                  ·gc.alloc.rate:                   1680.808 MB/sec
[info]                  ·gc.alloc.rate.norm:              65910.532 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3.265 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2019.328 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 79185.117 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 40016.256 ops/s
[info]                  ·gc.alloc.rate:                   1667.097 MB/sec
[info]                  ·gc.alloc.rate.norm:              65545.615 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.374 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 53053.654 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 40196.642 ops/s
[info]                  ·gc.alloc.rate:                   1687.376 MB/sec
[info]                  ·gc.alloc.rate.norm:              66076.917 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4.075 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2025.776 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 79328.505 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 40327.709 ops/s
[info]                  ·gc.alloc.rate:                   1678.627 MB/sec
[info]                  ·gc.alloc.rate.norm:              65518.297 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.625 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1352.090 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 52773.256 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 39499.764 ops/s
[info]                  ·gc.alloc.rate:                   1679.041 MB/sec
[info]                  ·gc.alloc.rate.norm:              66891.585 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.488 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2031.066 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 80915.933 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readUPickle":
[info]   40036.699 ±(99.9%) 1233.277 ops/s [Average]
[info]   (min, avg, max) = (39499.764, 40036.699, 40327.709), stdev = 320.278
[info]   CI (99.9%): [38803.423, 41269.976] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readUPickle:·gc.alloc.rate":
[info]   1678.590 ±(99.9%) 28.193 MB/sec [Average]
[info]   (min, avg, max) = (1667.097, 1678.590, 1687.376), stdev = 7.322
[info]   CI (99.9%): [1650.397, 1706.783] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readUPickle:·gc.alloc.rate.norm":
[info]   65988.589 ±(99.9%) 2149.730 B/op [Average]
[info]   (min, avg, max) = (65518.297, 65988.589, 66891.585), stdev = 558.278
[info]   CI (99.9%): [63838.859, 68138.319] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readUPickle:·gc.churn.PS_Eden_Space":
[info]   0.058 ±(99.9%) 0.154 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.058, 0.104), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.212] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   2.291 ±(99.9%) 6.047 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.291, 4.075), stdev = 1.570
[info]   CI (99.9%): [≈ 0, 8.337] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space":
[info]   1755.527 ±(99.9%) 1423.005 MB/sec [Average]
[info]   (min, avg, max) = (1349.374, 1755.527, 2031.066), stdev = 369.550
[info]   CI (99.9%): [332.521, 3178.532] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   69051.293 ±(99.9%) 56788.320 B/op [Average]
[info]   (min, avg, max) = (52773.256, 69051.293, 80915.933), stdev = 14747.746
[info]   CI (99.9%): [12262.973, 125839.613] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readUPickle:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.readUPickle:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 55.62% complete, ETA 01:00:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 106991.077 ops/s
[info] # Warmup Iteration   2: 261183.814 ops/s
[info] # Warmup Iteration   3: 269927.543 ops/s
[info] # Warmup Iteration   4: 267455.654 ops/s
[info] # Warmup Iteration   5: 260706.576 ops/s
[info] Iteration   1: 267957.683 ops/s
[info]                  ·gc.alloc.rate:                   1310.749 MB/sec
[info]                  ·gc.alloc.rate.norm:              7700.783 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.367 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.569 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7922.979 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 267183.919 ops/s
[info]                  ·gc.alloc.rate:                   1297.956 MB/sec
[info]                  ·gc.alloc.rate.norm:              7646.588 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.368 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.407 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7949.703 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 267965.719 ops/s
[info]                  ·gc.alloc.rate:                   1292.312 MB/sec
[info]                  ·gc.alloc.rate.norm:              7591.878 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      675.331 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3967.329 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 268065.622 ops/s
[info]                  ·gc.alloc.rate:                   1306.272 MB/sec
[info]                  ·gc.alloc.rate.norm:              7669.713 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.489 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1351.563 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7935.639 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 267729.152 ops/s
[info]                  ·gc.alloc.rate:                   1294.343 MB/sec
[info]                  ·gc.alloc.rate.norm:              7610.273 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.122 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1352.676 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7953.251 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala":
[info]   267780.419 ±(99.9%) 1368.930 ops/s [Average]
[info]   (min, avg, max) = (267183.919, 267780.419, 268065.622), stdev = 355.507
[info]   CI (99.9%): [266411.490, 269149.349] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1300.326 ±(99.9%) 30.419 MB/sec [Average]
[info]   (min, avg, max) = (1292.312, 1300.326, 1310.749), stdev = 7.900
[info]   CI (99.9%): [1269.907, 1330.746] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   7643.847 ±(99.9%) 169.453 B/op [Average]
[info]   (min, avg, max) = (7591.878, 7643.847, 7700.783), stdev = 44.006
[info]   CI (99.9%): [7474.394, 7813.300] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.046 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.083), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.177] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.269 ±(99.9%) 0.774 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.269, 0.489), stdev = 0.201
[info]   CI (99.9%): [≈ 0, 1.043] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1215.509 ±(99.9%) 1162.792 MB/sec [Average]
[info]   (min, avg, max) = (675.331, 1215.509, 1352.676), stdev = 301.973
[info]   CI (99.9%): [52.717, 2378.301] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   7145.780 ±(99.9%) 6842.012 B/op [Average]
[info]   (min, avg, max) = (3967.329, 7145.780, 7953.251), stdev = 1776.849
[info]   CI (99.9%): [303.768, 13987.793] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJacksonScala:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 3.000), stdev = 0.837
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 55.82% complete, ETA 00:59:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1170378.420 ops/s
[info] # Warmup Iteration   2: 1459189.336 ops/s
[info] # Warmup Iteration   3: 1458591.561 ops/s
[info] # Warmup Iteration   4: 1455591.487 ops/s
[info] # Warmup Iteration   5: 1471416.126 ops/s
[info] Iteration   1: 1464051.370 ops/s
[info]                  ·gc.alloc.rate:                   868.765 MB/sec
[info]                  ·gc.alloc.rate.norm:              934.125 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.045 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.327 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 723.984 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 1463319.331 ops/s
[info]                  ·gc.alloc.rate:                   868.806 MB/sec
[info]                  ·gc.alloc.rate.norm:              934.607 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.677 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 723.624 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 1425855.178 ops/s
[info]                  ·gc.alloc.rate:                   879.346 MB/sec
[info]                  ·gc.alloc.rate.norm:              970.558 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.138 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.592 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1485.167 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 1477821.260 ops/s
[info]                  ·gc.alloc.rate:                   880.417 MB/sec
[info]                  ·gc.alloc.rate.norm:              937.740 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.701 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 716.500 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 1468635.975 ops/s
[info]                  ·gc.alloc.rate:                   885.939 MB/sec
[info]                  ·gc.alloc.rate.norm:              949.070 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.037 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 720.997 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala":
[info]   1459936.623 ±(99.9%) 76662.097 ops/s [Average]
[info]   (min, avg, max) = (1425855.178, 1459936.623, 1477821.260), stdev = 19908.903
[info]   CI (99.9%): [1383274.526, 1536598.720] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   876.655 ±(99.9%) 29.290 MB/sec [Average]
[info]   (min, avg, max) = (868.765, 876.655, 885.939), stdev = 7.607
[info]   CI (99.9%): [847.364, 905.945] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   945.220 ±(99.9%) 59.296 B/op [Average]
[info]   (min, avg, max) = (934.125, 945.220, 970.558), stdev = 15.399
[info]   CI (99.9%): [885.924, 1004.516] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.033 ±(99.9%) 0.209 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.125), stdev = 0.054
[info]   CI (99.9%): [≈ 0, 0.242] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.037 ±(99.9%) 0.231 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.138), stdev = 0.060
[info]   CI (99.9%): [≈ 0, 0.267] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   807.467 ±(99.9%) 1158.357 MB/sec [Average]
[info]   (min, avg, max) = (672.677, 807.467, 1345.592), stdev = 300.822
[info]   CI (99.9%): [≈ 0, 1965.823] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   874.054 ±(99.9%) 1315.518 B/op [Average]
[info]   (min, avg, max) = (716.500, 874.054, 1485.167), stdev = 341.636
[info]   CI (99.9%): [≈ 0, 2189.572] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScala:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 0.707
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 56.02% complete, ETA 00:59:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1209720.654 ops/s
[info] # Warmup Iteration   2: 1621658.168 ops/s
[info] # Warmup Iteration   3: 1632111.363 ops/s
[info] # Warmup Iteration   4: 1629677.169 ops/s
[info] # Warmup Iteration   5: 1630052.302 ops/s
[info] Iteration   1: 1632389.229 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1631760.771 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1631648.766 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1632006.856 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1630780.213 ops/s
[info]                  ·gc.alloc.rate:      0.059 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.057 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc":
[info]   1631717.167 ±(99.9%) 2294.327 ops/s [Average]
[info]   (min, avg, max) = (1630780.213, 1631717.167, 1632389.229), stdev = 595.829
[info]   CI (99.9%): [1629422.840, 1634011.493] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.012 ±(99.9%) 0.101 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.012, 0.059), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.114] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.012 ±(99.9%) 0.098 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.012, 0.057), stdev = 0.025
[info]   CI (99.9%): [≈ 0, 0.110] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 56.22% complete, ETA 00:59:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 68677.906 ops/s
[info] # Warmup Iteration   2: 216411.661 ops/s
[info] # Warmup Iteration   3: 222507.041 ops/s
[info] # Warmup Iteration   4: 215205.081 ops/s
[info] # Warmup Iteration   5: 219576.268 ops/s
[info] Iteration   1: 220399.930 ops/s
[info]                  ·gc.alloc.rate:                   1462.010 MB/sec
[info]                  ·gc.alloc.rate.norm:              10438.120 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.149 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.163 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9632.444 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 215738.757 ops/s
[info]                  ·gc.alloc.rate:                   1428.199 MB/sec
[info]                  ·gc.alloc.rate.norm:              10416.564 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.456 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.242 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9847.986 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 217592.348 ops/s
[info]                  ·gc.alloc.rate:                   1455.276 MB/sec
[info]                  ·gc.alloc.rate.norm:              10526.424 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.301 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.858 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9771.137 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 224924.412 ops/s
[info]                  ·gc.alloc.rate:                   1481.610 MB/sec
[info]                  ·gc.alloc.rate.norm:              10367.968 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.291 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1351.811 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9459.669 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 224738.607 ops/s
[info]                  ·gc.alloc.rate:                   1493.505 MB/sec
[info]                  ·gc.alloc.rate.norm:              10461.131 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1352.621 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9474.326 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson":
[info]   220678.811 ±(99.9%) 15936.646 ops/s [Average]
[info]   (min, avg, max) = (215738.757, 220678.811, 224924.412), stdev = 4138.696
[info]   CI (99.9%): [204742.165, 236615.457] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1464.120 ±(99.9%) 97.078 MB/sec [Average]
[info]   (min, avg, max) = (1428.199, 1464.120, 1493.505), stdev = 25.211
[info]   CI (99.9%): [1367.042, 1561.197] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   10442.041 ±(99.9%) 224.827 B/op [Average]
[info]   (min, avg, max) = (10367.968, 10442.041, 10526.424), stdev = 58.387
[info]   CI (99.9%): [10217.214, 10666.869] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   0.033 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   0.239 ±(99.9%) 0.664 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.239, 0.456), stdev = 0.172
[info]   CI (99.9%): [≈ 0, 0.903] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   1350.939 ±(99.9%) 5.179 MB/sec [Average]
[info]   (min, avg, max) = (1349.163, 1350.939, 1352.621), stdev = 1.345
[info]   CI (99.9%): [1345.760, 1356.118] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   9637.112 ±(99.9%) 668.166 B/op [Average]
[info]   (min, avg, max) = (9459.669, 9637.112, 9847.986), stdev = 173.521
[info]   CI (99.9%): [8968.946, 10305.279] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writePlayJson:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 56.43% complete, ETA 00:59:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 42580.585 ops/s
[info] # Warmup Iteration   2: 55717.082 ops/s
[info] # Warmup Iteration   3: 56772.445 ops/s
[info] # Warmup Iteration   4: 57984.881 ops/s
[info] # Warmup Iteration   5: 58169.622 ops/s
[info] Iteration   1: 58373.202 ops/s
[info]                  ·gc.alloc.rate:      390.479 MB/sec
[info]                  ·gc.alloc.rate.norm: 10528.007 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 58127.247 ops/s
[info]                  ·gc.alloc.rate:                   401.544 MB/sec
[info]                  ·gc.alloc.rate.norm:              10873.810 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.364 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 18234.693 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 58503.854 ops/s
[info]                  ·gc.alloc.rate:      391.287 MB/sec
[info]                  ·gc.alloc.rate.norm: 10528.007 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 58164.681 ops/s
[info]                  ·gc.alloc.rate:                   406.616 MB/sec
[info]                  ·gc.alloc.rate.norm:              11003.703 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3.008 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     81.394 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.391 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 18223.095 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 58422.002 ops/s
[info]                  ·gc.alloc.rate:      390.753 MB/sec
[info]                  ·gc.alloc.rate.norm: 10528.007 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeUPickle":
[info]   58318.197 ±(99.9%) 633.600 ops/s [Average]
[info]   (min, avg, max) = (58127.247, 58318.197, 58503.854), stdev = 164.544
[info]   CI (99.9%): [57684.597, 58951.797] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeUPickle:·gc.alloc.rate":
[info]   396.136 ±(99.9%) 28.787 MB/sec [Average]
[info]   (min, avg, max) = (390.479, 396.136, 406.616), stdev = 7.476
[info]   CI (99.9%): [367.348, 424.923] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeUPickle:·gc.alloc.rate.norm":
[info]   10692.307 ±(99.9%) 884.170 B/op [Average]
[info]   (min, avg, max) = (10528.007, 10692.307, 11003.703), stdev = 229.616
[info]   CI (99.9%): [9808.137, 11576.476] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space":
[info]   0.602 ±(99.9%) 5.179 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.602, 3.008), stdev = 1.345
[info]   CI (99.9%): [≈ 0, 5.781] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   16.279 ±(99.9%) 140.165 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 16.279, 81.394), stdev = 36.400
[info]   CI (99.9%): [≈ 0, 156.444] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space":
[info]   269.351 ±(99.9%) 1420.210 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 269.351, 673.391), stdev = 368.824
[info]   CI (99.9%): [≈ 0, 1689.561] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   7291.558 ±(99.9%) 38446.282 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 7291.558, 18234.693), stdev = 9984.377
[info]   CI (99.9%): [≈ 0, 45737.839] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeUPickle:·gc.count":
[info]   2.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.000), stdev = 0.548
[info]   CI (99.9%): [2.000, 2.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfYearsBenchmark.writeUPickle:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 3.000), stdev = 1.643
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 56.63% complete, ETA 00:58:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 27183.785 ops/s
[info] # Warmup Iteration   2: 57392.252 ops/s
[info] # Warmup Iteration   3: 57629.750 ops/s
[info] # Warmup Iteration   4: 58869.104 ops/s
[info] # Warmup Iteration   5: 59027.703 ops/s
[info] Iteration   1: 59207.481 ops/s
[info]                  ·gc.alloc.rate:                   1165.596 MB/sec
[info]                  ·gc.alloc.rate.norm:              30993.554 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.553 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1344.185 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 35742.281 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 58953.076 ops/s
[info]                  ·gc.alloc.rate:                   1166.010 MB/sec
[info]                  ·gc.alloc.rate.norm:              31119.027 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.555 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1344.709 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 35888.233 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 59082.484 ops/s
[info]                  ·gc.alloc.rate:                   1144.425 MB/sec
[info]                  ·gc.alloc.rate.norm:              30491.679 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.998 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17931.125 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 58889.738 ops/s
[info]                  ·gc.alloc.rate:                   1154.216 MB/sec
[info]                  ·gc.alloc.rate.norm:              30844.563 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.353 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 36032.561 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 59237.122 ops/s
[info]                  ·gc.alloc.rate:                   1159.571 MB/sec
[info]                  ·gc.alloc.rate.norm:              30807.716 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3.318 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.618 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 35856.921 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce":
[info]   59073.980 ±(99.9%) 587.375 ops/s [Average]
[info]   (min, avg, max) = (58889.738, 59073.980, 59237.122), stdev = 152.539
[info]   CI (99.9%): [58486.605, 59661.355] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:·gc.alloc.rate":
[info]   1157.963 ±(99.9%) 34.598 MB/sec [Average]
[info]   (min, avg, max) = (1144.425, 1157.963, 1166.010), stdev = 8.985
[info]   CI (99.9%): [1123.365, 1192.562] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   30851.308 ±(99.9%) 909.572 B/op [Average]
[info]   (min, avg, max) = (30491.679, 30851.308, 31119.027), stdev = 236.213
[info]   CI (99.9%): [29941.736, 31760.879] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   0.033 ±(99.9%) 0.201 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.125), stdev = 0.052
[info]   CI (99.9%): [≈ 0, 0.235] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.885 ±(99.9%) 5.345 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.885, 3.318), stdev = 1.388
[info]   CI (99.9%): [≈ 0, 6.230] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1211.972 ±(99.9%) 1160.218 MB/sec [Average]
[info]   (min, avg, max) = (672.998, 1211.972, 1349.618), stdev = 301.305
[info]   CI (99.9%): [51.754, 2372.191] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   32290.224 ±(99.9%) 30911.612 B/op [Average]
[info]   (min, avg, max) = (17931.125, 32290.224, 36032.561), stdev = 8027.647
[info]   CI (99.9%): [1378.612, 63201.836] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readCirce:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 56.83% complete, ETA 00:58:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 19170.807 ops/s
[info] # Warmup Iteration   2: 55009.419 ops/s
[info] # Warmup Iteration   3: 54293.144 ops/s
[info] # Warmup Iteration   4: 58487.532 ops/s
[info] # Warmup Iteration   5: 57776.030 ops/s
[info] Iteration   1: 57884.688 ops/s
[info]                  ·gc.alloc.rate:                   690.755 MB/sec
[info]                  ·gc.alloc.rate.norm:              18786.807 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.566 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.257 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 18310.913 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 57975.390 ops/s
[info]                  ·gc.alloc.rate:                   688.901 MB/sec
[info]                  ·gc.alloc.rate.norm:              18703.781 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.396 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 18282.808 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 58609.693 ops/s
[info]                  ·gc.alloc.rate:                   692.514 MB/sec
[info]                  ·gc.alloc.rate.norm:              18598.112 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.387 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 18084.448 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 58578.445 ops/s
[info]                  ·gc.alloc.rate:                   695.472 MB/sec
[info]                  ·gc.alloc.rate.norm:              18687.180 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.119 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.408 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 18094.325 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 58681.723 ops/s
[info]                  ·gc.alloc.rate:                   702.023 MB/sec
[info]                  ·gc.alloc.rate.norm:              18832.626 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.639 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 18071.196 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala":
[info]   58345.988 ±(99.9%) 1474.393 ops/s [Average]
[info]   (min, avg, max) = (57884.688, 58345.988, 58681.723), stdev = 382.895
[info]   CI (99.9%): [56871.595, 59820.380] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   693.933 ±(99.9%) 19.752 MB/sec [Average]
[info]   (min, avg, max) = (688.901, 693.933, 702.023), stdev = 5.129
[info]   CI (99.9%): [674.181, 713.685] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   18721.701 ±(99.9%) 351.498 B/op [Average]
[info]   (min, avg, max) = (18598.112, 18721.701, 18832.626), stdev = 91.283
[info]   CI (99.9%): [18370.204, 19073.199] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.012 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.337 ±(99.9%) 1.929 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.337, 1.119), stdev = 0.501
[info]   CI (99.9%): [≈ 0, 2.266] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   673.417 ±(99.9%) 0.531 MB/sec [Average]
[info]   (min, avg, max) = (673.257, 673.417, 673.639), stdev = 0.138
[info]   CI (99.9%): [672.886, 673.949] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   18168.738 ±(99.9%) 453.095 B/op [Average]
[info]   (min, avg, max) = (18071.196, 18168.738, 18310.913), stdev = 117.667
[info]   CI (99.9%): [17715.643, 18621.833] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 57.03% complete, ETA 00:58:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 49048.781 ops/s
[info] # Warmup Iteration   2: 66630.950 ops/s
[info] # Warmup Iteration   3: 67300.528 ops/s
[info] # Warmup Iteration   4: 69223.254 ops/s
[info] # Warmup Iteration   5: 68473.822 ops/s
[info] Iteration   1: 68466.883 ops/s
[info]                  ·gc.alloc.rate:                   757.270 MB/sec
[info]                  ·gc.alloc.rate.norm:              17411.422 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.000 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15450.861 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 68618.944 ops/s
[info]                  ·gc.alloc.rate:                   759.217 MB/sec
[info]                  ·gc.alloc.rate.norm:              17416.346 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.016 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15415.966 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 68291.958 ops/s
[info]                  ·gc.alloc.rate:                   757.192 MB/sec
[info]                  ·gc.alloc.rate.norm:              17453.175 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      671.335 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15474.191 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 68607.526 ops/s
[info]                  ·gc.alloc.rate:                   769.631 MB/sec
[info]                  ·gc.alloc.rate.norm:              17656.578 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.478 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      671.397 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15402.932 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 68134.068 ops/s
[info]                  ·gc.alloc.rate:                   778.972 MB/sec
[info]                  ·gc.alloc.rate.norm:              17995.573 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.962 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1342.137 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 31005.659 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala":
[info]   68423.876 ±(99.9%) 805.465 ops/s [Average]
[info]   (min, avg, max) = (68134.068, 68423.876, 68618.944), stdev = 209.177
[info]   CI (99.9%): [67618.411, 69229.341] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   764.457 ±(99.9%) 37.001 MB/sec [Average]
[info]   (min, avg, max) = (757.192, 764.457, 778.972), stdev = 9.609
[info]   CI (99.9%): [727.456, 801.457] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   17586.619 ±(99.9%) 961.951 B/op [Average]
[info]   (min, avg, max) = (17411.422, 17586.619, 17995.573), stdev = 249.816
[info]   CI (99.9%): [16624.667, 18548.570] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.012 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.288 ±(99.9%) 1.655 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.288, 0.962), stdev = 0.430
[info]   CI (99.9%): [≈ 0, 1.943] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   805.777 ±(99.9%) 1154.556 MB/sec [Average]
[info]   (min, avg, max) = (671.335, 805.777, 1342.137), stdev = 299.834
[info]   CI (99.9%): [≈ 0, 1960.333] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   18549.922 ±(99.9%) 26812.133 B/op [Average]
[info]   (min, avg, max) = (15402.932, 18549.922, 31005.659), stdev = 6963.026
[info]   CI (99.9%): [≈ 0, 45362.055] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 57.23% complete, ETA 00:57:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 11653.336 ops/s
[info] # Warmup Iteration   2: 34472.885 ops/s
[info] # Warmup Iteration   3: 36317.765 ops/s
[info] # Warmup Iteration   4: 36085.303 ops/s
[info] # Warmup Iteration   5: 36613.910 ops/s
[info] Iteration   1: 36687.343 ops/s
[info]                  ·gc.alloc.rate:                   1655.062 MB/sec
[info]                  ·gc.alloc.rate.norm:              71012.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.679 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1347.988 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 57836.703 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 36564.997 ops/s
[info]                  ·gc.alloc.rate:                   1670.825 MB/sec
[info]                  ·gc.alloc.rate.norm:              71926.635 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3.584 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2024.336 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 87144.799 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 36344.093 ops/s
[info]                  ·gc.alloc.rate:                   1658.487 MB/sec
[info]                  ·gc.alloc.rate.norm:              71823.694 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.803 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.778 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 58497.803 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 36358.517 ops/s
[info]                  ·gc.alloc.rate:                   1659.050 MB/sec
[info]                  ·gc.alloc.rate.norm:              71830.419 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3.604 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2028.271 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 87816.258 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 36400.865 ops/s
[info]                  ·gc.alloc.rate:                   1648.085 MB/sec
[info]                  ·gc.alloc.rate.norm:              71235.281 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3.600 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1354.014 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 58524.636 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson":
[info]   36471.163 ±(99.9%) 575.399 ops/s [Average]
[info]   (min, avg, max) = (36344.093, 36471.163, 36687.343), stdev = 149.429
[info]   CI (99.9%): [35895.764, 37046.562] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1658.302 ±(99.9%) 31.771 MB/sec [Average]
[info]   (min, avg, max) = (1648.085, 1658.302, 1670.825), stdev = 8.251
[info]   CI (99.9%): [1626.531, 1690.073] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   71565.607 ±(99.9%) 1590.772 B/op [Average]
[info]   (min, avg, max) = (71012.004, 71565.607, 71926.635), stdev = 413.119
[info]   CI (99.9%): [69974.834, 73156.379] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   0.071 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.071, 0.083), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   3.054 ±(99.9%) 3.097 B/op [Average]
[info]   (min, avg, max) = (1.803, 3.054, 3.604), stdev = 0.804
[info]   CI (99.9%): [≈ 0, 6.151] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   1621.077 ±(99.9%) 1424.461 MB/sec [Average]
[info]   (min, avg, max) = (1347.988, 1621.077, 2028.271), stdev = 369.928
[info]   CI (99.9%): [196.617, 3045.538] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   69964.040 ±(99.9%) 61588.850 B/op [Average]
[info]   (min, avg, max) = (57836.703, 69964.040, 87816.258), stdev = 15994.429
[info]   CI (99.9%): [8375.189, 131552.890] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readPlayJson:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 57.43% complete, ETA 00:57:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 29264.933 ops/s
[info] # Warmup Iteration   2: 64155.300 ops/s
[info] # Warmup Iteration   3: 64814.333 ops/s
[info] # Warmup Iteration   4: 65441.796 ops/s
[info] # Warmup Iteration   5: 65352.570 ops/s
[info] Iteration   1: 65063.239 ops/s
[info]                  ·gc.alloc.rate:                   922.146 MB/sec
[info]                  ·gc.alloc.rate.norm:              22310.469 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.007 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1343.391 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 32502.118 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 65920.607 ops/s
[info]                  ·gc.alloc.rate:                   891.830 MB/sec
[info]                  ·gc.alloc.rate.norm:              21295.290 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.057 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16047.523 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 65585.903 ops/s
[info]                  ·gc.alloc.rate:                   895.725 MB/sec
[info]                  ·gc.alloc.rate.norm:              21488.076 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.020 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16145.465 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 64833.338 ops/s
[info]                  ·gc.alloc.rate:                   881.565 MB/sec
[info]                  ·gc.alloc.rate.norm:              21402.077 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.505 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.744 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16332.456 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 65672.064 ops/s
[info]                  ·gc.alloc.rate:                   906.568 MB/sec
[info]                  ·gc.alloc.rate.norm:              21724.463 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.995 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1346.996 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 32278.613 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readUPickle":
[info]   65415.030 ±(99.9%) 1735.990 ops/s [Average]
[info]   (min, avg, max) = (64833.338, 65415.030, 65920.607), stdev = 450.831
[info]   CI (99.9%): [63679.040, 67151.020] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readUPickle:·gc.alloc.rate":
[info]   899.567 ±(99.9%) 59.576 MB/sec [Average]
[info]   (min, avg, max) = (881.565, 899.567, 922.146), stdev = 15.472
[info]   CI (99.9%): [839.990, 959.143] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readUPickle:·gc.alloc.rate.norm":
[info]   21644.075 ±(99.9%) 1558.314 B/op [Average]
[info]   (min, avg, max) = (21295.290, 21644.075, 22310.469), stdev = 404.689
[info]   CI (99.9%): [20085.761, 23202.389] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readUPickle:·gc.churn.PS_Eden_Space":
[info]   0.029 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.083), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   0.702 ±(99.9%) 3.216 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.702, 1.995), stdev = 0.835
[info]   CI (99.9%): [≈ 0, 3.918] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space":
[info]   941.642 ±(99.9%) 1418.551 MB/sec [Average]
[info]   (min, avg, max) = (672.057, 941.642, 1346.996), stdev = 368.393
[info]   CI (99.9%): [≈ 0, 2360.193] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   22661.235 ±(99.9%) 34202.889 B/op [Average]
[info]   (min, avg, max) = (16047.523, 22661.235, 32502.118), stdev = 8882.382
[info]   CI (99.9%): [≈ 0, 56864.124] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readUPickle:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.readUPickle:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 57.63% complete, ETA 00:57:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 61468.098 ops/s
[info] # Warmup Iteration   2: 108834.551 ops/s
[info] # Warmup Iteration   3: 114279.379 ops/s
[info] # Warmup Iteration   4: 115505.436 ops/s
[info] # Warmup Iteration   5: 115383.973 ops/s
[info] Iteration   1: 114707.690 ops/s
[info]                  ·gc.alloc.rate:                   527.640 MB/sec
[info]                  ·gc.alloc.rate.norm:              7241.218 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.791 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10.853 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.281 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9239.964 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 114832.371 ops/s
[info]                  ·gc.alloc.rate:      509.947 MB/sec
[info]                  ·gc.alloc.rate.norm: 6989.930 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 115232.963 ops/s
[info]                  ·gc.alloc.rate:                   528.317 MB/sec
[info]                  ·gc.alloc.rate.norm:              7214.480 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.222 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9206.893 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 114950.244 ops/s
[info]                  ·gc.alloc.rate:                   524.189 MB/sec
[info]                  ·gc.alloc.rate.norm:              7177.415 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.075 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9229.716 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 115888.273 ops/s
[info]                  ·gc.alloc.rate:                   526.083 MB/sec
[info]                  ·gc.alloc.rate.norm:              7145.505 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.848 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.044 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9155.183 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce":
[info]   115122.308 ±(99.9%) 1810.749 ops/s [Average]
[info]   (min, avg, max) = (114707.690, 115122.308, 115888.273), stdev = 470.246
[info]   CI (99.9%): [113311.559, 116933.057] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:·gc.alloc.rate":
[info]   523.235 ±(99.9%) 29.252 MB/sec [Average]
[info]   (min, avg, max) = (509.947, 523.235, 528.317), stdev = 7.597
[info]   CI (99.9%): [493.984, 552.487] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   7153.710 ±(99.9%) 379.263 B/op [Average]
[info]   (min, avg, max) = (6989.930, 7153.710, 7241.218), stdev = 98.493
[info]   CI (99.9%): [6774.447, 7532.972] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   0.171 ±(99.9%) 1.339 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.171, 0.791), stdev = 0.348
[info]   CI (99.9%): [≈ 0, 1.510] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   2.340 ±(99.9%) 18.379 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.340, 10.853), stdev = 4.773
[info]   CI (99.9%): [≈ 0, 20.719] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   539.124 ±(99.9%) 1160.507 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 539.124, 674.222), stdev = 301.380
[info]   CI (99.9%): [≈ 0, 1699.631] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   7366.351 ±(99.9%) 15857.127 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 7366.351, 9239.964), stdev = 4118.046
[info]   CI (99.9%): [≈ 0, 23223.479] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeCirce:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 0.707
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 57.83% complete, ETA 00:57:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 130003.599 ops/s
[info] # Warmup Iteration   2: 217945.937 ops/s
[info] # Warmup Iteration   3: 234545.719 ops/s
[info] # Warmup Iteration   4: 233400.035 ops/s
[info] # Warmup Iteration   5: 229957.896 ops/s
[info] Iteration   1: 234264.319 ops/s
[info]                  ·gc.alloc.rate:      348.120 MB/sec
[info]                  ·gc.alloc.rate.norm: 2339.312 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 233336.039 ops/s
[info]                  ·gc.alloc.rate:                   366.952 MB/sec
[info]                  ·gc.alloc.rate.norm:              2475.290 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.411 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4542.519 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 241243.617 ops/s
[info]                  ·gc.alloc.rate:      358.007 MB/sec
[info]                  ·gc.alloc.rate.norm: 2336.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 237165.801 ops/s
[info]                  ·gc.alloc.rate:                   367.400 MB/sec
[info]                  ·gc.alloc.rate.norm:              2438.431 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.833 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5.526 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.376 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4469.192 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 238677.953 ops/s
[info]                  ·gc.alloc.rate:      354.266 MB/sec
[info]                  ·gc.alloc.rate.norm: 2336.046 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala":
[info]   236937.546 ±(99.9%) 12438.885 ops/s [Average]
[info]   (min, avg, max) = (233336.039, 236937.546, 241243.617), stdev = 3230.339
[info]   CI (99.9%): [224498.661, 249376.430] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   358.949 ±(99.9%) 31.960 MB/sec [Average]
[info]   (min, avg, max) = (348.120, 358.949, 367.400), stdev = 8.300
[info]   CI (99.9%): [326.989, 390.909] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   2385.016 ±(99.9%) 257.532 B/op [Average]
[info]   (min, avg, max) = (2336.002, 2385.016, 2475.290), stdev = 66.880
[info]   CI (99.9%): [2127.484, 2642.548] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.167 ±(99.9%) 1.434 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.167, 0.833), stdev = 0.372
[info]   CI (99.9%): [≈ 0, 1.600] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1.105 ±(99.9%) 9.516 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.105, 5.526), stdev = 2.471
[info]   CI (99.9%): [≈ 0, 10.621] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   269.357 ±(99.9%) 1420.244 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 269.357, 673.411), stdev = 368.833
[info]   CI (99.9%): [≈ 0, 1689.602] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1802.342 ±(99.9%) 9503.755 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1802.342, 4542.519), stdev = 2468.095
[info]   CI (99.9%): [≈ 0, 11306.097] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.count":
[info]   2.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.000), stdev = 0.548
[info]   CI (99.9%): [2.000, 2.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.time":
[info]   3.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 2.000), stdev = 0.894
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 58.03% complete, ETA 00:56:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 534242.783 ops/s
[info] # Warmup Iteration   2: 665610.092 ops/s
[info] # Warmup Iteration   3: 707934.224 ops/s
[info] # Warmup Iteration   4: 743369.877 ops/s
[info] # Warmup Iteration   5: 741915.599 ops/s
[info] Iteration   1: 740253.200 ops/s
[info]                  ·gc.alloc.rate:                   962.278 MB/sec
[info]                  ·gc.alloc.rate.norm:              2046.103 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.266 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1344.860 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2859.590 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 742846.609 ops/s
[info]                  ·gc.alloc.rate:                   945.188 MB/sec
[info]                  ·gc.alloc.rate.norm:              2002.600 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.787 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1425.455 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 743732.836 ops/s
[info]                  ·gc.alloc.rate:                   942.757 MB/sec
[info]                  ·gc.alloc.rate.norm:              1994.932 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.044 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.165 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1424.458 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 741064.864 ops/s
[info]                  ·gc.alloc.rate:                   953.159 MB/sec
[info]                  ·gc.alloc.rate.norm:              2024.380 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.088 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1346.875 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2860.578 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 739861.154 ops/s
[info]                  ·gc.alloc.rate:                   933.875 MB/sec
[info]                  ·gc.alloc.rate.norm:              1987.034 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.600 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1433.240 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala":
[info]   741551.733 ±(99.9%) 6447.730 ops/s [Average]
[info]   (min, avg, max) = (739861.154, 741551.733, 743732.836), stdev = 1674.455
[info]   CI (99.9%): [735104.002, 747999.463] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   947.451 ±(99.9%) 41.468 MB/sec [Average]
[info]   (min, avg, max) = (933.875, 947.451, 962.278), stdev = 10.769
[info]   CI (99.9%): [905.984, 988.919] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   2011.010 ±(99.9%) 92.622 B/op [Average]
[info]   (min, avg, max) = (1987.034, 2011.010, 2046.103), stdev = 24.054
[info]   CI (99.9%): [1918.388, 2103.631] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.037 ±(99.9%) 0.200 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.125), stdev = 0.052
[info]   CI (99.9%): [≈ 0, 0.237] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.080 ±(99.9%) 0.424 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.080, 0.266), stdev = 0.110
[info]   CI (99.9%): [≈ 0, 0.504] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   942.257 ±(99.9%) 1418.750 MB/sec [Average]
[info]   (min, avg, max) = (672.787, 942.257, 1346.875), stdev = 368.445
[info]   CI (99.9%): [≈ 0, 2361.007] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2000.664 ±(99.9%) 3021.011 B/op [Average]
[info]   (min, avg, max) = (1424.458, 2000.664, 2860.578), stdev = 784.547
[info]   CI (99.9%): [≈ 0, 5021.676] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 58.23% complete, ETA 00:56:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 602087.609 ops/s
[info] # Warmup Iteration   2: 731852.530 ops/s
[info] # Warmup Iteration   3: 751285.732 ops/s
[info] # Warmup Iteration   4: 755127.027 ops/s
[info] # Warmup Iteration   5: 759311.082 ops/s
[info] Iteration   1: 762814.006 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 758850.272 ops/s
[info]                  ·gc.alloc.rate:      0.964 MB/sec
[info]                  ·gc.alloc.rate.norm: 1.999 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 761033.977 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 758786.711 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 760731.492 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc":
[info]   760443.292 ±(99.9%) 6481.855 ops/s [Average]
[info]   (min, avg, max) = (758786.711, 760443.292, 762814.006), stdev = 1683.317
[info]   CI (99.9%): [753961.437, 766925.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.193 ±(99.9%) 1.660 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.193, 0.964), stdev = 0.431
[info]   CI (99.9%): [≈ 0, 1.853] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.400 ±(99.9%) 3.442 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.400, 1.999), stdev = 0.894
[info]   CI (99.9%): [≈ 0, 3.842] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 58.43% complete, ETA 00:56:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 98143.730 ops/s
[info] # Warmup Iteration   2: 172479.251 ops/s
[info] # Warmup Iteration   3: 182690.653 ops/s
[info] # Warmup Iteration   4: 180023.856 ops/s
[info] # Warmup Iteration   5: 186781.510 ops/s
[info] Iteration   1: 184878.108 ops/s
[info]                  ·gc.alloc.rate:                   613.091 MB/sec
[info]                  ·gc.alloc.rate.norm:              5220.184 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.957 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8.152 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.989 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5730.187 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 186325.382 ops/s
[info]                  ·gc.alloc.rate:                   622.802 MB/sec
[info]                  ·gc.alloc.rate.norm:              5261.247 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.352 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.382 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5688.538 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 186163.660 ops/s
[info]                  ·gc.alloc.rate:                   624.651 MB/sec
[info]                  ·gc.alloc.rate.norm:              5281.690 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.353 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5693.488 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 186741.072 ops/s
[info]                  ·gc.alloc.rate:                   616.844 MB/sec
[info]                  ·gc.alloc.rate.norm:              5199.489 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.351 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.364 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5675.899 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 185182.696 ops/s
[info]                  ·gc.alloc.rate:                   613.765 MB/sec
[info]                  ·gc.alloc.rate.norm:              5217.260 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.365 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5723.891 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson":
[info]   185858.184 ±(99.9%) 3049.016 ops/s [Average]
[info]   (min, avg, max) = (184878.108, 185858.184, 186741.072), stdev = 791.820
[info]   CI (99.9%): [182809.168, 188907.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   618.231 ±(99.9%) 20.229 MB/sec [Average]
[info]   (min, avg, max) = (613.091, 618.231, 624.651), stdev = 5.253
[info]   CI (99.9%): [598.001, 638.460] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   5235.974 ±(99.9%) 131.422 B/op [Average]
[info]   (min, avg, max) = (5199.489, 5235.974, 5281.690), stdev = 34.130
[info]   CI (99.9%): [5104.552, 5367.396] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   0.208 ±(99.9%) 1.615 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.208, 0.957), stdev = 0.419
[info]   CI (99.9%): [≈ 0, 1.823] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   1.771 ±(99.9%) 13.752 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.771, 8.152), stdev = 3.571
[info]   CI (99.9%): [≈ 0, 15.522] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   673.291 ±(99.9%) 0.650 MB/sec [Average]
[info]   (min, avg, max) = (672.989, 673.291, 673.382), stdev = 0.169
[info]   CI (99.9%): [672.641, 673.941] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   5702.401 ±(99.9%) 90.466 B/op [Average]
[info]   (min, avg, max) = (5675.899, 5702.401, 5730.187), stdev = 23.494
[info]   CI (99.9%): [5611.934, 5792.867] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writePlayJson:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 0.707
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 58.63% complete, ETA 00:56:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 23579.980 ops/s
[info] # Warmup Iteration   2: 30009.276 ops/s
[info] # Warmup Iteration   3: 29586.806 ops/s
[info] # Warmup Iteration   4: 29665.812 ops/s
[info] # Warmup Iteration   5: 30046.590 ops/s
[info] Iteration   1: 29752.135 ops/s
[info]                  ·gc.alloc.rate:                   183.268 MB/sec
[info]                  ·gc.alloc.rate.norm:              9696.202 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      511.513 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 27062.754 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 30109.981 ops/s
[info]                  ·gc.alloc.rate:      167.889 MB/sec
[info]                  ·gc.alloc.rate.norm: 8776.909 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 29884.760 ops/s
[info]                  ·gc.alloc.rate:      169.161 MB/sec
[info]                  ·gc.alloc.rate.norm: 8908.813 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 28465.337 ops/s
[info]                  ·gc.alloc.rate:                   170.813 MB/sec
[info]                  ·gc.alloc.rate.norm:              9445.322 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      511.538 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 28286.139 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 29944.086 ops/s
[info]                  ·gc.alloc.rate:      166.809 MB/sec
[info]                  ·gc.alloc.rate.norm: 8768.014 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeUPickle":
[info]   29631.260 ±(99.9%) 2558.059 ops/s [Average]
[info]   (min, avg, max) = (28465.337, 29631.260, 30109.981), stdev = 664.320
[info]   CI (99.9%): [27073.201, 32189.318] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeUPickle:·gc.alloc.rate":
[info]   171.588 ±(99.9%) 25.790 MB/sec [Average]
[info]   (min, avg, max) = (166.809, 171.588, 183.268), stdev = 6.698
[info]   CI (99.9%): [145.798, 197.378] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeUPickle:·gc.alloc.rate.norm":
[info]   9119.052 ±(99.9%) 1638.272 B/op [Average]
[info]   (min, avg, max) = (8768.014, 9119.052, 9696.202), stdev = 425.454
[info]   CI (99.9%): [7480.780, 10757.324] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space":
[info]   204.610 ±(99.9%) 1078.850 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 204.610, 511.538), stdev = 280.174
[info]   CI (99.9%): [≈ 0, 1283.460] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   11069.779 ±(99.9%) 58391.505 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 11069.779, 28286.139), stdev = 15164.088
[info]   CI (99.9%): [≈ 0, 69461.283] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeUPickle:·gc.count":
[info]   2.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.000), stdev = 0.548
[info]   CI (99.9%): [2.000, 2.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneIdsBenchmark.writeUPickle:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 3.000), stdev = 1.414
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 58.84% complete, ETA 00:55:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 41893.866 ops/s
[info] # Warmup Iteration   2: 112452.828 ops/s
[info] # Warmup Iteration   3: 113075.360 ops/s
[info] # Warmup Iteration   4: 115357.641 ops/s
[info] # Warmup Iteration   5: 117257.610 ops/s
[info] Iteration   1: 117186.545 ops/s
[info]                  ·gc.alloc.rate:                   1335.335 MB/sec
[info]                  ·gc.alloc.rate.norm:              17938.595 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.224 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 18125.170 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 116044.251 ops/s
[info]                  ·gc.alloc.rate:                   1320.273 MB/sec
[info]                  ·gc.alloc.rate.norm:              17910.520 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.620 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 18322.208 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 117621.824 ops/s
[info]                  ·gc.alloc.rate:                   1334.575 MB/sec
[info]                  ·gc.alloc.rate.norm:              17851.173 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.836 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1352.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 18085.351 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 113524.581 ops/s
[info]                  ·gc.alloc.rate:                   1287.781 MB/sec
[info]                  ·gc.alloc.rate.norm:              17854.397 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      676.396 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9377.869 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   5: 115448.125 ops/s
[info]                  ·gc.alloc.rate:                   1310.280 MB/sec
[info]                  ·gc.alloc.rate.norm:              17865.604 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.568 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1353.082 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 18449.205 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce":
[info]   115965.065 ±(99.9%) 6228.743 ops/s [Average]
[info]   (min, avg, max) = (113524.581, 115965.065, 117621.824), stdev = 1617.585
[info]   CI (99.9%): [109736.322, 122193.808] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:·gc.alloc.rate":
[info]   1317.649 ±(99.9%) 75.862 MB/sec [Average]
[info]   (min, avg, max) = (1287.781, 1317.649, 1335.335), stdev = 19.701
[info]   CI (99.9%): [1241.787, 1393.512] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   17884.058 ±(99.9%) 148.839 B/op [Average]
[info]   (min, avg, max) = (17851.173, 17884.058, 17938.595), stdev = 38.653
[info]   CI (99.9%): [17735.219, 18032.897] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   0.021 ±(99.9%) 0.113 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.062), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.281 ±(99.9%) 1.524 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.281, 0.836), stdev = 0.396
[info]   CI (99.9%): [≈ 0, 1.805] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1216.281 ±(99.9%) 1162.157 MB/sec [Average]
[info]   (min, avg, max) = (676.396, 1216.281, 1353.082), stdev = 301.808
[info]   CI (99.9%): [54.124, 2378.438] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   16471.961 ±(99.9%) 15281.184 B/op [Average]
[info]   (min, avg, max) = (9377.869, 16471.961, 18449.205), stdev = 3968.475
[info]   CI (99.9%): [1190.777, 31753.145] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readCirce:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.800, 3.000), stdev = 1.095
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 59.04% complete, ETA 00:55:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 47169.036 ops/s
[info] # Warmup Iteration   2: 150898.032 ops/s
[info] # Warmup Iteration   3: 153635.293 ops/s
[info] # Warmup Iteration   4: 154565.337 ops/s
[info] # Warmup Iteration   5: 155110.163 ops/s
[info] Iteration   1: 155210.321 ops/s
[info]                  ·gc.alloc.rate:                   834.948 MB/sec
[info]                  ·gc.alloc.rate.norm:              8467.185 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.754 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6842.665 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 155706.560 ops/s
[info]                  ·gc.alloc.rate:                   836.989 MB/sec
[info]                  ·gc.alloc.rate.norm:              8459.854 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.210 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.085 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6813.307 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 155198.576 ops/s
[info]                  ·gc.alloc.rate:                   838.339 MB/sec
[info]                  ·gc.alloc.rate.norm:              8502.271 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.068 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6836.263 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 155034.816 ops/s
[info]                  ·gc.alloc.rate:                   865.136 MB/sec
[info]                  ·gc.alloc.rate.norm:              8783.313 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.634 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.434 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13700.158 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 155214.060 ops/s
[info]                  ·gc.alloc.rate:                   838.059 MB/sec
[info]                  ·gc.alloc.rate.norm:              8499.568 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.671 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6842.489 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala":
[info]   155272.866 ±(99.9%) 977.273 ops/s [Average]
[info]   (min, avg, max) = (155034.816, 155272.866, 155706.560), stdev = 253.795
[info]   CI (99.9%): [154295.593, 156250.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   842.694 ±(99.9%) 48.580 MB/sec [Average]
[info]   (min, avg, max) = (834.948, 842.694, 865.136), stdev = 12.616
[info]   CI (99.9%): [794.114, 891.274] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   8542.438 ±(99.9%) 523.586 B/op [Average]
[info]   (min, avg, max) = (8459.854, 8542.438, 8783.313), stdev = 135.974
[info]   CI (99.9%): [8018.852, 9066.024] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.017 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.169 ±(99.9%) 1.061 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.169, 0.634), stdev = 0.275
[info]   CI (99.9%): [≈ 0, 1.230] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   809.402 ±(99.9%) 1162.460 MB/sec [Average]
[info]   (min, avg, max) = (674.068, 809.402, 1349.434), stdev = 301.887
[info]   CI (99.9%): [≈ 0, 1971.862] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   8206.976 ±(99.9%) 11824.578 B/op [Average]
[info]   (min, avg, max) = (6813.307, 8206.976, 13700.158), stdev = 3070.805
[info]   CI (99.9%): [≈ 0, 20031.554] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 0.707
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 59.24% complete, ETA 00:55:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 333654.861 ops/s
[info] # Warmup Iteration   2: 448638.653 ops/s
[info] # Warmup Iteration   3: 455756.571 ops/s
[info] # Warmup Iteration   4: 446400.999 ops/s
[info] # Warmup Iteration   5: 452418.646 ops/s
[info] Iteration   1: 450491.557 ops/s
[info]                  ·gc.alloc.rate:                   899.690 MB/sec
[info]                  ·gc.alloc.rate.norm:              3142.595 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.923 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2350.504 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 440719.358 ops/s
[info]                  ·gc.alloc.rate:                   893.398 MB/sec
[info]                  ·gc.alloc.rate.norm:              3191.052 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.149 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1344.013 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4800.564 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 450215.316 ops/s
[info]                  ·gc.alloc.rate:                   893.108 MB/sec
[info]                  ·gc.alloc.rate.norm:              3122.657 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.018 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2349.642 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 443527.632 ops/s
[info]                  ·gc.alloc.rate:                   879.017 MB/sec
[info]                  ·gc.alloc.rate.norm:              3119.589 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.295 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.018 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2384.959 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 446066.907 ops/s
[info]                  ·gc.alloc.rate:                   880.461 MB/sec
[info]                  ·gc.alloc.rate.norm:              3106.724 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.379 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2372.503 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala":
[info]   446204.154 ±(99.9%) 16307.016 ops/s [Average]
[info]   (min, avg, max) = (440719.358, 446204.154, 450491.557), stdev = 4234.880
[info]   CI (99.9%): [429897.138, 462511.169] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   889.135 ±(99.9%) 34.600 MB/sec [Average]
[info]   (min, avg, max) = (879.017, 889.135, 899.690), stdev = 8.986
[info]   CI (99.9%): [854.534, 923.735] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   3136.524 ±(99.9%) 127.381 B/op [Average]
[info]   (min, avg, max) = (3106.724, 3136.524, 3191.052), stdev = 33.080
[info]   CI (99.9%): [3009.143, 3263.904] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.025 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.083), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.089 ±(99.9%) 0.509 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.089, 0.295), stdev = 0.132
[info]   CI (99.9%): [≈ 0, 0.598] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   806.670 ±(99.9%) 1156.671 MB/sec [Average]
[info]   (min, avg, max) = (672.018, 806.670, 1344.013), stdev = 300.384
[info]   CI (99.9%): [≈ 0, 1963.341] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2851.634 ±(99.9%) 4195.616 B/op [Average]
[info]   (min, avg, max) = (2349.642, 2851.634, 4800.564), stdev = 1089.588
[info]   CI (99.9%): [≈ 0, 7047.250] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 59.44% complete, ETA 00:54:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4164.832 ops/s
[info] # Warmup Iteration   2: 58583.957 ops/s
[info] # Warmup Iteration   3: 62405.628 ops/s
[info] # Warmup Iteration   4: 64050.893 ops/s
[info] # Warmup Iteration   5: 64267.227 ops/s
[info] Iteration   1: 64739.385 ops/s
[info]                  ·gc.alloc.rate:                   2543.374 MB/sec
[info]                  ·gc.alloc.rate.norm:              61813.705 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.012 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2703.902 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 65715.146 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 63812.001 ops/s
[info]                  ·gc.alloc.rate:                   2507.031 MB/sec
[info]                  ·gc.alloc.rate.norm:              61806.546 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.051 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2705.363 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 66696.084 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 64805.689 ops/s
[info]                  ·gc.alloc.rate:                   2531.813 MB/sec
[info]                  ·gc.alloc.rate.norm:              61495.244 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.011 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2032.727 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 49372.920 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 64407.889 ops/s
[info]                  ·gc.alloc.rate:                   2568.934 MB/sec
[info]                  ·gc.alloc.rate.norm:              62752.882 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.017 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2715.436 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 66331.572 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 63610.099 ops/s
[info]                  ·gc.alloc.rate:                   2512.402 MB/sec
[info]                  ·gc.alloc.rate.norm:              62176.578 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.515 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2037.300 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 50418.805 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson":
[info]   64275.012 ±(99.9%) 2083.804 ops/s [Average]
[info]   (min, avg, max) = (63610.099, 64275.012, 64805.689), stdev = 541.157
[info]   CI (99.9%): [62191.208, 66358.817] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2532.711 ±(99.9%) 96.238 MB/sec [Average]
[info]   (min, avg, max) = (2507.031, 2532.711, 2568.934), stdev = 24.993
[info]   CI (99.9%): [2436.473, 2628.949] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   62008.991 ±(99.9%) 1851.230 B/op [Average]
[info]   (min, avg, max) = (61495.244, 62008.991, 62752.882), stdev = 480.759
[info]   CI (99.9%): [60157.761, 63860.221] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   0.046 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.083), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   1.121 ±(99.9%) 2.168 B/op [Average]
[info]   (min, avg, max) = (0.515, 1.121, 2.051), stdev = 0.563
[info]   CI (99.9%): [≈ 0, 3.289] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   2438.945 ±(99.9%) 1419.995 MB/sec [Average]
[info]   (min, avg, max) = (2032.727, 2438.945, 2715.436), stdev = 368.768
[info]   CI (99.9%): [1018.950, 3858.941] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   59706.905 ±(99.9%) 34542.971 B/op [Average]
[info]   (min, avg, max) = (49372.920, 59706.905, 66696.084), stdev = 8970.700
[info]   CI (99.9%): [25163.935, 94249.876] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 59.64% complete, ETA 00:54:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 67895.637 ops/s
[info] # Warmup Iteration   2: 144472.079 ops/s
[info] # Warmup Iteration   3: 148928.526 ops/s
[info] # Warmup Iteration   4: 151664.969 ops/s
[info] # Warmup Iteration   5: 152297.548 ops/s
[info] Iteration   1: 148887.787 ops/s
[info]                  ·gc.alloc.rate:                   1056.669 MB/sec
[info]                  ·gc.alloc.rate.norm:              11172.503 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.302 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7119.039 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   2: 152234.180 ops/s
[info]                  ·gc.alloc.rate:                   1107.387 MB/sec
[info]                  ·gc.alloc.rate.norm:              11447.088 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.861 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1347.118 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13925.184 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 150691.361 ops/s
[info]                  ·gc.alloc.rate:                   1069.683 MB/sec
[info]                  ·gc.alloc.rate.norm:              11173.019 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.049 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7040.551 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 153180.378 ops/s
[info]                  ·gc.alloc.rate:                   1100.539 MB/sec
[info]                  ·gc.alloc.rate.norm:              11307.693 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.428 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.903 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13859.551 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 153759.817 ops/s
[info]                  ·gc.alloc.rate:                   1099.812 MB/sec
[info]                  ·gc.alloc.rate.norm:              11258.121 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.745 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6906.960 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readUPickle":
[info]   151750.705 ±(99.9%) 7612.391 ops/s [Average]
[info]   (min, avg, max) = (148887.787, 151750.705, 153759.817), stdev = 1976.914
[info]   CI (99.9%): [144138.314, 159363.095] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readUPickle:·gc.alloc.rate":
[info]   1086.818 ±(99.9%) 85.731 MB/sec [Average]
[info]   (min, avg, max) = (1056.669, 1086.818, 1107.387), stdev = 22.264
[info]   CI (99.9%): [1001.087, 1172.549] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readUPickle:·gc.alloc.rate.norm":
[info]   11271.685 ±(99.9%) 438.275 B/op [Average]
[info]   (min, avg, max) = (11172.503, 11271.685, 11447.088), stdev = 113.819
[info]   CI (99.9%): [10833.410, 11709.960] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readUPickle:·gc.churn.PS_Eden_Space":
[info]   0.025 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.083), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   0.258 ±(99.9%) 1.481 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.258, 0.861), stdev = 0.385
[info]   CI (99.9%): [≈ 0, 1.739] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space":
[info]   943.623 ±(99.9%) 1421.481 MB/sec [Average]
[info]   (min, avg, max) = (673.302, 943.623, 1348.903), stdev = 369.154
[info]   CI (99.9%): [≈ 0, 2365.104] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   9770.257 ±(99.9%) 14493.016 B/op [Average]
[info]   (min, avg, max) = (6906.960, 9770.257, 13925.184), stdev = 3763.790
[info]   CI (99.9%): [≈ 0, 24263.273] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readUPickle:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.readUPickle:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 0.837
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 59.84% complete, ETA 00:54:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 79352.348 ops/s
[info] # Warmup Iteration   2: 163733.539 ops/s
[info] # Warmup Iteration   3: 170639.592 ops/s
[info] # Warmup Iteration   4: 174218.173 ops/s
[info] # Warmup Iteration   5: 174338.000 ops/s
[info] Iteration   1: 171036.041 ops/s
[info]                  ·gc.alloc.rate:                   606.328 MB/sec
[info]                  ·gc.alloc.rate.norm:              5581.473 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.978 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9.003 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.547 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6209.452 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 172429.574 ops/s
[info]                  ·gc.alloc.rate:                   607.641 MB/sec
[info]                  ·gc.alloc.rate.norm:              5546.858 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.724 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6159.224 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 174062.858 ops/s
[info]                  ·gc.alloc.rate:                   606.750 MB/sec
[info]                  ·gc.alloc.rate.norm:              5485.549 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.188 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.902 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6101.695 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 171047.180 ops/s
[info]                  ·gc.alloc.rate:                   607.696 MB/sec
[info]                  ·gc.alloc.rate.norm:              5591.780 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.192 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.811 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6209.343 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 172783.285 ops/s
[info]                  ·gc.alloc.rate:                   615.358 MB/sec
[info]                  ·gc.alloc.rate.norm:              5606.226 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.695 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6146.821 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce":
[info]   172271.788 ±(99.9%) 4916.623 ops/s [Average]
[info]   (min, avg, max) = (171036.041, 172271.788, 174062.858), stdev = 1276.831
[info]   CI (99.9%): [167355.165, 177188.411] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.alloc.rate":
[info]   608.755 ±(99.9%) 14.391 MB/sec [Average]
[info]   (min, avg, max) = (606.328, 608.755, 615.358), stdev = 3.737
[info]   CI (99.9%): [594.364, 623.145] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   5562.377 ±(99.9%) 185.624 B/op [Average]
[info]   (min, avg, max) = (5485.549, 5562.377, 5606.226), stdev = 48.206
[info]   CI (99.9%): [5376.753, 5748.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   0.204 ±(99.9%) 1.667 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.204, 0.978), stdev = 0.433
[info]   CI (99.9%): [≈ 0, 1.871] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1.877 ±(99.9%) 15.345 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.877, 9.003), stdev = 3.985
[info]   CI (99.9%): [≈ 0, 17.221] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   674.736 ±(99.9%) 0.512 MB/sec [Average]
[info]   (min, avg, max) = (674.547, 674.736, 674.902), stdev = 0.133
[info]   CI (99.9%): [674.224, 675.247] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   6165.307 ±(99.9%) 175.544 B/op [Average]
[info]   (min, avg, max) = (6101.695, 6165.307, 6209.452), stdev = 45.588
[info]   CI (99.9%): [5989.763, 6340.851] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 60.04% complete, ETA 00:54:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 192538.656 ops/s
[info] # Warmup Iteration   2: 389510.188 ops/s
[info] # Warmup Iteration   3: 405450.709 ops/s
[info] # Warmup Iteration   4: 403503.342 ops/s
[info] # Warmup Iteration   5: 391381.445 ops/s
[info] Iteration   1: 397487.169 ops/s
[info]                  ·gc.alloc.rate:                   411.168 MB/sec
[info]                  ·gc.alloc.rate.norm:              1628.598 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.165 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.583 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2668.001 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 395530.719 ops/s
[info]                  ·gc.alloc.rate:      390.130 MB/sec
[info]                  ·gc.alloc.rate.norm: 1552.653 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 391831.349 ops/s
[info]                  ·gc.alloc.rate:                   407.577 MB/sec
[info]                  ·gc.alloc.rate.norm:              1637.443 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.978 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3.930 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.650 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2706.391 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 394855.421 ops/s
[info]                  ·gc.alloc.rate:      389.320 MB/sec
[info]                  ·gc.alloc.rate.norm: 1552.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 393560.098 ops/s
[info]                  ·gc.alloc.rate:                   404.383 MB/sec
[info]                  ·gc.alloc.rate.norm:              1617.206 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.122 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2695.945 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala":
[info]   394652.951 ±(99.9%) 8168.455 ops/s [Average]
[info]   (min, avg, max) = (391831.349, 394652.951, 397487.169), stdev = 2121.322
[info]   CI (99.9%): [386484.496, 402821.407] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   400.516 ±(99.9%) 39.056 MB/sec [Average]
[info]   (min, avg, max) = (389.320, 400.516, 411.168), stdev = 10.143
[info]   CI (99.9%): [361.460, 439.572] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1597.580 ±(99.9%) 161.455 B/op [Average]
[info]   (min, avg, max) = (1552.001, 1597.580, 1637.443), stdev = 41.929
[info]   CI (99.9%): [1436.125, 1759.035] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.204 ±(99.9%) 1.668 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.204, 0.978), stdev = 0.433
[info]   CI (99.9%): [≈ 0, 1.872] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.819 ±(99.9%) 6.702 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.819, 3.930), stdev = 1.741
[info]   CI (99.9%): [≈ 0, 7.521] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   404.271 ±(99.9%) 1421.070 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 404.271, 674.122), stdev = 369.047
[info]   CI (99.9%): [≈ 0, 1825.341] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1614.067 ±(99.9%) 5673.932 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1614.067, 2706.391), stdev = 1473.502
[info]   CI (99.9%): [≈ 0, 7287.999] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 1.000
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 60.24% complete, ETA 00:53:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 829586.282 ops/s
[info] # Warmup Iteration   2: 991229.389 ops/s
[info] # Warmup Iteration   3: 1031970.807 ops/s
[info] # Warmup Iteration   4: 1062143.302 ops/s
[info] # Warmup Iteration   5: 1061085.949 ops/s
[info] Iteration   1: 1062939.783 ops/s
[info]                  ·gc.alloc.rate:                   810.199 MB/sec
[info]                  ·gc.alloc.rate.norm:              1199.886 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.341 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 997.202 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 1058912.808 ops/s
[info]                  ·gc.alloc.rate:                   827.338 MB/sec
[info]                  ·gc.alloc.rate.norm:              1229.633 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.155 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1346.346 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2001.009 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 1068668.561 ops/s
[info]                  ·gc.alloc.rate:                   814.701 MB/sec
[info]                  ·gc.alloc.rate.norm:              1199.702 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.826 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 990.782 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 1064707.755 ops/s
[info]                  ·gc.alloc.rate:                   810.322 MB/sec
[info]                  ·gc.alloc.rate.norm:              1198.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.062 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.709 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 994.552 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 1060886.706 ops/s
[info]                  ·gc.alloc.rate:                   804.858 MB/sec
[info]                  ·gc.alloc.rate.norm:              1194.314 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.031 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.601 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 998.060 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala":
[info]   1063223.123 ±(99.9%) 14404.557 ops/s [Average]
[info]   (min, avg, max) = (1058912.808, 1063223.123, 1068668.561), stdev = 3740.818
[info]   CI (99.9%): [1048818.566, 1077627.679] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   813.484 ±(99.9%) 32.710 MB/sec [Average]
[info]   (min, avg, max) = (804.858, 813.484, 827.338), stdev = 8.495
[info]   CI (99.9%): [780.774, 846.193] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1204.307 ±(99.9%) 55.192 B/op [Average]
[info]   (min, avg, max) = (1194.314, 1204.307, 1229.633), stdev = 14.333
[info]   CI (99.9%): [1149.115, 1259.499] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.033 ±(99.9%) 0.166 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.104), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.049 ±(99.9%) 0.247 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.049, 0.155), stdev = 0.064
[info]   CI (99.9%): [≈ 0, 0.296] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   807.565 ±(99.9%) 1159.768 MB/sec [Average]
[info]   (min, avg, max) = (672.601, 807.565, 1346.346), stdev = 301.188
[info]   CI (99.9%): [≈ 0, 1967.333] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1196.321 ±(99.9%) 1732.185 B/op [Average]
[info]   (min, avg, max) = (990.782, 1196.321, 2001.009), stdev = 449.843
[info]   CI (99.9%): [≈ 0, 2928.506] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 60.44% complete, ETA 00:53:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 908944.440 ops/s
[info] # Warmup Iteration   2: 1112755.826 ops/s
[info] # Warmup Iteration   3: 1131499.108 ops/s
[info] # Warmup Iteration   4: 1134523.625 ops/s
[info] # Warmup Iteration   5: 1138787.496 ops/s
[info] Iteration   1: 1139186.931 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1138470.323 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1137601.570 ops/s
[info]                  ·gc.alloc.rate:      0.170 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.236 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1138673.410 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1094570.661 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc":
[info]   1129700.579 ±(99.9%) 75651.870 ops/s [Average]
[info]   (min, avg, max) = (1094570.661, 1129700.579, 1139186.931), stdev = 19646.550
[info]   CI (99.9%): [1054048.709, 1205352.449] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.034 ±(99.9%) 0.293 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.034, 0.170), stdev = 0.076
[info]   CI (99.9%): [≈ 0, 0.327] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.047 ±(99.9%) 0.405 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻³, 0.047, 0.236), stdev = 0.105
[info]   CI (99.9%): [≈ 0, 0.453] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 60.64% complete, ETA 00:53:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 96305.690 ops/s
[info] # Warmup Iteration   2: 289221.726 ops/s
[info] # Warmup Iteration   3: 300675.134 ops/s
[info] # Warmup Iteration   4: 294023.866 ops/s
[info] # Warmup Iteration   5: 300360.336 ops/s
[info] Iteration   1: 298502.847 ops/s
[info]                  ·gc.alloc.rate:                   826.747 MB/sec
[info]                  ·gc.alloc.rate.norm:              4359.020 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.131 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3554.352 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 300932.407 ops/s
[info]                  ·gc.alloc.rate:                   833.500 MB/sec
[info]                  ·gc.alloc.rate.norm:              4359.743 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.109 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.022 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3525.574 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 301112.828 ops/s
[info]                  ·gc.alloc.rate:                   837.260 MB/sec
[info]                  ·gc.alloc.rate.norm:              4375.576 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.109 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.202 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3523.420 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 294813.890 ops/s
[info]                  ·gc.alloc.rate:                   847.366 MB/sec
[info]                  ·gc.alloc.rate.norm:              4524.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.556 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7197.738 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 294878.232 ops/s
[info]                  ·gc.alloc.rate:                   820.038 MB/sec
[info]                  ·gc.alloc.rate.norm:              4377.666 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.669 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3601.631 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson":
[info]   298048.041 ±(99.9%) 11934.939 ops/s [Average]
[info]   (min, avg, max) = (294813.890, 298048.041, 301112.828), stdev = 3099.466
[info]   CI (99.9%): [286113.102, 309982.980] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   832.982 ±(99.9%) 40.011 MB/sec [Average]
[info]   (min, avg, max) = (820.038, 832.982, 847.366), stdev = 10.391
[info]   CI (99.9%): [792.971, 872.994] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   4399.203 ±(99.9%) 270.712 B/op [Average]
[info]   (min, avg, max) = (4359.020, 4399.203, 4524.008), stdev = 70.303
[info]   CI (99.9%): [4128.490, 4669.915] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   0.029 ±(99.9%) 0.166 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.104), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.195] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   0.155 ±(99.9%) 0.888 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.155, 0.556), stdev = 0.231
[info]   CI (99.9%): [≈ 0, 1.043] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   809.038 ±(99.9%) 1160.515 MB/sec [Average]
[info]   (min, avg, max) = (674.022, 809.038, 1348.167), stdev = 301.382
[info]   CI (99.9%): [≈ 0, 1969.553] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   4280.543 ±(99.9%) 6280.657 B/op [Average]
[info]   (min, avg, max) = (3523.420, 4280.543, 7197.738), stdev = 1631.067
[info]   CI (99.9%): [≈ 0, 10561.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 60.84% complete, ETA 00:53:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 37444.957 ops/s
[info] # Warmup Iteration   2: 49730.177 ops/s
[info] # Warmup Iteration   3: 47922.801 ops/s
[info] # Warmup Iteration   4: 49926.138 ops/s
[info] # Warmup Iteration   5: 49901.067 ops/s
[info] Iteration   1: 49706.282 ops/s
[info]                  ·gc.alloc.rate:                   163.597 MB/sec
[info]                  ·gc.alloc.rate.norm:              5180.971 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      511.481 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16198.133 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 49725.189 ops/s
[info]                  ·gc.alloc.rate:      154.817 MB/sec
[info]                  ·gc.alloc.rate.norm: 4899.270 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 49780.237 ops/s
[info]                  ·gc.alloc.rate:      155.287 MB/sec
[info]                  ·gc.alloc.rate.norm: 4908.635 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 49845.126 ops/s
[info]                  ·gc.alloc.rate:                   163.927 MB/sec
[info]                  ·gc.alloc.rate.norm:              5175.225 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.315 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      511.672 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16153.619 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 49867.617 ops/s
[info]                  ·gc.alloc.rate:      154.606 MB/sec
[info]                  ·gc.alloc.rate.norm: 4880.008 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeUPickle":
[info]   49784.890 ±(99.9%) 273.891 ops/s [Average]
[info]   (min, avg, max) = (49706.282, 49784.890, 49867.617), stdev = 71.129
[info]   CI (99.9%): [49510.999, 50058.782] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeUPickle:·gc.alloc.rate":
[info]   158.447 ±(99.9%) 18.714 MB/sec [Average]
[info]   (min, avg, max) = (154.606, 158.447, 163.927), stdev = 4.860
[info]   CI (99.9%): [139.733, 177.161] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeUPickle:·gc.alloc.rate.norm":
[info]   5008.822 ±(99.9%) 596.407 B/op [Average]
[info]   (min, avg, max) = (4880.008, 5008.822, 5180.971), stdev = 154.885
[info]   CI (99.9%): [4412.415, 5605.229] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space":
[info]   0.008 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   0.263 ±(99.9%) 2.264 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.263, 1.315), stdev = 0.588
[info]   CI (99.9%): [≈ 0, 2.527] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space":
[info]   204.631 ±(99.9%) 1078.959 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 204.631, 511.672), stdev = 280.202
[info]   CI (99.9%): [≈ 0, 1283.589] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   6470.350 ±(99.9%) 34116.344 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 6470.350, 16198.133), stdev = 8859.906
[info]   CI (99.9%): [≈ 0, 40586.694] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeUPickle:·gc.count":
[info]   2.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.000), stdev = 0.548
[info]   CI (99.9%): [2.000, 2.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZoneOffsetsBenchmark.writeUPickle:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 3.000), stdev = 1.414
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 61.04% complete, ETA 00:52:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1113.400 ops/s
[info] # Warmup Iteration   2: 4116.462 ops/s
[info] # Warmup Iteration   3: 4607.904 ops/s
[info] # Warmup Iteration   4: 4782.834 ops/s
[info] # Warmup Iteration   5: 4799.423 ops/s
[info] Iteration   1: 4798.758 ops/s
[info]                  ·gc.alloc.rate:                   870.425 MB/sec
[info]                  ·gc.alloc.rate.norm:              285483.168 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     40.960 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.715 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 220637.867 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 4789.262 ops/s
[info]                  ·gc.alloc.rate:                   896.365 MB/sec
[info]                  ·gc.alloc.rate.norm:              294490.174 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6.839 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.671 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 442104.680 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 4797.317 ops/s
[info]                  ·gc.alloc.rate:                   880.168 MB/sec
[info]                  ·gc.alloc.rate.norm:              288735.722 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.722 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 220683.842 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 4734.571 ops/s
[info]                  ·gc.alloc.rate:                   866.916 MB/sec
[info]                  ·gc.alloc.rate.norm:              288162.412 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6.919 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.743 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 223619.459 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 4784.874 ops/s
[info]                  ·gc.alloc.rate:                   869.862 MB/sec
[info]                  ·gc.alloc.rate.norm:              286062.822 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6.847 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.546 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 221502.369 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce":
[info]   4780.956 ±(99.9%) 102.251 ops/s [Average]
[info]   (min, avg, max) = (4734.571, 4780.956, 4798.758), stdev = 26.554
[info]   CI (99.9%): [4678.706, 4883.207] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:·gc.alloc.rate":
[info]   876.747 ±(99.9%) 46.391 MB/sec [Average]
[info]   (min, avg, max) = (866.916, 876.747, 896.365), stdev = 12.048
[info]   CI (99.9%): [830.356, 923.138] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   288586.860 ±(99.9%) 13756.975 B/op [Average]
[info]   (min, avg, max) = (285483.168, 288586.860, 294490.174), stdev = 3572.643
[info]   CI (99.9%): [274829.884, 302343.835] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   0.037 ±(99.9%) 0.191 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.125), stdev = 0.050
[info]   CI (99.9%): [≈ 0, 0.229] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   12.313 ±(99.9%) 62.719 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 12.313, 40.960), stdev = 16.288
[info]   CI (99.9%): [≈ 0, 75.032] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   807.479 ±(99.9%) 1158.499 MB/sec [Average]
[info]   (min, avg, max) = (672.715, 807.479, 1345.671), stdev = 300.859
[info]   CI (99.9%): [≈ 0, 1965.979] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   265709.643 ±(99.9%) 379732.181 B/op [Average]
[info]   (min, avg, max) = (220637.867, 265709.643, 442104.680), stdev = 98615.241
[info]   CI (99.9%): [≈ 0, 645441.824] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readCirce:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 3.000), stdev = 0.894
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 61.24% complete, ETA 00:52:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 982.263 ops/s
[info] # Warmup Iteration   2: 3938.274 ops/s
[info] # Warmup Iteration   3: 3968.669 ops/s
[info] # Warmup Iteration   4: 4164.668 ops/s
[info] # Warmup Iteration   5: 4171.418 ops/s
[info] Iteration   1: 4128.805 ops/s
[info]                  ·gc.alloc.rate:                   729.914 MB/sec
[info]                  ·gc.alloc.rate.norm:              278277.679 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     47.605 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      671.280 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 255923.634 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 4154.645 ops/s
[info]                  ·gc.alloc.rate:                   728.761 MB/sec
[info]                  ·gc.alloc.rate.norm:              276094.695 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      671.293 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 254322.572 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   3: 4145.417 ops/s
[info]                  ·gc.alloc.rate:                   730.038 MB/sec
[info]                  ·gc.alloc.rate.norm:              277124.819 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      671.424 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 254874.514 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 4155.104 ops/s
[info]                  ·gc.alloc.rate:                   736.972 MB/sec
[info]                  ·gc.alloc.rate.norm:              279171.218 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7.885 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      671.375 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 254322.572 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 4160.740 ops/s
[info]                  ·gc.alloc.rate:                   741.309 MB/sec
[info]                  ·gc.alloc.rate.norm:              280401.501 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7.873 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.060 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 254207.877 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala":
[info]   4148.942 ±(99.9%) 48.233 ops/s [Average]
[info]   (min, avg, max) = (4128.805, 4148.942, 4160.740), stdev = 12.526
[info]   CI (99.9%): [4100.709, 4197.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   733.399 ±(99.9%) 21.116 MB/sec [Average]
[info]   (min, avg, max) = (728.761, 733.399, 741.309), stdev = 5.484
[info]   CI (99.9%): [712.283, 754.515] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   278213.983 ±(99.9%) 6495.859 B/op [Average]
[info]   (min, avg, max) = (276094.695, 278213.983, 280401.501), stdev = 1686.954
[info]   CI (99.9%): [271718.124, 284709.841] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.033 ±(99.9%) 0.201 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.125), stdev = 0.052
[info]   CI (99.9%): [≈ 0, 0.234] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   12.672 ±(99.9%) 76.709 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 12.672, 47.605), stdev = 19.921
[info]   CI (99.9%): [≈ 0, 89.382] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   671.486 ±(99.9%) 1.256 MB/sec [Average]
[info]   (min, avg, max) = (671.280, 671.486, 672.060), stdev = 0.326
[info]   CI (99.9%): [670.230, 672.742] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   254730.234 ±(99.9%) 2756.812 B/op [Average]
[info]   (min, avg, max) = (254207.877, 254730.234, 255923.634), stdev = 715.935
[info]   CI (99.9%): [251973.421, 257487.046] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 0.837
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 61.45% complete, ETA 00:52:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 21286.114 ops/s
[info] # Warmup Iteration   2: 30802.488 ops/s
[info] # Warmup Iteration   3: 32215.379 ops/s
[info] # Warmup Iteration   4: 30703.326 ops/s
[info] # Warmup Iteration   5: 32552.831 ops/s
[info] Iteration   1: 32985.475 ops/s
[info]                  ·gc.alloc.rate:                   558.901 MB/sec
[info]                  ·gc.alloc.rate.norm:              26668.087 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      667.465 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 31848.231 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 32851.162 ops/s
[info]                  ·gc.alloc.rate:                   556.348 MB/sec
[info]                  ·gc.alloc.rate.norm:              26724.818 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      664.361 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 31913.321 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 32990.412 ops/s
[info]                  ·gc.alloc.rate:                   561.565 MB/sec
[info]                  ·gc.alloc.rate.norm:              26788.296 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      666.143 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 31776.956 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 33102.412 ops/s
[info]                  ·gc.alloc.rate:                   558.252 MB/sec
[info]                  ·gc.alloc.rate.norm:              26545.596 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.990 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      666.047 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 31671.379 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 33009.796 ops/s
[info]                  ·gc.alloc.rate:                   560.533 MB/sec
[info]                  ·gc.alloc.rate.norm:              26729.023 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.993 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      666.050 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 31760.594 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala":
[info]   32987.851 ±(99.9%) 346.034 ops/s [Average]
[info]   (min, avg, max) = (32851.162, 32987.851, 33102.412), stdev = 89.864
[info]   CI (99.9%): [32641.818, 33333.885] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   559.120 ±(99.9%) 7.811 MB/sec [Average]
[info]   (min, avg, max) = (556.348, 559.120, 561.565), stdev = 2.029
[info]   CI (99.9%): [551.309, 566.931] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   26691.164 ±(99.9%) 353.563 B/op [Average]
[info]   (min, avg, max) = (26545.596, 26691.164, 26788.296), stdev = 91.819
[info]   CI (99.9%): [26337.601, 27044.727] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.008 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.396 ±(99.9%) 2.090 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.396, 0.993), stdev = 0.543
[info]   CI (99.9%): [≈ 0, 2.487] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   666.013 ±(99.9%) 4.244 MB/sec [Average]
[info]   (min, avg, max) = (664.361, 666.013, 667.465), stdev = 1.102
[info]   CI (99.9%): [661.770, 670.257] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   31794.096 ±(99.9%) 353.028 B/op [Average]
[info]   (min, avg, max) = (31671.379, 31794.096, 31913.321), stdev = 91.680
[info]   CI (99.9%): [31441.068, 32147.124] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 3.000), stdev = 0.894
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 61.65% complete, ETA 00:51:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 400.491 ops/s
[info] # Warmup Iteration   2: 3605.577 ops/s
[info] # Warmup Iteration   3: 3770.293 ops/s
[info] # Warmup Iteration   4: 3978.852 ops/s
[info] # Warmup Iteration   5: 3865.397 ops/s
[info] Iteration   1: 3939.510 ops/s
[info]                  ·gc.alloc.rate:                   958.898 MB/sec
[info]                  ·gc.alloc.rate.norm:              383146.377 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     49.888 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1341.764 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 536128.049 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 3941.749 ops/s
[info]                  ·gc.alloc.rate:                   945.741 MB/sec
[info]                  ·gc.alloc.rate.norm:              377566.908 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      671.447 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 268061.022 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 3939.806 ops/s
[info]                  ·gc.alloc.rate:                   935.762 MB/sec
[info]                  ·gc.alloc.rate.norm:              373841.693 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      671.657 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 268330.093 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 3942.959 ops/s
[info]                  ·gc.alloc.rate:                   961.567 MB/sec
[info]                  ·gc.alloc.rate.norm:              383848.209 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8.308 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1344.016 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 536517.842 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 3946.858 ops/s
[info]                  ·gc.alloc.rate:                   939.511 MB/sec
[info]                  ·gc.alloc.rate.norm:              374548.906 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.547 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 268119.927 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson":
[info]   3942.176 ±(99.9%) 11.462 ops/s [Average]
[info]   (min, avg, max) = (3939.510, 3942.176, 3946.858), stdev = 2.977
[info]   CI (99.9%): [3930.714, 3953.639] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   948.296 ±(99.9%) 44.296 MB/sec [Average]
[info]   (min, avg, max) = (935.762, 948.296, 961.567), stdev = 11.503
[info]   CI (99.9%): [904.000, 992.592] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   378590.419 ±(99.9%) 18095.252 B/op [Average]
[info]   (min, avg, max) = (373841.693, 378590.419, 383848.209), stdev = 4699.279
[info]   CI (99.9%): [360495.167, 396685.671] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   0.029 ±(99.9%) 0.209 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.125), stdev = 0.054
[info]   CI (99.9%): [≈ 0, 0.238] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   11.639 ±(99.9%) 83.490 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 11.639, 49.888), stdev = 21.682
[info]   CI (99.9%): [≈ 0, 95.130] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   940.286 ±(99.9%) 1415.214 MB/sec [Average]
[info]   (min, avg, max) = (671.447, 940.286, 1344.016), stdev = 367.526
[info]   CI (99.9%): [≈ 0, 2355.500] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   375431.386 ±(99.9%) 565556.879 B/op [Average]
[info]   (min, avg, max) = (268061.022, 375431.386, 536517.842), stdev = 146873.326
[info]   CI (99.9%): [≈ 0, 940988.266] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 61.85% complete, ETA 00:51:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1824.813 ops/s
[info] # Warmup Iteration   2: 4497.458 ops/s
[info] # Warmup Iteration   3: 4782.203 ops/s
[info] # Warmup Iteration   4: 4750.832 ops/s
[info] # Warmup Iteration   5: 4793.841 ops/s
[info] Iteration   1: 4796.151 ops/s
[info]                  ·gc.alloc.rate:                   839.501 MB/sec
[info]                  ·gc.alloc.rate.norm:              275549.405 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      670.295 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 220010.787 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 4789.561 ops/s
[info]                  ·gc.alloc.rate:                   836.477 MB/sec
[info]                  ·gc.alloc.rate.norm:              274890.501 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      670.985 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 220505.181 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 4782.992 ops/s
[info]                  ·gc.alloc.rate:                   862.746 MB/sec
[info]                  ·gc.alloc.rate.norm:              283858.836 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6.849 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1343.012 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 441874.836 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 4783.309 ops/s
[info]                  ·gc.alloc.rate:                   838.100 MB/sec
[info]                  ·gc.alloc.rate.norm:              275764.247 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      671.663 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 221000.814 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 4800.330 ops/s
[info]                  ·gc.alloc.rate:                   839.964 MB/sec
[info]                  ·gc.alloc.rate.norm:              275423.835 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6.824 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.603 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 220545.973 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readUPickle":
[info]   4790.469 ±(99.9%) 29.674 ops/s [Average]
[info]   (min, avg, max) = (4782.992, 4790.469, 4800.330), stdev = 7.706
[info]   CI (99.9%): [4760.795, 4820.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readUPickle:·gc.alloc.rate":
[info]   843.358 ±(99.9%) 42.063 MB/sec [Average]
[info]   (min, avg, max) = (836.477, 843.358, 862.746), stdev = 10.924
[info]   CI (99.9%): [801.295, 885.420] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readUPickle:·gc.alloc.rate.norm":
[info]   277097.365 ±(99.9%) 14607.323 B/op [Average]
[info]   (min, avg, max) = (274890.501, 277097.365, 283858.836), stdev = 3793.476
[info]   CI (99.9%): [262490.041, 291704.688] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readUPickle:·gc.churn.PS_Eden_Space":
[info]   0.008 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   2.735 ±(99.9%) 14.419 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.735, 6.849), stdev = 3.745
[info]   CI (99.9%): [≈ 0, 17.154] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readUPickle:·gc.churn.PS_Survivor_Space":
[info]   805.712 ±(99.9%) 1156.584 MB/sec [Average]
[info]   (min, avg, max) = (670.295, 805.712, 1343.012), stdev = 300.361
[info]   CI (99.9%): [≈ 0, 1962.296] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   264787.518 ±(99.9%) 381196.193 B/op [Average]
[info]   (min, avg, max) = (220010.787, 264787.518, 441874.836), stdev = 98995.441
[info]   CI (99.9%): [≈ 0, 645983.711] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readUPickle:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.readUPickle:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 62.05% complete, ETA 00:51:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5448.077 ops/s
[info] # Warmup Iteration   2: 13841.759 ops/s
[info] # Warmup Iteration   3: 13892.392 ops/s
[info] # Warmup Iteration   4: 13693.975 ops/s
[info] # Warmup Iteration   5: 13439.098 ops/s
[info] Iteration   1: 13727.572 ops/s
[info]                  ·gc.alloc.rate:                   734.064 MB/sec
[info]                  ·gc.alloc.rate.norm:              84173.355 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.387 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      671.350 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 76982.127 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 14093.369 ops/s
[info]                  ·gc.alloc.rate:                   754.680 MB/sec
[info]                  ·gc.alloc.rate.norm:              84283.716 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      671.404 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 74983.301 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 13983.341 ops/s
[info]                  ·gc.alloc.rate:                   777.437 MB/sec
[info]                  ·gc.alloc.rate.norm:              87512.911 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7.029 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1343.400 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 151221.063 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 13633.107 ops/s
[info]                  ·gc.alloc.rate:                   737.578 MB/sec
[info]                  ·gc.alloc.rate.norm:              85152.921 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.450 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 77633.845 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 14099.677 ops/s
[info]                  ·gc.alloc.rate:                   754.737 MB/sec
[info]                  ·gc.alloc.rate.norm:              84263.426 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.324 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.329 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 75062.932 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce":
[info]   13907.413 ±(99.9%) 827.881 ops/s [Average]
[info]   (min, avg, max) = (13633.107, 13907.413, 14099.677), stdev = 214.998
[info]   CI (99.9%): [13079.532, 14735.294] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.alloc.rate":
[info]   751.699 ±(99.9%) 66.443 MB/sec [Average]
[info]   (min, avg, max) = (734.064, 751.699, 777.437), stdev = 17.255
[info]   CI (99.9%): [685.256, 818.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   85077.266 ±(99.9%) 5461.674 B/op [Average]
[info]   (min, avg, max) = (84173.355, 85077.266, 87512.911), stdev = 1418.379
[info]   CI (99.9%): [79615.592, 90538.940] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   0.021 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.062), stdev = 0.025
[info]   CI (99.9%): [≈ 0, 0.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   2.348 ±(99.9%) 11.050 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.348, 7.029), stdev = 2.870
[info]   CI (99.9%): [≈ 0, 13.397] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   806.187 ±(99.9%) 1156.394 MB/sec [Average]
[info]   (min, avg, max) = (671.350, 806.187, 1343.400), stdev = 300.312
[info]   CI (99.9%): [≈ 0, 1962.580] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   91176.654 ±(99.9%) 129328.049 B/op [Average]
[info]   (min, avg, max) = (74983.301, 91176.654, 151221.063), stdev = 33586.084
[info]   CI (99.9%): [≈ 0, 220504.703] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 0.707
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 62.25% complete, ETA 00:51:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6360.685 ops/s
[info] # Warmup Iteration   2: 15559.645 ops/s
[info] # Warmup Iteration   3: 16687.714 ops/s
[info] # Warmup Iteration   4: 16884.775 ops/s
[info] # Warmup Iteration   5: 16803.191 ops/s
[info] Iteration   1: 17070.136 ops/s
[info]                  ·gc.alloc.rate:                   840.811 MB/sec
[info]                  ·gc.alloc.rate.norm:              77538.791 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3.838 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      670.948 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 61874.213 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 17017.940 ops/s
[info]                  ·gc.alloc.rate:                   846.379 MB/sec
[info]                  ·gc.alloc.rate.norm:              78283.689 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      671.381 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 62097.680 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 17087.646 ops/s
[info]                  ·gc.alloc.rate:                   838.846 MB/sec
[info]                  ·gc.alloc.rate.norm:              77274.896 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      671.331 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 61843.345 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 16990.042 ops/s
[info]                  ·gc.alloc.rate:                   852.978 MB/sec
[info]                  ·gc.alloc.rate.norm:              79030.025 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.928 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1343.326 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 124461.707 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 17079.148 ops/s
[info]                  ·gc.alloc.rate:                   842.800 MB/sec
[info]                  ·gc.alloc.rate.norm:              77685.976 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.918 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.279 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 61968.006 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala":
[info]   17048.982 ±(99.9%) 164.386 ops/s [Average]
[info]   (min, avg, max) = (16990.042, 17048.982, 17087.646), stdev = 42.691
[info]   CI (99.9%): [16884.596, 17213.369] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   844.363 ±(99.9%) 21.420 MB/sec [Average]
[info]   (min, avg, max) = (838.846, 844.363, 852.978), stdev = 5.563
[info]   CI (99.9%): [822.943, 865.783] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   77962.675 ±(99.9%) 2703.391 B/op [Average]
[info]   (min, avg, max) = (77274.896, 77962.675, 79030.025), stdev = 702.062
[info]   CI (99.9%): [75259.284, 80666.066] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.017 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1.537 ±(99.9%) 6.185 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.537, 3.838), stdev = 1.606
[info]   CI (99.9%): [≈ 0, 7.722] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   805.853 ±(99.9%) 1156.952 MB/sec [Average]
[info]   (min, avg, max) = (670.948, 805.853, 1343.326), stdev = 300.457
[info]   CI (99.9%): [≈ 0, 1962.805] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   74448.990 ±(99.9%) 107656.819 B/op [Average]
[info]   (min, avg, max) = (61843.345, 74448.990, 124461.707), stdev = 27958.134
[info]   CI (99.9%): [≈ 0, 182105.809] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 62.45% complete, ETA 00:50:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 175683.501 ops/s
[info] # Warmup Iteration   2: 202572.022 ops/s
[info] # Warmup Iteration   3: 234610.705 ops/s
[info] # Warmup Iteration   4: 227949.064 ops/s
[info] # Warmup Iteration   5: 227956.239 ops/s
[info] Iteration   1: 229658.777 ops/s
[info]                  ·gc.alloc.rate:                   848.114 MB/sec
[info]                  ·gc.alloc.rate.norm:              5813.810 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.143 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      667.928 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4578.635 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   2: 229794.127 ops/s
[info]                  ·gc.alloc.rate:                   849.882 MB/sec
[info]                  ·gc.alloc.rate.norm:              5821.611 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.143 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      668.691 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4580.469 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 233857.972 ops/s
[info]                  ·gc.alloc.rate:                   892.935 MB/sec
[info]                  ·gc.alloc.rate.norm:              6010.235 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.560 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1338.424 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9008.762 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 234823.007 ops/s
[info]                  ·gc.alloc.rate:                   868.663 MB/sec
[info]                  ·gc.alloc.rate.norm:              5822.932 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      669.692 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4489.165 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 234598.298 ops/s
[info]                  ·gc.alloc.rate:                   865.581 MB/sec
[info]                  ·gc.alloc.rate.norm:              5808.097 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      670.670 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4500.230 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala":
[info]   232546.436 ±(99.9%) 10009.235 ops/s [Average]
[info]   (min, avg, max) = (229658.777, 232546.436, 234823.007), stdev = 2599.366
[info]   CI (99.9%): [222537.201, 242555.671] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   865.035 ±(99.9%) 69.627 MB/sec [Average]
[info]   (min, avg, max) = (848.114, 865.035, 892.935), stdev = 18.082
[info]   CI (99.9%): [795.408, 934.662] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   5855.337 ±(99.9%) 334.236 B/op [Average]
[info]   (min, avg, max) = (5808.097, 5855.337, 6010.235), stdev = 86.800
[info]   CI (99.9%): [5521.102, 6189.573] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.025 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.083), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.157] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.169 ±(99.9%) 0.886 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.169, 0.560), stdev = 0.230
[info]   CI (99.9%): [≈ 0, 1.055] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   803.081 ±(99.9%) 1152.374 MB/sec [Average]
[info]   (min, avg, max) = (667.928, 803.081, 1338.424), stdev = 299.268
[info]   CI (99.9%): [≈ 0, 1955.454] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   5431.452 ±(99.9%) 7702.178 B/op [Average]
[info]   (min, avg, max) = (4489.165, 5431.452, 9008.762), stdev = 2000.231
[info]   CI (99.9%): [≈ 0, 13133.630] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 0.707
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 62.65% complete, ETA 00:50:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 211153.836 ops/s
[info] # Warmup Iteration   2: 250648.191 ops/s
[info] # Warmup Iteration   3: 262243.562 ops/s
[info] # Warmup Iteration   4: 260876.128 ops/s
[info] # Warmup Iteration   5: 262541.650 ops/s
[info] Iteration   1: 261424.353 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 260648.308 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 262446.414 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 261639.167 ops/s
[info]                  ·gc.alloc.rate:      0.002 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.013 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 259831.177 ops/s
[info]                  ·gc.alloc.rate:      0.129 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.781 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc":
[info]   261197.884 ±(99.9%) 3838.480 ops/s [Average]
[info]   (min, avg, max) = (259831.177, 261197.884, 262446.414), stdev = 996.841
[info]   CI (99.9%): [257359.404, 265036.364] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.026 ±(99.9%) 0.221 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.026, 0.129), stdev = 0.057
[info]   CI (99.9%): [≈ 0, 0.247] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.160 ±(99.9%) 1.338 B/op [Average]
[info]   (min, avg, max) = (0.002, 0.160, 0.781), stdev = 0.347
[info]   CI (99.9%): [≈ 0, 1.498] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 62.85% complete, ETA 00:50:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 8588.744 ops/s
[info] # Warmup Iteration   2: 15522.526 ops/s
[info] # Warmup Iteration   3: 15643.195 ops/s
[info] # Warmup Iteration   4: 15699.633 ops/s
[info] # Warmup Iteration   5: 15831.940 ops/s
[info] Iteration   1: 15866.208 ops/s
[info]                  ·gc.alloc.rate:                   842.488 MB/sec
[info]                  ·gc.alloc.rate.norm:              83581.626 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      670.707 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 66539.545 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 15755.528 ops/s
[info]                  ·gc.alloc.rate:                   861.619 MB/sec
[info]                  ·gc.alloc.rate.norm:              86049.347 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.079 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1343.165 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 134141.076 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 15868.905 ops/s
[info]                  ·gc.alloc.rate:                   848.427 MB/sec
[info]                  ·gc.alloc.rate.norm:              84152.313 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.060 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 66659.097 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 15896.935 ops/s
[info]                  ·gc.alloc.rate:                   847.032 MB/sec
[info]                  ·gc.alloc.rate.norm:              83870.051 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.061 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.070 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 66545.895 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   5: 15896.532 ops/s
[info]                  ·gc.alloc.rate:                   844.571 MB/sec
[info]                  ·gc.alloc.rate.norm:              83621.056 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.694 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 66603.469 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson":
[info]   15856.822 ±(99.9%) 225.193 ops/s [Average]
[info]   (min, avg, max) = (15755.528, 15856.822, 15896.935), stdev = 58.482
[info]   CI (99.9%): [15631.629, 16082.014] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.alloc.rate":
[info]   848.827 ±(99.9%) 28.899 MB/sec [Average]
[info]   (min, avg, max) = (842.488, 848.827, 861.619), stdev = 7.505
[info]   CI (99.9%): [819.928, 877.727] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   84254.879 ±(99.9%) 3961.548 B/op [Average]
[info]   (min, avg, max) = (83581.626, 84254.879, 86049.347), stdev = 1028.802
[info]   CI (99.9%): [80293.330, 88216.427] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   0.008 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   0.828 ±(99.9%) 4.366 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.828, 2.079), stdev = 1.134
[info]   CI (99.9%): [≈ 0, 5.194] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   806.139 ±(99.9%) 1155.992 MB/sec [Average]
[info]   (min, avg, max) = (670.707, 806.139, 1343.165), stdev = 300.207
[info]   CI (99.9%): [≈ 0, 1962.131] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   80097.816 ±(99.9%) 116332.341 B/op [Average]
[info]   (min, avg, max) = (66539.545, 80097.816, 134141.076), stdev = 30211.140
[info]   CI (99.9%): [≈ 0, 196430.157] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 0.837
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 63.05% complete, ETA 00:50:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5310.685 ops/s
[info] # Warmup Iteration   2: 7723.296 ops/s
[info] # Warmup Iteration   3: 7848.235 ops/s
[info] # Warmup Iteration   4: 7816.256 ops/s
[info] # Warmup Iteration   5: 7852.133 ops/s
[info] Iteration   1: 7649.945 ops/s
[info]                  ·gc.alloc.rate:                   618.757 MB/sec
[info]                  ·gc.alloc.rate.norm:              127326.140 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4.557 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     937.821 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      668.592 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 137581.064 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 7838.073 ops/s
[info]                  ·gc.alloc.rate:                   632.695 MB/sec
[info]                  ·gc.alloc.rate.norm:              127057.202 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      667.339 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 134014.433 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 7813.728 ops/s
[info]                  ·gc.alloc.rate:                   632.676 MB/sec
[info]                  ·gc.alloc.rate.norm:              127424.508 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4.192 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      667.439 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 134425.941 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 7827.441 ops/s
[info]                  ·gc.alloc.rate:                   635.351 MB/sec
[info]                  ·gc.alloc.rate.norm:              127710.043 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      666.900 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 134051.670 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 7854.251 ops/s
[info]                  ·gc.alloc.rate:                   633.005 MB/sec
[info]                  ·gc.alloc.rate.norm:              126838.641 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8.341 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      666.703 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 133591.011 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeUPickle":
[info]   7796.688 ±(99.9%) 320.990 ops/s [Average]
[info]   (min, avg, max) = (7649.945, 7796.688, 7854.251), stdev = 83.360
[info]   CI (99.9%): [7475.697, 8117.678] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeUPickle:·gc.alloc.rate":
[info]   630.497 ±(99.9%) 25.634 MB/sec [Average]
[info]   (min, avg, max) = (618.757, 630.497, 635.351), stdev = 6.657
[info]   CI (99.9%): [604.863, 656.130] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeUPickle:·gc.alloc.rate.norm":
[info]   127271.307 ±(99.9%) 1294.423 B/op [Average]
[info]   (min, avg, max) = (126838.641, 127271.307, 127710.043), stdev = 336.158
[info]   CI (99.9%): [125976.883, 128565.730] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeUPickle:·gc.churn.PS_Eden_Space":
[info]   0.924 ±(99.9%) 7.822 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.924, 4.557), stdev = 2.031
[info]   CI (99.9%): [≈ 0, 8.746] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   190.071 ±(99.9%) 1609.644 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 190.071, 937.821), stdev = 418.019
[info]   CI (99.9%): [≈ 0, 1799.715] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space":
[info]   667.395 ±(99.9%) 2.830 MB/sec [Average]
[info]   (min, avg, max) = (666.703, 667.395, 668.592), stdev = 0.735
[info]   CI (99.9%): [664.565, 670.225] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   134732.824 ±(99.9%) 6235.916 B/op [Average]
[info]   (min, avg, max) = (133591.011, 134732.824, 137581.064), stdev = 1619.448
[info]   CI (99.9%): [128496.907, 140968.740] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeUPickle:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ArrayOfZonedDateTimesBenchmark.writeUPickle:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 4.000), stdev = 1.342
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 63.25% complete, ETA 00:49:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1061359.356 ops/s
[info] # Warmup Iteration   2: 1288498.899 ops/s
[info] # Warmup Iteration   3: 1353229.186 ops/s
[info] # Warmup Iteration   4: 1362036.669 ops/s
[info] # Warmup Iteration   5: 1362797.206 ops/s
[info] Iteration   1: 1361848.001 ops/s
[info]                  ·gc.alloc.rate:      55.377 MB/sec
[info]                  ·gc.alloc.rate.norm: 64.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1362475.915 ops/s
[info]                  ·gc.alloc.rate:      55.403 MB/sec
[info]                  ·gc.alloc.rate.norm: 64.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1349436.090 ops/s
[info]                  ·gc.alloc.rate:                   70.827 MB/sec
[info]                  ·gc.alloc.rate.norm:              82.610 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      511.568 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 596.670 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 1362643.077 ops/s
[info]                  ·gc.alloc.rate:      55.415 MB/sec
[info]                  ·gc.alloc.rate.norm: 64.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1363294.732 ops/s
[info]                  ·gc.alloc.rate:      55.439 MB/sec
[info]                  ·gc.alloc.rate.norm: 64.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala":
[info]   1359939.563 ±(99.9%) 22696.297 ops/s [Average]
[info]   (min, avg, max) = (1349436.090, 1359939.563, 1363294.732), stdev = 5894.156
[info]   CI (99.9%): [1337243.266, 1382635.860] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   58.492 ±(99.9%) 26.553 MB/sec [Average]
[info]   (min, avg, max) = (55.377, 58.492, 70.827), stdev = 6.896
[info]   CI (99.9%): [31.940, 85.045] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   67.722 ±(99.9%) 32.047 B/op [Average]
[info]   (min, avg, max) = (64.000, 67.722, 82.610), stdev = 8.322
[info]   CI (99.9%): [35.676, 99.769] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   102.314 ±(99.9%) 880.952 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 102.314, 511.568), stdev = 228.780
[info]   CI (99.9%): [≈ 0, 983.265] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   119.334 ±(99.9%) 1027.502 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 119.334, 596.670), stdev = 266.839
[info]   CI (99.9%): [≈ 0, 1146.837] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:·gc.count":
[info]   1.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.200, 1.000), stdev = 0.447
[info]   CI (99.9%): [1.000, 1.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readJsoniterScala:·gc.time":
[info]   3.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 3.000), stdev = 1.342
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 63.45% complete, ETA 00:49:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 10035.606 ops/s
[info] # Warmup Iteration   2: 75759.724 ops/s
[info] # Warmup Iteration   3: 81803.611 ops/s
[info] # Warmup Iteration   4: 82509.168 ops/s
[info] # Warmup Iteration   5: 82232.895 ops/s
[info] Iteration   1: 81119.371 ops/s
[info]                  ·gc.alloc.rate:                   3447.536 MB/sec
[info]                  ·gc.alloc.rate.norm:              66880.123 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.616 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3388.409 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 65733.096 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 82441.493 ops/s
[info]                  ·gc.alloc.rate:                   3529.670 MB/sec
[info]                  ·gc.alloc.rate.norm:              67390.665 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.987 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3392.940 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 64780.136 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 82165.855 ops/s
[info]                  ·gc.alloc.rate:                   3519.813 MB/sec
[info]                  ·gc.alloc.rate.norm:              67419.333 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.595 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3397.924 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 65084.644 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 81793.599 ops/s
[info]                  ·gc.alloc.rate:                   3504.680 MB/sec
[info]                  ·gc.alloc.rate.norm:              67443.126 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.202 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3400.373 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 65435.859 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 81663.521 ops/s
[info]                  ·gc.alloc.rate:                   3499.485 MB/sec
[info]                  ·gc.alloc.rate.norm:              67452.386 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.401 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3403.600 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 65604.204 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson":
[info]   81836.768 ±(99.9%) 1944.983 ops/s [Average]
[info]   (min, avg, max) = (81119.371, 81836.768, 82441.493), stdev = 505.106
[info]   CI (99.9%): [79891.784, 83781.751] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3500.237 ±(99.9%) 122.486 MB/sec [Average]
[info]   (min, avg, max) = (3447.536, 3500.237, 3529.670), stdev = 31.809
[info]   CI (99.9%): [3377.751, 3622.722] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   67317.126 ±(99.9%) 945.169 B/op [Average]
[info]   (min, avg, max) = (66880.123, 67317.126, 67452.386), stdev = 245.457
[info]   CI (99.9%): [66371.957, 68262.296] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   0.071 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.071, 0.104), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   1.360 ±(99.9%) 2.325 B/op [Average]
[info]   (min, avg, max) = (0.401, 1.360, 1.987), stdev = 0.604
[info]   CI (99.9%): [≈ 0, 3.685] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   3396.649 ±(99.9%) 23.221 MB/sec [Average]
[info]   (min, avg, max) = (3388.409, 3396.649, 3403.600), stdev = 6.030
[info]   CI (99.9%): [3373.428, 3419.870] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   65327.588 ±(99.9%) 1505.450 B/op [Average]
[info]   (min, avg, max) = (64780.136, 65327.588, 65733.096), stdev = 390.961
[info]   CI (99.9%): [63822.137, 66833.038] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.readPlayJson:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 63.65% complete, ETA 00:49:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 721737.977 ops/s
[info] # Warmup Iteration   2: 1622665.309 ops/s
[info] # Warmup Iteration   3: 1677880.164 ops/s
[info] # Warmup Iteration   4: 1684131.845 ops/s
[info] # Warmup Iteration   5: 1646689.825 ops/s
[info] Iteration   1: 1656198.858 ops/s
[info]                  ·gc.alloc.rate:                   907.076 MB/sec
[info]                  ·gc.alloc.rate.norm:              862.093 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.079 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.101 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1281.247 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 1651514.192 ops/s
[info]                  ·gc.alloc.rate:                   881.886 MB/sec
[info]                  ·gc.alloc.rate.norm:              840.409 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.117 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 642.412 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 1663212.354 ops/s
[info]                  ·gc.alloc.rate:                   893.182 MB/sec
[info]                  ·gc.alloc.rate.norm:              845.347 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.020 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.012 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 637.915 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 1673087.255 ops/s
[info]                  ·gc.alloc.rate:                   894.675 MB/sec
[info]                  ·gc.alloc.rate.norm:              841.712 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.039 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.047 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 634.145 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 1678129.733 ops/s
[info]                  ·gc.alloc.rate:                   908.829 MB/sec
[info]                  ·gc.alloc.rate.norm:              852.532 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.078 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.319 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1265.735 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala":
[info]   1664428.478 ±(99.9%) 42994.780 ops/s [Average]
[info]   (min, avg, max) = (1651514.192, 1664428.478, 1678129.733), stdev = 11165.608
[info]   CI (99.9%): [1621433.698, 1707423.259] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   897.130 ±(99.9%) 42.610 MB/sec [Average]
[info]   (min, avg, max) = (881.886, 897.130, 908.829), stdev = 11.066
[info]   CI (99.9%): [854.520, 939.739] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   848.419 ±(99.9%) 34.574 B/op [Average]
[info]   (min, avg, max) = (840.409, 848.419, 862.093), stdev = 8.979
[info]   CI (99.9%): [813.845, 882.992] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.046 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.083), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.043 ±(99.9%) 0.135 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.043, 0.079), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.179] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   943.919 ±(99.9%) 1422.897 MB/sec [Average]
[info]   (min, avg, max) = (674.012, 943.919, 1349.319), stdev = 369.522
[info]   CI (99.9%): [≈ 0, 2366.816] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   892.291 ±(99.9%) 1340.186 B/op [Average]
[info]   (min, avg, max) = (634.145, 892.291, 1281.247), stdev = 348.042
[info]   CI (99.9%): [≈ 0, 2232.477] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJacksonScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 63.86% complete, ETA 00:48:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1349064.708 ops/s
[info] # Warmup Iteration   2: 1927713.636 ops/s
[info] # Warmup Iteration   3: 2038456.547 ops/s
[info] # Warmup Iteration   4: 2028318.171 ops/s
[info] # Warmup Iteration   5: 2030857.898 ops/s
[info] Iteration   1: 2035840.367 ops/s
[info]                  ·gc.alloc.rate:      548.350 MB/sec
[info]                  ·gc.alloc.rate.norm: 424.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 2036552.442 ops/s
[info]                  ·gc.alloc.rate:                   564.531 MB/sec
[info]                  ·gc.alloc.rate.norm:              436.331 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2.550 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.971 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      675.394 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 522.017 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 2037467.980 ops/s
[info]                  ·gc.alloc.rate:                   563.756 MB/sec
[info]                  ·gc.alloc.rate.norm:              435.391 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.943 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 521.261 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 2017325.156 ops/s
[info]                  ·gc.alloc.rate:                   558.905 MB/sec
[info]                  ·gc.alloc.rate.norm:              436.117 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.694 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 526.468 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 1995514.326 ops/s
[info]                  ·gc.alloc.rate:                   554.066 MB/sec
[info]                  ·gc.alloc.rate.norm:              436.892 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.033 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.583 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 531.134 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala":
[info]   2024540.054 ±(99.9%) 70311.784 ops/s [Average]
[info]   (min, avg, max) = (1995514.326, 2024540.054, 2037467.980), stdev = 18259.747
[info]   CI (99.9%): [1954228.270, 2094851.838] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   557.922 ±(99.9%) 26.200 MB/sec [Average]
[info]   (min, avg, max) = (548.350, 557.922, 564.531), stdev = 6.804
[info]   CI (99.9%): [531.721, 584.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   433.746 ±(99.9%) 21.081 B/op [Average]
[info]   (min, avg, max) = (424.000, 433.746, 436.892), stdev = 5.475
[info]   CI (99.9%): [412.665, 454.828] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.518 ±(99.9%) 4.374 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.518, 2.550), stdev = 1.136
[info]   CI (99.9%): [≈ 0, 4.892] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.401 ±(99.9%) 3.380 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.401, 1.971), stdev = 0.878
[info]   CI (99.9%): [≈ 0, 3.781] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   539.723 ±(99.9%) 1161.797 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 539.723, 675.394), stdev = 301.715
[info]   CI (99.9%): [≈ 0, 1701.520] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   420.176 ±(99.9%) 904.589 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 420.176, 531.134), stdev = 234.919
[info]   CI (99.9%): [≈ 0, 1324.766] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 0.837
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 64.06% complete, ETA 00:48:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 708474.317 ops/s
[info] # Warmup Iteration   2: 961514.348 ops/s
[info] # Warmup Iteration   3: 989278.488 ops/s
[info] # Warmup Iteration   4: 989091.049 ops/s
[info] # Warmup Iteration   5: 989821.481 ops/s
[info] Iteration   1: 990389.177 ops/s
[info]                  ·gc.alloc.rate:      10.068 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 983843.088 ops/s
[info]                  ·gc.alloc.rate:      10.835 MB/sec
[info]                  ·gc.alloc.rate.norm: 17.335 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 989990.617 ops/s
[info]                  ·gc.alloc.rate:      10.232 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.271 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 990176.166 ops/s
[info]                  ·gc.alloc.rate:      10.065 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 990426.035 ops/s
[info]                  ·gc.alloc.rate:      10.068 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc":
[info]   988965.017 ±(99.9%) 11045.997 ops/s [Average]
[info]   (min, avg, max) = (983843.088, 988965.017, 990426.035), stdev = 2868.610
[info]   CI (99.9%): [977919.020, 1000011.013] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   10.254 ±(99.9%) 1.282 MB/sec [Average]
[info]   (min, avg, max) = (10.065, 10.254, 10.835), stdev = 0.333
[info]   CI (99.9%): [8.972, 11.535] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   16.321 ±(99.9%) 2.228 B/op [Average]
[info]   (min, avg, max) = (16.000, 16.321, 17.335), stdev = 0.579
[info]   CI (99.9%): [14.093, 18.550] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 64.26% complete, ETA 00:48:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 12589.304 ops/s
[info] # Warmup Iteration   2: 45722.507 ops/s
[info] # Warmup Iteration   3: 47716.347 ops/s
[info] # Warmup Iteration   4: 48123.611 ops/s
[info] # Warmup Iteration   5: 48163.891 ops/s
[info] Iteration   1: 48336.420 ops/s
[info]                  ·gc.alloc.rate:                   2000.772 MB/sec
[info]                  ·gc.alloc.rate.norm:              65158.916 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.356 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2024.630 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 65935.899 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 48583.437 ops/s
[info]                  ·gc.alloc.rate:                   2015.194 MB/sec
[info]                  ·gc.alloc.rate.norm:              65280.138 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.023 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2027.089 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 65665.475 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 48592.715 ops/s
[info]                  ·gc.alloc.rate:                   2015.426 MB/sec
[info]                  ·gc.alloc.rate.norm:              65265.134 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.348 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2030.078 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 65739.616 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 48603.839 ops/s
[info]                  ·gc.alloc.rate:                   2001.816 MB/sec
[info]                  ·gc.alloc.rate.norm:              64827.860 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1354.061 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 43850.640 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 48453.012 ops/s
[info]                  ·gc.alloc.rate:                   2036.370 MB/sec
[info]                  ·gc.alloc.rate.norm:              66151.609 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.352 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2033.447 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 66056.631 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson":
[info]   48513.885 ±(99.9%) 448.822 ops/s [Average]
[info]   (min, avg, max) = (48336.420, 48513.885, 48603.839), stdev = 116.558
[info]   CI (99.9%): [48065.063, 48962.706] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:·gc.alloc.rate":
[info]   2013.915 ±(99.9%) 55.378 MB/sec [Average]
[info]   (min, avg, max) = (2000.772, 2013.915, 2036.370), stdev = 14.382
[info]   CI (99.9%): [1958.537, 2069.294] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   65336.732 ±(99.9%) 1889.292 B/op [Average]
[info]   (min, avg, max) = (64827.860, 65336.732, 66151.609), stdev = 490.643
[info]   CI (99.9%): [63447.440, 67226.024] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   0.037 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.062), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   1.216 ±(99.9%) 2.846 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.216, 2.023), stdev = 0.739
[info]   CI (99.9%): [≈ 0, 4.062] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   1893.861 ±(99.9%) 1162.029 MB/sec [Average]
[info]   (min, avg, max) = (1354.061, 1893.861, 2033.447), stdev = 301.775
[info]   CI (99.9%): [731.832, 3055.890] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   61449.652 ±(99.9%) 37887.913 B/op [Average]
[info]   (min, avg, max) = (43850.640, 61449.652, 66056.631), stdev = 9839.371
[info]   CI (99.9%): [23561.740, 99337.565] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.BitSetBenchmark.writePlayJson:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.400, 3.000), stdev = 0.894
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce
[info] # Run progress: 64.46% complete, ETA 00:48:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 127597.762 ops/s
[info] # Warmup Iteration   2: 821781.481 ops/s
[info] # Warmup Iteration   3: 848732.729 ops/s
[info] # Warmup Iteration   4: 823384.317 ops/s
[info] # Warmup Iteration   5: 873591.284 ops/s
[info] Iteration   1: 873689.424 ops/s
[info]                  ·gc.alloc.rate:                   2664.520 MB/sec
[info]                  ·gc.alloc.rate.norm:              4800.612 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.150 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2020.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3639.543 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 860507.023 ops/s
[info]                  ·gc.alloc.rate:                   2652.456 MB/sec
[info]                  ·gc.alloc.rate.norm:              4850.106 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.152 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2699.891 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4936.843 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 854292.458 ops/s
[info]                  ·gc.alloc.rate:                   2633.724 MB/sec
[info]                  ·gc.alloc.rate.norm:              4852.423 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.077 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2704.196 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4982.262 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 864251.257 ops/s
[info]                  ·gc.alloc.rate:                   2677.210 MB/sec
[info]                  ·gc.alloc.rate.norm:              4876.094 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.076 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2709.459 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4934.829 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 860273.187 ops/s
[info]                  ·gc.alloc.rate:                   2652.981 MB/sec
[info]                  ·gc.alloc.rate.norm:              4852.605 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.038 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2711.619 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4959.861 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce":
[info]   862602.670 ±(99.9%) 27533.572 ops/s [Average]
[info]   (min, avg, max) = (854292.458, 862602.670, 873689.424), stdev = 7150.381
[info]   CI (99.9%): [835069.097, 890136.242] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:·gc.alloc.rate":
[info]   2656.178 ±(99.9%) 62.096 MB/sec [Average]
[info]   (min, avg, max) = (2633.724, 2656.178, 2677.210), stdev = 16.126
[info]   CI (99.9%): [2594.082, 2718.274] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   4846.368 ±(99.9%) 106.621 B/op [Average]
[info]   (min, avg, max) = (4800.612, 4846.368, 4876.094), stdev = 27.689
[info]   CI (99.9%): [4739.746, 4952.989] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   0.054 ±(99.9%) 0.108 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.083), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.162] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.099 ±(99.9%) 0.194 B/op [Average]
[info]   (min, avg, max) = (0.038, 0.099, 0.152), stdev = 0.050
[info]   CI (99.9%): [≈ 0, 0.293] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   2569.050 ±(99.9%) 1181.823 MB/sec [Average]
[info]   (min, avg, max) = (2020.083, 2569.050, 2711.619), stdev = 306.916
[info]   CI (99.9%): [1387.227, 3750.873] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   4690.668 ±(99.9%) 2263.848 B/op [Average]
[info]   (min, avg, max) = (3639.543, 4690.668, 4982.262), stdev = 587.914
[info]   CI (99.9%): [2426.819, 6954.516] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readCirce:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava
[info] # Run progress: 64.66% complete, ETA 00:47:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.680 ops/s
[info] # Warmup Iteration   2: 4003005.990 ops/s
[info] # Warmup Iteration   3: 4467845.857 ops/s
[info] # Warmup Iteration   4: 4641915.271 ops/s
[info] # Warmup Iteration   5: 4648288.553 ops/s
[info] Iteration   1: 4627150.803 ops/s
[info]                  ·gc.alloc.rate:                   292.702 MB/sec
[info]                  ·gc.alloc.rate.norm:              99.575 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      511.515 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 174.013 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 4615058.391 ops/s
[info]                  ·gc.alloc.rate:      287.053 MB/sec
[info]                  ·gc.alloc.rate.norm: 97.900 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 4736810.730 ops/s
[info]                  ·gc.alloc.rate:                   306.230 MB/sec
[info]                  ·gc.alloc.rate.norm:              101.771 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      670.633 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 222.875 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 4850323.631 ops/s
[info]                  ·gc.alloc.rate:      295.814 MB/sec
[info]                  ·gc.alloc.rate.norm: 96.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 4828902.997 ops/s
[info]                  ·gc.alloc.rate:                   312.565 MB/sec
[info]                  ·gc.alloc.rate.norm:              101.886 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4.102 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.337 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      670.691 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 218.624 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava":
[info]   4731649.310 ±(99.9%) 422176.593 ops/s [Average]
[info]   (min, avg, max) = (4615058.391, 4731649.310, 4850323.631), stdev = 109637.921
[info]   CI (99.9%): [4309472.717, 5153825.904] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   298.873 ±(99.9%) 39.866 MB/sec [Average]
[info]   (min, avg, max) = (287.053, 298.873, 312.565), stdev = 10.353
[info]   CI (99.9%): [259.007, 338.738] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   99.426 ±(99.9%) 9.749 B/op [Average]
[info]   (min, avg, max) = (96.000, 99.426, 101.886), stdev = 2.532
[info]   CI (99.9%): [89.677, 109.175] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   0.820 ±(99.9%) 7.064 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.820, 4.102), stdev = 1.834
[info]   CI (99.9%): [≈ 0, 7.884] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   0.267 ±(99.9%) 2.303 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.267, 1.337), stdev = 0.598
[info]   CI (99.9%): [≈ 0, 2.570] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   370.568 ±(99.9%) 1326.406 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 370.568, 670.691), stdev = 344.463
[info]   CI (99.9%): [≈ 0, 1696.974] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   123.102 ±(99.9%) 438.953 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 123.102, 222.875), stdev = 113.995
[info]   CI (99.9%): [≈ 0, 562.056] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readDslJsonJava:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.800, 3.000), stdev = 1.643
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala
[info] # Run progress: 64.86% complete, ETA 00:47:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 8356.469 ops/s
[info] # Warmup Iteration   2: 846902.244 ops/s
[info] # Warmup Iteration   3: 966890.467 ops/s
[info] # Warmup Iteration   4: 993042.849 ops/s
[info] # Warmup Iteration   5: 992668.079 ops/s
[info] Iteration   1: 993989.138 ops/s
[info]                  ·gc.alloc.rate:                   1160.612 MB/sec
[info]                  ·gc.alloc.rate.norm:              1838.184 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.099 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1347.929 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2134.858 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 995309.139 ops/s
[info]                  ·gc.alloc.rate:                   1153.561 MB/sec
[info]                  ·gc.alloc.rate.norm:              1824.277 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.061 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1065.981 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 993175.824 ops/s
[info]                  ·gc.alloc.rate:                   1165.023 MB/sec
[info]                  ·gc.alloc.rate.norm:              1846.034 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.099 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2137.603 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 992597.649 ops/s
[info]                  ·gc.alloc.rate:                   1164.500 MB/sec
[info]                  ·gc.alloc.rate.norm:              1846.411 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.033 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.954 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2140.464 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 992708.694 ops/s
[info]                  ·gc.alloc.rate:                   1139.997 MB/sec
[info]                  ·gc.alloc.rate.norm:              1807.387 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      675.133 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1070.377 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala":
[info]   993556.089 ±(99.9%) 4323.196 ops/s [Average]
[info]   (min, avg, max) = (992597.649, 993556.089, 995309.139), stdev = 1122.720
[info]   CI (99.9%): [989232.893, 997879.285] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1156.738 ±(99.9%) 40.122 MB/sec [Average]
[info]   (min, avg, max) = (1139.997, 1156.738, 1165.023), stdev = 10.419
[info]   CI (99.9%): [1116.617, 1196.860] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   1832.459 ±(99.9%) 64.065 B/op [Average]
[info]   (min, avg, max) = (1807.387, 1832.459, 1846.411), stdev = 16.637
[info]   CI (99.9%): [1768.394, 1896.524] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.029 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.151] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.046 ±(99.9%) 0.193 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.099), stdev = 0.050
[info]   CI (99.9%): [≈ 0, 0.239] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1079.222 ±(99.9%) 1422.316 MB/sec [Average]
[info]   (min, avg, max) = (674.061, 1079.222, 1349.954), stdev = 369.371
[info]   CI (99.9%): [≈ 0, 2501.538] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1709.857 ±(99.9%) 2255.607 B/op [Average]
[info]   (min, avg, max) = (1065.981, 1709.857, 2140.464), stdev = 585.774
[info]   CI (99.9%): [≈ 0, 3965.464] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJacksonScala:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala
[info] # Run progress: 65.06% complete, ETA 00:47:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5272029.635 ops/s
[info] # Warmup Iteration   2: 8222517.073 ops/s
[info] # Warmup Iteration   3: 8417046.146 ops/s
[info] # Warmup Iteration   4: 8453124.700 ops/s
[info] # Warmup Iteration   5: 8640863.179 ops/s
[info] Iteration   1: 8461705.821 ops/s
[info]                  ·gc.alloc.rate:                   397.277 MB/sec
[info]                  ·gc.alloc.rate.norm:              73.893 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.010 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.002 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      511.588 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 95.155 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 8637650.722 ops/s
[info]                  ·gc.alloc.rate:                   413.987 MB/sec
[info]                  ·gc.alloc.rate.norm:              75.431 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.155 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 122.836 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 8662667.009 ops/s
[info]                  ·gc.alloc.rate:      396.308 MB/sec
[info]                  ·gc.alloc.rate.norm: 72.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 8627794.370 ops/s
[info]                  ·gc.alloc.rate:                   411.132 MB/sec
[info]                  ·gc.alloc.rate.norm:              75.009 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2.768 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.505 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.005 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 122.969 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 8667308.315 ops/s
[info]                  ·gc.alloc.rate:      396.584 MB/sec
[info]                  ·gc.alloc.rate.norm: 72.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala":
[info]   8611425.247 ±(99.9%) 328549.667 ops/s [Average]
[info]   (min, avg, max) = (8461705.821, 8611425.247, 8667308.315), stdev = 85323.305
[info]   CI (99.9%): [8282875.580, 8939974.915] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   403.058 ±(99.9%) 33.653 MB/sec [Average]
[info]   (min, avg, max) = (396.308, 403.058, 413.987), stdev = 8.740
[info]   CI (99.9%): [369.404, 436.711] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   73.667 ±(99.9%) 6.245 B/op [Average]
[info]   (min, avg, max) = (72.000, 73.667, 75.431), stdev = 1.622
[info]   CI (99.9%): [67.421, 79.912] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.556 ±(99.9%) 4.762 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.556, 2.768), stdev = 1.237
[info]   CI (99.9%): [≈ 0, 5.318] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.101 ±(99.9%) 0.869 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.101, 0.505), stdev = 0.226
[info]   CI (99.9%): [≈ 0, 0.970] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   371.950 ±(99.9%) 1332.174 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 371.950, 674.155), stdev = 345.961
[info]   CI (99.9%): [≈ 0, 1704.124] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   68.192 ±(99.9%) 243.640 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 68.192, 122.969), stdev = 63.273
[info]   CI (99.9%): [≈ 0, 311.832] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readJsoniterScala:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.600, 3.000), stdev = 1.517
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson
[info] # Run progress: 65.26% complete, ETA 00:47:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3411.451 ops/s
[info] # Warmup Iteration   2: 183184.186 ops/s
[info] # Warmup Iteration   3: 490721.425 ops/s
[info] # Warmup Iteration   4: 500149.913 ops/s
[info] # Warmup Iteration   5: 489688.587 ops/s
[info] Iteration   1: 496782.385 ops/s
[info]                  ·gc.alloc.rate:                   2398.632 MB/sec
[info]                  ·gc.alloc.rate.norm:              7600.532 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.132 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2024.319 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6414.448 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 497440.536 ops/s
[info]                  ·gc.alloc.rate:                   2424.517 MB/sec
[info]                  ·gc.alloc.rate.norm:              7669.736 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.146 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.461 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2703.635 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8552.698 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 497156.330 ops/s
[info]                  ·gc.alloc.rate:                   2408.469 MB/sec
[info]                  ·gc.alloc.rate.norm:              7624.412 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.264 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2030.088 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6426.584 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 495554.338 ops/s
[info]                  ·gc.alloc.rate:                   2440.333 MB/sec
[info]                  ·gc.alloc.rate.norm:              7752.036 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.198 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2710.699 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8610.892 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 490359.740 ops/s
[info]                  ·gc.alloc.rate:                   2404.747 MB/sec
[info]                  ·gc.alloc.rate.norm:              7716.778 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.134 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2036.041 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6533.610 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson":
[info]   495458.666 ±(99.9%) 11320.222 ops/s [Average]
[info]   (min, avg, max) = (490359.740, 495458.666, 497440.536), stdev = 2939.826
[info]   CI (99.9%): [484138.443, 506778.888] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2415.340 ±(99.9%) 65.218 MB/sec [Average]
[info]   (min, avg, max) = (2398.632, 2415.340, 2440.333), stdev = 16.937
[info]   CI (99.9%): [2350.122, 2480.557] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   7672.699 ±(99.9%) 241.900 B/op [Average]
[info]   (min, avg, max) = (7600.532, 7672.699, 7752.036), stdev = 62.821
[info]   CI (99.9%): [7430.799, 7914.599] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   0.075 ±(99.9%) 0.166 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.075, 0.146), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.241] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   0.238 ±(99.9%) 0.524 B/op [Average]
[info]   (min, avg, max) = (0.132, 0.238, 0.461), stdev = 0.136
[info]   CI (99.9%): [≈ 0, 0.762] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   2300.956 ±(99.9%) 1428.009 MB/sec [Average]
[info]   (min, avg, max) = (2024.319, 2300.956, 2710.699), stdev = 370.849
[info]   CI (99.9%): [872.948, 3728.965] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   7307.646 ±(99.9%) 4483.070 B/op [Average]
[info]   (min, avg, max) = (6414.448, 7307.646, 8610.892), stdev = 1164.239
[info]   CI (99.9%): [2824.577, 11790.716] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readPlayJson:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readUPickle
[info] # Run progress: 65.46% complete, ETA 00:46:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 285823.599 ops/s
[info] # Warmup Iteration   2: 1186329.337 ops/s
[info] # Warmup Iteration   3: 1209598.505 ops/s
[info] # Warmup Iteration   4: 1165553.845 ops/s
[info] # Warmup Iteration   5: 1168715.040 ops/s
[info] Iteration   1: 1217080.137 ops/s
[info]                  ·gc.alloc.rate:                   1873.879 MB/sec
[info]                  ·gc.alloc.rate.norm:              2422.957 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.162 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2017.204 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2608.280 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 1222548.663 ops/s
[info]                  ·gc.alloc.rate:                   1878.653 MB/sec
[info]                  ·gc.alloc.rate.norm:              2418.789 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.757 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1732.680 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 1215834.920 ops/s
[info]                  ·gc.alloc.rate:                   1857.604 MB/sec
[info]                  ·gc.alloc.rate.norm:              2404.816 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.108 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2021.203 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2616.609 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 1219925.536 ops/s
[info]                  ·gc.alloc.rate:                   1889.625 MB/sec
[info]                  ·gc.alloc.rate.norm:              2437.764 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.054 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2025.069 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2612.498 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 1202663.648 ops/s
[info]                  ·gc.alloc.rate:                   1875.686 MB/sec
[info]                  ·gc.alloc.rate.norm:              2455.042 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.027 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2027.319 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2653.511 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readUPickle":
[info]   1215610.581 ±(99.9%) 29614.232 ops/s [Average]
[info]   (min, avg, max) = (1202663.648, 1215610.581, 1222548.663), stdev = 7690.722
[info]   CI (99.9%): [1185996.349, 1245224.812] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readUPickle:·gc.alloc.rate":
[info]   1875.089 ±(99.9%) 44.389 MB/sec [Average]
[info]   (min, avg, max) = (1857.604, 1875.089, 1889.625), stdev = 11.528
[info]   CI (99.9%): [1830.701, 1919.478] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readUPickle:·gc.alloc.rate.norm":
[info]   2427.874 ±(99.9%) 73.926 B/op [Average]
[info]   (min, avg, max) = (2404.816, 2427.874, 2455.042), stdev = 19.198
[info]   CI (99.9%): [2353.948, 2501.800] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readUPickle:·gc.churn.PS_Eden_Space":
[info]   0.054 ±(99.9%) 0.193 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.125), stdev = 0.050
[info]   CI (99.9%): [≈ 0, 0.247] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   0.070 ±(99.9%) 0.250 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.070, 0.162), stdev = 0.065
[info]   CI (99.9%): [≈ 0, 0.320] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space":
[info]   1887.311 ±(99.9%) 1165.829 MB/sec [Average]
[info]   (min, avg, max) = (1345.757, 1887.311, 2027.319), stdev = 302.762
[info]   CI (99.9%): [721.482, 3053.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   2444.715 ±(99.9%) 1534.280 B/op [Average]
[info]   (min, avg, max) = (1732.680, 2444.715, 2653.511), stdev = 398.448
[info]   CI (99.9%): [910.435, 3978.996] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readUPickle:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFieldsBenchmark.readUPickle:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce
[info] # Run progress: 65.66% complete, ETA 00:46:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1139.104 ops/s
[info] # Warmup Iteration   2: 4346.186 ops/s
[info] # Warmup Iteration   3: 4567.894 ops/s
[info] # Warmup Iteration   4: 4672.253 ops/s
[info] # Warmup Iteration   5: 4497.891 ops/s
[info] Iteration   1: 4658.296 ops/s
[info]                  ·gc.alloc.rate:                   2201.773 MB/sec
[info]                  ·gc.alloc.rate.norm:              743749.590 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     21.095 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2027.703 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 684949.645 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 4661.482 ops/s
[info]                  ·gc.alloc.rate:                   2188.198 MB/sec
[info]                  ·gc.alloc.rate.norm:              738898.544 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7.027 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2029.458 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 685296.024 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 4602.542 ops/s
[info]                  ·gc.alloc.rate:                   2161.537 MB/sec
[info]                  ·gc.alloc.rate.norm:              739064.579 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.146 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     49.821 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2031.963 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 694761.314 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 4606.015 ops/s
[info]                  ·gc.alloc.rate:                   2190.553 MB/sec
[info]                  ·gc.alloc.rate.norm:              748300.168 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14.225 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2035.166 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 695219.317 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 4652.012 ops/s
[info]                  ·gc.alloc.rate:                   2239.534 MB/sec
[info]                  ·gc.alloc.rate.norm:              757430.821 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.249 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     84.381 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2711.832 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 917166.476 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce":
[info]   4636.070 ±(99.9%) 112.615 ops/s [Average]
[info]   (min, avg, max) = (4602.542, 4636.070, 4661.482), stdev = 29.246
[info]   CI (99.9%): [4523.454, 4748.685] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.alloc.rate":
[info]   2196.319 ±(99.9%) 109.019 MB/sec [Average]
[info]   (min, avg, max) = (2161.537, 2196.319, 2239.534), stdev = 28.312
[info]   CI (99.9%): [2087.300, 2305.338] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   745488.740 ±(99.9%) 29717.554 B/op [Average]
[info]   (min, avg, max) = (738898.544, 745488.740, 757430.821), stdev = 7717.554
[info]   CI (99.9%): [715771.186, 775206.294] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   0.104 ±(99.9%) 0.362 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.104, 0.249), stdev = 0.094
[info]   CI (99.9%): [≈ 0, 0.466] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   35.310 ±(99.9%) 122.755 B/op [Average]
[info]   (min, avg, max) = (7.027, 35.310, 84.381), stdev = 31.879
[info]   CI (99.9%): [≈ 0, 158.065] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   2167.225 ±(99.9%) 1172.359 MB/sec [Average]
[info]   (min, avg, max) = (2027.703, 2167.225, 2711.832), stdev = 304.458
[info]   CI (99.9%): [994.866, 3339.583] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   735478.555 ±(99.9%) 391558.885 B/op [Average]
[info]   (min, avg, max) = (684949.645, 735478.555, 917166.476), stdev = 101686.599
[info]   CI (99.9%): [343919.670, 1127037.440] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readCirce:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 5.000), stdev = 0.894
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala
[info] # Run progress: 65.86% complete, ETA 00:46:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1015.425 ops/s
[info] # Warmup Iteration   2: 5484.058 ops/s
[info] # Warmup Iteration   3: 6086.477 ops/s
[info] # Warmup Iteration   4: 6171.359 ops/s
[info] # Warmup Iteration   5: 6164.559 ops/s
[info] Iteration   1: 6206.600 ops/s
[info]                  ·gc.alloc.rate:                   2343.698 MB/sec
[info]                  ·gc.alloc.rate.norm:              594367.974 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10.557 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2023.735 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 513224.577 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 6211.409 ops/s
[info]                  ·gc.alloc.rate:                   2343.146 MB/sec
[info]                  ·gc.alloc.rate.norm:              593778.611 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5.274 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2026.301 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 513486.638 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 6202.761 ops/s
[info]                  ·gc.alloc.rate:                   2367.363 MB/sec
[info]                  ·gc.alloc.rate.norm:              600787.239 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5.282 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2705.946 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 686712.490 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 6077.272 ops/s
[info]                  ·gc.alloc.rate:                   2321.668 MB/sec
[info]                  ·gc.alloc.rate.norm:              601250.108 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2032.813 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 526444.144 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 6185.454 ops/s
[info]                  ·gc.alloc.rate:                   2362.538 MB/sec
[info]                  ·gc.alloc.rate.norm:              601210.649 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5.296 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2034.619 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 517763.000 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala":
[info]   6176.699 ±(99.9%) 217.319 ops/s [Average]
[info]   (min, avg, max) = (6077.272, 6176.699, 6211.409), stdev = 56.437
[info]   CI (99.9%): [5959.380, 6394.018] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   2347.683 ±(99.9%) 69.982 MB/sec [Average]
[info]   (min, avg, max) = (2321.668, 2347.683, 2367.363), stdev = 18.174
[info]   CI (99.9%): [2277.701, 2417.665] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   598278.916 ±(99.9%) 14821.595 B/op [Average]
[info]   (min, avg, max) = (593778.611, 598278.916, 601250.108), stdev = 3849.121
[info]   CI (99.9%): [583457.321, 613100.512] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.021 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.077] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   5.282 ±(99.9%) 14.372 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 5.282, 10.557), stdev = 3.732
[info]   CI (99.9%): [≈ 0, 19.654] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   2164.683 ±(99.9%) 1165.238 MB/sec [Average]
[info]   (min, avg, max) = (2023.735, 2164.683, 2705.946), stdev = 302.609
[info]   CI (99.9%): [999.445, 3329.921] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   551526.170 ±(99.9%) 291725.473 B/op [Average]
[info]   (min, avg, max) = (513224.577, 551526.170, 686712.490), stdev = 75760.179
[info]   CI (99.9%): [259800.697, 843251.643] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJacksonScala:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala
[info] # Run progress: 66.06% complete, ETA 00:45:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 35018.080 ops/s
[info] # Warmup Iteration   2: 45685.577 ops/s
[info] # Warmup Iteration   3: 46776.000 ops/s
[info] # Warmup Iteration   4: 45983.764 ops/s
[info] # Warmup Iteration   5: 47041.569 ops/s
[info] Iteration   1: 47365.608 ops/s
[info]                  ·gc.alloc.rate:                   780.544 MB/sec
[info]                  ·gc.alloc.rate.norm:              25937.642 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.692 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.742 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 22355.338 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 47331.807 ops/s
[info]                  ·gc.alloc.rate:                   779.141 MB/sec
[info]                  ·gc.alloc.rate.norm:              25912.424 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.669 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 22371.393 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 47251.972 ops/s
[info]                  ·gc.alloc.rate:                   807.695 MB/sec
[info]                  ·gc.alloc.rate.norm:              26904.796 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.080 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1344.142 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 44774.151 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 47260.351 ops/s
[info]                  ·gc.alloc.rate:                   781.564 MB/sec
[info]                  ·gc.alloc.rate.norm:              26029.797 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.047 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 22382.339 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 47345.350 ops/s
[info]                  ·gc.alloc.rate:                   780.937 MB/sec
[info]                  ·gc.alloc.rate.norm:              25962.518 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.692 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.053 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 22342.636 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala":
[info]   47311.018 ±(99.9%) 198.640 ops/s [Average]
[info]   (min, avg, max) = (47251.972, 47311.018, 47365.608), stdev = 51.586
[info]   CI (99.9%): [47112.377, 47509.658] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   785.976 ±(99.9%) 46.876 MB/sec [Average]
[info]   (min, avg, max) = (779.141, 785.976, 807.695), stdev = 12.174
[info]   CI (99.9%): [739.100, 832.853] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   26149.435 ±(99.9%) 1634.657 B/op [Average]
[info]   (min, avg, max) = (25912.424, 26149.435, 26904.796), stdev = 424.515
[info]   CI (99.9%): [24514.779, 27784.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.021 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.062), stdev = 0.025
[info]   CI (99.9%): [≈ 0, 0.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.693 ±(99.9%) 3.270 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.693, 2.080), stdev = 0.849
[info]   CI (99.9%): [≈ 0, 3.963] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   806.730 ±(99.9%) 1156.819 MB/sec [Average]
[info]   (min, avg, max) = (672.047, 806.730, 1344.142), stdev = 300.422
[info]   CI (99.9%): [≈ 0, 1963.550] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   26845.171 ±(99.9%) 38593.524 B/op [Average]
[info]   (min, avg, max) = (22342.636, 26845.171, 44774.151), stdev = 10022.616
[info]   CI (99.9%): [≈ 0, 65438.695] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.readJsoniterScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce
[info] # Run progress: 66.27% complete, ETA 00:45:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1416.108 ops/s
[info] # Warmup Iteration   2: 3802.521 ops/s
[info] # Warmup Iteration   3: 4346.952 ops/s
[info] # Warmup Iteration   4: 4481.214 ops/s
[info] # Warmup Iteration   5: 4415.480 ops/s
[info] Iteration   1: 4489.207 ops/s
[info]                  ·gc.alloc.rate:                   849.862 MB/sec
[info]                  ·gc.alloc.rate.norm:              297988.623 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7.296 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.885 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 236285.663 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 4494.728 ops/s
[info]                  ·gc.alloc.rate:                   846.306 MB/sec
[info]                  ·gc.alloc.rate.norm:              296265.963 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14.577 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.217 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 236022.890 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 4499.091 ops/s
[info]                  ·gc.alloc.rate:                   864.771 MB/sec
[info]                  ·gc.alloc.rate.norm:              302372.733 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.528 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 471521.401 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 4454.810 ops/s
[info]                  ·gc.alloc.rate:                   840.459 MB/sec
[info]                  ·gc.alloc.rate.norm:              296951.242 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22.061 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 238141.587 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 4518.054 ops/s
[info]                  ·gc.alloc.rate:                   848.946 MB/sec
[info]                  ·gc.alloc.rate.norm:              295739.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7.250 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.594 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 235001.657 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce":
[info]   4491.178 ±(99.9%) 88.732 ops/s [Average]
[info]   (min, avg, max) = (4454.810, 4491.178, 4518.054), stdev = 23.043
[info]   CI (99.9%): [4402.446, 4579.910] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.alloc.rate":
[info]   850.069 ±(99.9%) 34.654 MB/sec [Average]
[info]   (min, avg, max) = (840.459, 850.069, 864.771), stdev = 9.000
[info]   CI (99.9%): [815.414, 884.723] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   297863.514 ±(99.9%) 10232.617 B/op [Average]
[info]   (min, avg, max) = (295739.011, 297863.514, 302372.733), stdev = 2657.378
[info]   CI (99.9%): [287630.897, 308096.131] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   0.029 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   10.237 ±(99.9%) 32.275 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 10.237, 22.061), stdev = 8.382
[info]   CI (99.9%): [≈ 0, 42.511] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   809.047 ±(99.9%) 1161.274 MB/sec [Average]
[info]   (min, avg, max) = (673.885, 809.047, 1348.528), stdev = 301.579
[info]   CI (99.9%): [≈ 0, 1970.321] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   283394.639 ±(99.9%) 404980.554 B/op [Average]
[info]   (min, avg, max) = (235001.657, 283394.639, 471521.401), stdev = 105172.164
[info]   CI (99.9%): [≈ 0, 688375.193] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeCirce:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala
[info] # Run progress: 66.47% complete, ETA 00:45:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
[info] WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/tmp/sbt_c0b5d35/target/1bdf7fe1/jackson-module-afterburner-2.9.5.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int)
[info] WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
[info] WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
[info] WARNING: All illegal access operations will be denied in a future release
[info] 1376.098 ops/s
[info] # Warmup Iteration   2: 4517.971 ops/s
[info] # Warmup Iteration   3: 4786.360 ops/s
[info] # Warmup Iteration   4: 4808.582 ops/s
[info] # Warmup Iteration   5: 4838.728 ops/s
[info] Iteration   1: 4812.672 ops/s
[info]                  ·gc.alloc.rate:                   575.079 MB/sec
[info]                  ·gc.alloc.rate.norm:              188107.123 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1.800 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     588.793 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.902 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 220431.847 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 4876.022 ops/s
[info]                  ·gc.alloc.rate:                   591.760 MB/sec
[info]                  ·gc.alloc.rate.norm:              190979.586 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     26.876 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.196 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 217584.358 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 4871.332 ops/s
[info]                  ·gc.alloc.rate:                   585.595 MB/sec
[info]                  ·gc.alloc.rate.norm:              189184.714 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6.724 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.055 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 217762.962 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 4871.995 ops/s
[info]                  ·gc.alloc.rate:                   591.697 MB/sec
[info]                  ·gc.alloc.rate.norm:              191153.720 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.259 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 217503.146 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 4874.724 ops/s
[info]                  ·gc.alloc.rate:                   591.934 MB/sec
[info]                  ·gc.alloc.rate.norm:              191144.174 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13.441 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.286 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 217413.933 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala":
[info]   4861.349 ±(99.9%) 105.043 ops/s [Average]
[info]   (min, avg, max) = (4812.672, 4861.349, 4876.022), stdev = 27.279
[info]   CI (99.9%): [4756.305, 4966.392] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   587.213 ±(99.9%) 28.094 MB/sec [Average]
[info]   (min, avg, max) = (575.079, 587.213, 591.934), stdev = 7.296
[info]   CI (99.9%): [559.120, 615.307] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   190113.863 ±(99.9%) 5371.146 B/op [Average]
[info]   (min, avg, max) = (188107.123, 190113.863, 191153.720), stdev = 1394.870
[info]   CI (99.9%): [184742.717, 195485.009] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.389 ±(99.9%) 3.039 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.389, 1.800), stdev = 0.789
[info]   CI (99.9%): [≈ 0, 3.429] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   127.167 ±(99.9%) 994.421 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 127.167, 588.793), stdev = 258.248
[info]   CI (99.9%): [≈ 0, 1121.588] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   673.740 ±(99.9%) 1.690 MB/sec [Average]
[info]   (min, avg, max) = (673.259, 673.740, 674.196), stdev = 0.439
[info]   CI (99.9%): [672.050, 675.430] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   218139.249 ±(99.9%) 4959.793 B/op [Average]
[info]   (min, avg, max) = (217413.933, 218139.249, 220431.847), stdev = 1288.042
[info]   CI (99.9%): [213179.456, 223099.042] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJacksonScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala
[info] # Run progress: 66.67% complete, ETA 00:45:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5267.987 ops/s
[info] # Warmup Iteration   2: 6122.143 ops/s
[info] # Warmup Iteration   3: 6479.668 ops/s
[info] # Warmup Iteration   4: 6521.490 ops/s
[info] # Warmup Iteration   5: 6504.698 ops/s
[info] Iteration   1: 6548.078 ops/s
[info]                  ·gc.alloc.rate:      175.329 MB/sec
[info]                  ·gc.alloc.rate.norm: 42138.946 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 6533.913 ops/s
[info]                  ·gc.alloc.rate:      174.859 MB/sec
[info]                  ·gc.alloc.rate.norm: 42113.053 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 6419.863 ops/s
[info]                  ·gc.alloc.rate:                   182.637 MB/sec
[info]                  ·gc.alloc.rate.norm:              44779.800 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      511.523 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 125417.594 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 6547.552 ops/s
[info]                  ·gc.alloc.rate:      175.030 MB/sec
[info]                  ·gc.alloc.rate.norm: 42072.062 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 6502.190 ops/s
[info]                  ·gc.alloc.rate:      177.849 MB/sec
[info]                  ·gc.alloc.rate.norm: 43050.999 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala":
[info]   6510.319 ±(99.9%) 207.515 ops/s [Average]
[info]   (min, avg, max) = (6419.863, 6510.319, 6548.078), stdev = 53.891
[info]   CI (99.9%): [6302.804, 6717.835] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   177.141 ±(99.9%) 12.720 MB/sec [Average]
[info]   (min, avg, max) = (174.859, 177.141, 182.637), stdev = 3.303
[info]   CI (99.9%): [164.421, 189.862] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   42830.972 ±(99.9%) 4480.913 B/op [Average]
[info]   (min, avg, max) = (42072.062, 42830.972, 44779.800), stdev = 1163.679
[info]   CI (99.9%): [38350.059, 47311.885] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   102.305 ±(99.9%) 880.874 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 102.305, 511.523), stdev = 228.760
[info]   CI (99.9%): [≈ 0, 983.178] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   25083.519 ±(99.9%) 215976.661 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 25083.519, 125417.594), stdev = 56088.453
[info]   CI (99.9%): [≈ 0, 241060.179] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:·gc.count":
[info]   1.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.200, 1.000), stdev = 0.447
[info]   CI (99.9%): [1.000, 1.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScala:·gc.time":
[info]   2.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 0.400, 2.000), stdev = 0.894
[info]   CI (99.9%): [2.000, 2.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 66.87% complete, ETA 00:44:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5051.360 ops/s
[info] # Warmup Iteration   2: 6193.126 ops/s
[info] # Warmup Iteration   3: 6623.173 ops/s
[info] # Warmup Iteration   4: 6513.931 ops/s
[info] # Warmup Iteration   5: 6594.499 ops/s
[info] Iteration   1: 6514.055 ops/s
[info]                  ·gc.alloc.rate:      126.650 MB/sec
[info]                  ·gc.alloc.rate.norm: 30593.187 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 6533.975 ops/s
[info]                  ·gc.alloc.rate:                   135.019 MB/sec
[info]                  ·gc.alloc.rate.norm:              32522.346 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      511.599 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 123229.743 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 6628.795 ops/s
[info]                  ·gc.alloc.rate:      128.672 MB/sec
[info]                  ·gc.alloc.rate.norm: 30552.062 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 6636.599 ops/s
[info]                  ·gc.alloc.rate:      128.829 MB/sec
[info]                  ·gc.alloc.rate.norm: 30552.066 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 6552.894 ops/s
[info]                  ·gc.alloc.rate:      134.554 MB/sec
[info]                  ·gc.alloc.rate.norm: 32317.292 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc":
[info]   6573.263 ±(99.9%) 215.768 ops/s [Average]
[info]   (min, avg, max) = (6514.055, 6573.263, 6636.599), stdev = 56.034
[info]   CI (99.9%): [6357.496, 6789.031] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   130.745 ±(99.9%) 14.601 MB/sec [Average]
[info]   (min, avg, max) = (126.650, 130.745, 135.019), stdev = 3.792
[info]   CI (99.9%): [116.143, 145.346] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   31307.391 ±(99.9%) 3920.827 B/op [Average]
[info]   (min, avg, max) = (30552.062, 31307.391, 32522.346), stdev = 1018.226
[info]   CI (99.9%): [27386.564, 35228.217] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space":
[info]   102.320 ±(99.9%) 881.004 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 102.320, 511.599), stdev = 228.794
[info]   CI (99.9%): [≈ 0, 983.324] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   24645.949 ±(99.9%) 212209.050 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 24645.949, 123229.743), stdev = 55110.016
[info]   CI (99.9%): [≈ 0, 236854.998] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   1.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.200, 1.000), stdev = 0.447
[info]   CI (99.9%): [1.000, 1.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   2.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 0.400, 2.000), stdev = 0.894
[info]   CI (99.9%): [2.000, 2.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce
[info] # Run progress: 67.07% complete, ETA 00:44:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2535.370 ops/s
[info] # Warmup Iteration   2: 6842.112 ops/s
[info] # Warmup Iteration   3: 7526.470 ops/s
[info] # Warmup Iteration   4: 7615.142 ops/s
[info] # Warmup Iteration   5: 7441.980 ops/s
[info] Iteration   1: 7567.456 ops/s
[info]                  ·gc.alloc.rate:                   1460.987 MB/sec
[info]                  ·gc.alloc.rate.norm:              303900.842 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.046 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9.537 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2025.313 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 421286.777 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 7592.973 ops/s
[info]                  ·gc.alloc.rate:                   1428.877 MB/sec
[info]                  ·gc.alloc.rate.norm:              296224.863 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.891 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 280057.461 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 7595.803 ops/s
[info]                  ·gc.alloc.rate:                   1429.015 MB/sec
[info]                  ·gc.alloc.rate.norm:              296124.562 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.004 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.875 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1351.612 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 280084.890 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 7526.262 ops/s
[info]                  ·gc.alloc.rate:                   1417.252 MB/sec
[info]                  ·gc.alloc.rate.norm:              296404.292 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.129 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     27.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1352.673 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 282898.227 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 7515.569 ops/s
[info]                  ·gc.alloc.rate:                   1437.190 MB/sec
[info]                  ·gc.alloc.rate.norm:              301011.566 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.004 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.884 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1353.683 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 283521.447 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce":
[info]   7559.613 ±(99.9%) 143.255 ops/s [Average]
[info]   (min, avg, max) = (7515.569, 7559.613, 7595.803), stdev = 37.203
[info]   CI (99.9%): [7416.357, 7702.868] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:·gc.alloc.rate":
[info]   1434.664 ±(99.9%) 62.915 MB/sec [Average]
[info]   (min, avg, max) = (1417.252, 1434.664, 1460.987), stdev = 16.339
[info]   CI (99.9%): [1371.749, 1497.580] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   298733.225 ±(99.9%) 13670.604 B/op [Average]
[info]   (min, avg, max) = (296124.562, 298733.225, 303900.842), stdev = 3550.212
[info]   CI (99.9%): [285062.621, 312403.829] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   0.037 ±(99.9%) 0.212 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.129), stdev = 0.055
[info]   CI (99.9%): [≈ 0, 0.248] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   7.659 ±(99.9%) 44.248 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 7.659, 27.000), stdev = 11.491
[info]   CI (99.9%): [≈ 0, 51.907] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1486.835 ±(99.9%) 1159.123 MB/sec [Average]
[info]   (min, avg, max) = (1350.891, 1486.835, 2025.313), stdev = 301.020
[info]   CI (99.9%): [327.712, 2645.957] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   309569.761 ±(99.9%) 240556.714 B/op [Average]
[info]   (min, avg, max) = (280057.461, 309569.761, 421286.777), stdev = 62471.815
[info]   CI (99.9%): [69013.047, 550126.474] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readCirce:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.200, 3.000), stdev = 0.837
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava
[info] # Run progress: 67.27% complete, ETA 00:44:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.825 ops/s
[info] # Warmup Iteration   2: 15133.221 ops/s
[info] # Warmup Iteration   3: 17091.415 ops/s
[info] # Warmup Iteration   4: 17163.226 ops/s
[info] # Warmup Iteration   5: 17045.589 ops/s
[info] Iteration   1: 17107.950 ops/s
[info]                  ·gc.alloc.rate:                   410.398 MB/sec
[info]                  ·gc.alloc.rate.norm:              37761.032 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.034 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3.166 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      670.053 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 61652.101 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 17109.759 ops/s
[info]                  ·gc.alloc.rate:      397.729 MB/sec
[info]                  ·gc.alloc.rate.norm: 36580.634 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 16247.553 ops/s
[info]                  ·gc.alloc.rate:                   399.383 MB/sec
[info]                  ·gc.alloc.rate.norm:              38677.466 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4.074 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     394.505 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      670.310 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 64914.920 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 17170.280 ops/s
[info]                  ·gc.alloc.rate:      395.794 MB/sec
[info]                  ·gc.alloc.rate.norm: 36280.026 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 17142.744 ops/s
[info]                  ·gc.alloc.rate:                   413.005 MB/sec
[info]                  ·gc.alloc.rate.norm:              37906.070 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      669.692 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 61465.085 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava":
[info]   16955.657 ±(99.9%) 1527.469 ops/s [Average]
[info]   (min, avg, max) = (16247.553, 16955.657, 17170.280), stdev = 396.679
[info]   CI (99.9%): [15428.188, 18483.127] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   403.262 ±(99.9%) 30.276 MB/sec [Average]
[info]   (min, avg, max) = (395.794, 403.262, 413.005), stdev = 7.863
[info]   CI (99.9%): [372.986, 433.538] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   37441.046 ±(99.9%) 3819.545 B/op [Average]
[info]   (min, avg, max) = (36280.026, 37441.046, 38677.466), stdev = 991.924
[info]   CI (99.9%): [33621.501, 41260.590] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   0.822 ±(99.9%) 7.000 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.822, 4.074), stdev = 1.818
[info]   CI (99.9%): [≈ 0, 7.822] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   79.534 ±(99.9%) 678.019 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 79.534, 394.505), stdev = 176.079
[info]   CI (99.9%): [≈ 0, 757.553] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   402.011 ±(99.9%) 1413.125 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 402.011, 670.310), stdev = 366.984
[info]   CI (99.9%): [≈ 0, 1815.136] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   37606.421 ±(99.9%) 132297.368 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 37606.421, 64914.920), stdev = 34357.206
[info]   CI (99.9%): [≈ 0, 169903.790] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readDslJsonJava:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 3.000), stdev = 1.517
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala
[info] # Run progress: 67.47% complete, ETA 00:44:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3796.900 ops/s
[info] # Warmup Iteration   2: 13713.715 ops/s
[info] # Warmup Iteration   3: 14193.674 ops/s
[info] # Warmup Iteration   4: 14394.611 ops/s
[info] # Warmup Iteration   5: 14211.222 ops/s
[info] Iteration   1: 14119.446 ops/s
[info]                  ·gc.alloc.rate:      361.565 MB/sec
[info]                  ·gc.alloc.rate.norm: 40310.985 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 14366.958 ops/s
[info]                  ·gc.alloc.rate:                   377.639 MB/sec
[info]                  ·gc.alloc.rate.norm:              41368.809 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.771 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 73808.951 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 14177.552 ops/s
[info]                  ·gc.alloc.rate:                   383.460 MB/sec
[info]                  ·gc.alloc.rate.norm:              42554.453 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1.437 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     159.449 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.007 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 74797.928 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 14386.954 ops/s
[info]                  ·gc.alloc.rate:      360.288 MB/sec
[info]                  ·gc.alloc.rate.norm: 39417.570 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 14168.927 ops/s
[info]                  ·gc.alloc.rate:                   368.259 MB/sec
[info]                  ·gc.alloc.rate.norm:              40911.836 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.037 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 74882.430 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala":
[info]   14243.967 ±(99.9%) 475.985 ops/s [Average]
[info]   (min, avg, max) = (14119.446, 14243.967, 14386.954), stdev = 123.612
[info]   CI (99.9%): [13767.982, 14719.953] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   370.242 ±(99.9%) 38.876 MB/sec [Average]
[info]   (min, avg, max) = (360.288, 370.242, 383.460), stdev = 10.096
[info]   CI (99.9%): [331.366, 409.118] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   40912.731 ±(99.9%) 4515.635 B/op [Average]
[info]   (min, avg, max) = (39417.570, 40912.731, 42554.453), stdev = 1172.696
[info]   CI (99.9%): [36397.096, 45428.366] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.287 ±(99.9%) 2.474 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.287, 1.437), stdev = 0.643
[info]   CI (99.9%): [≈ 0, 2.762] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   31.890 ±(99.9%) 274.581 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 31.890, 159.449), stdev = 71.308
[info]   CI (99.9%): [≈ 0, 306.471] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   404.363 ±(99.9%) 1421.393 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 404.363, 674.037), stdev = 369.131
[info]   CI (99.9%): [≈ 0, 1825.757] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   44697.862 ±(99.9%) 157127.687 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 44697.862, 74882.430), stdev = 40805.561
[info]   CI (99.9%): [≈ 0, 201825.549] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJacksonScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 1.095
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala
[info] # Run progress: 67.67% complete, ETA 00:43:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 17869.073 ops/s
[info] # Warmup Iteration   2: 22073.961 ops/s
[info] # Warmup Iteration   3: 23554.836 ops/s
[info] # Warmup Iteration   4: 23509.700 ops/s
[info] # Warmup Iteration   5: 23300.050 ops/s
[info] Iteration   1: 23648.870 ops/s
[info]                  ·gc.alloc.rate:      396.270 MB/sec
[info]                  ·gc.alloc.rate.norm: 26376.017 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 23611.151 ops/s
[info]                  ·gc.alloc.rate:                   408.485 MB/sec
[info]                  ·gc.alloc.rate.norm:              27227.224 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.469 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 44889.496 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 23434.884 ops/s
[info]                  ·gc.alloc.rate:      402.533 MB/sec
[info]                  ·gc.alloc.rate.norm: 27037.475 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 23558.451 ops/s
[info]                  ·gc.alloc.rate:                   415.063 MB/sec
[info]                  ·gc.alloc.rate.norm:              27731.305 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3.056 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     204.146 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.386 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 44990.465 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 23571.302 ops/s
[info]                  ·gc.alloc.rate:                   411.054 MB/sec
[info]                  ·gc.alloc.rate.norm:              27450.512 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.695 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 44923.086 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala":
[info]   23564.931 ±(99.9%) 311.503 ops/s [Average]
[info]   (min, avg, max) = (23434.884, 23564.931, 23648.870), stdev = 80.896
[info]   CI (99.9%): [23253.429, 23876.434] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   406.681 ±(99.9%) 28.442 MB/sec [Average]
[info]   (min, avg, max) = (396.270, 406.681, 415.063), stdev = 7.386
[info]   CI (99.9%): [378.239, 435.123] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   27164.506 ±(99.9%) 1968.019 B/op [Average]
[info]   (min, avg, max) = (26376.017, 27164.506, 27731.305), stdev = 511.088
[info]   CI (99.9%): [25196.487, 29132.525] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.611 ±(99.9%) 5.262 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.611, 3.056), stdev = 1.366
[info]   CI (99.9%): [≈ 0, 5.873] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   40.829 ±(99.9%) 351.552 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 40.829, 204.146), stdev = 91.297
[info]   CI (99.9%): [≈ 0, 392.381] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   403.910 ±(99.9%) 1419.801 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 403.910, 673.469), stdev = 368.718
[info]   CI (99.9%): [≈ 0, 1823.711] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   26960.610 ±(99.9%) 94770.445 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 26960.610, 44990.465), stdev = 24611.584
[info]   CI (99.9%): [≈ 0, 121731.054] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readJsoniterScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 3.000), stdev = 1.304
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson
[info] # Run progress: 67.87% complete, ETA 00:43:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 164.790 ops/s
[info] # Warmup Iteration   2: 2963.047 ops/s
[info] # Warmup Iteration   3: 3305.708 ops/s
[info] # Warmup Iteration   4: 3333.962 ops/s
[info] # Warmup Iteration   5: 3398.841 ops/s
[info] Iteration   1: 3326.030 ops/s
[info]                  ·gc.alloc.rate:                   1989.860 MB/sec
[info]                  ·gc.alloc.rate.norm:              941837.879 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2022.932 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 957491.400 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 3329.720 ops/s
[info]                  ·gc.alloc.rate:                   1986.556 MB/sec
[info]                  ·gc.alloc.rate.norm:              939117.233 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29.512 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2025.322 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 957443.382 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 3327.681 ops/s
[info]                  ·gc.alloc.rate:                   1997.487 MB/sec
[info]                  ·gc.alloc.rate.norm:              944743.313 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9.843 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2028.219 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 959278.524 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 3329.342 ops/s
[info]                  ·gc.alloc.rate:                   2011.446 MB/sec
[info]                  ·gc.alloc.rate.norm:              950987.769 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     29.521 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2031.370 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 960407.447 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 3404.711 ops/s
[info]                  ·gc.alloc.rate:                   2070.269 MB/sec
[info]                  ·gc.alloc.rate.norm:              956721.191 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9.621 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2033.871 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 939900.918 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson":
[info]   3343.497 ±(99.9%) 131.888 ops/s [Average]
[info]   (min, avg, max) = (3326.030, 3343.497, 3404.711), stdev = 34.251
[info]   CI (99.9%): [3211.609, 3475.385] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2011.123 ±(99.9%) 132.553 MB/sec [Average]
[info]   (min, avg, max) = (1986.556, 2011.123, 2070.269), stdev = 34.424
[info]   CI (99.9%): [1878.571, 2143.676] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   946681.477 ±(99.9%) 27483.909 B/op [Average]
[info]   (min, avg, max) = (939117.233, 946681.477, 956721.191), stdev = 7137.484
[info]   CI (99.9%): [919197.568, 974165.387] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   0.033 ±(99.9%) 0.108 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.062), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   15.699 ±(99.9%) 50.922 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 15.699, 29.521), stdev = 13.224
[info]   CI (99.9%): [≈ 0, 66.621] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   2028.343 ±(99.9%) 17.019 MB/sec [Average]
[info]   (min, avg, max) = (2022.932, 2028.343, 2033.871), stdev = 4.420
[info]   CI (99.9%): [2011.323, 2045.362] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   954904.334 ±(99.9%) 32654.502 B/op [Average]
[info]   (min, avg, max) = (939900.918, 954904.334, 960407.447), stdev = 8480.271
[info]   CI (99.9%): [922249.832, 987558.837] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readPlayJson:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readUPickle
[info] # Run progress: 68.07% complete, ETA 00:43:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4405.850 ops/s
[info] # Warmup Iteration   2: 8637.244 ops/s
[info] # Warmup Iteration   3: 8682.715 ops/s
[info] # Warmup Iteration   4: 8596.289 ops/s
[info] # Warmup Iteration   5: 8655.016 ops/s
[info] Iteration   1: 8472.205 ops/s
[info]                  ·gc.alloc.rate:                   1039.481 MB/sec
[info]                  ·gc.alloc.rate.norm:              193138.793 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3.867 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1346.603 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 250203.053 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 8218.224 ops/s
[info]                  ·gc.alloc.rate:                   988.602 MB/sec
[info]                  ·gc.alloc.rate.norm:              189340.262 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 129094.758 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 8595.539 ops/s
[info]                  ·gc.alloc.rate:                   1050.447 MB/sec
[info]                  ·gc.alloc.rate.norm:              192359.897 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.436 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 246928.244 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 8670.240 ops/s
[info]                  ·gc.alloc.rate:                   1045.686 MB/sec
[info]                  ·gc.alloc.rate.norm:              189828.952 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.318 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 122412.452 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 8581.543 ops/s
[info]                  ·gc.alloc.rate:                   1045.470 MB/sec
[info]                  ·gc.alloc.rate.norm:              191749.358 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3.816 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.710 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 247549.913 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readUPickle":
[info]   8507.550 ±(99.9%) 679.734 ops/s [Average]
[info]   (min, avg, max) = (8218.224, 8507.550, 8670.240), stdev = 176.525
[info]   CI (99.9%): [7827.817, 9187.284] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readUPickle:·gc.alloc.rate":
[info]   1033.937 ±(99.9%) 98.730 MB/sec [Average]
[info]   (min, avg, max) = (988.602, 1033.937, 1050.447), stdev = 25.640
[info]   CI (99.9%): [935.207, 1132.667] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readUPickle:·gc.alloc.rate.norm":
[info]   191283.452 ±(99.9%) 6300.731 B/op [Average]
[info]   (min, avg, max) = (189340.262, 191283.452, 193138.793), stdev = 1636.280
[info]   CI (99.9%): [184982.721, 197584.183] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readUPickle:·gc.churn.PS_Eden_Space":
[info]   0.008 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   1.537 ±(99.9%) 8.103 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.537, 3.867), stdev = 2.104
[info]   CI (99.9%): [≈ 0, 9.639] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readUPickle:·gc.churn.PS_Survivor_Space":
[info]   1078.622 ±(99.9%) 1421.676 MB/sec [Average]
[info]   (min, avg, max) = (674.042, 1078.622, 1349.710), stdev = 369.205
[info]   CI (99.9%): [≈ 0, 2500.298] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   199237.684 ±(99.9%) 258510.422 B/op [Average]
[info]   (min, avg, max) = (122412.452, 199237.684, 250203.053), stdev = 67134.336
[info]   CI (99.9%): [≈ 0, 457748.106] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readUPickle:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.readUPickle:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce
[info] # Run progress: 68.27% complete, ETA 00:43:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3490.033 ops/s
[info] # Warmup Iteration   2: 9190.398 ops/s
[info] # Warmup Iteration   3: 9958.209 ops/s
[info] # Warmup Iteration   4: 9982.085 ops/s
[info] # Warmup Iteration   5: 9886.175 ops/s
[info] Iteration   1: 9932.959 ops/s
[info]                  ·gc.alloc.rate:                   1773.194 MB/sec
[info]                  ·gc.alloc.rate.norm:              281030.682 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3.298 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.858 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 214095.261 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 9890.109 ops/s
[info]                  ·gc.alloc.rate:                   1802.392 MB/sec
[info]                  ·gc.alloc.rate.norm:              286853.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3.312 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2027.579 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 322691.765 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 9825.087 ops/s
[info]                  ·gc.alloc.rate:                   1803.660 MB/sec
[info]                  ·gc.alloc.rate.norm:              288960.772 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3.334 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2030.730 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 325339.190 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 9990.653 ops/s
[info]                  ·gc.alloc.rate:                   1806.373 MB/sec
[info]                  ·gc.alloc.rate.norm:              284587.921 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3.279 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1355.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 213482.225 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 9974.339 ops/s
[info]                  ·gc.alloc.rate:                   1830.352 MB/sec
[info]                  ·gc.alloc.rate.norm:              288864.059 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3.284 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2033.476 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 320920.799 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce":
[info]   9922.629 ±(99.9%) 258.164 ops/s [Average]
[info]   (min, avg, max) = (9825.087, 9922.629, 9990.653), stdev = 67.044
[info]   CI (99.9%): [9664.465, 10180.794] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:·gc.alloc.rate":
[info]   1803.194 ±(99.9%) 78.172 MB/sec [Average]
[info]   (min, avg, max) = (1773.194, 1803.194, 1830.352), stdev = 20.301
[info]   CI (99.9%): [1725.022, 1881.366] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   286059.288 ±(99.9%) 12824.312 B/op [Average]
[info]   (min, avg, max) = (281030.682, 286059.288, 288960.772), stdev = 3330.433
[info]   CI (99.9%): [273234.976, 298883.600] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   0.021 ±(99.9%) 0.001 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.021, 0.021), stdev = 0.001
[info]   CI (99.9%): [0.021, 0.021] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   3.302 ±(99.9%) 0.086 B/op [Average]
[info]   (min, avg, max) = (3.279, 3.302, 3.334), stdev = 0.022
[info]   CI (99.9%): [3.215, 3.388] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   1759.537 ±(99.9%) 1429.245 MB/sec [Average]
[info]   (min, avg, max) = (1350.858, 1759.537, 2033.476), stdev = 371.170
[info]   CI (99.9%): [330.292, 3188.782] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   279305.848 ±(99.9%) 230382.941 B/op [Average]
[info]   (min, avg, max) = (213482.225, 279305.848, 325339.190), stdev = 59829.718
[info]   CI (99.9%): [48922.907, 509688.789] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeCirce:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava
[info] # Run progress: 68.47% complete, ETA 00:42:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.850 ops/s
[info] # Warmup Iteration   2: 46710.655 ops/s
[info] # Warmup Iteration   3: 51701.346 ops/s
[info] # Warmup Iteration   4: 48750.858 ops/s
[info] # Warmup Iteration   5: 51797.200 ops/s
[info] Iteration   1: 52103.119 ops/s
[info]                  ·gc.alloc.rate:      486.973 MB/sec
[info]                  ·gc.alloc.rate.norm: 14712.008 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 51656.395 ops/s
[info]                  ·gc.alloc.rate:                   496.631 MB/sec
[info]                  ·gc.alloc.rate.norm:              15130.871 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3.847 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     117.198 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      671.455 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 20457.248 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 52258.982 ops/s
[info]                  ·gc.alloc.rate:                   505.691 MB/sec
[info]                  ·gc.alloc.rate.norm:              15231.033 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      670.054 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 20181.512 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   4: 52685.062 ops/s
[info]                  ·gc.alloc.rate:                   510.352 MB/sec
[info]                  ·gc.alloc.rate.norm:              15247.615 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.622 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      670.046 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 20018.739 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 52672.143 ops/s
[info]                  ·gc.alloc.rate:      492.571 MB/sec
[info]                  ·gc.alloc.rate.norm: 14720.042 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava":
[info]   52275.140 ±(99.9%) 1654.371 ops/s [Average]
[info]   (min, avg, max) = (51656.395, 52275.140, 52685.062), stdev = 429.635
[info]   CI (99.9%): [50620.769, 53929.511] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   498.444 ±(99.9%) 36.717 MB/sec [Average]
[info]   (min, avg, max) = (486.973, 498.444, 510.352), stdev = 9.535
[info]   CI (99.9%): [461.727, 535.160] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   15008.314 ±(99.9%) 1041.788 B/op [Average]
[info]   (min, avg, max) = (14712.008, 15008.314, 15247.615), stdev = 270.549
[info]   CI (99.9%): [13966.526, 16050.102] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   0.774 ±(99.9%) 6.615 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.774, 3.847), stdev = 1.718
[info]   CI (99.9%): [≈ 0, 7.389] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   23.564 ±(99.9%) 201.557 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 23.564, 117.198), stdev = 52.344
[info]   CI (99.9%): [≈ 0, 225.120] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   402.311 ±(99.9%) 1414.181 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 402.311, 671.455), stdev = 367.258
[info]   CI (99.9%): [≈ 0, 1816.492] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   12131.500 ±(99.9%) 42648.202 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 12131.500, 20457.248), stdev = 11075.603
[info]   CI (99.9%): [≈ 0, 54779.702] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 3.000), stdev = 1.414
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala
[info] # Run progress: 68.67% complete, ETA 00:42:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
[info] WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/tmp/sbt_c0b5d35/target/1bdf7fe1/jackson-module-afterburner-2.9.5.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int)
[info] WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
[info] WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
[info] WARNING: All illegal access operations will be denied in a future release
[info] 7610.106 ops/s
[info] # Warmup Iteration   2: 38915.976 ops/s
[info] # Warmup Iteration   3: 39322.862 ops/s
[info] # Warmup Iteration   4: 38927.766 ops/s
[info] # Warmup Iteration   5: 40071.249 ops/s
[info] Iteration   1: 39023.635 ops/s
[info]                  ·gc.alloc.rate:                   579.273 MB/sec
[info]                  ·gc.alloc.rate.norm:              23365.349 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1.332 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     53.733 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.735 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 27175.552 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 40429.897 ops/s
[info]                  ·gc.alloc.rate:                   599.387 MB/sec
[info]                  ·gc.alloc.rate.norm:              23334.893 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.067 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 26242.276 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 40017.347 ops/s
[info]                  ·gc.alloc.rate:                   598.662 MB/sec
[info]                  ·gc.alloc.rate.norm:              23547.661 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.035 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 26512.403 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 40422.506 ops/s
[info]                  ·gc.alloc.rate:                   602.821 MB/sec
[info]                  ·gc.alloc.rate.norm:              23474.242 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.004 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 26246.170 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 40442.428 ops/s
[info]                  ·gc.alloc.rate:      593.656 MB/sec
[info]                  ·gc.alloc.rate.norm: 23108.228 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala":
[info]   40067.163 ±(99.9%) 2350.234 ops/s [Average]
[info]   (min, avg, max) = (39023.635, 40067.163, 40442.428), stdev = 610.348
[info]   CI (99.9%): [37716.929, 42417.396] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   594.760 ±(99.9%) 35.641 MB/sec [Average]
[info]   (min, avg, max) = (579.273, 594.760, 602.821), stdev = 9.256
[info]   CI (99.9%): [559.119, 630.401] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   23366.074 ±(99.9%) 644.714 B/op [Average]
[info]   (min, avg, max) = (23108.228, 23366.074, 23547.661), stdev = 167.430
[info]   CI (99.9%): [22721.361, 24010.788] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.266 ±(99.9%) 2.294 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.266, 1.332), stdev = 0.596
[info]   CI (99.9%): [≈ 0, 2.560] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   10.747 ±(99.9%) 92.532 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 10.747, 53.733), stdev = 24.030
[info]   CI (99.9%): [≈ 0, 103.278] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   539.168 ±(99.9%) 1160.601 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 539.168, 674.067), stdev = 301.404
[info]   CI (99.9%): [≈ 0, 1699.769] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   21235.280 ±(99.9%) 45734.037 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 21235.280, 27175.552), stdev = 11876.984
[info]   CI (99.9%): [≈ 0, 66969.317] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJacksonScala:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 0.707
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala
[info] # Run progress: 68.88% complete, ETA 00:42:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 59026.079 ops/s
[info] # Warmup Iteration   2: 84643.852 ops/s
[info] # Warmup Iteration   3: 77278.083 ops/s
[info] # Warmup Iteration   4: 85319.863 ops/s
[info] # Warmup Iteration   5: 85979.573 ops/s
[info] Iteration   1: 86148.755 ops/s
[info]                  ·gc.alloc.rate:                   664.129 MB/sec
[info]                  ·gc.alloc.rate.norm:              12135.900 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      671.314 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12267.178 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 86174.252 ops/s
[info]                  ·gc.alloc.rate:                   664.594 MB/sec
[info]                  ·gc.alloc.rate.norm:              12140.177 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      671.320 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12263.051 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 85894.772 ops/s
[info]                  ·gc.alloc.rate:                   672.161 MB/sec
[info]                  ·gc.alloc.rate.norm:              12317.421 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      671.406 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12303.591 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 86146.401 ops/s
[info]                  ·gc.alloc.rate:                   664.297 MB/sec
[info]                  ·gc.alloc.rate.norm:              12137.669 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.761 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      671.362 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12266.751 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 85250.424 ops/s
[info]                  ·gc.alloc.rate:                   662.254 MB/sec
[info]                  ·gc.alloc.rate.norm:              12224.320 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      671.916 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12402.671 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala":
[info]   85922.921 ±(99.9%) 1512.520 ops/s [Average]
[info]   (min, avg, max) = (85250.424, 85922.921, 86174.252), stdev = 392.797
[info]   CI (99.9%): [84410.400, 87435.441] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   665.487 ±(99.9%) 14.795 MB/sec [Average]
[info]   (min, avg, max) = (662.254, 665.487, 672.161), stdev = 3.842
[info]   CI (99.9%): [650.692, 680.282] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   12191.097 ±(99.9%) 307.785 B/op [Average]
[info]   (min, avg, max) = (12135.900, 12191.097, 12317.421), stdev = 79.931
[info]   CI (99.9%): [11883.313, 12498.882] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.008 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.152 ±(99.9%) 1.310 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.152, 0.761), stdev = 0.340
[info]   CI (99.9%): [≈ 0, 1.462] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   671.464 ±(99.9%) 0.985 MB/sec [Average]
[info]   (min, avg, max) = (671.314, 671.464, 671.916), stdev = 0.256
[info]   CI (99.9%): [670.479, 672.448] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   12300.648 ±(99.9%) 228.620 B/op [Average]
[info]   (min, avg, max) = (12263.051, 12300.648, 12402.671), stdev = 59.372
[info]   CI (99.9%): [12072.029, 12529.268] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 69.08% complete, ETA 00:41:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 66379.980 ops/s
[info] # Warmup Iteration   2: 91129.321 ops/s
[info] # Warmup Iteration   3: 93526.434 ops/s
[info] # Warmup Iteration   4: 94137.713 ops/s
[info] # Warmup Iteration   5: 93946.347 ops/s
[info] Iteration   1: 93935.116 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.005 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 94144.444 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.004 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 94063.791 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.004 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 94217.651 ops/s
[info]                  ·gc.alloc.rate:      0.134 MB/sec
[info]                  ·gc.alloc.rate.norm: 2.242 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 93901.569 ops/s
[info]                  ·gc.alloc.rate:      1.243 MB/sec
[info]                  ·gc.alloc.rate.norm: 20.832 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc":
[info]   94052.514 ±(99.9%) 518.107 ops/s [Average]
[info]   (min, avg, max) = (93901.569, 94052.514, 94217.651), stdev = 134.551
[info]   CI (99.9%): [93534.408, 94570.621] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.276 ±(99.9%) 2.094 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.276, 1.243), stdev = 0.544
[info]   CI (99.9%): [≈ 0, 2.370] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   4.618 ±(99.9%) 35.102 B/op [Average]
[info]   (min, avg, max) = (0.004, 4.618, 20.832), stdev = 9.116
[info]   CI (99.9%): [≈ 0, 39.719] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson
[info] # Run progress: 69.28% complete, ETA 00:41:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 356.668 ops/s
[info] # Warmup Iteration   2: 6701.074 ops/s
[info] # Warmup Iteration   3: 7427.388 ops/s
[info] # Warmup Iteration   4: 7435.609 ops/s
[info] # Warmup Iteration   5: 7169.378 ops/s
[info] Iteration   1: 7450.362 ops/s
[info]                  ·gc.alloc.rate:                   2194.697 MB/sec
[info]                  ·gc.alloc.rate.norm:              463688.279 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8.794 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2024.313 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 427690.117 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 7393.910 ops/s
[info]                  ·gc.alloc.rate:                   2190.959 MB/sec
[info]                  ·gc.alloc.rate.norm:              466433.703 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8.862 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2702.826 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 575405.194 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 7433.380 ops/s
[info]                  ·gc.alloc.rate:                   2201.209 MB/sec
[info]                  ·gc.alloc.rate.norm:              466077.053 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4.407 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2029.588 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 429738.483 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 7443.770 ops/s
[info]                  ·gc.alloc.rate:                   2205.095 MB/sec
[info]                  ·gc.alloc.rate.norm:              466106.345 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2033.310 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 429795.051 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 7404.708 ops/s
[info]                  ·gc.alloc.rate:                   2206.093 MB/sec
[info]                  ·gc.alloc.rate.norm:              468964.536 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2034.477 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 432482.743 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson":
[info]   7425.226 ±(99.9%) 95.179 ops/s [Average]
[info]   (min, avg, max) = (7393.910, 7425.226, 7450.362), stdev = 24.718
[info]   CI (99.9%): [7330.047, 7520.405] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:·gc.alloc.rate":
[info]   2199.611 ±(99.9%) 25.371 MB/sec [Average]
[info]   (min, avg, max) = (2190.959, 2199.611, 2206.093), stdev = 6.589
[info]   CI (99.9%): [2174.240, 2224.982] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   466253.983 ±(99.9%) 7207.840 B/op [Average]
[info]   (min, avg, max) = (463688.279, 466253.983, 468964.536), stdev = 1871.853
[info]   CI (99.9%): [459046.144, 473461.823] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   0.021 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   4.413 ±(99.9%) 16.998 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4.413, 8.862), stdev = 4.414
[info]   CI (99.9%): [≈ 0, 21.410] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   2164.903 ±(99.9%) 1158.022 MB/sec [Average]
[info]   (min, avg, max) = (2024.313, 2164.903, 2702.826), stdev = 300.735
[info]   CI (99.9%): [1006.881, 3322.925] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   459022.318 ±(99.9%) 250608.635 B/op [Average]
[info]   (min, avg, max) = (427690.117, 459022.318, 575405.194), stdev = 65082.267
[info]   CI (99.9%): [208413.683, 709630.953] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writePlayJson:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.200, 4.000), stdev = 0.837
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeUPickle
[info] # Run progress: 69.48% complete, ETA 00:41:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3018.074 ops/s
[info] # Warmup Iteration   2: 4820.968 ops/s
[info] # Warmup Iteration   3: 4922.193 ops/s
[info] # Warmup Iteration   4: 4898.181 ops/s
[info] # Warmup Iteration   5: 4911.301 ops/s
[info] Iteration   1: 4953.718 ops/s
[info]                  ·gc.alloc.rate:                   244.248 MB/sec
[info]                  ·gc.alloc.rate.norm:              77607.706 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      511.395 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 162491.196 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 4940.395 ops/s
[info]                  ·gc.alloc.rate:      231.855 MB/sec
[info]                  ·gc.alloc.rate.norm: 73859.927 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 4914.643 ops/s
[info]                  ·gc.alloc.rate:                   240.007 MB/sec
[info]                  ·gc.alloc.rate.norm:              76863.424 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      511.509 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 163813.338 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 4908.833 ops/s
[info]                  ·gc.alloc.rate:      230.084 MB/sec
[info]                  ·gc.alloc.rate.norm: 73776.090 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 4902.932 ops/s
[info]                  ·gc.alloc.rate:      229.800 MB/sec
[info]                  ·gc.alloc.rate.norm: 73776.083 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeUPickle":
[info]   4924.104 ±(99.9%) 84.219 ops/s [Average]
[info]   (min, avg, max) = (4902.932, 4924.104, 4953.718), stdev = 21.871
[info]   CI (99.9%): [4839.886, 5008.323] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeUPickle:·gc.alloc.rate":
[info]   235.199 ±(99.9%) 25.214 MB/sec [Average]
[info]   (min, avg, max) = (229.800, 235.199, 244.248), stdev = 6.548
[info]   CI (99.9%): [209.985, 260.413] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeUPickle:·gc.alloc.rate.norm":
[info]   75176.646 ±(99.9%) 7309.166 B/op [Average]
[info]   (min, avg, max) = (73776.083, 75176.646, 77607.706), stdev = 1898.167
[info]   CI (99.9%): [67867.480, 82485.812] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space":
[info]   204.581 ±(99.9%) 1078.696 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 204.581, 511.509), stdev = 280.134
[info]   CI (99.9%): [≈ 0, 1283.277] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   65260.907 ±(99.9%) 344106.632 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 65260.907, 163813.338), stdev = 89363.399
[info]   CI (99.9%): [≈ 0, 409367.538] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeUPickle:·gc.count":
[info]   2.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.000), stdev = 0.548
[info]   CI (99.9%): [2.000, 2.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.GoogleMapsAPIBenchmark.writeUPickle:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 4.000), stdev = 1.949
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce
[info] # Run progress: 69.68% complete, ETA 00:41:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1932023.726 ops/s
[info] # Warmup Iteration   2: 8226959.622 ops/s
[info] # Warmup Iteration   3: 8457243.510 ops/s
[info] # Warmup Iteration   4: 8638495.652 ops/s
[info] # Warmup Iteration   5: 8612182.750 ops/s
[info] Iteration   1: 8669339.114 ops/s
[info]                  ·gc.alloc.rate:                   4727.065 MB/sec
[info]                  ·gc.alloc.rate.norm:              858.126 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.167 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.030 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4747.746 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 861.880 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 8610822.750 ops/s
[info]                  ·gc.alloc.rate:                   4670.244 MB/sec
[info]                  ·gc.alloc.rate.norm:              853.587 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.146 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.027 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4078.321 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 745.400 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 8564280.994 ops/s
[info]                  ·gc.alloc.rate:                   4680.162 MB/sec
[info]                  ·gc.alloc.rate.norm:              859.802 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.011 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4764.287 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 875.257 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 8713103.291 ops/s
[info]                  ·gc.alloc.rate:                   4746.897 MB/sec
[info]                  ·gc.alloc.rate.norm:              857.522 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.146 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.026 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4764.901 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 860.775 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 8741731.559 ops/s
[info]                  ·gc.alloc.rate:                   4738.638 MB/sec
[info]                  ·gc.alloc.rate.norm:              853.231 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.019 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4088.248 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 736.123 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce":
[info]   8659855.541 ±(99.9%) 280117.157 ops/s [Average]
[info]   (min, avg, max) = (8564280.994, 8659855.541, 8741731.559), stdev = 72745.536
[info]   CI (99.9%): [8379738.384, 8939972.698] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:·gc.alloc.rate":
[info]   4712.601 ±(99.9%) 134.906 MB/sec [Average]
[info]   (min, avg, max) = (4670.244, 4712.601, 4746.897), stdev = 35.035
[info]   CI (99.9%): [4577.695, 4847.507] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   856.454 ±(99.9%) 11.186 B/op [Average]
[info]   (min, avg, max) = (853.231, 856.454, 859.802), stdev = 2.905
[info]   CI (99.9%): [845.267, 867.640] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   0.125 ±(99.9%) 0.160 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 0.125, 0.167), stdev = 0.042
[info]   CI (99.9%): [≈ 0, 0.285] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.023 ±(99.9%) 0.029 B/op [Average]
[info]   (min, avg, max) = (0.011, 0.023, 0.030), stdev = 0.008
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   4488.701 ±(99.9%) 1425.406 MB/sec [Average]
[info]   (min, avg, max) = (4078.321, 4488.701, 4764.901), stdev = 370.173
[info]   CI (99.9%): [3063.295, 5914.106] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   815.887 ±(99.9%) 265.288 B/op [Average]
[info]   (min, avg, max) = (736.123, 815.887, 875.257), stdev = 68.895
[info]   CI (99.9%): [550.599, 1081.175] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:·gc.count":
[info]   33.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.600, 7.000), stdev = 0.548
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readCirce:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.600, 7.000), stdev = 1.140
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava
[info] # Run progress: 69.88% complete, ETA 00:40:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.666 ops/s
[info] # Warmup Iteration   2: 35659231.627 ops/s
[info] # Warmup Iteration   3: 36999656.069 ops/s
[info] # Warmup Iteration   4: 37403212.779 ops/s
[info] # Warmup Iteration   5: 37448575.875 ops/s
[info] Iteration   1: 37490029.842 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 37465567.967 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 37445605.356 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 37453912.404 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 37491145.081 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava":
[info]   37469252.130 ±(99.9%) 79826.942 ops/s [Average]
[info]   (min, avg, max) = (37445605.356, 37469252.130, 37491145.081), stdev = 20730.803
[info]   CI (99.9%): [37389425.189, 37549079.072] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁵ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readDslJsonJava:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala
[info] # Run progress: 70.08% complete, ETA 00:40:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1114005.093 ops/s
[info] # Warmup Iteration   2: 10084770.327 ops/s
[info] # Warmup Iteration   3: 10822141.183 ops/s
[info] # Warmup Iteration   4: 10692520.262 ops/s
[info] # Warmup Iteration   5: 10338613.907 ops/s
[info] Iteration   1: 10272869.777 ops/s
[info]                  ·gc.alloc.rate:                   3394.144 MB/sec
[info]                  ·gc.alloc.rate.norm:              520.100 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.013 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3388.905 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 519.297 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 10216634.602 ops/s
[info]                  ·gc.alloc.rate:                   3405.362 MB/sec
[info]                  ·gc.alloc.rate.norm:              524.454 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.167 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.026 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3395.845 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 522.988 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 10142158.498 ops/s
[info]                  ·gc.alloc.rate:                   3384.880 MB/sec
[info]                  ·gc.alloc.rate.norm:              525.225 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.019 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3399.730 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 527.529 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 10078092.901 ops/s
[info]                  ·gc.alloc.rate:                   3333.448 MB/sec
[info]                  ·gc.alloc.rate.norm:              520.497 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.020 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2721.443 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 424.936 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 10938731.456 ops/s
[info]                  ·gc.alloc.rate:                   3638.835 MB/sec
[info]                  ·gc.alloc.rate.norm:              523.643 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.012 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3403.385 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 489.761 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala":
[info]   10329697.447 ±(99.9%) 1341399.212 ops/s [Average]
[info]   (min, avg, max) = (10078092.901, 10329697.447, 10938731.456), stdev = 348357.116
[info]   CI (99.9%): [8988298.235, 11671096.659] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   3431.334 ±(99.9%) 459.074 MB/sec [Average]
[info]   (min, avg, max) = (3333.448, 3431.334, 3638.835), stdev = 119.220
[info]   CI (99.9%): [2972.260, 3890.408] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   522.784 ±(99.9%) 9.014 B/op [Average]
[info]   (min, avg, max) = (520.100, 522.784, 525.225), stdev = 2.341
[info]   CI (99.9%): [513.769, 531.798] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.117 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (0.083, 0.117, 0.167), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.251] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.018 ±(99.9%) 0.022 B/op [Average]
[info]   (min, avg, max) = (0.012, 0.018, 0.026), stdev = 0.006
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   3261.862 ±(99.9%) 1163.476 MB/sec [Average]
[info]   (min, avg, max) = (2721.443, 3261.862, 3403.385), stdev = 302.151
[info]   CI (99.9%): [2098.386, 4425.338] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   496.902 ±(99.9%) 165.064 B/op [Average]
[info]   (min, avg, max) = (424.936, 496.902, 527.529), stdev = 42.867
[info]   CI (99.9%): [331.838, 661.966] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJacksonScala:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala
[info] # Run progress: 70.28% complete, ETA 00:40:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 29664449.915 ops/s
[info] # Warmup Iteration   2: 41980443.556 ops/s
[info] # Warmup Iteration   3: 45882527.182 ops/s
[info] # Warmup Iteration   4: 45896272.303 ops/s
[info] # Warmup Iteration   5: 45912398.939 ops/s
[info] Iteration   1: 45851717.413 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 45910132.518 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 45858952.427 ops/s
[info]                  ·gc.alloc.rate:      0.886 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.030 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 45807232.980 ops/s
[info]                  ·gc.alloc.rate:      0.549 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.019 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 45917581.412 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala":
[info]   45869123.350 ±(99.9%) 175053.676 ops/s [Average]
[info]   (min, avg, max) = (45807232.980, 45869123.350, 45917581.412), stdev = 45460.884
[info]   CI (99.9%): [45694069.674, 46044177.026] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   0.287 ±(99.9%) 1.580 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.287, 0.886), stdev = 0.410
[info]   CI (99.9%): [≈ 0, 1.867] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   0.010 ±(99.9%) 0.054 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁵, 0.010, 0.030), stdev = 0.014
[info]   CI (99.9%): [≈ 0, 0.064] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readJsoniterScala:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala
[info] # Run progress: 70.48% complete, ETA 00:40:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 14404646.971 ops/s
[info] # Warmup Iteration   2: 24258958.881 ops/s
[info] # Warmup Iteration   3: 25105145.457 ops/s
[info] # Warmup Iteration   4: 24699429.109 ops/s
[info] # Warmup Iteration   5: 24864489.231 ops/s
[info] Iteration   1: 24869628.612 ops/s
[info]                  ·gc.alloc.rate:                   909.543 MB/sec
[info]                  ·gc.alloc.rate.norm:              57.575 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.001 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.956 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 42.662 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   2: 24859808.352 ops/s
[info]                  ·gc.alloc.rate:                   898.573 MB/sec
[info]                  ·gc.alloc.rate.norm:              56.897 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.369 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 42.637 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 24717242.339 ops/s
[info]                  ·gc.alloc.rate:                   924.316 MB/sec
[info]                  ·gc.alloc.rate.norm:              58.866 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.007 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.994 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 85.721 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 24783322.191 ops/s
[info]                  ·gc.alloc.rate:                   895.470 MB/sec
[info]                  ·gc.alloc.rate.norm:              56.873 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.719 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 42.726 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 24871333.412 ops/s
[info]                  ·gc.alloc.rate:                   900.414 MB/sec
[info]                  ·gc.alloc.rate.norm:              56.984 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.404 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 42.617 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala":
[info]   24820266.981 ±(99.9%) 262486.179 ops/s [Average]
[info]   (min, avg, max) = (24717242.339, 24820266.981, 24871333.412), stdev = 68166.827
[info]   CI (99.9%): [24557780.802, 25082753.160] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:·gc.alloc.rate":
[info]   905.663 ±(99.9%) 44.935 MB/sec [Average]
[info]   (min, avg, max) = (895.470, 905.663, 924.316), stdev = 11.670
[info]   CI (99.9%): [860.728, 950.598] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:·gc.alloc.rate.norm":
[info]   57.439 ±(99.9%) 3.265 B/op [Average]
[info]   (min, avg, max) = (56.873, 57.439, 58.866), stdev = 0.848
[info]   CI (99.9%): [54.173, 60.704] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:·gc.churn.PS_Eden_Space":
[info]   0.025 ±(99.9%) 0.174 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.104), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.199] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.002 ±(99.9%) 0.011 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.002, 0.007), stdev = 0.003
[info]   CI (99.9%): [≈ 0, 0.013] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:·gc.churn.PS_Survivor_Space":
[info]   807.889 ±(99.9%) 1158.315 MB/sec [Average]
[info]   (min, avg, max) = (672.719, 807.889, 1345.994), stdev = 300.811
[info]   CI (99.9%): [≈ 0, 1966.203] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:·gc.churn.PS_Survivor_Space.norm":
[info]   51.273 ±(99.9%) 74.153 B/op [Average]
[info]   (min, avg, max) = (42.617, 51.273, 85.721), stdev = 19.257
[info]   CI (99.9%): [≈ 0, 125.425] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readNaiveScala:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 0.707
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson
[info] # Run progress: 70.68% complete, ETA 00:39:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1975477.173 ops/s
[info] # Warmup Iteration   2: 8304022.966 ops/s
[info] # Warmup Iteration   3: 8760454.314 ops/s
[info] # Warmup Iteration   4: 8784545.771 ops/s
[info] # Warmup Iteration   5: 8617819.511 ops/s
[info] Iteration   1: 8780973.981 ops/s
[info]                  ·gc.alloc.rate:                   3702.354 MB/sec
[info]                  ·gc.alloc.rate.norm:              663.743 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.146 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.026 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3391.198 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 607.960 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 8735580.093 ops/s
[info]                  ·gc.alloc.rate:                   3685.747 MB/sec
[info]                  ·gc.alloc.rate.norm:              664.157 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.019 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3395.404 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 611.838 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 8787245.904 ops/s
[info]                  ·gc.alloc.rate:                   3707.890 MB/sec
[info]                  ·gc.alloc.rate.norm:              664.192 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.146 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.026 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3399.527 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 608.955 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 8671776.315 ops/s
[info]                  ·gc.alloc.rate:                   3676.538 MB/sec
[info]                  ·gc.alloc.rate.norm:              667.047 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.011 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4080.325 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 740.307 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 8636643.030 ops/s
[info]                  ·gc.alloc.rate:                   3645.953 MB/sec
[info]                  ·gc.alloc.rate.norm:              664.551 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.023 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3403.147 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 620.295 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson":
[info]   8722443.865 ±(99.9%) 256339.994 ops/s [Average]
[info]   (min, avg, max) = (8636643.030, 8722443.865, 8787245.904), stdev = 66570.682
[info]   CI (99.9%): [8466103.871, 8978783.859] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3683.697 ±(99.9%) 94.585 MB/sec [Average]
[info]   (min, avg, max) = (3645.953, 3683.697, 3707.890), stdev = 24.563
[info]   CI (99.9%): [3589.111, 3778.282] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   664.738 ±(99.9%) 5.091 B/op [Average]
[info]   (min, avg, max) = (663.743, 664.738, 667.047), stdev = 1.322
[info]   CI (99.9%): [659.647, 669.829] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   0.117 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 0.117, 0.146), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.251] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   0.021 ±(99.9%) 0.024 B/op [Average]
[info]   (min, avg, max) = (0.011, 0.021, 0.026), stdev = 0.006
[info]   CI (99.9%): [≈ 0, 0.045] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   3533.920 ±(99.9%) 1176.303 MB/sec [Average]
[info]   (min, avg, max) = (3391.198, 3533.920, 4080.325), stdev = 305.482
[info]   CI (99.9%): [2357.617, 4710.223] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   637.871 ±(99.9%) 221.292 B/op [Average]
[info]   (min, avg, max) = (607.960, 637.871, 740.307), stdev = 57.469
[info]   CI (99.9%): [416.580, 859.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readPlayJson:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readUPickle
[info] # Run progress: 70.88% complete, ETA 00:39:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4903048.764 ops/s
[info] # Warmup Iteration   2: 10909080.663 ops/s
[info] # Warmup Iteration   3: 11329707.650 ops/s
[info] # Warmup Iteration   4: 11598346.224 ops/s
[info] # Warmup Iteration   5: 11564448.551 ops/s
[info] Iteration   1: 11684446.488 ops/s
[info]                  ·gc.alloc.rate:                   4938.542 MB/sec
[info]                  ·gc.alloc.rate.norm:              665.348 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.146 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.020 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4753.023 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 640.353 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 11518638.067 ops/s
[info]                  ·gc.alloc.rate:                   4873.522 MB/sec
[info]                  ·gc.alloc.rate.norm:              665.954 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.208 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.028 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4761.036 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 650.583 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 11362175.938 ops/s
[info]                  ·gc.alloc.rate:                   4808.690 MB/sec
[info]                  ·gc.alloc.rate.norm:              666.179 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.187 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.026 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4764.902 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 660.113 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 11638087.821 ops/s
[info]                  ·gc.alloc.rate:                   4922.078 MB/sec
[info]                  ·gc.alloc.rate.norm:              665.687 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.014 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4767.033 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 644.718 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 11690169.767 ops/s
[info]                  ·gc.alloc.rate:                   4943.171 MB/sec
[info]                  ·gc.alloc.rate.norm:              665.634 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.014 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      4769.314 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 642.222 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readUPickle":
[info]   11578703.616 ±(99.9%) 536418.496 ops/s [Average]
[info]   (min, avg, max) = (11362175.938, 11578703.616, 11690169.767), stdev = 139306.180
[info]   CI (99.9%): [11042285.120, 12115122.112] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readUPickle:·gc.alloc.rate":
[info]   4897.200 ±(99.9%) 218.133 MB/sec [Average]
[info]   (min, avg, max) = (4808.690, 4897.200, 4943.171), stdev = 56.648
[info]   CI (99.9%): [4679.068, 5115.333] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readUPickle:·gc.alloc.rate.norm":
[info]   665.760 ±(99.9%) 1.224 B/op [Average]
[info]   (min, avg, max) = (665.348, 665.760, 666.179), stdev = 0.318
[info]   CI (99.9%): [664.536, 666.984] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readUPickle:·gc.churn.PS_Eden_Space":
[info]   0.150 ±(99.9%) 0.183 MB/sec [Average]
[info]   (min, avg, max) = (0.104, 0.150, 0.208), stdev = 0.047
[info]   CI (99.9%): [≈ 0, 0.333] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   0.020 ±(99.9%) 0.026 B/op [Average]
[info]   (min, avg, max) = (0.014, 0.020, 0.028), stdev = 0.007
[info]   CI (99.9%): [≈ 0, 0.046] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readUPickle:·gc.churn.PS_Survivor_Space":
[info]   4763.061 ±(99.9%) 24.590 MB/sec [Average]
[info]   (min, avg, max) = (4753.023, 4763.061, 4769.314), stdev = 6.386
[info]   CI (99.9%): [4738.471, 4787.652] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   647.598 ±(99.9%) 30.757 B/op [Average]
[info]   (min, avg, max) = (640.353, 647.598, 660.113), stdev = 7.987
[info]   CI (99.9%): [616.841, 678.355] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readUPickle:·gc.count":
[info]   35.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.000, 7.000), stdev = 0.001
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.readUPickle:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 6.400, 7.000), stdev = 0.548
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce
[info] # Run progress: 71.08% complete, ETA 00:39:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4187546.038 ops/s
[info] # Warmup Iteration   2: 14521878.255 ops/s
[info] # Warmup Iteration   3: 14833880.790 ops/s
[info] # Warmup Iteration   4: 14833165.950 ops/s
[info] # Warmup Iteration   5: 14902299.296 ops/s
[info] Iteration   1: 14707556.950 ops/s
[info]                  ·gc.alloc.rate:                   1244.408 MB/sec
[info]                  ·gc.alloc.rate.norm:              133.144 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.011 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.137 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 144.349 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 14904072.424 ops/s
[info]                  ·gc.alloc.rate:                   1245.033 MB/sec
[info]                  ·gc.alloc.rate.norm:              131.496 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.718 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 142.553 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 14891100.993 ops/s
[info]                  ·gc.alloc.rate:                   1252.102 MB/sec
[info]                  ·gc.alloc.rate.norm:              132.284 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.009 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.196 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 142.647 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 14924612.569 ops/s
[info]                  ·gc.alloc.rate:                   1240.410 MB/sec
[info]                  ·gc.alloc.rate.norm:              130.819 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      675.733 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 71.266 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 14838057.045 ops/s
[info]                  ·gc.alloc.rate:                   1247.858 MB/sec
[info]                  ·gc.alloc.rate.norm:              132.389 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.011 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1352.646 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 143.506 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce":
[info]   14853079.996 ±(99.9%) 336603.213 ops/s [Average]
[info]   (min, avg, max) = (14707556.950, 14853079.996, 14924612.569), stdev = 87414.786
[info]   CI (99.9%): [14516476.783, 15189683.209] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:·gc.alloc.rate":
[info]   1245.962 ±(99.9%) 16.717 MB/sec [Average]
[info]   (min, avg, max) = (1240.410, 1245.962, 1252.102), stdev = 4.341
[info]   CI (99.9%): [1229.245, 1262.679] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   132.026 ±(99.9%) 3.436 B/op [Average]
[info]   (min, avg, max) = (130.819, 132.026, 133.144), stdev = 0.892
[info]   CI (99.9%): [128.590, 135.462] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   0.058 ±(99.9%) 0.207 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.058, 0.104), stdev = 0.054
[info]   CI (99.9%): [≈ 0, 0.266] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.006 ±(99.9%) 0.022 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.006, 0.011), stdev = 0.006
[info]   CI (99.9%): [≈ 0, 0.028] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   1215.486 ±(99.9%) 1161.870 MB/sec [Average]
[info]   (min, avg, max) = (675.733, 1215.486, 1352.646), stdev = 301.734
[info]   CI (99.9%): [53.616, 2377.356] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   128.864 ±(99.9%) 124.017 B/op [Average]
[info]   (min, avg, max) = (71.266, 128.864, 144.349), stdev = 32.207
[info]   CI (99.9%): [4.847, 252.881] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeCirce:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 3.000), stdev = 0.837
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava
[info] # Run progress: 71.29% complete, ETA 00:38:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.615 ops/s
[info] # Warmup Iteration   2: 41555735.214 ops/s
[info] # Warmup Iteration   3: 41854386.516 ops/s
[info] # Warmup Iteration   4: 43379078.910 ops/s
[info] # Warmup Iteration   5: 43688879.873 ops/s
[info] Iteration   1: 43718531.817 ops/s
[info]                  ·gc.alloc.rate:                   902.707 MB/sec
[info]                  ·gc.alloc.rate.norm:              32.501 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      669.421 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 24.101 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 43732379.136 ops/s
[info]                  ·gc.alloc.rate:                   931.036 MB/sec
[info]                  ·gc.alloc.rate.norm:              33.509 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.004 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1337.566 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 48.141 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 43817949.252 ops/s
[info]                  ·gc.alloc.rate:                   916.233 MB/sec
[info]                  ·gc.alloc.rate.norm:              32.912 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      669.127 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 24.035 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 43841850.730 ops/s
[info]                  ·gc.alloc.rate:                   913.081 MB/sec
[info]                  ·gc.alloc.rate.norm:              32.781 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.001 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      669.103 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 24.022 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 43746457.268 ops/s
[info]                  ·gc.alloc.rate:                   919.735 MB/sec
[info]                  ·gc.alloc.rate.norm:              33.094 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.003 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1338.773 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 48.171 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava":
[info]   43771433.640 ±(99.9%) 211522.228 ops/s [Average]
[info]   (min, avg, max) = (43718531.817, 43771433.640, 43841850.730), stdev = 54931.651
[info]   CI (99.9%): [43559911.412, 43982955.868] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   916.558 ±(99.9%) 39.632 MB/sec [Average]
[info]   (min, avg, max) = (902.707, 916.558, 931.036), stdev = 10.292
[info]   CI (99.9%): [876.926, 956.190] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   32.959 ±(99.9%) 1.447 B/op [Average]
[info]   (min, avg, max) = (32.501, 32.959, 33.509), stdev = 0.376
[info]   CI (99.9%): [31.512, 34.407] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   0.050 ±(99.9%) 0.209 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.125), stdev = 0.054
[info]   CI (99.9%): [≈ 0, 0.259] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   0.002 ±(99.9%) 0.008 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.002, 0.004), stdev = 0.002
[info]   CI (99.9%): [≈ 0, 0.009] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   936.798 ±(99.9%) 1410.878 MB/sec [Average]
[info]   (min, avg, max) = (669.103, 936.798, 1338.773), stdev = 366.401
[info]   CI (99.9%): [≈ 0, 2347.676] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   33.694 ±(99.9%) 50.836 B/op [Average]
[info]   (min, avg, max) = (24.022, 33.694, 48.171), stdev = 13.202
[info]   CI (99.9%): [≈ 0, 84.530] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeDslJsonJava:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala
[info] # Run progress: 71.49% complete, ETA 00:38:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2472250.931 ops/s
[info] # Warmup Iteration   2: 12289266.148 ops/s
[info] # Warmup Iteration   3: 12661106.222 ops/s
[info] # Warmup Iteration   4: 12747368.431 ops/s
[info] # Warmup Iteration   5: 12510402.982 ops/s
[info] Iteration   1: 12718197.132 ops/s
[info]                  ·gc.alloc.rate:                   2586.755 MB/sec
[info]                  ·gc.alloc.rate.norm:              320.181 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.013 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2704.034 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 334.697 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 12654503.212 ops/s
[info]                  ·gc.alloc.rate:                   2574.404 MB/sec
[info]                  ·gc.alloc.rate.norm:              320.156 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.013 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2709.220 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 336.921 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 12721620.788 ops/s
[info]                  ·gc.alloc.rate:                   2602.184 MB/sec
[info]                  ·gc.alloc.rate.norm:              321.968 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.146 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.018 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2033.849 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 251.648 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 12454775.160 ops/s
[info]                  ·gc.alloc.rate:                   2576.257 MB/sec
[info]                  ·gc.alloc.rate.norm:              325.587 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.011 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2715.463 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 343.180 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 12683250.484 ops/s
[info]                  ·gc.alloc.rate:                   2621.299 MB/sec
[info]                  ·gc.alloc.rate.norm:              325.335 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.013 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2717.931 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 337.328 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala":
[info]   12646469.355 ±(99.9%) 425999.710 ops/s [Average]
[info]   (min, avg, max) = (12454775.160, 12646469.355, 12721620.788), stdev = 110630.772
[info]   CI (99.9%): [12220469.646, 13072469.065] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   2592.180 ±(99.9%) 75.726 MB/sec [Average]
[info]   (min, avg, max) = (2574.404, 2592.180, 2621.299), stdev = 19.666
[info]   CI (99.9%): [2516.454, 2667.906] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   322.645 ±(99.9%) 10.300 B/op [Average]
[info]   (min, avg, max) = (320.156, 322.645, 325.587), stdev = 2.675
[info]   CI (99.9%): [312.345, 332.946] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.108 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (0.083, 0.108, 0.146), stdev = 0.023
[info]   CI (99.9%): [0.020, 0.196] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.013 ±(99.9%) 0.011 B/op [Average]
[info]   (min, avg, max) = (0.011, 0.013, 0.018), stdev = 0.003
[info]   CI (99.9%): [0.003, 0.024] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   2576.099 ±(99.9%) 1167.422 MB/sec [Average]
[info]   (min, avg, max) = (2033.849, 2576.099, 2717.931), stdev = 303.176
[info]   CI (99.9%): [1408.677, 3743.522] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   320.755 ±(99.9%) 149.248 B/op [Average]
[info]   (min, avg, max) = (251.648, 320.755, 343.180), stdev = 38.759
[info]   CI (99.9%): [171.507, 470.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJacksonScala:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala
[info] # Run progress: 71.69% complete, ETA 00:38:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 26754775.401 ops/s
[info] # Warmup Iteration   2: 45330858.407 ops/s
[info] # Warmup Iteration   3: 47322492.539 ops/s
[info] # Warmup Iteration   4: 45540623.751 ops/s
[info] # Warmup Iteration   5: 47863828.984 ops/s
[info] Iteration   1: 47869526.430 ops/s
[info]                  ·gc.alloc.rate:                   1011.696 MB/sec
[info]                  ·gc.alloc.rate.norm:              33.264 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.003 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1346.230 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 44.264 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 48012315.676 ops/s
[info]                  ·gc.alloc.rate:                   999.914 MB/sec
[info]                  ·gc.alloc.rate.norm:              32.783 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.688 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 22.055 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 47556265.571 ops/s
[info]                  ·gc.alloc.rate:                   1012.978 MB/sec
[info]                  ·gc.alloc.rate.norm:              33.527 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.001 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.486 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 44.532 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 48302838.953 ops/s
[info]                  ·gc.alloc.rate:                   997.672 MB/sec
[info]                  ·gc.alloc.rate.norm:              32.512 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.994 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 21.931 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 48201891.988 ops/s
[info]                  ·gc.alloc.rate:                   1010.073 MB/sec
[info]                  ·gc.alloc.rate.norm:              32.985 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.003 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1346.359 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 43.966 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala":
[info]   47988567.723 ±(99.9%) 1132334.198 ops/s [Average]
[info]   (min, avg, max) = (47556265.571, 47988567.723, 48302838.953), stdev = 294063.595
[info]   CI (99.9%): [46856233.525, 49120901.922] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1006.466 ±(99.9%) 27.433 MB/sec [Average]
[info]   (min, avg, max) = (997.672, 1006.466, 1012.978), stdev = 7.124
[info]   CI (99.9%): [979.033, 1033.900] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   33.014 ±(99.9%) 1.531 B/op [Average]
[info]   (min, avg, max) = (32.512, 33.014, 33.527), stdev = 0.398
[info]   CI (99.9%): [31.483, 34.546] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.037 ±(99.9%) 0.164 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.083), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.202] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.001 ±(99.9%) 0.005 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.003), stdev = 0.001
[info]   CI (99.9%): [≈ 0, 0.007] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   1076.751 ±(99.9%) 1419.802 MB/sec [Average]
[info]   (min, avg, max) = (672.688, 1076.751, 1346.359), stdev = 368.718
[info]   CI (99.9%): [≈ 0, 2496.554] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   35.350 ±(99.9%) 46.958 B/op [Average]
[info]   (min, avg, max) = (21.931, 35.350, 44.532), stdev = 12.195
[info]   CI (99.9%): [≈ 0, 82.307] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 3.000), stdev = 0.894
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 71.89% complete, ETA 00:38:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 34769408.531 ops/s
[info] # Warmup Iteration   2: 52313237.976 ops/s
[info] # Warmup Iteration   3: 55559325.204 ops/s
[info] # Warmup Iteration   4: 56205726.276 ops/s
[info] # Warmup Iteration   5: 56226025.756 ops/s
[info] Iteration   1: 56216620.167 ops/s
[info]                  ·gc.alloc.rate:      0.170 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.005 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 56212735.331 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 56160646.598 ops/s
[info]                  ·gc.alloc.rate:      0.073 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 56184610.994 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 56234189.251 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc":
[info]   56201760.468 ±(99.9%) 111889.851 ops/s [Average]
[info]   (min, avg, max) = (56160646.598, 56201760.468, 56234189.251), stdev = 29057.439
[info]   CI (99.9%): [56089870.617, 56313650.319] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.049 ±(99.9%) 0.289 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.049, 0.170), stdev = 0.075
[info]   CI (99.9%): [≈ 0, 0.338] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.001 ±(99.9%) 0.008 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁵, 0.001, 0.005), stdev = 0.002
[info]   CI (99.9%): [≈ 0, 0.009] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala
[info] # Run progress: 72.09% complete, ETA 00:37:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 13536244.959 ops/s
[info] # Warmup Iteration   2: 22016165.166 ops/s
[info] # Warmup Iteration   3: 23011075.382 ops/s
[info] # Warmup Iteration   4: 22891730.655 ops/s
[info] # Warmup Iteration   5: 23061002.989 ops/s
[info] Iteration   1: 23000304.485 ops/s
[info]                  ·gc.alloc.rate:                   964.443 MB/sec
[info]                  ·gc.alloc.rate.norm:              66.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.004 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1347.314 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 92.212 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 23106105.718 ops/s
[info]                  ·gc.alloc.rate:                   963.762 MB/sec
[info]                  ·gc.alloc.rate.norm:              65.656 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.365 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 45.873 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 22953236.087 ops/s
[info]                  ·gc.alloc.rate:                   955.554 MB/sec
[info]                  ·gc.alloc.rate.norm:              65.532 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.003 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.350 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 46.178 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 22989346.551 ops/s
[info]                  ·gc.alloc.rate:                   976.904 MB/sec
[info]                  ·gc.alloc.rate.norm:              66.894 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.009 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1346.637 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 92.211 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 23063560.321 ops/s
[info]                  ·gc.alloc.rate:                   963.764 MB/sec
[info]                  ·gc.alloc.rate.norm:              65.775 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.390 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 45.957 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala":
[info]   23022510.632 ±(99.9%) 236314.328 ops/s [Average]
[info]   (min, avg, max) = (22953236.087, 23022510.632, 23106105.718), stdev = 61370.081
[info]   CI (99.9%): [22786196.304, 23258824.960] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:·gc.alloc.rate":
[info]   964.885 ±(99.9%) 29.468 MB/sec [Average]
[info]   (min, avg, max) = (955.554, 964.885, 976.904), stdev = 7.653
[info]   CI (99.9%): [935.418, 994.353] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:·gc.alloc.rate.norm":
[info]   65.973 ±(99.9%) 2.094 B/op [Average]
[info]   (min, avg, max) = (65.532, 65.973, 66.894), stdev = 0.544
[info]   CI (99.9%): [63.879, 68.067] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:·gc.churn.PS_Eden_Space":
[info]   0.046 ±(99.9%) 0.200 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.125), stdev = 0.052
[info]   CI (99.9%): [≈ 0, 0.245] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.003 ±(99.9%) 0.014 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.003, 0.009), stdev = 0.004
[info]   CI (99.9%): [≈ 0, 0.017] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:·gc.churn.PS_Survivor_Space":
[info]   942.811 ±(99.9%) 1420.696 MB/sec [Average]
[info]   (min, avg, max) = (673.350, 942.811, 1347.314), stdev = 368.950
[info]   CI (99.9%): [≈ 0, 2363.507] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:·gc.churn.PS_Survivor_Space.norm":
[info]   64.486 ±(99.9%) 97.459 B/op [Average]
[info]   (min, avg, max) = (45.873, 64.486, 92.212), stdev = 25.310
[info]   CI (99.9%): [≈ 0, 161.945] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeNaiveScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson
[info] # Run progress: 72.29% complete, ETA 00:37:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 811525.379 ops/s
[info] # Warmup Iteration   2: 2374258.974 ops/s
[info] # Warmup Iteration   3: 2485430.640 ops/s
[info] # Warmup Iteration   4: 2521397.699 ops/s
[info] # Warmup Iteration   5: 2526565.080 ops/s
[info] Iteration   1: 2535106.517 ops/s
[info]                  ·gc.alloc.rate:                   1896.952 MB/sec
[info]                  ·gc.alloc.rate.norm:              1177.843 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.013 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1340.719 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 832.470 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 2501796.743 ops/s
[info]                  ·gc.alloc.rate:                   1895.299 MB/sec
[info]                  ·gc.alloc.rate.norm:              1192.518 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.146 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.092 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2014.066 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1267.246 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 2532533.906 ops/s
[info]                  ·gc.alloc.rate:                   1907.123 MB/sec
[info]                  ·gc.alloc.rate.norm:              1184.900 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.052 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2018.900 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1254.348 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 2489075.706 ops/s
[info]                  ·gc.alloc.rate:                   1875.532 MB/sec
[info]                  ·gc.alloc.rate.norm:              1185.941 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.039 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2022.389 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1278.803 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 2503005.961 ops/s
[info]                  ·gc.alloc.rate:                   1885.408 MB/sec
[info]                  ·gc.alloc.rate.norm:              1185.763 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.013 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.024 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 849.051 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson":
[info]   2512303.767 ±(99.9%) 78576.102 ops/s [Average]
[info]   (min, avg, max) = (2489075.706, 2512303.767, 2535106.517), stdev = 20405.964
[info]   CI (99.9%): [2433727.664, 2590879.869] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1892.063 ±(99.9%) 46.318 MB/sec [Average]
[info]   (min, avg, max) = (1875.532, 1892.063, 1907.123), stdev = 12.029
[info]   CI (99.9%): [1845.745, 1938.380] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   1185.393 ±(99.9%) 20.050 B/op [Average]
[info]   (min, avg, max) = (1177.843, 1185.393, 1192.518), stdev = 5.207
[info]   CI (99.9%): [1165.343, 1205.443] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   0.067 ±(99.9%) 0.200 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.067, 0.146), stdev = 0.052
[info]   CI (99.9%): [≈ 0, 0.266] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   0.042 ±(99.9%) 0.126 B/op [Average]
[info]   (min, avg, max) = (0.013, 0.042, 0.092), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.167] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   1749.220 ±(99.9%) 1419.686 MB/sec [Average]
[info]   (min, avg, max) = (1340.719, 1749.220, 2022.389), stdev = 368.688
[info]   CI (99.9%): [329.534, 3168.905] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1096.384 ±(99.9%) 899.451 B/op [Average]
[info]   (min, avg, max) = (832.470, 1096.384, 1278.803), stdev = 233.585
[info]   CI (99.9%): [196.933, 1995.834] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writePlayJson:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeUPickle
[info] # Run progress: 72.49% complete, ETA 00:37:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7317873.939 ops/s
[info] # Warmup Iteration   2: 15515032.224 ops/s
[info] # Warmup Iteration   3: 16608152.145 ops/s
[info] # Warmup Iteration   4: 16643592.213 ops/s
[info] # Warmup Iteration   5: 16121909.905 ops/s
[info] Iteration   1: 16734405.224 ops/s
[info]                  ·gc.alloc.rate:                   1831.304 MB/sec
[info]                  ·gc.alloc.rate.norm:              172.276 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.008 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2017.890 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 189.829 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 16665432.823 ops/s
[info]                  ·gc.alloc.rate:                   1845.449 MB/sec
[info]                  ·gc.alloc.rate.norm:              174.250 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.008 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2020.114 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 190.742 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 16733778.802 ops/s
[info]                  ·gc.alloc.rate:                   1827.489 MB/sec
[info]                  ·gc.alloc.rate.norm:              171.882 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.006 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.263 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 126.809 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 16741145.890 ops/s
[info]                  ·gc.alloc.rate:                   1839.910 MB/sec
[info]                  ·gc.alloc.rate.norm:              172.952 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.004 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2026.291 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 190.472 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 16705846.625 ops/s
[info]                  ·gc.alloc.rate:                   1863.457 MB/sec
[info]                  ·gc.alloc.rate.norm:              175.586 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.002 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2028.383 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 191.126 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeUPickle":
[info]   16716121.873 ±(99.9%) 120961.867 ops/s [Average]
[info]   (min, avg, max) = (16665432.823, 16716121.873, 16741145.890), stdev = 31413.413
[info]   CI (99.9%): [16595160.006, 16837083.740] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeUPickle:·gc.alloc.rate":
[info]   1841.522 ±(99.9%) 54.472 MB/sec [Average]
[info]   (min, avg, max) = (1827.489, 1841.522, 1863.457), stdev = 14.146
[info]   CI (99.9%): [1787.050, 1895.994] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeUPickle:·gc.alloc.rate.norm":
[info]   173.389 ±(99.9%) 5.861 B/op [Average]
[info]   (min, avg, max) = (171.882, 173.389, 175.586), stdev = 1.522
[info]   CI (99.9%): [167.528, 179.251] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeUPickle:·gc.churn.PS_Eden_Space":
[info]   0.058 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.058, 0.083), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   0.005 ±(99.9%) 0.010 B/op [Average]
[info]   (min, avg, max) = (0.002, 0.005, 0.008), stdev = 0.003
[info]   CI (99.9%): [≈ 0, 0.015] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space":
[info]   1888.188 ±(99.9%) 1162.348 MB/sec [Average]
[info]   (min, avg, max) = (1348.263, 1888.188, 2028.383), stdev = 301.858
[info]   CI (99.9%): [725.840, 3050.537] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   177.796 ±(99.9%) 109.768 B/op [Average]
[info]   (min, avg, max) = (126.809, 177.796, 191.126), stdev = 28.506
[info]   CI (99.9%): [68.028, 287.564] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeUPickle:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntBenchmark.writeUPickle:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 72.69% complete, ETA 00:37:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 100491.948 ops/s
[info] # Warmup Iteration   2: 160176.726 ops/s
[info] # Warmup Iteration   3: 166957.858 ops/s
[info] # Warmup Iteration   4: 166246.465 ops/s
[info] # Warmup Iteration   5: 167781.783 ops/s
[info] Iteration   1: 168524.257 ops/s
[info]                  ·gc.alloc.rate:                   3185.670 MB/sec
[info]                  ·gc.alloc.rate.norm:              29745.180 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.972 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2706.372 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 25269.890 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 167478.878 ops/s
[info]                  ·gc.alloc.rate:                   3206.587 MB/sec
[info]                  ·gc.alloc.rate.norm:              30137.056 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.782 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3387.548 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 31837.819 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 167703.588 ops/s
[info]                  ·gc.alloc.rate:                   3185.293 MB/sec
[info]                  ·gc.alloc.rate.norm:              29886.757 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.781 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2715.427 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 25478.126 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 166619.223 ops/s
[info]                  ·gc.alloc.rate:                   3192.531 MB/sec
[info]                  ·gc.alloc.rate.norm:              30150.614 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.983 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3398.221 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 32093.166 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 166994.230 ops/s
[info]                  ·gc.alloc.rate:                   3171.521 MB/sec
[info]                  ·gc.alloc.rate.norm:              29894.654 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.392 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2720.237 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 25640.871 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala":
[info]   167464.035 ±(99.9%) 2800.732 ops/s [Average]
[info]   (min, avg, max) = (166619.223, 167464.035, 168524.257), stdev = 727.341
[info]   CI (99.9%): [164663.303, 170264.767] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   3188.321 ±(99.9%) 49.078 MB/sec [Average]
[info]   (min, avg, max) = (3171.521, 3188.321, 3206.587), stdev = 12.746
[info]   CI (99.9%): [3139.242, 3237.399] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   29962.852 ±(99.9%) 676.399 B/op [Average]
[info]   (min, avg, max) = (29745.180, 29962.852, 30150.614), stdev = 175.659
[info]   CI (99.9%): [29286.453, 30639.251] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.083 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.083, 0.104), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.181] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.782 ±(99.9%) 0.920 B/op [Average]
[info]   (min, avg, max) = (0.392, 0.782, 0.983), stdev = 0.239
[info]   CI (99.9%): [≈ 0, 1.702] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   2985.561 ±(99.9%) 1432.001 MB/sec [Average]
[info]   (min, avg, max) = (2706.372, 2985.561, 3398.221), stdev = 371.886
[info]   CI (99.9%): [1553.561, 4417.562] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   28063.974 ±(99.9%) 13728.132 B/op [Average]
[info]   (min, avg, max) = (25269.890, 28063.974, 32093.166), stdev = 3565.152
[info]   CI (99.9%): [14335.843, 41792.106] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readJsoniterScala:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.000, 5.000), stdev = 0.707
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 72.89% complete, ETA 00:36:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1981.839 ops/s
[info] # Warmup Iteration   2: 28385.263 ops/s
[info] # Warmup Iteration   3: 32646.202 ops/s
[info] # Warmup Iteration   4: 32966.685 ops/s
[info] # Warmup Iteration   5: 32836.293 ops/s
[info] Iteration   1: 33376.319 ops/s
[info]                  ·gc.alloc.rate:                   2510.523 MB/sec
[info]                  ·gc.alloc.rate.norm:              118408.425 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3.926 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2701.264 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 127404.717 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 32977.907 ops/s
[info]                  ·gc.alloc.rate:                   2456.473 MB/sec
[info]                  ·gc.alloc.rate.norm:              117223.363 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3.973 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2029.618 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 96853.737 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 32922.903 ops/s
[info]                  ·gc.alloc.rate:                   2479.941 MB/sec
[info]                  ·gc.alloc.rate.norm:              118553.135 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.985 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2709.759 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 129539.530 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 33781.112 ops/s
[info]                  ·gc.alloc.rate:                   2542.622 MB/sec
[info]                  ·gc.alloc.rate.norm:              118465.371 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.940 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2034.941 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 94811.604 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 33580.754 ops/s
[info]                  ·gc.alloc.rate:                   2555.675 MB/sec
[info]                  ·gc.alloc.rate.norm:              119777.015 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.927 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2715.823 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 127282.709 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson":
[info]   33327.799 ±(99.9%) 1438.460 ops/s [Average]
[info]   (min, avg, max) = (32922.903, 33327.799, 33781.112), stdev = 373.563
[info]   CI (99.9%): [31889.339, 34766.259] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2509.047 ±(99.9%) 160.100 MB/sec [Average]
[info]   (min, avg, max) = (2456.473, 2509.047, 2555.675), stdev = 41.577
[info]   CI (99.9%): [2348.947, 2669.147] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   118485.462 ±(99.9%) 3482.609 B/op [Average]
[info]   (min, avg, max) = (117223.363, 118485.462, 119777.015), stdev = 904.422
[info]   CI (99.9%): [115002.853, 121968.071] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   0.067 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.067, 0.083), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   3.150 ±(99.9%) 3.235 B/op [Average]
[info]   (min, avg, max) = (1.940, 3.150, 3.973), stdev = 0.840
[info]   CI (99.9%): [≈ 0, 6.385] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   2438.281 ±(99.9%) 1427.310 MB/sec [Average]
[info]   (min, avg, max) = (2029.618, 2438.281, 2715.823), stdev = 370.668
[info]   CI (99.9%): [1010.971, 3865.591] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   115178.459 ±(99.9%) 68147.662 B/op [Average]
[info]   (min, avg, max) = (94811.604, 115178.459, 129539.530), stdev = 17697.732
[info]   CI (99.9%): [47030.797, 183326.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.readPlayJson:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 73.09% complete, ETA 00:36:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 27854.072 ops/s
[info] # Warmup Iteration   2: 116879.990 ops/s
[info] # Warmup Iteration   3: 121294.196 ops/s
[info] # Warmup Iteration   4: 122672.762 ops/s
[info] # Warmup Iteration   5: 121657.764 ops/s
[info] Iteration   1: 122636.651 ops/s
[info]                  ·gc.alloc.rate:                   1001.835 MB/sec
[info]                  ·gc.alloc.rate.norm:              12859.604 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.329 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8642.885 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 122351.703 ops/s
[info]                  ·gc.alloc.rate:                   1031.866 MB/sec
[info]                  ·gc.alloc.rate.norm:              13276.815 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.268 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1346.868 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17329.887 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 122891.155 ops/s
[info]                  ·gc.alloc.rate:                   1008.374 MB/sec
[info]                  ·gc.alloc.rate.norm:              12916.630 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.671 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8629.290 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 122112.548 ops/s
[info]                  ·gc.alloc.rate:                   1027.605 MB/sec
[info]                  ·gc.alloc.rate.norm:              13245.426 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.805 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.159 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17377.246 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 121480.548 ops/s
[info]                  ·gc.alloc.rate:                   1003.971 MB/sec
[info]                  ·gc.alloc.rate.norm:              13009.353 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.270 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.692 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8742.592 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala":
[info]   122294.521 ±(99.9%) 2084.298 ops/s [Average]
[info]   (min, avg, max) = (121480.548, 122294.521, 122891.155), stdev = 541.286
[info]   CI (99.9%): [120210.223, 124378.819] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1014.730 ±(99.9%) 53.834 MB/sec [Average]
[info]   (min, avg, max) = (1001.835, 1014.730, 1031.866), stdev = 13.981
[info]   CI (99.9%): [960.896, 1068.565] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   13061.565 ±(99.9%) 732.276 B/op [Average]
[info]   (min, avg, max) = (12859.604, 13061.565, 13276.815), stdev = 190.170
[info]   CI (99.9%): [12329.290, 13793.841] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.021 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.062), stdev = 0.025
[info]   CI (99.9%): [≈ 0, 0.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.268 ±(99.9%) 1.265 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.268, 0.805), stdev = 0.329
[info]   CI (99.9%): [≈ 0, 1.534] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   943.344 ±(99.9%) 1420.716 MB/sec [Average]
[info]   (min, avg, max) = (673.329, 943.344, 1348.159), stdev = 368.955
[info]   CI (99.9%): [≈ 0, 2364.060] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   12144.380 ±(99.9%) 18311.913 B/op [Average]
[info]   (min, avg, max) = (8629.290, 12144.380, 17377.246), stdev = 4755.546
[info]   CI (99.9%): [≈ 0, 30456.293] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJacksonScala:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 73.29% complete, ETA 00:36:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 273212.202 ops/s
[info] # Warmup Iteration   2: 400155.874 ops/s
[info] # Warmup Iteration   3: 410916.086 ops/s
[info] # Warmup Iteration   4: 410490.877 ops/s
[info] # Warmup Iteration   5: 408296.323 ops/s
[info] Iteration   1: 408883.770 ops/s
[info]                  ·gc.alloc.rate:                   1621.126 MB/sec
[info]                  ·gc.alloc.rate.norm:              6241.663 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.240 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1346.552 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5184.497 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 408157.471 ops/s
[info]                  ·gc.alloc.rate:                   1661.045 MB/sec
[info]                  ·gc.alloc.rate.norm:              6403.254 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.160 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2021.820 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7794.029 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 384452.917 ops/s
[info]                  ·gc.alloc.rate:                                  1533.277 MB/sec
[info]                  ·gc.alloc.rate.norm:                             6277.705 B/op
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.510 MB/sec
[info]                  ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 2.087 B/op
[info]                  ·gc.churn.Compressed_Class_Space:                0.014 MB/sec
[info]                  ·gc.churn.Compressed_Class_Space.norm:           0.057 B/op
[info]                  ·gc.churn.PS_Eden_Space:                         0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:                    0.511 B/op
[info]                  ·gc.churn.PS_Old_Gen:                            0.046 MB/sec
[info]                  ·gc.churn.PS_Old_Gen.norm:                       0.188 B/op
[info]                  ·gc.churn.PS_Survivor_Space:                     1363.004 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm:                5580.556 B/op
[info]                  ·gc.count:                                       4.000 counts
[info]                  ·gc.time:                                        52.000 ms
[info] Iteration   4: 404903.526 ops/s
[info]                  ·gc.alloc.rate:                   1613.095 MB/sec
[info]                  ·gc.alloc.rate.norm:              6268.849 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.162 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1351.219 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5251.140 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 413093.282 ops/s
[info]                  ·gc.alloc.rate:                   1657.708 MB/sec
[info]                  ·gc.alloc.rate.norm:              6317.004 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1351.971 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5151.934 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala":
[info]   403898.193 ±(99.9%) 43337.989 ops/s [Average]
[info]   (min, avg, max) = (384452.917, 403898.193, 413093.282), stdev = 11254.738
[info]   CI (99.9%): [360560.204, 447236.182] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1617.250 ±(99.9%) 198.584 MB/sec [Average]
[info]   (min, avg, max) = (1533.277, 1617.250, 1661.045), stdev = 51.572
[info]   CI (99.9%): [1418.666, 1815.835] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   6301.695 ±(99.9%) 242.062 B/op [Average]
[info]   (min, avg, max) = (6241.663, 6301.695, 6403.254), stdev = 62.863
[info]   CI (99.9%): [6059.633, 6543.757] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.CodeHeap_'non-profiled_nmethods'":
[info]   0.102 ±(99.9%) 0.878 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.102, 0.510), stdev = 0.228
[info]   CI (99.9%): [≈ 0, 0.980] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
[info]   0.417 ±(99.9%) 3.593 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.417, 2.087), stdev = 0.933
[info]   CI (99.9%): [≈ 0, 4.011] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.Compressed_Class_Space":
[info]   0.003 ±(99.9%) 0.024 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.003, 0.014), stdev = 0.006
[info]   CI (99.9%): [≈ 0, 0.027] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.Compressed_Class_Space.norm":
[info]   0.011 ±(99.9%) 0.099 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.011, 0.057), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.110] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.054 ±(99.9%) 0.176 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.125), stdev = 0.046
[info]   CI (99.9%): [≈ 0, 0.230] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.215 ±(99.9%) 0.722 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.215, 0.511), stdev = 0.187
[info]   CI (99.9%): [≈ 0, 0.936] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Old_Gen":
[info]   0.009 ±(99.9%) 0.079 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.009, 0.046), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.088] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Old_Gen.norm":
[info]   0.038 ±(99.9%) 0.324 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.038, 0.188), stdev = 0.084
[info]   CI (99.9%): [≈ 0, 0.362] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   1486.913 ±(99.9%) 1151.662 MB/sec [Average]
[info]   (min, avg, max) = (1346.552, 1486.913, 2021.820), stdev = 299.083
[info]   CI (99.9%): [335.251, 2638.576] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   5792.431 ±(99.9%) 4358.250 B/op [Average]
[info]   (min, avg, max) = (5151.934, 5792.431, 7794.029), stdev = 1131.824
[info]   CI (99.9%): [1434.181, 10150.682] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 4.000), stdev = 0.894
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.time":
[info]   61.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 12.200, 52.000), stdev = 22.264
[info]   CI (99.9%): [61.000, 61.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 73.49% complete, ETA 00:35:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 335120.553 ops/s
[info] # Warmup Iteration   2: 445675.295 ops/s
[info] # Warmup Iteration   3: 449961.475 ops/s
[info] # Warmup Iteration   4: 452621.833 ops/s
[info] # Warmup Iteration   5: 448837.411 ops/s
[info] Iteration   1: 456414.561 ops/s
[info]                  ·gc.alloc.rate:                   1310.599 MB/sec
[info]                  ·gc.alloc.rate.norm:              4519.196 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.072 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1344.311 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4635.438 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 457216.215 ops/s
[info]                  ·gc.alloc.rate:                   1290.103 MB/sec
[info]                  ·gc.alloc.rate.norm:              4440.390 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.879 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2315.972 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 457132.275 ops/s
[info]                  ·gc.alloc.rate:                   1316.555 MB/sec
[info]                  ·gc.alloc.rate.norm:              4532.587 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.215 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1346.007 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4633.983 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 448706.597 ops/s
[info]                  ·gc.alloc.rate:                   1305.273 MB/sec
[info]                  ·gc.alloc.rate.norm:              4578.046 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1346.680 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4723.273 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 456293.412 ops/s
[info]                  ·gc.alloc.rate:                   1313.804 MB/sec
[info]                  ·gc.alloc.rate.norm:              4530.588 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.431 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.085 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4648.805 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   455152.612 ±(99.9%) 13966.559 ops/s [Average]
[info]   (min, avg, max) = (448706.597, 455152.612, 457216.215), stdev = 3627.071
[info]   CI (99.9%): [441186.053, 469119.171] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   1307.267 ±(99.9%) 40.324 MB/sec [Average]
[info]   (min, avg, max) = (1290.103, 1307.267, 1316.555), stdev = 10.472
[info]   CI (99.9%): [1266.943, 1347.591] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   4520.161 ±(99.9%) 192.321 B/op [Average]
[info]   (min, avg, max) = (4440.390, 4520.161, 4578.046), stdev = 49.945
[info]   CI (99.9%): [4327.840, 4712.482] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   0.042 ±(99.9%) 0.204 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.125), stdev = 0.053
[info]   CI (99.9%): [≈ 0, 0.246] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   0.144 ±(99.9%) 0.705 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.144, 0.431), stdev = 0.183
[info]   CI (99.9%): [≈ 0, 0.848] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space":
[info]   1211.592 ±(99.9%) 1159.633 MB/sec [Average]
[info]   (min, avg, max) = (672.879, 1211.592, 1348.085), stdev = 301.153
[info]   CI (99.9%): [51.959, 2371.225] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   4191.494 ±(99.9%) 4039.684 B/op [Average]
[info]   (min, avg, max) = (2315.972, 4191.494, 4723.273), stdev = 1049.093
[info]   CI (99.9%): [151.810, 8231.179] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 73.69% complete, ETA 00:35:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 14433.549 ops/s
[info] # Warmup Iteration   2: 60967.887 ops/s
[info] # Warmup Iteration   3: 60543.556 ops/s
[info] # Warmup Iteration   4: 60938.665 ops/s
[info] # Warmup Iteration   5: 60858.368 ops/s
[info] Iteration   1: 61200.441 ops/s
[info]                  ·gc.alloc.rate:                   1435.881 MB/sec
[info]                  ·gc.alloc.rate.norm:              36934.665 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.535 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.255 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 34706.425 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 61084.475 ops/s
[info]                  ·gc.alloc.rate:                   1419.086 MB/sec
[info]                  ·gc.alloc.rate.norm:              36566.919 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.609 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.441 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 34772.321 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 61047.491 ops/s
[info]                  ·gc.alloc.rate:                   1424.681 MB/sec
[info]                  ·gc.alloc.rate.norm:              36733.873 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.710 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 34826.599 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 61156.710 ops/s
[info]                  ·gc.alloc.rate:                   1416.296 MB/sec
[info]                  ·gc.alloc.rate.norm:              36437.314 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.536 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1352.587 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 34798.255 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 61161.021 ops/s
[info]                  ·gc.alloc.rate:                   1428.332 MB/sec
[info]                  ·gc.alloc.rate.norm:              36764.036 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.536 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1352.603 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 34814.828 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson":
[info]   61130.028 ±(99.9%) 239.840 ops/s [Average]
[info]   (min, avg, max) = (61047.491, 61130.028, 61200.441), stdev = 62.286
[info]   CI (99.9%): [60890.188, 61369.867] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1424.855 ±(99.9%) 29.842 MB/sec [Average]
[info]   (min, avg, max) = (1416.296, 1424.855, 1435.881), stdev = 7.750
[info]   CI (99.9%): [1395.014, 1454.697] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   36687.361 ±(99.9%) 736.248 B/op [Average]
[info]   (min, avg, max) = (36437.314, 36687.361, 36934.665), stdev = 191.201
[info]   CI (99.9%): [35951.114, 37423.609] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   0.025 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   0.643 ±(99.9%) 2.263 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.643, 1.609), stdev = 0.588
[info]   CI (99.9%): [≈ 0, 2.906] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   1350.919 ±(99.9%) 6.272 MB/sec [Average]
[info]   (min, avg, max) = (1349.255, 1350.919, 1352.603), stdev = 1.629
[info]   CI (99.9%): [1344.647, 1357.191] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   34783.686 ±(99.9%) 183.886 B/op [Average]
[info]   (min, avg, max) = (34706.425, 34783.686, 34826.599), stdev = 47.755
[info]   CI (99.9%): [34599.799, 34967.572] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.IntMapOfBooleansBenchmark.writePlayJson:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.200, 3.000), stdev = 0.837
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 73.90% complete, ETA 00:35:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 124616.571 ops/s
[info] # Warmup Iteration   2: 295576.190 ops/s
[info] # Warmup Iteration   3: 314415.848 ops/s
[info] # Warmup Iteration   4: 312749.918 ops/s
[info] # Warmup Iteration   5: 314196.691 ops/s
[info] Iteration   1: 315595.478 ops/s
[info]                  ·gc.alloc.rate:                   2192.389 MB/sec
[info]                  ·gc.alloc.rate.norm:              10936.551 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.311 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2027.469 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10113.861 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 315379.252 ops/s
[info]                  ·gc.alloc.rate:                   2189.556 MB/sec
[info]                  ·gc.alloc.rate.norm:              10927.165 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.416 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2030.916 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10135.457 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 314873.696 ops/s
[info]                  ·gc.alloc.rate:                   2225.412 MB/sec
[info]                  ·gc.alloc.rate.norm:              11125.150 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.208 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2710.756 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13551.451 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 312304.246 ops/s
[info]                  ·gc.alloc.rate:                   2197.302 MB/sec
[info]                  ·gc.alloc.rate.norm:              11074.304 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.210 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2035.578 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10259.225 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 314851.309 ops/s
[info]                  ·gc.alloc.rate:                   2212.036 MB/sec
[info]                  ·gc.alloc.rate.norm:              11059.131 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.208 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2037.388 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10185.975 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce":
[info]   314600.796 ±(99.9%) 5096.382 ops/s [Average]
[info]   (min, avg, max) = (312304.246, 314600.796, 315595.478), stdev = 1323.514
[info]   CI (99.9%): [309504.414, 319697.179] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:·gc.alloc.rate":
[info]   2203.339 ±(99.9%) 58.054 MB/sec [Average]
[info]   (min, avg, max) = (2189.556, 2203.339, 2225.412), stdev = 15.076
[info]   CI (99.9%): [2145.285, 2261.393] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   11024.460 ±(99.9%) 339.094 B/op [Average]
[info]   (min, avg, max) = (10927.165, 11024.460, 11125.150), stdev = 88.062
[info]   CI (99.9%): [10685.367, 11363.554] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   0.054 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.054, 0.083), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.126] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.271 ±(99.9%) 0.356 B/op [Average]
[info]   (min, avg, max) = (0.208, 0.271, 0.416), stdev = 0.092
[info]   CI (99.9%): [≈ 0, 0.627] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   2168.421 ±(99.9%) 1167.513 MB/sec [Average]
[info]   (min, avg, max) = (2027.469, 2168.421, 2710.756), stdev = 303.199
[info]   CI (99.9%): [1000.909, 3335.934] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   10849.194 ±(99.9%) 5820.797 B/op [Average]
[info]   (min, avg, max) = (10113.861, 10849.194, 13551.451), stdev = 1511.643
[info]   CI (99.9%): [5028.396, 16669.991] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readCirce:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 4.000), stdev = 0.837
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 74.10% complete, ETA 00:35:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 136885.164 ops/s
[info] # Warmup Iteration   2: 449146.591 ops/s
[info] # Warmup Iteration   3: 472445.944 ops/s
[info] # Warmup Iteration   4: 485252.785 ops/s
[info] # Warmup Iteration   5: 489523.737 ops/s
[info] Iteration   1: 482646.941 ops/s
[info]                  ·gc.alloc.rate:                   1278.283 MB/sec
[info]                  ·gc.alloc.rate.norm:              4168.665 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.044 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2198.154 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 488184.971 ops/s
[info]                  ·gc.alloc.rate:                   1309.791 MB/sec
[info]                  ·gc.alloc.rate.norm:              4223.059 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.134 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4346.589 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 487125.190 ops/s
[info]                  ·gc.alloc.rate:                   1300.432 MB/sec
[info]                  ·gc.alloc.rate.norm:              4201.971 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.781 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4358.198 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 488504.304 ops/s
[info]                  ·gc.alloc.rate:                   1311.135 MB/sec
[info]                  ·gc.alloc.rate.norm:              4224.276 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.201 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.241 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4350.270 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 485894.497 ops/s
[info]                  ·gc.alloc.rate:                   1306.529 MB/sec
[info]                  ·gc.alloc.rate.norm:              4232.584 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.067 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1351.090 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4376.942 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala":
[info]   486471.181 ±(99.9%) 9123.623 ops/s [Average]
[info]   (min, avg, max) = (482646.941, 486471.181, 488504.304), stdev = 2369.376
[info]   CI (99.9%): [477347.558, 495594.803] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1301.234 ±(99.9%) 51.900 MB/sec [Average]
[info]   (min, avg, max) = (1278.283, 1301.234, 1311.135), stdev = 13.478
[info]   CI (99.9%): [1249.333, 1353.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   4210.111 ±(99.9%) 99.249 B/op [Average]
[info]   (min, avg, max) = (4168.665, 4210.111, 4232.584), stdev = 25.775
[info]   CI (99.9%): [4110.862, 4309.360] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.025 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.129] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.081 ±(99.9%) 0.337 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.081, 0.201), stdev = 0.087
[info]   CI (99.9%): [≈ 0, 0.417] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1214.452 ±(99.9%) 1163.278 MB/sec [Average]
[info]   (min, avg, max) = (674.044, 1214.452, 1351.090), stdev = 302.100
[info]   CI (99.9%): [51.174, 2377.730] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   3926.031 ±(99.9%) 3719.658 B/op [Average]
[info]   (min, avg, max) = (2198.154, 3926.031, 4376.942), stdev = 965.983
[info]   CI (99.9%): [206.373, 7645.689] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJacksonScala:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 74.30% complete, ETA 00:34:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 908921.667 ops/s
[info] # Warmup Iteration   2: 1302954.602 ops/s
[info] # Warmup Iteration   3: 1286140.975 ops/s
[info] # Warmup Iteration   4: 1328226.137 ops/s
[info] # Warmup Iteration   5: 1328367.121 ops/s
[info] Iteration   1: 1327549.766 ops/s
[info]                  ·gc.alloc.rate:                   2672.569 MB/sec
[info]                  ·gc.alloc.rate.norm:              3167.708 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.099 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2701.210 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3201.655 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 1317709.178 ops/s
[info]                  ·gc.alloc.rate:                   2650.642 MB/sec
[info]                  ·gc.alloc.rate.norm:              3166.378 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.149 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2028.401 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2423.068 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 1331828.169 ops/s
[info]                  ·gc.alloc.rate:                   2707.073 MB/sec
[info]                  ·gc.alloc.rate.norm:              3199.362 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.074 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2708.693 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3201.277 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 1319540.341 ops/s
[info]                  ·gc.alloc.rate:                   2684.399 MB/sec
[info]                  ·gc.alloc.rate.norm:              3201.512 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.149 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2713.960 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3236.767 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 1331378.420 ops/s
[info]                  ·gc.alloc.rate:                   2706.082 MB/sec
[info]                  ·gc.alloc.rate.norm:              3199.316 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.074 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2716.823 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3212.015 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala":
[info]   1325601.175 ±(99.9%) 25467.166 ops/s [Average]
[info]   (min, avg, max) = (1317709.178, 1325601.175, 1331828.169), stdev = 6613.742
[info]   CI (99.9%): [1300134.009, 1351068.341] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   2684.153 ±(99.9%) 91.598 MB/sec [Average]
[info]   (min, avg, max) = (2650.642, 2684.153, 2707.073), stdev = 23.788
[info]   CI (99.9%): [2592.555, 2775.751] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   3186.855 ±(99.9%) 69.749 B/op [Average]
[info]   (min, avg, max) = (3166.378, 3186.855, 3201.512), stdev = 18.114
[info]   CI (99.9%): [3117.106, 3256.605] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.092 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 0.092, 0.125), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.213] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.109 ±(99.9%) 0.147 B/op [Average]
[info]   (min, avg, max) = (0.074, 0.109, 0.149), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.255] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   2573.817 ±(99.9%) 1174.272 MB/sec [Average]
[info]   (min, avg, max) = (2028.401, 2573.817, 2716.823), stdev = 304.955
[info]   CI (99.9%): [1399.545, 3748.090] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   3054.956 ±(99.9%) 1361.322 B/op [Average]
[info]   (min, avg, max) = (2423.068, 3054.956, 3236.767), stdev = 353.531
[info]   CI (99.9%): [1693.635, 4416.278] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readJsoniterScala:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 74.50% complete, ETA 00:34:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 28338.555 ops/s
[info] # Warmup Iteration   2: 93987.362 ops/s
[info] # Warmup Iteration   3: 98456.092 ops/s
[info] # Warmup Iteration   4: 98997.043 ops/s
[info] # Warmup Iteration   5: 100257.273 ops/s
[info] Iteration   1: 101451.926 ops/s
[info]                  ·gc.alloc.rate:                   3379.736 MB/sec
[info]                  ·gc.alloc.rate.norm:              52442.460 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.969 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3386.682 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 52550.228 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 101437.322 ops/s
[info]                  ·gc.alloc.rate:                   3408.564 MB/sec
[info]                  ·gc.alloc.rate.norm:              52875.871 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.969 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3393.835 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 52647.389 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 102045.104 ops/s
[info]                  ·gc.alloc.rate:                   3400.620 MB/sec
[info]                  ·gc.alloc.rate.norm:              52457.165 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.963 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2717.293 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 41916.329 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 102240.369 ops/s
[info]                  ·gc.alloc.rate:                   3435.457 MB/sec
[info]                  ·gc.alloc.rate.norm:              52882.359 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.282 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3400.762 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 52348.304 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 100966.078 ops/s
[info]                  ·gc.alloc.rate:                   3394.641 MB/sec
[info]                  ·gc.alloc.rate.norm:              52925.358 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.649 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3402.686 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 53050.789 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson":
[info]   101628.160 ±(99.9%) 1977.065 ops/s [Average]
[info]   (min, avg, max) = (100966.078, 101628.160, 102240.369), stdev = 513.438
[info]   CI (99.9%): [99651.094, 103605.225] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3403.803 ±(99.9%) 79.334 MB/sec [Average]
[info]   (min, avg, max) = (3379.736, 3403.803, 3435.457), stdev = 20.603
[info]   CI (99.9%): [3324.469, 3483.138] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   52716.643 ±(99.9%) 941.013 B/op [Average]
[info]   (min, avg, max) = (52442.460, 52716.643, 52925.358), stdev = 244.378
[info]   CI (99.9%): [51775.629, 53657.656] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   0.062 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.062, 0.083), stdev = 0.015
[info]   CI (99.9%): [0.006, 0.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   0.966 ±(99.9%) 0.862 B/op [Average]
[info]   (min, avg, max) = (0.649, 0.966, 1.282), stdev = 0.224
[info]   CI (99.9%): [0.105, 1.828] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   3260.252 ±(99.9%) 1169.011 MB/sec [Average]
[info]   (min, avg, max) = (2717.293, 3260.252, 3402.686), stdev = 303.588
[info]   CI (99.9%): [2091.241, 4429.263] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   50502.608 ±(99.9%) 18508.829 B/op [Average]
[info]   (min, avg, max) = (41916.329, 50502.608, 53050.789), stdev = 4806.684
[info]   CI (99.9%): [31993.779, 69011.436] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readPlayJson:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 74.70% complete, ETA 00:34:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 333906.405 ops/s
[info] # Warmup Iteration   2: 569135.961 ops/s
[info] # Warmup Iteration   3: 569940.565 ops/s
[info] # Warmup Iteration   4: 582787.671 ops/s
[info] # Warmup Iteration   5: 583274.923 ops/s
[info] Iteration   1: 585523.438 ops/s
[info]                  ·gc.alloc.rate:                   2630.079 MB/sec
[info]                  ·gc.alloc.rate.norm:              7069.802 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.224 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2700.408 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7258.849 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 581586.736 ops/s
[info]                  ·gc.alloc.rate:                   2600.460 MB/sec
[info]                  ·gc.alloc.rate.norm:              7035.181 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.338 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2029.626 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5490.870 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 583747.152 ops/s
[info]                  ·gc.alloc.rate:                   2649.833 MB/sec
[info]                  ·gc.alloc.rate.norm:              7146.035 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.224 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2708.719 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7304.838 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 581987.830 ops/s
[info]                  ·gc.alloc.rate:                   2642.866 MB/sec
[info]                  ·gc.alloc.rate.norm:              7147.421 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.113 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2712.626 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7336.082 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 585698.479 ops/s
[info]                  ·gc.alloc.rate:                   2659.180 MB/sec
[info]                  ·gc.alloc.rate.norm:              7146.709 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.056 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2716.093 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7299.665 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readUPickle":
[info]   583708.727 ±(99.9%) 7386.339 ops/s [Average]
[info]   (min, avg, max) = (581586.736, 583708.727, 585698.479), stdev = 1918.209
[info]   CI (99.9%): [576322.388, 591095.066] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readUPickle:·gc.alloc.rate":
[info]   2636.484 ±(99.9%) 87.656 MB/sec [Average]
[info]   (min, avg, max) = (2600.460, 2636.484, 2659.180), stdev = 22.764
[info]   CI (99.9%): [2548.827, 2724.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readUPickle:·gc.alloc.rate.norm":
[info]   7109.029 ±(99.9%) 204.261 B/op [Average]
[info]   (min, avg, max) = (7035.181, 7109.029, 7147.421), stdev = 53.046
[info]   CI (99.9%): [6904.769, 7313.290] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readUPickle:·gc.churn.PS_Eden_Space":
[info]   0.071 ±(99.9%) 0.156 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.071, 0.125), stdev = 0.041
[info]   CI (99.9%): [≈ 0, 0.227] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   0.191 ±(99.9%) 0.423 B/op [Average]
[info]   (min, avg, max) = (0.056, 0.191, 0.338), stdev = 0.110
[info]   CI (99.9%): [≈ 0, 0.614] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readUPickle:·gc.churn.PS_Survivor_Space":
[info]   2573.494 ±(99.9%) 1170.933 MB/sec [Average]
[info]   (min, avg, max) = (2029.626, 2573.494, 2716.093), stdev = 304.088
[info]   CI (99.9%): [1402.561, 3744.428] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   6938.061 ±(99.9%) 3116.982 B/op [Average]
[info]   (min, avg, max) = (5490.870, 6938.061, 7336.082), stdev = 809.470
[info]   CI (99.9%): [3821.079, 10055.043] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readUPickle:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.readUPickle:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 74.90% complete, ETA 00:34:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 176469.892 ops/s
[info] # Warmup Iteration   2: 326937.937 ops/s
[info] # Warmup Iteration   3: 338241.335 ops/s
[info] # Warmup Iteration   4: 339513.432 ops/s
[info] # Warmup Iteration   5: 339014.846 ops/s
[info] Iteration   1: 339125.856 ops/s
[info]                  ·gc.alloc.rate:                   548.173 MB/sec
[info]                  ·gc.alloc.rate.norm:              2544.763 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.250 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.159 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.288 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3125.583 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 313455.140 ops/s
[info]                  ·gc.alloc.rate:      490.746 MB/sec
[info]                  ·gc.alloc.rate.norm: 2463.060 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 340000.236 ops/s
[info]                  ·gc.alloc.rate:                   549.808 MB/sec
[info]                  ·gc.alloc.rate.norm:              2545.225 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.732 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3118.908 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 339649.063 ops/s
[info]                  ·gc.alloc.rate:                   550.859 MB/sec
[info]                  ·gc.alloc.rate.norm:              2552.754 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.096 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.707 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3122.048 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 337413.837 ops/s
[info]                  ·gc.alloc.rate:                   547.869 MB/sec
[info]                  ·gc.alloc.rate.norm:              2555.924 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.194 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.011 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3144.407 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce":
[info]   333928.826 ±(99.9%) 44236.733 ops/s [Average]
[info]   (min, avg, max) = (313455.140, 333928.826, 340000.236), stdev = 11488.139
[info]   CI (99.9%): [289692.093, 378165.560] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:·gc.alloc.rate":
[info]   537.491 ±(99.9%) 100.731 MB/sec [Average]
[info]   (min, avg, max) = (490.746, 537.491, 550.859), stdev = 26.159
[info]   CI (99.9%): [436.760, 638.221] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   2532.345 ±(99.9%) 150.286 B/op [Average]
[info]   (min, avg, max) = (2463.060, 2532.345, 2555.924), stdev = 39.029
[info]   CI (99.9%): [2382.059, 2682.631] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   0.062 ±(99.9%) 0.409 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.062, 0.250), stdev = 0.106
[info]   CI (99.9%): [≈ 0, 0.471] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.290 ±(99.9%) 1.897 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.290, 1.159), stdev = 0.493
[info]   CI (99.9%): [≈ 0, 2.187] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   538.948 ±(99.9%) 1160.126 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 538.948, 674.011), stdev = 301.281
[info]   CI (99.9%): [≈ 0, 1699.074] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   2502.189 ±(99.9%) 5386.286 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2502.189, 3144.407), stdev = 1398.801
[info]   CI (99.9%): [≈ 0, 7888.476] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeCirce:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 0.707
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 75.10% complete, ETA 00:33:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 272362.239 ops/s
[info] # Warmup Iteration   2: 739948.180 ops/s
[info] # Warmup Iteration   3: 757769.944 ops/s
[info] # Warmup Iteration   4: 779909.805 ops/s
[info] # Warmup Iteration   5: 783047.615 ops/s
[info] Iteration   1: 781760.653 ops/s
[info]                  ·gc.alloc.rate:                   576.785 MB/sec
[info]                  ·gc.alloc.rate.norm:              1161.441 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1.186 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.389 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.024 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1357.245 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 781294.383 ops/s
[info]                  ·gc.alloc.rate:                   584.580 MB/sec
[info]                  ·gc.alloc.rate.norm:              1177.393 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.042 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.265 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1358.028 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 780125.522 ops/s
[info]                  ·gc.alloc.rate:                   580.755 MB/sec
[info]                  ·gc.alloc.rate.norm:              1171.795 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.041 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1360.019 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 779386.610 ops/s
[info]                  ·gc.alloc.rate:                   587.534 MB/sec
[info]                  ·gc.alloc.rate.norm:              1186.686 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.042 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.013 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1361.354 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 781897.542 ops/s
[info]                  ·gc.alloc.rate:      564.269 MB/sec
[info]                  ·gc.alloc.rate.norm: 1136.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala":
[info]   780892.942 ±(99.9%) 4209.930 ops/s [Average]
[info]   (min, avg, max) = (779386.610, 780892.942, 781897.542), stdev = 1093.305
[info]   CI (99.9%): [776683.012, 785102.872] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   578.785 ±(99.9%) 34.907 MB/sec [Average]
[info]   (min, avg, max) = (564.269, 578.785, 587.534), stdev = 9.065
[info]   CI (99.9%): [543.878, 613.691] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1166.663 ±(99.9%) 74.812 B/op [Average]
[info]   (min, avg, max) = (1136.001, 1166.663, 1186.686), stdev = 19.428
[info]   CI (99.9%): [1091.851, 1241.475] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.246 ±(99.9%) 2.025 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.246, 1.186), stdev = 0.526
[info]   CI (99.9%): [≈ 0, 2.271] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.495 ±(99.9%) 4.079 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.495, 2.389), stdev = 1.059
[info]   CI (99.9%): [≈ 0, 4.573] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   539.269 ±(99.9%) 1160.817 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 539.269, 674.265), stdev = 301.460
[info]   CI (99.9%): [≈ 0, 1700.085] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1087.329 ±(99.9%) 2340.566 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1087.329, 1361.354), stdev = 607.838
[info]   CI (99.9%): [≈ 0, 3427.895] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJacksonScala:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 0.707
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 75.30% complete, ETA 00:33:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1494457.563 ops/s
[info] # Warmup Iteration   2: 1903929.942 ops/s
[info] # Warmup Iteration   3: 1997660.120 ops/s
[info] # Warmup Iteration   4: 1986892.000 ops/s
[info] # Warmup Iteration   5: 1950080.930 ops/s
[info] Iteration   1: 1997730.877 ops/s
[info]                  ·gc.alloc.rate:                   958.729 MB/sec
[info]                  ·gc.alloc.rate.norm:              755.468 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.016 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1346.029 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1060.656 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 2004058.972 ops/s
[info]                  ·gc.alloc.rate:                   950.036 MB/sec
[info]                  ·gc.alloc.rate.norm:              745.864 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.013 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 528.375 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 2002320.823 ops/s
[info]                  ·gc.alloc.rate:                   946.275 MB/sec
[info]                  ·gc.alloc.rate.norm:              743.936 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.662 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 528.829 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 1997612.250 ops/s
[info]                  ·gc.alloc.rate:                   956.082 MB/sec
[info]                  ·gc.alloc.rate.norm:              753.430 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.066 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.354 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1060.191 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 1987573.056 ops/s
[info]                  ·gc.alloc.rate:                   945.710 MB/sec
[info]                  ·gc.alloc.rate.norm:              748.815 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.840 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 532.756 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala":
[info]   1997859.196 ±(99.9%) 24673.093 ops/s [Average]
[info]   (min, avg, max) = (1987573.056, 1997859.196, 2004058.972), stdev = 6407.524
[info]   CI (99.9%): [1973186.102, 2022532.289] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   951.367 ±(99.9%) 22.464 MB/sec [Average]
[info]   (min, avg, max) = (945.710, 951.367, 958.729), stdev = 5.834
[info]   CI (99.9%): [928.902, 973.831] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   749.502 ±(99.9%) 18.835 B/op [Average]
[info]   (min, avg, max) = (743.936, 749.502, 755.468), stdev = 4.892
[info]   CI (99.9%): [730.667, 768.338] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.021 ±(99.9%) 0.139 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.083), stdev = 0.036
[info]   CI (99.9%): [≈ 0, 0.160] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.016 ±(99.9%) 0.109 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.016, 0.066), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.126] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   941.980 ±(99.9%) 1419.105 MB/sec [Average]
[info]   (min, avg, max) = (672.662, 941.980, 1346.029), stdev = 368.537
[info]   CI (99.9%): [≈ 0, 2361.085] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   742.162 ±(99.9%) 1118.755 B/op [Average]
[info]   (min, avg, max) = (528.375, 742.162, 1060.656), stdev = 290.537
[info]   CI (99.9%): [≈ 0, 1860.917] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScala:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 3.000), stdev = 0.894
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 75.50% complete, ETA 00:33:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1637736.493 ops/s
[info] # Warmup Iteration   2: 2140554.693 ops/s
[info] # Warmup Iteration   3: 2169395.164 ops/s
[info] # Warmup Iteration   4: 2159749.367 ops/s
[info] # Warmup Iteration   5: 2168912.047 ops/s
[info] Iteration   1: 2170625.471 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 2170449.089 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 2170199.088 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 2170858.909 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 2170608.535 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   2170548.219 ±(99.9%) 938.983 ops/s [Average]
[info]   (min, avg, max) = (2170199.088, 2170548.219, 2170858.909), stdev = 243.851
[info]   CI (99.9%): [2169609.235, 2171487.202] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 75.70% complete, ETA 00:32:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 218819.238 ops/s
[info] # Warmup Iteration   2: 444698.102 ops/s
[info] # Warmup Iteration   3: 440366.771 ops/s
[info] # Warmup Iteration   4: 444943.751 ops/s
[info] # Warmup Iteration   5: 452386.825 ops/s
[info] Iteration   1: 454716.744 ops/s
[info]                  ·gc.alloc.rate:                   669.665 MB/sec
[info]                  ·gc.alloc.rate.norm:              2318.116 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.072 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.060 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2329.867 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 441700.552 ops/s
[info]                  ·gc.alloc.rate:                   661.344 MB/sec
[info]                  ·gc.alloc.rate.norm:              2356.758 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.070 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2398.545 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 442936.007 ops/s
[info]                  ·gc.alloc.rate:                   664.758 MB/sec
[info]                  ·gc.alloc.rate.norm:              2362.380 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.148 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.724 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2394.242 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   4: 443932.546 ops/s
[info]                  ·gc.alloc.rate:                   658.161 MB/sec
[info]                  ·gc.alloc.rate.norm:              2333.714 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.221 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.701 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2388.817 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 444527.678 ops/s
[info]                  ·gc.alloc.rate:      654.836 MB/sec
[info]                  ·gc.alloc.rate.norm: 2318.898 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson":
[info]   445562.705 ±(99.9%) 20132.360 ops/s [Average]
[info]   (min, avg, max) = (441700.552, 445562.705, 454716.744), stdev = 5228.310
[info]   CI (99.9%): [425430.345, 465695.065] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:·gc.alloc.rate":
[info]   661.753 ±(99.9%) 22.167 MB/sec [Average]
[info]   (min, avg, max) = (654.836, 661.753, 669.665), stdev = 5.757
[info]   CI (99.9%): [639.586, 683.920] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   2337.973 ±(99.9%) 79.961 B/op [Average]
[info]   (min, avg, max) = (2318.116, 2337.973, 2362.380), stdev = 20.766
[info]   CI (99.9%): [2258.012, 2417.935] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   0.025 ±(99.9%) 0.104 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.129] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   0.088 ±(99.9%) 0.371 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.088, 0.221), stdev = 0.096
[info]   CI (99.9%): [≈ 0, 0.459] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   538.711 ±(99.9%) 1159.617 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 538.711, 673.724), stdev = 301.149
[info]   CI (99.9%): [≈ 0, 1698.328] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1902.294 ±(99.9%) 4096.243 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1902.294, 2398.545), stdev = 1063.781
[info]   CI (99.9%): [≈ 0, 5998.537] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writePlayJson:·gc.time":
[info]   4.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 2.000), stdev = 0.837
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 75.90% complete, ETA 00:32:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 141103.668 ops/s
[info] # Warmup Iteration   2: 185949.963 ops/s
[info] # Warmup Iteration   3: 192557.489 ops/s
[info] # Warmup Iteration   4: 182839.476 ops/s
[info] # Warmup Iteration   5: 183562.875 ops/s
[info] Iteration   1: 192543.670 ops/s
[info]                  ·gc.alloc.rate:                   506.508 MB/sec
[info]                  ·gc.alloc.rate.norm:              4140.432 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.113 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5510.510 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 191897.238 ops/s
[info]                  ·gc.alloc.rate:                   511.845 MB/sec
[info]                  ·gc.alloc.rate.norm:              4198.372 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2.945 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24.158 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.061 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5528.943 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 192375.718 ops/s
[info]                  ·gc.alloc.rate:      488.853 MB/sec
[info]                  ·gc.alloc.rate.norm: 4000.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 192516.016 ops/s
[info]                  ·gc.alloc.rate:                   513.873 MB/sec
[info]                  ·gc.alloc.rate.norm:              4201.703 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.694 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5500.305 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 192181.127 ops/s
[info]                  ·gc.alloc.rate:                   503.503 MB/sec
[info]                  ·gc.alloc.rate.norm:              4123.908 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.170 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.719 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5509.863 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeUPickle":
[info]   192302.754 ±(99.9%) 1033.382 ops/s [Average]
[info]   (min, avg, max) = (191897.238, 192302.754, 192543.670), stdev = 268.366
[info]   CI (99.9%): [191269.372, 193336.136] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeUPickle:·gc.alloc.rate":
[info]   504.916 ±(99.9%) 38.060 MB/sec [Average]
[info]   (min, avg, max) = (488.853, 504.916, 513.873), stdev = 9.884
[info]   CI (99.9%): [466.856, 542.977] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeUPickle:·gc.alloc.rate.norm":
[info]   4132.883 ±(99.9%) 315.306 B/op [Average]
[info]   (min, avg, max) = (4000.002, 4132.883, 4201.703), stdev = 81.884
[info]   CI (99.9%): [3817.578, 4448.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeUPickle:·gc.churn.PS_Eden_Space":
[info]   0.593 ±(99.9%) 5.063 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.593, 2.945), stdev = 1.315
[info]   CI (99.9%): [≈ 0, 5.656] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   4.866 ±(99.9%) 41.530 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4.866, 24.158), stdev = 10.785
[info]   CI (99.9%): [≈ 0, 46.396] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space":
[info]   538.717 ±(99.9%) 1159.633 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 538.717, 674.113), stdev = 301.153
[info]   CI (99.9%): [≈ 0, 1698.350] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   4409.924 ±(99.9%) 9492.778 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4409.924, 5528.943), stdev = 2465.244
[info]   CI (99.9%): [≈ 0, 13902.702] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeUPickle:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.ListOfBooleansBenchmark.writeUPickle:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 3.000), stdev = 1.140
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 76.10% complete, ETA 00:32:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 23230.648 ops/s
[info] # Warmup Iteration   2: 56274.399 ops/s
[info] # Warmup Iteration   3: 56613.721 ops/s
[info] # Warmup Iteration   4: 57689.707 ops/s
[info] # Warmup Iteration   5: 57804.812 ops/s
[info] Iteration   1: 59129.939 ops/s
[info]                  ·gc.alloc.rate:                   1958.683 MB/sec
[info]                  ·gc.alloc.rate.norm:              52142.217 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.730 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 35957.864 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 58844.508 ops/s
[info]                  ·gc.alloc.rate:                   1961.653 MB/sec
[info]                  ·gc.alloc.rate.norm:              52476.167 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.784 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2027.717 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 54243.448 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 59165.209 ops/s
[info]                  ·gc.alloc.rate:                   1971.949 MB/sec
[info]                  ·gc.alloc.rate.norm:              52462.841 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.661 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2030.447 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 54019.162 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 58840.883 ops/s
[info]                  ·gc.alloc.rate:                   1987.898 MB/sec
[info]                  ·gc.alloc.rate.norm:              53170.186 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.557 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2033.055 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 54377.998 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 59038.855 ops/s
[info]                  ·gc.alloc.rate:                   1995.166 MB/sec
[info]                  ·gc.alloc.rate.norm:              53196.491 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.110 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2034.674 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 54249.855 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce":
[info]   59003.879 ±(99.9%) 593.763 ops/s [Average]
[info]   (min, avg, max) = (58840.883, 59003.879, 59165.209), stdev = 154.198
[info]   CI (99.9%): [58410.116, 59597.642] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:·gc.alloc.rate":
[info]   1975.070 ±(99.9%) 61.692 MB/sec [Average]
[info]   (min, avg, max) = (1958.683, 1975.070, 1995.166), stdev = 16.021
[info]   CI (99.9%): [1913.378, 2036.762] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   52689.580 ±(99.9%) 1810.727 B/op [Average]
[info]   (min, avg, max) = (52142.217, 52689.580, 53196.491), stdev = 470.240
[info]   CI (99.9%): [50878.854, 54500.307] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   0.046 ±(99.9%) 0.154 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.104), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1.222 ±(99.9%) 4.121 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.222, 2.784), stdev = 1.070
[info]   CI (99.9%): [≈ 0, 5.343] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1895.324 ±(99.9%) 1172.325 MB/sec [Average]
[info]   (min, avg, max) = (1350.730, 1895.324, 2034.674), stdev = 304.449
[info]   CI (99.9%): [722.999, 3067.650] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   50569.665 ±(99.9%) 31456.935 B/op [Average]
[info]   (min, avg, max) = (35957.864, 50569.665, 54377.998), stdev = 8169.266
[info]   CI (99.9%): [19112.730, 82026.600] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readCirce:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 76.31% complete, ETA 00:32:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 32431.739 ops/s
[info] # Warmup Iteration   2: 81840.315 ops/s
[info] # Warmup Iteration   3: 82489.034 ops/s
[info] # Warmup Iteration   4: 88006.756 ops/s
[info] # Warmup Iteration   5: 86144.578 ops/s
[info] Iteration   1: 86685.307 ops/s
[info]                  ·gc.alloc.rate:                   1581.192 MB/sec
[info]                  ·gc.alloc.rate.norm:              28715.409 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.756 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1347.956 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 24479.715 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 86002.881 ops/s
[info]                  ·gc.alloc.rate:                   1577.979 MB/sec
[info]                  ·gc.alloc.rate.norm:              28879.543 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.843 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 24686.001 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 86475.205 ops/s
[info]                  ·gc.alloc.rate:                   1584.091 MB/sec
[info]                  ·gc.alloc.rate.norm:              28831.493 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.758 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.255 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 24575.526 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 87926.594 ops/s
[info]                  ·gc.alloc.rate:                   1623.843 MB/sec
[info]                  ·gc.alloc.rate.norm:              29072.234 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.373 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2027.659 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 36301.906 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 88763.859 ops/s
[info]                  ·gc.alloc.rate:                   1637.409 MB/sec
[info]                  ·gc.alloc.rate.norm:              29038.189 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.369 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1353.035 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 23995.023 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala":
[info]   87170.769 ±(99.9%) 4387.307 ops/s [Average]
[info]   (min, avg, max) = (86002.881, 87170.769, 88763.859), stdev = 1139.370
[info]   CI (99.9%): [82783.463, 91558.076] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1600.903 ±(99.9%) 106.428 MB/sec [Average]
[info]   (min, avg, max) = (1577.979, 1600.903, 1637.409), stdev = 27.639
[info]   CI (99.9%): [1494.475, 1707.331] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   28907.373 ±(99.9%) 570.086 B/op [Average]
[info]   (min, avg, max) = (28715.409, 28907.373, 29072.234), stdev = 148.049
[info]   CI (99.9%): [28337.288, 29477.459] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.025 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.451 ±(99.9%) 1.223 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.451, 0.758), stdev = 0.318
[info]   CI (99.9%): [≈ 0, 1.674] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1485.550 ±(99.9%) 1166.955 MB/sec [Average]
[info]   (min, avg, max) = (1347.956, 1485.550, 2027.659), stdev = 303.055
[info]   CI (99.9%): [318.595, 2652.505] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   26807.634 ±(99.9%) 20462.362 B/op [Average]
[info]   (min, avg, max) = (23995.023, 26807.634, 36301.906), stdev = 5314.010
[info]   CI (99.9%): [6345.273, 47269.996] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 3.000), stdev = 0.707
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 76.51% complete, ETA 00:31:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 98729.680 ops/s
[info] # Warmup Iteration   2: 153631.115 ops/s
[info] # Warmup Iteration   3: 161670.997 ops/s
[info] # Warmup Iteration   4: 158181.236 ops/s
[info] # Warmup Iteration   5: 146909.400 ops/s
[info] Iteration   1: 161541.657 ops/s
[info]                  ·gc.alloc.rate:                   2568.185 MB/sec
[info]                  ·gc.alloc.rate.norm:              25026.972 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.406 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2698.576 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 26297.635 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 158828.889 ops/s
[info]                  ·gc.alloc.rate:                   2514.063 MB/sec
[info]                  ·gc.alloc.rate.norm:              24908.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.030 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2702.655 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 26776.475 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 162131.752 ops/s
[info]                  ·gc.alloc.rate:                   2565.181 MB/sec
[info]                  ·gc.alloc.rate.norm:              24905.186 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.010 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2031.360 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19722.352 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 161249.038 ops/s
[info]                  ·gc.alloc.rate:                   2578.895 MB/sec
[info]                  ·gc.alloc.rate.norm:              25174.116 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.813 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2712.173 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 26475.120 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 159053.621 ops/s
[info]                  ·gc.alloc.rate:                   2517.610 MB/sec
[info]                  ·gc.alloc.rate.norm:              24916.805 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.618 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2036.004 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 20150.346 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala":
[info]   160560.991 ±(99.9%) 5831.770 ops/s [Average]
[info]   (min, avg, max) = (158828.889, 160560.991, 162131.752), stdev = 1514.492
[info]   CI (99.9%): [154729.221, 166392.761] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   2548.787 ±(99.9%) 117.575 MB/sec [Average]
[info]   (min, avg, max) = (2514.063, 2548.787, 2578.895), stdev = 30.534
[info]   CI (99.9%): [2431.211, 2666.362] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   24986.216 ±(99.9%) 449.341 B/op [Average]
[info]   (min, avg, max) = (24905.186, 24986.216, 25174.116), stdev = 116.692
[info]   CI (99.9%): [24536.875, 25435.557] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.079 ±(99.9%) 0.104 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.079, 0.104), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.184] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.775 ±(99.9%) 1.025 B/op [Average]
[info]   (min, avg, max) = (0.406, 0.775, 1.030), stdev = 0.266
[info]   CI (99.9%): [≈ 0, 1.800] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   2436.154 ±(99.9%) 1414.887 MB/sec [Average]
[info]   (min, avg, max) = (2031.360, 2436.154, 2712.173), stdev = 367.442
[info]   CI (99.9%): [1021.267, 3851.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   23884.385 ±(99.9%) 13905.762 B/op [Average]
[info]   (min, avg, max) = (19722.352, 23884.385, 26776.475), stdev = 3611.282
[info]   CI (99.9%): [9978.623, 37790.148] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.200, 4.000), stdev = 0.837
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 76.71% complete, ETA 00:31:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4051.750 ops/s
[info] # Warmup Iteration   2: 30822.090 ops/s
[info] # Warmup Iteration   3: 33191.318 ops/s
[info] # Warmup Iteration   4: 33214.416 ops/s
[info] # Warmup Iteration   5: 33103.263 ops/s
[info] Iteration   1: 33247.315 ops/s
[info]                  ·gc.alloc.rate:                   2220.157 MB/sec
[info]                  ·gc.alloc.rate.norm:              105108.622 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.971 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2024.433 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 95842.508 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 33411.230 ops/s
[info]                  ·gc.alloc.rate:                   2219.878 MB/sec
[info]                  ·gc.alloc.rate.norm:              104575.643 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.961 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2027.509 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 95513.356 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 32971.742 ops/s
[info]                  ·gc.alloc.rate:                   2191.235 MB/sec
[info]                  ·gc.alloc.rate.norm:              104595.956 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.987 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2029.593 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 96880.168 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 33272.226 ops/s
[info]                  ·gc.alloc.rate:                   2250.956 MB/sec
[info]                  ·gc.alloc.rate.norm:              106495.783 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4.923 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2710.557 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 128240.161 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 33263.663 ops/s
[info]                  ·gc.alloc.rate:                   2237.475 MB/sec
[info]                  ·gc.alloc.rate.norm:              105851.488 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.985 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2035.320 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 96287.826 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson":
[info]   33233.235 ±(99.9%) 617.022 ops/s [Average]
[info]   (min, avg, max) = (32971.742, 33233.235, 33411.230), stdev = 160.239
[info]   CI (99.9%): [32616.214, 33850.257] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2223.940 ±(99.9%) 86.393 MB/sec [Average]
[info]   (min, avg, max) = (2191.235, 2223.940, 2250.956), stdev = 22.436
[info]   CI (99.9%): [2137.548, 2310.333] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   105325.499 ±(99.9%) 3214.643 B/op [Average]
[info]   (min, avg, max) = (104575.643, 105325.499, 106495.783), stdev = 834.832
[info]   CI (99.9%): [102110.856, 108540.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   0.050 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.104), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.171] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   2.365 ±(99.9%) 5.747 B/op [Average]
[info]   (min, avg, max) = (0.985, 2.365, 4.923), stdev = 1.493
[info]   CI (99.9%): [≈ 0, 8.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   2165.483 ±(99.9%) 1173.415 MB/sec [Average]
[info]   (min, avg, max) = (2024.433, 2165.483, 2710.557), stdev = 304.732
[info]   CI (99.9%): [992.068, 3338.897] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   102552.804 ±(99.9%) 55329.176 B/op [Average]
[info]   (min, avg, max) = (95513.356, 102552.804, 128240.161), stdev = 14368.811
[info]   CI (99.9%): [47223.628, 157881.980] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.readPlayJson:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 76.91% complete, ETA 00:31:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 46072.784 ops/s
[info] # Warmup Iteration   2: 128522.061 ops/s
[info] # Warmup Iteration   3: 130870.011 ops/s
[info] # Warmup Iteration   4: 131359.768 ops/s
[info] # Warmup Iteration   5: 132679.990 ops/s
[info] Iteration   1: 133016.815 ops/s
[info]                  ·gc.alloc.rate:                   828.699 MB/sec
[info]                  ·gc.alloc.rate.norm:              9807.386 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.982 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7976.359 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 132939.886 ops/s
[info]                  ·gc.alloc.rate:                   841.944 MB/sec
[info]                  ·gc.alloc.rate.norm:              9969.763 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.957 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7980.559 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 133274.382 ops/s
[info]                  ·gc.alloc.rate:                   835.093 MB/sec
[info]                  ·gc.alloc.rate.norm:              9861.701 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.246 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.114 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7960.682 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 132907.413 ops/s
[info]                  ·gc.alloc.rate:                   860.016 MB/sec
[info]                  ·gc.alloc.rate.norm:              10181.661 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.493 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.545 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15965.320 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 133028.848 ops/s
[info]                  ·gc.alloc.rate:                   833.708 MB/sec
[info]                  ·gc.alloc.rate.norm:              9865.907 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.301 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7979.521 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala":
[info]   133033.469 ±(99.9%) 554.632 ops/s [Average]
[info]   (min, avg, max) = (132907.413, 133033.469, 133274.382), stdev = 144.036
[info]   CI (99.9%): [132478.837, 133588.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   839.892 ±(99.9%) 46.993 MB/sec [Average]
[info]   (min, avg, max) = (828.699, 839.892, 860.016), stdev = 12.204
[info]   CI (99.9%): [792.899, 886.885] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   9937.284 ±(99.9%) 572.620 B/op [Average]
[info]   (min, avg, max) = (9807.386, 9937.284, 10181.661), stdev = 148.708
[info]   CI (99.9%): [9364.663, 10509.904] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.012 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.148 ±(99.9%) 0.849 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.148, 0.493), stdev = 0.220
[info]   CI (99.9%): [≈ 0, 0.996] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   808.980 ±(99.9%) 1161.455 MB/sec [Average]
[info]   (min, avg, max) = (673.957, 808.980, 1348.545), stdev = 301.626
[info]   CI (99.9%): [≈ 0, 1970.435] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   9572.488 ±(99.9%) 13761.086 B/op [Average]
[info]   (min, avg, max) = (7960.682, 9572.488, 15965.320), stdev = 3573.710
[info]   CI (99.9%): [≈ 0, 23333.574] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 77.11% complete, ETA 00:31:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 321232.878 ops/s
[info] # Warmup Iteration   2: 411061.685 ops/s
[info] # Warmup Iteration   3: 406506.199 ops/s
[info] # Warmup Iteration   4: 416909.639 ops/s
[info] # Warmup Iteration   5: 419250.278 ops/s
[info] Iteration   1: 415190.615 ops/s
[info]                  ·gc.alloc.rate:                        459.394 MB/sec
[info]                  ·gc.alloc.rate.norm:                   1741.835 B/op
[info]                  ·gc.churn.Compressed_Class_Space:      0.003 MB/sec
[info]                  ·gc.churn.Compressed_Class_Space.norm: 0.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:               3.122 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:          11.836 B/op
[info]                  ·gc.churn.PS_Old_Gen:                  0.009 MB/sec
[info]                  ·gc.churn.PS_Old_Gen.norm:             0.033 B/op
[info]                  ·gc.churn.PS_Survivor_Space:           377.755 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm:      1432.293 B/op
[info]                  ·gc.count:                             2.000 counts
[info]                  ·gc.time:                              43.000 ms
[info] Iteration   2: 433393.823 ops/s
[info]                  ·gc.alloc.rate:                   498.903 MB/sec
[info]                  ·gc.alloc.rate.norm:              1812.207 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.286 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2445.632 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 433244.160 ops/s
[info]                  ·gc.alloc.rate:                   499.257 MB/sec
[info]                  ·gc.alloc.rate.norm:              1813.934 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.681 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2444.030 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   4: 427285.973 ops/s
[info]                  ·gc.alloc.rate:      471.253 MB/sec
[info]                  ·gc.alloc.rate.norm: 1736.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 426227.797 ops/s
[info]                  ·gc.alloc.rate:                   488.691 MB/sec
[info]                  ·gc.alloc.rate.norm:              1804.711 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.707 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2484.276 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala":
[info]   427068.474 ±(99.9%) 28556.277 ops/s [Average]
[info]   (min, avg, max) = (415190.615, 427068.474, 433393.823), stdev = 7415.975
[info]   CI (99.9%): [398512.196, 455624.751] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   483.500 ±(99.9%) 67.895 MB/sec [Average]
[info]   (min, avg, max) = (459.394, 483.500, 499.257), stdev = 17.632
[info]   CI (99.9%): [415.605, 551.394] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   1781.737 ±(99.9%) 151.317 B/op [Average]
[info]   (min, avg, max) = (1736.001, 1781.737, 1813.934), stdev = 39.296
[info]   CI (99.9%): [1630.421, 1933.054] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.Compressed_Class_Space":
[info]   0.001 ±(99.9%) 0.005 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.003), stdev = 0.001
[info]   CI (99.9%): [≈ 0, 0.005] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.Compressed_Class_Space.norm":
[info]   0.002 ±(99.9%) 0.017 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.002, 0.010), stdev = 0.005
[info]   CI (99.9%): [≈ 0, 0.019] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.624 ±(99.9%) 5.376 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.624, 3.122), stdev = 1.396
[info]   CI (99.9%): [≈ 0, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   2.367 ±(99.9%) 20.383 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.367, 11.836), stdev = 5.293
[info]   CI (99.9%): [≈ 0, 22.750] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Old_Gen":
[info]   0.002 ±(99.9%) 0.015 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.002, 0.009), stdev = 0.004
[info]   CI (99.9%): [≈ 0, 0.017] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Old_Gen.norm":
[info]   0.007 ±(99.9%) 0.056 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.007, 0.033), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.063] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   479.286 ±(99.9%) 1143.053 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 479.286, 673.286), stdev = 296.847
[info]   CI (99.9%): [≈ 0, 1622.339] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1761.246 ±(99.9%) 4159.563 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1761.246, 2484.276), stdev = 1080.225
[info]   CI (99.9%): [≈ 0, 5920.809] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 0.707
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.time":
[info]   45.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 9.000, 43.000), stdev = 19.013
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 77.31% complete, ETA 00:30:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 351437.279 ops/s
[info] # Warmup Iteration   2: 440238.609 ops/s
[info] # Warmup Iteration   3: 450349.882 ops/s
[info] # Warmup Iteration   4: 451009.591 ops/s
[info] # Warmup Iteration   5: 451705.695 ops/s
[info] Iteration   1: 451700.128 ops/s
[info]                  ·gc.alloc.rate:      4.592 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.003 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 451030.344 ops/s
[info]                  ·gc.alloc.rate:      4.691 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.373 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 451049.044 ops/s
[info]                  ·gc.alloc.rate:      4.585 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 449453.410 ops/s
[info]                  ·gc.alloc.rate:      4.570 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 451937.711 ops/s
[info]                  ·gc.alloc.rate:      4.595 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   451034.127 ±(99.9%) 3732.804 ops/s [Average]
[info]   (min, avg, max) = (449453.410, 451034.127, 451937.711), stdev = 969.397
[info]   CI (99.9%): [447301.323, 454766.931] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   4.607 ±(99.9%) 0.186 MB/sec [Average]
[info]   (min, avg, max) = (4.570, 4.607, 4.691), stdev = 0.048
[info]   CI (99.9%): [4.421, 4.793] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   16.076 ±(99.9%) 0.639 B/op [Average]
[info]   (min, avg, max) = (16.001, 16.076, 16.373), stdev = 0.166
[info]   CI (99.9%): [15.436, 16.715] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 77.51% complete, ETA 00:30:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 8695.479 ops/s
[info] # Warmup Iteration   2: 58771.900 ops/s
[info] # Warmup Iteration   3: 60325.942 ops/s
[info] # Warmup Iteration   4: 62618.344 ops/s
[info] # Warmup Iteration   5: 61959.085 ops/s
[info] Iteration   1: 62657.192 ops/s
[info]                  ·gc.alloc.rate:                   1280.424 MB/sec
[info]                  ·gc.alloc.rate.norm:              32157.322 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.569 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.419 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 33864.972 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 60956.272 ops/s
[info]                  ·gc.alloc.rate:                   1250.419 MB/sec
[info]                  ·gc.alloc.rate.norm:              32288.889 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.537 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.399 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 34818.956 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 62480.667 ops/s
[info]                  ·gc.alloc.rate:                   1273.883 MB/sec
[info]                  ·gc.alloc.rate.norm:              32094.343 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.049 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.033 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 33987.689 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 62802.471 ops/s
[info]                  ·gc.alloc.rate:                   1300.441 MB/sec
[info]                  ·gc.alloc.rate.norm:              32594.680 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.043 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.066 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 33838.495 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 62751.715 ops/s
[info]                  ·gc.alloc.rate:                   1260.718 MB/sec
[info]                  ·gc.alloc.rate.norm:              31612.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.044 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      675.627 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16941.080 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson":
[info]   62329.663 ±(99.9%) 2993.833 ops/s [Average]
[info]   (min, avg, max) = (60956.272, 62329.663, 62802.471), stdev = 777.489
[info]   CI (99.9%): [59335.831, 65323.496] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1273.177 ±(99.9%) 73.804 MB/sec [Average]
[info]   (min, avg, max) = (1250.419, 1273.177, 1300.441), stdev = 19.167
[info]   CI (99.9%): [1199.373, 1346.981] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   32149.448 ±(99.9%) 1374.441 B/op [Average]
[info]   (min, avg, max) = (31612.005, 32149.448, 32594.680), stdev = 356.938
[info]   CI (99.9%): [30775.007, 33523.889] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   0.042 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.062), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.098] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   1.048 ±(99.9%) 1.404 B/op [Average]
[info]   (min, avg, max) = (0.537, 1.048, 1.569), stdev = 0.365
[info]   CI (99.9%): [≈ 0, 2.452] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   1214.309 ±(99.9%) 1159.555 MB/sec [Average]
[info]   (min, avg, max) = (675.627, 1214.309, 1350.066), stdev = 301.133
[info]   CI (99.9%): [54.753, 2373.864] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   30690.239 ±(99.9%) 29636.785 B/op [Average]
[info]   (min, avg, max) = (16941.080, 30690.239, 34818.956), stdev = 7696.579
[info]   CI (99.9%): [1053.454, 60327.023] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MapOfIntsToBooleansBenchmark.writePlayJson:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce
[info] # Run progress: 77.71% complete, ETA 00:30:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 187293.890 ops/s
[info] # Warmup Iteration   2: 2826485.975 ops/s
[info] # Warmup Iteration   3: 2944601.380 ops/s
[info] # Warmup Iteration   4: 2929747.381 ops/s
[info] # Warmup Iteration   5: 2930156.825 ops/s
[info] Iteration   1: 2889985.844 ops/s
[info]                  ·gc.alloc.rate:                   3512.032 MB/sec
[info]                  ·gc.alloc.rate.norm:              1912.991 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.057 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3391.332 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1847.246 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 2934624.051 ops/s
[info]                  ·gc.alloc.rate:                   3578.548 MB/sec
[info]                  ·gc.alloc.rate.norm:              1919.356 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.056 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3396.458 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1821.692 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 2929404.612 ops/s
[info]                  ·gc.alloc.rate:                   3576.842 MB/sec
[info]                  ·gc.alloc.rate.norm:              1922.013 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.045 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3399.424 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1826.677 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 2914048.446 ops/s
[info]                  ·gc.alloc.rate:                   3554.118 MB/sec
[info]                  ·gc.alloc.rate.norm:              1919.811 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.056 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3402.865 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1838.109 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 2926128.282 ops/s
[info]                  ·gc.alloc.rate:                   3576.008 MB/sec
[info]                  ·gc.alloc.rate.norm:              1923.719 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.034 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3403.420 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1830.875 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce":
[info]   2918838.247 ±(99.9%) 68596.268 ops/s [Average]
[info]   (min, avg, max) = (2889985.844, 2918838.247, 2934624.051), stdev = 17814.233
[info]   CI (99.9%): [2850241.979, 2987434.515] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:·gc.alloc.rate":
[info]   3559.510 ±(99.9%) 109.223 MB/sec [Average]
[info]   (min, avg, max) = (3512.032, 3559.510, 3578.548), stdev = 28.365
[info]   CI (99.9%): [3450.287, 3668.733] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   1919.578 ±(99.9%) 15.709 B/op [Average]
[info]   (min, avg, max) = (1912.991, 1919.578, 1923.719), stdev = 4.080
[info]   CI (99.9%): [1903.869, 1935.287] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   0.092 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 0.092, 0.104), stdev = 0.019
[info]   CI (99.9%): [0.020, 0.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.049 ±(99.9%) 0.039 B/op [Average]
[info]   (min, avg, max) = (0.034, 0.049, 0.057), stdev = 0.010
[info]   CI (99.9%): [0.010, 0.089] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   3398.700 ±(99.9%) 19.202 MB/sec [Average]
[info]   (min, avg, max) = (3391.332, 3398.700, 3403.420), stdev = 4.987
[info]   CI (99.9%): [3379.498, 3417.902] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   1832.920 ±(99.9%) 38.573 B/op [Average]
[info]   (min, avg, max) = (1821.692, 1832.920, 1847.246), stdev = 10.017
[info]   CI (99.9%): [1794.347, 1871.493] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readCirce:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava
[info] # Run progress: 77.91% complete, ETA 00:29:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.752 ops/s
[info] # Warmup Iteration   2: 716510.099 ops/s
[info] # Warmup Iteration   3: 801868.363 ops/s
[info] # Warmup Iteration   4: 795890.031 ops/s
[info] # Warmup Iteration   5: 807530.343 ops/s
[info] Iteration   1: 820623.222 ops/s
[info]                  ·gc.alloc.rate:      504.653 MB/sec
[info]                  ·gc.alloc.rate.norm: 968.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 818210.123 ops/s
[info]                  ·gc.alloc.rate:                   504.539 MB/sec
[info]                  ·gc.alloc.rate.norm:              970.606 B/op
[info]                  ·gc.churn.PS_Eden_Space:          4.136 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7.957 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      670.046 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1288.999 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 781410.523 ops/s
[info]                  ·gc.alloc.rate:                   480.728 MB/sec
[info]                  ·gc.alloc.rate.norm:              968.001 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      669.607 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1348.329 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 804588.714 ops/s
[info]                  ·gc.alloc.rate:                   494.815 MB/sec
[info]                  ·gc.alloc.rate.norm:              968.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.081 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      669.412 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1309.562 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 810668.380 ops/s
[info]                  ·gc.alloc.rate:      498.535 MB/sec
[info]                  ·gc.alloc.rate.norm: 968.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava":
[info]   807100.192 ±(99.9%) 60434.917 ops/s [Average]
[info]   (min, avg, max) = (781410.523, 807100.192, 820623.222), stdev = 15694.756
[info]   CI (99.9%): [746665.275, 867535.110] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   496.654 ±(99.9%) 37.862 MB/sec [Average]
[info]   (min, avg, max) = (480.728, 496.654, 504.653), stdev = 9.833
[info]   CI (99.9%): [458.793, 534.516] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   968.522 ±(99.9%) 4.486 B/op [Average]
[info]   (min, avg, max) = (968.001, 968.522, 970.606), stdev = 1.165
[info]   CI (99.9%): [964.035, 973.008] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   0.836 ±(99.9%) 7.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.836, 4.136), stdev = 1.845
[info]   CI (99.9%): [≈ 0, 7.941] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   1.608 ±(99.9%) 13.668 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.608, 7.957), stdev = 3.550
[info]   CI (99.9%): [≈ 0, 15.276] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   401.813 ±(99.9%) 1412.430 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 401.813, 670.046), stdev = 366.804
[info]   CI (99.9%): [≈ 0, 1814.243] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   789.378 ±(99.9%) 2775.987 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 789.378, 1348.329), stdev = 720.915
[info]   CI (99.9%): [≈ 0, 3565.365] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readDslJsonJava:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 3.000), stdev = 1.225
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala
[info] # Run progress: 78.11% complete, ETA 00:29:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6844.036 ops/s
[info] # Warmup Iteration   2: 230694.569 ops/s
[info] # Warmup Iteration   3: 314415.128 ops/s
[info] # Warmup Iteration   4: 322874.088 ops/s
[info] # Warmup Iteration   5: 323371.303 ops/s
[info] Iteration   1: 324360.299 ops/s
[info]                  ·gc.alloc.rate:                   630.170 MB/sec
[info]                  ·gc.alloc.rate.norm:              3057.644 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1.478 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7.172 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.811 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3274.245 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 323887.869 ops/s
[info]                  ·gc.alloc.rate:                   635.305 MB/sec
[info]                  ·gc.alloc.rate.norm:              3086.706 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.902 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3279.096 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 325274.867 ops/s
[info]                  ·gc.alloc.rate:                   622.571 MB/sec
[info]                  ·gc.alloc.rate.norm:              3012.651 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.700 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3264.905 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 327176.093 ops/s
[info]                  ·gc.alloc.rate:                   618.611 MB/sec
[info]                  ·gc.alloc.rate.norm:              2976.253 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.100 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.009 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3242.784 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 326011.234 ops/s
[info]                  ·gc.alloc.rate:                   632.698 MB/sec
[info]                  ·gc.alloc.rate.norm:              3054.904 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.201 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.007 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3254.360 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala":
[info]   325342.072 ±(99.9%) 5055.395 ops/s [Average]
[info]   (min, avg, max) = (323887.869, 325342.072, 327176.093), stdev = 1312.870
[info]   CI (99.9%): [320286.678, 330397.467] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   627.871 ±(99.9%) 27.070 MB/sec [Average]
[info]   (min, avg, max) = (618.611, 627.871, 635.305), stdev = 7.030
[info]   CI (99.9%): [600.801, 654.941] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   3037.632 ±(99.9%) 166.721 B/op [Average]
[info]   (min, avg, max) = (2976.253, 3037.632, 3086.706), stdev = 43.297
[info]   CI (99.9%): [2870.910, 3204.353] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.308 ±(99.9%) 2.519 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.308, 1.478), stdev = 0.654
[info]   CI (99.9%): [≈ 0, 2.827] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   1.495 ±(99.9%) 12.224 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.495, 7.172), stdev = 3.175
[info]   CI (99.9%): [≈ 0, 13.719] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   674.486 ±(99.9%) 1.702 MB/sec [Average]
[info]   (min, avg, max) = (674.007, 674.486, 674.902), stdev = 0.442
[info]   CI (99.9%): [672.784, 676.188] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   3263.078 ±(99.9%) 56.869 B/op [Average]
[info]   (min, avg, max) = (3242.784, 3263.078, 3279.096), stdev = 14.769
[info]   CI (99.9%): [3206.209, 3319.947] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJacksonScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala
[info] # Run progress: 78.31% complete, ETA 00:29:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 330192.088 ops/s
[info] # Warmup Iteration   2: 515244.964 ops/s
[info] # Warmup Iteration   3: 576933.865 ops/s
[info] # Warmup Iteration   4: 574322.362 ops/s
[info] # Warmup Iteration   5: 576380.978 ops/s
[info] Iteration   1: 578467.773 ops/s
[info]                  ·gc.alloc.rate:      435.173 MB/sec
[info]                  ·gc.alloc.rate.norm: 1184.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 572452.708 ops/s
[info]                  ·gc.alloc.rate:                   438.154 MB/sec
[info]                  ·gc.alloc.rate.norm:              1204.749 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.057 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1853.404 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 574608.863 ops/s
[info]                  ·gc.alloc.rate:                   450.988 MB/sec
[info]                  ·gc.alloc.rate.norm:              1235.179 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2.748 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7.526 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.159 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1846.406 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 577685.081 ops/s
[info]                  ·gc.alloc.rate:      434.612 MB/sec
[info]                  ·gc.alloc.rate.norm: 1184.213 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 574495.009 ops/s
[info]                  ·gc.alloc.rate:                   444.788 MB/sec
[info]                  ·gc.alloc.rate.norm:              1218.670 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.114 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.352 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1844.909 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala":
[info]   575541.887 ±(99.9%) 9561.623 ops/s [Average]
[info]   (min, avg, max) = (572452.708, 575541.887, 578467.773), stdev = 2483.123
[info]   CI (99.9%): [565980.263, 585103.510] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   440.743 ±(99.9%) 26.999 MB/sec [Average]
[info]   (min, avg, max) = (434.612, 440.743, 450.988), stdev = 7.012
[info]   CI (99.9%): [413.744, 467.742] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   1205.362 ±(99.9%) 85.457 B/op [Average]
[info]   (min, avg, max) = (1184.001, 1205.362, 1235.179), stdev = 22.193
[info]   CI (99.9%): [1119.906, 1290.819] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.562 ±(99.9%) 4.706 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.562, 2.748), stdev = 1.222
[info]   CI (99.9%): [≈ 0, 5.268] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1.539 ±(99.9%) 12.888 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.539, 7.526), stdev = 3.347
[info]   CI (99.9%): [≈ 0, 14.428] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   404.315 ±(99.9%) 1421.223 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 404.315, 674.159), stdev = 369.087
[info]   CI (99.9%): [≈ 0, 1825.538] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1108.944 ±(99.9%) 3898.113 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1108.944, 1853.404), stdev = 1012.327
[info]   CI (99.9%): [≈ 0, 5007.056] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterScala:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 3.000), stdev = 1.414
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless
[info] # Run progress: 78.51% complete, ETA 00:29:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 813750.567 ops/s
[info] # Warmup Iteration   2: 1510004.437 ops/s
[info] # Warmup Iteration   3: 1512163.876 ops/s
[info] # Warmup Iteration   4: 1537799.726 ops/s
[info] # Warmup Iteration   5: 1533852.644 ops/s
[info] Iteration   1: 1543477.926 ops/s
[info]                  ·gc.alloc.rate:                   512.989 MB/sec
[info]                  ·gc.alloc.rate.norm:              523.132 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      675.408 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 688.763 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 1554418.851 ops/s
[info]                  ·gc.alloc.rate:                   522.260 MB/sec
[info]                  ·gc.alloc.rate.norm:              528.868 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2.498 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.529 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      675.355 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 683.901 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 1557824.568 ops/s
[info]                  ·gc.alloc.rate:      498.903 MB/sec
[info]                  ·gc.alloc.rate.norm: 504.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1552776.240 ops/s
[info]                  ·gc.alloc.rate:                   511.550 MB/sec
[info]                  ·gc.alloc.rate.norm:              518.554 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.753 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 683.991 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 1552889.003 ops/s
[info]                  ·gc.alloc.rate:                   522.263 MB/sec
[info]                  ·gc.alloc.rate.norm:              529.396 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.021 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.687 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 683.903 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless":
[info]   1552277.317 ±(99.9%) 20503.597 ops/s [Average]
[info]   (min, avg, max) = (1543477.926, 1552277.317, 1557824.568), stdev = 5324.719
[info]   CI (99.9%): [1531773.721, 1572780.914] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:·gc.alloc.rate":
[info]   513.593 ±(99.9%) 37.066 MB/sec [Average]
[info]   (min, avg, max) = (498.903, 513.593, 522.263), stdev = 9.626
[info]   CI (99.9%): [476.527, 550.659] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:·gc.alloc.rate.norm":
[info]   520.790 ±(99.9%) 40.004 B/op [Average]
[info]   (min, avg, max) = (504.000, 520.790, 529.396), stdev = 10.389
[info]   CI (99.9%): [480.787, 560.794] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:·gc.churn.PS_Eden_Space":
[info]   0.504 ±(99.9%) 4.292 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.504, 2.498), stdev = 1.115
[info]   CI (99.9%): [≈ 0, 4.796] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:·gc.churn.PS_Eden_Space.norm":
[info]   0.510 ±(99.9%) 4.347 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.510, 2.529), stdev = 1.129
[info]   CI (99.9%): [≈ 0, 4.857] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:·gc.churn.PS_Survivor_Space":
[info]   540.041 ±(99.9%) 1162.479 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 540.041, 675.408), stdev = 301.892
[info]   CI (99.9%): [≈ 0, 1702.520] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:·gc.churn.PS_Survivor_Space.norm":
[info]   548.111 ±(99.9%) 1179.879 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 548.111, 688.763), stdev = 306.411
[info]   CI (99.9%): [≈ 0, 1727.990] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStackless:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.600, 3.000), stdev = 1.140
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump
[info] # Run progress: 78.71% complete, ETA 00:28:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1894040.168 ops/s
[info] # Warmup Iteration   2: 6247149.295 ops/s
[info] # Warmup Iteration   3: 3973078.776 ops/s
[info] # Warmup Iteration   4: 6250760.395 ops/s
[info] # Warmup Iteration   5: 6183176.663 ops/s
[info] Iteration   1: 6233371.509 ops/s
[info]                  ·gc.alloc.rate:                   519.939 MB/sec
[info]                  ·gc.alloc.rate.norm:              131.294 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.010 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.003 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      675.065 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 170.465 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 6141976.157 ops/s
[info]                  ·gc.alloc.rate:      499.850 MB/sec
[info]                  ·gc.alloc.rate.norm: 128.100 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 6074895.304 ops/s
[info]                  ·gc.alloc.rate:                   520.292 MB/sec
[info]                  ·gc.alloc.rate.norm:              134.806 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2.508 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.650 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      675.106 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 174.918 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 6281754.185 ops/s
[info]                  ·gc.alloc.rate:                   525.646 MB/sec
[info]                  ·gc.alloc.rate.norm:              131.708 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.010 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.114 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 168.909 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 6307517.035 ops/s
[info]                  ·gc.alloc.rate:                   540.073 MB/sec
[info]                  ·gc.alloc.rate.norm:              134.783 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.005 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.051 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 168.219 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump":
[info]   6207902.838 ±(99.9%) 375625.304 ops/s [Average]
[info]   (min, avg, max) = (6074895.304, 6207902.838, 6307517.035), stdev = 97548.699
[info]   CI (99.9%): [5832277.534, 6583528.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.alloc.rate":
[info]   521.160 ±(99.9%) 55.608 MB/sec [Average]
[info]   (min, avg, max) = (499.850, 521.160, 540.073), stdev = 14.441
[info]   CI (99.9%): [465.553, 576.768] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.alloc.rate.norm":
[info]   132.138 ±(99.9%) 10.774 B/op [Average]
[info]   (min, avg, max) = (128.100, 132.138, 134.806), stdev = 2.798
[info]   CI (99.9%): [121.364, 142.912] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space":
[info]   0.516 ±(99.9%) 4.289 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.516, 2.508), stdev = 1.114
[info]   CI (99.9%): [≈ 0, 4.805] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space.norm":
[info]   0.134 ±(99.9%) 1.111 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.134, 0.650), stdev = 0.289
[info]   CI (99.9%): [≈ 0, 1.245] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space":
[info]   539.667 ±(99.9%) 1161.676 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 539.667, 675.106), stdev = 301.684
[info]   CI (99.9%): [≈ 0, 1701.343] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space.norm":
[info]   136.502 ±(99.9%) 294.003 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 136.502, 174.918), stdev = 76.352
[info]   CI (99.9%): [≈ 0, 430.505] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 0.837
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson
[info] # Run progress: 78.92% complete, ETA 00:28:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1976.896 ops/s
[info] # Warmup Iteration   2: 81264.323 ops/s
[info] # Warmup Iteration   3: 227408.106 ops/s
[info] # Warmup Iteration   4: 249058.345 ops/s
[info] # Warmup Iteration   5: 251255.220 ops/s
[info] Iteration   1: 248898.705 ops/s
[info]                  ·gc.alloc.rate:                   1667.098 MB/sec
[info]                  ·gc.alloc.rate.norm:              10540.874 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.132 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2022.530 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12788.231 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 250125.926 ops/s
[info]                  ·gc.alloc.rate:                   1659.633 MB/sec
[info]                  ·gc.alloc.rate.norm:              10441.469 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.655 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.776 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8485.734 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 250002.413 ops/s
[info]                  ·gc.alloc.rate:                   1666.675 MB/sec
[info]                  ·gc.alloc.rate.norm:              10487.292 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.393 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2023.086 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12729.950 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 249891.921 ops/s
[info]                  ·gc.alloc.rate:                   1634.576 MB/sec
[info]                  ·gc.alloc.rate.norm:              10296.152 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.716 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8508.124 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 249423.476 ops/s
[info]                  ·gc.alloc.rate:                   1668.795 MB/sec
[info]                  ·gc.alloc.rate.norm:              10531.698 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.131 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1352.055 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8532.766 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson":
[info]   249668.488 ±(99.9%) 1947.599 ops/s [Average]
[info]   (min, avg, max) = (248898.705, 249668.488, 250125.926), stdev = 505.785
[info]   CI (99.9%): [247720.889, 251616.087] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1659.355 ±(99.9%) 55.023 MB/sec [Average]
[info]   (min, avg, max) = (1634.576, 1659.355, 1668.795), stdev = 14.289
[info]   CI (99.9%): [1604.332, 1714.378] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   10459.497 ±(99.9%) 383.204 B/op [Average]
[info]   (min, avg, max) = (10296.152, 10459.497, 10540.874), stdev = 99.517
[info]   CI (99.9%): [10076.293, 10842.700] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   0.042 ±(99.9%) 0.160 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.104), stdev = 0.042
[info]   CI (99.9%): [≈ 0, 0.202] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   0.262 ±(99.9%) 1.008 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.262, 0.655), stdev = 0.262
[info]   CI (99.9%): [≈ 0, 1.270] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   1619.433 ±(99.9%) 1417.928 MB/sec [Average]
[info]   (min, avg, max) = (1348.776, 1619.433, 2023.086), stdev = 368.231
[info]   CI (99.9%): [201.505, 3037.360] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   10208.961 ±(99.9%) 8964.645 B/op [Average]
[info]   (min, avg, max) = (8485.734, 10208.961, 12788.231), stdev = 2328.090
[info]   CI (99.9%): [1244.316, 19173.606] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readPlayJson:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 4.000), stdev = 0.894
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readUPickle
[info] # Run progress: 79.12% complete, ETA 00:28:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 85404.822 ops/s
[info] # Warmup Iteration   2: 291192.756 ops/s
[info] # Warmup Iteration   3: 298631.809 ops/s
[info] # Warmup Iteration   4: 317434.386 ops/s
[info] # Warmup Iteration   5: 315935.143 ops/s
[info] Iteration   1: 320692.633 ops/s
[info]                  ·gc.alloc.rate:                   649.531 MB/sec
[info]                  ·gc.alloc.rate.norm:              3187.547 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3.112 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15.273 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.816 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3301.819 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 319104.660 ops/s
[info]                  ·gc.alloc.rate:                   646.489 MB/sec
[info]                  ·gc.alloc.rate.norm:              3188.346 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.194 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3315.118 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 321392.263 ops/s
[info]                  ·gc.alloc.rate:                   655.371 MB/sec
[info]                  ·gc.alloc.rate.norm:              3209.798 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.050 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3291.490 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 317697.083 ops/s
[info]                  ·gc.alloc.rate:                   642.715 MB/sec
[info]                  ·gc.alloc.rate.norm:              3184.336 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.309 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      671.392 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3326.414 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 317320.615 ops/s
[info]                  ·gc.alloc.rate:      642.094 MB/sec
[info]                  ·gc.alloc.rate.norm: 3185.181 B/op
[info]                  ·gc.count:           1.000 counts
[info]                  ·gc.time:            1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readUPickle":
[info]   319241.451 ±(99.9%) 6895.050 ops/s [Average]
[info]   (min, avg, max) = (317320.615, 319241.451, 321392.263), stdev = 1790.622
[info]   CI (99.9%): [312346.401, 326136.500] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readUPickle:·gc.alloc.rate":
[info]   647.240 ±(99.9%) 20.992 MB/sec [Average]
[info]   (min, avg, max) = (642.094, 647.240, 655.371), stdev = 5.451
[info]   CI (99.9%): [626.248, 668.232] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readUPickle:·gc.alloc.rate.norm":
[info]   3191.042 ±(99.9%) 40.870 B/op [Average]
[info]   (min, avg, max) = (3184.336, 3191.042, 3209.798), stdev = 10.614
[info]   CI (99.9%): [3150.172, 3231.911] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readUPickle:·gc.churn.PS_Eden_Space":
[info]   0.635 ±(99.9%) 5.334 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.635, 3.112), stdev = 1.385
[info]   CI (99.9%): [≈ 0, 5.968] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   3.116 ±(99.9%) 26.173 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.116, 15.273), stdev = 6.797
[info]   CI (99.9%): [≈ 0, 29.290] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readUPickle:·gc.churn.PS_Survivor_Space":
[info]   537.690 ±(99.9%) 1157.421 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 537.690, 672.816), stdev = 300.578
[info]   CI (99.9%): [≈ 0, 1695.111] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   2646.968 ±(99.9%) 5698.025 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2646.968, 3326.414), stdev = 1479.759
[info]   CI (99.9%): [≈ 0, 8344.994] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readUPickle:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFieldBenchmark.readUPickle:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 3.000), stdev = 0.894
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 79.32% complete, ETA 00:28:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1049764.188 ops/s
[info] # Warmup Iteration   2: 1365687.472 ops/s
[info] # Warmup Iteration   3: 1353958.750 ops/s
[info] # Warmup Iteration   4: 1371430.552 ops/s
[info] # Warmup Iteration   5: 1370660.260 ops/s
[info] Iteration   1: 1303878.661 ops/s
[info]                  ·gc.alloc.rate:                   107.206 MB/sec
[info]                  ·gc.alloc.rate.norm:              129.414 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      511.533 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 617.501 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 1369073.394 ops/s
[info]                  ·gc.alloc.rate:      76.536 MB/sec
[info]                  ·gc.alloc.rate.norm: 88.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1368984.207 ops/s
[info]                  ·gc.alloc.rate:      76.541 MB/sec
[info]                  ·gc.alloc.rate.norm: 88.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1370050.779 ops/s
[info]                  ·gc.alloc.rate:      76.589 MB/sec
[info]                  ·gc.alloc.rate.norm: 88.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1369925.667 ops/s
[info]                  ·gc.alloc.rate:      76.591 MB/sec
[info]                  ·gc.alloc.rate.norm: 88.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala":
[info]   1356382.542 ±(99.9%) 113033.849 ops/s [Average]
[info]   (min, avg, max) = (1303878.661, 1356382.542, 1370050.779), stdev = 29354.532
[info]   CI (99.9%): [1243348.693, 1469416.391] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   82.693 ±(99.9%) 52.766 MB/sec [Average]
[info]   (min, avg, max) = (76.536, 82.693, 107.206), stdev = 13.703
[info]   CI (99.9%): [29.927, 135.459] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   96.283 ±(99.9%) 71.317 B/op [Average]
[info]   (min, avg, max) = (88.000, 96.283, 129.414), stdev = 18.521
[info]   CI (99.9%): [24.966, 167.600] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   102.307 ±(99.9%) 880.890 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 102.307, 511.533), stdev = 228.764
[info]   CI (99.9%): [≈ 0, 983.197] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   123.500 ±(99.9%) 1063.375 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 123.500, 617.501), stdev = 276.155
[info]   CI (99.9%): [≈ 0, 1186.875] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:·gc.count":
[info]   1.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.200, 1.000), stdev = 0.447
[info]   CI (99.9%): [1.000, 1.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readJsoniterScala:·gc.time":
[info]   3.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 3.000), stdev = 1.342
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 79.52% complete, ETA 00:27:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 15696.911 ops/s
[info] # Warmup Iteration   2: 71420.893 ops/s
[info] # Warmup Iteration   3: 73537.547 ops/s
[info] # Warmup Iteration   4: 74278.911 ops/s
[info] # Warmup Iteration   5: 74486.044 ops/s
[info] Iteration   1: 73782.129 ops/s
[info]                  ·gc.alloc.rate:                   3227.834 MB/sec
[info]                  ·gc.alloc.rate.norm:              68867.198 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.332 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3385.017 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 72220.773 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 74390.397 ops/s
[info]                  ·gc.alloc.rate:                   3295.159 MB/sec
[info]                  ·gc.alloc.rate.norm:              69726.951 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.321 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3391.448 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 71764.479 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 74483.117 ops/s
[info]                  ·gc.alloc.rate:                   3271.206 MB/sec
[info]                  ·gc.alloc.rate.norm:              69132.680 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.880 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2716.795 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 57415.919 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 73488.000 ops/s
[info]                  ·gc.alloc.rate:                   3257.473 MB/sec
[info]                  ·gc.alloc.rate.norm:              69769.698 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.783 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3399.627 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 72814.409 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 72967.384 ops/s
[info]                  ·gc.alloc.rate:                   3208.469 MB/sec
[info]                  ·gc.alloc.rate.norm:              69220.491 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.245 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2721.219 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 58708.417 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson":
[info]   73822.205 ±(99.9%) 2438.149 ops/s [Average]
[info]   (min, avg, max) = (72967.384, 73822.205, 74483.117), stdev = 633.179
[info]   CI (99.9%): [71384.057, 76260.354] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3252.028 ±(99.9%) 132.560 MB/sec [Average]
[info]   (min, avg, max) = (3208.469, 3252.028, 3295.159), stdev = 34.425
[info]   CI (99.9%): [3119.468, 3384.588] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   69343.404 ±(99.9%) 1510.021 B/op [Average]
[info]   (min, avg, max) = (68867.198, 69343.404, 69769.698), stdev = 392.148
[info]   CI (99.9%): [67833.383, 70853.425] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   0.071 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.071, 0.104), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.162] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   1.512 ±(99.9%) 2.000 B/op [Average]
[info]   (min, avg, max) = (0.880, 1.512, 2.245), stdev = 0.519
[info]   CI (99.9%): [≈ 0, 3.513] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   3122.821 ±(99.9%) 1419.617 MB/sec [Average]
[info]   (min, avg, max) = (2716.795, 3122.821, 3399.627), stdev = 368.670
[info]   CI (99.9%): [1703.204, 4542.439] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   66584.800 ±(99.9%) 30044.098 B/op [Average]
[info]   (min, avg, max) = (57415.919, 66584.800, 72814.409), stdev = 7802.357
[info]   CI (99.9%): [36540.702, 96628.897] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.readPlayJson:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.400, 5.000), stdev = 0.894
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 79.72% complete, ETA 00:27:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 740272.385 ops/s
[info] # Warmup Iteration   2: 1459777.647 ops/s
[info] # Warmup Iteration   3: 1439284.726 ops/s
[info] # Warmup Iteration   4: 1437541.371 ops/s
[info] # Warmup Iteration   5: 1453663.526 ops/s
[info] Iteration   1: 1430646.923 ops/s
[info]                  ·gc.alloc.rate:                   762.915 MB/sec
[info]                  ·gc.alloc.rate.norm:              839.307 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.782 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 740.149 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 1486553.811 ops/s
[info]                  ·gc.alloc.rate:                   792.275 MB/sec
[info]                  ·gc.alloc.rate.norm:              838.918 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.022 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.014 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 712.636 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 1494921.024 ops/s
[info]                  ·gc.alloc.rate:                   808.760 MB/sec
[info]                  ·gc.alloc.rate.norm:              851.225 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.301 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 708.654 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 1495744.551 ops/s
[info]                  ·gc.alloc.rate:                   807.619 MB/sec
[info]                  ·gc.alloc.rate.norm:              849.800 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.044 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.766 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 708.956 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   5: 1493994.005 ops/s
[info]                  ·gc.alloc.rate:                   802.677 MB/sec
[info]                  ·gc.alloc.rate.norm:              845.758 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.022 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.628 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 709.782 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala":
[info]   1480372.063 ±(99.9%) 107961.414 ops/s [Average]
[info]   (min, avg, max) = (1430646.923, 1480372.063, 1495744.551), stdev = 28037.236
[info]   CI (99.9%): [1372410.649, 1588333.477] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   794.849 ±(99.9%) 73.169 MB/sec [Average]
[info]   (min, avg, max) = (762.915, 794.849, 808.760), stdev = 19.002
[info]   CI (99.9%): [721.680, 868.018] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   845.001 ±(99.9%) 22.101 B/op [Average]
[info]   (min, avg, max) = (838.918, 845.001, 851.225), stdev = 5.739
[info]   CI (99.9%): [822.901, 867.102] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.017 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.018 ±(99.9%) 0.071 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.018, 0.044), stdev = 0.018
[info]   CI (99.9%): [≈ 0, 0.088] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   673.298 ±(99.9%) 1.581 MB/sec [Average]
[info]   (min, avg, max) = (672.782, 673.298, 673.766), stdev = 0.411
[info]   CI (99.9%): [671.717, 674.879] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   716.035 ±(99.9%) 52.258 B/op [Average]
[info]   (min, avg, max) = (708.654, 716.035, 740.149), stdev = 13.571
[info]   CI (99.9%): [663.777, 768.294] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJacksonScala:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 0.707
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 79.92% complete, ETA 00:27:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 679025.994 ops/s
[info] # Warmup Iteration   2: 901875.232 ops/s
[info] # Warmup Iteration   3: 957363.376 ops/s
[info] # Warmup Iteration   4: 954794.902 ops/s
[info] # Warmup Iteration   5: 957656.179 ops/s
[info] Iteration   1: 954484.985 ops/s
[info]                  ·gc.alloc.rate:                   277.346 MB/sec
[info]                  ·gc.alloc.rate.norm:              457.432 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.031 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.052 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      511.469 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 843.578 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 958012.724 ops/s
[info]                  ·gc.alloc.rate:      267.949 MB/sec
[info]                  ·gc.alloc.rate.norm: 440.280 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 955029.826 ops/s
[info]                  ·gc.alloc.rate:                   277.312 MB/sec
[info]                  ·gc.alloc.rate.norm:              457.047 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      511.508 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 843.034 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 957749.836 ops/s
[info]                  ·gc.alloc.rate:      267.725 MB/sec
[info]                  ·gc.alloc.rate.norm: 440.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 938936.194 ops/s
[info]                  ·gc.alloc.rate:                   283.423 MB/sec
[info]                  ·gc.alloc.rate.norm:              475.162 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.031 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.052 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      675.346 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1132.223 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala":
[info]   952842.713 ±(99.9%) 30544.168 ops/s [Average]
[info]   (min, avg, max) = (938936.194, 952842.713, 958012.724), stdev = 7932.224
[info]   CI (99.9%): [922298.545, 983386.882] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   274.751 ±(99.9%) 26.126 MB/sec [Average]
[info]   (min, avg, max) = (267.725, 274.751, 283.423), stdev = 6.785
[info]   CI (99.9%): [248.625, 300.877] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   453.984 ±(99.9%) 56.235 B/op [Average]
[info]   (min, avg, max) = (440.000, 453.984, 475.162), stdev = 14.604
[info]   CI (99.9%): [397.749, 510.220] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.012 ±(99.9%) 0.066 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.031), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.078] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.021 ±(99.9%) 0.109 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.052), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.130] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   339.665 ±(99.9%) 1221.439 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 339.665, 675.346), stdev = 317.204
[info]   CI (99.9%): [≈ 0, 1561.103] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   563.767 ±(99.9%) 2033.101 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 563.767, 1132.223), stdev = 527.990
[info]   CI (99.9%): [≈ 0, 2596.868] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScala:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.600, 3.000), stdev = 1.517
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 80.12% complete, ETA 00:26:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1189999.437 ops/s
[info] # Warmup Iteration   2: 1658742.830 ops/s
[info] # Warmup Iteration   3: 1678418.467 ops/s
[info] # Warmup Iteration   4: 1680353.535 ops/s
[info] # Warmup Iteration   5: 1680113.641 ops/s
[info] Iteration   1: 1626225.350 ops/s
[info]                  ·gc.alloc.rate:      16.536 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1680690.244 ops/s
[info]                  ·gc.alloc.rate:      17.089 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1680889.841 ops/s
[info]                  ·gc.alloc.rate:      17.088 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1679121.226 ops/s
[info]                  ·gc.alloc.rate:      17.072 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1679008.721 ops/s
[info]                  ·gc.alloc.rate:      17.070 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc":
[info]   1669187.076 ±(99.9%) 92538.503 ops/s [Average]
[info]   (min, avg, max) = (1626225.350, 1669187.076, 1680889.841), stdev = 24031.955
[info]   CI (99.9%): [1576648.573, 1761725.579] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   16.971 ±(99.9%) 0.937 MB/sec [Average]
[info]   (min, avg, max) = (16.536, 16.971, 17.089), stdev = 0.243
[info]   CI (99.9%): [16.034, 17.908] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   16.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (16.000, 16.000, 16.000), stdev = 0.001
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 80.32% complete, ETA 00:26:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 13668.866 ops/s
[info] # Warmup Iteration   2: 47078.771 ops/s
[info] # Warmup Iteration   3: 47856.069 ops/s
[info] # Warmup Iteration   4: 47678.248 ops/s
[info] # Warmup Iteration   5: 47013.148 ops/s
[info] Iteration   1: 48857.086 ops/s
[info]                  ·gc.alloc.rate:                   2036.963 MB/sec
[info]                  ·gc.alloc.rate.norm:              65626.927 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.671 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2024.650 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 65230.233 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 48885.156 ops/s
[info]                  ·gc.alloc.rate:                   2039.779 MB/sec
[info]                  ·gc.alloc.rate.norm:              65673.432 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.670 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2027.559 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 65279.995 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 48814.474 ops/s
[info]                  ·gc.alloc.rate:                   2023.828 MB/sec
[info]                  ·gc.alloc.rate.norm:              65230.317 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.342 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2030.771 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 65454.115 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 47966.687 ops/s
[info]                  ·gc.alloc.rate:                   2000.303 MB/sec
[info]                  ·gc.alloc.rate.norm:              65642.847 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2031.764 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 66675.305 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 47890.631 ops/s
[info]                  ·gc.alloc.rate:                   1987.624 MB/sec
[info]                  ·gc.alloc.rate.norm:              65332.909 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3.421 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1355.980 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 44570.883 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson":
[info]   48482.807 ±(99.9%) 1953.063 ops/s [Average]
[info]   (min, avg, max) = (47890.631, 48482.807, 48885.156), stdev = 507.204
[info]   CI (99.9%): [46529.744, 50435.870] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.alloc.rate":
[info]   2017.699 ±(99.9%) 88.300 MB/sec [Average]
[info]   (min, avg, max) = (1987.624, 2017.699, 2039.779), stdev = 22.931
[info]   CI (99.9%): [1929.399, 2105.999] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   65501.286 ±(99.9%) 787.348 B/op [Average]
[info]   (min, avg, max) = (65230.317, 65501.286, 65673.432), stdev = 204.472
[info]   CI (99.9%): [64713.939, 66288.634] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   0.037 ±(99.9%) 0.154 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.104), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   1.221 ±(99.9%) 5.076 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.221, 3.421), stdev = 1.318
[info]   CI (99.9%): [≈ 0, 6.296] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   1894.145 ±(99.9%) 1158.490 MB/sec [Average]
[info]   (min, avg, max) = (1355.980, 1894.145, 2031.764), stdev = 300.856
[info]   CI (99.9%): [735.655, 3052.635] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   61442.106 ±(99.9%) 36388.078 B/op [Average]
[info]   (min, avg, max) = (44570.883, 61442.106, 66675.305), stdev = 9449.868
[info]   CI (99.9%): [25054.028, 97830.185] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableBitSetBenchmark.writePlayJson:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 80.52% complete, ETA 00:26:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 177244.090 ops/s
[info] # Warmup Iteration   2: 240498.710 ops/s
[info] # Warmup Iteration   3: 252471.842 ops/s
[info] # Warmup Iteration   4: 253227.800 ops/s
[info] # Warmup Iteration   5: 251306.743 ops/s
[info] Iteration   1: 254475.112 ops/s
[info]                  ·gc.alloc.rate:                   1013.138 MB/sec
[info]                  ·gc.alloc.rate.norm:              6266.673 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.129 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.384 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4165.152 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 254135.366 ops/s
[info]                  ·gc.alloc.rate:                   1039.463 MB/sec
[info]                  ·gc.alloc.rate.norm:              6437.178 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.516 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1346.972 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8341.513 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 254203.276 ops/s
[info]                  ·gc.alloc.rate:                   1010.527 MB/sec
[info]                  ·gc.alloc.rate.norm:              6255.994 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.530 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4169.706 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 253646.658 ops/s
[info]                  ·gc.alloc.rate:                   1024.608 MB/sec
[info]                  ·gc.alloc.rate.norm:              6358.770 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.517 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1346.701 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8357.690 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 254237.945 ops/s
[info]                  ·gc.alloc.rate:                   1021.653 MB/sec
[info]                  ·gc.alloc.rate.norm:              6324.898 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.093 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4173.207 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala":
[info]   254139.671 ±(99.9%) 1170.026 ops/s [Average]
[info]   (min, avg, max) = (253646.658, 254139.671, 254475.112), stdev = 303.852
[info]   CI (99.9%): [252969.645, 255309.698] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1021.878 ±(99.9%) 43.988 MB/sec [Average]
[info]   (min, avg, max) = (1010.527, 1021.878, 1039.463), stdev = 11.423
[info]   CI (99.9%): [977.890, 1065.866] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   6328.703 ±(99.9%) 284.399 B/op [Average]
[info]   (min, avg, max) = (6255.994, 6328.703, 6437.178), stdev = 73.857
[info]   CI (99.9%): [6044.304, 6613.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.037 ±(99.9%) 0.164 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.083), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.202] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.232 ±(99.9%) 1.018 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.232, 0.517), stdev = 0.264
[info]   CI (99.9%): [≈ 0, 1.251] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   942.936 ±(99.9%) 1419.767 MB/sec [Average]
[info]   (min, avg, max) = (673.384, 942.936, 1346.972), stdev = 368.709
[info]   CI (99.9%): [≈ 0, 2362.703] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   5841.454 ±(99.9%) 8816.527 B/op [Average]
[info]   (min, avg, max) = (4165.152, 5841.454, 8357.690), stdev = 2289.624
[info]   CI (99.9%): [≈ 0, 14657.981] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 80.72% complete, ETA 00:26:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1286.206 ops/s
[info] # Warmup Iteration   2: 33446.302 ops/s
[info] # Warmup Iteration   3: 38050.872 ops/s
[info] # Warmup Iteration   4: 37527.369 ops/s
[info] # Warmup Iteration   5: 37307.301 ops/s
[info] Iteration   1: 37971.050 ops/s
[info]                  ·gc.alloc.rate:                   1945.034 MB/sec
[info]                  ·gc.alloc.rate.norm:              80638.661 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.726 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2022.204 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 83838.038 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 38231.369 ops/s
[info]                  ·gc.alloc.rate:                   1940.061 MB/sec
[info]                  ·gc.alloc.rate.norm:              79850.024 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.571 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.513 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 55585.113 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 38108.351 ops/s
[info]                  ·gc.alloc.rate:                   1962.524 MB/sec
[info]                  ·gc.alloc.rate.norm:              81056.523 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.719 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2026.797 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 83711.120 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 37368.311 ops/s
[info]                  ·gc.alloc.rate:                   1938.064 MB/sec
[info]                  ·gc.alloc.rate.norm:              81637.707 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2029.404 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 85485.246 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 37948.520 ops/s
[info]                  ·gc.alloc.rate:                   1954.611 MB/sec
[info]                  ·gc.alloc.rate.norm:              81072.060 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.727 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2032.793 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 84314.837 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson":
[info]   37925.520 ±(99.9%) 1277.194 ops/s [Average]
[info]   (min, avg, max) = (37368.311, 37925.520, 38231.369), stdev = 331.683
[info]   CI (99.9%): [36648.327, 39202.714] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1948.059 ±(99.9%) 39.700 MB/sec [Average]
[info]   (min, avg, max) = (1938.064, 1948.059, 1962.524), stdev = 10.310
[info]   CI (99.9%): [1908.359, 1987.759] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   80850.995 ±(99.9%) 2552.091 B/op [Average]
[info]   (min, avg, max) = (79850.024, 80850.995, 81637.707), stdev = 662.770
[info]   CI (99.9%): [78298.904, 83403.086] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   0.037 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.062), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   1.548 ±(99.9%) 3.620 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.548, 2.571), stdev = 0.940
[info]   CI (99.9%): [≈ 0, 5.169] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   1892.342 ±(99.9%) 1166.423 MB/sec [Average]
[info]   (min, avg, max) = (1350.513, 1892.342, 2032.793), stdev = 302.916
[info]   CI (99.9%): [725.919, 3058.765] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   78586.871 ±(99.9%) 49586.320 B/op [Average]
[info]   (min, avg, max) = (55585.113, 78586.871, 85485.246), stdev = 12877.410
[info]   CI (99.9%): [29000.551, 128173.191] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 80.92% complete, ETA 00:25:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 40242.737 ops/s
[info] # Warmup Iteration   2: 96715.733 ops/s
[info] # Warmup Iteration   3: 97567.819 ops/s
[info] # Warmup Iteration   4: 98716.133 ops/s
[info] # Warmup Iteration   5: 96725.308 ops/s
[info] Iteration   1: 98846.686 ops/s
[info]                  ·gc.alloc.rate:                   940.686 MB/sec
[info]                  ·gc.alloc.rate.norm:              14980.900 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.326 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.035 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 21468.130 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 96019.971 ops/s
[info]                  ·gc.alloc.rate:                   893.082 MB/sec
[info]                  ·gc.alloc.rate.norm:              14641.733 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.005 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11050.055 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 98783.328 ops/s
[info]                  ·gc.alloc.rate:                   920.864 MB/sec
[info]                  ·gc.alloc.rate.norm:              14673.091 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.092 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10741.018 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 98749.620 ops/s
[info]                  ·gc.alloc.rate:                   939.066 MB/sec
[info]                  ·gc.alloc.rate.norm:              14970.352 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.659 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.275 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 21493.870 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 98900.146 ops/s
[info]                  ·gc.alloc.rate:                   917.601 MB/sec
[info]                  ·gc.alloc.rate.norm:              14605.962 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.299 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10733.180 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala":
[info]   98259.950 ±(99.9%) 4826.886 ops/s [Average]
[info]   (min, avg, max) = (96019.971, 98259.950, 98900.146), stdev = 1253.527
[info]   CI (99.9%): [93433.065, 103086.836] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   922.260 ±(99.9%) 74.492 MB/sec [Average]
[info]   (min, avg, max) = (893.082, 922.260, 940.686), stdev = 19.345
[info]   CI (99.9%): [847.767, 996.752] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   14774.407 ±(99.9%) 713.344 B/op [Average]
[info]   (min, avg, max) = (14605.962, 14774.407, 14980.900), stdev = 185.253
[info]   CI (99.9%): [14061.064, 15487.751] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.037 ±(99.9%) 0.200 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.104), stdev = 0.052
[info]   CI (99.9%): [≈ 0, 0.237] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.597 ±(99.9%) 3.180 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.597, 1.659), stdev = 0.826
[info]   CI (99.9%): [≈ 0, 3.777] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   943.741 ±(99.9%) 1421.571 MB/sec [Average]
[info]   (min, avg, max) = (674.005, 943.741, 1348.275), stdev = 369.178
[info]   CI (99.9%): [≈ 0, 2365.313] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   15097.251 ±(99.9%) 22445.201 B/op [Average]
[info]   (min, avg, max) = (10733.180, 15097.251, 21493.870), stdev = 5828.947
[info]   CI (99.9%): [≈ 0, 37542.451] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 81.12% complete, ETA 00:25:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 225071.375 ops/s
[info] # Warmup Iteration   2: 309477.731 ops/s
[info] # Warmup Iteration   3: 319713.096 ops/s
[info] # Warmup Iteration   4: 317823.934 ops/s
[info] # Warmup Iteration   5: 317791.138 ops/s
[info] Iteration   1: 318292.151 ops/s
[info]                  ·gc.alloc.rate:                   446.349 MB/sec
[info]                  ·gc.alloc.rate.norm:              2207.274 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.422 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3330.193 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 320193.005 ops/s
[info]                  ·gc.alloc.rate:      431.316 MB/sec
[info]                  ·gc.alloc.rate.norm: 2120.007 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 311124.457 ops/s
[info]                  ·gc.alloc.rate:                   435.200 MB/sec
[info]                  ·gc.alloc.rate.norm:              2200.786 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2.915 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14.742 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.648 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3406.612 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 304612.155 ops/s
[info]                  ·gc.alloc.rate:      410.265 MB/sec
[info]                  ·gc.alloc.rate.norm: 2120.057 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 319013.561 ops/s
[info]                  ·gc.alloc.rate:                   449.672 MB/sec
[info]                  ·gc.alloc.rate.norm:              2217.833 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.205 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.991 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3319.266 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala":
[info]   314647.066 ±(99.9%) 25558.138 ops/s [Average]
[info]   (min, avg, max) = (304612.155, 314647.066, 320193.005), stdev = 6637.367
[info]   CI (99.9%): [289088.928, 340205.204] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   434.560 ±(99.9%) 59.919 MB/sec [Average]
[info]   (min, avg, max) = (410.265, 434.560, 449.672), stdev = 15.561
[info]   CI (99.9%): [374.641, 494.479] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   2173.191 ±(99.9%) 188.326 B/op [Average]
[info]   (min, avg, max) = (2120.007, 2173.191, 2217.833), stdev = 48.908
[info]   CI (99.9%): [1984.865, 2361.517] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.591 ±(99.9%) 5.003 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.591, 2.915), stdev = 1.299
[info]   CI (99.9%): [≈ 0, 5.594] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   2.989 ±(99.9%) 25.300 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.989, 14.742), stdev = 6.570
[info]   CI (99.9%): [≈ 0, 28.290] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   404.012 ±(99.9%) 1420.161 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 404.012, 673.648), stdev = 368.811
[info]   CI (99.9%): [≈ 0, 1824.173] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   2011.214 ±(99.9%) 7070.889 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2011.214, 3406.612), stdev = 1836.287
[info]   CI (99.9%): [≈ 0, 9082.103] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 3.000), stdev = 1.517
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 81.33% complete, ETA 00:25:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 242148.040 ops/s
[info] # Warmup Iteration   2: 333425.912 ops/s
[info] # Warmup Iteration   3: 342065.964 ops/s
[info] # Warmup Iteration   4: 342415.651 ops/s
[info] # Warmup Iteration   5: 341428.840 ops/s
[info] Iteration   1: 342654.242 ops/s
[info]                  ·gc.alloc.rate:      3.483 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 342234.528 ops/s
[info]                  ·gc.alloc.rate:      3.479 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 342739.086 ops/s
[info]                  ·gc.alloc.rate:      3.488 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.019 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 340203.476 ops/s
[info]                  ·gc.alloc.rate:      8.889 MB/sec
[info]                  ·gc.alloc.rate.norm: 41.125 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 341835.915 ops/s
[info]                  ·gc.alloc.rate:      3.476 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   341933.449 ±(99.9%) 3974.547 ops/s [Average]
[info]   (min, avg, max) = (340203.476, 341933.449, 342739.086), stdev = 1032.177
[info]   CI (99.9%): [337958.902, 345907.997] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   4.563 ±(99.9%) 9.311 MB/sec [Average]
[info]   (min, avg, max) = (3.476, 4.563, 8.889), stdev = 2.418
[info]   CI (99.9%): [≈ 0, 13.875] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   21.030 ±(99.9%) 43.257 B/op [Average]
[info]   (min, avg, max) = (16.001, 21.030, 41.125), stdev = 11.234
[info]   CI (99.9%): [≈ 0, 64.287] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 81.53% complete, ETA 00:25:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5970.765 ops/s
[info] # Warmup Iteration   2: 43641.802 ops/s
[info] # Warmup Iteration   3: 49118.161 ops/s
[info] # Warmup Iteration   4: 48660.941 ops/s
[info] # Warmup Iteration   5: 48174.672 ops/s
[info] Iteration   1: 48923.105 ops/s
[info]                  ·gc.alloc.rate:                   1264.178 MB/sec
[info]                  ·gc.alloc.rate.norm:              40676.204 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.009 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1347.986 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 43372.799 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 48989.335 ops/s
[info]                  ·gc.alloc.rate:                   1272.416 MB/sec
[info]                  ·gc.alloc.rate.norm:              40885.380 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.731 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 43337.546 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 49219.413 ops/s
[info]                  ·gc.alloc.rate:                   1272.351 MB/sec
[info]                  ·gc.alloc.rate.norm:              40691.846 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.997 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.384 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 43155.483 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 49400.030 ops/s
[info]                  ·gc.alloc.rate:                   1261.019 MB/sec
[info]                  ·gc.alloc.rate.norm:              40166.870 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.927 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 21498.259 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 49473.981 ops/s
[info]                  ·gc.alloc.rate:                   1289.206 MB/sec
[info]                  ·gc.alloc.rate.norm:              41007.821 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.662 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1351.038 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 42974.600 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson":
[info]   49201.173 ±(99.9%) 936.305 ops/s [Average]
[info]   (min, avg, max) = (48923.105, 49201.173, 49473.981), stdev = 243.155
[info]   CI (99.9%): [48264.868, 50137.478] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1271.834 ±(99.9%) 42.092 MB/sec [Average]
[info]   (min, avg, max) = (1261.019, 1271.834, 1289.206), stdev = 10.931
[info]   CI (99.9%): [1229.742, 1313.926] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   40685.624 ±(99.9%) 1237.229 B/op [Average]
[info]   (min, avg, max) = (40166.870, 40685.624, 41007.821), stdev = 321.304
[info]   CI (99.9%): [39448.395, 41922.853] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   0.029 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.151] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   0.934 ±(99.9%) 3.900 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.934, 2.009), stdev = 1.013
[info]   CI (99.9%): [≈ 0, 4.834] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   1214.413 ±(99.9%) 1161.292 MB/sec [Average]
[info]   (min, avg, max) = (674.927, 1214.413, 1351.038), stdev = 301.584
[info]   CI (99.9%): [53.121, 2375.705] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   38867.738 ±(99.9%) 37394.126 B/op [Average]
[info]   (min, avg, max) = (21498.259, 38867.738, 43372.799), stdev = 9711.136
[info]   CI (99.9%): [1473.612, 76261.863] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 81.73% complete, ETA 00:24:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 29839.490 ops/s
[info] # Warmup Iteration   2: 72226.266 ops/s
[info] # Warmup Iteration   3: 71184.726 ops/s
[info] # Warmup Iteration   4: 71875.327 ops/s
[info] # Warmup Iteration   5: 71064.425 ops/s
[info] Iteration   1: 72522.855 ops/s
[info]                  ·gc.alloc.rate:                   1359.561 MB/sec
[info]                  ·gc.alloc.rate.norm:              29508.825 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.904 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1342.788 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 29144.780 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 73514.971 ops/s
[info]                  ·gc.alloc.rate:                   1369.033 MB/sec
[info]                  ·gc.alloc.rate.norm:              29307.453 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1343.713 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 28765.424 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 72733.341 ops/s
[info]                  ·gc.alloc.rate:                   1364.378 MB/sec
[info]                  ·gc.alloc.rate.norm:              29525.053 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1344.176 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 29087.872 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 72129.786 ops/s
[info]                  ·gc.alloc.rate:                   1327.375 MB/sec
[info]                  ·gc.alloc.rate.norm:              28967.545 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.033 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 14687.709 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 72815.956 ops/s
[info]                  ·gc.alloc.rate:                   1363.959 MB/sec
[info]                  ·gc.alloc.rate.norm:              29482.686 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.250 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1346.824 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 29112.313 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce":
[info]   72743.382 ±(99.9%) 1950.048 ops/s [Average]
[info]   (min, avg, max) = (72129.786, 72743.382, 73514.971), stdev = 506.421
[info]   CI (99.9%): [70793.334, 74693.430] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.alloc.rate":
[info]   1356.861 ±(99.9%) 64.770 MB/sec [Average]
[info]   (min, avg, max) = (1327.375, 1356.861, 1369.033), stdev = 16.821
[info]   CI (99.9%): [1292.091, 1421.631] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   29358.312 ±(99.9%) 905.538 B/op [Average]
[info]   (min, avg, max) = (28967.545, 29358.312, 29525.053), stdev = 235.165
[info]   CI (99.9%): [28452.774, 30263.851] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   0.029 ±(99.9%) 0.176 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.104), stdev = 0.046
[info]   CI (99.9%): [≈ 0, 0.205] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.631 ±(99.9%) 3.797 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.631, 2.250), stdev = 0.986
[info]   CI (99.9%): [≈ 0, 4.427] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1210.107 ±(99.9%) 1156.107 MB/sec [Average]
[info]   (min, avg, max) = (673.033, 1210.107, 1346.824), stdev = 300.237
[info]   CI (99.9%): [54.000, 2366.214] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   26159.620 ±(99.9%) 24701.152 B/op [Average]
[info]   (min, avg, max) = (14687.709, 26159.620, 29144.780), stdev = 6414.811
[info]   CI (99.9%): [1458.468, 50860.772] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 81.93% complete, ETA 00:24:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 30797.060 ops/s
[info] # Warmup Iteration   2: 116097.058 ops/s
[info] # Warmup Iteration   3: 119801.960 ops/s
[info] # Warmup Iteration   4: 122648.772 ops/s
[info] # Warmup Iteration   5: 120170.403 ops/s
[info] Iteration   1: 119076.691 ops/s
[info]                  ·gc.alloc.rate:                   597.673 MB/sec
[info]                  ·gc.alloc.rate.norm:              7900.782 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1.166 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15.408 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.044 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8897.131 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 118289.236 ops/s
[info]                  ·gc.alloc.rate:                   608.934 MB/sec
[info]                  ·gc.alloc.rate.norm:              8101.094 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.831 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.534 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8960.521 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 120130.037 ops/s
[info]                  ·gc.alloc.rate:                   596.345 MB/sec
[info]                  ·gc.alloc.rate.norm:              7813.640 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.273 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.431 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8823.664 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 119293.705 ops/s
[info]                  ·gc.alloc.rate:                   600.904 MB/sec
[info]                  ·gc.alloc.rate.norm:              7928.953 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.099 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.357 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8884.971 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   5: 119898.174 ops/s
[info]                  ·gc.alloc.rate:                   603.870 MB/sec
[info]                  ·gc.alloc.rate.norm:              7928.190 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.349 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8840.367 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala":
[info]   119337.568 ±(99.9%) 2797.532 ops/s [Average]
[info]   (min, avg, max) = (118289.236, 119337.568, 120130.037), stdev = 726.510
[info]   CI (99.9%): [116540.036, 122135.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   601.545 ±(99.9%) 19.487 MB/sec [Average]
[info]   (min, avg, max) = (596.345, 601.545, 608.934), stdev = 5.061
[info]   CI (99.9%): [582.058, 621.032] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   7934.532 ±(99.9%) 401.873 B/op [Average]
[info]   (min, avg, max) = (7813.640, 7934.532, 8101.094), stdev = 104.365
[info]   CI (99.9%): [7532.659, 8336.404] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.266 ±(99.9%) 1.940 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.266, 1.166), stdev = 0.504
[info]   CI (99.9%): [≈ 0, 2.206] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   3.522 ±(99.9%) 25.641 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.522, 15.408), stdev = 6.659
[info]   CI (99.9%): [≈ 0, 29.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   673.343 ±(99.9%) 0.705 MB/sec [Average]
[info]   (min, avg, max) = (673.044, 673.343, 673.534), stdev = 0.183
[info]   CI (99.9%): [672.638, 674.048] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   8881.331 ±(99.9%) 206.804 B/op [Average]
[info]   (min, avg, max) = (8823.664, 8881.331, 8960.521), stdev = 53.706
[info]   CI (99.9%): [8674.527, 9088.135] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 0.837
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 82.13% complete, ETA 00:24:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 140834.941 ops/s
[info] # Warmup Iteration   2: 244101.245 ops/s
[info] # Warmup Iteration   3: 247199.923 ops/s
[info] # Warmup Iteration   4: 249104.081 ops/s
[info] # Warmup Iteration   5: 251832.495 ops/s
[info] Iteration   1: 253088.199 ops/s
[info]                  ·gc.alloc.rate:                   1059.081 MB/sec
[info]                  ·gc.alloc.rate.norm:              6587.428 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.653 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4183.865 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 251297.699 ops/s
[info]                  ·gc.alloc.rate:                   1078.811 MB/sec
[info]                  ·gc.alloc.rate.norm:              6756.525 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.635 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8427.625 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 244888.120 ops/s
[info]                  ·gc.alloc.rate:                   1024.033 MB/sec
[info]                  ·gc.alloc.rate.norm:              6581.800 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.734 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4323.884 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 252629.852 ops/s
[info]                  ·gc.alloc.rate:                   1071.543 MB/sec
[info]                  ·gc.alloc.rate.norm:              6676.112 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.519 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.478 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8382.831 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 253332.840 ops/s
[info]                  ·gc.alloc.rate:                   1073.105 MB/sec
[info]                  ·gc.alloc.rate.norm:              6663.991 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.044 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8352.734 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala":
[info]   251047.342 ±(99.9%) 13599.321 ops/s [Average]
[info]   (min, avg, max) = (244888.120, 251047.342, 253332.840), stdev = 3531.700
[info]   CI (99.9%): [237448.021, 264646.663] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1061.315 ±(99.9%) 84.904 MB/sec [Average]
[info]   (min, avg, max) = (1024.033, 1061.315, 1078.811), stdev = 22.049
[info]   CI (99.9%): [976.411, 1146.219] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   6653.171 ±(99.9%) 277.282 B/op [Average]
[info]   (min, avg, max) = (6581.800, 6653.171, 6756.525), stdev = 72.009
[info]   CI (99.9%): [6375.889, 6930.453] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.017 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.083), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.160] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.104 ±(99.9%) 0.893 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.104, 0.519), stdev = 0.232
[info]   CI (99.9%): [≈ 0, 0.997] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   1076.309 ±(99.9%) 1418.765 MB/sec [Average]
[info]   (min, avg, max) = (672.653, 1076.309, 1345.635), stdev = 368.449
[info]   CI (99.9%): [≈ 0, 2495.074] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   6734.188 ±(99.9%) 8721.339 B/op [Average]
[info]   (min, avg, max) = (4183.865, 6734.188, 8427.625), stdev = 2264.904
[info]   CI (99.9%): [≈ 0, 15455.527] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 82.33% complete, ETA 00:23:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1346.216 ops/s
[info] # Warmup Iteration   2: 24691.755 ops/s
[info] # Warmup Iteration   3: 27694.984 ops/s
[info] # Warmup Iteration   4: 27229.703 ops/s
[info] # Warmup Iteration   5: 27685.170 ops/s
[info] Iteration   1: 27587.864 ops/s
[info]                  ·gc.alloc.rate:                   1508.745 MB/sec
[info]                  ·gc.alloc.rate.norm:              86052.930 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4.750 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2023.207 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 115395.804 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 27565.312 ops/s
[info]                  ·gc.alloc.rate:                   1473.472 MB/sec
[info]                  ·gc.alloc.rate.norm:              84114.588 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.430 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 77033.502 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 28029.989 ops/s
[info]                  ·gc.alloc.rate:                   1497.638 MB/sec
[info]                  ·gc.alloc.rate.norm:              84086.317 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.169 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.314 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 75814.644 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 27422.977 ops/s
[info]                  ·gc.alloc.rate:                   1477.473 MB/sec
[info]                  ·gc.alloc.rate.norm:              84797.830 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.389 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1351.570 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 77571.762 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 27670.197 ops/s
[info]                  ·gc.alloc.rate:                   1502.694 MB/sec
[info]                  ·gc.alloc.rate.norm:              85480.177 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1352.830 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 76955.187 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson":
[info]   27655.268 ±(99.9%) 876.462 ops/s [Average]
[info]   (min, avg, max) = (27422.977, 27655.268, 28029.989), stdev = 227.614
[info]   CI (99.9%): [26778.806, 28531.730] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1492.005 ±(99.9%) 60.299 MB/sec [Average]
[info]   (min, avg, max) = (1473.472, 1492.005, 1508.745), stdev = 15.660
[info]   CI (99.9%): [1431.705, 1552.304] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   84906.369 ±(99.9%) 3309.674 B/op [Average]
[info]   (min, avg, max) = (84086.317, 84906.369, 86052.930), stdev = 859.512
[info]   CI (99.9%): [81596.695, 88216.042] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   0.029 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.083), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   1.662 ±(99.9%) 7.661 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.662, 4.750), stdev = 1.990
[info]   CI (99.9%): [≈ 0, 9.323] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   1485.470 ±(99.9%) 1157.530 MB/sec [Average]
[info]   (min, avg, max) = (1349.430, 1485.470, 2023.207), stdev = 300.607
[info]   CI (99.9%): [327.940, 2643.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   84554.180 ±(99.9%) 66434.620 B/op [Average]
[info]   (min, avg, max) = (75814.644, 84554.180, 115395.804), stdev = 17252.860
[info]   CI (99.9%): [18119.559, 150988.800] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 82.53% complete, ETA 00:23:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 34906.555 ops/s
[info] # Warmup Iteration   2: 143773.615 ops/s
[info] # Warmup Iteration   3: 139984.600 ops/s
[info] # Warmup Iteration   4: 145505.951 ops/s
[info] # Warmup Iteration   5: 146548.573 ops/s
[info] Iteration   1: 146401.574 ops/s
[info]                  ·gc.alloc.rate:                   792.661 MB/sec
[info]                  ·gc.alloc.rate.norm:              8523.039 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.343 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.003 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 14494.330 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 147027.490 ops/s
[info]                  ·gc.alloc.rate:                   772.968 MB/sec
[info]                  ·gc.alloc.rate.norm:              8275.791 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7216.412 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   3: 146406.970 ops/s
[info]                  ·gc.alloc.rate:                   771.203 MB/sec
[info]                  ·gc.alloc.rate.norm:              8289.842 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.189 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7247.017 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 143892.360 ops/s
[info]                  ·gc.alloc.rate:                   764.251 MB/sec
[info]                  ·gc.alloc.rate.norm:              8359.032 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.683 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.142 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7373.460 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 147031.550 ops/s
[info]                  ·gc.alloc.rate:                   776.328 MB/sec
[info]                  ·gc.alloc.rate.norm:              8308.398 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.253 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7215.970 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala":
[info]   146151.989 ±(99.9%) 5010.782 ops/s [Average]
[info]   (min, avg, max) = (143892.360, 146151.989, 147031.550), stdev = 1301.284
[info]   CI (99.9%): [141141.207, 151162.771] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   775.482 ±(99.9%) 40.687 MB/sec [Average]
[info]   (min, avg, max) = (764.251, 775.482, 792.661), stdev = 10.566
[info]   CI (99.9%): [734.795, 816.169] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   8351.221 ±(99.9%) 389.245 B/op [Average]
[info]   (min, avg, max) = (8275.791, 8351.221, 8523.039), stdev = 101.086
[info]   CI (99.9%): [7961.976, 8740.466] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.037 ±(99.9%) 0.215 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.125), stdev = 0.056
[info]   CI (99.9%): [≈ 0, 0.253] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.405 ±(99.9%) 2.317 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.405, 1.343), stdev = 0.602
[info]   CI (99.9%): [≈ 0, 2.723] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   808.922 ±(99.9%) 1160.414 MB/sec [Average]
[info]   (min, avg, max) = (674.021, 808.922, 1348.003), stdev = 301.356
[info]   CI (99.9%): [≈ 0, 1969.336] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   8709.438 ±(99.9%) 12454.923 B/op [Average]
[info]   (min, avg, max) = (7215.970, 8709.438, 14494.330), stdev = 3234.504
[info]   CI (99.9%): [≈ 0, 21164.361] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 0.707
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 82.73% complete, ETA 00:23:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 305906.097 ops/s
[info] # Warmup Iteration   2: 415682.075 ops/s
[info] # Warmup Iteration   3: 430327.482 ops/s
[info] # Warmup Iteration   4: 429664.614 ops/s
[info] # Warmup Iteration   5: 431315.359 ops/s
[info] Iteration   1: 430823.181 ops/s
[info]                  ·gc.alloc.rate:                   1277.983 MB/sec
[info]                  ·gc.alloc.rate.norm:              4669.372 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.664 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2457.716 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 424912.069 ops/s
[info]                  ·gc.alloc.rate:                   1277.092 MB/sec
[info]                  ·gc.alloc.rate.norm:              4730.760 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.386 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.476 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4984.078 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 434935.753 ops/s
[info]                  ·gc.alloc.rate:                   1303.273 MB/sec
[info]                  ·gc.alloc.rate.norm:              4716.678 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.226 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.748 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4870.399 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 436490.806 ops/s
[info]                  ·gc.alloc.rate:                   1318.631 MB/sec
[info]                  ·gc.alloc.rate.norm:              4754.020 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1347.053 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4856.487 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 444163.506 ops/s
[info]                  ·gc.alloc.rate:                   1327.742 MB/sec
[info]                  ·gc.alloc.rate.norm:              4705.063 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.369 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.131 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4777.316 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala":
[info]   434265.063 ±(99.9%) 27411.878 ops/s [Average]
[info]   (min, avg, max) = (424912.069, 434265.063, 444163.506), stdev = 7118.778
[info]   CI (99.9%): [406853.185, 461676.941] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   1300.944 ±(99.9%) 88.910 MB/sec [Average]
[info]   (min, avg, max) = (1277.092, 1300.944, 1327.742), stdev = 23.090
[info]   CI (99.9%): [1212.034, 1389.854] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   4715.179 ±(99.9%) 121.070 B/op [Average]
[info]   (min, avg, max) = (4669.372, 4715.179, 4754.020), stdev = 31.441
[info]   CI (99.9%): [4594.109, 4836.249] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.054 ±(99.9%) 0.201 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.104), stdev = 0.052
[info]   CI (99.9%): [≈ 0, 0.255] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.196 ±(99.9%) 0.729 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.196, 0.386), stdev = 0.189
[info]   CI (99.9%): [≈ 0, 0.925] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   1211.814 ±(99.9%) 1160.569 MB/sec [Average]
[info]   (min, avg, max) = (672.664, 1211.814, 1348.131), stdev = 301.396
[info]   CI (99.9%): [51.245, 2372.383] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   4389.199 ±(99.9%) 4167.356 B/op [Average]
[info]   (min, avg, max) = (2457.716, 4389.199, 4984.078), stdev = 1082.249
[info]   CI (99.9%): [221.843, 8556.555] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 82.93% complete, ETA 00:23:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 351456.604 ops/s
[info] # Warmup Iteration   2: 466794.287 ops/s
[info] # Warmup Iteration   3: 466061.171 ops/s
[info] # Warmup Iteration   4: 477303.642 ops/s
[info] # Warmup Iteration   5: 462653.224 ops/s
[info] Iteration   1: 480799.987 ops/s
[info]                  ·gc.alloc.rate:                   908.044 MB/sec
[info]                  ·gc.alloc.rate.norm:              2973.116 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.200 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2204.192 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 479918.378 ops/s
[info]                  ·gc.alloc.rate:                   930.825 MB/sec
[info]                  ·gc.alloc.rate.norm:              3053.085 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.341 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.351 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4412.721 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 481701.710 ops/s
[info]                  ·gc.alloc.rate:                   905.141 MB/sec
[info]                  ·gc.alloc.rate.norm:              2957.085 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.191 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2196.041 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   4: 476718.384 ops/s
[info]                  ·gc.alloc.rate:                   889.806 MB/sec
[info]                  ·gc.alloc.rate.norm:              2937.212 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.197 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2218.894 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 478714.078 ops/s
[info]                  ·gc.alloc.rate:                   893.988 MB/sec
[info]                  ·gc.alloc.rate.norm:              2939.378 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.068 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.697 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2211.788 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   479570.507 ±(99.9%) 7467.356 ops/s [Average]
[info]   (min, avg, max) = (476718.384, 479570.507, 481701.710), stdev = 1939.249
[info]   CI (99.9%): [472103.151, 487037.863] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   905.561 ±(99.9%) 61.694 MB/sec [Average]
[info]   (min, avg, max) = (889.806, 905.561, 930.825), stdev = 16.022
[info]   CI (99.9%): [843.866, 967.255] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   2971.975 ±(99.9%) 183.391 B/op [Average]
[info]   (min, avg, max) = (2937.212, 2971.975, 3053.085), stdev = 47.626
[info]   CI (99.9%): [2788.585, 3155.366] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   0.025 ±(99.9%) 0.174 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.104), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.199] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   0.082 ±(99.9%) 0.570 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.082, 0.341), stdev = 0.148
[info]   CI (99.9%): [≈ 0, 0.652] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space":
[info]   807.127 ±(99.9%) 1158.568 MB/sec [Average]
[info]   (min, avg, max) = (672.191, 807.127, 1345.351), stdev = 300.877
[info]   CI (99.9%): [≈ 0, 1965.696] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   2648.727 ±(99.9%) 3797.270 B/op [Average]
[info]   (min, avg, max) = (2196.041, 2648.727, 4412.721), stdev = 986.139
[info]   CI (99.9%): [≈ 0, 6445.998] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 0.837
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 83.13% complete, ETA 00:22:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 9721.652 ops/s
[info] # Warmup Iteration   2: 60520.780 ops/s
[info] # Warmup Iteration   3: 62108.611 ops/s
[info] # Warmup Iteration   4: 60782.424 ops/s
[info] # Warmup Iteration   5: 61964.283 ops/s
[info] Iteration   1: 62989.080 ops/s
[info]                  ·gc.alloc.rate:                   1384.237 MB/sec
[info]                  ·gc.alloc.rate.norm:              34594.585 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.040 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1347.967 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 33688.119 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 63098.525 ops/s
[info]                  ·gc.alloc.rate:                   1385.990 MB/sec
[info]                  ·gc.alloc.rate.norm:              34573.694 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.822 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 33646.549 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 62845.904 ops/s
[info]                  ·gc.alloc.rate:                   1389.055 MB/sec
[info]                  ·gc.alloc.rate.norm:              34791.677 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.366 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 33797.588 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 62866.193 ops/s
[info]                  ·gc.alloc.rate:                   1376.824 MB/sec
[info]                  ·gc.alloc.rate.norm:              34462.870 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1351.127 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 33819.653 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 63146.121 ops/s
[info]                  ·gc.alloc.rate:                   1369.362 MB/sec
[info]                  ·gc.alloc.rate.norm:              34138.272 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.038 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1351.942 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 33703.991 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson":
[info]   62989.165 ±(99.9%) 517.482 ops/s [Average]
[info]   (min, avg, max) = (62845.904, 62989.165, 63146.121), stdev = 134.388
[info]   CI (99.9%): [62471.683, 63506.646] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1381.094 ±(99.9%) 30.630 MB/sec [Average]
[info]   (min, avg, max) = (1369.362, 1381.094, 1389.055), stdev = 7.954
[info]   CI (99.9%): [1350.464, 1411.723] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   34512.220 ±(99.9%) 925.220 B/op [Average]
[info]   (min, avg, max) = (34138.272, 34512.220, 34791.677), stdev = 240.277
[info]   CI (99.9%): [33587.000, 35437.440] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   0.017 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.104] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   0.416 ±(99.9%) 2.191 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.416, 1.040), stdev = 0.569
[info]   CI (99.9%): [≈ 0, 2.607] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   1349.845 ±(99.9%) 6.340 MB/sec [Average]
[info]   (min, avg, max) = (1347.967, 1349.845, 1351.942), stdev = 1.647
[info]   CI (99.9%): [1343.504, 1356.185] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   33731.180 ±(99.9%) 285.528 B/op [Average]
[info]   (min, avg, max) = (33646.549, 33731.180, 33819.653), stdev = 74.151
[info]   CI (99.9%): [33445.652, 34016.708] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 83.33% complete, ETA 00:22:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 51130.233 ops/s
[info] # Warmup Iteration   2: 94676.199 ops/s
[info] # Warmup Iteration   3: 97027.012 ops/s
[info] # Warmup Iteration   4: 94161.624 ops/s
[info] # Warmup Iteration   5: 96545.452 ops/s
[info] Iteration   1: 98346.555 ops/s
[info]                  ·gc.alloc.rate:                   1513.226 MB/sec
[info]                  ·gc.alloc.rate.norm:              24220.056 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.999 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1342.726 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 21491.101 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 98678.020 ops/s
[info]                  ·gc.alloc.rate:                   1513.218 MB/sec
[info]                  ·gc.alloc.rate.norm:              24139.238 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.664 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1343.389 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 21430.083 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 98814.820 ops/s
[info]                  ·gc.alloc.rate:                   1527.175 MB/sec
[info]                  ·gc.alloc.rate.norm:              24313.842 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.332 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.428 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 21420.296 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 98781.064 ops/s
[info]                  ·gc.alloc.rate:                   1526.442 MB/sec
[info]                  ·gc.alloc.rate.norm:              24323.458 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.995 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2019.442 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 32179.298 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 98770.217 ops/s
[info]                  ·gc.alloc.rate:                   1525.740 MB/sec
[info]                  ·gc.alloc.rate.norm:              24314.076 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.995 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.108 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 21483.342 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce":
[info]   98678.135 ±(99.9%) 739.939 ops/s [Average]
[info]   (min, avg, max) = (98346.555, 98678.135, 98814.820), stdev = 192.160
[info]   CI (99.9%): [97938.197, 99418.074] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:·gc.alloc.rate":
[info]   1521.160 ±(99.9%) 27.971 MB/sec [Average]
[info]   (min, avg, max) = (1513.218, 1521.160, 1527.175), stdev = 7.264
[info]   CI (99.9%): [1493.189, 1549.131] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   24262.134 ±(99.9%) 310.486 B/op [Average]
[info]   (min, avg, max) = (24139.238, 24262.134, 24323.458), stdev = 80.632
[info]   CI (99.9%): [23951.648, 24572.620] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   0.050 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.062), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.797 ±(99.9%) 1.145 B/op [Average]
[info]   (min, avg, max) = (0.332, 0.797, 0.999), stdev = 0.297
[info]   CI (99.9%): [≈ 0, 1.942] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1479.819 ±(99.9%) 1161.608 MB/sec [Average]
[info]   (min, avg, max) = (1342.726, 1479.819, 2019.442), stdev = 301.666
[info]   CI (99.9%): [318.210, 2641.427] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   23600.824 ±(99.9%) 18466.205 B/op [Average]
[info]   (min, avg, max) = (21420.296, 23600.824, 32179.298), stdev = 4795.615
[info]   CI (99.9%): [5134.619, 42067.029] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readCirce:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 83.53% complete, ETA 00:22:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 25841.473 ops/s
[info] # Warmup Iteration   2: 165862.275 ops/s
[info] # Warmup Iteration   3: 165837.025 ops/s
[info] # Warmup Iteration   4: 171740.137 ops/s
[info] # Warmup Iteration   5: 171279.752 ops/s
[info] Iteration   1: 171912.184 ops/s
[info]                  ·gc.alloc.rate:                   738.944 MB/sec
[info]                  ·gc.alloc.rate.norm:              6766.555 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.191 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.961 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6171.502 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 172054.695 ops/s
[info]                  ·gc.alloc.rate:                   743.538 MB/sec
[info]                  ·gc.alloc.rate.norm:              6802.523 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.028 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6166.589 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 172277.917 ops/s
[info]                  ·gc.alloc.rate:                   737.711 MB/sec
[info]                  ·gc.alloc.rate.norm:              6740.017 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.054 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6158.429 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 170003.924 ops/s
[info]                  ·gc.alloc.rate:                   733.552 MB/sec
[info]                  ·gc.alloc.rate.norm:              6791.143 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.193 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.113 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6240.863 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 172343.845 ops/s
[info]                  ·gc.alloc.rate:                   735.766 MB/sec
[info]                  ·gc.alloc.rate.norm:              6719.668 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.380 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.047 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6156.000 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala":
[info]   171718.513 ±(99.9%) 3750.334 ops/s [Average]
[info]   (min, avg, max) = (170003.924, 171718.513, 172343.845), stdev = 973.950
[info]   CI (99.9%): [167968.179, 175468.847] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   737.902 ±(99.9%) 14.456 MB/sec [Average]
[info]   (min, avg, max) = (733.552, 737.902, 743.538), stdev = 3.754
[info]   CI (99.9%): [723.446, 752.358] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   6763.981 ±(99.9%) 132.942 B/op [Average]
[info]   (min, avg, max) = (6719.668, 6763.981, 6802.523), stdev = 34.525
[info]   CI (99.9%): [6631.039, 6896.923] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.017 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.153 ±(99.9%) 0.613 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.153, 0.380), stdev = 0.159
[info]   CI (99.9%): [≈ 0, 0.766] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   674.041 ±(99.9%) 0.210 MB/sec [Average]
[info]   (min, avg, max) = (673.961, 674.041, 674.113), stdev = 0.055
[info]   CI (99.9%): [673.831, 674.251] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   6178.676 ±(99.9%) 135.990 B/op [Average]
[info]   (min, avg, max) = (6156.000, 6178.676, 6240.863), stdev = 35.316
[info]   CI (99.9%): [6042.686, 6314.667] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJacksonScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 83.73% complete, ETA 00:22:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 183640.054 ops/s
[info] # Warmup Iteration   2: 262773.907 ops/s
[info] # Warmup Iteration   3: 265518.790 ops/s
[info] # Warmup Iteration   4: 267233.037 ops/s
[info] # Warmup Iteration   5: 258598.867 ops/s
[info] Iteration   1: 268562.822 ops/s
[info]                  ·gc.alloc.rate:                   998.181 MB/sec
[info]                  ·gc.alloc.rate.norm:              5851.148 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.122 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.944 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7889.666 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 267296.314 ops/s
[info]                  ·gc.alloc.rate:                   974.008 MB/sec
[info]                  ·gc.alloc.rate.norm:              5735.798 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.717 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3961.538 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 268693.376 ops/s
[info]                  ·gc.alloc.rate:                   996.718 MB/sec
[info]                  ·gc.alloc.rate.norm:              5838.998 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.488 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.329 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7881.243 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 268884.042 ops/s
[info]                  ·gc.alloc.rate:                   974.478 MB/sec
[info]                  ·gc.alloc.rate.norm:              5704.850 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.689 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3938.101 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 267921.824 ops/s
[info]                  ·gc.alloc.rate:                   984.779 MB/sec
[info]                  ·gc.alloc.rate.norm:              5786.345 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.245 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.925 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7908.362 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala":
[info]   268271.675 ±(99.9%) 2518.654 ops/s [Average]
[info]   (min, avg, max) = (267296.314, 268271.675, 268884.042), stdev = 654.086
[info]   CI (99.9%): [265753.021, 270790.330] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   985.633 ±(99.9%) 44.767 MB/sec [Average]
[info]   (min, avg, max) = (974.008, 985.633, 998.181), stdev = 11.626
[info]   CI (99.9%): [940.866, 1030.399] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   5783.428 ±(99.9%) 244.490 B/op [Average]
[info]   (min, avg, max) = (5704.850, 5783.428, 5851.148), stdev = 63.493
[info]   CI (99.9%): [5538.938, 6027.918] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.029 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.083), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.171 ±(99.9%) 0.786 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.171, 0.488), stdev = 0.204
[info]   CI (99.9%): [≈ 0, 0.957] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   1076.521 ±(99.9%) 1419.476 MB/sec [Average]
[info]   (min, avg, max) = (672.689, 1076.521, 1345.944), stdev = 368.633
[info]   CI (99.9%): [≈ 0, 2495.997] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   6315.782 ±(99.9%) 8316.838 B/op [Average]
[info]   (min, avg, max) = (3938.101, 6315.782, 7908.362), stdev = 2159.856
[info]   CI (99.9%): [≈ 0, 14632.620] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readJsoniterScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 83.94% complete, ETA 00:21:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 12516.863 ops/s
[info] # Warmup Iteration   2: 63599.364 ops/s
[info] # Warmup Iteration   3: 63603.125 ops/s
[info] # Warmup Iteration   4: 65633.649 ops/s
[info] # Warmup Iteration   5: 65281.541 ops/s
[info] Iteration   1: 65801.671 ops/s
[info]                  ·gc.alloc.rate:                   2554.319 MB/sec
[info]                  ·gc.alloc.rate.norm:              61103.659 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.498 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2705.013 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 64708.523 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 65703.262 ops/s
[info]                  ·gc.alloc.rate:                   2536.647 MB/sec
[info]                  ·gc.alloc.rate.norm:              60765.601 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.499 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2031.534 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 48665.593 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 65660.765 ops/s
[info]                  ·gc.alloc.rate:                   2576.053 MB/sec
[info]                  ·gc.alloc.rate.norm:              61753.026 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.497 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2712.839 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 65032.053 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 65757.077 ops/s
[info]                  ·gc.alloc.rate:                   2594.528 MB/sec
[info]                  ·gc.alloc.rate.norm:              62096.616 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.996 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2716.500 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 65015.857 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 65918.442 ops/s
[info]                  ·gc.alloc.rate:                   2571.571 MB/sec
[info]                  ·gc.alloc.rate.norm:              61400.662 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.988 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2038.644 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 48676.104 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson":
[info]   65768.243 ±(99.9%) 383.017 ops/s [Average]
[info]   (min, avg, max) = (65660.765, 65768.243, 65918.442), stdev = 99.468
[info]   CI (99.9%): [65385.226, 66151.260] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2566.624 ±(99.9%) 84.847 MB/sec [Average]
[info]   (min, avg, max) = (2536.647, 2566.624, 2594.528), stdev = 22.035
[info]   CI (99.9%): [2481.777, 2651.471] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   61423.913 ±(99.9%) 2016.835 B/op [Average]
[info]   (min, avg, max) = (60765.601, 61423.913, 62096.616), stdev = 523.766
[info]   CI (99.9%): [59407.078, 63440.748] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   0.046 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.083), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   1.096 ±(99.9%) 2.496 B/op [Average]
[info]   (min, avg, max) = (0.498, 1.096, 1.988), stdev = 0.648
[info]   CI (99.9%): [≈ 0, 3.592] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   2440.906 ±(99.9%) 1426.627 MB/sec [Average]
[info]   (min, avg, max) = (2031.534, 2440.906, 2716.500), stdev = 370.490
[info]   CI (99.9%): [1014.280, 3867.533] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   58419.626 ±(99.9%) 34271.924 B/op [Average]
[info]   (min, avg, max) = (48665.593, 58419.626, 65032.053), stdev = 8900.310
[info]   CI (99.9%): [24147.702, 92691.550] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readPlayJson:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 84.14% complete, ETA 00:21:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 83653.711 ops/s
[info] # Warmup Iteration   2: 136595.237 ops/s
[info] # Warmup Iteration   3: 142530.216 ops/s
[info] # Warmup Iteration   4: 142535.176 ops/s
[info] # Warmup Iteration   5: 142443.084 ops/s
[info] Iteration   1: 142364.895 ops/s
[info]                  ·gc.alloc.rate:                   1155.980 MB/sec
[info]                  ·gc.alloc.rate.norm:              12780.984 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.230 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1344.126 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 14861.197 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 141022.666 ops/s
[info]                  ·gc.alloc.rate:                   1137.375 MB/sec
[info]                  ·gc.alloc.rate.norm:              12694.309 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.697 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1344.068 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15001.215 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 139399.349 ops/s
[info]                  ·gc.alloc.rate:                   1103.242 MB/sec
[info]                  ·gc.alloc.rate.norm:              12457.222 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.057 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7588.513 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 140735.200 ops/s
[info]                  ·gc.alloc.rate:                   1128.192 MB/sec
[info]                  ·gc.alloc.rate.norm:              12616.957 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.698 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1344.495 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15035.951 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 140421.099 ops/s
[info]                  ·gc.alloc.rate:                   1123.461 MB/sec
[info]                  ·gc.alloc.rate.norm:              12593.349 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.374 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15080.872 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readUPickle":
[info]   140788.642 ±(99.9%) 4132.685 ops/s [Average]
[info]   (min, avg, max) = (139399.349, 140788.642, 142364.895), stdev = 1073.245
[info]   CI (99.9%): [136655.957, 144921.327] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readUPickle:·gc.alloc.rate":
[info]   1129.650 ±(99.9%) 74.338 MB/sec [Average]
[info]   (min, avg, max) = (1103.242, 1129.650, 1155.980), stdev = 19.305
[info]   CI (99.9%): [1055.312, 1203.988] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readUPickle:·gc.alloc.rate.norm":
[info]   12628.564 ±(99.9%) 464.826 B/op [Average]
[info]   (min, avg, max) = (12457.222, 12628.564, 12780.984), stdev = 120.714
[info]   CI (99.9%): [12163.739, 13093.390] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readUPickle:·gc.churn.PS_Eden_Space":
[info]   0.029 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.151] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   0.325 ±(99.9%) 1.359 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.325, 0.698), stdev = 0.353
[info]   CI (99.9%): [≈ 0, 1.684] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space":
[info]   1210.024 ±(99.9%) 1158.016 MB/sec [Average]
[info]   (min, avg, max) = (672.057, 1210.024, 1345.374), stdev = 300.733
[info]   CI (99.9%): [52.008, 2368.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   13513.549 ±(99.9%) 12758.010 B/op [Average]
[info]   (min, avg, max) = (7588.513, 13513.549, 15080.872), stdev = 3313.215
[info]   CI (99.9%): [755.539, 26271.560] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readUPickle:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.readUPickle:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 84.34% complete, ETA 00:21:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 83048.843 ops/s
[info] # Warmup Iteration   2: 182210.683 ops/s
[info] # Warmup Iteration   3: 182669.989 ops/s
[info] # Warmup Iteration   4: 183966.442 ops/s
[info] # Warmup Iteration   5: 187478.142 ops/s
[info] Iteration   1: 187273.750 ops/s
[info]                  ·gc.alloc.rate:                   909.708 MB/sec
[info]                  ·gc.alloc.rate.norm:              7644.839 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.700 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.673 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11333.733 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 186592.769 ops/s
[info]                  ·gc.alloc.rate:                   894.956 MB/sec
[info]                  ·gc.alloc.rate.norm:              7550.010 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.340 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5688.858 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 187058.340 ops/s
[info]                  ·gc.alloc.rate:                   903.922 MB/sec
[info]                  ·gc.alloc.rate.norm:              7605.998 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.739 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5677.552 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 187444.727 ops/s
[info]                  ·gc.alloc.rate:                   899.087 MB/sec
[info]                  ·gc.alloc.rate.norm:              7549.866 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.350 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.742 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5665.983 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 186538.669 ops/s
[info]                  ·gc.alloc.rate:                   912.721 MB/sec
[info]                  ·gc.alloc.rate.norm:              7701.391 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.351 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.783 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11397.687 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce":
[info]   186981.651 ±(99.9%) 1555.947 ops/s [Average]
[info]   (min, avg, max) = (186538.669, 186981.651, 187444.727), stdev = 404.075
[info]   CI (99.9%): [185425.704, 188537.598] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:·gc.alloc.rate":
[info]   904.079 ±(99.9%) 28.201 MB/sec [Average]
[info]   (min, avg, max) = (894.956, 904.079, 912.721), stdev = 7.324
[info]   CI (99.9%): [875.878, 932.280] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   7610.421 ±(99.9%) 249.522 B/op [Average]
[info]   (min, avg, max) = (7549.866, 7610.421, 7701.391), stdev = 64.800
[info]   CI (99.9%): [7360.899, 7859.943] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   0.033 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.083), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.167] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.280 ±(99.9%) 1.127 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.280, 0.700), stdev = 0.293
[info]   CI (99.9%): [≈ 0, 1.408] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   944.656 ±(99.9%) 1423.890 MB/sec [Average]
[info]   (min, avg, max) = (674.340, 944.656, 1350.783), stdev = 369.780
[info]   CI (99.9%): [≈ 0, 2368.545] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   7952.763 ±(99.9%) 11997.347 B/op [Average]
[info]   (min, avg, max) = (5665.983, 7952.763, 11397.687), stdev = 3115.673
[info]   CI (99.9%): [≈ 0, 19950.110] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeCirce:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 84.54% complete, ETA 00:20:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 178613.723 ops/s
[info] # Warmup Iteration   2: 456852.830 ops/s
[info] # Warmup Iteration   3: 471553.396 ops/s
[info] # Warmup Iteration   4: 477347.107 ops/s
[info] # Warmup Iteration   5: 453360.124 ops/s
[info] Iteration   1: 474427.026 ops/s
[info]                  ·gc.alloc.rate:      384.097 MB/sec
[info]                  ·gc.alloc.rate.norm: 1274.351 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 473716.180 ops/s
[info]                  ·gc.alloc.rate:                   375.099 MB/sec
[info]                  ·gc.alloc.rate.norm:              1246.545 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.951 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2239.705 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 475062.779 ops/s
[info]                  ·gc.alloc.rate:                   395.928 MB/sec
[info]                  ·gc.alloc.rate.norm:              1311.849 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1.103 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3.655 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.004 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2233.215 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 476066.480 ops/s
[info]                  ·gc.alloc.rate:      375.054 MB/sec
[info]                  ·gc.alloc.rate.norm: 1240.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 476574.092 ops/s
[info]                  ·gc.alloc.rate:                   398.857 MB/sec
[info]                  ·gc.alloc.rate.norm:              1317.406 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.048 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2226.346 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala":
[info]   475169.311 ±(99.9%) 4495.636 ops/s [Average]
[info]   (min, avg, max) = (473716.180, 475169.311, 476574.092), stdev = 1167.502
[info]   CI (99.9%): [470673.675, 479664.948] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   385.807 ±(99.9%) 43.307 MB/sec [Average]
[info]   (min, avg, max) = (375.054, 385.807, 398.857), stdev = 11.247
[info]   CI (99.9%): [342.499, 429.114] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1278.030 ±(99.9%) 138.104 B/op [Average]
[info]   (min, avg, max) = (1240.001, 1278.030, 1317.406), stdev = 35.865
[info]   CI (99.9%): [1139.927, 1416.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.221 ±(99.9%) 1.900 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.221, 1.103), stdev = 0.493
[info]   CI (99.9%): [≈ 0, 2.120] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.731 ±(99.9%) 6.294 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.731, 3.655), stdev = 1.635
[info]   CI (99.9%): [≈ 0, 7.025] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   404.401 ±(99.9%) 1421.525 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 404.401, 674.048), stdev = 369.166
[info]   CI (99.9%): [≈ 0, 1825.926] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1339.853 ±(99.9%) 4709.808 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1339.853, 2239.705), stdev = 1223.122
[info]   CI (99.9%): [≈ 0, 6049.661] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJacksonScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 1.095
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 84.74% complete, ETA 00:20:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 432017.245 ops/s
[info] # Warmup Iteration   2: 559474.819 ops/s
[info] # Warmup Iteration   3: 584649.717 ops/s
[info] # Warmup Iteration   4: 588242.959 ops/s
[info] # Warmup Iteration   5: 581231.570 ops/s
[info] Iteration   1: 587553.324 ops/s
[info]                  ·gc.alloc.rate:      316.508 MB/sec
[info]                  ·gc.alloc.rate.norm: 848.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 584003.226 ops/s
[info]                  ·gc.alloc.rate:                   327.798 MB/sec
[info]                  ·gc.alloc.rate.norm:              883.573 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      511.494 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1378.723 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 584932.670 ops/s
[info]                  ·gc.alloc.rate:      315.120 MB/sec
[info]                  ·gc.alloc.rate.norm: 848.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 583787.881 ops/s
[info]                  ·gc.alloc.rate:                   330.617 MB/sec
[info]                  ·gc.alloc.rate.norm:              891.447 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.004 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1817.324 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 588660.477 ops/s
[info]                  ·gc.alloc.rate:      317.113 MB/sec
[info]                  ·gc.alloc.rate.norm: 848.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala":
[info]   585787.516 ±(99.9%) 8454.986 ops/s [Average]
[info]   (min, avg, max) = (583787.881, 585787.516, 588660.477), stdev = 2195.733
[info]   CI (99.9%): [577332.529, 594242.502] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   321.431 ±(99.9%) 27.744 MB/sec [Average]
[info]   (min, avg, max) = (315.120, 321.431, 330.617), stdev = 7.205
[info]   CI (99.9%): [293.687, 349.175] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   863.804 ±(99.9%) 84.015 B/op [Average]
[info]   (min, avg, max) = (848.001, 863.804, 891.447), stdev = 21.818
[info]   CI (99.9%): [779.790, 947.819] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   237.100 ±(99.9%) 1269.584 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 237.100, 674.004), stdev = 329.707
[info]   CI (99.9%): [≈ 0, 1506.683] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   639.209 ±(99.9%) 3422.852 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 639.209, 1817.324), stdev = 888.904
[info]   CI (99.9%): [≈ 0, 4062.061] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.count":
[info]   2.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.000), stdev = 0.548
[info]   CI (99.9%): [2.000, 2.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 3.000), stdev = 1.414
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 84.94% complete, ETA 00:20:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 501033.807 ops/s
[info] # Warmup Iteration   2: 605449.914 ops/s
[info] # Warmup Iteration   3: 621826.951 ops/s
[info] # Warmup Iteration   4: 621604.681 ops/s
[info] # Warmup Iteration   5: 614581.990 ops/s
[info] Iteration   1: 620050.708 ops/s
[info]                  ·gc.alloc.rate:      6.304 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 615486.852 ops/s
[info]                  ·gc.alloc.rate:      6.319 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.160 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 614132.489 ops/s
[info]                  ·gc.alloc.rate:      6.243 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 619099.034 ops/s
[info]                  ·gc.alloc.rate:      6.294 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 620113.913 ops/s
[info]                  ·gc.alloc.rate:      6.305 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc":
[info]   617776.599 ±(99.9%) 10703.461 ops/s [Average]
[info]   (min, avg, max) = (614132.489, 617776.599, 620113.913), stdev = 2779.655
[info]   CI (99.9%): [607073.139, 628480.060] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   6.293 ±(99.9%) 0.112 MB/sec [Average]
[info]   (min, avg, max) = (6.243, 6.293, 6.319), stdev = 0.029
[info]   CI (99.9%): [6.181, 6.405] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   16.033 ±(99.9%) 0.274 B/op [Average]
[info]   (min, avg, max) = (16.001, 16.033, 16.160), stdev = 0.071
[info]   CI (99.9%): [15.758, 16.307] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 85.14% complete, ETA 00:20:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 13762.901 ops/s
[info] # Warmup Iteration   2: 32759.331 ops/s
[info] # Warmup Iteration   3: 33834.767 ops/s
[info] # Warmup Iteration   4: 33120.130 ops/s
[info] # Warmup Iteration   5: 34181.295 ops/s
[info] Iteration   1: 34133.556 ops/s
[info]                  ·gc.alloc.rate:                   1692.853 MB/sec
[info]                  ·gc.alloc.rate.norm:              78056.712 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3.839 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2024.972 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 93370.564 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 34190.873 ops/s
[info]                  ·gc.alloc.rate:                   1700.959 MB/sec
[info]                  ·gc.alloc.rate.norm:              78305.844 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.958 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1351.058 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 62197.685 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 34190.334 ops/s
[info]                  ·gc.alloc.rate:                   1701.345 MB/sec
[info]                  ·gc.alloc.rate.norm:              78315.709 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3.833 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2028.742 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 93386.309 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 34229.881 ops/s
[info]                  ·gc.alloc.rate:                   1689.473 MB/sec
[info]                  ·gc.alloc.rate.norm:              77700.170 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.871 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1353.225 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 62235.846 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 34167.560 ops/s
[info]                  ·gc.alloc.rate:                   1686.501 MB/sec
[info]                  ·gc.alloc.rate.norm:              77698.072 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1354.663 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 62410.124 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson":
[info]   34182.441 ±(99.9%) 136.074 ops/s [Average]
[info]   (min, avg, max) = (34133.556, 34182.441, 34229.881), stdev = 35.338
[info]   CI (99.9%): [34046.367, 34318.515] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1694.226 ±(99.9%) 25.843 MB/sec [Average]
[info]   (min, avg, max) = (1686.501, 1694.226, 1701.345), stdev = 6.711
[info]   CI (99.9%): [1668.383, 1720.069] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   78015.301 ±(99.9%) 1181.082 B/op [Average]
[info]   (min, avg, max) = (77698.072, 78015.301, 78315.709), stdev = 306.723
[info]   CI (99.9%): [76834.219, 79196.383] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   0.050 ±(99.9%) 0.146 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.083), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.196] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   2.300 ±(99.9%) 6.707 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.300, 3.839), stdev = 1.742
[info]   CI (99.9%): [≈ 0, 9.008] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   1622.532 ±(99.9%) 1421.278 MB/sec [Average]
[info]   (min, avg, max) = (1351.058, 1622.532, 2028.742), stdev = 369.101
[info]   CI (99.9%): [201.254, 3043.810] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   74720.105 ±(99.9%) 65587.390 B/op [Average]
[info]   (min, avg, max) = (62197.685, 74720.105, 93386.309), stdev = 17032.837
[info]   CI (99.9%): [9132.716, 140307.495] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writePlayJson:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 85.34% complete, ETA 00:19:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 77390.126 ops/s
[info] # Warmup Iteration   2: 123574.666 ops/s
[info] # Warmup Iteration   3: 125706.078 ops/s
[info] # Warmup Iteration   4: 125714.192 ops/s
[info] # Warmup Iteration   5: 125800.487 ops/s
[info] Iteration   1: 125627.695 ops/s
[info]                  ·gc.alloc.rate:                   846.527 MB/sec
[info]                  ·gc.alloc.rate.norm:              10607.222 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.043 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.055 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16891.517 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 123838.177 ops/s
[info]                  ·gc.alloc.rate:                   820.031 MB/sec
[info]                  ·gc.alloc.rate.norm:              10419.309 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.626 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8559.078 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 125983.161 ops/s
[info]                  ·gc.alloc.rate:                   833.090 MB/sec
[info]                  ·gc.alloc.rate.norm:              10409.791 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.520 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.323 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8413.441 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 122063.585 ops/s
[info]                  ·gc.alloc.rate:                   807.274 MB/sec
[info]                  ·gc.alloc.rate.norm:              10406.175 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.659 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8683.806 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 125252.418 ops/s
[info]                  ·gc.alloc.rate:                   824.210 MB/sec
[info]                  ·gc.alloc.rate.norm:              10357.245 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.379 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8461.860 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeUPickle":
[info]   124553.007 ±(99.9%) 6208.282 ops/s [Average]
[info]   (min, avg, max) = (122063.585, 124553.007, 125983.161), stdev = 1612.271
[info]   CI (99.9%): [118344.725, 130761.289] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeUPickle:·gc.alloc.rate":
[info]   826.226 ±(99.9%) 56.489 MB/sec [Average]
[info]   (min, avg, max) = (807.274, 826.226, 846.527), stdev = 14.670
[info]   CI (99.9%): [769.737, 882.715] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeUPickle:·gc.alloc.rate.norm":
[info]   10439.948 ±(99.9%) 371.824 B/op [Average]
[info]   (min, avg, max) = (10357.245, 10439.948, 10607.222), stdev = 96.562
[info]   CI (99.9%): [10068.124, 10811.773] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space":
[info]   0.025 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.083), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   0.313 ±(99.9%) 1.796 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.313, 1.043), stdev = 0.466
[info]   CI (99.9%): [≈ 0, 2.108] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space":
[info]   808.408 ±(99.9%) 1161.631 MB/sec [Average]
[info]   (min, avg, max) = (673.323, 808.408, 1348.055), stdev = 301.672
[info]   CI (99.9%): [≈ 0, 1970.039] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   10201.941 ±(99.9%) 14405.318 B/op [Average]
[info]   (min, avg, max) = (8413.441, 10201.941, 16891.517), stdev = 3741.015
[info]   CI (99.9%): [≈ 0, 24607.258] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeUPickle:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.MutableSetOfIntsBenchmark.writeUPickle:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 85.54% complete, ETA 00:19:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 15558.648 ops/s
[info] # Warmup Iteration   2: 62289.405 ops/s
[info] # Warmup Iteration   3: 63252.878 ops/s
[info] # Warmup Iteration   4: 64629.279 ops/s
[info] # Warmup Iteration   5: 65814.566 ops/s
[info] Iteration   1: 65314.671 ops/s
[info]                  ·gc.alloc.rate:                   2632.218 MB/sec
[info]                  ·gc.alloc.rate.norm:              63441.873 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.006 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2707.615 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 65259.104 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 65421.827 ops/s
[info]                  ·gc.alloc.rate:                   2636.431 MB/sec
[info]                  ·gc.alloc.rate.norm:              63436.798 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.502 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2711.644 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 65246.545 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 64382.799 ops/s
[info]                  ·gc.alloc.rate:                   2629.184 MB/sec
[info]                  ·gc.alloc.rate.norm:              64256.659 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.509 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2715.761 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 66372.578 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 63669.732 ops/s
[info]                  ·gc.alloc.rate:                   2563.980 MB/sec
[info]                  ·gc.alloc.rate.norm:              63383.763 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.029 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2037.873 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 50377.951 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 65363.025 ops/s
[info]                  ·gc.alloc.rate:                   2660.809 MB/sec
[info]                  ·gc.alloc.rate.norm:              64078.413 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.501 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2719.336 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 65487.883 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.readCirce":
[info]   64830.411 ±(99.9%) 2992.306 ops/s [Average]
[info]   (min, avg, max) = (63669.732, 64830.411, 65421.827), stdev = 777.092
[info]   CI (99.9%): [61838.105, 67822.717] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.readCirce:·gc.alloc.rate":
[info]   2624.524 ±(99.9%) 138.902 MB/sec [Average]
[info]   (min, avg, max) = (2563.980, 2624.524, 2660.809), stdev = 36.072
[info]   CI (99.9%): [2485.622, 2763.427] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   63719.501 ±(99.9%) 1595.899 B/op [Average]
[info]   (min, avg, max) = (63383.763, 63719.501, 64256.659), stdev = 414.450
[info]   CI (99.9%): [62123.602, 65315.400] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   0.046 ±(99.9%) 0.104 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.083), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1.110 ±(99.9%) 2.507 B/op [Average]
[info]   (min, avg, max) = (0.501, 1.110, 2.006), stdev = 0.651
[info]   CI (99.9%): [≈ 0, 3.617] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   2578.446 ±(99.9%) 1163.747 MB/sec [Average]
[info]   (min, avg, max) = (2037.873, 2578.446, 2719.336), stdev = 302.221
[info]   CI (99.9%): [1414.699, 3742.193] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   62548.812 ±(99.9%) 26258.783 B/op [Average]
[info]   (min, avg, max) = (50377.951, 62548.812, 66372.578), stdev = 6819.322
[info]   CI (99.9%): [36290.029, 88807.595] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.readCirce:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.readCirce:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.600, 4.000), stdev = 0.894
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 85.74% complete, ETA 00:19:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 47387.147 ops/s
[info] # Warmup Iteration   2: 122935.376 ops/s
[info] # Warmup Iteration   3: 128031.037 ops/s
[info] # Warmup Iteration   4: 128514.911 ops/s
[info] # Warmup Iteration   5: 128965.848 ops/s
[info] Iteration   1: 131733.022 ops/s
[info]                  ·gc.alloc.rate:                   1736.988 MB/sec
[info]                  ·gc.alloc.rate.norm:              20756.281 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.995 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2024.683 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 24194.112 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 131492.090 ops/s
[info]                  ·gc.alloc.rate:                   1726.125 MB/sec
[info]                  ·gc.alloc.rate.norm:              20663.050 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.249 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1351.069 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16173.337 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 131822.999 ops/s
[info]                  ·gc.alloc.rate:                   1743.644 MB/sec
[info]                  ·gc.alloc.rate.norm:              20817.148 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.746 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2028.763 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 24221.155 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 131478.137 ops/s
[info]                  ·gc.alloc.rate:                   1739.360 MB/sec
[info]                  ·gc.alloc.rate.norm:              20818.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.249 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1353.678 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16201.859 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 131016.117 ops/s
[info]                  ·gc.alloc.rate:                   1746.337 MB/sec
[info]                  ·gc.alloc.rate.norm:              20982.936 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.250 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2032.316 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 24419.080 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.readJacksonScala":
[info]   131508.473 ±(99.9%) 1206.905 ops/s [Average]
[info]   (min, avg, max) = (131016.117, 131508.473, 131822.999), stdev = 313.429
[info]   CI (99.9%): [130301.568, 132715.378] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1738.491 ±(99.9%) 30.077 MB/sec [Average]
[info]   (min, avg, max) = (1726.125, 1738.491, 1746.337), stdev = 7.811
[info]   CI (99.9%): [1708.414, 1768.568] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   20807.484 ±(99.9%) 449.349 B/op [Average]
[info]   (min, avg, max) = (20663.050, 20807.484, 20982.936), stdev = 116.694
[info]   CI (99.9%): [20358.135, 21256.832] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.042 ±(99.9%) 0.113 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.083), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.498 ±(99.9%) 1.352 B/op [Average]
[info]   (min, avg, max) = (0.249, 0.498, 0.995), stdev = 0.351
[info]   CI (99.9%): [≈ 0, 1.850] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1758.102 ±(99.9%) 1426.235 MB/sec [Average]
[info]   (min, avg, max) = (1351.069, 1758.102, 2032.316), stdev = 370.389
[info]   CI (99.9%): [331.867, 3184.336] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   21041.908 ±(99.9%) 17066.907 B/op [Average]
[info]   (min, avg, max) = (16173.337, 21041.908, 24419.080), stdev = 4432.222
[info]   CI (99.9%): [3975.001, 38108.816] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.readJacksonScala:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.readJacksonScala:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 85.94% complete, ETA 00:19:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 501054.888 ops/s
[info] # Warmup Iteration   2: 624845.783 ops/s
[info] # Warmup Iteration   3: 637103.156 ops/s
[info] # Warmup Iteration   4: 641577.490 ops/s
[info] # Warmup Iteration   5: 636811.865 ops/s
[info] Iteration   1: 639105.409 ops/s
[info]                  ·gc.alloc.rate:                   1697.750 MB/sec
[info]                  ·gc.alloc.rate.norm:              4181.892 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.205 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.929 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3315.288 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 636543.980 ops/s
[info]                  ·gc.alloc.rate:                   1741.712 MB/sec
[info]                  ·gc.alloc.rate.norm:              4306.788 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.206 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2020.940 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4997.243 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 642137.970 ops/s
[info]                  ·gc.alloc.rate:                   1718.787 MB/sec
[info]                  ·gc.alloc.rate.norm:              4213.468 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.153 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.704 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3306.240 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 640760.141 ops/s
[info]                  ·gc.alloc.rate:                   1725.986 MB/sec
[info]                  ·gc.alloc.rate.norm:              4239.805 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2025.745 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4976.149 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 643478.983 ops/s
[info]                  ·gc.alloc.rate:                   1734.543 MB/sec
[info]                  ·gc.alloc.rate.norm:              4243.196 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.102 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1351.966 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3307.302 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.readJsoniterScala":
[info]   640405.297 ±(99.9%) 10399.429 ops/s [Average]
[info]   (min, avg, max) = (636543.980, 640405.297, 643478.983), stdev = 2700.699
[info]   CI (99.9%): [630005.867, 650804.726] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   1723.755 ±(99.9%) 65.142 MB/sec [Average]
[info]   (min, avg, max) = (1697.750, 1723.755, 1741.712), stdev = 16.917
[info]   CI (99.9%): [1658.613, 1788.898] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   4237.030 ±(99.9%) 177.581 B/op [Average]
[info]   (min, avg, max) = (4181.892, 4237.030, 4306.788), stdev = 46.117
[info]   CI (99.9%): [4059.449, 4414.611] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.054 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.083), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.188] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.133 ±(99.9%) 0.331 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.133, 0.206), stdev = 0.086
[info]   CI (99.9%): [≈ 0, 0.464] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   1618.657 ±(99.9%) 1422.565 MB/sec [Average]
[info]   (min, avg, max) = (1345.929, 1618.657, 2025.745), stdev = 369.436
[info]   CI (99.9%): [196.092, 3041.222] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   3980.444 ±(99.9%) 3537.258 B/op [Average]
[info]   (min, avg, max) = (3306.240, 3980.444, 4997.243), stdev = 918.615
[info]   CI (99.9%): [443.186, 7517.703] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.readJsoniterScala:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.readJsoniterScala:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.200, 3.000), stdev = 0.837
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 86.14% complete, ETA 00:18:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 751.563 ops/s
[info] # Warmup Iteration   2: 6666.063 ops/s
[info] # Warmup Iteration   3: 15587.913 ops/s
[info] # Warmup Iteration   4: 18472.918 ops/s
[info] # Warmup Iteration   5: 19680.566 ops/s
[info] Iteration   1: 19762.387 ops/s
[info]                  ·gc.alloc.rate:                   2612.659 MB/sec
[info]                  ·gc.alloc.rate.norm:              208035.496 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6.631 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2700.107 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 214998.661 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 19773.435 ops/s
[info]                  ·gc.alloc.rate:                   2603.915 MB/sec
[info]                  ·gc.alloc.rate.norm:              207245.618 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.657 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2704.291 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 215234.579 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 18822.965 ops/s
[info]                  ·gc.alloc.rate:                   2616.026 MB/sec
[info]                  ·gc.alloc.rate.norm:              218763.955 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10.443 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2707.834 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 226441.396 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 19692.209 ops/s
[info]                  ·gc.alloc.rate:                   2592.671 MB/sec
[info]                  ·gc.alloc.rate.norm:              207239.400 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6.655 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2033.404 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 162535.669 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 19748.640 ops/s
[info]                  ·gc.alloc.rate:                   2601.552 MB/sec
[info]                  ·gc.alloc.rate.norm:              207367.037 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3.318 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2713.996 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 216329.850 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.readPlayJson":
[info]   19559.927 ±(99.9%) 1590.926 ops/s [Average]
[info]   (min, avg, max) = (18822.965, 19559.927, 19773.435), stdev = 413.159
[info]   CI (99.9%): [17969.001, 21150.854] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2605.364 ±(99.9%) 35.743 MB/sec [Average]
[info]   (min, avg, max) = (2592.671, 2605.364, 2616.026), stdev = 9.282
[info]   CI (99.9%): [2569.622, 2641.107] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   209730.301 ±(99.9%) 19486.934 B/op [Average]
[info]   (min, avg, max) = (207239.400, 209730.301, 218763.955), stdev = 5060.695
[info]   CI (99.9%): [190243.368, 229217.235] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   0.071 ±(99.9%) 0.156 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.071, 0.125), stdev = 0.041
[info]   CI (99.9%): [≈ 0, 0.227] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   5.741 ±(99.9%) 13.099 B/op [Average]
[info]   (min, avg, max) = (1.657, 5.741, 10.443), stdev = 3.402
[info]   CI (99.9%): [≈ 0, 18.840] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   2571.926 ±(99.9%) 1159.376 MB/sec [Average]
[info]   (min, avg, max) = (2033.404, 2571.926, 2713.996), stdev = 301.086
[info]   CI (99.9%): [1412.551, 3731.302] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   207108.031 ±(99.9%) 97677.018 B/op [Average]
[info]   (min, avg, max) = (162535.669, 207108.031, 226441.396), stdev = 25366.411
[info]   CI (99.9%): [109431.013, 304785.049] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.readPlayJson:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.readPlayJson:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.400, 6.000), stdev = 1.140
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 86.35% complete, ETA 00:18:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 31261.039 ops/s
[info] # Warmup Iteration   2: 71937.288 ops/s
[info] # Warmup Iteration   3: 73443.482 ops/s
[info] # Warmup Iteration   4: 74408.619 ops/s
[info] # Warmup Iteration   5: 74972.306 ops/s
[info] Iteration   1: 74105.968 ops/s
[info]                  ·gc.alloc.rate:                   3025.823 MB/sec
[info]                  ·gc.alloc.rate.norm:              64270.170 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.211 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2710.955 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 57582.194 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 74819.106 ops/s
[info]                  ·gc.alloc.rate:                   3110.755 MB/sec
[info]                  ·gc.alloc.rate.norm:              65437.681 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.189 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3393.866 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 71393.184 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 74604.717 ops/s
[info]                  ·gc.alloc.rate:                   3082.195 MB/sec
[info]                  ·gc.alloc.rate.norm:              65031.325 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.196 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2718.214 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 57351.685 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 74343.407 ops/s
[info]                  ·gc.alloc.rate:                   3073.614 MB/sec
[info]                  ·gc.alloc.rate.norm:              65058.430 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.763 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2720.917 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 57592.990 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 74262.407 ops/s
[info]                  ·gc.alloc.rate:                   3096.642 MB/sec
[info]                  ·gc.alloc.rate.norm:              65634.367 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.647 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3402.262 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 72112.100 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writeCirce":
[info]   74427.121 ±(99.9%) 1093.323 ops/s [Average]
[info]   (min, avg, max) = (74105.968, 74427.121, 74819.106), stdev = 283.932
[info]   CI (99.9%): [73333.798, 75520.444] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writeCirce:·gc.alloc.rate":
[info]   3077.806 ±(99.9%) 124.471 MB/sec [Average]
[info]   (min, avg, max) = (3025.823, 3077.806, 3110.755), stdev = 32.325
[info]   CI (99.9%): [2953.335, 3202.276] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   65086.395 ±(99.9%) 2013.516 B/op [Average]
[info]   (min, avg, max) = (64270.170, 65086.395, 65634.367), stdev = 522.904
[info]   CI (99.9%): [63072.878, 67099.911] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   0.104 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (0.083, 0.104, 0.125), stdev = 0.015
[info]   CI (99.9%): [0.047, 0.161] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   2.201 ±(99.9%) 1.204 B/op [Average]
[info]   (min, avg, max) = (1.763, 2.201, 2.647), stdev = 0.313
[info]   CI (99.9%): [0.997, 3.405] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   2989.243 ±(99.9%) 1437.179 MB/sec [Average]
[info]   (min, avg, max) = (2710.955, 2989.243, 3402.262), stdev = 373.231
[info]   CI (99.9%): [1552.064, 4426.421] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   63206.431 ±(99.9%) 30059.367 B/op [Average]
[info]   (min, avg, max) = (57351.685, 63206.431, 72112.100), stdev = 7806.322
[info]   CI (99.9%): [33147.064, 93265.797] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writeCirce:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writeCirce:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 5.000), stdev = 0.837
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 86.55% complete, ETA 00:18:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
[info] WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/tmp/sbt_c0b5d35/target/1bdf7fe1/jackson-module-afterburner-2.9.5.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int)
[info] WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
[info] WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
[info] WARNING: All illegal access operations will be denied in a future release
[info] 113836.899 ops/s
[info] # Warmup Iteration   2: 273395.096 ops/s
[info] # Warmup Iteration   3: 281809.731 ops/s
[info] # Warmup Iteration   4: 283611.245 ops/s
[info] # Warmup Iteration   5: 282781.510 ops/s
[info] Iteration   1: 283866.148 ops/s
[info]                  ·gc.alloc.rate:                   1362.745 MB/sec
[info]                  ·gc.alloc.rate.norm:              7556.415 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.144 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7475.451 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 286408.758 ops/s
[info]                  ·gc.alloc.rate:                   1366.475 MB/sec
[info]                  ·gc.alloc.rate.norm:              7508.363 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.343 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.069 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7412.721 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 285028.685 ops/s
[info]                  ·gc.alloc.rate:                   1385.538 MB/sec
[info]                  ·gc.alloc.rate.norm:              7650.290 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.672 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7452.257 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 288117.369 ops/s
[info]                  ·gc.alloc.rate:                   1373.197 MB/sec
[info]                  ·gc.alloc.rate.norm:              7502.042 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.682 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.794 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7379.648 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 287487.335 ops/s
[info]                  ·gc.alloc.rate:                   1364.113 MB/sec
[info]                  ·gc.alloc.rate.norm:              7469.522 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.114 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1351.952 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7402.931 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writeJacksonScala":
[info]   286181.659 ±(99.9%) 6723.284 ops/s [Average]
[info]   (min, avg, max) = (283866.148, 286181.659, 288117.369), stdev = 1746.015
[info]   CI (99.9%): [279458.375, 292904.943] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1370.414 ±(99.9%) 36.045 MB/sec [Average]
[info]   (min, avg, max) = (1362.745, 1370.414, 1385.538), stdev = 9.361
[info]   CI (99.9%): [1334.369, 1406.459] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   7537.327 ±(99.9%) 270.961 B/op [Average]
[info]   (min, avg, max) = (7469.522, 7537.327, 7650.290), stdev = 70.368
[info]   CI (99.9%): [7266.366, 7808.288] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.042 ±(99.9%) 0.204 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.125), stdev = 0.053
[info]   CI (99.9%): [≈ 0, 0.246] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.228 ±(99.9%) 1.117 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.228, 0.682), stdev = 0.290
[info]   CI (99.9%): [≈ 0, 1.345] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1349.926 ±(99.9%) 5.722 MB/sec [Average]
[info]   (min, avg, max) = (1348.144, 1349.926, 1351.952), stdev = 1.486
[info]   CI (99.9%): [1344.204, 1355.649] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   7424.602 ±(99.9%) 148.911 B/op [Average]
[info]   (min, avg, max) = (7379.648, 7424.602, 7475.451), stdev = 38.672
[info]   CI (99.9%): [7275.691, 7573.513] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writeJacksonScala:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writeJacksonScala:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 86.75% complete, ETA 00:17:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 883640.019 ops/s
[info] # Warmup Iteration   2: 1243001.900 ops/s
[info] # Warmup Iteration   3: 1168917.094 ops/s
[info] # Warmup Iteration   4: 1214557.318 ops/s
[info] # Warmup Iteration   5: 1243645.711 ops/s
[info] Iteration   1: 1239885.625 ops/s
[info]                  ·gc.alloc.rate:                   641.360 MB/sec
[info]                  ·gc.alloc.rate.norm:              814.308 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2.706 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3.435 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.973 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 855.715 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 1239696.391 ops/s
[info]                  ·gc.alloc.rate:                   645.652 MB/sec
[info]                  ·gc.alloc.rate.norm:              819.725 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.079 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.434 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 854.997 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   3: 1231939.410 ops/s
[info]                  ·gc.alloc.rate:                   635.473 MB/sec
[info]                  ·gc.alloc.rate.norm:              811.897 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.390 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 860.342 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 1208292.965 ops/s
[info]                  ·gc.alloc.rate:                   622.562 MB/sec
[info]                  ·gc.alloc.rate.norm:              811.022 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.054 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.715 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 876.358 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 1208294.169 ops/s
[info]                  ·gc.alloc.rate:                   632.528 MB/sec
[info]                  ·gc.alloc.rate.norm:              823.800 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.860 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 876.328 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writeJsoniterScala":
[info]   1225621.712 ±(99.9%) 62149.391 ops/s [Average]
[info]   (min, avg, max) = (1208292.965, 1225621.712, 1239885.625), stdev = 16140.000
[info]   CI (99.9%): [1163472.321, 1287771.103] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   635.515 ±(99.9%) 34.097 MB/sec [Average]
[info]   (min, avg, max) = (622.562, 635.515, 645.652), stdev = 8.855
[info]   CI (99.9%): [601.418, 669.612] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   816.150 ±(99.9%) 21.009 B/op [Average]
[info]   (min, avg, max) = (811.022, 816.150, 823.800), stdev = 5.456
[info]   CI (99.9%): [795.142, 837.159] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.562 ±(99.9%) 4.615 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.562, 2.706), stdev = 1.199
[info]   CI (99.9%): [≈ 0, 5.177] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.714 ±(99.9%) 5.860 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.714, 3.435), stdev = 1.522
[info]   CI (99.9%): [≈ 0, 6.573] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   673.275 ±(99.9%) 1.936 MB/sec [Average]
[info]   (min, avg, max) = (672.715, 673.275, 673.973), stdev = 0.503
[info]   CI (99.9%): [671.338, 675.211] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   864.748 ±(99.9%) 41.516 B/op [Average]
[info]   (min, avg, max) = (854.997, 864.748, 876.358), stdev = 10.782
[info]   CI (99.9%): [823.231, 906.264] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writeJsoniterScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writeJsoniterScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 3.000), stdev = 1.304
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 86.95% complete, ETA 00:17:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1071492.090 ops/s
[info] # Warmup Iteration   2: 1269134.815 ops/s
[info] # Warmup Iteration   3: 1329923.623 ops/s
[info] # Warmup Iteration   4: 1328194.216 ops/s
[info] # Warmup Iteration   5: 1331614.681 ops/s
[info] Iteration   1: 1327093.959 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1331786.179 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1331867.361 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1329390.653 ops/s
[info]                  ·gc.alloc.rate:      0.170 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.202 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1327930.655 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writeJsoniterScalaPrealloc":
[info]   1329613.761 ±(99.9%) 8398.938 ops/s [Average]
[info]   (min, avg, max) = (1327093.959, 1329613.761, 1331867.361), stdev = 2181.177
[info]   CI (99.9%): [1321214.824, 1338012.699] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.034 ±(99.9%) 0.293 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.034, 0.170), stdev = 0.076
[info]   CI (99.9%): [≈ 0, 0.327] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.041 ±(99.9%) 0.347 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.041, 0.202), stdev = 0.090
[info]   CI (99.9%): [≈ 0, 0.387] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 87.15% complete, ETA 00:17:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2908.181 ops/s
[info] # Warmup Iteration   2: 31130.621 ops/s
[info] # Warmup Iteration   3: 45985.031 ops/s
[info] # Warmup Iteration   4: 44984.972 ops/s
[info] # Warmup Iteration   5: 45234.055 ops/s
[info] Iteration   1: 46964.007 ops/s
[info]                  ·gc.alloc.rate:                   2558.722 MB/sec
[info]                  ·gc.alloc.rate.norm:              85767.772 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.790 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2701.815 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 90564.214 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 45690.643 ops/s
[info]                  ·gc.alloc.rate:                   2459.493 MB/sec
[info]                  ·gc.alloc.rate.norm:              84727.290 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2029.495 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 69914.245 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 46464.868 ops/s
[info]                  ·gc.alloc.rate:                   2565.716 MB/sec
[info]                  ·gc.alloc.rate.norm:              86917.194 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2709.520 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 91788.758 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 46084.325 ops/s
[info]                  ·gc.alloc.rate:                   2545.940 MB/sec
[info]                  ·gc.alloc.rate.norm:              86957.056 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2713.614 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 92684.008 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 46203.145 ops/s
[info]                  ·gc.alloc.rate:                   2523.821 MB/sec
[info]                  ·gc.alloc.rate.norm:              85987.691 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.709 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2036.684 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 69390.725 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writePlayJson":
[info]   46281.398 ±(99.9%) 1819.983 ops/s [Average]
[info]   (min, avg, max) = (45690.643, 46281.398, 46964.007), stdev = 472.644
[info]   CI (99.9%): [44461.415, 48101.381] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   2530.738 ±(99.9%) 165.190 MB/sec [Average]
[info]   (min, avg, max) = (2459.493, 2530.738, 2565.716), stdev = 42.899
[info]   CI (99.9%): [2365.549, 2695.928] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   86071.400 ±(99.9%) 3553.031 B/op [Average]
[info]   (min, avg, max) = (84727.290, 86071.400, 86957.056), stdev = 922.711
[info]   CI (99.9%): [82518.370, 89624.431] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   0.021 ±(99.9%) 0.139 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.083), stdev = 0.036
[info]   CI (99.9%): [≈ 0, 0.160] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   0.700 ±(99.9%) 4.653 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.700, 2.790), stdev = 1.208
[info]   CI (99.9%): [≈ 0, 5.353] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   2438.226 ±(99.9%) 1424.238 MB/sec [Average]
[info]   (min, avg, max) = (2029.495, 2438.226, 2713.614), stdev = 369.870
[info]   CI (99.9%): [1013.988, 3862.464] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   82868.390 ±(99.9%) 46551.497 B/op [Average]
[info]   (min, avg, max) = (69390.725, 82868.390, 92684.008), stdev = 12089.276
[info]   CI (99.9%): [36316.893, 129419.887] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writePlayJson:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.NestedStructsBenchmark.writePlayJson:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.200, 5.000), stdev = 0.837
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce
[info] # Run progress: 87.35% complete, ETA 00:17:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 50683.921 ops/s
[info] # Warmup Iteration   2: 809515.773 ops/s
[info] # Warmup Iteration   3: 816932.821 ops/s
[info] # Warmup Iteration   4: 851019.848 ops/s
[info] # Warmup Iteration   5: 855326.810 ops/s
[info] Iteration   1: 856348.945 ops/s
[info]                  ·gc.alloc.rate:                   2226.228 MB/sec
[info]                  ·gc.alloc.rate.norm:              4092.647 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.230 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2027.498 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3727.307 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 840636.673 ops/s
[info]                  ·gc.alloc.rate:                   2199.325 MB/sec
[info]                  ·gc.alloc.rate.norm:              4117.933 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.117 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2030.592 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3802.004 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 838844.588 ops/s
[info]                  ·gc.alloc.rate:                   2195.263 MB/sec
[info]                  ·gc.alloc.rate.norm:              4117.532 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.117 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2711.942 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5086.638 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 844883.807 ops/s
[info]                  ·gc.alloc.rate:                   2223.648 MB/sec
[info]                  ·gc.alloc.rate.norm:              4143.028 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.078 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2035.996 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3793.402 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 839460.859 ops/s
[info]                  ·gc.alloc.rate:                   2208.424 MB/sec
[info]                  ·gc.alloc.rate.norm:              4140.919 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2037.399 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3820.238 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce":
[info]   844034.974 ±(99.9%) 28017.601 ops/s [Average]
[info]   (min, avg, max) = (838844.588, 844034.974, 856348.945), stdev = 7276.082
[info]   CI (99.9%): [816017.373, 872052.575] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:·gc.alloc.rate":
[info]   2210.577 ±(99.9%) 53.825 MB/sec [Average]
[info]   (min, avg, max) = (2195.263, 2210.577, 2226.228), stdev = 13.978
[info]   CI (99.9%): [2156.753, 2264.402] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   4122.412 ±(99.9%) 79.321 B/op [Average]
[info]   (min, avg, max) = (4092.647, 4122.412, 4143.028), stdev = 20.600
[info]   CI (99.9%): [4043.090, 4201.733] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   0.058 ±(99.9%) 0.174 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.058, 0.125), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.232] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.108 ±(99.9%) 0.319 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.108, 0.230), stdev = 0.083
[info]   CI (99.9%): [≈ 0, 0.428] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   2168.685 ±(99.9%) 1169.503 MB/sec [Average]
[info]   (min, avg, max) = (2027.498, 2168.685, 2711.942), stdev = 303.716
[info]   CI (99.9%): [999.183, 3338.188] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   4045.918 ±(99.9%) 2244.302 B/op [Average]
[info]   (min, avg, max) = (3727.307, 4045.918, 5086.638), stdev = 582.838
[info]   CI (99.9%): [1801.616, 6290.219] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readCirce:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 4.000), stdev = 0.837
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala
[info] # Run progress: 87.55% complete, ETA 00:16:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1506.299 ops/s
[info] # Warmup Iteration   2: 1408401.237 ops/s
[info] # Warmup Iteration   3: 1774582.171 ops/s
[info] # Warmup Iteration   4: 1776284.622 ops/s
[info] # Warmup Iteration   5: 1774929.100 ops/s
[info] Iteration   1: 1771591.865 ops/s
[info]                  ·gc.alloc.rate:                   1096.873 MB/sec
[info]                  ·gc.alloc.rate.norm:              974.738 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.588 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 597.696 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 1786314.779 ops/s
[info]                  ·gc.alloc.rate:                   1129.343 MB/sec
[info]                  ·gc.alloc.rate.norm:              994.882 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.073 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.804 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1185.571 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 1800728.349 ops/s
[info]                  ·gc.alloc.rate:                   1119.025 MB/sec
[info]                  ·gc.alloc.rate.norm:              977.830 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.284 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 588.331 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 1796950.085 ops/s
[info]                  ·gc.alloc.rate:                   1129.571 MB/sec
[info]                  ·gc.alloc.rate.norm:              989.444 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.018 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1346.432 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1179.403 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 1793574.899 ops/s
[info]                  ·gc.alloc.rate:                   1134.831 MB/sec
[info]                  ·gc.alloc.rate.norm:              996.067 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.073 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1347.249 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1182.511 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala":
[info]   1789831.995 ±(99.9%) 44260.645 ops/s [Average]
[info]   (min, avg, max) = (1771591.865, 1789831.995, 1800728.349), stdev = 11494.349
[info]   CI (99.9%): [1745571.350, 1834092.640] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1121.929 ±(99.9%) 58.272 MB/sec [Average]
[info]   (min, avg, max) = (1096.873, 1121.929, 1134.831), stdev = 15.133
[info]   CI (99.9%): [1063.656, 1180.201] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   986.592 ±(99.9%) 37.723 B/op [Average]
[info]   (min, avg, max) = (974.738, 986.592, 996.067), stdev = 9.797
[info]   CI (99.9%): [948.869, 1024.315] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.037 ±(99.9%) 0.164 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.083), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.202] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.033 ±(99.9%) 0.144 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.073), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.177] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1077.072 ±(99.9%) 1420.595 MB/sec [Average]
[info]   (min, avg, max) = (672.588, 1077.072, 1347.249), stdev = 368.924
[info]   CI (99.9%): [≈ 0, 2497.667] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   946.702 ±(99.9%) 1243.359 B/op [Average]
[info]   (min, avg, max) = (588.331, 946.702, 1185.571), stdev = 322.897
[info]   CI (99.9%): [≈ 0, 2190.062] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJacksonScala:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala
[info] # Run progress: 87.75% complete, ETA 00:16:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3867094.660 ops/s
[info] # Warmup Iteration   2: 7453532.951 ops/s
[info] # Warmup Iteration   3: 7615038.477 ops/s
[info] # Warmup Iteration   4: 7738427.374 ops/s
[info] # Warmup Iteration   5: 7596729.664 ops/s
[info] Iteration   1: 7703090.033 ops/s
[info]                  ·gc.alloc.rate:      234.884 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 7725933.143 ops/s
[info]                  ·gc.alloc.rate:                   249.106 MB/sec
[info]                  ·gc.alloc.rate.norm:              50.751 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      511.564 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 104.222 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 7798317.319 ops/s
[info]                  ·gc.alloc.rate:      237.823 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 7759841.925 ops/s
[info]                  ·gc.alloc.rate:                   246.497 MB/sec
[info]                  ·gc.alloc.rate.norm:              49.999 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      511.556 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 103.764 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 7782109.306 ops/s
[info]                  ·gc.alloc.rate:      237.485 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.034 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala":
[info]   7753858.345 ±(99.9%) 151205.315 ops/s [Average]
[info]   (min, avg, max) = (7703090.033, 7753858.345, 7798317.319), stdev = 39267.540
[info]   CI (99.9%): [7602653.030, 7905063.661] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   241.159 ±(99.9%) 24.020 MB/sec [Average]
[info]   (min, avg, max) = (234.884, 241.159, 249.106), stdev = 6.238
[info]   CI (99.9%): [217.139, 265.179] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   48.957 ±(99.9%) 5.090 B/op [Average]
[info]   (min, avg, max) = (48.000, 48.957, 50.751), stdev = 1.322
[info]   CI (99.9%): [43.867, 54.046] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   204.624 ±(99.9%) 1078.924 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 204.624, 511.564), stdev = 280.193
[info]   CI (99.9%): [≈ 0, 1283.548] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   41.597 ±(99.9%) 219.331 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 41.597, 104.222), stdev = 56.960
[info]   CI (99.9%): [≈ 0, 260.928] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:·gc.count":
[info]   2.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.000), stdev = 0.548
[info]   CI (99.9%): [2.000, 2.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readJsoniterScala:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 3.000), stdev = 1.414
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson
[info] # Run progress: 87.95% complete, ETA 00:16:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 814.480 ops/s
[info] # Warmup Iteration   2: 141174.387 ops/s
[info] # Warmup Iteration   3: 256581.096 ops/s
[info] # Warmup Iteration   4: 308301.004 ops/s
[info] # Warmup Iteration   5: 304974.175 ops/s
[info] Iteration   1: 307270.849 ops/s
[info]                  ·gc.alloc.rate:                   2034.442 MB/sec
[info]                  ·gc.alloc.rate.norm:              10421.168 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.213 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2022.254 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10358.732 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 306833.853 ops/s
[info]                  ·gc.alloc.rate:                   2017.736 MB/sec
[info]                  ·gc.alloc.rate.norm:              10349.137 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.214 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2024.761 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10385.171 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 307781.232 ops/s
[info]                  ·gc.alloc.rate:                   2019.951 MB/sec
[info]                  ·gc.alloc.rate.norm:              10329.497 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.319 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2026.668 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10363.846 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 312516.722 ops/s
[info]                  ·gc.alloc.rate:                   2075.075 MB/sec
[info]                  ·gc.alloc.rate.norm:              10451.103 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.105 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2029.568 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10221.909 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 307776.476 ops/s
[info]                  ·gc.alloc.rate:                   2044.676 MB/sec
[info]                  ·gc.alloc.rate.norm:              10454.244 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2032.032 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10389.597 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson":
[info]   308435.826 ±(99.9%) 8914.976 ops/s [Average]
[info]   (min, avg, max) = (306833.853, 308435.826, 312516.722), stdev = 2315.191
[info]   CI (99.9%): [299520.851, 317350.802] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2038.376 ±(99.9%) 89.636 MB/sec [Average]
[info]   (min, avg, max) = (2017.736, 2038.376, 2075.075), stdev = 23.278
[info]   CI (99.9%): [1948.740, 2128.012] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   10401.030 ±(99.9%) 224.153 B/op [Average]
[info]   (min, avg, max) = (10329.497, 10401.030, 10454.244), stdev = 58.212
[info]   CI (99.9%): [10176.877, 10625.182] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   0.033 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   0.170 ±(99.9%) 0.469 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.170, 0.319), stdev = 0.122
[info]   CI (99.9%): [≈ 0, 0.639] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   2027.057 ±(99.9%) 14.858 MB/sec [Average]
[info]   (min, avg, max) = (2022.254, 2027.057, 2032.032), stdev = 3.859
[info]   CI (99.9%): [2012.199, 2041.915] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   10343.851 ±(99.9%) 267.412 B/op [Average]
[info]   (min, avg, max) = (10221.909, 10343.851, 10389.597), stdev = 69.446
[info]   CI (99.9%): [10076.439, 10611.264] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.readPlayJson:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce
[info] # Run progress: 88.15% complete, ETA 00:16:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 135048.773 ops/s
[info] # Warmup Iteration   2: 1061083.144 ops/s
[info] # Warmup Iteration   3: 1082626.913 ops/s
[info] # Warmup Iteration   4: 1110189.600 ops/s
[info] # Warmup Iteration   5: 1136712.432 ops/s
[info] Iteration   1: 1127154.170 ops/s
[info]                  ·gc.alloc.rate:                   1599.210 MB/sec
[info]                  ·gc.alloc.rate.norm:              2233.472 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.362 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1884.533 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 1131707.280 ops/s
[info]                  ·gc.alloc.rate:                   1617.266 MB/sec
[info]                  ·gc.alloc.rate.norm:              2248.715 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.087 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2026.137 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2817.226 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 1116748.609 ops/s
[info]                  ·gc.alloc.rate:                   1588.921 MB/sec
[info]                  ·gc.alloc.rate.norm:              2239.547 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.059 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1352.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1905.788 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 1129072.937 ops/s
[info]                  ·gc.alloc.rate:                   1607.193 MB/sec
[info]                  ·gc.alloc.rate.norm:              2240.714 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.029 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1352.679 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1885.876 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 1118206.868 ops/s
[info]                  ·gc.alloc.rate:                   1618.199 MB/sec
[info]                  ·gc.alloc.rate.norm:              2277.946 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2031.511 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2859.769 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce":
[info]   1124577.973 ±(99.9%) 25799.201 ops/s [Average]
[info]   (min, avg, max) = (1116748.609, 1124577.973, 1131707.280), stdev = 6699.971
[info]   CI (99.9%): [1098778.772, 1150377.174] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:·gc.alloc.rate":
[info]   1606.158 ±(99.9%) 47.740 MB/sec [Average]
[info]   (min, avg, max) = (1588.921, 1606.158, 1618.199), stdev = 12.398
[info]   CI (99.9%): [1558.417, 1653.898] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   2248.079 ±(99.9%) 67.602 B/op [Average]
[info]   (min, avg, max) = (2233.472, 2248.079, 2277.946), stdev = 17.556
[info]   CI (99.9%): [2180.477, 2315.681] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   0.025 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.130] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.035 ±(99.9%) 0.146 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.035, 0.087), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.181] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   1622.363 ±(99.9%) 1428.796 MB/sec [Average]
[info]   (min, avg, max) = (1349.362, 1622.363, 2031.511), stdev = 371.054
[info]   CI (99.9%): [193.567, 3051.158] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   2270.638 ±(99.9%) 1997.208 B/op [Average]
[info]   (min, avg, max) = (1884.533, 2270.638, 2859.769), stdev = 518.668
[info]   CI (99.9%): [273.431, 4267.846] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeCirce:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 3.000), stdev = 1.000
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala
[info] # Run progress: 88.35% complete, ETA 00:15:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
[info] WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/tmp/sbt_c0b5d35/target/1bdf7fe1/jackson-module-afterburner-2.9.5.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int)
[info] WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
[info] WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
[info] WARNING: All illegal access operations will be denied in a future release
[info] 102563.478 ops/s
[info] # Warmup Iteration   2: 2490307.965 ops/s
[info] # Warmup Iteration   3: 2482220.696 ops/s
[info] # Warmup Iteration   4: 2551837.543 ops/s
[info] # Warmup Iteration   5: 2492165.485 ops/s
[info] Iteration   1: 2576669.721 ops/s
[info]                  ·gc.alloc.rate:                   1134.398 MB/sec
[info]                  ·gc.alloc.rate.norm:              693.034 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.064 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1347.982 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 823.518 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 2589724.746 ops/s
[info]                  ·gc.alloc.rate:                   1130.353 MB/sec
[info]                  ·gc.alloc.rate.norm:              687.034 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 409.679 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 2573131.139 ops/s
[info]                  ·gc.alloc.rate:                   1138.875 MB/sec
[info]                  ·gc.alloc.rate.norm:              696.703 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.038 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.387 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 824.872 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 2584590.978 ops/s
[info]                  ·gc.alloc.rate:                   1133.353 MB/sec
[info]                  ·gc.alloc.rate.norm:              690.125 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.025 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.291 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 821.614 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 2556718.063 ops/s
[info]                  ·gc.alloc.rate:                   1105.911 MB/sec
[info]                  ·gc.alloc.rate.norm:              680.694 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.897 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 415.403 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala":
[info]   2576166.929 ±(99.9%) 48802.497 ops/s [Average]
[info]   (min, avg, max) = (2556718.063, 2576166.929, 2589724.746), stdev = 12673.853
[info]   CI (99.9%): [2527364.433, 2624969.426] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   1128.578 ±(99.9%) 50.193 MB/sec [Average]
[info]   (min, avg, max) = (1105.911, 1128.578, 1138.875), stdev = 13.035
[info]   CI (99.9%): [1078.385, 1178.771] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   689.518 ±(99.9%) 23.454 B/op [Average]
[info]   (min, avg, max) = (680.694, 689.518, 696.703), stdev = 6.091
[info]   CI (99.9%): [666.064, 712.972] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.042 ±(99.9%) 0.170 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.104), stdev = 0.044
[info]   CI (99.9%): [≈ 0, 0.212] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.025 ±(99.9%) 0.104 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.064), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.129] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1078.918 ±(99.9%) 1421.713 MB/sec [Average]
[info]   (min, avg, max) = (674.031, 1078.918, 1349.291), stdev = 369.214
[info]   CI (99.9%): [≈ 0, 2500.631] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   659.017 ±(99.9%) 866.446 B/op [Average]
[info]   (min, avg, max) = (409.679, 659.017, 824.872), stdev = 225.013
[info]   CI (99.9%): [≈ 0, 1525.463] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJacksonScala:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.600, 3.000), stdev = 1.140
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala
[info] # Run progress: 88.55% complete, ETA 00:15:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2433714.083 ops/s
[info] # Warmup Iteration   2: 5510936.871 ops/s
[info] # Warmup Iteration   3: 5734882.790 ops/s
[info] # Warmup Iteration   4: 5746679.903 ops/s
[info] # Warmup Iteration   5: 5812962.795 ops/s
[info] Iteration   1: 5813413.578 ops/s
[info]                  ·gc.alloc.rate:                   672.168 MB/sec
[info]                  ·gc.alloc.rate.norm:              181.995 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2.904 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.786 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.395 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 182.328 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 5830940.210 ops/s
[info]                  ·gc.alloc.rate:                   673.053 MB/sec
[info]                  ·gc.alloc.rate.norm:              181.708 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.006 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.650 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 181.599 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 5839170.505 ops/s
[info]                  ·gc.alloc.rate:                   674.525 MB/sec
[info]                  ·gc.alloc.rate.norm:              181.830 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.722 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 181.344 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 5806614.551 ops/s
[info]                  ·gc.alloc.rate:                   667.436 MB/sec
[info]                  ·gc.alloc.rate.norm:              180.932 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.017 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.037 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 182.180 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   5: 5715016.908 ops/s
[info]                  ·gc.alloc.rate:                   661.921 MB/sec
[info]                  ·gc.alloc.rate.norm:              182.245 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.278 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 185.097 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala":
[info]   5801031.150 ±(99.9%) 191877.542 ops/s [Average]
[info]   (min, avg, max) = (5715016.908, 5801031.150, 5839170.505), stdev = 49829.988
[info]   CI (99.9%): [5609153.608, 5992908.693] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   669.821 ±(99.9%) 19.839 MB/sec [Average]
[info]   (min, avg, max) = (661.921, 669.821, 674.525), stdev = 5.152
[info]   CI (99.9%): [649.982, 689.660] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   181.742 ±(99.9%) 1.908 B/op [Average]
[info]   (min, avg, max) = (180.932, 181.742, 182.245), stdev = 0.495
[info]   CI (99.9%): [179.834, 183.650] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.597 ±(99.9%) 4.965 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.597, 2.904), stdev = 1.290
[info]   CI (99.9%): [≈ 0, 5.563] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.162 ±(99.9%) 1.344 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.162, 0.786), stdev = 0.349
[info]   CI (99.9%): [≈ 0, 1.506] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   672.616 ±(99.9%) 1.990 MB/sec [Average]
[info]   (min, avg, max) = (672.037, 672.616, 673.395), stdev = 0.517
[info]   CI (99.9%): [670.626, 674.607] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   182.509 ±(99.9%) 5.783 B/op [Average]
[info]   (min, avg, max) = (181.344, 182.509, 185.097), stdev = 1.502
[info]   CI (99.9%): [176.726, 188.293] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 0.837
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 88.76% complete, ETA 00:15:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2124621.196 ops/s
[info] # Warmup Iteration   2: 5895231.428 ops/s
[info] # Warmup Iteration   3: 6072818.577 ops/s
[info] # Warmup Iteration   4: 6113772.570 ops/s
[info] # Warmup Iteration   5: 6093262.027 ops/s
[info] Iteration   1: 6121900.324 ops/s
[info]                  ·gc.alloc.rate:                   383.603 MB/sec
[info]                  ·gc.alloc.rate.norm:              98.645 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      511.474 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 131.528 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 6224831.777 ops/s
[info]                  ·gc.alloc.rate:      379.642 MB/sec
[info]                  ·gc.alloc.rate.norm: 96.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 6091877.454 ops/s
[info]                  ·gc.alloc.rate:                   389.964 MB/sec
[info]                  ·gc.alloc.rate.norm:              100.750 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      675.122 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 174.423 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 6233153.069 ops/s
[info]                  ·gc.alloc.rate:      380.217 MB/sec
[info]                  ·gc.alloc.rate.norm: 96.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 6229149.225 ops/s
[info]                  ·gc.alloc.rate:                   393.339 MB/sec
[info]                  ·gc.alloc.rate.norm:              99.388 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2.519 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.636 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      675.051 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 170.570 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc":
[info]   6180182.370 ±(99.9%) 261104.981 ops/s [Average]
[info]   (min, avg, max) = (6091877.454, 6180182.370, 6233153.069), stdev = 67808.134
[info]   CI (99.9%): [5919077.388, 6441287.351] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   385.353 ±(99.9%) 23.351 MB/sec [Average]
[info]   (min, avg, max) = (379.642, 385.353, 393.339), stdev = 6.064
[info]   CI (99.9%): [362.002, 408.705] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   98.157 ±(99.9%) 8.119 B/op [Average]
[info]   (min, avg, max) = (96.000, 98.157, 100.750), stdev = 2.109
[info]   CI (99.9%): [90.038, 106.276] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space":
[info]   0.504 ±(99.9%) 4.337 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.504, 2.519), stdev = 1.126
[info]   CI (99.9%): [≈ 0, 4.841] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   0.127 ±(99.9%) 1.096 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.127, 0.636), stdev = 0.285
[info]   CI (99.9%): [≈ 0, 1.223] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space":
[info]   372.330 ±(99.9%) 1333.824 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 372.330, 675.122), stdev = 346.390
[info]   CI (99.9%): [≈ 0, 1706.154] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   95.304 ±(99.9%) 341.183 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 95.304, 174.423), stdev = 88.604
[info]   CI (99.9%): [≈ 0, 436.487] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.800, 3.000), stdev = 1.643
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson
[info] # Run progress: 88.96% complete, ETA 00:14:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 11938.317 ops/s
[info] # Warmup Iteration   2: 376268.313 ops/s
[info] # Warmup Iteration   3: 413108.509 ops/s
[info] # Warmup Iteration   4: 424051.288 ops/s
[info] # Warmup Iteration   5: 427764.368 ops/s
[info] Iteration   1: 430707.397 ops/s
[info]                  ·gc.alloc.rate:                   2321.348 MB/sec
[info]                  ·gc.alloc.rate.norm:              8482.625 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.228 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2025.699 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7402.269 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 426174.292 ops/s
[info]                  ·gc.alloc.rate:                   2295.378 MB/sec
[info]                  ·gc.alloc.rate.norm:              8477.653 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.154 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2027.847 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7489.565 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 425843.353 ops/s
[info]                  ·gc.alloc.rate:                   2320.509 MB/sec
[info]                  ·gc.alloc.rate.norm:              8577.911 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.308 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2707.080 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10006.896 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 418747.565 ops/s
[info]                  ·gc.alloc.rate:                   2282.532 MB/sec
[info]                  ·gc.alloc.rate.norm:              8579.077 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2032.782 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7640.372 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 423104.400 ops/s
[info]                  ·gc.alloc.rate:                   2306.791 MB/sec
[info]                  ·gc.alloc.rate.norm:              8581.871 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2034.880 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7570.293 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson":
[info]   424915.401 ±(99.9%) 16929.159 ops/s [Average]
[info]   (min, avg, max) = (418747.565, 424915.401, 430707.397), stdev = 4396.449
[info]   CI (99.9%): [407986.242, 441844.560] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:·gc.alloc.rate":
[info]   2305.312 ±(99.9%) 64.084 MB/sec [Average]
[info]   (min, avg, max) = (2282.532, 2305.312, 2321.348), stdev = 16.642
[info]   CI (99.9%): [2241.228, 2369.396] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   8539.827 ±(99.9%) 209.995 B/op [Average]
[info]   (min, avg, max) = (8477.653, 8539.827, 8581.871), stdev = 54.535
[info]   CI (99.9%): [8329.832, 8749.822] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   0.037 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.083), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.181] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   0.138 ±(99.9%) 0.528 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.138, 0.308), stdev = 0.137
[info]   CI (99.9%): [≈ 0, 0.666] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   2165.658 ±(99.9%) 1165.538 MB/sec [Average]
[info]   (min, avg, max) = (2025.699, 2165.658, 2707.080), stdev = 302.687
[info]   CI (99.9%): [1000.120, 3331.196] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   8021.879 ±(99.9%) 4286.619 B/op [Average]
[info]   (min, avg, max) = (7402.269, 8021.879, 10006.896), stdev = 1113.221
[info]   CI (99.9%): [3735.260, 12308.498] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.PrimitivesBenchmark.writePlayJson:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.000, 4.000), stdev = 0.707
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 89.16% complete, ETA 00:14:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 43969.558 ops/s
[info] # Warmup Iteration   2: 75528.737 ops/s
[info] # Warmup Iteration   3: 80237.770 ops/s
[info] # Warmup Iteration   4: 83016.040 ops/s
[info] # Warmup Iteration   5: 83162.776 ops/s
[info] Iteration   1: 83879.936 ops/s
[info]                  ·gc.alloc.rate:                   2275.560 MB/sec
[info]                  ·gc.alloc.rate.norm:              42708.161 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.562 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2697.224 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 50622.031 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 84771.772 ops/s
[info]                  ·gc.alloc.rate:                   2297.201 MB/sec
[info]                  ·gc.alloc.rate.norm:              42654.169 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.546 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2026.463 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 37627.142 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 85275.003 ops/s
[info]                  ·gc.alloc.rate:                   2298.573 MB/sec
[info]                  ·gc.alloc.rate.norm:              42414.652 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.768 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2030.501 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 37468.024 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 85182.139 ops/s
[info]                  ·gc.alloc.rate:                   2308.952 MB/sec
[info]                  ·gc.alloc.rate.norm:              42664.434 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.539 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2032.629 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 37558.598 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 84670.274 ops/s
[info]                  ·gc.alloc.rate:                   2323.594 MB/sec
[info]                  ·gc.alloc.rate.norm:              43180.559 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.774 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2714.607 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 50446.955 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce":
[info]   84755.825 ±(99.9%) 2131.849 ops/s [Average]
[info]   (min, avg, max) = (83879.936, 84755.825, 85275.003), stdev = 553.634
[info]   CI (99.9%): [82623.976, 86887.674] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:·gc.alloc.rate":
[info]   2300.776 ±(99.9%) 67.825 MB/sec [Average]
[info]   (min, avg, max) = (2275.560, 2300.776, 2323.594), stdev = 17.614
[info]   CI (99.9%): [2232.951, 2368.601] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   42724.395 ±(99.9%) 1076.834 B/op [Average]
[info]   (min, avg, max) = (42414.652, 42724.395, 43180.559), stdev = 279.650
[info]   CI (99.9%): [41647.562, 43801.229] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   0.067 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.067, 0.083), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.154] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1.238 ±(99.9%) 1.641 B/op [Average]
[info]   (min, avg, max) = (0.768, 1.238, 1.562), stdev = 0.426
[info]   CI (99.9%): [≈ 0, 2.879] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   2300.285 ±(99.9%) 1426.070 MB/sec [Average]
[info]   (min, avg, max) = (2026.463, 2300.285, 2714.607), stdev = 370.346
[info]   CI (99.9%): [874.215, 3726.355] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   42744.550 ±(99.9%) 27384.647 B/op [Average]
[info]   (min, avg, max) = (37468.024, 42744.550, 50622.031), stdev = 7111.706
[info]   CI (99.9%): [15359.903, 70129.197] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readCirce:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.000, 4.000), stdev = 0.707
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 89.36% complete, ETA 00:14:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 28703.625 ops/s
[info] # Warmup Iteration   2: 115328.286 ops/s
[info] # Warmup Iteration   3: 119121.363 ops/s
[info] # Warmup Iteration   4: 121697.425 ops/s
[info] # Warmup Iteration   5: 119229.879 ops/s
[info] Iteration   1: 121370.873 ops/s
[info]                  ·gc.alloc.rate:                   1904.014 MB/sec
[info]                  ·gc.alloc.rate.norm:              24693.873 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.540 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2023.352 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 26241.609 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 121589.355 ops/s
[info]                  ·gc.alloc.rate:                   1925.424 MB/sec
[info]                  ·gc.alloc.rate.norm:              24922.717 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.808 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2026.080 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 26225.609 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 121801.055 ops/s
[info]                  ·gc.alloc.rate:                   1919.257 MB/sec
[info]                  ·gc.alloc.rate.norm:              24799.696 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.807 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2028.774 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 26214.830 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 119429.648 ops/s
[info]                  ·gc.alloc.rate:                   1882.306 MB/sec
[info]                  ·gc.alloc.rate.norm:              24807.885 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.549 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1354.159 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17847.168 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 121577.219 ops/s
[info]                  ·gc.alloc.rate:                   1928.378 MB/sec
[info]                  ·gc.alloc.rate.norm:              24965.767 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.269 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2032.816 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 26317.878 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala":
[info]   121153.630 ±(99.9%) 3756.970 ops/s [Average]
[info]   (min, avg, max) = (119429.648, 121153.630, 121801.055), stdev = 975.673
[info]   CI (99.9%): [117396.660, 124910.599] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1911.876 ±(99.9%) 73.227 MB/sec [Average]
[info]   (min, avg, max) = (1882.306, 1911.876, 1928.378), stdev = 19.017
[info]   CI (99.9%): [1838.649, 1985.103] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   24837.988 ±(99.9%) 415.834 B/op [Average]
[info]   (min, avg, max) = (24693.873, 24837.988, 24965.767), stdev = 107.991
[info]   CI (99.9%): [24422.153, 25253.822] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.046 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.062), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.595 ±(99.9%) 0.864 B/op [Average]
[info]   (min, avg, max) = (0.269, 0.595, 0.808), stdev = 0.225
[info]   CI (99.9%): [≈ 0, 1.459] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1893.036 ±(99.9%) 1160.051 MB/sec [Average]
[info]   (min, avg, max) = (1354.159, 1893.036, 2032.816), stdev = 301.262
[info]   CI (99.9%): [732.985, 3053.088] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   24569.419 ±(99.9%) 14470.985 B/op [Average]
[info]   (min, avg, max) = (17847.168, 24569.419, 26317.878), stdev = 3758.069
[info]   CI (99.9%): [10098.434, 39040.404] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJacksonScala:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.000, 4.000), stdev = 0.707
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 89.56% complete, ETA 00:14:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 96567.733 ops/s
[info] # Warmup Iteration   2: 168931.530 ops/s
[info] # Warmup Iteration   3: 176828.369 ops/s
[info] # Warmup Iteration   4: 176858.427 ops/s
[info] # Warmup Iteration   5: 178675.767 ops/s
[info] Iteration   1: 178353.109 ops/s
[info]                  ·gc.alloc.rate:                   2713.899 MB/sec
[info]                  ·gc.alloc.rate.norm:              23944.625 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.551 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2699.704 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 23819.382 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 174511.863 ops/s
[info]                  ·gc.alloc.rate:                   2670.700 MB/sec
[info]                  ·gc.alloc.rate.norm:              24085.470 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.751 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2704.587 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 24391.077 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 178794.860 ops/s
[info]                  ·gc.alloc.rate:                   2734.158 MB/sec
[info]                  ·gc.alloc.rate.norm:              24068.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.733 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2709.777 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 23853.395 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 176398.226 ops/s
[info]                  ·gc.alloc.rate:                   2699.837 MB/sec
[info]                  ·gc.alloc.rate.norm:              24087.928 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.557 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2713.963 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 24213.955 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 179031.738 ops/s
[info]                  ·gc.alloc.rate:                   2737.371 MB/sec
[info]                  ·gc.alloc.rate.norm:              24067.144 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.366 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2716.902 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 23887.172 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala":
[info]   177417.959 ±(99.9%) 7421.835 ops/s [Average]
[info]   (min, avg, max) = (174511.863, 177417.959, 179031.738), stdev = 1927.427
[info]   CI (99.9%): [169996.124, 184839.794] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   2711.193 ±(99.9%) 105.255 MB/sec [Average]
[info]   (min, avg, max) = (2670.700, 2711.193, 2737.371), stdev = 27.334
[info]   CI (99.9%): [2605.938, 2816.448] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   24050.637 ±(99.9%) 231.174 B/op [Average]
[info]   (min, avg, max) = (23944.625, 24050.637, 24087.928), stdev = 60.035
[info]   CI (99.9%): [23819.462, 24281.811] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.067 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.067, 0.083), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.592 ±(99.9%) 0.606 B/op [Average]
[info]   (min, avg, max) = (0.366, 0.592, 0.751), stdev = 0.157
[info]   CI (99.9%): [≈ 0, 1.198] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   2708.986 ±(99.9%) 26.786 MB/sec [Average]
[info]   (min, avg, max) = (2699.704, 2708.986, 2716.902), stdev = 6.956
[info]   CI (99.9%): [2682.200, 2735.773] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   24032.996 ±(99.9%) 981.952 B/op [Average]
[info]   (min, avg, max) = (23819.382, 24032.996, 24391.077), stdev = 255.010
[info]   CI (99.9%): [23051.044, 25014.949] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readJsoniterScala:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 89.76% complete, ETA 00:13:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 8824.374 ops/s
[info] # Warmup Iteration   2: 53948.412 ops/s
[info] # Warmup Iteration   3: 60350.313 ops/s
[info] # Warmup Iteration   4: 59104.750 ops/s
[info] # Warmup Iteration   5: 61096.549 ops/s
[info] Iteration   1: 61198.982 ops/s
[info]                  ·gc.alloc.rate:                   2986.701 MB/sec
[info]                  ·gc.alloc.rate.norm:              76806.729 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.535 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2707.932 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 69637.822 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 60751.146 ops/s
[info]                  ·gc.alloc.rate:                   2977.780 MB/sec
[info]                  ·gc.alloc.rate.norm:              77152.710 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.696 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2711.549 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 70254.816 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 60659.891 ops/s
[info]                  ·gc.alloc.rate:                   3028.033 MB/sec
[info]                  ·gc.alloc.rate.norm:              78575.326 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.160 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3393.474 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 88058.261 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 60965.043 ops/s
[info]                  ·gc.alloc.rate:                   3016.229 MB/sec
[info]                  ·gc.alloc.rate.norm:              77878.147 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.537 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2718.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 70179.065 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 61294.047 ops/s
[info]                  ·gc.alloc.rate:                   3032.059 MB/sec
[info]                  ·gc.alloc.rate.norm:              77862.826 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.534 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2720.089 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 69851.475 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson":
[info]   60973.822 ±(99.9%) 1057.097 ops/s [Average]
[info]   (min, avg, max) = (60659.891, 60973.822, 61294.047), stdev = 274.525
[info]   CI (99.9%): [59916.724, 62030.919] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3008.160 ±(99.9%) 94.609 MB/sec [Average]
[info]   (min, avg, max) = (2977.780, 3008.160, 3032.059), stdev = 24.570
[info]   CI (99.9%): [2913.552, 3102.769] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   77655.148 ±(99.9%) 2662.132 B/op [Average]
[info]   (min, avg, max) = (76806.729, 77655.148, 78575.326), stdev = 691.347
[info]   CI (99.9%): [74993.016, 80317.279] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   0.050 ±(99.9%) 0.156 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.104), stdev = 0.041
[info]   CI (99.9%): [≈ 0, 0.206] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   1.293 ±(99.9%) 4.058 B/op [Average]
[info]   (min, avg, max) = (0.534, 1.293, 2.696), stdev = 1.054
[info]   CI (99.9%): [≈ 0, 5.351] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   2850.217 ±(99.9%) 1169.553 MB/sec [Average]
[info]   (min, avg, max) = (2707.932, 2850.217, 3393.474), stdev = 303.729
[info]   CI (99.9%): [1680.664, 4019.771] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   73596.288 ±(99.9%) 31145.295 B/op [Average]
[info]   (min, avg, max) = (69637.822, 73596.288, 88058.261), stdev = 8088.334
[info]   CI (99.9%): [42450.993, 104741.583] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readPlayJson:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.000, 5.000), stdev = 0.707
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 89.96% complete, ETA 00:13:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 61432.761 ops/s
[info] # Warmup Iteration   2: 98438.074 ops/s
[info] # Warmup Iteration   3: 98010.544 ops/s
[info] # Warmup Iteration   4: 101555.082 ops/s
[info] # Warmup Iteration   5: 99948.613 ops/s
[info] Iteration   1: 98675.438 ops/s
[info]                  ·gc.alloc.rate:                   1923.699 MB/sec
[info]                  ·gc.alloc.rate.norm:              30671.683 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2019.777 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 32203.561 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 99959.168 ops/s
[info]                  ·gc.alloc.rate:                   1945.642 MB/sec
[info]                  ·gc.alloc.rate.norm:              30635.397 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.656 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1347.533 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 21217.785 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 101299.343 ops/s
[info]                  ·gc.alloc.rate:                   1998.241 MB/sec
[info]                  ·gc.alloc.rate.norm:              31048.950 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.294 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2023.515 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 31441.652 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 101134.008 ops/s
[info]                  ·gc.alloc.rate:                   1981.883 MB/sec
[info]                  ·gc.alloc.rate.norm:              30845.949 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.648 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2026.803 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 31545.084 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 100527.146 ops/s
[info]                  ·gc.alloc.rate:                   1984.162 MB/sec
[info]                  ·gc.alloc.rate.norm:              31066.460 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.978 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2029.558 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 31777.243 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readUPickle":
[info]   100319.021 ±(99.9%) 4083.957 ops/s [Average]
[info]   (min, avg, max) = (98675.438, 100319.021, 101299.343), stdev = 1060.591
[info]   CI (99.9%): [96235.063, 104402.978] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readUPickle:·gc.alloc.rate":
[info]   1966.725 ±(99.9%) 119.040 MB/sec [Average]
[info]   (min, avg, max) = (1923.699, 1966.725, 1998.241), stdev = 30.914
[info]   CI (99.9%): [1847.685, 2085.766] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readUPickle:·gc.alloc.rate.norm":
[info]   30853.688 ±(99.9%) 780.256 B/op [Average]
[info]   (min, avg, max) = (30635.397, 30853.688, 31066.460), stdev = 202.630
[info]   CI (99.9%): [30073.432, 31633.944] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readUPickle:·gc.churn.PS_Eden_Space":
[info]   0.046 ±(99.9%) 0.119 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.083), stdev = 0.031
[info]   CI (99.9%): [≈ 0, 0.165] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   0.715 ±(99.9%) 1.850 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.715, 1.294), stdev = 0.480
[info]   CI (99.9%): [≈ 0, 2.565] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space":
[info]   1889.437 ±(99.9%) 1166.575 MB/sec [Average]
[info]   (min, avg, max) = (1347.533, 1889.437, 2029.558), stdev = 302.956
[info]   CI (99.9%): [722.863, 3056.012] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   29637.065 ±(99.9%) 18158.207 B/op [Average]
[info]   (min, avg, max) = (21217.785, 29637.065, 32203.561), stdev = 4715.629
[info]   CI (99.9%): [11478.858, 47795.272] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readUPickle:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.readUPickle:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 4.000), stdev = 0.837
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 90.16% complete, ETA 00:13:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 83658.242 ops/s
[info] # Warmup Iteration   2: 167829.434 ops/s
[info] # Warmup Iteration   3: 172991.319 ops/s
[info] # Warmup Iteration   4: 172660.666 ops/s
[info] # Warmup Iteration   5: 170725.282 ops/s
[info] Iteration   1: 172200.014 ops/s
[info]                  ·gc.alloc.rate:                   846.374 MB/sec
[info]                  ·gc.alloc.rate.norm:              7735.318 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.190 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.129 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6161.111 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 173294.406 ops/s
[info]                  ·gc.alloc.rate:                   848.334 MB/sec
[info]                  ·gc.alloc.rate.norm:              7703.461 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.261 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6122.754 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 173180.107 ops/s
[info]                  ·gc.alloc.rate:                   866.049 MB/sec
[info]                  ·gc.alloc.rate.norm:              7871.831 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.946 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.757 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12259.338 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 173215.415 ops/s
[info]                  ·gc.alloc.rate:                   847.927 MB/sec
[info]                  ·gc.alloc.rate.norm:              7705.192 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.728 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6131.315 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 173140.052 ops/s
[info]                  ·gc.alloc.rate:                   845.411 MB/sec
[info]                  ·gc.alloc.rate.norm:              7686.240 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      675.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6136.999 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce":
[info]   173005.999 ±(99.9%) 1748.686 ops/s [Average]
[info]   (min, avg, max) = (172200.014, 173005.999, 173294.406), stdev = 454.128
[info]   CI (99.9%): [171257.313, 174754.685] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:·gc.alloc.rate":
[info]   850.819 ±(99.9%) 33.096 MB/sec [Average]
[info]   (min, avg, max) = (845.411, 850.819, 866.049), stdev = 8.595
[info]   CI (99.9%): [817.723, 883.915] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   7740.408 ±(99.9%) 290.954 B/op [Average]
[info]   (min, avg, max) = (7686.240, 7740.408, 7871.831), stdev = 75.560
[info]   CI (99.9%): [7449.454, 8031.363] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   0.025 ±(99.9%) 0.174 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.104), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.199] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.227 ±(99.9%) 1.579 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.227, 0.946), stdev = 0.410
[info]   CI (99.9%): [≈ 0, 1.806] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   809.377 ±(99.9%) 1161.058 MB/sec [Average]
[info]   (min, avg, max) = (674.129, 809.377, 1348.757), stdev = 301.523
[info]   CI (99.9%): [≈ 0, 1970.435] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   7362.303 ±(99.9%) 10541.379 B/op [Average]
[info]   (min, avg, max) = (6122.754, 7362.303, 12259.338), stdev = 2737.563
[info]   CI (99.9%): [≈ 0, 17903.683] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeCirce:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 90.36% complete, ETA 00:13:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 151676.272 ops/s
[info] # Warmup Iteration   2: 398865.089 ops/s
[info] # Warmup Iteration   3: 402175.164 ops/s
[info] # Warmup Iteration   4: 382743.178 ops/s
[info] # Warmup Iteration   5: 404308.156 ops/s
[info] Iteration   1: 408476.553 ops/s
[info]                  ·gc.alloc.rate:      359.109 MB/sec
[info]                  ·gc.alloc.rate.norm: 1384.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 403692.825 ops/s
[info]                  ·gc.alloc.rate:                   375.033 MB/sec
[info]                  ·gc.alloc.rate.norm:              1462.174 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.092 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2628.140 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 406162.186 ops/s
[info]                  ·gc.alloc.rate:      358.301 MB/sec
[info]                  ·gc.alloc.rate.norm: 1388.640 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 405524.499 ops/s
[info]                  ·gc.alloc.rate:                   379.324 MB/sec
[info]                  ·gc.alloc.rate.norm:              1472.331 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1.020 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3.959 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.075 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2616.399 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 406823.367 ops/s
[info]                  ·gc.alloc.rate:      357.644 MB/sec
[info]                  ·gc.alloc.rate.norm: 1384.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala":
[info]   406135.886 ±(99.9%) 6750.824 ops/s [Average]
[info]   (min, avg, max) = (403692.825, 406135.886, 408476.553), stdev = 1753.167
[info]   CI (99.9%): [399385.062, 412886.709] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   365.882 ±(99.9%) 40.184 MB/sec [Average]
[info]   (min, avg, max) = (357.644, 365.882, 379.324), stdev = 10.436
[info]   CI (99.9%): [325.698, 406.066] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1418.230 ±(99.9%) 173.031 B/op [Average]
[info]   (min, avg, max) = (1384.001, 1418.230, 1472.331), stdev = 44.936
[info]   CI (99.9%): [1245.199, 1591.260] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.204 ±(99.9%) 1.756 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.204, 1.020), stdev = 0.456
[info]   CI (99.9%): [≈ 0, 1.960] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.792 ±(99.9%) 6.817 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.792, 3.959), stdev = 1.770
[info]   CI (99.9%): [≈ 0, 7.609] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   269.633 ±(99.9%) 1421.699 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 269.633, 674.092), stdev = 369.211
[info]   CI (99.9%): [≈ 0, 1691.332] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1048.908 ±(99.9%) 5530.611 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1048.908, 2628.140), stdev = 1436.282
[info]   CI (99.9%): [≈ 0, 6579.519] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:·gc.count":
[info]   2.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.000), stdev = 0.548
[info]   CI (99.9%): [2.000, 2.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJacksonScala:·gc.time":
[info]   4.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 2.000), stdev = 1.095
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 90.56% complete, ETA 00:12:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 491233.395 ops/s
[info] # Warmup Iteration   2: 596567.246 ops/s
[info] # Warmup Iteration   3: 609840.988 ops/s
[info] # Warmup Iteration   4: 638555.565 ops/s
[info] # Warmup Iteration   5: 634600.502 ops/s
[info] Iteration   1: 636123.606 ops/s
[info]                  ·gc.alloc.rate:                   351.408 MB/sec
[info]                  ·gc.alloc.rate.norm:              869.516 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.103 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      511.548 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1265.763 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 597341.564 ops/s
[info]                  ·gc.alloc.rate:      327.617 MB/sec
[info]                  ·gc.alloc.rate.norm: 863.107 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 624274.605 ops/s
[info]                  ·gc.alloc.rate:                   351.930 MB/sec
[info]                  ·gc.alloc.rate.norm:              887.363 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.045 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1699.548 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 635728.227 ops/s
[info]                  ·gc.alloc.rate:      342.554 MB/sec
[info]                  ·gc.alloc.rate.norm: 848.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 632396.140 ops/s
[info]                  ·gc.alloc.rate:                   357.620 MB/sec
[info]                  ·gc.alloc.rate.norm:              889.924 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2.842 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7.072 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.196 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1677.711 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala":
[info]   625172.828 ±(99.9%) 62651.359 ops/s [Average]
[info]   (min, avg, max) = (597341.564, 625172.828, 636123.606), stdev = 16270.359
[info]   CI (99.9%): [562521.470, 687824.187] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   346.226 ±(99.9%) 45.111 MB/sec [Average]
[info]   (min, avg, max) = (327.617, 346.226, 357.620), stdev = 11.715
[info]   CI (99.9%): [301.115, 391.337] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   871.582 ±(99.9%) 67.184 B/op [Average]
[info]   (min, avg, max) = (848.001, 871.582, 889.924), stdev = 17.447
[info]   CI (99.9%): [804.399, 938.766] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.577 ±(99.9%) 4.876 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.577, 2.842), stdev = 1.266
[info]   CI (99.9%): [≈ 0, 5.453] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   1.435 ±(99.9%) 12.135 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.435, 7.072), stdev = 3.151
[info]   CI (99.9%): [≈ 0, 13.570] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   371.958 ±(99.9%) 1332.227 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 371.958, 674.196), stdev = 345.975
[info]   CI (99.9%): [≈ 0, 1704.185] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   928.605 ±(99.9%) 3331.310 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 928.605, 1699.548), stdev = 865.131
[info]   CI (99.9%): [≈ 0, 4259.914] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScala:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.600, 3.000), stdev = 1.517
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 90.76% complete, ETA 00:12:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 515451.791 ops/s
[info] # Warmup Iteration   2: 638782.173 ops/s
[info] # Warmup Iteration   3: 665866.016 ops/s
[info] # Warmup Iteration   4: 663710.315 ops/s
[info] # Warmup Iteration   5: 661898.190 ops/s
[info] Iteration   1: 667599.784 ops/s
[info]                  ·gc.alloc.rate:      7.241 MB/sec
[info]                  ·gc.alloc.rate.norm: 17.067 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 666365.882 ops/s
[info]                  ·gc.alloc.rate:      7.803 MB/sec
[info]                  ·gc.alloc.rate.norm: 18.430 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 663733.584 ops/s
[info]                  ·gc.alloc.rate:      6.747 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 664938.200 ops/s
[info]                  ·gc.alloc.rate:      6.760 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 665566.515 ops/s
[info]                  ·gc.alloc.rate:      6.766 MB/sec
[info]                  ·gc.alloc.rate.norm: 16.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc":
[info]   665640.793 ±(99.9%) 5613.230 ops/s [Average]
[info]   (min, avg, max) = (663733.584, 665640.793, 667599.784), stdev = 1457.738
[info]   CI (99.9%): [660027.563, 671254.023] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   7.063 ±(99.9%) 1.784 MB/sec [Average]
[info]   (min, avg, max) = (6.747, 7.063, 7.803), stdev = 0.463
[info]   CI (99.9%): [5.279, 8.848] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   16.700 ±(99.9%) 4.127 B/op [Average]
[info]   (min, avg, max) = (16.001, 16.700, 18.430), stdev = 1.072
[info]   CI (99.9%): [12.573, 20.826] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 90.96% complete, ETA 00:12:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 10470.190 ops/s
[info] # Warmup Iteration   2: 32535.401 ops/s
[info] # Warmup Iteration   3: 33084.539 ops/s
[info] # Warmup Iteration   4: 32868.244 ops/s
[info] # Warmup Iteration   5: 33064.483 ops/s
[info] Iteration   1: 33168.722 ops/s
[info]                  ·gc.alloc.rate:                   1633.748 MB/sec
[info]                  ·gc.alloc.rate.norm:              77534.318 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.708 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 64006.945 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 33166.087 ops/s
[info]                  ·gc.alloc.rate:                   1667.918 MB/sec
[info]                  ·gc.alloc.rate.norm:              79128.086 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.988 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2026.291 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 96129.740 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 33289.420 ops/s
[info]                  ·gc.alloc.rate:                   1644.676 MB/sec
[info]                  ·gc.alloc.rate.norm:              77755.319 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.984 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1351.656 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 63902.226 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 33450.105 ops/s
[info]                  ·gc.alloc.rate:                   1652.614 MB/sec
[info]                  ·gc.alloc.rate.norm:              77753.111 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1353.015 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 63657.386 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 33265.914 ops/s
[info]                  ·gc.alloc.rate:                   1670.415 MB/sec
[info]                  ·gc.alloc.rate.norm:              79047.184 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.970 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2031.351 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 96127.346 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson":
[info]   33268.050 ±(99.9%) 446.856 ops/s [Average]
[info]   (min, avg, max) = (33166.087, 33268.050, 33450.105), stdev = 116.047
[info]   CI (99.9%): [32821.194, 33714.906] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1653.874 ±(99.9%) 59.720 MB/sec [Average]
[info]   (min, avg, max) = (1633.748, 1653.874, 1670.415), stdev = 15.509
[info]   CI (99.9%): [1594.154, 1713.594] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   78243.604 ±(99.9%) 2988.992 B/op [Average]
[info]   (min, avg, max) = (77534.318, 78243.604, 79128.086), stdev = 776.232
[info]   CI (99.9%): [75254.612, 81232.595] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   0.017 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   0.788 ±(99.9%) 3.174 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.788, 1.970), stdev = 0.824
[info]   CI (99.9%): [≈ 0, 3.962] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   1622.204 ±(99.9%) 1429.345 MB/sec [Average]
[info]   (min, avg, max) = (1348.708, 1622.204, 2031.351), stdev = 371.196
[info]   CI (99.9%): [192.860, 3051.549] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   76764.729 ±(99.9%) 68068.289 B/op [Average]
[info]   (min, avg, max) = (63657.386, 76764.729, 96129.740), stdev = 17677.118
[info]   CI (99.9%): [8696.440, 144833.018] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writePlayJson:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.200, 3.000), stdev = 0.837
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 91.16% complete, ETA 00:11:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 80155.360 ops/s
[info] # Warmup Iteration   2: 119621.064 ops/s
[info] # Warmup Iteration   3: 122668.121 ops/s
[info] # Warmup Iteration   4: 122351.902 ops/s
[info] # Warmup Iteration   5: 122403.156 ops/s
[info] Iteration   1: 122880.220 ops/s
[info]                  ·gc.alloc.rate:                   839.527 MB/sec
[info]                  ·gc.alloc.rate.norm:              10752.621 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.267 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.644 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17234.949 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 123265.995 ops/s
[info]                  ·gc.alloc.rate:                   819.558 MB/sec
[info]                  ·gc.alloc.rate.norm:              10463.354 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.192 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8581.918 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 123037.210 ops/s
[info]                  ·gc.alloc.rate:                   827.229 MB/sec
[info]                  ·gc.alloc.rate.norm:              10583.848 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.013 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8597.958 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 122586.467 ops/s
[info]                  ·gc.alloc.rate:                   825.352 MB/sec
[info]                  ·gc.alloc.rate.norm:              10597.222 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.069 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.110 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8629.657 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 123227.140 ops/s
[info]                  ·gc.alloc.rate:                   820.687 MB/sec
[info]                  ·gc.alloc.rate.norm:              10481.665 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.149 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8584.564 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeUPickle":
[info]   122999.406 ±(99.9%) 1070.393 ops/s [Average]
[info]   (min, avg, max) = (122586.467, 122999.406, 123265.995), stdev = 277.978
[info]   CI (99.9%): [121929.014, 124069.799] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeUPickle:·gc.alloc.rate":
[info]   826.471 ±(99.9%) 30.656 MB/sec [Average]
[info]   (min, avg, max) = (819.558, 826.471, 839.527), stdev = 7.961
[info]   CI (99.9%): [795.815, 857.126] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeUPickle:·gc.alloc.rate.norm":
[info]   10575.742 ±(99.9%) 444.473 B/op [Average]
[info]   (min, avg, max) = (10463.354, 10575.742, 10752.621), stdev = 115.428
[info]   CI (99.9%): [10131.269, 11020.215] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space":
[info]   0.021 ±(99.9%) 0.139 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.083), stdev = 0.036
[info]   CI (99.9%): [≈ 0, 0.160] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   0.267 ±(99.9%) 1.783 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.267, 1.069), stdev = 0.463
[info]   CI (99.9%): [≈ 0, 2.050] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space":
[info]   806.822 ±(99.9%) 1159.856 MB/sec [Average]
[info]   (min, avg, max) = (672.013, 806.822, 1345.644), stdev = 301.211
[info]   CI (99.9%): [≈ 0, 1966.677] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   10325.809 ±(99.9%) 14872.624 B/op [Average]
[info]   (min, avg, max) = (8581.918, 10325.809, 17234.949), stdev = 3862.373
[info]   CI (99.9%): [≈ 0, 25198.433] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeUPickle:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.SetOfIntsBenchmark.writeUPickle:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 91.37% complete, ETA 00:11:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2258213.490 ops/s
[info] # Warmup Iteration   2: 3633101.697 ops/s
[info] # Warmup Iteration   3: 3682558.378 ops/s
[info] # Warmup Iteration   4: 3625252.059 ops/s
[info] # Warmup Iteration   5: 3686108.871 ops/s
[info] Iteration   1: 3698003.404 ops/s
[info]                  ·gc.alloc.rate:                   2459.327 MB/sec
[info]                  ·gc.alloc.rate.norm:              1046.932 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.018 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2023.644 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 861.462 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 3681386.837 ops/s
[info]                  ·gc.alloc.rate:                   2471.278 MB/sec
[info]                  ·gc.alloc.rate.norm:              1056.496 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.053 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2704.234 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1156.087 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 3687028.776 ops/s
[info]                  ·gc.alloc.rate:                   2476.923 MB/sec
[info]                  ·gc.alloc.rate.norm:              1057.529 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.053 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2030.636 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 866.986 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 3672171.095 ops/s
[info]                  ·gc.alloc.rate:                   2496.556 MB/sec
[info]                  ·gc.alloc.rate.norm:              1070.124 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.045 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2712.180 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1162.549 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 3660394.217 ops/s
[info]                  ·gc.alloc.rate:                   2460.989 MB/sec
[info]                  ·gc.alloc.rate.norm:              1058.373 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.027 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2036.216 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 875.695 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce":
[info]   3679796.866 ±(99.9%) 55163.808 ops/s [Average]
[info]   (min, avg, max) = (3660394.217, 3679796.866, 3698003.404), stdev = 14325.866
[info]   CI (99.9%): [3624633.057, 3734960.674] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:·gc.alloc.rate":
[info]   2473.015 ±(99.9%) 57.903 MB/sec [Average]
[info]   (min, avg, max) = (2459.327, 2473.015, 2496.556), stdev = 15.037
[info]   CI (99.9%): [2415.111, 2530.918] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   1057.891 ±(99.9%) 31.757 B/op [Average]
[info]   (min, avg, max) = (1046.932, 1057.891, 1070.124), stdev = 8.247
[info]   CI (99.9%): [1026.134, 1089.648] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   0.092 ±(99.9%) 0.146 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.092, 0.125), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.237] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.039 ±(99.9%) 0.062 B/op [Average]
[info]   (min, avg, max) = (0.018, 0.039, 0.053), stdev = 0.016
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   2301.382 ±(99.9%) 1430.191 MB/sec [Average]
[info]   (min, avg, max) = (2023.644, 2301.382, 2712.180), stdev = 371.416
[info]   CI (99.9%): [871.191, 3731.574] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   984.556 ±(99.9%) 614.687 B/op [Average]
[info]   (min, avg, max) = (861.462, 984.556, 1162.549), stdev = 159.632
[info]   CI (99.9%): [369.869, 1599.243] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readCirce:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 91.57% complete, ETA 00:11:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.898 ops/s
[info] # Warmup Iteration   2: 3628100.389 ops/s
[info] # Warmup Iteration   3: 3737567.129 ops/s
[info] # Warmup Iteration   4: 3764886.034 ops/s
[info] # Warmup Iteration   5: 3792748.713 ops/s
[info] Iteration   1: 3774122.341 ops/s
[info]                  ·gc.alloc.rate:                   422.981 MB/sec
[info]                  ·gc.alloc.rate.norm:              176.387 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      670.810 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 279.734 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 3786745.116 ops/s
[info]                  ·gc.alloc.rate:      404.258 MB/sec
[info]                  ·gc.alloc.rate.norm: 168.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 3627447.787 ops/s
[info]                  ·gc.alloc.rate:                   398.529 MB/sec
[info]                  ·gc.alloc.rate.norm:              172.870 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3.980 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.726 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      670.976 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 291.050 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 3780865.351 ops/s
[info]                  ·gc.alloc.rate:                   424.755 MB/sec
[info]                  ·gc.alloc.rate.norm:              176.793 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.009 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      669.547 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 278.681 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 3789537.711 ops/s
[info]                  ·gc.alloc.rate:      404.624 MB/sec
[info]                  ·gc.alloc.rate.norm: 168.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava":
[info]   3751743.661 ±(99.9%) 268524.333 ops/s [Average]
[info]   (min, avg, max) = (3627447.787, 3751743.661, 3789537.711), stdev = 69734.917
[info]   CI (99.9%): [3483219.328, 4020267.995] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   411.029 ±(99.9%) 46.143 MB/sec [Average]
[info]   (min, avg, max) = (398.529, 411.029, 424.755), stdev = 11.983
[info]   CI (99.9%): [364.886, 457.172] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   172.410 ±(99.9%) 16.577 B/op [Average]
[info]   (min, avg, max) = (168.000, 172.410, 176.793), stdev = 4.305
[info]   CI (99.9%): [155.833, 188.987] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   0.800 ±(99.9%) 6.845 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.800, 3.980), stdev = 1.778
[info]   CI (99.9%): [≈ 0, 7.645] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   0.347 ±(99.9%) 2.969 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.347, 1.726), stdev = 0.771
[info]   CI (99.9%): [≈ 0, 3.316] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   402.266 ±(99.9%) 1414.025 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 402.266, 670.976), stdev = 367.218
[info]   CI (99.9%): [≈ 0, 1816.291] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   169.893 ±(99.9%) 597.489 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 169.893, 291.050), stdev = 155.166
[info]   CI (99.9%): [≈ 0, 767.382] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 4.000), stdev = 1.673
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 91.77% complete, ETA 00:11:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1269527.341 ops/s
[info] # Warmup Iteration   2: 2750542.375 ops/s
[info] # Warmup Iteration   3: 2822380.659 ops/s
[info] # Warmup Iteration   4: 2863229.014 ops/s
[info] # Warmup Iteration   5: 2852952.859 ops/s
[info] Iteration   1: 2827724.396 ops/s
[info]                  ·gc.alloc.rate:                   1298.736 MB/sec
[info]                  ·gc.alloc.rate.norm:              722.948 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.058 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.463 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 751.186 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 2841512.081 ops/s
[info]                  ·gc.alloc.rate:                   1294.411 MB/sec
[info]                  ·gc.alloc.rate.norm:              716.812 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.146 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.081 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.878 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 747.528 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 2850190.201 ops/s
[info]                  ·gc.alloc.rate:                   1276.634 MB/sec
[info]                  ·gc.alloc.rate.norm:              705.035 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      675.339 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 372.963 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 2850138.427 ops/s
[info]                  ·gc.alloc.rate:                   1311.150 MB/sec
[info]                  ·gc.alloc.rate.norm:              724.092 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.046 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1351.128 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 746.170 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 2862741.232 ops/s
[info]                  ·gc.alloc.rate:                   1293.118 MB/sec
[info]                  ·gc.alloc.rate.norm:              711.105 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.011 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1351.843 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 743.398 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala":
[info]   2846461.267 ±(99.9%) 49762.348 ops/s [Average]
[info]   (min, avg, max) = (2827724.396, 2846461.267, 2862741.232), stdev = 12923.124
[info]   CI (99.9%): [2796698.919, 2896223.616] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   1294.810 ±(99.9%) 47.777 MB/sec [Average]
[info]   (min, avg, max) = (1276.634, 1294.810, 1311.150), stdev = 12.408
[info]   CI (99.9%): [1247.033, 1342.587] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   715.998 ±(99.9%) 30.962 B/op [Average]
[info]   (min, avg, max) = (705.035, 715.998, 724.092), stdev = 8.041
[info]   CI (99.9%): [685.036, 746.961] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.071 ±(99.9%) 0.231 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.071, 0.146), stdev = 0.060
[info]   CI (99.9%): [≈ 0, 0.302] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.039 ±(99.9%) 0.128 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.039, 0.081), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.167] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   1215.530 ±(99.9%) 1162.809 MB/sec [Average]
[info]   (min, avg, max) = (675.339, 1215.530, 1351.843), stdev = 301.978
[info]   CI (99.9%): [52.722, 2378.339] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   672.249 ±(99.9%) 644.326 B/op [Average]
[info]   (min, avg, max) = (372.963, 672.249, 751.186), stdev = 167.329
[info]   CI (99.9%): [27.923, 1316.575] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJacksonScala:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 91.97% complete, ETA 00:10:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3243102.511 ops/s
[info] # Warmup Iteration   2: 3757298.856 ops/s
[info] # Warmup Iteration   3: 3962343.641 ops/s
[info] # Warmup Iteration   4: 3947443.292 ops/s
[info] # Warmup Iteration   5: 3883237.900 ops/s
[info] Iteration   1: 3975192.220 ops/s
[info]                  ·gc.alloc.rate:      424.279 MB/sec
[info]                  ·gc.alloc.rate.norm: 168.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 3953539.732 ops/s
[info]                  ·gc.alloc.rate:                   444.794 MB/sec
[info]                  ·gc.alloc.rate.norm:              177.020 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.010 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.004 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.313 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 268.364 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 3921503.744 ops/s
[info]                  ·gc.alloc.rate:                   442.298 MB/sec
[info]                  ·gc.alloc.rate.norm:              177.521 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2.675 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.074 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.097 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 270.556 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 3948810.829 ops/s
[info]                  ·gc.alloc.rate:      421.480 MB/sec
[info]                  ·gc.alloc.rate.norm: 168.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 3958617.186 ops/s
[info]                  ·gc.alloc.rate:                   440.104 MB/sec
[info]                  ·gc.alloc.rate.norm:              175.011 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.326 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 267.754 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala":
[info]   3951532.742 ±(99.9%) 75140.306 ops/s [Average]
[info]   (min, avg, max) = (3921503.744, 3951532.742, 3975192.220), stdev = 19513.699
[info]   CI (99.9%): [3876392.436, 4026673.048] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   434.591 ±(99.9%) 41.834 MB/sec [Average]
[info]   (min, avg, max) = (421.480, 434.591, 444.794), stdev = 10.864
[info]   CI (99.9%): [392.757, 476.425] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   173.110 ±(99.9%) 18.324 B/op [Average]
[info]   (min, avg, max) = (168.000, 173.110, 177.521), stdev = 4.759
[info]   CI (99.9%): [154.787, 191.434] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.537 ±(99.9%) 4.602 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.537, 2.675), stdev = 1.195
[info]   CI (99.9%): [≈ 0, 5.139] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.216 ±(99.9%) 1.847 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.216, 1.074), stdev = 0.480
[info]   CI (99.9%): [≈ 0, 2.063] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   404.347 ±(99.9%) 1421.338 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 404.347, 674.313), stdev = 369.117
[info]   CI (99.9%): [≈ 0, 1825.685] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   161.335 ±(99.9%) 567.129 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 161.335, 270.556), stdev = 147.282
[info]   CI (99.9%): [≈ 0, 728.463] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 3.000), stdev = 1.342
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 92.17% complete, ETA 00:10:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1578341.948 ops/s
[info] # Warmup Iteration   2: 2657922.687 ops/s
[info] # Warmup Iteration   3: 2937475.427 ops/s
[info] # Warmup Iteration   4: 2895411.715 ops/s
[info] # Warmup Iteration   5: 2941793.550 ops/s
[info] Iteration   1: 2945396.106 ops/s
[info]                  ·gc.alloc.rate:                   1504.088 MB/sec
[info]                  ·gc.alloc.rate.norm:              803.872 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.022 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.636 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 720.790 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 2928897.097 ops/s
[info]                  ·gc.alloc.rate:                   1514.608 MB/sec
[info]                  ·gc.alloc.rate.norm:              813.984 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.045 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2024.778 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1088.161 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 2927802.279 ops/s
[info]                  ·gc.alloc.rate:                   1494.659 MB/sec
[info]                  ·gc.alloc.rate.norm:              803.547 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.056 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1351.377 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 726.516 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 2942102.682 ops/s
[info]                  ·gc.alloc.rate:                   1505.817 MB/sec
[info]                  ·gc.alloc.rate.norm:              805.606 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.022 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1352.788 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 723.736 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 2925697.019 ops/s
[info]                  ·gc.alloc.rate:                   1510.950 MB/sec
[info]                  ·gc.alloc.rate.norm:              812.939 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.034 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1353.365 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 728.154 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson":
[info]   2933979.037 ±(99.9%) 34917.577 ops/s [Average]
[info]   (min, avg, max) = (2925697.019, 2933979.037, 2945396.106), stdev = 9067.984
[info]   CI (99.9%): [2899061.459, 2968896.614] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   1506.024 ±(99.9%) 29.256 MB/sec [Average]
[info]   (min, avg, max) = (1494.659, 1506.024, 1514.608), stdev = 7.598
[info]   CI (99.9%): [1476.768, 1535.280] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   807.990 ±(99.9%) 19.521 B/op [Average]
[info]   (min, avg, max) = (803.547, 807.990, 813.984), stdev = 5.070
[info]   CI (99.9%): [788.469, 827.511] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   0.067 ±(99.9%) 0.104 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.067, 0.104), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.171] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   0.036 ±(99.9%) 0.056 B/op [Average]
[info]   (min, avg, max) = (0.022, 0.036, 0.056), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   1486.189 ±(99.9%) 1159.375 MB/sec [Average]
[info]   (min, avg, max) = (1348.636, 1486.189, 2024.778), stdev = 301.086
[info]   CI (99.9%): [326.814, 2645.563] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   797.471 ±(99.9%) 625.824 B/op [Average]
[info]   (min, avg, max) = (720.790, 797.471, 1088.161), stdev = 162.524
[info]   CI (99.9%): [171.648, 1423.295] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readPlayJson:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 3.000), stdev = 0.707
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 92.37% complete, ETA 00:10:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2644437.310 ops/s
[info] # Warmup Iteration   2: 3892418.156 ops/s
[info] # Warmup Iteration   3: 4106683.325 ops/s
[info] # Warmup Iteration   4: 4134053.349 ops/s
[info] # Warmup Iteration   5: 4114566.760 ops/s
[info] Iteration   1: 4063353.998 ops/s
[info]                  ·gc.alloc.rate:                   1966.365 MB/sec
[info]                  ·gc.alloc.rate.norm:              761.869 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.048 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2021.473 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 783.221 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 4127500.998 ops/s
[info]                  ·gc.alloc.rate:                   1983.841 MB/sec
[info]                  ·gc.alloc.rate.norm:              756.178 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.032 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2024.830 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 771.802 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 4134453.276 ops/s
[info]                  ·gc.alloc.rate:                   1986.830 MB/sec
[info]                  ·gc.alloc.rate.norm:              756.452 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.016 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2026.731 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 771.643 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 4112578.481 ops/s
[info]                  ·gc.alloc.rate:                   1976.306 MB/sec
[info]                  ·gc.alloc.rate.norm:              756.431 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.032 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1352.721 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 517.754 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 4111194.489 ops/s
[info]                  ·gc.alloc.rate:                   1993.643 MB/sec
[info]                  ·gc.alloc.rate.norm:              763.298 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.333 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.128 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2031.544 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 777.809 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readUPickle":
[info]   4109816.248 ±(99.9%) 106989.773 ops/s [Average]
[info]   (min, avg, max) = (4063353.998, 4109816.248, 4134453.276), stdev = 27784.904
[info]   CI (99.9%): [4002826.475, 4216806.022] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readUPickle:·gc.alloc.rate":
[info]   1981.397 ±(99.9%) 40.263 MB/sec [Average]
[info]   (min, avg, max) = (1966.365, 1981.397, 1993.643), stdev = 10.456
[info]   CI (99.9%): [1941.134, 2021.660] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readUPickle:·gc.alloc.rate.norm":
[info]   758.846 ±(99.9%) 13.289 B/op [Average]
[info]   (min, avg, max) = (756.178, 758.846, 763.298), stdev = 3.451
[info]   CI (99.9%): [745.557, 772.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readUPickle:·gc.churn.PS_Eden_Space":
[info]   0.133 ±(99.9%) 0.445 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.133, 0.333), stdev = 0.116
[info]   CI (99.9%): [≈ 0, 0.578] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   0.051 ±(99.9%) 0.170 B/op [Average]
[info]   (min, avg, max) = (0.016, 0.051, 0.128), stdev = 0.044
[info]   CI (99.9%): [≈ 0, 0.221] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space":
[info]   1891.460 ±(99.9%) 1159.760 MB/sec [Average]
[info]   (min, avg, max) = (1352.721, 1891.460, 2031.544), stdev = 301.186
[info]   CI (99.9%): [731.699, 3051.220] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   724.446 ±(99.9%) 445.302 B/op [Average]
[info]   (min, avg, max) = (517.754, 724.446, 783.221), stdev = 115.644
[info]   CI (99.9%): [279.144, 1169.748] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readUPickle:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.readUPickle:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 92.57% complete, ETA 00:10:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1226183.317 ops/s
[info] # Warmup Iteration   2: 2212454.509 ops/s
[info] # Warmup Iteration   3: 2276282.108 ops/s
[info] # Warmup Iteration   4: 2273245.922 ops/s
[info] # Warmup Iteration   5: 2254676.121 ops/s
[info] Iteration   1: 2279206.816 ops/s
[info]                  ·gc.alloc.rate:                   561.041 MB/sec
[info]                  ·gc.alloc.rate.norm:              387.511 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.166 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.115 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.957 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 465.502 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 2275545.457 ops/s
[info]                  ·gc.alloc.rate:                   560.993 MB/sec
[info]                  ·gc.alloc.rate.norm:              388.078 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 466.260 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 2282115.337 ops/s
[info]                  ·gc.alloc.rate:      545.185 MB/sec
[info]                  ·gc.alloc.rate.norm: 376.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 2280368.486 ops/s
[info]                  ·gc.alloc.rate:                   562.800 MB/sec
[info]                  ·gc.alloc.rate.norm:              388.511 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.014 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.015 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 465.284 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 2262582.866 ops/s
[info]                  ·gc.alloc.rate:                   563.363 MB/sec
[info]                  ·gc.alloc.rate.norm:              391.951 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.014 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.690 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 469.406 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce":
[info]   2275963.793 ±(99.9%) 30257.843 ops/s [Average]
[info]   (min, avg, max) = (2262582.866, 2275963.793, 2282115.337), stdev = 7857.866
[info]   CI (99.9%): [2245705.949, 2306221.636] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:·gc.alloc.rate":
[info]   558.676 ±(99.9%) 29.322 MB/sec [Average]
[info]   (min, avg, max) = (545.185, 558.676, 563.363), stdev = 7.615
[info]   CI (99.9%): [529.355, 587.998] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   386.410 ±(99.9%) 23.381 B/op [Average]
[info]   (min, avg, max) = (376.000, 386.410, 391.951), stdev = 6.072
[info]   CI (99.9%): [363.029, 409.791] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   0.042 ±(99.9%) 0.272 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.166), stdev = 0.071
[info]   CI (99.9%): [≈ 0, 0.313] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.029 ±(99.9%) 0.188 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.115), stdev = 0.049
[info]   CI (99.9%): [≈ 0, 0.216] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   539.335 ±(99.9%) 1160.959 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 539.335, 674.690), stdev = 301.497
[info]   CI (99.9%): [≈ 0, 1700.293] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   373.290 ±(99.9%) 803.561 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 373.290, 469.406), stdev = 208.682
[info]   CI (99.9%): [≈ 0, 1176.852] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeCirce:·gc.time":
[info]   4.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 92.77% complete, ETA 00:09:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.811 ops/s
[info] # Warmup Iteration   2: 5356832.442 ops/s
[info] # Warmup Iteration   3: 5843144.840 ops/s
[info] # Warmup Iteration   4: 5980973.218 ops/s
[info] # Warmup Iteration   5: 5982807.906 ops/s
[info] Iteration   1: 5978420.457 ops/s
[info]                  ·gc.alloc.rate:                   590.532 MB/sec
[info]                  ·gc.alloc.rate.norm:              155.492 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3.966 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.044 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      670.676 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 176.595 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 5898500.889 ops/s
[info]                  ·gc.alloc.rate:                   586.096 MB/sec
[info]                  ·gc.alloc.rate.norm:              156.360 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.006 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      670.254 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 178.812 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 5947181.521 ops/s
[info]                  ·gc.alloc.rate:                   587.578 MB/sec
[info]                  ·gc.alloc.rate.norm:              155.516 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      670.056 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 177.345 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 5960809.783 ops/s
[info]                  ·gc.alloc.rate:                   595.569 MB/sec
[info]                  ·gc.alloc.rate.norm:              157.268 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.011 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      669.393 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 176.762 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 6002097.516 ops/s
[info]                  ·gc.alloc.rate:      579.576 MB/sec
[info]                  ·gc.alloc.rate.norm: 152.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava":
[info]   5957402.033 ±(99.9%) 149443.645 ops/s [Average]
[info]   (min, avg, max) = (5898500.889, 5957402.033, 6002097.516), stdev = 38810.040
[info]   CI (99.9%): [5807958.389, 6106845.678] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   587.870 ±(99.9%) 22.649 MB/sec [Average]
[info]   (min, avg, max) = (579.576, 587.870, 595.569), stdev = 5.882
[info]   CI (99.9%): [565.221, 610.519] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   155.327 ±(99.9%) 7.693 B/op [Average]
[info]   (min, avg, max) = (152.000, 155.327, 157.268), stdev = 1.998
[info]   CI (99.9%): [147.634, 163.021] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   0.806 ±(99.9%) 6.804 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.806, 3.966), stdev = 1.767
[info]   CI (99.9%): [≈ 0, 7.610] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   0.212 ±(99.9%) 1.791 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.212, 1.044), stdev = 0.465
[info]   CI (99.9%): [≈ 0, 2.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   536.076 ±(99.9%) 1153.945 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 536.076, 670.676), stdev = 299.676
[info]   CI (99.9%): [≈ 0, 1690.021] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   141.903 ±(99.9%) 305.475 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 141.903, 178.812), stdev = 79.331
[info]   CI (99.9%): [≈ 0, 447.378] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 3.000), stdev = 1.095
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 92.97% complete, ETA 00:09:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1618096.755 ops/s
[info] # Warmup Iteration   2: 3435770.053 ops/s
[info] # Warmup Iteration   3: 3414376.463 ops/s
[info] # Warmup Iteration   4: 3448115.644 ops/s
[info] # Warmup Iteration   5: 3330864.867 ops/s
[info] Iteration   1: 3479197.880 ops/s
[info]                  ·gc.alloc.rate:                   943.123 MB/sec
[info]                  ·gc.alloc.rate.norm:              426.634 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.483 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 304.660 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 3458069.301 ops/s
[info]                  ·gc.alloc.rate:                   929.080 MB/sec
[info]                  ·gc.alloc.rate.norm:              422.866 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.455 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 306.520 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 3267726.006 ops/s
[info]                  ·gc.alloc.rate:                   902.739 MB/sec
[info]                  ·gc.alloc.rate.norm:              434.864 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.040 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.087 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 649.395 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 3392335.270 ops/s
[info]                  ·gc.alloc.rate:                   914.508 MB/sec
[info]                  ·gc.alloc.rate.norm:              424.128 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.717 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 312.918 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 3396150.401 ops/s
[info]                  ·gc.alloc.rate:                   913.708 MB/sec
[info]                  ·gc.alloc.rate.norm:              423.465 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.429 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 312.569 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala":
[info]   3398695.771 ±(99.9%) 317566.202 ops/s [Average]
[info]   (min, avg, max) = (3267726.006, 3398695.771, 3479197.880), stdev = 82470.934
[info]   CI (99.9%): [3081129.569, 3716261.974] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   920.632 ±(99.9%) 60.358 MB/sec [Average]
[info]   (min, avg, max) = (902.739, 920.632, 943.123), stdev = 15.675
[info]   CI (99.9%): [860.274, 980.989] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   426.392 ±(99.9%) 19.056 B/op [Average]
[info]   (min, avg, max) = (422.866, 426.392, 434.864), stdev = 4.949
[info]   CI (99.9%): [407.336, 445.448] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.017 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.083), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.160] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.008 ±(99.9%) 0.069 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.040), stdev = 0.018
[info]   CI (99.9%): [≈ 0, 0.077] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   808.834 ±(99.9%) 1160.783 MB/sec [Average]
[info]   (min, avg, max) = (673.455, 808.834, 1348.087), stdev = 301.452
[info]   CI (99.9%): [≈ 0, 1969.618] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   377.212 ±(99.9%) 586.062 B/op [Average]
[info]   (min, avg, max) = (304.660, 377.212, 649.395), stdev = 152.198
[info]   CI (99.9%): [≈ 0, 963.274] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 93.17% complete, ETA 00:09:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4348970.219 ops/s
[info] # Warmup Iteration   2: 5187799.502 ops/s
[info] # Warmup Iteration   3: 5313236.831 ops/s
[info] # Warmup Iteration   4: 5335670.843 ops/s
[info] # Warmup Iteration   5: 5489123.906 ops/s
[info] Iteration   1: 5432129.037 ops/s
[info]                  ·gc.alloc.rate:                   541.611 MB/sec
[info]                  ·gc.alloc.rate.norm:              156.926 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.782 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 195.511 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 5436979.585 ops/s
[info]                  ·gc.alloc.rate:                   545.880 MB/sec
[info]                  ·gc.alloc.rate.norm:              158.034 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2.696 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.780 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.745 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 195.341 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 5337406.929 ops/s
[info]                  ·gc.alloc.rate:                   539.609 MB/sec
[info]                  ·gc.alloc.rate.norm:              159.116 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.006 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.150 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 198.789 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 5458450.116 ops/s
[info]                  ·gc.alloc.rate:                   552.422 MB/sec
[info]                  ·gc.alloc.rate.norm:              159.297 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.068 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 194.375 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 5468388.863 ops/s
[info]                  ·gc.alloc.rate:      528.020 MB/sec
[info]                  ·gc.alloc.rate.norm: 152.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala":
[info]   5426670.906 ±(99.9%) 200588.833 ops/s [Average]
[info]   (min, avg, max) = (5337406.929, 5426670.906, 5468388.863), stdev = 52092.283
[info]   CI (99.9%): [5226082.073, 5627259.739] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   541.508 ±(99.9%) 34.643 MB/sec [Average]
[info]   (min, avg, max) = (528.020, 541.508, 552.422), stdev = 8.997
[info]   CI (99.9%): [506.865, 576.152] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   157.075 ±(99.9%) 11.520 B/op [Average]
[info]   (min, avg, max) = (152.000, 157.075, 159.297), stdev = 2.992
[info]   CI (99.9%): [145.555, 168.595] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.543 ±(99.9%) 4.633 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.543, 2.696), stdev = 1.203
[info]   CI (99.9%): [≈ 0, 5.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.157 ±(99.9%) 1.341 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.157, 0.780), stdev = 0.348
[info]   CI (99.9%): [≈ 0, 1.499] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   539.549 ±(99.9%) 1161.420 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 539.549, 674.782), stdev = 301.617
[info]   CI (99.9%): [≈ 0, 1700.969] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   156.803 ±(99.9%) 337.592 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 156.803, 198.789), stdev = 87.672
[info]   CI (99.9%): [≈ 0, 494.395] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 3.000), stdev = 1.140
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 93.37% complete, ETA 00:08:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5614973.568 ops/s
[info] # Warmup Iteration   2: 6440915.433 ops/s
[info] # Warmup Iteration   3: 6172250.716 ops/s
[info] # Warmup Iteration   4: 6488017.043 ops/s
[info] # Warmup Iteration   5: 6514376.092 ops/s
[info] Iteration   1: 6520906.484 ops/s
[info]                  ·gc.alloc.rate:      0.005 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 6504998.996 ops/s
[info]                  ·gc.alloc.rate:      0.451 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.109 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 6465159.152 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 6516078.895 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 6518283.199 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc":
[info]   6505085.345 ±(99.9%) 89054.378 ops/s [Average]
[info]   (min, avg, max) = (6465159.152, 6505085.345, 6520906.484), stdev = 23127.139
[info]   CI (99.9%): [6416030.967, 6594139.723] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.091 ±(99.9%) 0.774 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.091, 0.451), stdev = 0.201
[info]   CI (99.9%): [≈ 0, 0.866] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.022 ±(99.9%) 0.187 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.022, 0.109), stdev = 0.049
[info]   CI (99.9%): [≈ 0, 0.209] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 93.57% complete, ETA 00:08:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2010617.804 ops/s
[info] # Warmup Iteration   2: 3476565.598 ops/s
[info] # Warmup Iteration   3: 3644178.939 ops/s
[info] # Warmup Iteration   4: 3674926.101 ops/s
[info] # Warmup Iteration   5: 3539963.490 ops/s
[info] Iteration   1: 3671504.099 ops/s
[info]                  ·gc.alloc.rate:                   1047.381 MB/sec
[info]                  ·gc.alloc.rate.norm:              449.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.054 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.196 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 577.976 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 3692052.299 ops/s
[info]                  ·gc.alloc.rate:                   1034.652 MB/sec
[info]                  ·gc.alloc.rate.norm:              441.082 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 287.377 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 3695721.198 ops/s
[info]                  ·gc.alloc.rate:                   1050.823 MB/sec
[info]                  ·gc.alloc.rate.norm:              447.528 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.891 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 574.470 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 3591859.854 ops/s
[info]                  ·gc.alloc.rate:                   1001.856 MB/sec
[info]                  ·gc.alloc.rate.norm:              439.026 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.738 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 295.678 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 3638370.159 ops/s
[info]                  ·gc.alloc.rate:                   1028.321 MB/sec
[info]                  ·gc.alloc.rate.norm:              444.906 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.054 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.742 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 584.402 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson":
[info]   3657901.522 ±(99.9%) 167011.106 ops/s [Average]
[info]   (min, avg, max) = (3591859.854, 3657901.522, 3695721.198), stdev = 43372.254
[info]   CI (99.9%): [3490890.416, 3824912.628] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   1032.607 ±(99.9%) 75.020 MB/sec [Average]
[info]   (min, avg, max) = (1001.856, 1032.607, 1050.823), stdev = 19.482
[info]   CI (99.9%): [957.587, 1107.627] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   444.311 ±(99.9%) 16.245 B/op [Average]
[info]   (min, avg, max) = (439.026, 444.311, 449.016), stdev = 4.219
[info]   CI (99.9%): [428.066, 460.557] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   0.050 ±(99.9%) 0.263 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.125), stdev = 0.068
[info]   CI (99.9%): [≈ 0, 0.313] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   0.022 ±(99.9%) 0.113 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.022, 0.054), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.135] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   1079.334 ±(99.9%) 1423.331 MB/sec [Average]
[info]   (min, avg, max) = (674.104, 1079.334, 1350.742), stdev = 369.635
[info]   CI (99.9%): [≈ 0, 2502.666] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   463.981 ±(99.9%) 606.457 B/op [Average]
[info]   (min, avg, max) = (287.377, 463.981, 584.402), stdev = 157.495
[info]   CI (99.9%): [≈ 0, 1070.438] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writePlayJson:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 93.78% complete, ETA 00:08:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 358405.078 ops/s
[info] # Warmup Iteration   2: 419164.506 ops/s
[info] # Warmup Iteration   3: 431680.288 ops/s
[info] # Warmup Iteration   4: 437179.569 ops/s
[info] # Warmup Iteration   5: 426117.158 ops/s
[info] Iteration   1: 437008.347 ops/s
[info]                  ·gc.alloc.rate:      201.276 MB/sec
[info]                  ·gc.alloc.rate.norm: 724.961 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 434410.746 ops/s
[info]                  ·gc.alloc.rate:                   209.110 MB/sec
[info]                  ·gc.alloc.rate.norm:              757.415 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      511.745 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1853.589 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 440171.840 ops/s
[info]                  ·gc.alloc.rate:      201.331 MB/sec
[info]                  ·gc.alloc.rate.norm: 720.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 438435.196 ops/s
[info]                  ·gc.alloc.rate:      203.275 MB/sec
[info]                  ·gc.alloc.rate.norm: 729.805 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 439421.113 ops/s
[info]                  ·gc.alloc.rate:                   209.758 MB/sec
[info]                  ·gc.alloc.rate.norm:              751.271 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      511.617 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1832.411 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeUPickle":
[info]   437889.448 ±(99.9%) 8766.214 ops/s [Average]
[info]   (min, avg, max) = (434410.746, 437889.448, 440171.840), stdev = 2276.558
[info]   CI (99.9%): [429123.235, 446655.662] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeUPickle:·gc.alloc.rate":
[info]   204.950 ±(99.9%) 16.088 MB/sec [Average]
[info]   (min, avg, max) = (201.276, 204.950, 209.758), stdev = 4.178
[info]   CI (99.9%): [188.862, 221.038] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeUPickle:·gc.alloc.rate.norm":
[info]   736.690 ±(99.9%) 64.018 B/op [Average]
[info]   (min, avg, max) = (720.001, 736.690, 757.415), stdev = 16.625
[info]   CI (99.9%): [672.672, 800.709] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space":
[info]   204.673 ±(99.9%) 1079.179 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 204.673, 511.745), stdev = 280.259
[info]   CI (99.9%): [≈ 0, 1283.852] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   737.200 ±(99.9%) 3887.150 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 737.200, 1853.589), stdev = 1009.480
[info]   CI (99.9%): [≈ 0, 4624.350] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeUPickle:·gc.count":
[info]   2.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.000), stdev = 0.548
[info]   CI (99.9%): [2.000, 2.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfAsciiCharsBenchmark.writeUPickle:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 3.000), stdev = 1.414
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 93.98% complete, ETA 00:08:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 231521.671 ops/s
[info] # Warmup Iteration   2: 838971.357 ops/s
[info] # Warmup Iteration   3: 876798.960 ops/s
[info] # Warmup Iteration   4: 873636.723 ops/s
[info] # Warmup Iteration   5: 887802.758 ops/s
[info] Iteration   1: 887972.763 ops/s
[info]                  ·gc.alloc.rate:                   1463.803 MB/sec
[info]                  ·gc.alloc.rate.norm:              2594.216 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.111 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1344.383 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2382.575 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 893952.814 ops/s
[info]                  ·gc.alloc.rate:                   1464.616 MB/sec
[info]                  ·gc.alloc.rate.norm:              2578.902 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.110 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1344.772 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2367.881 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 878112.875 ops/s
[info]                  ·gc.alloc.rate:                   1449.851 MB/sec
[info]                  ·gc.alloc.rate.norm:              2598.714 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.456 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2411.595 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 888311.678 ops/s
[info]                  ·gc.alloc.rate:                   1466.817 MB/sec
[info]                  ·gc.alloc.rate.norm:              2599.129 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.148 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1346.752 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2386.378 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 896987.256 ops/s
[info]                  ·gc.alloc.rate:                   1481.163 MB/sec
[info]                  ·gc.alloc.rate.norm:              2598.845 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.073 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.254 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2365.643 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce":
[info]   889067.477 ±(99.9%) 27791.564 ops/s [Average]
[info]   (min, avg, max) = (878112.875, 889067.477, 896987.256), stdev = 7217.381
[info]   CI (99.9%): [861275.913, 916859.041] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:·gc.alloc.rate":
[info]   1465.250 ±(99.9%) 42.849 MB/sec [Average]
[info]   (min, avg, max) = (1449.851, 1465.250, 1481.163), stdev = 11.128
[info]   CI (99.9%): [1422.401, 1508.099] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   2593.961 ±(99.9%) 33.347 B/op [Average]
[info]   (min, avg, max) = (2578.902, 2593.961, 2599.129), stdev = 8.660
[info]   CI (99.9%): [2560.614, 2627.308] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   0.050 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.083), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.172] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.088 ±(99.9%) 0.215 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.088, 0.148), stdev = 0.056
[info]   CI (99.9%): [≈ 0, 0.304] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1345.923 ±(99.9%) 6.099 MB/sec [Average]
[info]   (min, avg, max) = (1344.383, 1345.923, 1348.254), stdev = 1.584
[info]   CI (99.9%): [1339.825, 1352.022] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   2382.814 ±(99.9%) 70.975 B/op [Average]
[info]   (min, avg, max) = (2365.643, 2382.814, 2411.595), stdev = 18.432
[info]   CI (99.9%): [2311.839, 2453.790] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readCirce:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 94.18% complete, ETA 00:07:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.696 ops/s
[info] # Warmup Iteration   2: 1663297.284 ops/s
[info] # Warmup Iteration   3: 1786831.401 ops/s
[info] # Warmup Iteration   4: 1799482.776 ops/s
[info] # Warmup Iteration   5: 1798616.151 ops/s
[info] Iteration   1: 1808268.917 ops/s
[info]                  ·gc.alloc.rate:      505.473 MB/sec
[info]                  ·gc.alloc.rate.norm: 440.031 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1801114.458 ops/s
[info]                  ·gc.alloc.rate:                   517.907 MB/sec
[info]                  ·gc.alloc.rate.norm:              452.619 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3.867 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3.379 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      671.363 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 586.730 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 1801729.043 ops/s
[info]                  ·gc.alloc.rate:                   519.263 MB/sec
[info]                  ·gc.alloc.rate.norm:              453.662 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      670.027 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 585.379 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 1802156.993 ops/s
[info]                  ·gc.alloc.rate:                   526.032 MB/sec
[info]                  ·gc.alloc.rate.norm:              459.457 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.018 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      670.043 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 585.242 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 1808714.927 ops/s
[info]                  ·gc.alloc.rate:      505.576 MB/sec
[info]                  ·gc.alloc.rate.norm: 440.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava":
[info]   1804396.868 ±(99.9%) 14477.980 ops/s [Average]
[info]   (min, avg, max) = (1801114.458, 1804396.868, 1808714.927), stdev = 3759.885
[info]   CI (99.9%): [1789918.888, 1818874.848] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.alloc.rate":
[info]   514.850 ±(99.9%) 34.858 MB/sec [Average]
[info]   (min, avg, max) = (505.473, 514.850, 526.032), stdev = 9.053
[info]   CI (99.9%): [479.992, 549.708] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.alloc.rate.norm":
[info]   449.154 ±(99.9%) 33.652 B/op [Average]
[info]   (min, avg, max) = (440.000, 449.154, 459.457), stdev = 8.739
[info]   CI (99.9%): [415.502, 482.806] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space":
[info]   0.778 ±(99.9%) 6.650 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.778, 3.867), stdev = 1.727
[info]   CI (99.9%): [≈ 0, 7.427] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm":
[info]   0.679 ±(99.9%) 5.812 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.679, 3.379), stdev = 1.509
[info]   CI (99.9%): [≈ 0, 6.491] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   402.287 ±(99.9%) 1414.095 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 402.287, 671.363), stdev = 367.236
[info]   CI (99.9%): [≈ 0, 1816.382] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   351.470 ±(99.9%) 1235.469 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 351.470, 586.730), stdev = 320.847
[info]   CI (99.9%): [≈ 0, 1586.940] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 3.000), stdev = 1.225
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 94.38% complete, ETA 00:07:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 278412.319 ops/s
[info] # Warmup Iteration   2: 1179287.401 ops/s
[info] # Warmup Iteration   3: 1213631.144 ops/s
[info] # Warmup Iteration   4: 1225283.371 ops/s
[info] # Warmup Iteration   5: 1218486.387 ops/s
[info] Iteration   1: 1212051.900 ops/s
[info]                  ·gc.alloc.rate:                   769.298 MB/sec
[info]                  ·gc.alloc.rate.norm:              999.162 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.054 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.983 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 875.366 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 1220755.609 ops/s
[info]                  ·gc.alloc.rate:                   764.541 MB/sec
[info]                  ·gc.alloc.rate.norm:              985.580 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.220 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 869.146 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   3: 1197878.336 ops/s
[info]                  ·gc.alloc.rate:                   787.322 MB/sec
[info]                  ·gc.alloc.rate.norm:              1034.654 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.146 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.191 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1347.991 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1771.455 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 1198743.600 ops/s
[info]                  ·gc.alloc.rate:                   762.302 MB/sec
[info]                  ·gc.alloc.rate.norm:              1000.967 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.137 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.067 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 885.106 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 1219226.070 ops/s
[info]                  ·gc.alloc.rate:                   772.460 MB/sec
[info]                  ·gc.alloc.rate.norm:              997.223 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.065 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 870.197 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala":
[info]   1209731.103 ±(99.9%) 42106.643 ops/s [Average]
[info]   (min, avg, max) = (1197878.336, 1209731.103, 1220755.609), stdev = 10934.961
[info]   CI (99.9%): [1167624.460, 1251837.746] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   771.185 ±(99.9%) 37.955 MB/sec [Average]
[info]   (min, avg, max) = (762.302, 771.185, 787.322), stdev = 9.857
[info]   CI (99.9%): [733.230, 809.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   1003.517 ±(99.9%) 70.907 B/op [Average]
[info]   (min, avg, max) = (985.580, 1003.517, 1034.654), stdev = 18.414
[info]   CI (99.9%): [932.610, 1074.425] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.058 ±(99.9%) 0.250 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.058, 0.146), stdev = 0.065
[info]   CI (99.9%): [≈ 0, 0.308] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.076 ±(99.9%) 0.328 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.076, 0.191), stdev = 0.085
[info]   CI (99.9%): [≈ 0, 0.405] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   808.865 ±(99.9%) 1160.510 MB/sec [Average]
[info]   (min, avg, max) = (673.983, 808.865, 1347.991), stdev = 301.381
[info]   CI (99.9%): [≈ 0, 1969.375] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1054.254 ±(99.9%) 1544.021 B/op [Average]
[info]   (min, avg, max) = (869.146, 1054.254, 1771.455), stdev = 400.977
[info]   CI (99.9%): [≈ 0, 2598.274] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 3.000), stdev = 1.095
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 94.58% complete, ETA 00:07:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 958359.032 ops/s
[info] # Warmup Iteration   2: 1575979.008 ops/s
[info] # Warmup Iteration   3: 1605745.468 ops/s
[info] # Warmup Iteration   4: 1580828.338 ops/s
[info] # Warmup Iteration   5: 1661378.147 ops/s
[info] Iteration   1: 1663239.979 ops/s
[info]                  ·gc.alloc.rate:                   482.451 MB/sec
[info]                  ·gc.alloc.rate.norm:              456.619 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.039 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.660 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 638.537 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 1671274.684 ops/s
[info]                  ·gc.alloc.rate:      468.580 MB/sec
[info]                  ·gc.alloc.rate.norm: 441.336 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1656861.591 ops/s
[info]                  ·gc.alloc.rate:                   482.382 MB/sec
[info]                  ·gc.alloc.rate.norm:              458.264 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2.550 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.422 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.727 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 640.993 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 1662757.795 ops/s
[info]                  ·gc.alloc.rate:                   487.198 MB/sec
[info]                  ·gc.alloc.rate.norm:              461.240 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.991 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 638.081 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 1664711.016 ops/s
[info]                  ·gc.alloc.rate:      465.308 MB/sec
[info]                  ·gc.alloc.rate.norm: 440.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala":
[info]   1663769.013 ±(99.9%) 19844.587 ops/s [Average]
[info]   (min, avg, max) = (1656861.591, 1663769.013, 1671274.684), stdev = 5153.576
[info]   CI (99.9%): [1643924.426, 1683613.600] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   477.184 ±(99.9%) 37.039 MB/sec [Average]
[info]   (min, avg, max) = (465.308, 477.184, 487.198), stdev = 9.619
[info]   CI (99.9%): [440.145, 514.223] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   451.492 ±(99.9%) 38.620 B/op [Average]
[info]   (min, avg, max) = (440.000, 451.492, 461.240), stdev = 10.030
[info]   CI (99.9%): [412.872, 490.112] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.518 ±(99.9%) 4.374 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.518, 2.550), stdev = 1.136
[info]   CI (99.9%): [≈ 0, 4.892] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.492 ±(99.9%) 4.155 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.492, 2.422), stdev = 1.079
[info]   CI (99.9%): [≈ 0, 4.647] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   404.676 ±(99.9%) 1422.492 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 404.676, 674.727), stdev = 369.417
[info]   CI (99.9%): [≈ 0, 1827.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   383.522 ±(99.9%) 1348.141 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 383.522, 640.993), stdev = 350.108
[info]   CI (99.9%): [≈ 0, 1731.663] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 3.000), stdev = 1.304
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 94.78% complete, ETA 00:07:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 334322.213 ops/s
[info] # Warmup Iteration   2: 1199199.105 ops/s
[info] # Warmup Iteration   3: 1245086.995 ops/s
[info] # Warmup Iteration   4: 1242341.807 ops/s
[info] # Warmup Iteration   5: 1228601.134 ops/s
[info] Iteration   1: 1245335.282 ops/s
[info]                  ·gc.alloc.rate:                   818.270 MB/sec
[info]                  ·gc.alloc.rate.norm:              1034.287 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.344 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 851.102 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 1233759.922 ops/s
[info]                  ·gc.alloc.rate:                   822.412 MB/sec
[info]                  ·gc.alloc.rate.norm:              1048.930 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.027 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.573 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 859.096 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 1246927.200 ops/s
[info]                  ·gc.alloc.rate:                   820.850 MB/sec
[info]                  ·gc.alloc.rate.norm:              1036.191 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.026 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.366 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 850.016 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 1242037.385 ops/s
[info]                  ·gc.alloc.rate:                   826.294 MB/sec
[info]                  ·gc.alloc.rate.norm:              1047.151 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.053 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 854.190 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 1245259.515 ops/s
[info]                  ·gc.alloc.rate:                   835.931 MB/sec
[info]                  ·gc.alloc.rate.norm:              1056.758 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.026 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.270 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1704.440 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson":
[info]   1242663.861 ±(99.9%) 20350.441 ops/s [Average]
[info]   (min, avg, max) = (1233759.922, 1242663.861, 1246927.200), stdev = 5284.945
[info]   CI (99.9%): [1222313.420, 1263014.302] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.alloc.rate":
[info]   824.752 ±(99.9%) 26.544 MB/sec [Average]
[info]   (min, avg, max) = (818.270, 824.752, 835.931), stdev = 6.893
[info]   CI (99.9%): [798.207, 851.296] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   1044.663 ±(99.9%) 36.025 B/op [Average]
[info]   (min, avg, max) = (1034.287, 1044.663, 1056.758), stdev = 9.356
[info]   CI (99.9%): [1008.638, 1080.688] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   0.021 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.077] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   0.026 ±(99.9%) 0.072 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.026, 0.053), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.098] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   808.517 ±(99.9%) 1161.860 MB/sec [Average]
[info]   (min, avg, max) = (673.344, 808.517, 1348.270), stdev = 301.731
[info]   CI (99.9%): [≈ 0, 1970.377] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   1023.769 ±(99.9%) 1465.258 B/op [Average]
[info]   (min, avg, max) = (850.016, 1023.769, 1704.440), stdev = 380.523
[info]   CI (99.9%): [≈ 0, 2489.027] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 94.98% complete, ETA 00:06:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 645652.738 ops/s
[info] # Warmup Iteration   2: 1049068.420 ops/s
[info] # Warmup Iteration   3: 1142073.369 ops/s
[info] # Warmup Iteration   4: 1151624.178 ops/s
[info] # Warmup Iteration   5: 1144911.637 ops/s
[info] Iteration   1: 1117367.000 ops/s
[info]                  ·gc.alloc.rate:                   1212.520 MB/sec
[info]                  ·gc.alloc.rate.norm:              1708.232 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.088 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.335 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1895.346 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 1141604.349 ops/s
[info]                  ·gc.alloc.rate:                   1210.714 MB/sec
[info]                  ·gc.alloc.rate.norm:              1669.504 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.664 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 927.565 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 1145591.790 ops/s
[info]                  ·gc.alloc.rate:                   1228.850 MB/sec
[info]                  ·gc.alloc.rate.norm:              1688.172 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.172 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.657 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1848.640 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 1152905.258 ops/s
[info]                  ·gc.alloc.rate:                   1248.189 MB/sec
[info]                  ·gc.alloc.rate.norm:              1704.157 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.085 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1346.088 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1837.819 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 1145386.073 ops/s
[info]                  ·gc.alloc.rate:                   1226.798 MB/sec
[info]                  ·gc.alloc.rate.norm:              1686.234 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.086 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1347.203 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1851.731 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readUPickle":
[info]   1140570.894 ±(99.9%) 52375.148 ops/s [Average]
[info]   (min, avg, max) = (1117367.000, 1140570.894, 1152905.258), stdev = 13601.660
[info]   CI (99.9%): [1088195.746, 1192946.042] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readUPickle:·gc.alloc.rate":
[info]   1225.414 ±(99.9%) 58.232 MB/sec [Average]
[info]   (min, avg, max) = (1210.714, 1225.414, 1248.189), stdev = 15.123
[info]   CI (99.9%): [1167.182, 1283.646] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readUPickle:·gc.alloc.rate.norm":
[info]   1691.260 ±(99.9%) 59.732 B/op [Average]
[info]   (min, avg, max) = (1669.504, 1691.260, 1708.232), stdev = 15.512
[info]   CI (99.9%): [1631.528, 1750.992] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readUPickle:·gc.churn.PS_Eden_Space":
[info]   0.062 ±(99.9%) 0.170 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.062, 0.125), stdev = 0.044
[info]   CI (99.9%): [≈ 0, 0.232] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   0.086 ±(99.9%) 0.234 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.086, 0.172), stdev = 0.061
[info]   CI (99.9%): [≈ 0, 0.320] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space":
[info]   1211.389 ±(99.9%) 1159.650 MB/sec [Average]
[info]   (min, avg, max) = (672.664, 1211.389, 1347.203), stdev = 301.157
[info]   CI (99.9%): [51.740, 2371.039] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   1672.220 ±(99.9%) 1605.155 B/op [Average]
[info]   (min, avg, max) = (927.565, 1672.220, 1895.346), stdev = 416.854
[info]   CI (99.9%): [67.065, 3277.375] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readUPickle:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.readUPickle:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 95.18% complete, ETA 00:06:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 323953.325 ops/s
[info] # Warmup Iteration   2: 1007908.143 ops/s
[info] # Warmup Iteration   3: 1050525.198 ops/s
[info] # Warmup Iteration   4: 1049928.227 ops/s
[info] # Warmup Iteration   5: 1045563.409 ops/s
[info] Iteration   1: 1053583.124 ops/s
[info]                  ·gc.alloc.rate:                   890.533 MB/sec
[info]                  ·gc.alloc.rate.norm:              1330.283 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.157 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1007.059 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 1049926.616 ops/s
[info]                  ·gc.alloc.rate:                   889.597 MB/sec
[info]                  ·gc.alloc.rate.norm:              1333.722 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.377 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1011.055 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 1050129.632 ops/s
[info]                  ·gc.alloc.rate:                   907.920 MB/sec
[info]                  ·gc.alloc.rate.norm:              1360.472 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.187 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.521 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2022.189 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 1051285.581 ops/s
[info]                  ·gc.alloc.rate:                   889.777 MB/sec
[info]                  ·gc.alloc.rate.norm:              1332.179 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.742 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1010.227 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   5: 1051797.265 ops/s
[info]                  ·gc.alloc.rate:                   888.903 MB/sec
[info]                  ·gc.alloc.rate.norm:              1330.163 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      675.429 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1010.718 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce":
[info]   1051344.444 ±(99.9%) 5680.908 ops/s [Average]
[info]   (min, avg, max) = (1049926.616, 1051344.444, 1053583.124), stdev = 1475.314
[info]   CI (99.9%): [1045663.536, 1057025.352] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:·gc.alloc.rate":
[info]   893.346 ±(99.9%) 31.451 MB/sec [Average]
[info]   (min, avg, max) = (888.903, 893.346, 907.920), stdev = 8.168
[info]   CI (99.9%): [861.895, 924.797] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   1337.364 ±(99.9%) 50.064 B/op [Average]
[info]   (min, avg, max) = (1330.163, 1337.364, 1360.472), stdev = 13.001
[info]   CI (99.9%): [1287.300, 1387.428] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   0.025 ±(99.9%) 0.215 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.125), stdev = 0.056
[info]   CI (99.9%): [≈ 0, 0.240] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.037 ±(99.9%) 0.322 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.187), stdev = 0.084
[info]   CI (99.9%): [≈ 0, 0.360] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   809.645 ±(99.9%) 1162.125 MB/sec [Average]
[info]   (min, avg, max) = (674.157, 809.645, 1349.521), stdev = 301.800
[info]   CI (99.9%): [≈ 0, 1971.770] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   1212.249 ±(99.9%) 1743.466 B/op [Average]
[info]   (min, avg, max) = (1007.059, 1212.249, 2022.189), stdev = 452.773
[info]   CI (99.9%): [≈ 0, 2955.716] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeCirce:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 0.707
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava
[info] # Parameters: (size = 128)
[info] # Run progress: 95.38% complete, ETA 00:06:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 0.675 ops/s
[info] # Warmup Iteration   2: 767734.189 ops/s
[info] # Warmup Iteration   3: 805260.976 ops/s
[info] # Warmup Iteration   4: 818222.998 ops/s
[info] # Warmup Iteration   5: 783915.201 ops/s
[info] Iteration   1: 820013.027 ops/s
[info]                  ·gc.alloc.rate:      212.549 MB/sec
[info]                  ·gc.alloc.rate.norm: 408.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 814682.677 ops/s
[info]                  ·gc.alloc.rate:                   220.659 MB/sec
[info]                  ·gc.alloc.rate.norm:              426.303 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      511.600 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 988.387 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 818150.284 ops/s
[info]                  ·gc.alloc.rate:      212.564 MB/sec
[info]                  ·gc.alloc.rate.norm: 408.957 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 819977.672 ops/s
[info]                  ·gc.alloc.rate:      212.640 MB/sec
[info]                  ·gc.alloc.rate.norm: 408.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 815707.225 ops/s
[info]                  ·gc.alloc.rate:                   224.137 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.453 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      670.851 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1294.346 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava":
[info]   817706.177 ±(99.9%) 9395.854 ops/s [Average]
[info]   (min, avg, max) = (814682.677, 817706.177, 820013.027), stdev = 2440.073
[info]   CI (99.9%): [808310.323, 827102.031] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.alloc.rate":
[info]   216.510 ±(99.9%) 21.233 MB/sec [Average]
[info]   (min, avg, max) = (212.549, 216.510, 224.137), stdev = 5.514
[info]   CI (99.9%): [195.277, 237.743] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm":
[info]   416.743 ±(99.9%) 45.221 B/op [Average]
[info]   (min, avg, max) = (408.001, 416.743, 432.453), stdev = 11.744
[info]   CI (99.9%): [371.522, 461.964] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space":
[info]   236.490 ±(99.9%) 1265.652 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 236.490, 670.851), stdev = 328.686
[info]   CI (99.9%): [≈ 0, 1502.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm":
[info]   456.547 ±(99.9%) 2443.011 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 456.547, 1294.346), stdev = 634.442
[info]   CI (99.9%): [≈ 0, 2899.557] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.count":
[info]   2.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.000), stdev = 0.548
[info]   CI (99.9%): [2.000, 2.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 3.000), stdev = 1.643
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 95.58% complete, ETA 00:05:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 584501.969 ops/s
[info] # Warmup Iteration   2: 1917434.158 ops/s
[info] # Warmup Iteration   3: 2007608.368 ops/s
[info] # Warmup Iteration   4: 2053548.450 ops/s
[info] # Warmup Iteration   5: 2042854.603 ops/s
[info] Iteration   1: 2056803.980 ops/s
[info]                  ·gc.alloc.rate:                   993.043 MB/sec
[info]                  ·gc.alloc.rate.norm:              759.931 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.430 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 516.111 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 2053882.885 ops/s
[info]                  ·gc.alloc.rate:                   1006.202 MB/sec
[info]                  ·gc.alloc.rate.norm:              770.775 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.064 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1347.946 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1032.560 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 2060855.853 ops/s
[info]                  ·gc.alloc.rate:                   994.332 MB/sec
[info]                  ·gc.alloc.rate.norm:              759.308 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.850 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 515.340 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 2052909.473 ops/s
[info]                  ·gc.alloc.rate:                   988.228 MB/sec
[info]                  ·gc.alloc.rate.norm:              757.616 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.032 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      675.108 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 517.566 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 1937389.704 ops/s
[info]                  ·gc.alloc.rate:                   968.308 MB/sec
[info]                  ·gc.alloc.rate.norm:              786.740 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.051 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.705 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1097.434 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala":
[info]   2032368.379 ±(99.9%) 204794.842 ops/s [Average]
[info]   (min, avg, max) = (1937389.704, 2032368.379, 2060855.853), stdev = 53184.570
[info]   CI (99.9%): [1827573.537, 2237163.221] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   990.023 ±(99.9%) 53.224 MB/sec [Average]
[info]   (min, avg, max) = (968.308, 990.023, 1006.202), stdev = 13.822
[info]   CI (99.9%): [936.798, 1043.247] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   766.874 ±(99.9%) 47.201 B/op [Average]
[info]   (min, avg, max) = (757.616, 766.874, 786.740), stdev = 12.258
[info]   CI (99.9%): [719.673, 814.075] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.037 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.083), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.181] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.029 ±(99.9%) 0.112 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.064), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   944.608 ±(99.9%) 1422.645 MB/sec [Average]
[info]   (min, avg, max) = (674.430, 944.608, 1350.705), stdev = 369.456
[info]   CI (99.9%): [≈ 0, 2367.253] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   735.802 ±(99.9%) 1160.535 B/op [Average]
[info]   (min, avg, max) = (515.340, 735.802, 1097.434), stdev = 301.387
[info]   CI (99.9%): [≈ 0, 1896.338] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 95.78% complete, ETA 00:05:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1324492.603 ops/s
[info] # Warmup Iteration   2: 2097559.915 ops/s
[info] # Warmup Iteration   3: 2166160.387 ops/s
[info] # Warmup Iteration   4: 2163963.871 ops/s
[info] # Warmup Iteration   5: 2171145.742 ops/s
[info] Iteration   1: 2201260.946 ops/s
[info]                  ·gc.alloc.rate:      570.668 MB/sec
[info]                  ·gc.alloc.rate.norm: 408.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 2170891.700 ops/s
[info]                  ·gc.alloc.rate:                   585.936 MB/sec
[info]                  ·gc.alloc.rate.norm:              424.889 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2.726 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.977 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.985 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 488.737 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 2187792.542 ops/s
[info]                  ·gc.alloc.rate:                   591.852 MB/sec
[info]                  ·gc.alloc.rate.norm:              425.853 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.349 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 484.493 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 2184045.559 ops/s
[info]                  ·gc.alloc.rate:                   581.048 MB/sec
[info]                  ·gc.alloc.rate.norm:              418.767 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.391 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 485.319 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 2197806.764 ops/s
[info]                  ·gc.alloc.rate:                   584.062 MB/sec
[info]                  ·gc.alloc.rate.norm:              418.215 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.030 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.836 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 481.781 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala":
[info]   2188359.502 ±(99.9%) 46358.046 ops/s [Average]
[info]   (min, avg, max) = (2170891.700, 2188359.502, 2201260.946), stdev = 12039.037
[info]   CI (99.9%): [2142001.456, 2234717.548] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   582.713 ±(99.9%) 30.048 MB/sec [Average]
[info]   (min, avg, max) = (570.668, 582.713, 591.852), stdev = 7.803
[info]   CI (99.9%): [552.665, 612.762] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   419.145 ±(99.9%) 27.445 B/op [Average]
[info]   (min, avg, max) = (408.000, 419.145, 425.853), stdev = 7.128
[info]   CI (99.9%): [391.699, 446.590] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.554 ±(99.9%) 4.678 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.554, 2.726), stdev = 1.215
[info]   CI (99.9%): [≈ 0, 5.231] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.401 ±(99.9%) 3.392 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.401, 1.977), stdev = 0.881
[info]   CI (99.9%): [≈ 0, 3.793] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   538.712 ±(99.9%) 1159.620 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 538.712, 673.985), stdev = 301.150
[info]   CI (99.9%): [≈ 0, 1698.332] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   388.066 ±(99.9%) 835.396 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 388.066, 488.737), stdev = 216.950
[info]   CI (99.9%): [≈ 0, 1223.462] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 3.000), stdev = 1.095
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 95.98% complete, ETA 00:05:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1225579.604 ops/s
[info] # Warmup Iteration   2: 2267866.374 ops/s
[info] # Warmup Iteration   3: 2319110.272 ops/s
[info] # Warmup Iteration   4: 2306903.622 ops/s
[info] # Warmup Iteration   5: 2319701.122 ops/s
[info] Iteration   1: 2317750.461 ops/s
[info]                  ·gc.alloc.rate:      0.254 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.173 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 2318209.064 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 2314589.925 ops/s
[info]                  ·gc.alloc.rate:      0.073 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.050 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 2320220.481 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 2319180.320 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc":
[info]   2317990.050 ±(99.9%) 8181.550 ops/s [Average]
[info]   (min, avg, max) = (2314589.925, 2317990.050, 2320220.481), stdev = 2124.722
[info]   CI (99.9%): [2309808.500, 2326171.599] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   0.066 ±(99.9%) 0.424 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.066, 0.254), stdev = 0.110
[info]   CI (99.9%): [≈ 0, 0.490] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   0.045 ±(99.9%) 0.288 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 0.045, 0.173), stdev = 0.075
[info]   CI (99.9%): [≈ 0, 0.333] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 96.18% complete, ETA 00:05:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 995542.069 ops/s
[info] # Warmup Iteration   2: 1975066.595 ops/s
[info] # Warmup Iteration   3: 2031180.403 ops/s
[info] # Warmup Iteration   4: 2024050.476 ops/s
[info] # Warmup Iteration   5: 2020229.016 ops/s
[info] Iteration   1: 2029309.131 ops/s
[info]                  ·gc.alloc.rate:                   909.811 MB/sec
[info]                  ·gc.alloc.rate.norm:              705.808 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      671.303 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 520.780 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 2025492.067 ops/s
[info]                  ·gc.alloc.rate:                   899.960 MB/sec
[info]                  ·gc.alloc.rate.norm:              699.339 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.016 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      670.756 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 521.230 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 2000278.936 ops/s
[info]                  ·gc.alloc.rate:                   920.314 MB/sec
[info]                  ·gc.alloc.rate.norm:              723.906 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.033 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1342.007 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1055.604 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 2016826.597 ops/s
[info]                  ·gc.alloc.rate:                   896.857 MB/sec
[info]                  ·gc.alloc.rate.norm:              699.940 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      670.752 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 523.479 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 2021246.724 ops/s
[info]                  ·gc.alloc.rate:                   897.645 MB/sec
[info]                  ·gc.alloc.rate.norm:              699.030 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.016 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      670.708 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 522.306 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson":
[info]   2018630.691 ±(99.9%) 43394.248 ops/s [Average]
[info]   (min, avg, max) = (2000278.936, 2018630.691, 2029309.131), stdev = 11269.348
[info]   CI (99.9%): [1975236.443, 2062024.939] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.alloc.rate":
[info]   904.917 ±(99.9%) 38.672 MB/sec [Average]
[info]   (min, avg, max) = (896.857, 904.917, 920.314), stdev = 10.043
[info]   CI (99.9%): [866.246, 943.589] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   705.604 ±(99.9%) 40.821 B/op [Average]
[info]   (min, avg, max) = (699.030, 705.604, 723.906), stdev = 10.601
[info]   CI (99.9%): [664.784, 746.425] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   0.017 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   0.013 ±(99.9%) 0.053 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.013, 0.033), stdev = 0.014
[info]   CI (99.9%): [≈ 0, 0.066] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   805.105 ±(99.9%) 1155.723 MB/sec [Average]
[info]   (min, avg, max) = (670.708, 805.105, 1342.007), stdev = 300.137
[info]   CI (99.9%): [≈ 0, 1960.828] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   628.680 ±(99.9%) 918.995 B/op [Average]
[info]   (min, avg, max) = (520.780, 628.680, 1055.604), stdev = 238.660
[info]   CI (99.9%): [≈ 0, 1547.674] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce
[info] # Run progress: 96.39% complete, ETA 00:04:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1144.235 ops/s
[info] # Warmup Iteration   2: 4827.022 ops/s
[info] # Warmup Iteration   3: 5801.087 ops/s
[info] # Warmup Iteration   4: 6074.171 ops/s
[info] # Warmup Iteration   5: 6084.901 ops/s
[info] Iteration   1: 6095.974 ops/s
[info]                  ·gc.alloc.rate:                   741.865 MB/sec
[info]                  ·gc.alloc.rate.norm:              191538.498 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.122 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     31.498 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.669 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 174189.486 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 6054.530 ops/s
[info]                  ·gc.alloc.rate:                   741.946 MB/sec
[info]                  ·gc.alloc.rate.norm:              192882.737 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.001 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.378 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.687 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 175397.538 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 6062.183 ops/s
[info]                  ·gc.alloc.rate:                   755.390 MB/sec
[info]                  ·gc.alloc.rate.norm:              196134.551 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1347.934 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 349986.449 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 6070.435 ops/s
[info]                  ·gc.alloc.rate:                   744.153 MB/sec
[info]                  ·gc.alloc.rate.norm:              192940.265 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16.190 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.376 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 174849.012 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 6073.199 ops/s
[info]                  ·gc.alloc.rate:                   751.827 MB/sec
[info]                  ·gc.alloc.rate.norm:              194833.938 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5.394 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.376 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 174762.667 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce":
[info]   6071.264 ±(99.9%) 60.195 ops/s [Average]
[info]   (min, avg, max) = (6054.530, 6071.264, 6095.974), stdev = 15.632
[info]   CI (99.9%): [6011.069, 6131.459] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.alloc.rate":
[info]   747.036 ±(99.9%) 23.870 MB/sec [Average]
[info]   (min, avg, max) = (741.865, 747.036, 755.390), stdev = 6.199
[info]   CI (99.9%): [723.166, 770.906] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   193665.998 ±(99.9%) 6974.951 B/op [Average]
[info]   (min, avg, max) = (191538.498, 193665.998, 196134.551), stdev = 1811.373
[info]   CI (99.9%): [186691.047, 200640.949] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   0.041 ±(99.9%) 0.199 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.041, 0.122), stdev = 0.052
[info]   CI (99.9%): [≈ 0, 0.240] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   10.692 ±(99.9%) 51.369 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 10.692, 31.498), stdev = 13.340
[info]   CI (99.9%): [≈ 0, 62.061] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   809.208 ±(99.9%) 1159.647 MB/sec [Average]
[info]   (min, avg, max) = (674.376, 809.208, 1347.934), stdev = 301.157
[info]   CI (99.9%): [≈ 0, 1968.856] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   209837.030 ±(99.9%) 301686.696 B/op [Average]
[info]   (min, avg, max) = (174189.486, 209837.030, 349986.449), stdev = 78347.077
[info]   CI (99.9%): [≈ 0, 511523.727] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readCirce:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 0.837
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala
[info] # Run progress: 96.59% complete, ETA 00:04:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 960.428 ops/s
[info] # Warmup Iteration   2: 14403.683 ops/s
[info] # Warmup Iteration   3: 18738.042 ops/s
[info] # Warmup Iteration   4: 18610.227 ops/s
[info] # Warmup Iteration   5: 18759.761 ops/s
[info] Iteration   1: 18715.578 ops/s
[info]                  ·gc.alloc.rate:                   252.080 MB/sec
[info]                  ·gc.alloc.rate.norm:              21202.740 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.751 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      511.475 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 43020.801 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 18491.225 ops/s
[info]                  ·gc.alloc.rate:      262.988 MB/sec
[info]                  ·gc.alloc.rate.norm: 22382.293 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 18434.240 ops/s
[info]                  ·gc.alloc.rate:                   262.418 MB/sec
[info]                  ·gc.alloc.rate.norm:              22403.595 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.830 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 57612.816 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 18812.731 ops/s
[info]                  ·gc.alloc.rate:      247.141 MB/sec
[info]                  ·gc.alloc.rate.norm: 20678.218 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 18842.793 ops/s
[info]                  ·gc.alloc.rate:      247.367 MB/sec
[info]                  ·gc.alloc.rate.norm: 20664.022 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala":
[info]   18659.313 ±(99.9%) 718.532 ops/s [Average]
[info]   (min, avg, max) = (18434.240, 18659.313, 18842.793), stdev = 186.600
[info]   CI (99.9%): [17940.781, 19377.845] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   254.399 ±(99.9%) 30.172 MB/sec [Average]
[info]   (min, avg, max) = (247.141, 254.399, 262.988), stdev = 7.836
[info]   CI (99.9%): [224.227, 284.571] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   21466.173 ±(99.9%) 3363.396 B/op [Average]
[info]   (min, avg, max) = (20664.022, 21466.173, 22403.595), stdev = 873.463
[info]   CI (99.9%): [18102.777, 24829.570] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.004 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.350 ±(99.9%) 3.015 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.350, 1.751), stdev = 0.783
[info]   CI (99.9%): [≈ 0, 3.365] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   237.261 ±(99.9%) 1270.623 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 237.261, 674.830), stdev = 329.977
[info]   CI (99.9%): [≈ 0, 1507.884] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   20126.723 ±(99.9%) 107965.781 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 20126.723, 57612.816), stdev = 28038.371
[info]   CI (99.9%): [≈ 0, 128092.505] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:·gc.count":
[info]   2.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.000), stdev = 0.548
[info]   CI (99.9%): [2.000, 2.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJacksonScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 4.000), stdev = 1.789
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala
[info] # Run progress: 96.79% complete, ETA 00:04:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 12406.313 ops/s
[info] # Warmup Iteration   2: 19726.075 ops/s
[info] # Warmup Iteration   3: 18168.193 ops/s
[info] # Warmup Iteration   4: 19886.591 ops/s
[info] # Warmup Iteration   5: 19683.179 ops/s
[info] Iteration   1: 19765.107 ops/s
[info]                  ·gc.alloc.rate:      185.571 MB/sec
[info]                  ·gc.alloc.rate.norm: 14778.752 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 20003.106 ops/s
[info]                  ·gc.alloc.rate:      183.613 MB/sec
[info]                  ·gc.alloc.rate.norm: 14448.022 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 19963.647 ops/s
[info]                  ·gc.alloc.rate:                   193.585 MB/sec
[info]                  ·gc.alloc.rate.norm:              15262.743 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.641 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      511.499 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 40327.827 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 19987.514 ops/s
[info]                  ·gc.alloc.rate:      183.473 MB/sec
[info]                  ·gc.alloc.rate.norm: 14448.020 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 20056.153 ops/s
[info]                  ·gc.alloc.rate:      184.084 MB/sec
[info]                  ·gc.alloc.rate.norm: 14448.022 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala":
[info]   19955.105 ±(99.9%) 429.383 ops/s [Average]
[info]   (min, avg, max) = (19765.107, 19955.105, 20056.153), stdev = 111.509
[info]   CI (99.9%): [19525.722, 20384.489] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   186.065 ±(99.9%) 16.501 MB/sec [Average]
[info]   (min, avg, max) = (183.473, 186.065, 193.585), stdev = 4.285
[info]   CI (99.9%): [169.564, 202.566] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   14677.112 ±(99.9%) 1375.955 B/op [Average]
[info]   (min, avg, max) = (14448.020, 14677.112, 15262.743), stdev = 357.331
[info]   CI (99.9%): [13301.157, 16053.067] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.004 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.328 ±(99.9%) 2.826 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.328, 1.641), stdev = 0.734
[info]   CI (99.9%): [≈ 0, 3.154] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   102.300 ±(99.9%) 880.832 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 102.300, 511.499), stdev = 228.749
[info]   CI (99.9%): [≈ 0, 983.131] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   8065.565 ±(99.9%) 69446.950 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 8065.565, 40327.827), stdev = 18035.152
[info]   CI (99.9%): [≈ 0, 77512.515] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:·gc.count":
[info]   1.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.200, 1.000), stdev = 0.447
[info]   CI (99.9%): [1.000, 1.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readJsoniterScala:·gc.time":
[info]   2.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 0.400, 2.000), stdev = 0.894
[info]   CI (99.9%): [2.000, 2.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson
[info] # Run progress: 96.99% complete, ETA 00:04:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 142.895 ops/s
[info] # Warmup Iteration   2: 3347.705 ops/s
[info] # Warmup Iteration   3: 6596.578 ops/s
[info] # Warmup Iteration   4: 7325.055 ops/s
[info] # Warmup Iteration   5: 7332.154 ops/s
[info] Iteration   1: 7326.478 ops/s
[info]                  ·gc.alloc.rate:                   2018.371 MB/sec
[info]                  ·gc.alloc.rate.norm:              433623.448 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2002.793 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 430276.751 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 7276.815 ops/s
[info]                  ·gc.alloc.rate:                   1989.455 MB/sec
[info]                  ·gc.alloc.rate.norm:              430297.025 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4.502 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2006.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 433893.517 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 7336.932 ops/s
[info]                  ·gc.alloc.rate:                   2016.808 MB/sec
[info]                  ·gc.alloc.rate.norm:              432607.478 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2011.262 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 431417.800 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 7255.730 ops/s
[info]                  ·gc.alloc.rate:                   2006.808 MB/sec
[info]                  ·gc.alloc.rate.norm:              435354.816 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13.544 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2015.516 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 437243.767 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 7287.606 ops/s
[info]                  ·gc.alloc.rate:                   2003.146 MB/sec
[info]                  ·gc.alloc.rate.norm:              432650.908 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2020.131 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 436319.249 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson":
[info]   7296.712 ±(99.9%) 131.459 ops/s [Average]
[info]   (min, avg, max) = (7255.730, 7296.712, 7336.932), stdev = 34.139
[info]   CI (99.9%): [7165.253, 7428.171] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:·gc.alloc.rate":
[info]   2006.918 ±(99.9%) 45.078 MB/sec [Average]
[info]   (min, avg, max) = (1989.455, 2006.918, 2018.371), stdev = 11.707
[info]   CI (99.9%): [1961.839, 2051.996] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   432906.735 ±(99.9%) 7066.840 B/op [Average]
[info]   (min, avg, max) = (430297.025, 432906.735, 435354.816), stdev = 1835.236
[info]   CI (99.9%): [425839.895, 439973.575] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   0.017 ±(99.9%) 0.104 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   3.609 ±(99.9%) 22.665 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 3.609, 13.544), stdev = 5.886
[info]   CI (99.9%): [≈ 0, 26.274] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   2011.157 ±(99.9%) 26.902 MB/sec [Average]
[info]   (min, avg, max) = (2002.793, 2011.157, 2020.131), stdev = 6.986
[info]   CI (99.9%): [1984.254, 2038.059] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   433830.217 ±(99.9%) 11599.724 B/op [Average]
[info]   (min, avg, max) = (430276.751, 433830.217, 437243.767), stdev = 3012.412
[info]   CI (99.9%): [422230.493, 445429.941] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.readPlayJson:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala
[info] # Run progress: 97.19% complete, ETA 00:03:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
[info] WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/tmp/sbt_c0b5d35/target/1bdf7fe1/jackson-module-afterburner-2.9.5.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int)
[info] WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
[info] WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
[info] WARNING: All illegal access operations will be denied in a future release
[info] 494.678 ops/s
[info] # Warmup Iteration   2: 46443.461 ops/s
[info] # Warmup Iteration   3: 54069.447 ops/s
[info] # Warmup Iteration   4: 53753.703 ops/s
[info] # Warmup Iteration   5: 53954.263 ops/s
[info] Iteration   1: 53946.251 ops/s
[info]                  ·gc.alloc.rate:                   693.329 MB/sec
[info]                  ·gc.alloc.rate.norm:              20232.181 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.607 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.324 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19648.410 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 53715.972 ops/s
[info]                  ·gc.alloc.rate:                   688.505 MB/sec
[info]                  ·gc.alloc.rate.norm:              20172.959 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.473 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19732.528 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 53576.873 ops/s
[info]                  ·gc.alloc.rate:                   687.045 MB/sec
[info]                  ·gc.alloc.rate.norm:              20183.427 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.612 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.426 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19783.345 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 53587.159 ops/s
[info]                  ·gc.alloc.rate:                   695.337 MB/sec
[info]                  ·gc.alloc.rate.norm:              20423.260 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.412 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19779.285 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 53900.757 ops/s
[info]                  ·gc.alloc.rate:                   690.479 MB/sec
[info]                  ·gc.alloc.rate.norm:              20166.146 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.608 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.313 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19664.812 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala":
[info]   53745.403 ±(99.9%) 663.565 ops/s [Average]
[info]   (min, avg, max) = (53576.873, 53745.403, 53946.251), stdev = 172.326
[info]   CI (99.9%): [53081.838, 54408.967] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   690.939 ±(99.9%) 13.108 MB/sec [Average]
[info]   (min, avg, max) = (687.045, 690.939, 695.337), stdev = 3.404
[info]   CI (99.9%): [677.831, 704.046] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   20235.595 ±(99.9%) 416.055 B/op [Average]
[info]   (min, avg, max) = (20166.146, 20235.595, 20423.260), stdev = 108.048
[info]   CI (99.9%): [19819.539, 20651.650] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.012 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.056] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.365 ±(99.9%) 1.284 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.365, 0.612), stdev = 0.334
[info]   CI (99.9%): [≈ 0, 1.650] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   673.390 ±(99.9%) 0.266 MB/sec [Average]
[info]   (min, avg, max) = (673.313, 673.390, 673.473), stdev = 0.069
[info]   CI (99.9%): [673.124, 673.655] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   19721.676 ±(99.9%) 242.323 B/op [Average]
[info]   (min, avg, max) = (19648.410, 19721.676, 19783.345), stdev = 62.931
[info]   CI (99.9%): [19479.353, 19963.999] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJacksonScala:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala
[info] # Run progress: 97.39% complete, ETA 00:03:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 39632.743 ops/s
[info] # Warmup Iteration   2: 76991.562 ops/s
[info] # Warmup Iteration   3: 78062.119 ops/s
[info] # Warmup Iteration   4: 79873.594 ops/s
[info] # Warmup Iteration   5: 79804.892 ops/s
[info] Iteration   1: 80104.719 ops/s
[info]                  ·gc.alloc.rate:      535.529 MB/sec
[info]                  ·gc.alloc.rate.norm: 10523.351 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 79076.466 ops/s
[info]                  ·gc.alloc.rate:                   543.605 MB/sec
[info]                  ·gc.alloc.rate.norm:              10821.100 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3.175 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     63.204 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      669.047 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13318.176 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 79938.435 ops/s
[info]                  ·gc.alloc.rate:                   546.894 MB/sec
[info]                  ·gc.alloc.rate.norm:              10768.429 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.410 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      669.411 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13180.809 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 79751.828 ops/s
[info]                  ·gc.alloc.rate:                   557.194 MB/sec
[info]                  ·gc.alloc.rate.norm:              10995.550 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      669.480 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13211.379 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 80107.116 ops/s
[info]                  ·gc.alloc.rate:                   556.961 MB/sec
[info]                  ·gc.alloc.rate.norm:              10943.316 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.409 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      668.740 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13139.591 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala":
[info]   79795.713 ±(99.9%) 1647.324 ops/s [Average]
[info]   (min, avg, max) = (79076.466, 79795.713, 80107.116), stdev = 427.805
[info]   CI (99.9%): [78148.388, 81443.037] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   548.036 ±(99.9%) 35.546 MB/sec [Average]
[info]   (min, avg, max) = (535.529, 548.036, 557.194), stdev = 9.231
[info]   CI (99.9%): [512.490, 583.583] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   10810.349 ±(99.9%) 710.599 B/op [Average]
[info]   (min, avg, max) = (10523.351, 10810.349, 10995.550), stdev = 184.540
[info]   CI (99.9%): [10099.750, 11520.947] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.643 ±(99.9%) 5.450 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.643, 3.175), stdev = 1.415
[info]   CI (99.9%): [≈ 0, 6.093] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   12.805 ±(99.9%) 108.492 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 12.805, 63.204), stdev = 28.175
[info]   CI (99.9%): [≈ 0, 121.296] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   535.336 ±(99.9%) 1152.351 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 535.336, 669.480), stdev = 299.262
[info]   CI (99.9%): [≈ 0, 1687.686] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   10569.991 ±(99.9%) 22754.127 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 10569.991, 13318.176), stdev = 5909.175
[info]   CI (99.9%): [≈ 0, 33324.118] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 3.000), stdev = 1.095
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc
[info] # Run progress: 97.59% complete, ETA 00:03:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 25555.107 ops/s
[info] # Warmup Iteration   2: 77044.358 ops/s
[info] # Warmup Iteration   3: 78026.883 ops/s
[info] # Warmup Iteration   4: 78310.749 ops/s
[info] # Warmup Iteration   5: 78516.099 ops/s
[info] Iteration   1: 78440.279 ops/s
[info]                  ·gc.alloc.rate:      7.973 MB/sec
[info]                  ·gc.alloc.rate.norm: 160.005 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 78570.530 ops/s
[info]                  ·gc.alloc.rate:      7.987 MB/sec
[info]                  ·gc.alloc.rate.norm: 160.005 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 78581.315 ops/s
[info]                  ·gc.alloc.rate:      7.988 MB/sec
[info]                  ·gc.alloc.rate.norm: 160.005 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 78780.330 ops/s
[info]                  ·gc.alloc.rate:      8.010 MB/sec
[info]                  ·gc.alloc.rate.norm: 160.005 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 78402.707 ops/s
[info]                  ·gc.alloc.rate:      7.970 MB/sec
[info]                  ·gc.alloc.rate.norm: 160.005 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc":
[info]   78555.032 ±(99.9%) 571.342 ops/s [Average]
[info]   (min, avg, max) = (78402.707, 78555.032, 78780.330), stdev = 148.376
[info]   CI (99.9%): [77983.691, 79126.374] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   7.986 ±(99.9%) 0.061 MB/sec [Average]
[info]   (min, avg, max) = (7.970, 7.986, 8.010), stdev = 0.016
[info]   CI (99.9%): [7.924, 8.047] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   160.005 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (160.005, 160.005, 160.005), stdev = 0.001
[info]   CI (99.9%): [160.005, 160.005] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.TwitterAPIBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 97.79% complete, ETA 00:02:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 152754.390 ops/s
[info] # Warmup Iteration   2: 291579.218 ops/s
[info] # Warmup Iteration   3: 304852.365 ops/s
[info] # Warmup Iteration   4: 301515.188 ops/s
[info] # Warmup Iteration   5: 280401.104 ops/s
[info] Iteration   1: 305995.683 ops/s
[info]                  ·gc.alloc.rate:                   1667.430 MB/sec
[info]                  ·gc.alloc.rate.norm:              8578.201 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.987 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6924.516 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 304340.476 ops/s
[info]                  ·gc.alloc.rate:                   1667.429 MB/sec
[info]                  ·gc.alloc.rate.norm:              8624.419 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.431 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2020.703 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10451.656 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 301986.146 ops/s
[info]                  ·gc.alloc.rate:                   1665.168 MB/sec
[info]                  ·gc.alloc.rate.norm:              8679.436 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.434 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.741 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7030.107 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 304315.683 ops/s
[info]                  ·gc.alloc.rate:                   1665.219 MB/sec
[info]                  ·gc.alloc.rate.norm:              8610.790 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.108 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.429 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6983.020 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 302967.166 ops/s
[info]                  ·gc.alloc.rate:                   1683.873 MB/sec
[info]                  ·gc.alloc.rate.norm:              8747.327 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.324 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2027.710 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10533.479 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce":
[info]   303921.031 ±(99.9%) 5868.128 ops/s [Average]
[info]   (min, avg, max) = (301986.146, 303921.031, 305995.683), stdev = 1523.934
[info]   CI (99.9%): [298052.902, 309789.159] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:·gc.alloc.rate":
[info]   1669.824 ±(99.9%) 30.547 MB/sec [Average]
[info]   (min, avg, max) = (1665.168, 1669.824, 1683.873), stdev = 7.933
[info]   CI (99.9%): [1639.277, 1700.371] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:·gc.alloc.rate.norm":
[info]   8648.035 ±(99.9%) 255.906 B/op [Average]
[info]   (min, avg, max) = (8578.201, 8648.035, 8747.327), stdev = 66.458
[info]   CI (99.9%): [8392.129, 8903.941] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space":
[info]   0.050 ±(99.9%) 0.146 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.083), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.196] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.259 ±(99.9%) 0.756 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.259, 0.434), stdev = 0.196
[info]   CI (99.9%): [≈ 0, 1.016] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space":
[info]   1618.714 ±(99.9%) 1425.409 MB/sec [Average]
[info]   (min, avg, max) = (1345.987, 1618.714, 2027.710), stdev = 370.174
[info]   CI (99.9%): [193.305, 3044.123] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   8384.556 ±(99.9%) 7412.196 B/op [Average]
[info]   (min, avg, max) = (6924.516, 8384.556, 10533.479), stdev = 1924.924
[info]   CI (99.9%): [972.360, 15796.751] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readCirce:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.200, 3.000), stdev = 0.837
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 97.99% complete, ETA 00:02:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 95387.529 ops/s
[info] # Warmup Iteration   2: 466762.249 ops/s
[info] # Warmup Iteration   3: 483101.160 ops/s
[info] # Warmup Iteration   4: 492448.628 ops/s
[info] # Warmup Iteration   5: 490486.928 ops/s
[info] Iteration   1: 479391.915 ops/s
[info]                  ·gc.alloc.rate:                   568.717 MB/sec
[info]                  ·gc.alloc.rate.norm:              1867.547 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1.207 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3.964 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.644 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2212.107 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 490742.270 ops/s
[info]                  ·gc.alloc.rate:                   553.473 MB/sec
[info]                  ·gc.alloc.rate.norm:              1775.252 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.067 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.055 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2162.017 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 477645.705 ops/s
[info]                  ·gc.alloc.rate:      526.839 MB/sec
[info]                  ·gc.alloc.rate.norm: 1736.180 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 480503.608 ops/s
[info]                  ·gc.alloc.rate:                   551.775 MB/sec
[info]                  ·gc.alloc.rate.norm:              1807.340 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.098 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2208.006 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 479687.213 ops/s
[info]                  ·gc.alloc.rate:                   547.194 MB/sec
[info]                  ·gc.alloc.rate.norm:              1795.564 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.137 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.008 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2211.692 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala":
[info]   481594.142 ±(99.9%) 20096.695 ops/s [Average]
[info]   (min, avg, max) = (477645.705, 481594.142, 490742.270), stdev = 5219.048
[info]   CI (99.9%): [461497.447, 501690.837] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate":
[info]   549.599 ±(99.9%) 58.049 MB/sec [Average]
[info]   (min, avg, max) = (526.839, 549.599, 568.717), stdev = 15.075
[info]   CI (99.9%): [491.551, 607.648] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm":
[info]   1796.377 ±(99.9%) 185.232 B/op [Average]
[info]   (min, avg, max) = (1736.180, 1796.377, 1867.547), stdev = 48.104
[info]   CI (99.9%): [1611.144, 1981.609] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.254 ±(99.9%) 2.053 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.254, 1.207), stdev = 0.533
[info]   CI (99.9%): [≈ 0, 2.307] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.833 ±(99.9%) 6.742 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.833, 3.964), stdev = 1.751
[info]   CI (99.9%): [≈ 0, 7.575] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   539.161 ±(99.9%) 1160.584 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 539.161, 674.098), stdev = 301.400
[info]   CI (99.9%): [≈ 0, 1699.745] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1758.764 ±(99.9%) 3786.745 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1758.764, 2212.107), stdev = 983.406
[info]   CI (99.9%): [≈ 0, 5545.509] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJacksonScala:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 0.707
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 98.19% complete, ETA 00:02:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 862599.977 ops/s
[info] # Warmup Iteration   2: 1212954.175 ops/s
[info] # Warmup Iteration   3: 1178536.713 ops/s
[info] # Warmup Iteration   4: 1215534.808 ops/s
[info] # Warmup Iteration   5: 1213948.668 ops/s
[info] Iteration   1: 1211883.945 ops/s
[info]                  ·gc.alloc.rate:                   654.795 MB/sec
[info]                  ·gc.alloc.rate.norm:              850.525 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2.862 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3.717 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.343 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 874.617 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 1215560.182 ops/s
[info]                  ·gc.alloc.rate:                   661.306 MB/sec
[info]                  ·gc.alloc.rate.norm:              856.181 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.054 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.835 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 871.107 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 1215679.116 ops/s
[info]                  ·gc.alloc.rate:                   662.163 MB/sec
[info]                  ·gc.alloc.rate.norm:              857.463 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.631 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 871.018 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 1199667.693 ops/s
[info]                  ·gc.alloc.rate:                   658.085 MB/sec
[info]                  ·gc.alloc.rate.norm:              863.442 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.027 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.075 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 881.798 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 1212786.533 ops/s
[info]                  ·gc.alloc.rate:                   662.025 MB/sec
[info]                  ·gc.alloc.rate.norm:              859.213 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.036 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 872.206 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala":
[info]   1211115.494 ±(99.9%) 25470.848 ops/s [Average]
[info]   (min, avg, max) = (1199667.693, 1211115.494, 1215679.116), stdev = 6614.698
[info]   CI (99.9%): [1185644.645, 1236586.342] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate":
[info]   659.675 ±(99.9%) 12.286 MB/sec [Average]
[info]   (min, avg, max) = (654.795, 659.675, 662.163), stdev = 3.191
[info]   CI (99.9%): [647.389, 671.961] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm":
[info]   857.365 ±(99.9%) 18.116 B/op [Average]
[info]   (min, avg, max) = (850.525, 857.365, 863.442), stdev = 4.705
[info]   CI (99.9%): [839.248, 875.481] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.585 ±(99.9%) 4.902 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.585, 2.862), stdev = 1.273
[info]   CI (99.9%): [≈ 0, 5.487] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.760 ±(99.9%) 6.367 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.760, 3.717), stdev = 1.653
[info]   CI (99.9%): [≈ 0, 7.127] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   672.584 ±(99.9%) 2.109 MB/sec [Average]
[info]   (min, avg, max) = (672.036, 672.584, 673.343), stdev = 0.548
[info]   CI (99.9%): [670.475, 674.693] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   874.149 ±(99.9%) 17.388 B/op [Average]
[info]   (min, avg, max) = (871.018, 874.149, 881.798), stdev = 4.516
[info]   CI (99.9%): [856.762, 891.537] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readJsoniterScala:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 0.837
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 98.39% complete, ETA 00:02:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 24587.720 ops/s
[info] # Warmup Iteration   2: 100173.616 ops/s
[info] # Warmup Iteration   3: 103582.260 ops/s
[info] # Warmup Iteration   4: 105324.284 ops/s
[info] # Warmup Iteration   5: 105560.940 ops/s
[info] Iteration   1: 105507.478 ops/s
[info]                  ·gc.alloc.rate:                   3359.055 MB/sec
[info]                  ·gc.alloc.rate.norm:              50118.738 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.932 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3387.939 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 50549.706 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 104606.769 ops/s
[info]                  ·gc.alloc.rate:                   3334.761 MB/sec
[info]                  ·gc.alloc.rate.norm:              50154.565 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.253 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2715.811 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 40845.606 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 103048.872 ops/s
[info]                  ·gc.alloc.rate:                   3309.839 MB/sec
[info]                  ·gc.alloc.rate.norm:              50558.600 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.590 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3397.106 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 51891.622 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 103603.697 ops/s
[info]                  ·gc.alloc.rate:                   3329.897 MB/sec
[info]                  ·gc.alloc.rate.norm:              50591.860 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3400.516 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 51664.783 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 105178.161 ops/s
[info]                  ·gc.alloc.rate:                   3380.222 MB/sec
[info]                  ·gc.alloc.rate.norm:              50578.099 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.935 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      3403.848 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 50931.603 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson":
[info]   104388.995 ±(99.9%) 4008.110 ops/s [Average]
[info]   (min, avg, max) = (103048.872, 104388.995, 105507.478), stdev = 1040.893
[info]   CI (99.9%): [100380.885, 108397.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:·gc.alloc.rate":
[info]   3342.755 ±(99.9%) 105.141 MB/sec [Average]
[info]   (min, avg, max) = (3309.839, 3342.755, 3380.222), stdev = 27.305
[info]   CI (99.9%): [3237.614, 3447.896] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm":
[info]   50400.373 ±(99.9%) 929.413 B/op [Average]
[info]   (min, avg, max) = (50118.738, 50400.373, 50591.860), stdev = 241.366
[info]   CI (99.9%): [49470.960, 51329.785] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space":
[info]   0.062 ±(99.9%) 0.150 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.062, 0.104), stdev = 0.039
[info]   CI (99.9%): [≈ 0, 0.212] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   0.942 ±(99.9%) 2.281 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.942, 1.590), stdev = 0.592
[info]   CI (99.9%): [≈ 0, 3.223] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space":
[info]   3261.044 ±(99.9%) 1173.877 MB/sec [Average]
[info]   (min, avg, max) = (2715.811, 3261.044, 3403.848), stdev = 304.852
[info]   CI (99.9%): [2087.167, 4434.921] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   49176.664 ±(99.9%) 18054.277 B/op [Average]
[info]   (min, avg, max) = (40845.606, 49176.664, 51891.622), stdev = 4688.638
[info]   CI (99.9%): [31122.387, 67230.941] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readPlayJson:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 98.59% complete, ETA 00:01:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 305932.373 ops/s
[info] # Warmup Iteration   2: 555102.713 ops/s
[info] # Warmup Iteration   3: 596752.557 ops/s
[info] # Warmup Iteration   4: 600502.790 ops/s
[info] # Warmup Iteration   5: 595517.100 ops/s
[info] Iteration   1: 600341.758 ops/s
[info]                  ·gc.alloc.rate:                   1791.020 MB/sec
[info]                  ·gc.alloc.rate.norm:              4696.327 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.164 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2018.399 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5292.548 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 597803.623 ops/s
[info]                  ·gc.alloc.rate:                   1803.201 MB/sec
[info]                  ·gc.alloc.rate.norm:              4745.492 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.329 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2021.578 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5320.197 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 602396.077 ops/s
[info]                  ·gc.alloc.rate:                   1804.039 MB/sec
[info]                  ·gc.alloc.rate.norm:              4713.963 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.054 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.745 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3524.277 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 599316.752 ops/s
[info]                  ·gc.alloc.rate:                   1822.715 MB/sec
[info]                  ·gc.alloc.rate.norm:              4785.383 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.219 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2026.506 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5320.417 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 603157.085 ops/s
[info]                  ·gc.alloc.rate:                   1808.003 MB/sec
[info]                  ·gc.alloc.rate.norm:              4716.584 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.163 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1352.553 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3528.440 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readUPickle":
[info]   600603.059 ±(99.9%) 8457.768 ops/s [Average]
[info]   (min, avg, max) = (597803.623, 600603.059, 603157.085), stdev = 2196.455
[info]   CI (99.9%): [592145.291, 609060.827] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readUPickle:·gc.alloc.rate":
[info]   1805.796 ±(99.9%) 43.874 MB/sec [Average]
[info]   (min, avg, max) = (1791.020, 1805.796, 1822.715), stdev = 11.394
[info]   CI (99.9%): [1761.922, 1849.670] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readUPickle:·gc.alloc.rate.norm":
[info]   4731.550 ±(99.9%) 134.307 B/op [Average]
[info]   (min, avg, max) = (4696.327, 4731.550, 4785.383), stdev = 34.879
[info]   CI (99.9%): [4597.242, 4865.857] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readUPickle:·gc.churn.PS_Eden_Space":
[info]   0.071 ±(99.9%) 0.146 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.071, 0.125), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.216] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   0.186 ±(99.9%) 0.384 B/op [Average]
[info]   (min, avg, max) = (0.054, 0.186, 0.329), stdev = 0.100
[info]   CI (99.9%): [≈ 0, 0.570] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readUPickle:·gc.churn.PS_Survivor_Space":
[info]   1753.556 ±(99.9%) 1416.329 MB/sec [Average]
[info]   (min, avg, max) = (1348.745, 1753.556, 2026.506), stdev = 367.816
[info]   CI (99.9%): [337.228, 3169.885] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   4597.176 ±(99.9%) 3764.330 B/op [Average]
[info]   (min, avg, max) = (3524.277, 4597.176, 5320.417), stdev = 977.585
[info]   CI (99.9%): [832.846, 8361.506] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readUPickle:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.readUPickle:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.400, 3.000), stdev = 0.894
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce
[info] # Parameters: (size = 128)
[info] # Run progress: 98.80% complete, ETA 00:01:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 168779.087 ops/s
[info] # Warmup Iteration   2: 316724.281 ops/s
[info] # Warmup Iteration   3: 336943.289 ops/s
[info] # Warmup Iteration   4: 336735.833 ops/s
[info] # Warmup Iteration   5: 334470.572 ops/s
[info] Iteration   1: 337504.327 ops/s
[info]                  ·gc.alloc.rate:                   549.270 MB/sec
[info]                  ·gc.alloc.rate.norm:              2562.227 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.770 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3.592 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.239 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3145.178 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 335226.728 ops/s
[info]                  ·gc.alloc.rate:                   557.443 MB/sec
[info]                  ·gc.alloc.rate.norm:              2617.325 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.740 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3168.064 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 338550.840 ops/s
[info]                  ·gc.alloc.rate:      538.578 MB/sec
[info]                  ·gc.alloc.rate.norm: 2504.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 338404.782 ops/s
[info]                  ·gc.alloc.rate:                   552.825 MB/sec
[info]                  ·gc.alloc.rate.norm:              2571.248 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.775 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3138.447 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 338126.165 ops/s
[info]                  ·gc.alloc.rate:                   563.368 MB/sec
[info]                  ·gc.alloc.rate.norm:              2622.668 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.194 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.727 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3141.083 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce":
[info]   337562.568 ±(99.9%) 5259.756 ops/s [Average]
[info]   (min, avg, max) = (335226.728, 337562.568, 338550.840), stdev = 1365.942
[info]   CI (99.9%): [332302.812, 342822.324] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:·gc.alloc.rate":
[info]   552.297 ±(99.9%) 35.849 MB/sec [Average]
[info]   (min, avg, max) = (538.578, 552.297, 563.368), stdev = 9.310
[info]   CI (99.9%): [516.448, 588.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:·gc.alloc.rate.norm":
[info]   2575.494 ±(99.9%) 185.477 B/op [Average]
[info]   (min, avg, max) = (2504.001, 2575.494, 2622.668), stdev = 48.168
[info]   CI (99.9%): [2390.017, 2760.971] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space":
[info]   0.162 ±(99.9%) 1.310 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.162, 0.770), stdev = 0.340
[info]   CI (99.9%): [≈ 0, 1.472] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.757 ±(99.9%) 6.110 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.757, 3.592), stdev = 1.587
[info]   CI (99.9%): [≈ 0, 6.867] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space":
[info]   539.696 ±(99.9%) 1161.737 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 539.696, 674.775), stdev = 301.699
[info]   CI (99.9%): [≈ 0, 1701.433] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   2518.554 ±(99.9%) 5421.566 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2518.554, 3168.064), stdev = 1407.964
[info]   CI (99.9%): [≈ 0, 7940.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeCirce:·gc.time":
[info]   4.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala
[info] # Parameters: (size = 128)
[info] # Run progress: 99.00% complete, ETA 00:01:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 163664.868 ops/s
[info] # Warmup Iteration   2: 690049.929 ops/s
[info] # Warmup Iteration   3: 689230.726 ops/s
[info] # Warmup Iteration   4: 702400.926 ops/s
[info] # Warmup Iteration   5: 701000.932 ops/s
[info] Iteration   1: 690265.768 ops/s
[info]                  ·gc.alloc.rate:                   553.267 MB/sec
[info]                  ·gc.alloc.rate.norm:              1261.320 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.812 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.851 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.589 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1535.624 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 701768.706 ops/s
[info]                  ·gc.alloc.rate:                   557.477 MB/sec
[info]                  ·gc.alloc.rate.norm:              1250.347 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.426 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1510.406 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 690634.358 ops/s
[info]                  ·gc.alloc.rate:      526.445 MB/sec
[info]                  ·gc.alloc.rate.norm: 1200.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 690335.850 ops/s
[info]                  ·gc.alloc.rate:                   543.522 MB/sec
[info]                  ·gc.alloc.rate.norm:              1239.303 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.047 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.373 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1535.382 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 685002.273 ops/s
[info]                  ·gc.alloc.rate:                   546.310 MB/sec
[info]                  ·gc.alloc.rate.norm:              1255.161 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.153 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1548.884 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala":
[info]   691601.391 ±(99.9%) 23677.804 ops/s [Average]
[info]   (min, avg, max) = (685002.273, 691601.391, 701768.706), stdev = 6149.051
[info]   CI (99.9%): [667923.587, 715279.195] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate":
[info]   545.404 ±(99.9%) 46.023 MB/sec [Average]
[info]   (min, avg, max) = (526.445, 545.404, 557.477), stdev = 11.952
[info]   CI (99.9%): [499.381, 591.427] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm":
[info]   1241.226 ±(99.9%) 94.013 B/op [Average]
[info]   (min, avg, max) = (1200.001, 1241.226, 1261.320), stdev = 24.415
[info]   CI (99.9%): [1147.213, 1335.239] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space":
[info]   0.167 ±(99.9%) 1.390 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.167, 0.812), stdev = 0.361
[info]   CI (99.9%): [≈ 0, 1.556] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.380 ±(99.9%) 3.168 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.380, 1.851), stdev = 0.823
[info]   CI (99.9%): [≈ 0, 3.548] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space":
[info]   538.908 ±(99.9%) 1160.041 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 538.908, 674.153), stdev = 301.259
[info]   CI (99.9%): [≈ 0, 1698.949] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm":
[info]   1226.059 ±(99.9%) 2639.729 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1226.059, 1548.884), stdev = 685.529
[info]   CI (99.9%): [≈ 0, 3865.788] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJacksonScala:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 0.707
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala
[info] # Parameters: (size = 128)
[info] # Run progress: 99.20% complete, ETA 00:01:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 995532.638 ops/s
[info] # Warmup Iteration   2: 1343894.191 ops/s
[info] # Warmup Iteration   3: 1336862.059 ops/s
[info] # Warmup Iteration   4: 1363422.211 ops/s
[info] # Warmup Iteration   5: 1401499.628 ops/s
[info] Iteration   1: 1404878.054 ops/s
[info]                  ·gc.alloc.rate:                   665.549 MB/sec
[info]                  ·gc.alloc.rate.norm:              745.568 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2.800 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3.137 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.196 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 755.254 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 1404583.241 ops/s
[info]                  ·gc.alloc.rate:                   664.258 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.435 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.385 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 754.664 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 1397377.341 ops/s
[info]                  ·gc.alloc.rate:                   671.557 MB/sec
[info]                  ·gc.alloc.rate.norm:              756.504 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.023 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.374 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 758.550 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   4: 1389212.142 ops/s
[info]                  ·gc.alloc.rate:                   658.011 MB/sec
[info]                  ·gc.alloc.rate.norm:              745.445 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.047 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.827 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 762.230 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 1375223.222 ops/s
[info]                  ·gc.alloc.rate:                   661.836 MB/sec
[info]                  ·gc.alloc.rate.norm:              757.547 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.024 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.715 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 769.999 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala":
[info]   1394254.800 ±(99.9%) 47820.512 ops/s [Average]
[info]   (min, avg, max) = (1375223.222, 1394254.800, 1404878.054), stdev = 12418.835
[info]   CI (99.9%): [1346434.288, 1442075.312] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate":
[info]   664.242 ±(99.9%) 19.238 MB/sec [Average]
[info]   (min, avg, max) = (658.011, 664.242, 671.557), stdev = 4.996
[info]   CI (99.9%): [645.004, 683.480] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm":
[info]   749.900 ±(99.9%) 25.144 B/op [Average]
[info]   (min, avg, max) = (744.435, 749.900, 757.547), stdev = 6.530
[info]   CI (99.9%): [724.755, 775.044] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space":
[info]   0.577 ±(99.9%) 4.786 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.577, 2.800), stdev = 1.243
[info]   CI (99.9%): [≈ 0, 5.363] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm":
[info]   0.646 ±(99.9%) 5.361 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.646, 3.137), stdev = 1.392
[info]   CI (99.9%): [≈ 0, 6.008] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space":
[info]   673.300 ±(99.9%) 2.263 MB/sec [Average]
[info]   (min, avg, max) = (672.715, 673.300, 674.196), stdev = 0.588
[info]   CI (99.9%): [671.037, 675.562] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm":
[info]   760.140 ±(99.9%) 24.197 B/op [Average]
[info]   (min, avg, max) = (754.664, 760.140, 769.999), stdev = 6.284
[info]   CI (99.9%): [735.942, 784.337] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScala:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 3.000), stdev = 1.140
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc
[info] # Parameters: (size = 128)
[info] # Run progress: 99.40% complete, ETA 00:00:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1121198.506 ops/s
[info] # Warmup Iteration   2: 1415716.448 ops/s
[info] # Warmup Iteration   3: 1496601.509 ops/s
[info] # Warmup Iteration   4: 1490846.769 ops/s
[info] # Warmup Iteration   5: 1496390.120 ops/s
[info] Iteration   1: 1495465.764 ops/s
[info]                  ·gc.alloc.rate:      0.077 MB/sec
[info]                  ·gc.alloc.rate.norm: 0.081 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1477794.825 ops/s
[info]                  ·gc.alloc.rate:      5.399 MB/sec
[info]                  ·gc.alloc.rate.norm: 5.751 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 1492404.808 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 1492569.332 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 1491834.406 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc":
[info]   1490013.827 ±(99.9%) 26857.346 ops/s [Average]
[info]   (min, avg, max) = (1477794.825, 1490013.827, 1495465.764), stdev = 6974.768
[info]   CI (99.9%): [1463156.481, 1516871.173] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate":
[info]   1.095 ±(99.9%) 9.264 MB/sec [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 1.095, 5.399), stdev = 2.406
[info]   CI (99.9%): [≈ 0, 10.360] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm":
[info]   1.167 ±(99.9%) 9.869 B/op [Average]
[info]   (min, avg, max) = (≈ 10⁻⁴, 1.167, 5.751), stdev = 2.563
[info]   CI (99.9%): [≈ 0, 11.035] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson
[info] # Parameters: (size = 128)
[info] # Run progress: 99.60% complete, ETA 00:00:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 180282.290 ops/s
[info] # Warmup Iteration   2: 404690.796 ops/s
[info] # Warmup Iteration   3: 430661.541 ops/s
[info] # Warmup Iteration   4: 438763.066 ops/s
[info] # Warmup Iteration   5: 432618.291 ops/s
[info] Iteration   1: 443730.070 ops/s
[info]                  ·gc.alloc.rate:                   675.196 MB/sec
[info]                  ·gc.alloc.rate.norm:              2395.388 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.148 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.323 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2388.744 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 442506.308 ops/s
[info]                  ·gc.alloc.rate:                   681.390 MB/sec
[info]                  ·gc.alloc.rate.norm:              2423.756 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.376 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2395.248 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 437981.743 ops/s
[info]                  ·gc.alloc.rate:                   675.505 MB/sec
[info]                  ·gc.alloc.rate.norm:              2427.466 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.075 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.770 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2421.231 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 441238.577 ops/s
[info]                  ·gc.alloc.rate:                   670.106 MB/sec
[info]                  ·gc.alloc.rate.norm:              2390.517 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.149 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      673.713 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2403.383 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   5: 441514.763 ops/s
[info]                  ·gc.alloc.rate:                   679.402 MB/sec
[info]                  ·gc.alloc.rate.norm:              2422.217 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2402.992 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson":
[info]   441394.292 ±(99.9%) 8253.478 ops/s [Average]
[info]   (min, avg, max) = (437981.743, 441394.292, 443730.070), stdev = 2143.402
[info]   CI (99.9%): [433140.814, 449647.771] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:·gc.alloc.rate":
[info]   676.320 ±(99.9%) 16.757 MB/sec [Average]
[info]   (min, avg, max) = (670.106, 676.320, 681.390), stdev = 4.352
[info]   CI (99.9%): [659.563, 693.077] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm":
[info]   2411.869 ±(99.9%) 67.226 B/op [Average]
[info]   (min, avg, max) = (2390.517, 2411.869, 2427.466), stdev = 17.458
[info]   CI (99.9%): [2344.643, 2479.095] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space":
[info]   0.021 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm":
[info]   0.074 ±(99.9%) 0.285 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.074, 0.149), stdev = 0.074
[info]   CI (99.9%): [≈ 0, 0.359] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space":
[info]   673.638 ±(99.9%) 1.104 MB/sec [Average]
[info]   (min, avg, max) = (673.323, 673.638, 674.010), stdev = 0.287
[info]   CI (99.9%): [672.534, 674.743] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm":
[info]   2402.320 ±(99.9%) 46.905 B/op [Average]
[info]   (min, avg, max) = (2388.744, 2402.320, 2421.231), stdev = 12.181
[info]   CI (99.9%): [2355.415, 2449.225] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writePlayJson:·gc.time":
[info]   4.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] # JMH version: 1.21
[info] # VM version: JDK 10, Java HotSpot(TM) 64-Bit Server VM, 10+46
[info] # VM invoker: /usr/lib/jvm/jdk-10/bin/java
[info] # VM options: -server -Xms2g -Xmx2g -XX:NewSize=1g -XX:MaxNewSize=1g -XX:InitialCodeCacheSize=512m -XX:ReservedCodeCacheSize=512m -XX:+UseParallelGC -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeUPickle
[info] # Parameters: (size = 128)
[info] # Run progress: 99.80% complete, ETA 00:00:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 135053.314 ops/s
[info] # Warmup Iteration   2: 173077.729 ops/s
[info] # Warmup Iteration   3: 184774.488 ops/s
[info] # Warmup Iteration   4: 183238.413 ops/s
[info] # Warmup Iteration   5: 183283.626 ops/s
[info] Iteration   1: 183501.236 ops/s
[info]                  ·gc.alloc.rate:                   494.227 MB/sec
[info]                  ·gc.alloc.rate.norm:              4239.591 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5781.906 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 182501.010 ops/s
[info]                  ·gc.alloc.rate:                   492.629 MB/sec
[info]                  ·gc.alloc.rate.norm:              4248.725 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2.904 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25.043 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      674.074 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5813.614 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 180822.987 ops/s
[info]                  ·gc.alloc.rate:      473.130 MB/sec
[info]                  ·gc.alloc.rate.norm: 4118.013 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 182921.312 ops/s
[info]                  ·gc.alloc.rate:                   491.872 MB/sec
[info]                  ·gc.alloc.rate.norm:              4232.113 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.179 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.789 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5788.741 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 184053.514 ops/s
[info]                  ·gc.alloc.rate:                   496.387 MB/sec
[info]                  ·gc.alloc.rate.norm:              4245.067 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      672.738 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5753.207 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeUPickle":
[info]   182760.012 ±(99.9%) 4742.599 ops/s [Average]
[info]   (min, avg, max) = (180822.987, 182760.012, 184053.514), stdev = 1231.638
[info]   CI (99.9%): [178017.413, 187502.611] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeUPickle:·gc.alloc.rate":
[info]   489.649 ±(99.9%) 36.177 MB/sec [Average]
[info]   (min, avg, max) = (473.130, 489.649, 496.387), stdev = 9.395
[info]   CI (99.9%): [453.472, 525.826] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeUPickle:·gc.alloc.rate.norm":
[info]   4216.702 ±(99.9%) 213.798 B/op [Average]
[info]   (min, avg, max) = (4118.013, 4216.702, 4248.725), stdev = 55.523
[info]   CI (99.9%): [4002.904, 4430.500] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeUPickle:·gc.churn.PS_Eden_Space":
[info]   0.585 ±(99.9%) 4.992 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.585, 2.904), stdev = 1.296
[info]   CI (99.9%): [≈ 0, 5.576] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm":
[info]   5.044 ±(99.9%) 43.050 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 5.044, 25.043), stdev = 11.180
[info]   CI (99.9%): [≈ 0, 48.094] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space":
[info]   538.725 ±(99.9%) 1159.648 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 538.725, 674.074), stdev = 301.157
[info]   CI (99.9%): [≈ 0, 1698.373] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm":
[info]   4627.493 ±(99.9%) 9961.373 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4627.493, 5813.614), stdev = 2586.937
[info]   CI (99.9%): [≈ 0, 14588.866] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeUPickle:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.VectorOfBooleansBenchmark.writeUPickle:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 3.000), stdev = 1.140
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # Run complete. Total time: 02:15:27
[info] REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
[info] why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
[info] experiments, perform baseline and negative tests that provide experimental control, make sure
[info] the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
[info] Do not assume the numbers tell you what you want them to tell.
[info] Benchmark                                                                                        (size)   Mode  Cnt         Score         Error   Units
[info] AdtBenchmark.readCirce                                                                              N/A  thrpt    5    724282.676 ±   42550.180   ops/s
[info] AdtBenchmark.readCirce:·gc.alloc.rate                                                               N/A  thrpt    5      2014.785 ±     133.042  MB/sec
[info] AdtBenchmark.readCirce:·gc.alloc.rate.norm                                                          N/A  thrpt    5      4378.043 ±     118.981    B/op
[info] AdtBenchmark.readCirce:·gc.churn.PS_Eden_Space                                                      N/A  thrpt    5         0.058 ±       0.154  MB/sec
[info] AdtBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                                 N/A  thrpt    5         0.127 ±       0.335    B/op
[info] AdtBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                                  N/A  thrpt    5      1895.752 ±    1165.981  MB/sec
[info] AdtBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                             N/A  thrpt    5      4122.086 ±    2591.196    B/op
[info] AdtBenchmark.readCirce:·gc.count                                                                    N/A  thrpt    5        14.000                counts
[info] AdtBenchmark.readCirce:·gc.time                                                                     N/A  thrpt    5        11.000                    ms
[info] AdtBenchmark.readJacksonScala                                                                       N/A  thrpt    5   1877913.588 ±  146360.771   ops/s
[info] AdtBenchmark.readJacksonScala:·gc.alloc.rate                                                        N/A  thrpt    5      1226.550 ±     129.853  MB/sec
[info] AdtBenchmark.readJacksonScala:·gc.alloc.rate.norm                                                   N/A  thrpt    5      1028.037 ±      37.553    B/op
[info] AdtBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                               N/A  thrpt    5         0.025 ±       0.132  MB/sec
[info] AdtBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                          N/A  thrpt    5         0.021 ±       0.110    B/op
[info] AdtBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                           N/A  thrpt    5      1079.394 ±    1422.822  MB/sec
[info] AdtBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                                      N/A  thrpt    5       902.267 ±    1159.016    B/op
[info] AdtBenchmark.readJacksonScala:·gc.count                                                             N/A  thrpt    5         8.000                counts
[info] AdtBenchmark.readJacksonScala:·gc.time                                                              N/A  thrpt    5         8.000                    ms
[info] AdtBenchmark.readJsoniterScala                                                                      N/A  thrpt    5   5818695.610 ±  184777.675   ops/s
[info] AdtBenchmark.readJsoniterScala:·gc.alloc.rate                                                       N/A  thrpt    5       394.477 ±      32.089  MB/sec
[info] AdtBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                                  N/A  thrpt    5       106.703 ±       7.700    B/op
[info] AdtBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                              N/A  thrpt    5         0.535 ±       4.606  MB/sec
[info] AdtBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                                         N/A  thrpt    5         0.145 ±       1.245    B/op
[info] AdtBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                          N/A  thrpt    5       372.200 ±    1333.265  MB/sec
[info] AdtBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                                     N/A  thrpt    5       100.486 ±     359.935    B/op
[info] AdtBenchmark.readJsoniterScala:·gc.count                                                            N/A  thrpt    5         3.000                counts
[info] AdtBenchmark.readJsoniterScala:·gc.time                                                             N/A  thrpt    5         8.000                    ms
[info] AdtBenchmark.readPlayJson                                                                           N/A  thrpt    5    274624.172 ±    6511.386   ops/s
[info] AdtBenchmark.readPlayJson:·gc.alloc.rate                                                            N/A  thrpt    5      2381.422 ±      33.751  MB/sec
[info] AdtBenchmark.readPlayJson:·gc.alloc.rate.norm                                                       N/A  thrpt    5     13649.730 ±     462.971    B/op
[info] AdtBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                                   N/A  thrpt    5         0.033 ±       0.091  MB/sec
[info] AdtBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                              N/A  thrpt    5         0.191 ±       0.521    B/op
[info] AdtBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                               N/A  thrpt    5      2300.650 ±    1430.313  MB/sec
[info] AdtBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                          N/A  thrpt    5     13192.958 ±    8403.900    B/op
[info] AdtBenchmark.readPlayJson:·gc.count                                                                 N/A  thrpt    5        17.000                counts
[info] AdtBenchmark.readPlayJson:·gc.time                                                                  N/A  thrpt    5        17.000                    ms
[info] AdtBenchmark.writeCirce                                                                             N/A  thrpt    5    883681.489 ±   20965.128   ops/s
[info] AdtBenchmark.writeCirce:·gc.alloc.rate                                                              N/A  thrpt    5      2229.917 ±      81.089  MB/sec
[info] AdtBenchmark.writeCirce:·gc.alloc.rate.norm                                                         N/A  thrpt    5      3971.871 ±     101.682    B/op
[info] AdtBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                                     N/A  thrpt    5         0.067 ±       0.105  MB/sec
[info] AdtBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                                N/A  thrpt    5         0.119 ±       0.187    B/op
[info] AdtBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                                 N/A  thrpt    5      2166.084 ±    1167.232  MB/sec
[info] AdtBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                            N/A  thrpt    5      3855.812 ±    1977.548    B/op
[info] AdtBenchmark.writeCirce:·gc.count                                                                   N/A  thrpt    5        16.000                counts
[info] AdtBenchmark.writeCirce:·gc.time                                                                    N/A  thrpt    5        14.000                    ms
[info] AdtBenchmark.writeJacksonScala                                                                      N/A  thrpt    5   2625686.513 ±  106697.882   ops/s
[info] AdtBenchmark.writeJacksonScala:·gc.alloc.rate                                                       N/A  thrpt    5      1126.783 ±      34.898  MB/sec
[info] AdtBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                                  N/A  thrpt    5       675.552 ±      34.304    B/op
[info] AdtBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                              N/A  thrpt    5         0.046 ±       0.174  MB/sec
[info] AdtBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                         N/A  thrpt    5         0.027 ±       0.104    B/op
[info] AdtBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                          N/A  thrpt    5      1079.151 ±    1422.356  MB/sec
[info] AdtBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                                     N/A  thrpt    5       647.999 ±     865.578    B/op
[info] AdtBenchmark.writeJacksonScala:·gc.count                                                            N/A  thrpt    5         8.000                counts
[info] AdtBenchmark.writeJacksonScala:·gc.time                                                             N/A  thrpt    5         7.000                    ms
[info] AdtBenchmark.writeJsoniterScala                                                                     N/A  thrpt    5  13583500.606 ±  546324.845   ops/s
[info] AdtBenchmark.writeJsoniterScala:·gc.alloc.rate                                                      N/A  thrpt    5       711.335 ±      27.041  MB/sec
[info] AdtBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                                 N/A  thrpt    5        82.432 ±       0.873    B/op
[info] AdtBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                             N/A  thrpt    5         0.587 ±       4.965  MB/sec
[info] AdtBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                                        N/A  thrpt    5         0.069 ±       0.584    B/op
[info] AdtBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                         N/A  thrpt    5       672.696 ±       3.169  MB/sec
[info] AdtBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                                    N/A  thrpt    5        77.961 ±       3.372    B/op
[info] AdtBenchmark.writeJsoniterScala:·gc.count                                                           N/A  thrpt    5         5.000                counts
[info] AdtBenchmark.writeJsoniterScala:·gc.time                                                            N/A  thrpt    5         7.000                    ms
[info] AdtBenchmark.writeJsoniterScalaPrealloc                                                             N/A  thrpt    5  15242682.079 ±  863666.620   ops/s
[info] AdtBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                              N/A  thrpt    5         1.018 ±       8.763  MB/sec
[info] AdtBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                         N/A  thrpt    5         0.105 ±       0.905    B/op
[info] AdtBenchmark.writeJsoniterScalaPrealloc:·gc.count                                                   N/A  thrpt    5           ≈ 0                counts
[info] AdtBenchmark.writePlayJson                                                                          N/A  thrpt    5    697146.121 ±    5652.865   ops/s
[info] AdtBenchmark.writePlayJson:·gc.alloc.rate                                                           N/A  thrpt    5      1991.276 ±      32.964  MB/sec
[info] AdtBenchmark.writePlayJson:·gc.alloc.rate.norm                                                      N/A  thrpt    5      4496.249 ±      97.486    B/op
[info] AdtBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                                  N/A  thrpt    5         0.050 ±       0.091  MB/sec
[info] AdtBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                             N/A  thrpt    5         0.113 ±       0.206    B/op
[info] AdtBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                              N/A  thrpt    5      1893.200 ±    1164.121  MB/sec
[info] AdtBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                                         N/A  thrpt    5      4275.716 ±    2650.770    B/op
[info] AdtBenchmark.writePlayJson:·gc.count                                                                N/A  thrpt    5        14.000                counts
[info] AdtBenchmark.writePlayJson:·gc.time                                                                 N/A  thrpt    5        14.000                    ms
[info] AnyRefsBenchmark.readCirce                                                                          N/A  thrpt    5   1940714.259 ±   24245.309   ops/s
[info] AnyRefsBenchmark.readCirce:·gc.alloc.rate                                                           N/A  thrpt    5      2671.848 ±      54.676  MB/sec
[info] AnyRefsBenchmark.readCirce:·gc.alloc.rate.norm                                                      N/A  thrpt    5      2166.977 ±      56.925    B/op
[info] AnyRefsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                                  N/A  thrpt    5         0.079 ±       0.067  MB/sec
[info] AnyRefsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                             N/A  thrpt    5         0.064 ±       0.055    B/op
[info] AnyRefsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                              N/A  thrpt    5      2575.739 ±    1167.926  MB/sec
[info] AnyRefsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                         N/A  thrpt    5      2088.769 ±     938.968    B/op
[info] AnyRefsBenchmark.readCirce:·gc.count                                                                N/A  thrpt    5        19.000                counts
[info] AnyRefsBenchmark.readCirce:·gc.time                                                                 N/A  thrpt    5        17.000                    ms
[info] AnyRefsBenchmark.readDslJsonJava                                                                    N/A  thrpt    5  10324444.270 ±   89166.233   ops/s
[info] AnyRefsBenchmark.readDslJsonJava:·gc.alloc.rate                                                     N/A  thrpt    5      1292.708 ±      42.817  MB/sec
[info] AnyRefsBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                                N/A  thrpt    5       197.081 ±       7.003    B/op
[info] AnyRefsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                                            N/A  thrpt    5         0.062 ±       0.170  MB/sec
[info] AnyRefsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                                       N/A  thrpt    5         0.010 ±       0.026    B/op
[info] AnyRefsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                                        N/A  thrpt    5      1205.496 ±    1150.430  MB/sec
[info] AnyRefsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                                   N/A  thrpt    5       183.820 ±     175.853    B/op
[info] AnyRefsBenchmark.readDslJsonJava:·gc.count                                                          N/A  thrpt    5         9.000                counts
[info] AnyRefsBenchmark.readDslJsonJava:·gc.time                                                           N/A  thrpt    5         9.000                    ms
[info] AnyRefsBenchmark.readJacksonScala                                                                   N/A  thrpt    5   3135790.298 ±   63362.984   ops/s
[info] AnyRefsBenchmark.readJacksonScala:·gc.alloc.rate                                                    N/A  thrpt    5      2005.784 ±      65.647  MB/sec
[info] AnyRefsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                               N/A  thrpt    5      1006.845 ±      23.267    B/op
[info] AnyRefsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                           N/A  thrpt    5         0.083 ±       0.127  MB/sec
[info] AnyRefsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                      N/A  thrpt    5         0.042 ±       0.064    B/op
[info] AnyRefsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                       N/A  thrpt    5      2029.088 ±      15.114  MB/sec
[info] AnyRefsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                                  N/A  thrpt    5      1018.570 ±      23.107    B/op
[info] AnyRefsBenchmark.readJacksonScala:·gc.count                                                         N/A  thrpt    5        15.000                counts
[info] AnyRefsBenchmark.readJacksonScala:·gc.time                                                          N/A  thrpt    5        15.000                    ms
[info] AnyRefsBenchmark.readJsoniterScala                                                                  N/A  thrpt    5  12891063.697 ±  306394.711   ops/s
[info] AnyRefsBenchmark.readJsoniterScala:·gc.alloc.rate                                                   N/A  thrpt    5      1687.125 ±      33.524  MB/sec
[info] AnyRefsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                              N/A  thrpt    5       206.015 ±       6.845    B/op
[info] AnyRefsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                          N/A  thrpt    5         0.054 ±       0.185  MB/sec
[info] AnyRefsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                                     N/A  thrpt    5         0.007 ±       0.023    B/op
[info] AnyRefsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                      N/A  thrpt    5      1618.619 ±    1422.190  MB/sec
[info] AnyRefsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                                 N/A  thrpt    5       197.794 ±     177.018    B/op
[info] AnyRefsBenchmark.readJsoniterScala:·gc.count                                                        N/A  thrpt    5        12.000                counts
[info] AnyRefsBenchmark.readJsoniterScala:·gc.time                                                         N/A  thrpt    5        12.000                    ms
[info] AnyRefsBenchmark.readPlayJson                                                                       N/A  thrpt    5   1167608.726 ±   20257.451   ops/s
[info] AnyRefsBenchmark.readPlayJson:·gc.alloc.rate                                                        N/A  thrpt    5      2682.939 ±      86.726  MB/sec
[info] AnyRefsBenchmark.readPlayJson:·gc.alloc.rate.norm                                                   N/A  thrpt    5      3616.924 ±      87.215    B/op
[info] AnyRefsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                               N/A  thrpt    5         0.071 ±       0.134  MB/sec
[info] AnyRefsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                          N/A  thrpt    5         0.095 ±       0.181    B/op
[info] AnyRefsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                           N/A  thrpt    5      2707.472 ±      24.303  MB/sec
[info] AnyRefsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                      N/A  thrpt    5      3650.076 ±      74.220    B/op
[info] AnyRefsBenchmark.readPlayJson:·gc.count                                                             N/A  thrpt    5        20.000                counts
[info] AnyRefsBenchmark.readPlayJson:·gc.time                                                              N/A  thrpt    5        19.000                    ms
[info] AnyRefsBenchmark.writeCirce                                                                         N/A  thrpt    5   2498265.117 ±   51577.767   ops/s
[info] AnyRefsBenchmark.writeCirce:·gc.alloc.rate                                                          N/A  thrpt    5      2003.126 ±      72.959  MB/sec
[info] AnyRefsBenchmark.writeCirce:·gc.alloc.rate.norm                                                     N/A  thrpt    5      1261.941 ±      38.469    B/op
[info] AnyRefsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                                 N/A  thrpt    5         0.071 ±       0.072  MB/sec
[info] AnyRefsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                            N/A  thrpt    5         0.045 ±       0.045    B/op
[info] AnyRefsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                             N/A  thrpt    5      1892.476 ±    1169.001  MB/sec
[info] AnyRefsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                        N/A  thrpt    5      1192.032 ±     731.625    B/op
[info] AnyRefsBenchmark.writeCirce:·gc.count                                                               N/A  thrpt    5        14.000                counts
[info] AnyRefsBenchmark.writeCirce:·gc.time                                                                N/A  thrpt    5        12.000                    ms
[info] AnyRefsBenchmark.writeDslJsonJava                                                                   N/A  thrpt    5  17446270.262 ± 1504060.138   ops/s
[info] AnyRefsBenchmark.writeDslJsonJava:·gc.alloc.rate                                                    N/A  thrpt    5       545.645 ±      74.907  MB/sec
[info] AnyRefsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                               N/A  thrpt    5        49.219 ±       2.823    B/op
[info] AnyRefsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                                           N/A  thrpt    5         0.811 ±       6.808  MB/sec
[info] AnyRefsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                                      N/A  thrpt    5         0.075 ±       0.626    B/op
[info] AnyRefsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                                       N/A  thrpt    5       536.316 ±    1154.462  MB/sec
[info] AnyRefsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                                  N/A  thrpt    5        48.046 ±     103.486    B/op
[info] AnyRefsBenchmark.writeDslJsonJava:·gc.count                                                         N/A  thrpt    5         4.000                counts
[info] AnyRefsBenchmark.writeDslJsonJava:·gc.time                                                          N/A  thrpt    5         6.000                    ms
[info] AnyRefsBenchmark.writeJacksonScala                                                                  N/A  thrpt    5   6209297.113 ±  266470.425   ops/s
[info] AnyRefsBenchmark.writeJacksonScala:·gc.alloc.rate                                                   N/A  thrpt    5      1751.998 ±      85.584  MB/sec
[info] AnyRefsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                              N/A  thrpt    5       444.155 ±       9.960    B/op
[info] AnyRefsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                          N/A  thrpt    5         0.058 ±       0.207  MB/sec
[info] AnyRefsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                     N/A  thrpt    5         0.015 ±       0.052    B/op
[info] AnyRefsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                      N/A  thrpt    5      1622.293 ±    1425.721  MB/sec
[info] AnyRefsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                                 N/A  thrpt    5       411.479 ±     365.641    B/op
[info] AnyRefsBenchmark.writeJacksonScala:·gc.count                                                        N/A  thrpt    5        12.000                counts
[info] AnyRefsBenchmark.writeJacksonScala:·gc.time                                                         N/A  thrpt    5        12.000                    ms
[info] AnyRefsBenchmark.writeJsoniterScala                                                                 N/A  thrpt    5  21266809.208 ± 1181119.767   ops/s
[info] AnyRefsBenchmark.writeJsoniterScala:·gc.alloc.rate                                                  N/A  thrpt    5       668.463 ±      47.269  MB/sec
[info] AnyRefsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                             N/A  thrpt    5        49.469 ±       1.341    B/op
[info] AnyRefsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                         N/A  thrpt    5         0.548 ±       4.581  MB/sec
[info] AnyRefsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                                    N/A  thrpt    5         0.042 ±       0.348    B/op
[info] AnyRefsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                     N/A  thrpt    5       673.998 ±       2.572  MB/sec
[info] AnyRefsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                                N/A  thrpt    5        49.889 ±       2.961    B/op
[info] AnyRefsBenchmark.writeJsoniterScala:·gc.count                                                       N/A  thrpt    5         5.000                counts
[info] AnyRefsBenchmark.writeJsoniterScala:·gc.time                                                        N/A  thrpt    5         6.000                    ms
[info] AnyRefsBenchmark.writeJsoniterScalaPrealloc                                                         N/A  thrpt    5  22731647.088 ±  490160.533   ops/s
[info] AnyRefsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                          N/A  thrpt    5         1.452 ±      12.496  MB/sec
[info] AnyRefsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                     N/A  thrpt    5         0.101 ±       0.873    B/op
[info] AnyRefsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                               N/A  thrpt    5           ≈ 0                counts
[info] AnyRefsBenchmark.writePlayJson                                                                      N/A  thrpt    5   1752625.499 ±   24416.152   ops/s
[info] AnyRefsBenchmark.writePlayJson:·gc.alloc.rate                                                       N/A  thrpt    5      2711.045 ±     125.273  MB/sec
[info] AnyRefsBenchmark.writePlayJson:·gc.alloc.rate.norm                                                  N/A  thrpt    5      2434.849 ±      86.376    B/op
[info] AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                              N/A  thrpt    5         0.075 ±       0.072  MB/sec
[info] AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                         N/A  thrpt    5         0.067 ±       0.064    B/op
[info] AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                          N/A  thrpt    5      2575.426 ±    1173.155  MB/sec
[info] AnyRefsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                                     N/A  thrpt    5      2312.396 ±    1029.184    B/op
[info] AnyRefsBenchmark.writePlayJson:·gc.count                                                            N/A  thrpt    5        19.000                counts
[info] AnyRefsBenchmark.writePlayJson:·gc.time                                                             N/A  thrpt    5        19.000                    ms
[info] ArrayBufferOfBooleansBenchmark.readCirce                                                            128  thrpt    5    302545.147 ±   17197.635   ops/s
[info] ArrayBufferOfBooleansBenchmark.readCirce:·gc.alloc.rate                                             128  thrpt    5      1707.774 ±      94.219  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readCirce:·gc.alloc.rate.norm                                        128  thrpt    5      8883.576 ±     236.216    B/op
[info] ArrayBufferOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space                                    128  thrpt    5         0.058 ±       0.208  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5         0.304 ±       1.090    B/op
[info] ArrayBufferOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                128  thrpt    5      1618.348 ±    1423.176  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5      8416.908 ±    7355.766    B/op
[info] ArrayBufferOfBooleansBenchmark.readCirce:·gc.count                                                  128  thrpt    5        12.000                counts
[info] ArrayBufferOfBooleansBenchmark.readCirce:·gc.time                                                   128  thrpt    5        10.000                    ms
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala                                                     128  thrpt    5    514354.973 ±    1308.149   ops/s
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate                                      128  thrpt    5       674.817 ±      12.132  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm                                 128  thrpt    5      2065.171 ±      37.127    B/op
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                             128  thrpt    5         0.025 ±       0.143  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5         0.076 ±       0.439    B/op
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5       674.030 ±       0.108  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5      2062.761 ±       5.322    B/op
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.count                                           128  thrpt    5         5.000                counts
[info] ArrayBufferOfBooleansBenchmark.readJacksonScala:·gc.time                                            128  thrpt    5         5.000                    ms
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala                                                    128  thrpt    5   1185498.748 ±   56727.117   ops/s
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate                                     128  thrpt    5       813.856 ±      57.209  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                128  thrpt    5      1080.491 ±      48.574    B/op
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                            128  thrpt    5         0.025 ±       0.174  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5         0.033 ±       0.229    B/op
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5       809.130 ±    1161.350  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5      1073.059 ±    1517.249    B/op
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.count                                          128  thrpt    5         6.000                counts
[info] ArrayBufferOfBooleansBenchmark.readJsoniterScala:·gc.time                                           128  thrpt    5         6.000                    ms
[info] ArrayBufferOfBooleansBenchmark.readPlayJson                                                         128  thrpt    5    112947.003 ±    8265.375   ops/s
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.alloc.rate                                          128  thrpt    5      3592.373 ±     265.563  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm                                     128  thrpt    5     50060.746 ±    1050.487    B/op
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                 128  thrpt    5         0.092 ±       0.091  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5         1.281 ±       1.371    B/op
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                             128  thrpt    5      3533.990 ±    1172.823  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5     49253.153 ±   16223.323    B/op
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.count                                               128  thrpt    5        26.000                counts
[info] ArrayBufferOfBooleansBenchmark.readPlayJson:·gc.time                                                128  thrpt    5        24.000                    ms
[info] ArrayBufferOfBooleansBenchmark.readUPickle                                                          128  thrpt    5    528051.370 ±   19418.990   ops/s
[info] ArrayBufferOfBooleansBenchmark.readUPickle:·gc.alloc.rate                                           128  thrpt    5      1658.385 ±      20.328  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readUPickle:·gc.alloc.rate.norm                                      128  thrpt    5      4943.613 ±     147.587    B/op
[info] ArrayBufferOfBooleansBenchmark.readUPickle:·gc.churn.PS_Eden_Space                                  128  thrpt    5         0.046 ±       0.105  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5         0.136 ±       0.307    B/op
[info] ArrayBufferOfBooleansBenchmark.readUPickle:·gc.churn.PS_Survivor_Space                              128  thrpt    5      1617.854 ±    1424.416  MB/sec
[info] ArrayBufferOfBooleansBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5      4830.358 ±    4417.934    B/op
[info] ArrayBufferOfBooleansBenchmark.readUPickle:·gc.count                                                128  thrpt    5        12.000                counts
[info] ArrayBufferOfBooleansBenchmark.readUPickle:·gc.time                                                 128  thrpt    5        11.000                    ms
[info] ArrayBufferOfBooleansBenchmark.writeCirce                                                           128  thrpt    5    354390.498 ±    6877.681   ops/s
[info] ArrayBufferOfBooleansBenchmark.writeCirce:·gc.alloc.rate                                            128  thrpt    5       564.151 ±      38.047  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeCirce:·gc.alloc.rate.norm                                       128  thrpt    5      2505.755 ±     159.525    B/op
[info] ArrayBufferOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                   128  thrpt    5         0.112 ±       0.881  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5         0.503 ±       3.944    B/op
[info] ArrayBufferOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                               128  thrpt    5       538.681 ±    1159.553  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5      2394.635 ±    5154.890    B/op
[info] ArrayBufferOfBooleansBenchmark.writeCirce:·gc.count                                                 128  thrpt    5         4.000                counts
[info] ArrayBufferOfBooleansBenchmark.writeCirce:·gc.time                                                  128  thrpt    5         4.000                    ms
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala                                                    128  thrpt    5    833855.398 ±   34489.307   ops/s
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate                                     128  thrpt    5       622.130 ±      25.159  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                128  thrpt    5      1174.301 ±      25.790    B/op
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                            128  thrpt    5         0.246 ±       2.026  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5         0.462 ±       3.809    B/op
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5       673.962 ±       1.209  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5      1272.235 ±      53.282    B/op
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.count                                          128  thrpt    5         5.000                counts
[info] ArrayBufferOfBooleansBenchmark.writeJacksonScala:·gc.time                                           128  thrpt    5         7.000                    ms
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala                                                   128  thrpt    5   2138090.874 ±   40219.518   ops/s
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate                                    128  thrpt    5      1012.796 ±      52.203  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                               128  thrpt    5       745.636 ±      35.843    B/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                           128  thrpt    5         0.050 ±       0.231  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5         0.037 ±       0.170    B/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5       941.956 ±    1418.670  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5       693.590 ±    1045.836    B/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.count                                         128  thrpt    5         7.000                counts
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScala:·gc.time                                          128  thrpt    5         7.000                    ms
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc                                           128  thrpt    5   2338579.561 ±    2220.718   ops/s
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                            128  thrpt    5         0.034 ±       0.293  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                       128  thrpt    5         0.023 ±       0.197    B/op
[info] ArrayBufferOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count                                 128  thrpt    5           ≈ 0                counts
[info] ArrayBufferOfBooleansBenchmark.writePlayJson                                                        128  thrpt    5    466768.443 ±   14623.353   ops/s
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.alloc.rate                                         128  thrpt    5       693.851 ±      18.949  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm                                    128  thrpt    5      2339.646 ±      40.608    B/op
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                128  thrpt    5         0.012 ±       0.072  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5         0.042 ±       0.242    B/op
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                            128  thrpt    5       673.714 ±       1.430  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5      2271.840 ±      74.881    B/op
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.count                                              128  thrpt    5         5.000                counts
[info] ArrayBufferOfBooleansBenchmark.writePlayJson:·gc.time                                               128  thrpt    5         5.000                    ms
[info] ArrayBufferOfBooleansBenchmark.writeUPickle                                                         128  thrpt    5    184392.693 ±    3002.335   ops/s
[info] ArrayBufferOfBooleansBenchmark.writeUPickle:·gc.alloc.rate                                          128  thrpt    5       483.221 ±      33.881  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeUPickle:·gc.alloc.rate.norm                                     128  thrpt    5      4125.174 ±     292.230    B/op
[info] ArrayBufferOfBooleansBenchmark.writeUPickle:·gc.churn.PS_Eden_Space                                 128  thrpt    5         0.545 ±       4.651  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5         4.661 ±      39.755    B/op
[info] ArrayBufferOfBooleansBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space                             128  thrpt    5       539.478 ±    1161.268  MB/sec
[info] ArrayBufferOfBooleansBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5      4606.249 ±    9915.848    B/op
[info] ArrayBufferOfBooleansBenchmark.writeUPickle:·gc.count                                               128  thrpt    5         4.000                counts
[info] ArrayBufferOfBooleansBenchmark.writeUPickle:·gc.time                                                128  thrpt    5         7.000                    ms
[info] ArrayOfBigDecimalsBenchmark.readCirce                                                               128  thrpt    5     17310.475 ±     895.924   ops/s
[info] ArrayOfBigDecimalsBenchmark.readCirce:·gc.alloc.rate                                                128  thrpt    5      1199.050 ±      22.338  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readCirce:·gc.alloc.rate.norm                                           128  thrpt    5    109046.680 ±    5927.824    B/op
[info] ArrayOfBigDecimalsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                       128  thrpt    5         0.012 ±       0.044  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5         1.132 ±       3.980    B/op
[info] ArrayOfBigDecimalsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                   128  thrpt    5      1213.497 ±    1161.164  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5    110444.629 ±  106841.893    B/op
[info] ArrayOfBigDecimalsBenchmark.readCirce:·gc.count                                                     128  thrpt    5         9.000                counts
[info] ArrayOfBigDecimalsBenchmark.readCirce:·gc.time                                                      128  thrpt    5         9.000                    ms
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala                                                        128  thrpt    5     31066.373 ±     205.481   ops/s
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.alloc.rate                                         128  thrpt    5       796.139 ±      22.056  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                    128  thrpt    5     40335.437 ±     912.519    B/op
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                128  thrpt    5         0.017 ±       0.143  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5         0.842 ±       7.246    B/op
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5       674.203 ±       0.727  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5     34157.998 ±     211.265    B/op
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.count                                              128  thrpt    5         5.000                counts
[info] ArrayOfBigDecimalsBenchmark.readJacksonScala:·gc.time                                               128  thrpt    5         6.000                    ms
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala                                                       128  thrpt    5     39729.677 ±     583.961   ops/s
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.alloc.rate                                        128  thrpt    5       588.174 ±      34.526  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                   128  thrpt    5     23304.294 ±    1569.006    B/op
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                               128  thrpt    5         0.570 ±       4.910  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5        22.658 ±     195.093    B/op
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5       538.681 ±    1159.552  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5     21355.294 ±   45970.293    B/op
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.count                                             128  thrpt    5         4.000                counts
[info] ArrayOfBigDecimalsBenchmark.readJsoniterScala:·gc.time                                              128  thrpt    5         6.000                    ms
[info] ArrayOfBigDecimalsBenchmark.readPlayJson                                                            128  thrpt    5     28950.896 ±     444.323   ops/s
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.alloc.rate                                             128  thrpt    5      1460.311 ±      53.633  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.alloc.rate.norm                                        128  thrpt    5     79394.179 ±    1836.290    B/op
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                    128  thrpt    5         0.021 ±       0.001  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5         1.132 ±       0.017    B/op
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                128  thrpt    5      1350.335 ±       6.656  MB/sec
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5     73417.262 ±    1344.053    B/op
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.count                                                  128  thrpt    5        10.000                counts
[info] ArrayOfBigDecimalsBenchmark.readPlayJson:·gc.time                                                   128  thrpt    5        10.000                    ms
[info] ArrayOfBigDecimalsBenchmark.writeCirce                                                              128  thrpt    5     23417.861 ±     199.508   ops/s
[info] ArrayOfBigDecimalsBenchmark.writeCirce:·gc.alloc.rate                                               128  thrpt    5      1369.195 ±      37.791  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeCirce:·gc.alloc.rate.norm                                          128  thrpt    5     92028.986 ±    2669.886    B/op
[info] ArrayOfBigDecimalsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                      128  thrpt    5         0.025 ±       0.104  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5         1.680 ±       7.030    B/op
[info] ArrayOfBigDecimalsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                  128  thrpt    5      1351.561 ±       6.236  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5     90843.677 ±     715.423    B/op
[info] ArrayOfBigDecimalsBenchmark.writeCirce:·gc.count                                                    128  thrpt    5        10.000                counts
[info] ArrayOfBigDecimalsBenchmark.writeCirce:·gc.time                                                     128  thrpt    5        12.000                    ms
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala                                                       128  thrpt    5     21880.566 ±     199.451   ops/s
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.alloc.rate                                        128  thrpt    5      1236.181 ±      36.478  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                   128  thrpt    5     88928.034 ±    3349.733    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                               128  thrpt    5         0.029 ±       0.122  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5         2.095 ±       8.721    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5      1213.968 ±    1162.205  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5     87354.060 ±   83931.188    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.count                                             128  thrpt    5         9.000                counts
[info] ArrayOfBigDecimalsBenchmark.writeJacksonScala:·gc.time                                              128  thrpt    5        10.000                    ms
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala                                                      128  thrpt    5     24894.718 ±    1278.055   ops/s
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.alloc.rate                                       128  thrpt    5      1326.243 ±     110.199  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                  128  thrpt    5     83846.644 ±    3770.786    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                              128  thrpt    5         0.037 ±       0.200  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5         2.375 ±      12.736    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5      1211.769 ±    1160.024  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5     76462.028 ±   71293.460    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.count                                            128  thrpt    5         9.000                counts
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScala:·gc.time                                             128  thrpt    5         9.000                    ms
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc                                              128  thrpt    5     26343.197 ±    1007.368   ops/s
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                               128  thrpt    5      1392.340 ±      37.467  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                          128  thrpt    5     83194.988 ±    3162.904    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space                      128  thrpt    5         0.046 ±       0.307  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm                 128  thrpt    5         2.775 ±      18.709    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space                  128  thrpt    5      1347.715 ±       4.193  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm             128  thrpt    5     80529.972 ±    3006.704    B/op
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                    128  thrpt    5        10.000                counts
[info] ArrayOfBigDecimalsBenchmark.writeJsoniterScalaPrealloc:·gc.time                                     128  thrpt    5        11.000                    ms
[info] ArrayOfBigDecimalsBenchmark.writePlayJson                                                           128  thrpt    5      7561.415 ±     618.304   ops/s
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.alloc.rate                                            128  thrpt    5      1006.875 ±      71.514  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.alloc.rate.norm                                       128  thrpt    5    209573.051 ±    5858.452    B/op
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                   128  thrpt    5         0.008 ±       0.044  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5         1.765 ±       9.311    B/op
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                               128  thrpt    5       944.375 ±    1423.106  MB/sec
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5    197636.394 ±  310890.520    B/op
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.count                                                 128  thrpt    5         7.000                counts
[info] ArrayOfBigDecimalsBenchmark.writePlayJson:·gc.time                                                  128  thrpt    5         6.000                    ms
[info] ArrayOfBigIntsBenchmark.readCirce                                                                   128  thrpt    5     17693.770 ±     824.897   ops/s
[info] ArrayOfBigIntsBenchmark.readCirce:·gc.alloc.rate                                                    128  thrpt    5      1409.265 ±      59.479  MB/sec
[info] ArrayOfBigIntsBenchmark.readCirce:·gc.alloc.rate.norm                                               128  thrpt    5    125358.770 ±    3892.159    B/op
[info] ArrayOfBigIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                           128  thrpt    5         0.012 ±       0.044  MB/sec
[info] ArrayOfBigIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                      128  thrpt    5         1.116 ±       3.923    B/op
[info] ArrayOfBigIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                       128  thrpt    5      1350.232 ±       8.311  MB/sec
[info] ArrayOfBigIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                  128  thrpt    5    120116.607 ±    5429.725    B/op
[info] ArrayOfBigIntsBenchmark.readCirce:·gc.count                                                         128  thrpt    5        10.000                counts
[info] ArrayOfBigIntsBenchmark.readCirce:·gc.time                                                          128  thrpt    5        10.000                    ms
[info] ArrayOfBigIntsBenchmark.readJacksonScala                                                            128  thrpt    5     36230.104 ±     914.688   ops/s
[info] ArrayOfBigIntsBenchmark.readJacksonScala:·gc.alloc.rate                                             128  thrpt    5       918.165 ±      51.538  MB/sec
[info] ArrayOfBigIntsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                        128  thrpt    5     39884.766 ±    1916.227    B/op
[info] ArrayOfBigIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5         0.021 ±       0.113  MB/sec
[info] ArrayOfBigIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5         0.905 ±       4.939    B/op
[info] ArrayOfBigIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5       943.262 ±    1420.984  MB/sec
[info] ArrayOfBigIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5     40976.033 ±   61730.525    B/op
[info] ArrayOfBigIntsBenchmark.readJacksonScala:·gc.count                                                  128  thrpt    5         7.000                counts
[info] ArrayOfBigIntsBenchmark.readJacksonScala:·gc.time                                                   128  thrpt    5         8.000                    ms
[info] ArrayOfBigIntsBenchmark.readJsoniterScala                                                           128  thrpt    5     59887.262 ±     940.711   ops/s
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.alloc.rate                                            128  thrpt    5       801.505 ±      46.028  MB/sec
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                       128  thrpt    5     21066.438 ±    1097.146    B/op
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5         0.017 ±       0.105  MB/sec
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5         0.440 ±       2.765    B/op
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5       807.521 ±    1159.186  MB/sec
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5     21218.991 ±   30352.332    B/op
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.count                                                 128  thrpt    5         6.000                counts
[info] ArrayOfBigIntsBenchmark.readJsoniterScala:·gc.time                                                  128  thrpt    5         7.000                    ms
[info] ArrayOfBigIntsBenchmark.readPlayJson                                                                128  thrpt    5     27410.507 ±     852.066   ops/s
[info] ArrayOfBigIntsBenchmark.readPlayJson:·gc.alloc.rate                                                 128  thrpt    5      1734.570 ±      77.184  MB/sec
[info] ArrayOfBigIntsBenchmark.readPlayJson:·gc.alloc.rate.norm                                            128  thrpt    5     99607.201 ±    1540.893    B/op
[info] ArrayOfBigIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                        128  thrpt    5         0.029 ±       0.134  MB/sec
[info] ArrayOfBigIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5         1.673 ±       7.669    B/op
[info] ArrayOfBigIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                    128  thrpt    5      1756.558 ±    1425.146  MB/sec
[info] ArrayOfBigIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5    100754.070 ±   79255.830    B/op
[info] ArrayOfBigIntsBenchmark.readPlayJson:·gc.count                                                      128  thrpt    5        13.000                counts
[info] ArrayOfBigIntsBenchmark.readPlayJson:·gc.time                                                       128  thrpt    5        14.000                    ms
[info] ArrayOfBigIntsBenchmark.writeJacksonScala                                                           128  thrpt    5     25387.565 ±     613.493   ops/s
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.alloc.rate                                            128  thrpt    5      1478.142 ±      19.532  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                       128  thrpt    5     91644.924 ±    1891.791    B/op
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5         0.021 ±       0.057  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5         1.288 ±       3.497    B/op
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5      1350.515 ±       6.669  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5     83732.877 ±    2122.672    B/op
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.count                                                 128  thrpt    5        10.000                counts
[info] ArrayOfBigIntsBenchmark.writeJacksonScala:·gc.time                                                  128  thrpt    5        11.000                    ms
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala                                                          128  thrpt    5     35024.414 ±     831.309   ops/s
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.alloc.rate                                           128  thrpt    5      1418.446 ±      38.121  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                      128  thrpt    5     63747.047 ±    1201.588    B/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5         0.075 ±       0.176  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5         3.372 ±       7.912    B/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5      1481.211 ±    1156.377  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5     66565.616 ±   51877.602    B/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.count                                                128  thrpt    5        11.000                counts
[info] ArrayOfBigIntsBenchmark.writeJsoniterScala:·gc.time                                                 128  thrpt    5        10.000                    ms
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc                                                  128  thrpt    5     35544.163 ±     927.707   ops/s
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                   128  thrpt    5      1374.116 ±      29.771  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                              128  thrpt    5     60851.308 ±     686.600    B/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space                          128  thrpt    5         0.067 ±       0.104  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5         2.946 ±       4.588    B/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space                      128  thrpt    5      1346.624 ±       5.509  MB/sec
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5     59635.768 ±    1769.479    B/op
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                        128  thrpt    5        10.000                counts
[info] ArrayOfBigIntsBenchmark.writeJsoniterScalaPrealloc:·gc.time                                         128  thrpt    5        10.000                    ms
[info] ArrayOfBooleansBenchmark.readCirce                                                                  128  thrpt    5    328403.812 ±    8502.090   ops/s
[info] ArrayOfBooleansBenchmark.readCirce:·gc.alloc.rate                                                   128  thrpt    5      1708.682 ±      52.193  MB/sec
[info] ArrayOfBooleansBenchmark.readCirce:·gc.alloc.rate.norm                                              128  thrpt    5      8189.864 ±     277.047    B/op
[info] ArrayOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space                                          128  thrpt    5         0.050 ±       0.122  MB/sec
[info] ArrayOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                     128  thrpt    5         0.239 ±       0.580    B/op
[info] ArrayOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                      128  thrpt    5      1754.766 ±    1423.580  MB/sec
[info] ArrayOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5      8413.833 ±    6889.874    B/op
[info] ArrayOfBooleansBenchmark.readCirce:·gc.count                                                        128  thrpt    5        13.000                counts
[info] ArrayOfBooleansBenchmark.readCirce:·gc.time                                                         128  thrpt    5        13.000                    ms
[info] ArrayOfBooleansBenchmark.readDslJsonJava                                                            128  thrpt    5   1307727.268 ±    7451.315   ops/s
[info] ArrayOfBooleansBenchmark.readDslJsonJava:·gc.alloc.rate                                             128  thrpt    5       423.475 ±      38.367  MB/sec
[info] ArrayOfBooleansBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                        128  thrpt    5       509.727 ±      48.630    B/op
[info] ArrayOfBooleansBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                                    128  thrpt    5         0.755 ±       6.503  MB/sec
[info] ArrayOfBooleansBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5         0.911 ±       7.840    B/op
[info] ArrayOfBooleansBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                                128  thrpt    5       402.560 ±    1415.056  MB/sec
[info] ArrayOfBooleansBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5       485.007 ±    1704.875    B/op
[info] ArrayOfBooleansBenchmark.readDslJsonJava:·gc.count                                                  128  thrpt    5         3.000                counts
[info] ArrayOfBooleansBenchmark.readDslJsonJava:·gc.time                                                   128  thrpt    5         7.000                    ms
[info] ArrayOfBooleansBenchmark.readJacksonScala                                                           128  thrpt    5    677607.173 ±   25647.745   ops/s
[info] ArrayOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate                                            128  thrpt    5       554.245 ±      26.838  MB/sec
[info] ArrayOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm                                       128  thrpt    5      1287.493 ±      73.359    B/op
[info] ArrayOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5         0.229 ±       1.882  MB/sec
[info] ArrayOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5         0.539 ±       4.431    B/op
[info] ArrayOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5       539.592 ±    1161.512  MB/sec
[info] ArrayOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5      1256.546 ±    2705.271    B/op
[info] ArrayOfBooleansBenchmark.readJacksonScala:·gc.count                                                 128  thrpt    5         4.000                counts
[info] ArrayOfBooleansBenchmark.readJacksonScala:·gc.time                                                  128  thrpt    5         5.000                    ms
[info] ArrayOfBooleansBenchmark.readJsoniterScala                                                          128  thrpt    5   1771100.519 ±  116677.158   ops/s
[info] ArrayOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate                                           128  thrpt    5       350.948 ±      43.804  MB/sec
[info] ArrayOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                      128  thrpt    5       311.848 ±      23.366    B/op
[info] ArrayOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5         0.560 ±       4.821  MB/sec
[info] ArrayOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5         0.494 ±       4.250    B/op
[info] ArrayOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5       371.938 ±    1332.152  MB/sec
[info] ArrayOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5       327.639 ±    1174.600    B/op
[info] ArrayOfBooleansBenchmark.readJsoniterScala:·gc.count                                                128  thrpt    5         3.000                counts
[info] ArrayOfBooleansBenchmark.readJsoniterScala:·gc.time                                                 128  thrpt    5         8.000                    ms
[info] ArrayOfBooleansBenchmark.readPlayJson                                                               128  thrpt    5     96403.227 ±    3299.075   ops/s
[info] ArrayOfBooleansBenchmark.readPlayJson:·gc.alloc.rate                                                128  thrpt    5      3240.612 ±     174.305  MB/sec
[info] ArrayOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm                                           128  thrpt    5     52907.483 ±    1570.750    B/op
[info] ArrayOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                       128  thrpt    5         0.075 ±       0.072  MB/sec
[info] ArrayOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5         1.223 ±       1.154    B/op
[info] ArrayOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                   128  thrpt    5      3124.039 ±    1431.918  MB/sec
[info] ArrayOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5     51004.627 ±   23280.388    B/op
[info] ArrayOfBooleansBenchmark.readPlayJson:·gc.count                                                     128  thrpt    5        23.000                counts
[info] ArrayOfBooleansBenchmark.readPlayJson:·gc.time                                                      128  thrpt    5        22.000                    ms
[info] ArrayOfBooleansBenchmark.readUPickle                                                                128  thrpt    5    652663.426 ±   29429.945   ops/s
[info] ArrayOfBooleansBenchmark.readUPickle:·gc.alloc.rate                                                 128  thrpt    5      1754.460 ±      94.941  MB/sec
[info] ArrayOfBooleansBenchmark.readUPickle:·gc.alloc.rate.norm                                            128  thrpt    5      4231.152 ±     146.573    B/op
[info] ArrayOfBooleansBenchmark.readUPickle:·gc.churn.PS_Eden_Space                                        128  thrpt    5         0.071 ±       0.134  MB/sec
[info] ArrayOfBooleansBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5         0.171 ±       0.332    B/op
[info] ArrayOfBooleansBenchmark.readUPickle:·gc.churn.PS_Survivor_Space                                    128  thrpt    5      1754.256 ±    1424.397  MB/sec
[info] ArrayOfBooleansBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5      4231.560 ±    3452.079    B/op
[info] ArrayOfBooleansBenchmark.readUPickle:·gc.count                                                      128  thrpt    5        13.000                counts
[info] ArrayOfBooleansBenchmark.readUPickle:·gc.time                                                       128  thrpt    5        12.000                    ms
[info] ArrayOfBooleansBenchmark.writeCirce                                                                 128  thrpt    5    356258.173 ±    1872.793   ops/s
[info] ArrayOfBooleansBenchmark.writeCirce:·gc.alloc.rate                                                  128  thrpt    5       565.650 ±      31.514  MB/sec
[info] ArrayOfBooleansBenchmark.writeCirce:·gc.alloc.rate.norm                                             128  thrpt    5      2499.242 ±     147.539    B/op
[info] ArrayOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                         128  thrpt    5         0.142 ±       1.086  MB/sec
[info] ArrayOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5         0.626 ±       4.805    B/op
[info] ArrayOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                     128  thrpt    5       539.173 ±    1160.610  MB/sec
[info] ArrayOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5      2383.598 ±    5130.876    B/op
[info] ArrayOfBooleansBenchmark.writeCirce:·gc.count                                                       128  thrpt    5         4.000                counts
[info] ArrayOfBooleansBenchmark.writeCirce:·gc.time                                                        128  thrpt    5         4.000                    ms
[info] ArrayOfBooleansBenchmark.writeDslJsonJava                                                           128  thrpt    5   1316266.443 ±    5635.107   ops/s
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.alloc.rate                                            128  thrpt    5       628.484 ±      17.801  MB/sec
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                       128  thrpt    5       751.589 ±      19.078    B/op
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                                   128  thrpt    5         0.741 ±       6.206  MB/sec
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5         0.888 ±       7.432    B/op
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                               128  thrpt    5       670.560 ±       2.033  MB/sec
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5       801.911 ±       5.291    B/op
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.count                                                 128  thrpt    5         5.000                counts
[info] ArrayOfBooleansBenchmark.writeDslJsonJava:·gc.time                                                  128  thrpt    5         7.000                    ms
[info] ArrayOfBooleansBenchmark.writeJacksonScala                                                          128  thrpt    5    984732.000 ±   20585.991   ops/s
[info] ArrayOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate                                           128  thrpt    5       716.400 ±      20.643  MB/sec
[info] ArrayOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                      128  thrpt    5      1145.228 ±      33.988    B/op
[info] ArrayOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5         0.025 ±       0.132  MB/sec
[info] ArrayOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5         0.040 ±       0.211    B/op
[info] ArrayOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5       674.056 ±       0.551  MB/sec
[info] ArrayOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5      1077.547 ±      22.229    B/op
[info] ArrayOfBooleansBenchmark.writeJacksonScala:·gc.count                                                128  thrpt    5         5.000                counts
[info] ArrayOfBooleansBenchmark.writeJacksonScala:·gc.time                                                 128  thrpt    5         6.000                    ms
[info] ArrayOfBooleansBenchmark.writeJsoniterScala                                                         128  thrpt    5   2489485.239 ±  150784.631   ops/s
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate                                          128  thrpt    5      1185.574 ±      73.310  MB/sec
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                     128  thrpt    5       749.608 ±      35.866    B/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5         0.058 ±       0.215  MB/sec
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5         0.037 ±       0.137    B/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5      1079.142 ±    1422.296  MB/sec
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5       683.966 ±     919.564    B/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.count                                               128  thrpt    5         8.000                counts
[info] ArrayOfBooleansBenchmark.writeJsoniterScala:·gc.time                                                128  thrpt    5         7.000                    ms
[info] ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc                                                 128  thrpt    5   2820417.852 ±   20219.242   ops/s
[info] ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                  128  thrpt    5         0.313 ±       2.546  MB/sec
[info] ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                             128  thrpt    5         0.175 ±       1.424    B/op
[info] ArrayOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count                                       128  thrpt    5           ≈ 0                counts
[info] ArrayOfBooleansBenchmark.writePlayJson                                                              128  thrpt    5    472737.657 ±   19176.967   ops/s
[info] ArrayOfBooleansBenchmark.writePlayJson:·gc.alloc.rate                                               128  thrpt    5       557.116 ±      31.187  MB/sec
[info] ArrayOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm                                          128  thrpt    5      1855.183 ±     105.663    B/op
[info] ArrayOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                      128  thrpt    5         0.200 ±       1.632  MB/sec
[info] ArrayOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5         0.666 ±       5.442    B/op
[info] ArrayOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                  128  thrpt    5       539.593 ±    1161.515  MB/sec
[info] ArrayOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5      1800.712 ±    3877.068    B/op
[info] ArrayOfBooleansBenchmark.writePlayJson:·gc.count                                                    128  thrpt    5         4.000                counts
[info] ArrayOfBooleansBenchmark.writePlayJson:·gc.time                                                     128  thrpt    5         5.000                    ms
[info] ArrayOfBooleansBenchmark.writeUPickle                                                               128  thrpt    5    180913.151 ±   12257.502   ops/s
[info] ArrayOfBooleansBenchmark.writeUPickle:·gc.alloc.rate                                                128  thrpt    5       469.904 ±      37.370  MB/sec
[info] ArrayOfBooleansBenchmark.writeUPickle:·gc.alloc.rate.norm                                           128  thrpt    5      4088.993 ±     323.066    B/op
[info] ArrayOfBooleansBenchmark.writeUPickle:·gc.churn.PS_Eden_Space                                       128  thrpt    5         0.489 ±       4.100  MB/sec
[info] ArrayOfBooleansBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5         4.389 ±      36.828    B/op
[info] ArrayOfBooleansBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space                                   128  thrpt    5       405.103 ±    1423.994  MB/sec
[info] ArrayOfBooleansBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5      3548.432 ±   12478.385    B/op
[info] ArrayOfBooleansBenchmark.writeUPickle:·gc.count                                                     128  thrpt    5         3.000                counts
[info] ArrayOfBooleansBenchmark.writeUPickle:·gc.time                                                      128  thrpt    5         6.000                    ms
[info] ArrayOfBytesBenchmark.readCirce                                                                     128  thrpt    5    165206.959 ±    2749.381   ops/s
[info] ArrayOfBytesBenchmark.readCirce:·gc.alloc.rate                                                      128  thrpt    5      2052.035 ±      20.291  MB/sec
[info] ArrayOfBytesBenchmark.readCirce:·gc.alloc.rate.norm                                                 128  thrpt    5     19548.509 ±     367.259    B/op
[info] ArrayOfBytesBenchmark.readCirce:·gc.churn.PS_Eden_Space                                             128  thrpt    5         0.062 ±       0.160  MB/sec
[info] ArrayOfBytesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                        128  thrpt    5         0.596 ±       1.529    B/op
[info] ArrayOfBytesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                         128  thrpt    5      2027.669 ±      18.343  MB/sec
[info] ArrayOfBytesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                    128  thrpt    5     19316.495 ±     446.456    B/op
[info] ArrayOfBytesBenchmark.readCirce:·gc.count                                                           128  thrpt    5        15.000                counts
[info] ArrayOfBytesBenchmark.readCirce:·gc.time                                                            128  thrpt    5        14.000                    ms
[info] ArrayOfBytesBenchmark.readJacksonScala                                                              128  thrpt    5    441431.252 ±    7601.549   ops/s
[info] ArrayOfBytesBenchmark.readJacksonScala:·gc.alloc.rate                                               128  thrpt    5       348.397 ±      40.199  MB/sec
[info] ArrayOfBytesBenchmark.readJacksonScala:·gc.alloc.rate.norm                                          128  thrpt    5      1242.234 ±     138.972    B/op
[info] ArrayOfBytesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                      128  thrpt    5         0.158 ±       1.362  MB/sec
[info] ArrayOfBytesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5         0.564 ±       4.859    B/op
[info] ArrayOfBytesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                  128  thrpt    5       269.381 ±    1420.370  MB/sec
[info] ArrayOfBytesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5       959.994 ±    5061.773    B/op
[info] ArrayOfBytesBenchmark.readJacksonScala:·gc.count                                                    128  thrpt    5         2.000                counts
[info] ArrayOfBytesBenchmark.readJacksonScala:·gc.time                                                     128  thrpt    5         3.000                    ms
[info] ArrayOfBytesBenchmark.readJsoniterScala                                                             128  thrpt    5   1200470.596 ±   13000.065   ops/s
[info] ArrayOfBytesBenchmark.readJsoniterScala:·gc.alloc.rate                                              128  thrpt    5       237.736 ±      29.200  MB/sec
[info] ArrayOfBytesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                         128  thrpt    5       311.746 ±      40.918    B/op
[info] ArrayOfBytesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                     128  thrpt    5         0.004 ±       0.022  MB/sec
[info] ArrayOfBytesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5         0.005 ±       0.029    B/op
[info] ArrayOfBytesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                 128  thrpt    5       204.605 ±    1078.823  MB/sec
[info] ArrayOfBytesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5       268.906 ±    1417.871    B/op
[info] ArrayOfBytesBenchmark.readJsoniterScala:·gc.count                                                   128  thrpt    5         2.000                counts
[info] ArrayOfBytesBenchmark.readJsoniterScala:·gc.time                                                    128  thrpt    5         5.000                    ms
[info] ArrayOfBytesBenchmark.readPlayJson                                                                  128  thrpt    5     81911.351 ±    2097.351   ops/s
[info] ArrayOfBytesBenchmark.readPlayJson:·gc.alloc.rate                                                   128  thrpt    5      3283.684 ±      91.207  MB/sec
[info] ArrayOfBytesBenchmark.readPlayJson:·gc.alloc.rate.norm                                              128  thrpt    5     63101.200 ±    1875.979    B/op
[info] ArrayOfBytesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                          128  thrpt    5         0.079 ±       0.143  MB/sec
[info] ArrayOfBytesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                     128  thrpt    5         1.519 ±       2.743    B/op
[info] ArrayOfBytesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                      128  thrpt    5      3124.089 ±    1440.513  MB/sec
[info] ArrayOfBytesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5     60058.205 ±   28595.855    B/op
[info] ArrayOfBytesBenchmark.readPlayJson:·gc.count                                                        128  thrpt    5        23.000                counts
[info] ArrayOfBytesBenchmark.readPlayJson:·gc.time                                                         128  thrpt    5        22.000                    ms
[info] ArrayOfBytesBenchmark.readUPickle                                                                   128  thrpt    5    264057.348 ±   10924.816   ops/s
[info] ArrayOfBytesBenchmark.readUPickle:·gc.alloc.rate                                                    128  thrpt    5      1234.040 ±      41.120  MB/sec
[info] ArrayOfBytesBenchmark.readUPickle:·gc.alloc.rate.norm                                               128  thrpt    5      7355.860 ±     259.444    B/op
[info] ArrayOfBytesBenchmark.readUPickle:·gc.churn.PS_Eden_Space                                           128  thrpt    5         0.054 ±       0.134  MB/sec
[info] ArrayOfBytesBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm                                      128  thrpt    5         0.324 ±       0.805    B/op
[info] ArrayOfBytesBenchmark.readUPickle:·gc.churn.PS_Survivor_Space                                       128  thrpt    5      1210.232 ±    1158.634  MB/sec
[info] ArrayOfBytesBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm                                  128  thrpt    5      7222.145 ±    7014.981    B/op
[info] ArrayOfBytesBenchmark.readUPickle:·gc.count                                                         128  thrpt    5         9.000                counts
[info] ArrayOfBytesBenchmark.readUPickle:·gc.time                                                          128  thrpt    5         7.000                    ms
[info] ArrayOfBytesBenchmark.writeCirce                                                                    128  thrpt    5    285657.471 ±   11979.868   ops/s
[info] ArrayOfBytesBenchmark.writeCirce:·gc.alloc.rate                                                     128  thrpt    5      1296.469 ±      46.261  MB/sec
[info] ArrayOfBytesBenchmark.writeCirce:·gc.alloc.rate.norm                                                128  thrpt    5      7144.450 ±     210.263    B/op
[info] ArrayOfBytesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                            128  thrpt    5         0.033 ±       0.122  MB/sec
[info] ArrayOfBytesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                       128  thrpt    5         0.184 ±       0.670    B/op
[info] ArrayOfBytesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                        128  thrpt    5      1216.420 ±    1166.329  MB/sec
[info] ArrayOfBytesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                   128  thrpt    5      6712.455 ±    6544.419    B/op
[info] ArrayOfBytesBenchmark.writeCirce:·gc.count                                                          128  thrpt    5         9.000                counts
[info] ArrayOfBytesBenchmark.writeCirce:·gc.time                                                           128  thrpt    5         8.000                    ms
[info] ArrayOfBytesBenchmark.writeJacksonScala                                                             128  thrpt    5   1801640.441 ±   64910.104   ops/s
[info] ArrayOfBytesBenchmark.writeJacksonScala:·gc.alloc.rate                                              128  thrpt    5       950.015 ±      60.121  MB/sec
[info] ArrayOfBytesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                         128  thrpt    5       829.974 ±      38.965    B/op
[info] ArrayOfBytesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                     128  thrpt    5         0.029 ±       0.176  MB/sec
[info] ArrayOfBytesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5         0.025 ±       0.152    B/op
[info] ArrayOfBytesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                 128  thrpt    5       809.266 ±    1161.234  MB/sec
[info] ArrayOfBytesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5       706.178 ±     997.546    B/op
[info] ArrayOfBytesBenchmark.writeJacksonScala:·gc.count                                                   128  thrpt    5         6.000                counts
[info] ArrayOfBytesBenchmark.writeJacksonScala:·gc.time                                                    128  thrpt    5         6.000                    ms
[info] ArrayOfBytesBenchmark.writeJsoniterScala                                                            128  thrpt    5   2419484.833 ±  179661.702   ops/s
[info] ArrayOfBytesBenchmark.writeJsoniterScala:·gc.alloc.rate                                             128  thrpt    5       675.223 ±      57.472  MB/sec
[info] ArrayOfBytesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                        128  thrpt    5       439.282 ±      18.782    B/op
[info] ArrayOfBytesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5         0.558 ±       4.714  MB/sec
[info] ArrayOfBytesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5         0.360 ±       3.039    B/op
[info] ArrayOfBytesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5       673.261 ±       2.260  MB/sec
[info] ArrayOfBytesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5       438.138 ±      33.358    B/op
[info] ArrayOfBytesBenchmark.writeJsoniterScala:·gc.count                                                  128  thrpt    5         5.000                counts
[info] ArrayOfBytesBenchmark.writeJsoniterScala:·gc.time                                                   128  thrpt    5         7.000                    ms
[info] ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc                                                    128  thrpt    5   2668677.293 ±    5881.177   ops/s
[info] ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                     128  thrpt    5         0.064 ±       0.287  MB/sec
[info] ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                128  thrpt    5         0.038 ±       0.169    B/op
[info] ArrayOfBytesBenchmark.writeJsoniterScalaPrealloc:·gc.count                                          128  thrpt    5           ≈ 0                counts
[info] ArrayOfBytesBenchmark.writePlayJson                                                                 128  thrpt    5     45488.022 ±    1050.655   ops/s
[info] ArrayOfBytesBenchmark.writePlayJson:·gc.alloc.rate                                                  128  thrpt    5      1978.333 ±      96.628  MB/sec
[info] ArrayOfBytesBenchmark.writePlayJson:·gc.alloc.rate.norm                                             128  thrpt    5     68455.087 ±    2169.608    B/op
[info] ArrayOfBytesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                         128  thrpt    5         0.058 ±       0.132  MB/sec
[info] ArrayOfBytesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5         2.013 ±       4.556    B/op
[info] ArrayOfBytesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                     128  thrpt    5      1895.122 ±    1162.663  MB/sec
[info] ArrayOfBytesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5     65537.593 ±   39254.864    B/op
[info] ArrayOfBytesBenchmark.writePlayJson:·gc.count                                                       128  thrpt    5        14.000                counts
[info] ArrayOfBytesBenchmark.writePlayJson:·gc.time                                                        128  thrpt    5        14.000                    ms
[info] ArrayOfBytesBenchmark.writeUPickle                                                                  128  thrpt    5    152704.650 ±    1823.638   ops/s
[info] ArrayOfBytesBenchmark.writeUPickle:·gc.alloc.rate                                                   128  thrpt    5       833.118 ±      25.466  MB/sec
[info] ArrayOfBytesBenchmark.writeUPickle:·gc.alloc.rate.norm                                              128  thrpt    5      8587.800 ±     249.275    B/op
[info] ArrayOfBytesBenchmark.writeUPickle:·gc.churn.PS_Eden_Space                                          128  thrpt    5         0.012 ±       0.072  MB/sec
[info] ArrayOfBytesBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm                                     128  thrpt    5         0.129 ±       0.738    B/op
[info] ArrayOfBytesBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space                                      128  thrpt    5       807.496 ±    1160.539  MB/sec
[info] ArrayOfBytesBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5      8323.678 ±   11961.992    B/op
[info] ArrayOfBytesBenchmark.writeUPickle:·gc.count                                                        128  thrpt    5         6.000                counts
[info] ArrayOfBytesBenchmark.writeUPickle:·gc.time                                                         128  thrpt    5         6.000                    ms
[info] ArrayOfCharsBenchmark.readCirce                                                                     128  thrpt    5    246054.132 ±   14813.022   ops/s
[info] ArrayOfCharsBenchmark.readCirce:·gc.alloc.rate                                                      128  thrpt    5      2618.368 ±     131.070  MB/sec
[info] ArrayOfCharsBenchmark.readCirce:·gc.alloc.rate.norm                                                 128  thrpt    5     16748.737 ±     569.870    B/op
[info] ArrayOfCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                             128  thrpt    5         0.075 ±       0.166  MB/sec
[info] ArrayOfCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                        128  thrpt    5         0.480 ±       1.074    B/op
[info] ArrayOfCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                         128  thrpt    5      2436.008 ±    1428.688  MB/sec
[info] ArrayOfCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                    128  thrpt    5     15606.626 ±    9829.196    B/op
[info] ArrayOfCharsBenchmark.readCirce:·gc.count                                                           128  thrpt    5        18.000                counts
[info] ArrayOfCharsBenchmark.readCirce:·gc.time                                                            128  thrpt    5        17.000                    ms
[info] ArrayOfCharsBenchmark.readJacksonScala                                                              128  thrpt    5    367220.529 ±   14234.558   ops/s
[info] ArrayOfCharsBenchmark.readJacksonScala:·gc.alloc.rate                                               128  thrpt    5      1802.667 ±      84.274  MB/sec
[info] ArrayOfCharsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                          128  thrpt    5      7726.905 ±     272.968    B/op
[info] ArrayOfCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                      128  thrpt    5         0.046 ±       0.143  MB/sec
[info] ArrayOfCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5         0.197 ±       0.626    B/op
[info] ArrayOfCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                  128  thrpt    5      1758.962 ±    1432.770  MB/sec
[info] ArrayOfCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5      7544.173 ±    6235.510    B/op
[info] ArrayOfCharsBenchmark.readJacksonScala:·gc.count                                                    128  thrpt    5        13.000                counts
[info] ArrayOfCharsBenchmark.readJacksonScala:·gc.time                                                     128  thrpt    5        12.000                    ms
[info] ArrayOfCharsBenchmark.readJsoniterScala                                                             128  thrpt    5   2189258.115 ±   17517.635   ops/s
[info] ArrayOfCharsBenchmark.readJsoniterScala:·gc.alloc.rate                                              128  thrpt    5       780.207 ±      33.328  MB/sec
[info] ArrayOfCharsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                         128  thrpt    5       560.984 ±      28.011    B/op
[info] ArrayOfCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                     128  thrpt    5         0.017 ±       0.088  MB/sec
[info] ArrayOfCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5         0.012 ±       0.063    B/op
[info] ArrayOfCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                 128  thrpt    5       807.500 ±    1157.924  MB/sec
[info] ArrayOfCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5       580.939 ±     839.152    B/op
[info] ArrayOfCharsBenchmark.readJsoniterScala:·gc.count                                                   128  thrpt    5         6.000                counts
[info] ArrayOfCharsBenchmark.readJsoniterScala:·gc.time                                                    128  thrpt    5         6.000                    ms
[info] ArrayOfCharsBenchmark.readPlayJson                                                                  128  thrpt    5     91608.284 ±     562.346   ops/s
[info] ArrayOfCharsBenchmark.readPlayJson:·gc.alloc.rate                                                   128  thrpt    5      3619.431 ±      85.854  MB/sec
[info] ArrayOfCharsBenchmark.readPlayJson:·gc.alloc.rate.norm                                              128  thrpt    5     62182.911 ±    1294.465    B/op
[info] ArrayOfCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                          128  thrpt    5         0.071 ±       0.209  MB/sec
[info] ArrayOfCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                     128  thrpt    5         1.215 ±       3.586    B/op
[info] ArrayOfCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                      128  thrpt    5      3532.280 ±    1172.254  MB/sec
[info] ArrayOfCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5     60682.105 ±   19905.530    B/op
[info] ArrayOfCharsBenchmark.readPlayJson:·gc.count                                                        128  thrpt    5        26.000                counts
[info] ArrayOfCharsBenchmark.readPlayJson:·gc.time                                                         128  thrpt    5        26.000                    ms
[info] ArrayOfCharsBenchmark.readUPickle                                                                   128  thrpt    5    338402.354 ±   11237.512   ops/s
[info] ArrayOfCharsBenchmark.readUPickle:·gc.alloc.rate                                                    128  thrpt    5      1642.749 ±      63.281  MB/sec
[info] ArrayOfCharsBenchmark.readUPickle:·gc.alloc.rate.norm                                               128  thrpt    5      7640.568 ±     202.656    B/op
[info] ArrayOfCharsBenchmark.readUPickle:·gc.churn.PS_Eden_Space                                           128  thrpt    5         0.033 ±       0.122  MB/sec
[info] ArrayOfCharsBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm                                      128  thrpt    5         0.155 ±       0.568    B/op
[info] ArrayOfCharsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space                                       128  thrpt    5      1617.327 ±    1415.253  MB/sec
[info] ArrayOfCharsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm                                  128  thrpt    5      7519.514 ±    6512.983    B/op
[info] ArrayOfCharsBenchmark.readUPickle:·gc.count                                                         128  thrpt    5        12.000                counts
[info] ArrayOfCharsBenchmark.readUPickle:·gc.time                                                          128  thrpt    5        12.000                    ms
[info] ArrayOfCharsBenchmark.writeCirce                                                                    128  thrpt    5    231739.457 ±    9335.488   ops/s
[info] ArrayOfCharsBenchmark.writeCirce:·gc.alloc.rate                                                     128  thrpt    5      1558.156 ±      67.795  MB/sec
[info] ArrayOfCharsBenchmark.writeCirce:·gc.alloc.rate.norm                                                128  thrpt    5     10583.733 ±     494.118    B/op
[info] ArrayOfCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                            128  thrpt    5         0.046 ±       0.174  MB/sec
[info] ArrayOfCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                       128  thrpt    5         0.309 ±       1.162    B/op
[info] ArrayOfCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                        128  thrpt    5      1622.689 ±    1426.551  MB/sec
[info] ArrayOfCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                   128  thrpt    5     11025.325 ±    9763.457    B/op
[info] ArrayOfCharsBenchmark.writeCirce:·gc.count                                                          128  thrpt    5        12.000                counts
[info] ArrayOfCharsBenchmark.writeCirce:·gc.time                                                           128  thrpt    5        12.000                    ms
[info] ArrayOfCharsBenchmark.writeJacksonScala                                                             128  thrpt    5   1393390.309 ±   43104.654   ops/s
[info] ArrayOfCharsBenchmark.writeJacksonScala:·gc.alloc.rate                                              128  thrpt    5       838.459 ±      40.381  MB/sec
[info] ArrayOfCharsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                         128  thrpt    5       947.176 ±      43.357    B/op
[info] ArrayOfCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                     128  thrpt    5         0.033 ±       0.201  MB/sec
[info] ArrayOfCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5         0.038 ±       0.228    B/op
[info] ArrayOfCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                 128  thrpt    5       808.552 ±    1160.548  MB/sec
[info] ArrayOfCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5       913.613 ±    1314.977    B/op
[info] ArrayOfCharsBenchmark.writeJacksonScala:·gc.count                                                   128  thrpt    5         6.000                counts
[info] ArrayOfCharsBenchmark.writeJacksonScala:·gc.time                                                    128  thrpt    5         6.000                    ms
[info] ArrayOfCharsBenchmark.writeJsoniterScala                                                            128  thrpt    5   2810200.471 ±   56026.726   ops/s
[info] ArrayOfCharsBenchmark.writeJsoniterScala:·gc.alloc.rate                                             128  thrpt    5       983.699 ±      42.439  MB/sec
[info] ArrayOfCharsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                        128  thrpt    5       550.944 ±      17.335    B/op
[info] ArrayOfCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5         0.050 ±       0.231  MB/sec
[info] ArrayOfCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5         0.028 ±       0.129    B/op
[info] ArrayOfCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5      1076.682 ±    1419.858  MB/sec
[info] ArrayOfCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5       603.077 ±     795.770    B/op
[info] ArrayOfCharsBenchmark.writeJsoniterScala:·gc.count                                                  128  thrpt    5         8.000                counts
[info] ArrayOfCharsBenchmark.writeJsoniterScala:·gc.time                                                   128  thrpt    5         7.000                    ms
[info] ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc                                                    128  thrpt    5   3107540.843 ±   11583.963   ops/s
[info] ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                     128  thrpt    5         0.055 ±       0.468  MB/sec
[info] ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                128  thrpt    5         0.028 ±       0.237    B/op
[info] ArrayOfCharsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                          128  thrpt    5           ≈ 0                counts
[info] ArrayOfCharsBenchmark.writePlayJson                                                                 128  thrpt    5    377180.308 ±    8544.020   ops/s
[info] ArrayOfCharsBenchmark.writePlayJson:·gc.alloc.rate                                                  128  thrpt    5      2404.834 ±      87.274  MB/sec
[info] ArrayOfCharsBenchmark.writePlayJson:·gc.alloc.rate.norm                                             128  thrpt    5     10035.066 ±     332.773    B/op
[info] ArrayOfCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                         128  thrpt    5         0.075 ±       0.122  MB/sec
[info] ArrayOfCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5         0.312 ±       0.501    B/op
[info] ArrayOfCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                     128  thrpt    5      2304.350 ±    1439.259  MB/sec
[info] ArrayOfCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5      9618.707 ±    6094.806    B/op
[info] ArrayOfCharsBenchmark.writePlayJson:·gc.count                                                       128  thrpt    5        17.000                counts
[info] ArrayOfCharsBenchmark.writePlayJson:·gc.time                                                        128  thrpt    5        16.000                    ms
[info] ArrayOfCharsBenchmark.writeUPickle                                                                  128  thrpt    5    102630.286 ±    9042.089   ops/s
[info] ArrayOfCharsBenchmark.writeUPickle:·gc.alloc.rate                                                   128  thrpt    5       576.636 ±      59.164  MB/sec
[info] ArrayOfCharsBenchmark.writeUPickle:·gc.alloc.rate.norm                                              128  thrpt    5      8843.426 ±     617.174    B/op
[info] ArrayOfCharsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space                                          128  thrpt    5         0.591 ±       5.047  MB/sec
[info] ArrayOfCharsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm                                     128  thrpt    5         9.447 ±      80.659    B/op
[info] ArrayOfCharsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space                                      128  thrpt    5       538.252 ±    1158.629  MB/sec
[info] ArrayOfCharsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5      8283.634 ±   17854.720    B/op
[info] ArrayOfCharsBenchmark.writeUPickle:·gc.count                                                        128  thrpt    5         4.000                counts
[info] ArrayOfCharsBenchmark.writeUPickle:·gc.time                                                         128  thrpt    5         6.000                    ms
[info] ArrayOfDoublesBenchmark.readCirce                                                                   128  thrpt    5     25377.897 ±     717.527   ops/s
[info] ArrayOfDoublesBenchmark.readCirce:·gc.alloc.rate                                                    128  thrpt    5      1486.103 ±      33.034  MB/sec
[info] ArrayOfDoublesBenchmark.readCirce:·gc.alloc.rate.norm                                               128  thrpt    5     92164.377 ±    1303.704    B/op
[info] ArrayOfDoublesBenchmark.readCirce:·gc.churn.PS_Eden_Space                                           128  thrpt    5         0.017 ±       0.036  MB/sec
[info] ArrayOfDoublesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                      128  thrpt    5         1.034 ±       2.227    B/op
[info] ArrayOfDoublesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                       128  thrpt    5      1350.291 ±       8.021  MB/sec
[info] ArrayOfDoublesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                  128  thrpt    5     83744.471 ±    2639.699    B/op
[info] ArrayOfDoublesBenchmark.readCirce:·gc.count                                                         128  thrpt    5        10.000                counts
[info] ArrayOfDoublesBenchmark.readCirce:·gc.time                                                          128  thrpt    5        10.000                    ms
[info] ArrayOfDoublesBenchmark.readDslJsonJava                                                             128  thrpt    5     87174.707 ±    2755.294   ops/s
[info] ArrayOfDoublesBenchmark.readDslJsonJava:·gc.alloc.rate                                              128  thrpt    5       808.587 ±      27.572  MB/sec
[info] ArrayOfDoublesBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                         128  thrpt    5     14600.548 ±     516.856    B/op
[info] ArrayOfDoublesBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                                     128  thrpt    5         0.025 ±       0.105  MB/sec
[info] ArrayOfDoublesBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5         0.451 ±       1.892    B/op
[info] ArrayOfDoublesBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                                 128  thrpt    5       802.736 ±    1153.838  MB/sec
[info] ArrayOfDoublesBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5     14509.221 ±   21108.551    B/op
[info] ArrayOfDoublesBenchmark.readDslJsonJava:·gc.count                                                   128  thrpt    5         6.000                counts
[info] ArrayOfDoublesBenchmark.readDslJsonJava:·gc.time                                                    128  thrpt    5         6.000                    ms
[info] ArrayOfDoublesBenchmark.readJacksonScala                                                            128  thrpt    5     59258.684 ±    1107.764   ops/s
[info] ArrayOfDoublesBenchmark.readJacksonScala:·gc.alloc.rate                                             128  thrpt    5      1004.703 ±      46.331  MB/sec
[info] ArrayOfDoublesBenchmark.readJacksonScala:·gc.alloc.rate.norm                                        128  thrpt    5     26686.555 ±    1064.514    B/op
[info] ArrayOfDoublesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5         0.029 ±       0.176  MB/sec
[info] ArrayOfDoublesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5         0.772 ±       4.647    B/op
[info] ArrayOfDoublesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5       944.198 ±    1422.982  MB/sec
[info] ArrayOfDoublesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5     25057.181 ±   37476.924    B/op
[info] ArrayOfDoublesBenchmark.readJacksonScala:·gc.count                                                  128  thrpt    5         7.000                counts
[info] ArrayOfDoublesBenchmark.readJacksonScala:·gc.time                                                   128  thrpt    5         7.000                    ms
[info] ArrayOfDoublesBenchmark.readJsoniterScala                                                           128  thrpt    5    136005.649 ±    6647.244   ops/s
[info] ArrayOfDoublesBenchmark.readJsoniterScala:·gc.alloc.rate                                            128  thrpt    5       898.954 ±      76.884  MB/sec
[info] ArrayOfDoublesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                       128  thrpt    5     10403.031 ±     523.307    B/op
[info] ArrayOfDoublesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5         0.025 ±       0.215  MB/sec
[info] ArrayOfDoublesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5         0.286 ±       2.459    B/op
[info] ArrayOfDoublesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5       806.617 ±    1157.354  MB/sec
[info] ArrayOfDoublesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5      9317.231 ±   13031.036    B/op
[info] ArrayOfDoublesBenchmark.readJsoniterScala:·gc.count                                                 128  thrpt    5         6.000                counts
[info] ArrayOfDoublesBenchmark.readJsoniterScala:·gc.time                                                  128  thrpt    5         7.000                    ms
[info] ArrayOfDoublesBenchmark.readPlayJson                                                                128  thrpt    5     35664.742 ±     975.651   ops/s
[info] ArrayOfDoublesBenchmark.readPlayJson:·gc.alloc.rate                                                 128  thrpt    5      1737.959 ±      64.924  MB/sec
[info] ArrayOfDoublesBenchmark.readPlayJson:·gc.alloc.rate.norm                                            128  thrpt    5     76698.223 ±    1221.861    B/op
[info] ArrayOfDoublesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                        128  thrpt    5         0.025 ±       0.105  MB/sec
[info] ArrayOfDoublesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5         1.098 ±       4.585    B/op
[info] ArrayOfDoublesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                    128  thrpt    5      1621.207 ±    1421.216  MB/sec
[info] ArrayOfDoublesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5     71479.552 ±   61128.305    B/op
[info] ArrayOfDoublesBenchmark.readPlayJson:·gc.count                                                      128  thrpt    5        12.000                counts
[info] ArrayOfDoublesBenchmark.readPlayJson:·gc.time                                                       128  thrpt    5        12.000                    ms
[info] ArrayOfDoublesBenchmark.readUPickle                                                                 128  thrpt    5     65035.696 ±    3242.156   ops/s
[info] ArrayOfDoublesBenchmark.readUPickle:·gc.alloc.rate                                                  128  thrpt    5      1197.324 ±      56.706  MB/sec
[info] ArrayOfDoublesBenchmark.readUPickle:·gc.alloc.rate.norm                                             128  thrpt    5     28975.943 ±     740.836    B/op
[info] ArrayOfDoublesBenchmark.readUPickle:·gc.churn.PS_Eden_Space                                         128  thrpt    5         0.033 ±       0.185  MB/sec
[info] ArrayOfDoublesBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5         0.804 ±       4.434    B/op
[info] ArrayOfDoublesBenchmark.readUPickle:·gc.churn.PS_Survivor_Space                                     128  thrpt    5      1077.397 ±    1419.722  MB/sec
[info] ArrayOfDoublesBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5     26087.509 ±   34525.337    B/op
[info] ArrayOfDoublesBenchmark.readUPickle:·gc.count                                                       128  thrpt    5         8.000                counts
[info] ArrayOfDoublesBenchmark.readUPickle:·gc.time                                                        128  thrpt    5         7.000                    ms
[info] ArrayOfDoublesBenchmark.writeCirce                                                                  128  thrpt    5     30759.801 ±     554.225   ops/s
[info] ArrayOfDoublesBenchmark.writeCirce:·gc.alloc.rate                                                   128  thrpt    5       358.534 ±      32.639  MB/sec
[info] ArrayOfDoublesBenchmark.writeCirce:·gc.alloc.rate.norm                                              128  thrpt    5     18346.443 ±    1905.809    B/op
[info] ArrayOfDoublesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                          128  thrpt    5         0.150 ±       1.246  MB/sec
[info] ArrayOfDoublesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                     128  thrpt    5         7.678 ±      63.824    B/op
[info] ArrayOfDoublesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                      128  thrpt    5       269.529 ±    1421.150  MB/sec
[info] ArrayOfDoublesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5     13846.763 ±   73010.562    B/op
[info] ArrayOfDoublesBenchmark.writeCirce:·gc.count                                                        128  thrpt    5         2.000                counts
[info] ArrayOfDoublesBenchmark.writeCirce:·gc.time                                                         128  thrpt    5         4.000                    ms
[info] ArrayOfDoublesBenchmark.writeJacksonScala                                                           128  thrpt    5     29870.541 ±     245.019   ops/s
[info] ArrayOfDoublesBenchmark.writeJacksonScala:·gc.alloc.rate                                            128  thrpt    5       339.148 ±      24.792  MB/sec
[info] ArrayOfDoublesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                       128  thrpt    5     17870.892 ±    1441.107    B/op
[info] ArrayOfDoublesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5         0.229 ±       1.971  MB/sec
[info] ArrayOfDoublesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5        12.099 ±     104.178    B/op
[info] ArrayOfDoublesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5       269.744 ±    1422.285  MB/sec
[info] ArrayOfDoublesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5     14242.905 ±   75098.775    B/op
[info] ArrayOfDoublesBenchmark.writeJacksonScala:·gc.count                                                 128  thrpt    5         2.000                counts
[info] ArrayOfDoublesBenchmark.writeJacksonScala:·gc.time                                                  128  thrpt    5         3.000                    ms
[info] ArrayOfDoublesBenchmark.writeJsoniterScala                                                          128  thrpt    5     33083.583 ±    2703.619   ops/s
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.alloc.rate                                           128  thrpt    5       374.449 ±      34.647  MB/sec
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                      128  thrpt    5     17817.702 ±    2026.286    B/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5         0.585 ±       4.971  MB/sec
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5        28.904 ±     245.713    B/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5       371.993 ±    1332.387  MB/sec
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5     17860.071 ±   64199.005    B/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.count                                                128  thrpt    5         3.000                counts
[info] ArrayOfDoublesBenchmark.writeJsoniterScala:·gc.time                                                 128  thrpt    5         9.000                    ms
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc                                                  128  thrpt    5     33456.384 ±     297.996   ops/s
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                   128  thrpt    5       337.940 ±      29.707  MB/sec
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                              128  thrpt    5     15896.911 ±    1517.419    B/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space                          128  thrpt    5         0.562 ±       4.840  MB/sec
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5        26.517 ±     228.318    B/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space                      128  thrpt    5       372.015 ±    1332.427  MB/sec
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5     17524.958 ±   62772.258    B/op
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.count                                        128  thrpt    5         3.000                counts
[info] ArrayOfDoublesBenchmark.writeJsoniterScalaPrealloc:·gc.time                                         128  thrpt    5         8.000                    ms
[info] ArrayOfDoublesBenchmark.writeUPickle                                                                128  thrpt    5     26658.969 ±    1054.967   ops/s
[info] ArrayOfDoublesBenchmark.writeUPickle:·gc.alloc.rate                                                 128  thrpt    5       471.296 ±      39.498  MB/sec
[info] ArrayOfDoublesBenchmark.writeUPickle:·gc.alloc.rate.norm                                            128  thrpt    5     27830.160 ±    3202.787    B/op
[info] ArrayOfDoublesBenchmark.writeUPickle:·gc.churn.PS_Eden_Space                                        128  thrpt    5         0.491 ±       4.141  MB/sec
[info] ArrayOfDoublesBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5        29.293 ±     247.001    B/op
[info] ArrayOfDoublesBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space                                    128  thrpt    5       405.114 ±    1424.034  MB/sec
[info] ArrayOfDoublesBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5     24047.926 ±   84540.046    B/op
[info] ArrayOfDoublesBenchmark.writeUPickle:·gc.count                                                      128  thrpt    5         3.000                counts
[info] ArrayOfDoublesBenchmark.writeUPickle:·gc.time                                                       128  thrpt    5         6.000                    ms
[info] ArrayOfDurationsBenchmark.readCirce                                                                 128  thrpt    5     20694.503 ±    1407.752   ops/s
[info] ArrayOfDurationsBenchmark.readCirce:·gc.alloc.rate                                                  128  thrpt    5       744.468 ±      48.183  MB/sec
[info] ArrayOfDurationsBenchmark.readCirce:·gc.alloc.rate.norm                                             128  thrpt    5     56624.796 ±    1455.519    B/op
[info] ArrayOfDurationsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                         128  thrpt    5         0.012 ±       0.072  MB/sec
[info] ArrayOfDurationsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5         0.940 ±       5.378    B/op
[info] ArrayOfDurationsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                     128  thrpt    5       674.335 ±       0.868  MB/sec
[info] ArrayOfDurationsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5     51301.668 ±    3467.494    B/op
[info] ArrayOfDurationsBenchmark.readCirce:·gc.count                                                       128  thrpt    5         5.000                counts
[info] ArrayOfDurationsBenchmark.readCirce:·gc.time                                                        128  thrpt    5         5.000                    ms
[info] ArrayOfDurationsBenchmark.readJacksonScala                                                          128  thrpt    5     19144.405 ±     333.811   ops/s
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.alloc.rate                                           128  thrpt    5       560.339 ±      43.575  MB/sec
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                      128  thrpt    5     46069.694 ±    4064.568    B/op
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5         0.266 ±       2.249  MB/sec
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5        21.941 ±     185.266    B/op
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5       539.330 ±    1160.948  MB/sec
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5     44413.868 ±   95605.817    B/op
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.count                                                128  thrpt    5         4.000                counts
[info] ArrayOfDurationsBenchmark.readJacksonScala:·gc.time                                                 128  thrpt    5         6.000                    ms
[info] ArrayOfDurationsBenchmark.readJsoniterScala                                                         128  thrpt    5    102493.004 ±    6994.200   ops/s
[info] ArrayOfDurationsBenchmark.readJsoniterScala:·gc.alloc.rate                                          128  thrpt    5       275.783 ±      31.546  MB/sec
[info] ArrayOfDurationsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                     128  thrpt    5      4235.337 ±     371.751    B/op
[info] ArrayOfDurationsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5       339.278 ±    1219.433  MB/sec
[info] ArrayOfDurationsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5      5202.142 ±   18640.386    B/op
[info] ArrayOfDurationsBenchmark.readJsoniterScala:·gc.count                                               128  thrpt    5         3.000                counts
[info] ArrayOfDurationsBenchmark.readJsoniterScala:·gc.time                                                128  thrpt    5         8.000                    ms
[info] ArrayOfDurationsBenchmark.readPlayJson                                                              128  thrpt    5     15677.809 ±    1408.842   ops/s
[info] ArrayOfDurationsBenchmark.readPlayJson:·gc.alloc.rate                                               128  thrpt    5       987.864 ±      45.950  MB/sec
[info] ArrayOfDurationsBenchmark.readPlayJson:·gc.alloc.rate.norm                                          128  thrpt    5     99220.377 ±    8842.192    B/op
[info] ArrayOfDurationsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                      128  thrpt    5         0.008 ±       0.044  MB/sec
[info] ArrayOfDurationsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5         0.831 ±       4.384    B/op
[info] ArrayOfDurationsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                  128  thrpt    5       944.685 ±    1423.622  MB/sec
[info] ArrayOfDurationsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5     95216.865 ±  147910.312    B/op
[info] ArrayOfDurationsBenchmark.readPlayJson:·gc.count                                                    128  thrpt    5         7.000                counts
[info] ArrayOfDurationsBenchmark.readPlayJson:·gc.time                                                     128  thrpt    5         8.000                    ms
[info] ArrayOfDurationsBenchmark.readUPickle                                                               128  thrpt    5     20639.251 ±     722.521   ops/s
[info] ArrayOfDurationsBenchmark.readUPickle:·gc.alloc.rate                                                128  thrpt    5       642.011 ±      20.583  MB/sec
[info] ArrayOfDurationsBenchmark.readUPickle:·gc.alloc.rate.norm                                           128  thrpt    5     48965.393 ±    1568.341    B/op
[info] ArrayOfDurationsBenchmark.readUPickle:·gc.churn.PS_Eden_Space                                       128  thrpt    5         0.641 ±       5.341  MB/sec
[info] ArrayOfDurationsBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5        49.342 ±     411.183    B/op
[info] ArrayOfDurationsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space                                   128  thrpt    5       671.892 ±       2.112  MB/sec
[info] ArrayOfDurationsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5     51246.357 ±    1929.797    B/op
[info] ArrayOfDurationsBenchmark.readUPickle:·gc.count                                                     128  thrpt    5         5.000                counts
[info] ArrayOfDurationsBenchmark.readUPickle:·gc.time                                                      128  thrpt    5         8.000                    ms
[info] ArrayOfDurationsBenchmark.writeCirce                                                                128  thrpt    5     43727.777 ±     938.807   ops/s
[info] ArrayOfDurationsBenchmark.writeCirce:·gc.alloc.rate                                                 128  thrpt    5       682.829 ±      32.952  MB/sec
[info] ArrayOfDurationsBenchmark.writeCirce:·gc.alloc.rate.norm                                            128  thrpt    5     24576.689 ±     943.423    B/op
[info] ArrayOfDurationsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                        128  thrpt    5         0.012 ±       0.044  MB/sec
[info] ArrayOfDurationsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5         0.450 ±       1.580    B/op
[info] ArrayOfDurationsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                    128  thrpt    5       674.777 ±       0.493  MB/sec
[info] ArrayOfDurationsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5     24287.745 ±     524.584    B/op
[info] ArrayOfDurationsBenchmark.writeCirce:·gc.count                                                      128  thrpt    5         5.000                counts
[info] ArrayOfDurationsBenchmark.writeCirce:·gc.time                                                       128  thrpt    5         5.000                    ms
[info] ArrayOfDurationsBenchmark.writeJacksonScala                                                         128  thrpt    5     54654.309 ±     201.686   ops/s
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.alloc.rate                                          128  thrpt    5       779.149 ±      26.111  MB/sec
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                     128  thrpt    5     22439.045 ±     784.051    B/op
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5         0.025 ±       0.132  MB/sec
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5         0.719 ±       3.791    B/op
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5       808.330 ±    1159.206  MB/sec
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5     23282.869 ±   33452.076    B/op
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.count                                               128  thrpt    5         6.000                counts
[info] ArrayOfDurationsBenchmark.writeJacksonScala:·gc.time                                                128  thrpt    5         7.000                    ms
[info] ArrayOfDurationsBenchmark.writeJsoniterScala                                                        128  thrpt    5    169412.136 ±    8483.343   ops/s
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.alloc.rate                                         128  thrpt    5       276.135 ±      25.030  MB/sec
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                    128  thrpt    5      2565.367 ±     254.231    B/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                128  thrpt    5         0.002 ±       0.018  MB/sec
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5         0.019 ±       0.165    B/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5       339.519 ±    1220.580  MB/sec
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5      3167.439 ±   11350.265    B/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.count                                              128  thrpt    5         3.000                counts
[info] ArrayOfDurationsBenchmark.writeJsoniterScala:·gc.time                                               128  thrpt    5         7.000                    ms
[info] ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc                                                128  thrpt    5    177819.475 ±     615.204   ops/s
[info] ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                 128  thrpt    5         0.083 ±       0.447  MB/sec
[info] ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                            128  thrpt    5         0.734 ±       3.962    B/op
[info] ArrayOfDurationsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                      128  thrpt    5           ≈ 0                counts
[info] ArrayOfDurationsBenchmark.writePlayJson                                                             128  thrpt    5     53632.558 ±    2574.743   ops/s
[info] ArrayOfDurationsBenchmark.writePlayJson:·gc.alloc.rate                                              128  thrpt    5       857.428 ±      69.693  MB/sec
[info] ArrayOfDurationsBenchmark.writePlayJson:·gc.alloc.rate.norm                                         128  thrpt    5     25162.292 ±    1128.795    B/op
[info] ArrayOfDurationsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                     128  thrpt    5         0.025 ±       0.132  MB/sec
[info] ArrayOfDurationsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5         0.727 ±       3.835    B/op
[info] ArrayOfDurationsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                 128  thrpt    5       808.734 ±    1160.211  MB/sec
[info] ArrayOfDurationsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5     23707.480 ±   33480.960    B/op
[info] ArrayOfDurationsBenchmark.writePlayJson:·gc.count                                                   128  thrpt    5         6.000                counts
[info] ArrayOfDurationsBenchmark.writePlayJson:·gc.time                                                    128  thrpt    5         6.000                    ms
[info] ArrayOfDurationsBenchmark.writeUPickle                                                              128  thrpt    5     18310.109 ±     825.029   ops/s
[info] ArrayOfDurationsBenchmark.writeUPickle:·gc.alloc.rate                                               128  thrpt    5       363.938 ±      34.683  MB/sec
[info] ArrayOfDurationsBenchmark.writeUPickle:·gc.alloc.rate.norm                                          128  thrpt    5     31289.728 ±    3258.312    B/op
[info] ArrayOfDurationsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space                                      128  thrpt    5         0.595 ±       5.103  MB/sec
[info] ArrayOfDurationsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5        51.015 ±     437.292    B/op
[info] ArrayOfDurationsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space                                  128  thrpt    5       371.667 ±    1331.010  MB/sec
[info] ArrayOfDurationsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5     32066.061 ±  114505.417    B/op
[info] ArrayOfDurationsBenchmark.writeUPickle:·gc.count                                                    128  thrpt    5         3.000                counts
[info] ArrayOfDurationsBenchmark.writeUPickle:·gc.time                                                     128  thrpt    5         8.000                    ms
[info] ArrayOfEnumsBenchmark.readCirce                                                                     128  thrpt    5     93753.305 ±    2076.454   ops/s
[info] ArrayOfEnumsBenchmark.readCirce:·gc.alloc.rate                                                      128  thrpt    5      1940.245 ±      62.958  MB/sec
[info] ArrayOfEnumsBenchmark.readCirce:·gc.alloc.rate.norm                                                 128  thrpt    5     32574.159 ±     797.235    B/op
[info] ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                             128  thrpt    5         0.050 ±       0.146  MB/sec
[info] ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                        128  thrpt    5         0.839 ±       2.434    B/op
[info] ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                         128  thrpt    5      1895.500 ±    1162.594  MB/sec
[info] ArrayOfEnumsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                    128  thrpt    5     31812.918 ±   19272.262    B/op
[info] ArrayOfEnumsBenchmark.readCirce:·gc.count                                                           128  thrpt    5        14.000                counts
[info] ArrayOfEnumsBenchmark.readCirce:·gc.time                                                            128  thrpt    5        14.000                    ms
[info] ArrayOfEnumsBenchmark.readJacksonScala                                                              128  thrpt    5    120056.304 ±    2092.160   ops/s
[info] ArrayOfEnumsBenchmark.readJacksonScala:·gc.alloc.rate                                               128  thrpt    5      1612.870 ±      30.555  MB/sec
[info] ArrayOfEnumsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                          128  thrpt    5     21145.038 ±     470.044    B/op
[info] ArrayOfEnumsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                      128  thrpt    5         0.029 ±       0.166  MB/sec
[info] ArrayOfEnumsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5         0.382 ±       2.178    B/op
[info] ArrayOfEnumsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                  128  thrpt    5      1487.115 ±    1163.886  MB/sec
[info] ArrayOfEnumsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5     19495.726 ±   15240.384    B/op
[info] ArrayOfEnumsBenchmark.readJacksonScala:·gc.count                                                    128  thrpt    5        11.000                counts
[info] ArrayOfEnumsBenchmark.readJacksonScala:·gc.time                                                     128  thrpt    5        10.000                    ms
[info] ArrayOfEnumsBenchmark.readJsoniterScala                                                             128  thrpt    5    199485.257 ±    1288.298   ops/s
[info] ArrayOfEnumsBenchmark.readJsoniterScala:·gc.alloc.rate                                              128  thrpt    5       131.578 ±      14.991  MB/sec
[info] ArrayOfEnumsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                         128  thrpt    5      1038.234 ±     122.540    B/op
[info] ArrayOfEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                 128  thrpt    5       102.312 ±     880.934  MB/sec
[info] ArrayOfEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5       808.796 ±    6963.980    B/op
[info] ArrayOfEnumsBenchmark.readJsoniterScala:·gc.count                                                   128  thrpt    5         1.000                counts
[info] ArrayOfEnumsBenchmark.readJsoniterScala:·gc.time                                                    128  thrpt    5         3.000                    ms
[info] ArrayOfEnumsBenchmark.readPlayJson                                                                  128  thrpt    5     53742.166 ±     529.744   ops/s
[info] ArrayOfEnumsBenchmark.readPlayJson:·gc.alloc.rate                                                   128  thrpt    5      2851.112 ±      83.115  MB/sec
[info] ArrayOfEnumsBenchmark.readPlayJson:·gc.alloc.rate.norm                                              128  thrpt    5     83507.103 ±    2171.692    B/op
[info] ArrayOfEnumsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                          128  thrpt    5         0.058 ±       0.132  MB/sec
[info] ArrayOfEnumsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                     128  thrpt    5         1.706 ±       3.852    B/op
[info] ArrayOfEnumsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                      128  thrpt    5      2712.862 ±      20.949  MB/sec
[info] ArrayOfEnumsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5     79458.355 ±     847.864    B/op
[info] ArrayOfEnumsBenchmark.readPlayJson:·gc.count                                                        128  thrpt    5        20.000                counts
[info] ArrayOfEnumsBenchmark.readPlayJson:·gc.time                                                         128  thrpt    5        18.000                    ms
[info] ArrayOfEnumsBenchmark.readUPickle                                                                   128  thrpt    5    110268.652 ±     869.378   ops/s
[info] ArrayOfEnumsBenchmark.readUPickle:·gc.alloc.rate                                                    128  thrpt    5      1672.387 ±      50.430  MB/sec
[info] ArrayOfEnumsBenchmark.readUPickle:·gc.alloc.rate.norm                                               128  thrpt    5     23873.342 ±     692.768    B/op
[info] ArrayOfEnumsBenchmark.readUPickle:·gc.churn.PS_Eden_Space                                           128  thrpt    5         0.083 ±       0.234  MB/sec
[info] ArrayOfEnumsBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm                                      128  thrpt    5         1.189 ±       3.347    B/op
[info] ArrayOfEnumsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space                                       128  thrpt    5      1615.749 ±    1426.739  MB/sec
[info] ArrayOfEnumsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm                                  128  thrpt    5     23066.480 ±   20403.349    B/op
[info] ArrayOfEnumsBenchmark.readUPickle:·gc.count                                                         128  thrpt    5        12.000                counts
[info] ArrayOfEnumsBenchmark.readUPickle:·gc.time                                                          128  thrpt    5        11.000                    ms
[info] ArrayOfEnumsBenchmark.writeCirce                                                                    128  thrpt    5    170293.706 ±   11275.442   ops/s
[info] ArrayOfEnumsBenchmark.writeCirce:·gc.alloc.rate                                                     128  thrpt    5       607.392 ±      42.372  MB/sec
[info] ArrayOfEnumsBenchmark.writeCirce:·gc.alloc.rate.norm                                                128  thrpt    5      5613.780 ±     103.519    B/op
[info] ArrayOfEnumsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                            128  thrpt    5         0.108 ±       0.798  MB/sec
[info] ArrayOfEnumsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                       128  thrpt    5         1.003 ±       7.399    B/op
[info] ArrayOfEnumsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                        128  thrpt    5       674.352 ±       1.397  MB/sec
[info] ArrayOfEnumsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                   128  thrpt    5      6234.129 ±     406.632    B/op
[info] ArrayOfEnumsBenchmark.writeCirce:·gc.count                                                          128  thrpt    5         5.000                counts
[info] ArrayOfEnumsBenchmark.writeCirce:·gc.time                                                           128  thrpt    5         6.000                    ms
[info] ArrayOfEnumsBenchmark.writeJacksonScala                                                             128  thrpt    5    368833.460 ±   26045.103   ops/s
[info] ArrayOfEnumsBenchmark.writeJacksonScala:·gc.alloc.rate                                              128  thrpt    5       386.076 ±      49.185  MB/sec
[info] ArrayOfEnumsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                         128  thrpt    5      1647.353 ±     195.517    B/op
[info] ArrayOfEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                     128  thrpt    5         0.117 ±       0.959  MB/sec
[info] ArrayOfEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5         0.498 ±       4.094    B/op
[info] ArrayOfEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                 128  thrpt    5       403.977 ±    1420.036  MB/sec
[info] ArrayOfEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5      1727.288 ±    6072.785    B/op
[info] ArrayOfEnumsBenchmark.writeJacksonScala:·gc.count                                                   128  thrpt    5         3.000                counts
[info] ArrayOfEnumsBenchmark.writeJacksonScala:·gc.time                                                    128  thrpt    5         4.000                    ms
[info] ArrayOfEnumsBenchmark.writeJsoniterScala                                                            128  thrpt    5    638022.950 ±    8959.083   ops/s
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.alloc.rate                                             128  thrpt    5       503.112 ±      27.935  MB/sec
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                        128  thrpt    5      1241.219 ±      64.681    B/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5         0.545 ±       4.695  MB/sec
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5         1.349 ±      11.619    B/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5       538.974 ±    1160.183  MB/sec
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5      1329.612 ±    2862.211    B/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.count                                                  128  thrpt    5         4.000                counts
[info] ArrayOfEnumsBenchmark.writeJsoniterScala:·gc.time                                                   128  thrpt    5         7.000                    ms
[info] ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc                                                    128  thrpt    5    669320.766 ±    7981.984   ops/s
[info] ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                     128  thrpt    5         0.230 ±       1.764  MB/sec
[info] ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                128  thrpt    5         0.544 ±       4.172    B/op
[info] ArrayOfEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                          128  thrpt    5           ≈ 0                counts
[info] ArrayOfEnumsBenchmark.writePlayJson                                                                 128  thrpt    5    272330.123 ±    3683.189   ops/s
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.alloc.rate                                                  128  thrpt    5       772.068 ±      26.146  MB/sec
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.alloc.rate.norm                                             128  thrpt    5      4461.856 ±     137.334    B/op
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                         128  thrpt    5         0.021 ±       0.098  MB/sec
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5         0.120 ±       0.567    B/op
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                     128  thrpt    5       809.387 ±    1160.306  MB/sec
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5      4677.072 ±    6696.027    B/op
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.count                                                       128  thrpt    5         6.000                counts
[info] ArrayOfEnumsBenchmark.writePlayJson:·gc.time                                                        128  thrpt    5         6.000                    ms
[info] ArrayOfEnumsBenchmark.writeUPickle                                                                  128  thrpt    5     48766.960 ±     493.847   ops/s
[info] ArrayOfEnumsBenchmark.writeUPickle:·gc.alloc.rate                                                   128  thrpt    5       230.127 ±      19.171  MB/sec
[info] ArrayOfEnumsBenchmark.writeUPickle:·gc.alloc.rate.norm                                              128  thrpt    5      7427.037 ±     667.187    B/op
[info] ArrayOfEnumsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space                                      128  thrpt    5       204.662 ±    1079.124  MB/sec
[info] ArrayOfEnumsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5      6618.236 ±   34896.070    B/op
[info] ArrayOfEnumsBenchmark.writeUPickle:·gc.count                                                        128  thrpt    5         2.000                counts
[info] ArrayOfEnumsBenchmark.writeUPickle:·gc.time                                                         128  thrpt    5         6.000                    ms
[info] ArrayOfFloatsBenchmark.readCirce                                                                    128  thrpt    5     36776.832 ±    1116.277   ops/s
[info] ArrayOfFloatsBenchmark.readCirce:·gc.alloc.rate                                                     128  thrpt    5      1758.539 ±      60.179  MB/sec
[info] ArrayOfFloatsBenchmark.readCirce:·gc.alloc.rate.norm                                                128  thrpt    5     75253.552 ±    1670.744    B/op
[info] ArrayOfFloatsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                            128  thrpt    5         0.029 ±       0.044  MB/sec
[info] ArrayOfFloatsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                       128  thrpt    5         1.246 ±       1.856    B/op
[info] ArrayOfFloatsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                        128  thrpt    5      1622.018 ±    1424.651  MB/sec
[info] ArrayOfFloatsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                   128  thrpt    5     69407.848 ±   60853.116    B/op
[info] ArrayOfFloatsBenchmark.readCirce:·gc.count                                                          128  thrpt    5        12.000                counts
[info] ArrayOfFloatsBenchmark.readCirce:·gc.time                                                           128  thrpt    5        11.000                    ms
[info] ArrayOfFloatsBenchmark.readDslJsonJava                                                              128  thrpt    5    283868.758 ±    9360.734   ops/s
[info] ArrayOfFloatsBenchmark.readDslJsonJava:·gc.alloc.rate                                               128  thrpt    5       302.158 ±      30.746  MB/sec
[info] ArrayOfFloatsBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                          128  thrpt    5      1675.445 ±     169.013    B/op
[info] ArrayOfFloatsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                                      128  thrpt    5         0.745 ±       6.381  MB/sec
[info] ArrayOfFloatsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5         4.140 ±      35.452    B/op
[info] ArrayOfFloatsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                                  128  thrpt    5       370.857 ±    1327.609  MB/sec
[info] ArrayOfFloatsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5      2056.617 ±    7374.551    B/op
[info] ArrayOfFloatsBenchmark.readDslJsonJava:·gc.count                                                    128  thrpt    5         3.000                counts
[info] ArrayOfFloatsBenchmark.readDslJsonJava:·gc.time                                                     128  thrpt    5         9.000                    ms
[info] ArrayOfFloatsBenchmark.readJacksonScala                                                             128  thrpt    5    106606.458 ±    1212.382   ops/s
[info] ArrayOfFloatsBenchmark.readJacksonScala:·gc.alloc.rate                                              128  thrpt    5      1206.536 ±      46.827  MB/sec
[info] ArrayOfFloatsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                         128  thrpt    5     17814.319 ±     661.279    B/op
[info] ArrayOfFloatsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                     128  thrpt    5         0.021 ±       0.057  MB/sec
[info] ArrayOfFloatsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5         0.307 ±       0.836    B/op
[info] ArrayOfFloatsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                 128  thrpt    5      1214.350 ±    1162.797  MB/sec
[info] ArrayOfFloatsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5     17934.175 ±   17226.373    B/op
[info] ArrayOfFloatsBenchmark.readJacksonScala:·gc.count                                                   128  thrpt    5         9.000                counts
[info] ArrayOfFloatsBenchmark.readJacksonScala:·gc.time                                                    128  thrpt    5         8.000                    ms
[info] ArrayOfFloatsBenchmark.readJsoniterScala                                                            128  thrpt    5    441877.474 ±    8763.100   ops/s
[info] ArrayOfFloatsBenchmark.readJsoniterScala:·gc.alloc.rate                                             128  thrpt    5       294.438 ±      32.806  MB/sec
[info] ArrayOfFloatsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                        128  thrpt    5      1048.805 ±     135.858    B/op
[info] ArrayOfFloatsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5       237.164 ±    1269.970  MB/sec
[info] ArrayOfFloatsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5       849.213 ±    4547.708    B/op
[info] ArrayOfFloatsBenchmark.readJsoniterScala:·gc.count                                                  128  thrpt    5         2.000                counts
[info] ArrayOfFloatsBenchmark.readJsoniterScala:·gc.time                                                   128  thrpt    5         6.000                    ms
[info] ArrayOfFloatsBenchmark.readPlayJson                                                                 128  thrpt    5     39287.342 ±    1312.175   ops/s
[info] ArrayOfFloatsBenchmark.readPlayJson:·gc.alloc.rate                                                  128  thrpt    5      1929.287 ±      39.619  MB/sec
[info] ArrayOfFloatsBenchmark.readPlayJson:·gc.alloc.rate.norm                                             128  thrpt    5     77298.236 ±    2454.419    B/op
[info] ArrayOfFloatsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                         128  thrpt    5         0.033 ±       0.108  MB/sec
[info] ArrayOfFloatsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5         1.338 ±       4.354    B/op
[info] ArrayOfFloatsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                     128  thrpt    5      1894.022 ±    1168.029  MB/sec
[info] ArrayOfFloatsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5     75943.685 ±   48197.909    B/op
[info] ArrayOfFloatsBenchmark.readPlayJson:·gc.count                                                       128  thrpt    5        14.000                counts
[info] ArrayOfFloatsBenchmark.readPlayJson:·gc.time                                                        128  thrpt    5        13.000                    ms
[info] ArrayOfFloatsBenchmark.readUPickle                                                                  128  thrpt    5     78479.619 ±    2909.032   ops/s
[info] ArrayOfFloatsBenchmark.readUPickle:·gc.alloc.rate                                                   128  thrpt    5      1414.035 ±      51.895  MB/sec
[info] ArrayOfFloatsBenchmark.readUPickle:·gc.alloc.rate.norm                                              128  thrpt    5     28358.403 ±     339.414    B/op
[info] ArrayOfFloatsBenchmark.readUPickle:·gc.churn.PS_Eden_Space                                          128  thrpt    5         0.058 ±       0.132  MB/sec
[info] ArrayOfFloatsBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm                                     128  thrpt    5         1.173 ±       2.691    B/op
[info] ArrayOfFloatsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space                                      128  thrpt    5      1345.249 ±       5.784  MB/sec
[info] ArrayOfFloatsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5     26980.615 ±     924.169    B/op
[info] ArrayOfFloatsBenchmark.readUPickle:·gc.count                                                        128  thrpt    5        10.000                counts
[info] ArrayOfFloatsBenchmark.readUPickle:·gc.time                                                         128  thrpt    5         9.000                    ms
[info] ArrayOfFloatsBenchmark.writeCirce                                                                   128  thrpt    5     73476.600 ±     793.474   ops/s
[info] ArrayOfFloatsBenchmark.writeCirce:·gc.alloc.rate                                                    128  thrpt    5       362.533 ±      38.923  MB/sec
[info] ArrayOfFloatsBenchmark.writeCirce:·gc.alloc.rate.norm                                               128  thrpt    5      7766.459 ±     810.949    B/op
[info] ArrayOfFloatsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                           128  thrpt    5         0.112 ±       0.968  MB/sec
[info] ArrayOfFloatsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                      128  thrpt    5         2.403 ±      20.694    B/op
[info] ArrayOfFloatsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                       128  thrpt    5       269.890 ±    1423.052  MB/sec
[info] ArrayOfFloatsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                  128  thrpt    5      5775.656 ±   30453.384    B/op
[info] ArrayOfFloatsBenchmark.writeCirce:·gc.count                                                         128  thrpt    5         2.000                counts
[info] ArrayOfFloatsBenchmark.writeCirce:·gc.time                                                          128  thrpt    5         2.000                    ms
[info] ArrayOfFloatsBenchmark.writeDslJsonJava                                                             128  thrpt    5     84477.695 ±     594.959   ops/s
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.alloc.rate                                              128  thrpt    5       434.468 ±      37.275  MB/sec
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                         128  thrpt    5      8095.012 ±     736.189    B/op
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                                     128  thrpt    5         0.803 ±       6.766  MB/sec
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5        14.997 ±     126.290    B/op
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                                 128  thrpt    5       402.360 ±    1414.353  MB/sec
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5      7503.515 ±   26376.031    B/op
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.count                                                   128  thrpt    5         3.000                counts
[info] ArrayOfFloatsBenchmark.writeDslJsonJava:·gc.time                                                    128  thrpt    5         7.000                    ms
[info] ArrayOfFloatsBenchmark.writeJacksonScala                                                            128  thrpt    5     72928.996 ±     708.219   ops/s
[info] ArrayOfFloatsBenchmark.writeJacksonScala:·gc.alloc.rate                                             128  thrpt    5       395.515 ±      40.655  MB/sec
[info] ArrayOfFloatsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                        128  thrpt    5      8535.981 ±     935.335    B/op
[info] ArrayOfFloatsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5         0.221 ±       1.636  MB/sec
[info] ArrayOfFloatsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5         4.777 ±      35.444    B/op
[info] ArrayOfFloatsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5       404.035 ±    1420.241  MB/sec
[info] ArrayOfFloatsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5      8732.767 ±   30697.045    B/op
[info] ArrayOfFloatsBenchmark.writeJacksonScala:·gc.count                                                  128  thrpt    5         3.000                counts
[info] ArrayOfFloatsBenchmark.writeJacksonScala:·gc.time                                                   128  thrpt    5         4.000                    ms
[info] ArrayOfFloatsBenchmark.writeJsoniterScala                                                           128  thrpt    5     84697.542 ±     966.500   ops/s
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.alloc.rate                                            128  thrpt    5       435.346 ±      34.661  MB/sec
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                       128  thrpt    5      8090.582 ±     717.096    B/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5         0.577 ±       4.920  MB/sec
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5        10.743 ±      91.671    B/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5       404.317 ±    1421.232  MB/sec
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5      7528.212 ±   26462.863    B/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.count                                                 128  thrpt    5         3.000                counts
[info] ArrayOfFloatsBenchmark.writeJsoniterScala:·gc.time                                                  128  thrpt    5         6.000                    ms
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc                                                   128  thrpt    5     83709.517 ±    3949.859   ops/s
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                    128  thrpt    5       365.115 ±      42.622  MB/sec
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                               128  thrpt    5      6866.134 ±     815.840    B/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space                           128  thrpt    5         0.585 ±       4.991  MB/sec
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5        10.982 ±      93.722    B/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space                       128  thrpt    5       371.663 ±    1330.970  MB/sec
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5      7013.159 ±   25038.911    B/op
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                         128  thrpt    5         3.000                counts
[info] ArrayOfFloatsBenchmark.writeJsoniterScalaPrealloc:·gc.time                                          128  thrpt    5         8.000                    ms
[info] ArrayOfInstantsBenchmark.readCirce                                                                  128  thrpt    5      9798.257 ±     294.351   ops/s
[info] ArrayOfInstantsBenchmark.readCirce:·gc.alloc.rate                                                   128  thrpt    5      1574.849 ±      94.491  MB/sec
[info] ArrayOfInstantsBenchmark.readCirce:·gc.alloc.rate.norm                                              128  thrpt    5    252958.686 ±    9318.125    B/op
[info] ArrayOfInstantsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                          128  thrpt    5         0.050 ±       0.185  MB/sec
[info] ArrayOfInstantsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                     128  thrpt    5         8.002 ±      29.563    B/op
[info] ArrayOfInstantsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                      128  thrpt    5      1620.210 ±    1423.252  MB/sec
[info] ArrayOfInstantsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5    260187.563 ±  226929.122    B/op
[info] ArrayOfInstantsBenchmark.readCirce:·gc.count                                                        128  thrpt    5        12.000                counts
[info] ArrayOfInstantsBenchmark.readCirce:·gc.time                                                         128  thrpt    5        13.000                    ms
[info] ArrayOfInstantsBenchmark.readJacksonScala                                                           128  thrpt    5      9651.403 ±     621.805   ops/s
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.alloc.rate                                            128  thrpt    5      1477.097 ±      97.321  MB/sec
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                       128  thrpt    5    240877.371 ±    4637.099    B/op
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5         0.025 ±       0.036  MB/sec
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5         4.067 ±       5.726    B/op
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5      1349.824 ±       6.322  MB/sec
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5    220169.162 ±   13799.988    B/op
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.count                                                 128  thrpt    5        10.000                counts
[info] ArrayOfInstantsBenchmark.readJacksonScala:·gc.time                                                  128  thrpt    5        10.000                    ms
[info] ArrayOfInstantsBenchmark.readJsoniterScala                                                          128  thrpt    5    148513.382 ±    1133.771   ops/s
[info] ArrayOfInstantsBenchmark.readJsoniterScala:·gc.alloc.rate                                           128  thrpt    5       394.864 ±      30.437  MB/sec
[info] ArrayOfInstantsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                      128  thrpt    5      4185.039 ±     348.679    B/op
[info] ArrayOfInstantsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5         0.572 ±       4.906  MB/sec
[info] ArrayOfInstantsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5         6.083 ±      52.138    B/op
[info] ArrayOfInstantsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5       371.931 ±    1332.097  MB/sec
[info] ArrayOfInstantsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5      3947.352 ±   14139.745    B/op
[info] ArrayOfInstantsBenchmark.readJsoniterScala:·gc.count                                                128  thrpt    5         3.000                counts
[info] ArrayOfInstantsBenchmark.readJsoniterScala:·gc.time                                                 128  thrpt    5         8.000                    ms
[info] ArrayOfInstantsBenchmark.readPlayJson                                                               128  thrpt    5      5450.361 ±      29.923   ops/s
[info] ArrayOfInstantsBenchmark.readPlayJson:·gc.alloc.rate                                                128  thrpt    5      1413.947 ±      19.587  MB/sec
[info] ArrayOfInstantsBenchmark.readPlayJson:·gc.alloc.rate.norm                                           128  thrpt    5    408293.536 ±    4473.400    B/op
[info] ArrayOfInstantsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                       128  thrpt    5         0.008 ±       0.044  MB/sec
[info] ArrayOfInstantsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5         2.403 ±      12.673    B/op
[info] ArrayOfInstantsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                   128  thrpt    5      1350.608 ±       5.712  MB/sec
[info] ArrayOfInstantsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5    390005.033 ±    3383.525    B/op
[info] ArrayOfInstantsBenchmark.readPlayJson:·gc.count                                                     128  thrpt    5        10.000                counts
[info] ArrayOfInstantsBenchmark.readPlayJson:·gc.time                                                      128  thrpt    5        11.000                    ms
[info] ArrayOfInstantsBenchmark.readUPickle                                                                128  thrpt    5     10033.075 ±     158.429   ops/s
[info] ArrayOfInstantsBenchmark.readUPickle:·gc.alloc.rate                                                 128  thrpt    5      1583.730 ±      22.206  MB/sec
[info] ArrayOfInstantsBenchmark.readUPickle:·gc.alloc.rate.norm                                            128  thrpt    5    248469.519 ±    5668.431    B/op
[info] ArrayOfInstantsBenchmark.readUPickle:·gc.churn.PS_Eden_Space                                        128  thrpt    5         0.029 ±       0.091  MB/sec
[info] ArrayOfInstantsBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5         4.581 ±      14.390    B/op
[info] ArrayOfInstantsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space                                    128  thrpt    5      1479.795 ±    1157.254  MB/sec
[info] ArrayOfInstantsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5    232294.223 ±  185527.104    B/op
[info] ArrayOfInstantsBenchmark.readUPickle:·gc.count                                                      128  thrpt    5        11.000                counts
[info] ArrayOfInstantsBenchmark.readUPickle:·gc.time                                                       128  thrpt    5        10.000                    ms
[info] ArrayOfInstantsBenchmark.writeCirce                                                                 128  thrpt    5     19867.243 ±     997.672   ops/s
[info] ArrayOfInstantsBenchmark.writeCirce:·gc.alloc.rate                                                  128  thrpt    5      1099.104 ±      25.564  MB/sec
[info] ArrayOfInstantsBenchmark.writeCirce:·gc.alloc.rate.norm                                             128  thrpt    5     87075.066 ±    3599.679    B/op
[info] ArrayOfInstantsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                         128  thrpt    5         0.021 ±       0.098  MB/sec
[info] ArrayOfInstantsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5         1.648 ±       7.700    B/op
[info] ArrayOfInstantsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                     128  thrpt    5      1080.300 ±    1425.614  MB/sec
[info] ArrayOfInstantsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5     85770.907 ±  115258.322    B/op
[info] ArrayOfInstantsBenchmark.writeCirce:·gc.count                                                       128  thrpt    5         8.000                counts
[info] ArrayOfInstantsBenchmark.writeCirce:·gc.time                                                        128  thrpt    5         8.000                    ms
[info] ArrayOfInstantsBenchmark.writeJacksonScala                                                          128  thrpt    5     21724.152 ±     604.586   ops/s
[info] ArrayOfInstantsBenchmark.writeJacksonScala:·gc.alloc.rate                                           128  thrpt    5      1224.572 ±      31.704  MB/sec
[info] ArrayOfInstantsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                      128  thrpt    5     88728.773 ±    2244.973    B/op
[info] ArrayOfInstantsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5         0.046 ±       0.154  MB/sec
[info] ArrayOfInstantsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5         3.320 ±      11.126    B/op
[info] ArrayOfInstantsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5      1214.761 ±    1161.803  MB/sec
[info] ArrayOfInstantsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5     88099.815 ±   85240.167    B/op
[info] ArrayOfInstantsBenchmark.writeJacksonScala:·gc.count                                                128  thrpt    5         9.000                counts
[info] ArrayOfInstantsBenchmark.writeJacksonScala:·gc.time                                                 128  thrpt    5         9.000                    ms
[info] ArrayOfInstantsBenchmark.writeJsoniterScala                                                         128  thrpt    5    131713.451 ±    1899.059   ops/s
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.alloc.rate                                          128  thrpt    5       296.013 ±      22.109  MB/sec
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                     128  thrpt    5      3537.248 ±     301.846    B/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5         0.002 ±       0.018  MB/sec
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5         0.025 ±       0.215    B/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5       237.195 ±    1270.075  MB/sec
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5      2843.958 ±   15235.157    B/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.count                                               128  thrpt    5         2.000                counts
[info] ArrayOfInstantsBenchmark.writeJsoniterScala:·gc.time                                                128  thrpt    5         6.000                    ms
[info] ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc                                                 128  thrpt    5    137505.364 ±     116.139   ops/s
[info] ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                  128  thrpt    5         0.003 ±       0.027  MB/sec
[info] ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                             128  thrpt    5         0.040 ±       0.314    B/op
[info] ArrayOfInstantsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                       128  thrpt    5           ≈ 0                counts
[info] ArrayOfInstantsBenchmark.writePlayJson                                                              128  thrpt    5     22646.974 ±     503.970   ops/s
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.alloc.rate                                               128  thrpt    5      1269.636 ±      49.411  MB/sec
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.alloc.rate.norm                                          128  thrpt    5     88245.593 ±    3477.025    B/op
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                      128  thrpt    5         0.021 ±       0.057  MB/sec
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5         1.443 ±       3.928    B/op
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                  128  thrpt    5      1213.947 ±    1159.433  MB/sec
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5     84418.961 ±   81162.405    B/op
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.count                                                    128  thrpt    5         9.000                counts
[info] ArrayOfInstantsBenchmark.writePlayJson:·gc.time                                                     128  thrpt    5         9.000                    ms
[info] ArrayOfInstantsBenchmark.writeUPickle                                                               128  thrpt    5     10134.792 ±     503.250   ops/s
[info] ArrayOfInstantsBenchmark.writeUPickle:·gc.alloc.rate                                                128  thrpt    5       622.939 ±      25.032  MB/sec
[info] ArrayOfInstantsBenchmark.writeUPickle:·gc.alloc.rate.norm                                           128  thrpt    5     96728.915 ±    1898.432    B/op
[info] ArrayOfInstantsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space                                       128  thrpt    5         0.543 ±       4.633  MB/sec
[info] ArrayOfInstantsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5        84.430 ±     720.087    B/op
[info] ArrayOfInstantsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space                                   128  thrpt    5       539.334 ±    1160.958  MB/sec
[info] ArrayOfInstantsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5     83905.323 ±  180684.598    B/op
[info] ArrayOfInstantsBenchmark.writeUPickle:·gc.count                                                     128  thrpt    5         4.000                counts
[info] ArrayOfInstantsBenchmark.writeUPickle:·gc.time                                                      128  thrpt    5         6.000                    ms
[info] ArrayOfIntsBenchmark.readCirce                                                                      128  thrpt    5    131627.850 ±    2646.329   ops/s
[info] ArrayOfIntsBenchmark.readCirce:·gc.alloc.rate                                                       128  thrpt    5      1754.878 ±      39.624  MB/sec
[info] ArrayOfIntsBenchmark.readCirce:·gc.alloc.rate.norm                                                  128  thrpt    5     20983.400 ±     273.864    B/op
[info] ArrayOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                              128  thrpt    5         0.046 ±       0.088  MB/sec
[info] ArrayOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                         128  thrpt    5         0.548 ±       1.049    B/op
[info] ArrayOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                          128  thrpt    5      1759.557 ±    1427.369  MB/sec
[info] ArrayOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                     128  thrpt    5     21038.093 ±   17035.859    B/op
[info] ArrayOfIntsBenchmark.readCirce:·gc.count                                                            128  thrpt    5        13.000                counts
[info] ArrayOfIntsBenchmark.readCirce:·gc.time                                                             128  thrpt    5        11.000                    ms
[info] ArrayOfIntsBenchmark.readDslJsonJava                                                                128  thrpt    5    513403.808 ±    3132.798   ops/s
[info] ArrayOfIntsBenchmark.readDslJsonJava:·gc.alloc.rate                                                 128  thrpt    5       546.589 ±      20.232  MB/sec
[info] ArrayOfIntsBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                            128  thrpt    5      1675.639 ±      58.580    B/op
[info] ArrayOfIntsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                                        128  thrpt    5         0.743 ±       6.356  MB/sec
[info] ArrayOfIntsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5         2.283 ±      19.523    B/op
[info] ArrayOfIntsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                                    128  thrpt    5       536.745 ±    1155.387  MB/sec
[info] ArrayOfIntsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5      1646.522 ±    3544.292    B/op
[info] ArrayOfIntsBenchmark.readDslJsonJava:·gc.count                                                      128  thrpt    5         4.000                counts
[info] ArrayOfIntsBenchmark.readDslJsonJava:·gc.time                                                       128  thrpt    5         5.000                    ms
[info] ArrayOfIntsBenchmark.readJacksonScala                                                               128  thrpt    5    303873.714 ±   12474.800   ops/s
[info] ArrayOfIntsBenchmark.readJacksonScala:·gc.alloc.rate                                                128  thrpt    5       431.623 ±      32.797  MB/sec
[info] ArrayOfIntsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                           128  thrpt    5      2235.862 ±     187.927    B/op
[info] ArrayOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                       128  thrpt    5         0.233 ±       1.963  MB/sec
[info] ArrayOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5         1.220 ±      10.275    B/op
[info] ArrayOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                   128  thrpt    5       404.848 ±    1423.098  MB/sec
[info] ArrayOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5      2104.642 ±    7398.793    B/op
[info] ArrayOfIntsBenchmark.readJacksonScala:·gc.count                                                     128  thrpt    5         3.000                counts
[info] ArrayOfIntsBenchmark.readJacksonScala:·gc.time                                                      128  thrpt    5         4.000                    ms
[info] ArrayOfIntsBenchmark.readJsoniterScala                                                              128  thrpt    5    712837.344 ±    7166.110   ops/s
[info] ArrayOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate                                               128  thrpt    5       481.072 ±      37.478  MB/sec
[info] ArrayOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                          128  thrpt    5      1062.234 ±      91.372    B/op
[info] ArrayOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                      128  thrpt    5         0.574 ±       4.902  MB/sec
[info] ArrayOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5         1.271 ±      10.844    B/op
[info] ArrayOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                  128  thrpt    5       539.049 ±    1160.345  MB/sec
[info] ArrayOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5      1191.301 ±    2564.381    B/op
[info] ArrayOfIntsBenchmark.readJsoniterScala:·gc.count                                                    128  thrpt    5         4.000                counts
[info] ArrayOfIntsBenchmark.readJsoniterScala:·gc.time                                                     128  thrpt    5         8.000                    ms
[info] ArrayOfIntsBenchmark.readPlayJson                                                                   128  thrpt    5     76969.420 ±    2881.218   ops/s
[info] ArrayOfIntsBenchmark.readPlayJson:·gc.alloc.rate                                                    128  thrpt    5      3179.972 ±     157.535  MB/sec
[info] ArrayOfIntsBenchmark.readPlayJson:·gc.alloc.rate.norm                                               128  thrpt    5     65026.527 ±    1740.009    B/op
[info] ArrayOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                           128  thrpt    5         0.087 ±       0.119  MB/sec
[info] ArrayOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                      128  thrpt    5         1.784 ±       2.385    B/op
[info] ArrayOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                       128  thrpt    5      3122.750 ±    1422.713  MB/sec
[info] ArrayOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                  128  thrpt    5     63803.255 ±   26816.822    B/op
[info] ArrayOfIntsBenchmark.readPlayJson:·gc.count                                                         128  thrpt    5        23.000                counts
[info] ArrayOfIntsBenchmark.readPlayJson:·gc.time                                                          128  thrpt    5        22.000                    ms
[info] ArrayOfIntsBenchmark.readUPickle                                                                    128  thrpt    5    210376.934 ±    4118.469   ops/s
[info] ArrayOfIntsBenchmark.readUPickle:·gc.alloc.rate                                                     128  thrpt    5      1122.089 ±      38.927  MB/sec
[info] ArrayOfIntsBenchmark.readUPickle:·gc.alloc.rate.norm                                                128  thrpt    5      8394.301 ±     216.623    B/op
[info] ArrayOfIntsBenchmark.readUPickle:·gc.churn.PS_Eden_Space                                            128  thrpt    5         0.021 ±       0.098  MB/sec
[info] ArrayOfIntsBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm                                       128  thrpt    5         0.155 ±       0.732    B/op
[info] ArrayOfIntsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space                                        128  thrpt    5      1075.865 ±    1417.658  MB/sec
[info] ArrayOfIntsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm                                   128  thrpt    5      8047.835 ±   10595.712    B/op
[info] ArrayOfIntsBenchmark.readUPickle:·gc.count                                                          128  thrpt    5         8.000                counts
[info] ArrayOfIntsBenchmark.readUPickle:·gc.time                                                           128  thrpt    5         8.000                    ms
[info] ArrayOfIntsBenchmark.writeCirce                                                                     128  thrpt    5    185030.587 ±   14148.858   ops/s
[info] ArrayOfIntsBenchmark.writeCirce:·gc.alloc.rate                                                      128  thrpt    5       949.487 ±      84.440  MB/sec
[info] ArrayOfIntsBenchmark.writeCirce:·gc.alloc.rate.norm                                                 128  thrpt    5      8076.443 ±     578.433    B/op
[info] ArrayOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                             128  thrpt    5         0.025 ±       0.215  MB/sec
[info] ArrayOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                        128  thrpt    5         0.210 ±       1.810    B/op
[info] ArrayOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                         128  thrpt    5       945.199 ±    1423.957  MB/sec
[info] ArrayOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                    128  thrpt    5      8039.201 ±   12088.834    B/op
[info] ArrayOfIntsBenchmark.writeCirce:·gc.count                                                           128  thrpt    5         7.000                counts
[info] ArrayOfIntsBenchmark.writeCirce:·gc.time                                                            128  thrpt    5         7.000                    ms
[info] ArrayOfIntsBenchmark.writeDslJsonJava                                                               128  thrpt    5    623846.766 ±    8052.417   ops/s
[info] ArrayOfIntsBenchmark.writeDslJsonJava:·gc.alloc.rate                                                128  thrpt    5       346.615 ±      36.113  MB/sec
[info] ArrayOfIntsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                           128  thrpt    5       874.571 ±      98.476    B/op
[info] ArrayOfIntsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                                       128  thrpt    5         0.722 ±       6.215  MB/sec
[info] ArrayOfIntsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5         1.822 ±      15.689    B/op
[info] ArrayOfIntsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                                   128  thrpt    5       268.593 ±    1416.211  MB/sec
[info] ArrayOfIntsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5       679.642 ±    3583.573    B/op
[info] ArrayOfIntsBenchmark.writeDslJsonJava:·gc.count                                                     128  thrpt    5         2.000                counts
[info] ArrayOfIntsBenchmark.writeDslJsonJava:·gc.time                                                      128  thrpt    5         5.000                    ms
[info] ArrayOfIntsBenchmark.writeJacksonScala                                                              128  thrpt    5    627391.457 ±    9094.737   ops/s
[info] ArrayOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate                                               128  thrpt    5       479.001 ±      44.629  MB/sec
[info] ArrayOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                          128  thrpt    5      1201.770 ±     118.687    B/op
[info] ArrayOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                      128  thrpt    5         0.175 ±       1.461  MB/sec
[info] ArrayOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5         0.439 ±       3.668    B/op
[info] ArrayOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                  128  thrpt    5       404.387 ±    1421.479  MB/sec
[info] ArrayOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5      1015.712 ±    3570.384    B/op
[info] ArrayOfIntsBenchmark.writeJacksonScala:·gc.count                                                    128  thrpt    5         3.000                counts
[info] ArrayOfIntsBenchmark.writeJacksonScala:·gc.time                                                     128  thrpt    5         4.000                    ms
[info] ArrayOfIntsBenchmark.writeJsoniterScala                                                             128  thrpt    5    983013.102 ±   97607.719   ops/s
[info] ArrayOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate                                              128  thrpt    5       551.583 ±      87.320  MB/sec
[info] ArrayOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                         128  thrpt    5       882.944 ±      68.213    B/op
[info] ArrayOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                     128  thrpt    5         0.576 ±       4.830  MB/sec
[info] ArrayOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5         0.926 ±       7.759    B/op
[info] ArrayOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                 128  thrpt    5       538.691 ±    1159.574  MB/sec
[info] ArrayOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5       853.632 ±    1837.993    B/op
[info] ArrayOfIntsBenchmark.writeJsoniterScala:·gc.count                                                   128  thrpt    5         4.000                counts
[info] ArrayOfIntsBenchmark.writeJsoniterScala:·gc.time                                                    128  thrpt    5         5.000                    ms
[info] ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc                                                     128  thrpt    5   1060620.248 ±    3093.186   ops/s
[info] ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                      128  thrpt    5         0.510 ±       4.386  MB/sec
[info] ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                 128  thrpt    5         0.757 ±       6.513    B/op
[info] ArrayOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                           128  thrpt    5           ≈ 0                counts
[info] ArrayOfIntsBenchmark.writePlayJson                                                                  128  thrpt    5     33422.881 ±     935.391   ops/s
[info] ArrayOfIntsBenchmark.writePlayJson:·gc.alloc.rate                                                   128  thrpt    5      1740.920 ±      61.235  MB/sec
[info] ArrayOfIntsBenchmark.writePlayJson:·gc.alloc.rate.norm                                              128  thrpt    5     81992.441 ±    1492.344    B/op
[info] ArrayOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                          128  thrpt    5         0.054 ±       0.209  MB/sec
[info] ArrayOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                     128  thrpt    5         2.549 ±       9.859    B/op
[info] ArrayOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                      128  thrpt    5      1757.950 ±    1422.266  MB/sec
[info] ArrayOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5     82720.627 ±   65362.770    B/op
[info] ArrayOfIntsBenchmark.writePlayJson:·gc.count                                                        128  thrpt    5        13.000                counts
[info] ArrayOfIntsBenchmark.writePlayJson:·gc.time                                                         128  thrpt    5        13.000                    ms
[info] ArrayOfIntsBenchmark.writeUPickle                                                                   128  thrpt    5    129818.364 ±    5809.681   ops/s
[info] ArrayOfIntsBenchmark.writeUPickle:·gc.alloc.rate                                                    128  thrpt    5       903.155 ±      18.729  MB/sec
[info] ArrayOfIntsBenchmark.writeUPickle:·gc.alloc.rate.norm                                               128  thrpt    5     10951.180 ±     622.170    B/op
[info] ArrayOfIntsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space                                           128  thrpt    5         0.025 ±       0.067  MB/sec
[info] ArrayOfIntsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm                                      128  thrpt    5         0.304 ±       0.824    B/op
[info] ArrayOfIntsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space                                       128  thrpt    5       807.203 ±    1158.957  MB/sec
[info] ArrayOfIntsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm                                  128  thrpt    5      9819.913 ±   14680.421    B/op
[info] ArrayOfIntsBenchmark.writeUPickle:·gc.count                                                         128  thrpt    5         6.000                counts
[info] ArrayOfIntsBenchmark.writeUPickle:·gc.time                                                          128  thrpt    5         5.000                    ms
[info] ArrayOfJavaEnumsBenchmark.readCirce                                                                 128  thrpt    5    123816.663 ±    4261.847   ops/s
[info] ArrayOfJavaEnumsBenchmark.readCirce:·gc.alloc.rate                                                  128  thrpt    5      1401.895 ±      52.501  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readCirce:·gc.alloc.rate.norm                                             128  thrpt    5     17821.252 ±     308.097    B/op
[info] ArrayOfJavaEnumsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                         128  thrpt    5         0.033 ±       0.156  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5         0.421 ±       1.958    B/op
[info] ArrayOfJavaEnumsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                     128  thrpt    5      1351.629 ±       7.824  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5     17183.241 ±     555.969    B/op
[info] ArrayOfJavaEnumsBenchmark.readCirce:·gc.count                                                       128  thrpt    5        10.000                counts
[info] ArrayOfJavaEnumsBenchmark.readCirce:·gc.time                                                        128  thrpt    5         9.000                    ms
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala                                                          128  thrpt    5    170872.446 ±    4642.772   ops/s
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.alloc.rate                                           128  thrpt    5       920.223 ±      33.182  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                      128  thrpt    5      8476.483 ±     320.630    B/op
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5         0.025 ±       0.105  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5         0.230 ±       0.962    B/op
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5       943.843 ±    1421.691  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5      8698.317 ±   13155.655    B/op
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.count                                                128  thrpt    5         7.000                counts
[info] ArrayOfJavaEnumsBenchmark.readJacksonScala:·gc.time                                                 128  thrpt    5         7.000                    ms
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala                                                         128  thrpt    5    224271.517 ±    1393.805   ops/s
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.alloc.rate                                          128  thrpt    5      1048.031 ±      42.506  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                     128  thrpt    5      7355.837 ±     267.658    B/op
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5         0.021 ±       0.139  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5         0.146 ±       0.974    B/op
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5       941.582 ±    1418.493  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5      6606.833 ±    9929.002    B/op
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.count                                               128  thrpt    5         7.000                counts
[info] ArrayOfJavaEnumsBenchmark.readJsoniterScala:·gc.time                                                128  thrpt    5         7.000                    ms
[info] ArrayOfJavaEnumsBenchmark.readPlayJson                                                              128  thrpt    5     66790.301 ±    2529.030   ops/s
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.alloc.rate                                               128  thrpt    5      2552.697 ±      35.606  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.alloc.rate.norm                                          128  thrpt    5     60155.840 ±    1961.222    B/op
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                      128  thrpt    5         0.042 ±       0.150  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5         0.976 ±       3.509    B/op
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                  128  thrpt    5      2574.229 ±    1165.852  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5     60701.760 ±   28834.703    B/op
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.count                                                    128  thrpt    5        19.000                counts
[info] ArrayOfJavaEnumsBenchmark.readPlayJson:·gc.time                                                     128  thrpt    5        18.000                    ms
[info] ArrayOfJavaEnumsBenchmark.readUPickle                                                               128  thrpt    5    160552.956 ±   15887.527   ops/s
[info] ArrayOfJavaEnumsBenchmark.readUPickle:·gc.alloc.rate                                                128  thrpt    5      1153.920 ±     125.430  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readUPickle:·gc.alloc.rate.norm                                           128  thrpt    5     11311.436 ±     360.860    B/op
[info] ArrayOfJavaEnumsBenchmark.readUPickle:·gc.churn.CodeHeap_'non-profiled_nmethods'                    128  thrpt    5         0.079 ±       0.680  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readUPickle:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm               128  thrpt    5         0.811 ±       6.984    B/op
[info] ArrayOfJavaEnumsBenchmark.readUPickle:·gc.churn.Compressed_Class_Space                              128  thrpt    5         0.003 ±       0.030  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readUPickle:·gc.churn.Compressed_Class_Space.norm                         128  thrpt    5         0.036 ±       0.308    B/op
[info] ArrayOfJavaEnumsBenchmark.readUPickle:·gc.churn.PS_Eden_Space                                       128  thrpt    5         0.058 ±       0.268  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5         0.585 ±       2.747    B/op
[info] ArrayOfJavaEnumsBenchmark.readUPickle:·gc.churn.PS_Old_Gen                                          128  thrpt    5         0.011 ±       0.094  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readUPickle:·gc.churn.PS_Old_Gen.norm                                     128  thrpt    5         0.112 ±       0.967    B/op
[info] ArrayOfJavaEnumsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space                                   128  thrpt    5      1126.028 ±    1208.971  MB/sec
[info] ArrayOfJavaEnumsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5     11024.045 ±   11462.527    B/op
[info] ArrayOfJavaEnumsBenchmark.readUPickle:·gc.count                                                     128  thrpt    5        10.000                counts
[info] ArrayOfJavaEnumsBenchmark.readUPickle:·gc.time                                                      128  thrpt    5        73.000                    ms
[info] ArrayOfJavaEnumsBenchmark.writeCirce                                                                128  thrpt    5    176978.069 ±    5296.458   ops/s
[info] ArrayOfJavaEnumsBenchmark.writeCirce:·gc.alloc.rate                                                 128  thrpt    5       630.655 ±      16.771  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeCirce:·gc.alloc.rate.norm                                            128  thrpt    5      5609.403 ±     138.432    B/op
[info] ArrayOfJavaEnumsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                        128  thrpt    5         0.127 ±       1.049  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5         1.139 ±       9.418    B/op
[info] ArrayOfJavaEnumsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                    128  thrpt    5       673.888 ±       1.408  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5      5994.099 ±     173.158    B/op
[info] ArrayOfJavaEnumsBenchmark.writeCirce:·gc.count                                                      128  thrpt    5         5.000                counts
[info] ArrayOfJavaEnumsBenchmark.writeCirce:·gc.time                                                       128  thrpt    5         4.000                    ms
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala                                                         128  thrpt    5    682392.438 ±    4884.557   ops/s
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.alloc.rate                                          128  thrpt    5       712.342 ±      16.796  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                     128  thrpt    5      1642.944 ±      31.467    B/op
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5         0.021 ±       0.057  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5         0.048 ±       0.131    B/op
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5       674.119 ±       0.271  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5      1554.798 ±      11.057    B/op
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.count                                               128  thrpt    5         5.000                counts
[info] ArrayOfJavaEnumsBenchmark.writeJacksonScala:·gc.time                                                128  thrpt    5         5.000                    ms
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala                                                        128  thrpt    5    647117.024 ±    8036.381   ops/s
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.alloc.rate                                         128  thrpt    5       511.830 ±      28.597  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                    128  thrpt    5      1245.008 ±      83.894    B/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                128  thrpt    5         0.554 ±       4.722  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5         1.348 ±      11.498    B/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5       538.969 ±    1160.172  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5      1312.729 ±    2825.761    B/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.count                                              128  thrpt    5         4.000                counts
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScala:·gc.time                                               128  thrpt    5         7.000                    ms
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc                                                128  thrpt    5    702538.045 ±    3736.795   ops/s
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                 128  thrpt    5         0.299 ±       2.227  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                            128  thrpt    5         0.672 ±       4.996    B/op
[info] ArrayOfJavaEnumsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                      128  thrpt    5           ≈ 0                counts
[info] ArrayOfJavaEnumsBenchmark.writePlayJson                                                             128  thrpt    5    346220.234 ±   14872.809   ops/s
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.alloc.rate                                              128  thrpt    5       959.396 ±      75.987  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.alloc.rate.norm                                         128  thrpt    5      4361.132 ±     229.178    B/op
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                     128  thrpt    5         0.008 ±       0.044  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5         0.038 ±       0.199    B/op
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                 128  thrpt    5       944.886 ±    1423.772  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5      4291.017 ±    6406.977    B/op
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.count                                                   128  thrpt    5         7.000                counts
[info] ArrayOfJavaEnumsBenchmark.writePlayJson:·gc.time                                                    128  thrpt    5         7.000                    ms
[info] ArrayOfJavaEnumsBenchmark.writeUPickle                                                              128  thrpt    5     48810.927 ±     508.776   ops/s
[info] ArrayOfJavaEnumsBenchmark.writeUPickle:·gc.alloc.rate                                               128  thrpt    5       230.139 ±      21.668  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeUPickle:·gc.alloc.rate.norm                                          128  thrpt    5      7419.957 ±     738.800    B/op
[info] ArrayOfJavaEnumsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space                                  128  thrpt    5       204.664 ±    1079.134  MB/sec
[info] ArrayOfJavaEnumsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5      6610.985 ±   34857.904    B/op
[info] ArrayOfJavaEnumsBenchmark.writeUPickle:·gc.count                                                    128  thrpt    5         2.000                counts
[info] ArrayOfJavaEnumsBenchmark.writeUPickle:·gc.time                                                     128  thrpt    5         6.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.readCirce                                                            128  thrpt    5     10082.415 ±     345.662   ops/s
[info] ArrayOfLocalDateTimesBenchmark.readCirce:·gc.alloc.rate                                             128  thrpt    5      1230.095 ±      32.155  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readCirce:·gc.alloc.rate.norm                                        128  thrpt    5    192023.046 ±    7797.618    B/op
[info] ArrayOfLocalDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space                                    128  thrpt    5         0.008 ±       0.044  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5         1.305 ±       6.879    B/op
[info] ArrayOfLocalDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                128  thrpt    5      1078.575 ±    1421.946  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5    168673.792 ±  225741.818    B/op
[info] ArrayOfLocalDateTimesBenchmark.readCirce:·gc.count                                                  128  thrpt    5         8.000                counts
[info] ArrayOfLocalDateTimesBenchmark.readCirce:·gc.time                                                   128  thrpt    5         8.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala                                                     128  thrpt    5     10074.677 ±     565.057   ops/s
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.alloc.rate                                      128  thrpt    5      1160.092 ±      87.026  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm                                 128  thrpt    5    181253.285 ±    9056.827    B/op
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                             128  thrpt    5         0.021 ±       0.057  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5         3.235 ±       8.756    B/op
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5      1079.088 ±    1422.614  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5    168546.056 ±  221535.648    B/op
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.count                                           128  thrpt    5         8.000                counts
[info] ArrayOfLocalDateTimesBenchmark.readJacksonScala:·gc.time                                            128  thrpt    5         8.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala                                                    128  thrpt    5    257523.758 ±    5657.864   ops/s
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate                                     128  thrpt    5      1729.979 ±      33.762  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                128  thrpt    5     10573.577 ±     395.146    B/op
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                            128  thrpt    5         0.046 ±       0.200  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5         0.281 ±       1.224    B/op
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5      1754.107 ±    1422.666  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5     10730.657 ±    8901.958    B/op
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.count                                          128  thrpt    5        13.000                counts
[info] ArrayOfLocalDateTimesBenchmark.readJsoniterScala:·gc.time                                           128  thrpt    5        12.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson                                                         128  thrpt    5      7810.195 ±     113.410   ops/s
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.alloc.rate                                          128  thrpt    5      1401.433 ±      27.998  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.alloc.rate.norm                                     128  thrpt    5    282389.231 ±    6746.085    B/op
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                 128  thrpt    5         0.008 ±       0.044  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5         1.675 ±       8.830    B/op
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                             128  thrpt    5      1350.233 ±       6.148  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5    272072.500 ±    3702.312    B/op
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.count                                               128  thrpt    5        10.000                counts
[info] ArrayOfLocalDateTimesBenchmark.readPlayJson:·gc.time                                                128  thrpt    5        10.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.readUPickle                                                          128  thrpt    5     10645.130 ±     488.920   ops/s
[info] ArrayOfLocalDateTimesBenchmark.readUPickle:·gc.alloc.rate                                           128  thrpt    5      1243.316 ±     100.223  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readUPickle:·gc.alloc.rate.norm                                      128  thrpt    5    183816.209 ±    6670.220    B/op
[info] ArrayOfLocalDateTimesBenchmark.readUPickle:·gc.churn.PS_Eden_Space                                  128  thrpt    5         0.025 ±       0.088  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5         3.682 ±      12.945    B/op
[info] ArrayOfLocalDateTimesBenchmark.readUPickle:·gc.churn.PS_Survivor_Space                              128  thrpt    5      1209.307 ±    1157.845  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5    178523.922 ±  167472.914    B/op
[info] ArrayOfLocalDateTimesBenchmark.readUPickle:·gc.count                                                128  thrpt    5         9.000                counts
[info] ArrayOfLocalDateTimesBenchmark.readUPickle:·gc.time                                                 128  thrpt    5         8.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.writeCirce                                                           128  thrpt    5     24405.935 ±     560.628   ops/s
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.alloc.rate                                            128  thrpt    5      1008.096 ±      47.974  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.alloc.rate.norm                                       128  thrpt    5     65011.352 ±    2110.136    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                   128  thrpt    5         0.029 ±       0.209  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5         1.871 ±      13.405    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                               128  thrpt    5       944.815 ±    1422.810  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5     60907.450 ±   91405.605    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.count                                                 128  thrpt    5         7.000                counts
[info] ArrayOfLocalDateTimesBenchmark.writeCirce:·gc.time                                                  128  thrpt    5         7.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala                                                    128  thrpt    5     28536.199 ±     130.692   ops/s
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate                                     128  thrpt    5      1135.655 ±      39.045  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                128  thrpt    5     62640.405 ±    2117.534    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                            128  thrpt    5         0.037 ±       0.154  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5         2.068 ±       8.515    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5      1214.323 ±    1161.550  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5     66982.809 ±   64109.923    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.count                                          128  thrpt    5         9.000                counts
[info] ArrayOfLocalDateTimesBenchmark.writeJacksonScala:·gc.time                                           128  thrpt    5         8.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala                                                   128  thrpt    5    471819.123 ±    4970.521   ops/s
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate                                    128  thrpt    5       875.749 ±      34.464  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                               128  thrpt    5      2921.358 ±     113.969    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                           128  thrpt    5         0.025 ±       0.215  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5         0.083 ±       0.716    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5       808.633 ±    1158.282  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5      2696.553 ±    3845.907    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.count                                         128  thrpt    5         6.000                counts
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScala:·gc.time                                          128  thrpt    5         6.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc                                           128  thrpt    5    529353.713 ±     453.464   ops/s
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                            128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                       128  thrpt    5         0.001 ±       0.001    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count                                 128  thrpt    5           ≈ 0                counts
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson                                                        128  thrpt    5     27397.495 ±     470.392   ops/s
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.alloc.rate                                         128  thrpt    5      1129.097 ±      38.671  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.alloc.rate.norm                                    128  thrpt    5     64871.299 ±    2847.609    B/op
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                128  thrpt    5         0.025 ±       0.088  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5         1.438 ±       5.054    B/op
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                            128  thrpt    5      1080.191 ±    1424.302  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5     62117.564 ±   82535.019    B/op
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.count                                              128  thrpt    5         8.000                counts
[info] ArrayOfLocalDateTimesBenchmark.writePlayJson:·gc.time                                               128  thrpt    5         9.000                    ms
[info] ArrayOfLocalDateTimesBenchmark.writeUPickle                                                         128  thrpt    5     15081.438 ±     777.114   ops/s
[info] ArrayOfLocalDateTimesBenchmark.writeUPickle:·gc.alloc.rate                                          128  thrpt    5       659.905 ±      34.079  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeUPickle:·gc.alloc.rate.norm                                     128  thrpt    5     68871.513 ±    1840.304    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeUPickle:·gc.churn.PS_Eden_Space                                 128  thrpt    5         0.558 ±       4.759  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5        57.801 ±     493.067    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space                             128  thrpt    5       673.276 ±       2.248  MB/sec
[info] ArrayOfLocalDateTimesBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5     70275.586 ±    3582.479    B/op
[info] ArrayOfLocalDateTimesBenchmark.writeUPickle:·gc.count                                               128  thrpt    5         5.000                counts
[info] ArrayOfLocalDateTimesBenchmark.writeUPickle:·gc.time                                                128  thrpt    5         7.000                    ms
[info] ArrayOfLocalDatesBenchmark.readCirce                                                                128  thrpt    5     31667.101 ±     931.972   ops/s
[info] ArrayOfLocalDatesBenchmark.readCirce:·gc.alloc.rate                                                 128  thrpt    5      1619.480 ±      68.939  MB/sec
[info] ArrayOfLocalDatesBenchmark.readCirce:·gc.alloc.rate.norm                                            128  thrpt    5     80495.894 ±    2341.354    B/op
[info] ArrayOfLocalDatesBenchmark.readCirce:·gc.churn.PS_Eden_Space                                        128  thrpt    5         0.058 ±       0.067  MB/sec
[info] ArrayOfLocalDatesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5         2.898 ±       3.340    B/op
[info] ArrayOfLocalDatesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                    128  thrpt    5      1620.976 ±    1428.235  MB/sec
[info] ArrayOfLocalDatesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5     80532.161 ±   70054.922    B/op
[info] ArrayOfLocalDatesBenchmark.readCirce:·gc.count                                                      128  thrpt    5        12.000                counts
[info] ArrayOfLocalDatesBenchmark.readCirce:·gc.time                                                       128  thrpt    5        12.000                    ms
[info] ArrayOfLocalDatesBenchmark.readJacksonScala                                                         128  thrpt    5     30547.155 ±     195.843   ops/s
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.alloc.rate                                          128  thrpt    5      1325.281 ±      41.597  MB/sec
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.alloc.rate.norm                                     128  thrpt    5     68283.852 ±    2420.680    B/op
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5         0.029 ±       0.091  MB/sec
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5         1.503 ±       4.720    B/op
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5      1214.764 ±    1159.737  MB/sec
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5     62600.178 ±   59897.626    B/op
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.count                                               128  thrpt    5         9.000                counts
[info] ArrayOfLocalDatesBenchmark.readJacksonScala:·gc.time                                                128  thrpt    5         9.000                    ms
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala                                                        128  thrpt    5    439016.013 ±    6987.693   ops/s
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.alloc.rate                                         128  thrpt    5      1168.403 ±      30.825  MB/sec
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                    128  thrpt    5      4189.169 ±     123.353    B/op
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                128  thrpt    5         0.021 ±       0.139  MB/sec
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5         0.075 ±       0.497    B/op
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5      1076.464 ±    1417.671  MB/sec
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5      3861.391 ±    5106.165    B/op
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.count                                              128  thrpt    5         8.000                counts
[info] ArrayOfLocalDatesBenchmark.readJsoniterScala:·gc.time                                               128  thrpt    5         7.000                    ms
[info] ArrayOfLocalDatesBenchmark.readPlayJson                                                             128  thrpt    5     17122.606 ±     442.847   ops/s
[info] ArrayOfLocalDatesBenchmark.readPlayJson:·gc.alloc.rate                                              128  thrpt    5      1733.835 ±      60.867  MB/sec
[info] ArrayOfLocalDatesBenchmark.readPlayJson:·gc.alloc.rate.norm                                         128  thrpt    5    159343.342 ±    5281.090    B/op
[info] ArrayOfLocalDatesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                     128  thrpt    5         0.021 ±       0.057  MB/sec
[info] ArrayOfLocalDatesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5         1.910 ±       5.161    B/op
[info] ArrayOfLocalDatesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                 128  thrpt    5      1622.879 ±    1425.338  MB/sec
[info] ArrayOfLocalDatesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5    149248.546 ±  133297.045    B/op
[info] ArrayOfLocalDatesBenchmark.readPlayJson:·gc.count                                                   128  thrpt    5        12.000                counts
[info] ArrayOfLocalDatesBenchmark.readPlayJson:·gc.time                                                    128  thrpt    5        11.000                    ms
[info] ArrayOfLocalDatesBenchmark.readUPickle                                                              128  thrpt    5     28892.944 ±    3730.293   ops/s
[info] ArrayOfLocalDatesBenchmark.readUPickle:·gc.alloc.rate                                               128  thrpt    5      1405.218 ±     153.703  MB/sec
[info] ArrayOfLocalDatesBenchmark.readUPickle:·gc.alloc.rate.norm                                          128  thrpt    5     76561.448 ±    1904.318    B/op
[info] ArrayOfLocalDatesBenchmark.readUPickle:·gc.churn.CodeHeap_'non-profiled_nmethods'                   128  thrpt    5         0.140 ±       1.201  MB/sec
[info] ArrayOfLocalDatesBenchmark.readUPickle:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm              128  thrpt    5         8.038 ±      69.206    B/op
[info] ArrayOfLocalDatesBenchmark.readUPickle:·gc.churn.Compressed_Class_Space                             128  thrpt    5         0.001 ±       0.010  MB/sec
[info] ArrayOfLocalDatesBenchmark.readUPickle:·gc.churn.Compressed_Class_Space.norm                        128  thrpt    5         0.067 ±       0.577    B/op
[info] ArrayOfLocalDatesBenchmark.readUPickle:·gc.churn.PS_Eden_Space                                      128  thrpt    5         0.067 ±       0.313  MB/sec
[info] ArrayOfLocalDatesBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5         3.745 ±      18.145    B/op
[info] ArrayOfLocalDatesBenchmark.readUPickle:·gc.churn.PS_Old_Gen                                         128  thrpt    5         0.004 ±       0.033  MB/sec
[info] ArrayOfLocalDatesBenchmark.readUPickle:·gc.churn.PS_Old_Gen.norm                                    128  thrpt    5         0.218 ±       1.874    B/op
[info] ArrayOfLocalDatesBenchmark.readUPickle:·gc.churn.PS_Survivor_Space                                  128  thrpt    5      1347.154 ±      29.084  MB/sec
[info] ArrayOfLocalDatesBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5     73464.982 ±   11236.745    B/op
[info] ArrayOfLocalDatesBenchmark.readUPickle:·gc.count                                                    128  thrpt    5        12.000                counts
[info] ArrayOfLocalDatesBenchmark.readUPickle:·gc.time                                                     128  thrpt    5        75.000                    ms
[info] ArrayOfLocalDatesBenchmark.writeCirce                                                               128  thrpt    5     54344.157 ±     560.959   ops/s
[info] ArrayOfLocalDatesBenchmark.writeCirce:·gc.alloc.rate                                                128  thrpt    5      1243.037 ±      37.800  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeCirce:·gc.alloc.rate.norm                                           128  thrpt    5     36002.141 ±    1226.258    B/op
[info] ArrayOfLocalDatesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                       128  thrpt    5         0.050 ±       0.122  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5         1.448 ±       3.524    B/op
[info] ArrayOfLocalDatesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                   128  thrpt    5      1215.452 ±    1160.997  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5     35216.331 ±   33798.446    B/op
[info] ArrayOfLocalDatesBenchmark.writeCirce:·gc.count                                                     128  thrpt    5         9.000                counts
[info] ArrayOfLocalDatesBenchmark.writeCirce:·gc.time                                                      128  thrpt    5         9.000                    ms
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala                                                        128  thrpt    5    105253.180 ±    4186.870   ops/s
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.alloc.rate                                         128  thrpt    5      1129.053 ±      85.053  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                    128  thrpt    5     16882.753 ±     897.912    B/op
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                128  thrpt    5         0.021 ±       0.098  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5         0.312 ±       1.482    B/op
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5      1079.589 ±    1423.636  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5     16118.363 ±   20972.641    B/op
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.count                                              128  thrpt    5         8.000                counts
[info] ArrayOfLocalDatesBenchmark.writeJacksonScala:·gc.time                                               128  thrpt    5         7.000                    ms
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala                                                       128  thrpt    5    816131.316 ±   57369.197   ops/s
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.alloc.rate                                        128  thrpt    5       903.974 ±      67.379  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                   128  thrpt    5      1743.397 ±      99.690    B/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                               128  thrpt    5         0.033 ±       0.166  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5         0.064 ±       0.320    B/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5       807.506 ±    1158.791  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5      1557.172 ±    2227.789    B/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.count                                             128  thrpt    5         6.000                counts
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScala:·gc.time                                              128  thrpt    5         6.000                    ms
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc                                               128  thrpt    5    942906.248 ±    8416.219   ops/s
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                128  thrpt    5         0.050 ±       0.290  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                           128  thrpt    5         0.083 ±       0.484    B/op
[info] ArrayOfLocalDatesBenchmark.writeJsoniterScalaPrealloc:·gc.count                                     128  thrpt    5           ≈ 0                counts
[info] ArrayOfLocalDatesBenchmark.writePlayJson                                                            128  thrpt    5     61452.175 ±    3056.517   ops/s
[info] ArrayOfLocalDatesBenchmark.writePlayJson:·gc.alloc.rate                                             128  thrpt    5      1349.312 ±      62.387  MB/sec
[info] ArrayOfLocalDatesBenchmark.writePlayJson:·gc.alloc.rate.norm                                        128  thrpt    5     34558.157 ±    1187.721    B/op
[info] ArrayOfLocalDatesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                    128  thrpt    5         0.017 ±       0.036  MB/sec
[info] ArrayOfLocalDatesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5         0.428 ±       0.921    B/op
[info] ArrayOfLocalDatesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                128  thrpt    5      1351.066 ±       7.762  MB/sec
[info] ArrayOfLocalDatesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5     34606.650 ±    1863.689    B/op
[info] ArrayOfLocalDatesBenchmark.writePlayJson:·gc.count                                                  128  thrpt    5        10.000                counts
[info] ArrayOfLocalDatesBenchmark.writePlayJson:·gc.time                                                   128  thrpt    5        10.000                    ms
[info] ArrayOfLocalDatesBenchmark.writeUPickle                                                             128  thrpt    5     30406.913 ±     400.865   ops/s
[info] ArrayOfLocalDatesBenchmark.writeUPickle:·gc.alloc.rate                                              128  thrpt    5       445.965 ±      29.716  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeUPickle:·gc.alloc.rate.norm                                         128  thrpt    5     23083.551 ±    1807.080    B/op
[info] ArrayOfLocalDatesBenchmark.writeUPickle:·gc.churn.PS_Eden_Space                                     128  thrpt    5         0.589 ±       4.962  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5        30.557 ±     257.334    B/op
[info] ArrayOfLocalDatesBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space                                 128  thrpt    5       403.964 ±    1419.992  MB/sec
[info] ArrayOfLocalDatesBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5     20956.775 ±   73666.037    B/op
[info] ArrayOfLocalDatesBenchmark.writeUPickle:·gc.count                                                   128  thrpt    5         3.000                counts
[info] ArrayOfLocalDatesBenchmark.writeUPickle:·gc.time                                                    128  thrpt    5         6.000                    ms
[info] ArrayOfLocalTimesBenchmark.readCirce                                                                128  thrpt    5     16516.345 ±    1148.291   ops/s
[info] ArrayOfLocalTimesBenchmark.readCirce:·gc.alloc.rate                                                 128  thrpt    5      1475.115 ±     123.726  MB/sec
[info] ArrayOfLocalTimesBenchmark.readCirce:·gc.alloc.rate.norm                                            128  thrpt    5    140553.402 ±    5272.740    B/op
[info] ArrayOfLocalTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space                                        128  thrpt    5         0.029 ±       0.091  MB/sec
[info] ArrayOfLocalTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5         2.754 ±       8.627    B/op
[info] ArrayOfLocalTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                    128  thrpt    5      1484.698 ±    1172.426  MB/sec
[info] ArrayOfLocalTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5    141382.426 ±  108368.610    B/op
[info] ArrayOfLocalTimesBenchmark.readCirce:·gc.count                                                      128  thrpt    5        11.000                counts
[info] ArrayOfLocalTimesBenchmark.readCirce:·gc.time                                                       128  thrpt    5        11.000                    ms
[info] ArrayOfLocalTimesBenchmark.readJacksonScala                                                         128  thrpt    5     16332.039 ±     650.539   ops/s
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.alloc.rate                                          128  thrpt    5      1337.561 ±      47.248  MB/sec
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm                                     128  thrpt    5    128909.990 ±    2261.078    B/op
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5         0.033 ±       0.166  MB/sec
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5         3.190 ±      15.906    B/op
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5      1214.883 ±    1162.031  MB/sec
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5    116854.049 ±  108892.927    B/op
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.count                                               128  thrpt    5         9.000                counts
[info] ArrayOfLocalTimesBenchmark.readJacksonScala:·gc.time                                                128  thrpt    5        10.000                    ms
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala                                                        128  thrpt    5    684520.981 ±   38883.159   ops/s
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.alloc.rate                                         128  thrpt    5      1837.808 ±     131.523  MB/sec
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                    128  thrpt    5      4226.144 ±      94.773    B/op
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                128  thrpt    5         0.042 ±       0.098  MB/sec
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5         0.096 ±       0.226    B/op
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5      1754.467 ±    1420.544  MB/sec
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5      4035.130 ±    3271.452    B/op
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.count                                              128  thrpt    5        13.000                counts
[info] ArrayOfLocalTimesBenchmark.readJsoniterScala:·gc.time                                               128  thrpt    5        11.000                    ms
[info] ArrayOfLocalTimesBenchmark.readPlayJson                                                             128  thrpt    5     11296.779 ±     135.334   ops/s
[info] ArrayOfLocalTimesBenchmark.readPlayJson:·gc.alloc.rate                                              128  thrpt    5      1553.451 ±      30.363  MB/sec
[info] ArrayOfLocalTimesBenchmark.readPlayJson:·gc.alloc.rate.norm                                         128  thrpt    5    216435.004 ±    5295.600    B/op
[info] ArrayOfLocalTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                     128  thrpt    5         0.017 ±       0.067  MB/sec
[info] ArrayOfLocalTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5         2.322 ±       9.360    B/op
[info] ArrayOfLocalTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                 128  thrpt    5      1486.170 ±    1166.649  MB/sec
[info] ArrayOfLocalTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5    207032.226 ±  161696.958    B/op
[info] ArrayOfLocalTimesBenchmark.readPlayJson:·gc.count                                                   128  thrpt    5        11.000                counts
[info] ArrayOfLocalTimesBenchmark.readPlayJson:·gc.time                                                    128  thrpt    5        12.000                    ms
[info] ArrayOfLocalTimesBenchmark.readUPickle                                                              128  thrpt    5     15164.810 ±     441.139   ops/s
[info] ArrayOfLocalTimesBenchmark.readUPickle:·gc.alloc.rate                                               128  thrpt    5      1264.954 ±      54.816  MB/sec
[info] ArrayOfLocalTimesBenchmark.readUPickle:·gc.alloc.rate.norm                                          128  thrpt    5    131295.635 ±    3423.710    B/op
[info] ArrayOfLocalTimesBenchmark.readUPickle:·gc.churn.PS_Eden_Space                                      128  thrpt    5         0.017 ±       0.104  MB/sec
[info] ArrayOfLocalTimesBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5         1.716 ±      10.755    B/op
[info] ArrayOfLocalTimesBenchmark.readUPickle:·gc.churn.PS_Survivor_Space                                  128  thrpt    5      1211.415 ±    1159.574  MB/sec
[info] ArrayOfLocalTimesBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5    125587.411 ±  118341.729    B/op
[info] ArrayOfLocalTimesBenchmark.readUPickle:·gc.count                                                    128  thrpt    5         9.000                counts
[info] ArrayOfLocalTimesBenchmark.readUPickle:·gc.time                                                     128  thrpt    5        10.000                    ms
[info] ArrayOfLocalTimesBenchmark.writeCirce                                                               128  thrpt    5     42973.376 ±    1836.331   ops/s
[info] ArrayOfLocalTimesBenchmark.writeCirce:·gc.alloc.rate                                                128  thrpt    5      1372.642 ±      48.348  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeCirce:·gc.alloc.rate.norm                                           128  thrpt    5     50274.550 ±     824.714    B/op
[info] ArrayOfLocalTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                       128  thrpt    5         0.033 ±       0.091  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5         1.216 ±       3.333    B/op
[info] ArrayOfLocalTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                   128  thrpt    5      1351.222 ±       6.462  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5     49493.892 ±    2180.320    B/op
[info] ArrayOfLocalTimesBenchmark.writeCirce:·gc.count                                                     128  thrpt    5        10.000                counts
[info] ArrayOfLocalTimesBenchmark.writeCirce:·gc.time                                                      128  thrpt    5         9.000                    ms
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala                                                        128  thrpt    5     52602.590 ±    1720.363   ops/s
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.alloc.rate                                         128  thrpt    5      1442.486 ±      19.316  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                    128  thrpt    5     43161.865 ±     869.037    B/op
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                128  thrpt    5         0.033 ±       0.122  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5         1.000 ±       3.653    B/op
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5      1351.396 ±       7.029  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5     40437.546 ±    1518.328    B/op
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.count                                              128  thrpt    5        10.000                counts
[info] ArrayOfLocalTimesBenchmark.writeJacksonScala:·gc.time                                               128  thrpt    5         9.000                    ms
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala                                                       128  thrpt    5   1006530.859 ±   17331.445   ops/s
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.alloc.rate                                        128  thrpt    5       939.465 ±      33.460  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                   128  thrpt    5      1469.012 ±      45.636    B/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                               128  thrpt    5         0.037 ±       0.215  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5         0.059 ±       0.337    B/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5       942.030 ±    1419.568  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5      1473.477 ±    2225.897    B/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.count                                             128  thrpt    5         7.000                counts
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScala:·gc.time                                              128  thrpt    5         7.000                    ms
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc                                               128  thrpt    5   1108282.497 ±    1937.462   ops/s
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                           128  thrpt    5        ≈ 10⁻³                  B/op
[info] ArrayOfLocalTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count                                     128  thrpt    5           ≈ 0                counts
[info] ArrayOfLocalTimesBenchmark.writePlayJson                                                            128  thrpt    5     39215.918 ±     411.185   ops/s
[info] ArrayOfLocalTimesBenchmark.writePlayJson:·gc.alloc.rate                                             128  thrpt    5      1216.747 ±      56.128  MB/sec
[info] ArrayOfLocalTimesBenchmark.writePlayJson:·gc.alloc.rate.norm                                        128  thrpt    5     48830.936 ±    1873.911    B/op
[info] ArrayOfLocalTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                    128  thrpt    5         0.042 ±       0.113  MB/sec
[info] ArrayOfLocalTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5         1.669 ±       4.543    B/op
[info] ArrayOfLocalTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                128  thrpt    5      1214.659 ±    1162.264  MB/sec
[info] ArrayOfLocalTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5     48730.493 ±   46419.610    B/op
[info] ArrayOfLocalTimesBenchmark.writePlayJson:·gc.count                                                  128  thrpt    5         9.000                counts
[info] ArrayOfLocalTimesBenchmark.writePlayJson:·gc.time                                                   128  thrpt    5         9.000                    ms
[info] ArrayOfLocalTimesBenchmark.writeUPickle                                                             128  thrpt    5     34160.191 ±     357.059   ops/s
[info] ArrayOfLocalTimesBenchmark.writeUPickle:·gc.alloc.rate                                              128  thrpt    5       490.844 ±      23.899  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeUPickle:·gc.alloc.rate.norm                                         128  thrpt    5     22618.359 ±    1280.129    B/op
[info] ArrayOfLocalTimesBenchmark.writeUPickle:·gc.churn.PS_Eden_Space                                     128  thrpt    5         0.568 ±       4.893  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5        26.248 ±     226.000    B/op
[info] ArrayOfLocalTimesBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space                                 128  thrpt    5       538.950 ±    1160.131  MB/sec
[info] ArrayOfLocalTimesBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5     24854.067 ±   53500.941    B/op
[info] ArrayOfLocalTimesBenchmark.writeUPickle:·gc.count                                                   128  thrpt    5         4.000                counts
[info] ArrayOfLocalTimesBenchmark.writeUPickle:·gc.time                                                    128  thrpt    5         8.000                    ms
[info] ArrayOfLongsBenchmark.readCirce                                                                     128  thrpt    5    125376.355 ±    4114.333   ops/s
[info] ArrayOfLongsBenchmark.readCirce:·gc.alloc.rate                                                      128  thrpt    5      1800.767 ±      74.507  MB/sec
[info] ArrayOfLongsBenchmark.readCirce:·gc.alloc.rate.norm                                                 128  thrpt    5     22606.807 ±     392.674    B/op
[info] ArrayOfLongsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                             128  thrpt    5         0.046 ±       0.183  MB/sec
[info] ArrayOfLongsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                        128  thrpt    5         0.574 ±       2.285    B/op
[info] ArrayOfLongsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                         128  thrpt    5      1753.709 ±    1425.174  MB/sec
[info] ArrayOfLongsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                    128  thrpt    5     22013.921 ±   17831.552    B/op
[info] ArrayOfLongsBenchmark.readCirce:·gc.count                                                           128  thrpt    5        13.000                counts
[info] ArrayOfLongsBenchmark.readCirce:·gc.time                                                            128  thrpt    5        13.000                    ms
[info] ArrayOfLongsBenchmark.readDslJsonJava                                                               128  thrpt    5    354428.181 ±    9662.102   ops/s
[info] ArrayOfLongsBenchmark.readDslJsonJava:·gc.alloc.rate                                                128  thrpt    5       731.818 ±      24.938  MB/sec
[info] ArrayOfLongsBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                           128  thrpt    5      3249.989 ±      46.572    B/op
[info] ArrayOfLongsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                                       128  thrpt    5         0.017 ±       0.105  MB/sec
[info] ArrayOfLongsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5         0.074 ±       0.462    B/op
[info] ArrayOfLongsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                                   128  thrpt    5       670.325 ±       1.434  MB/sec
[info] ArrayOfLongsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5      2977.042 ±      85.876    B/op
[info] ArrayOfLongsBenchmark.readDslJsonJava:·gc.count                                                     128  thrpt    5         5.000                counts
[info] ArrayOfLongsBenchmark.readDslJsonJava:·gc.time                                                      128  thrpt    5         5.000                    ms
[info] ArrayOfLongsBenchmark.readJacksonScala                                                              128  thrpt    5    248002.067 ±    3234.111   ops/s
[info] ArrayOfLongsBenchmark.readJacksonScala:·gc.alloc.rate                                               128  thrpt    5       553.457 ±      29.414  MB/sec
[info] ArrayOfLongsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                          128  thrpt    5      3512.687 ±     228.706    B/op
[info] ArrayOfLongsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                      128  thrpt    5         0.175 ±       1.285  MB/sec
[info] ArrayOfLongsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5         1.114 ±       8.199    B/op
[info] ArrayOfLongsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                  128  thrpt    5       539.147 ±    1160.557  MB/sec
[info] ArrayOfLongsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5      3425.844 ±    7374.436    B/op
[info] ArrayOfLongsBenchmark.readJacksonScala:·gc.count                                                    128  thrpt    5         4.000                counts
[info] ArrayOfLongsBenchmark.readJacksonScala:·gc.time                                                     128  thrpt    5         5.000                    ms
[info] ArrayOfLongsBenchmark.readJsoniterScala                                                             128  thrpt    5    471461.693 ±   40402.221   ops/s
[info] ArrayOfLongsBenchmark.readJsoniterScala:·gc.alloc.rate                                              128  thrpt    5       612.996 ±      46.610  MB/sec
[info] ArrayOfLongsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                         128  thrpt    5      2046.976 ±     143.673    B/op
[info] ArrayOfLongsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                     128  thrpt    5         0.472 ±       4.068  MB/sec
[info] ArrayOfLongsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5         1.564 ±      13.468    B/op
[info] ArrayOfLongsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                 128  thrpt    5       540.172 ±    1162.763  MB/sec
[info] ArrayOfLongsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5      1809.806 ±    3899.939    B/op
[info] ArrayOfLongsBenchmark.readJsoniterScala:·gc.count                                                   128  thrpt    5         4.000                counts
[info] ArrayOfLongsBenchmark.readJsoniterScala:·gc.time                                                    128  thrpt    5         5.000                    ms
[info] ArrayOfLongsBenchmark.readPlayJson                                                                  128  thrpt    5     73285.574 ±    2022.485   ops/s
[info] ArrayOfLongsBenchmark.readPlayJson:·gc.alloc.rate                                                   128  thrpt    5      3090.774 ±     140.606  MB/sec
[info] ArrayOfLongsBenchmark.readPlayJson:·gc.alloc.rate.norm                                              128  thrpt    5     66376.963 ±    1720.385    B/op
[info] ArrayOfLongsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                          128  thrpt    5         0.075 ±       0.091  MB/sec
[info] ArrayOfLongsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                     128  thrpt    5         1.607 ±       1.925    B/op
[info] ArrayOfLongsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                      128  thrpt    5      2986.979 ±    1433.683  MB/sec
[info] ArrayOfLongsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5     64119.834 ±   29530.778    B/op
[info] ArrayOfLongsBenchmark.readPlayJson:·gc.count                                                        128  thrpt    5        22.000                counts
[info] ArrayOfLongsBenchmark.readPlayJson:·gc.time                                                         128  thrpt    5        21.000                    ms
[info] ArrayOfLongsBenchmark.writeCirce                                                                    128  thrpt    5    124940.846 ±    8413.814   ops/s
[info] ArrayOfLongsBenchmark.writeCirce:·gc.alloc.rate                                                     128  thrpt    5       697.416 ±      38.067  MB/sec
[info] ArrayOfLongsBenchmark.writeCirce:·gc.alloc.rate.norm                                                128  thrpt    5      8785.296 ±     238.352    B/op
[info] ArrayOfLongsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                            128  thrpt    5         0.017 ±       0.105  MB/sec
[info] ArrayOfLongsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                       128  thrpt    5         0.208 ±       1.305    B/op
[info] ArrayOfLongsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                        128  thrpt    5       674.826 ±       0.515  MB/sec
[info] ArrayOfLongsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                   128  thrpt    5      8502.332 ±     586.099    B/op
[info] ArrayOfLongsBenchmark.writeCirce:·gc.count                                                          128  thrpt    5         5.000                counts
[info] ArrayOfLongsBenchmark.writeCirce:·gc.time                                                           128  thrpt    5         5.000                    ms
[info] ArrayOfLongsBenchmark.writeDslJsonJava                                                              128  thrpt    5    205559.204 ±    1583.591   ops/s
[info] ArrayOfLongsBenchmark.writeDslJsonJava:·gc.alloc.rate                                               128  thrpt    5       163.361 ±      11.169  MB/sec
[info] ArrayOfLongsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                          128  thrpt    5      1250.910 ±      93.857    B/op
[info] ArrayOfLongsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                                      128  thrpt    5         0.007 ±       0.057  MB/sec
[info] ArrayOfLongsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5         0.051 ±       0.440    B/op
[info] ArrayOfLongsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                                  128  thrpt    5       204.640 ±    1079.009  MB/sec
[info] ArrayOfLongsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5      1569.918 ±    8277.731    B/op
[info] ArrayOfLongsBenchmark.writeDslJsonJava:·gc.count                                                    128  thrpt    5         2.000                counts
[info] ArrayOfLongsBenchmark.writeDslJsonJava:·gc.time                                                     128  thrpt    5         7.000                    ms
[info] ArrayOfLongsBenchmark.writeJacksonScala                                                             128  thrpt    5    402162.164 ±    6153.926   ops/s
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.alloc.rate                                              128  thrpt    5       406.479 ±      40.417  MB/sec
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                         128  thrpt    5      1590.979 ±     176.356    B/op
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                     128  thrpt    5         0.146 ±       1.210  MB/sec
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5         0.572 ±       4.755    B/op
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                 128  thrpt    5       404.154 ±    1420.659  MB/sec
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5      1585.217 ±    5572.271    B/op
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.count                                                   128  thrpt    5         3.000                counts
[info] ArrayOfLongsBenchmark.writeJacksonScala:·gc.time                                                    128  thrpt    5         5.000                    ms
[info] ArrayOfLongsBenchmark.writeJsoniterScala                                                            128  thrpt    5    442157.848 ±   12212.369   ops/s
[info] ArrayOfLongsBenchmark.writeJsoniterScala:·gc.alloc.rate                                             128  thrpt    5       356.492 ±      38.142  MB/sec
[info] ArrayOfLongsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                        128  thrpt    5      1269.044 ±     146.856    B/op
[info] ArrayOfLongsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5         0.547 ±       4.669  MB/sec
[info] ArrayOfLongsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5         1.949 ±      16.625    B/op
[info] ArrayOfLongsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5       371.968 ±    1332.188  MB/sec
[info] ArrayOfLongsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5      1327.858 ±    4748.417    B/op
[info] ArrayOfLongsBenchmark.writeJsoniterScala:·gc.count                                                  128  thrpt    5         3.000                counts
[info] ArrayOfLongsBenchmark.writeJsoniterScala:·gc.time                                                   128  thrpt    5         8.000                    ms
[info] ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc                                                    128  thrpt    5    468102.799 ±    8802.039   ops/s
[info] ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                     128  thrpt    5         0.571 ±       4.917  MB/sec
[info] ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                128  thrpt    5         1.938 ±      16.679    B/op
[info] ArrayOfLongsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                          128  thrpt    5           ≈ 0                counts
[info] ArrayOfLongsBenchmark.writePlayJson                                                                 128  thrpt    5     26753.149 ±     161.233   ops/s
[info] ArrayOfLongsBenchmark.writePlayJson:·gc.alloc.rate                                                  128  thrpt    5      1363.073 ±      30.911  MB/sec
[info] ArrayOfLongsBenchmark.writePlayJson:·gc.alloc.rate.norm                                             128  thrpt    5     80193.543 ±    1936.829    B/op
[info] ArrayOfLongsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                         128  thrpt    5         0.021 ±       0.057  MB/sec
[info] ArrayOfLongsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5         1.225 ±       3.339    B/op
[info] ArrayOfLongsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                     128  thrpt    5      1350.576 ±       6.741  MB/sec
[info] ArrayOfLongsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5     79458.219 ±     479.662    B/op
[info] ArrayOfLongsBenchmark.writePlayJson:·gc.count                                                       128  thrpt    5        10.000                counts
[info] ArrayOfLongsBenchmark.writePlayJson:·gc.time                                                        128  thrpt    5        10.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.readCirce                                                           128  thrpt    5      8175.121 ±     108.921   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.alloc.rate                                            128  thrpt    5      1137.254 ±      25.414  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.alloc.rate.norm                                       128  thrpt    5    218969.098 ±    5864.238    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space                                   128  thrpt    5         0.008 ±       0.044  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5         1.603 ±       8.454    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                               128  thrpt    5      1079.100 ±    1421.789  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5    207843.851 ±  274645.331    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.count                                                 128  thrpt    5         8.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.readCirce:·gc.time                                                  128  thrpt    5         8.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala                                                    128  thrpt    5      7199.638 ±     201.381   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.alloc.rate                                     128  thrpt    5       967.510 ±      67.412  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm                                128  thrpt    5    211513.454 ±   13265.834    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                            128  thrpt    5         0.017 ±       0.036  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5         3.635 ±       7.827    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5       944.119 ±    1423.360  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5    206352.317 ±  310443.032    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.count                                          128  thrpt    5         7.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.readJacksonScala:·gc.time                                           128  thrpt    5         7.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala                                                   128  thrpt    5    176580.291 ±    6996.252   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate                                    128  thrpt    5      1764.340 ±      91.865  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                               128  thrpt    5     15727.540 ±     621.034    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                           128  thrpt    5         0.054 ±       0.122  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5         0.484 ±       1.111    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5      1620.209 ±    1423.449  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5     14463.900 ±   13157.367    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.count                                         128  thrpt    5        12.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.readJsoniterScala:·gc.time                                          128  thrpt    5        11.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson                                                        128  thrpt    5      7089.790 ±     163.911   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.alloc.rate                                         128  thrpt    5      1220.744 ±      69.862  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.alloc.rate.norm                                    128  thrpt    5    271009.365 ±   10525.804    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                128  thrpt    5         0.017 ±       0.067  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5         3.681 ±      14.824    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                            128  thrpt    5      1213.546 ±    1161.391  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5    269214.656 ±  255149.991    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.count                                              128  thrpt    5         9.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.readPlayJson:·gc.time                                               128  thrpt    5        10.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.readUPickle                                                         128  thrpt    5      8068.692 ±     209.423   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.readUPickle:·gc.alloc.rate                                          128  thrpt    5      1104.770 ±      33.316  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readUPickle:·gc.alloc.rate.norm                                     128  thrpt    5    215515.898 ±    9027.693    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readUPickle:·gc.churn.PS_Eden_Space                                 128  thrpt    5         0.012 ±       0.044  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5         2.443 ±       8.586    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readUPickle:·gc.churn.PS_Survivor_Space                             128  thrpt    5      1074.114 ±    1415.809  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5    209733.452 ±  278698.074    B/op
[info] ArrayOfOffsetDateTimesBenchmark.readUPickle:·gc.count                                               128  thrpt    5         8.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.readUPickle:·gc.time                                                128  thrpt    5         8.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce                                                          128  thrpt    5     19079.215 ±     576.727   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.alloc.rate                                           128  thrpt    5       817.463 ±      34.395  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.alloc.rate.norm                                      128  thrpt    5     67431.872 ±    2786.096    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                  128  thrpt    5         0.012 ±       0.072  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5         1.026 ±       5.892    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                              128  thrpt    5       809.005 ±    1159.865  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5     66704.983 ±   95093.278    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.count                                                128  thrpt    5         6.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.writeCirce:·gc.time                                                 128  thrpt    5         6.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala                                                   128  thrpt    5     21649.546 ±    1663.891   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate                                    128  thrpt    5       858.082 ±      90.312  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                               128  thrpt    5     62377.148 ±    3227.926    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                           128  thrpt    5         0.021 ±       0.179  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5         1.497 ±      12.890    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5       808.983 ±    1160.374  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5     58723.898 ±   82391.046    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.count                                         128  thrpt    5         6.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.writeJacksonScala:·gc.time                                          128  thrpt    5         6.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala                                                  128  thrpt    5    312858.446 ±   10404.356   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate                                   128  thrpt    5       728.374 ±      26.743  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                              128  thrpt    5      3664.535 ±      92.182    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                          128  thrpt    5         0.021 ±       0.098  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                     128  thrpt    5         0.105 ±       0.497    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                      128  thrpt    5       672.990 ±       1.295  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                 128  thrpt    5      3386.060 ±     112.751    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.count                                        128  thrpt    5         5.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScala:·gc.time                                         128  thrpt    5         5.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc                                          128  thrpt    5    413099.360 ±   13584.225   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                           128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                      128  thrpt    5         0.001 ±       0.001    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count                                128  thrpt    5           ≈ 0                counts
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson                                                       128  thrpt    5     21610.841 ±     317.866   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.alloc.rate                                        128  thrpt    5       938.436 ±      36.612  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.alloc.rate.norm                                   128  thrpt    5     68350.388 ±    3196.433    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                               128  thrpt    5         0.017 ±       0.143  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5         1.215 ±      10.460    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                           128  thrpt    5       808.735 ±    1160.978  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5     58919.695 ±   84882.853    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.count                                             128  thrpt    5         6.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.writePlayJson:·gc.time                                              128  thrpt    5         5.000                    ms
[info] ArrayOfOffsetDateTimesBenchmark.writeUPickle                                                        128  thrpt    5     11810.612 ±     332.847   ops/s
[info] ArrayOfOffsetDateTimesBenchmark.writeUPickle:·gc.alloc.rate                                         128  thrpt    5       659.853 ±      14.937  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeUPickle:·gc.alloc.rate.norm                                    128  thrpt    5     87935.642 ±    2784.021    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeUPickle:·gc.churn.PS_Eden_Space                                128  thrpt    5         0.520 ±       4.347  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5        68.883 ±     575.297    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space                            128  thrpt    5       674.333 ±       3.708  MB/sec
[info] ArrayOfOffsetDateTimesBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5     89865.578 ±    2229.150    B/op
[info] ArrayOfOffsetDateTimesBenchmark.writeUPickle:·gc.count                                              128  thrpt    5         5.000                counts
[info] ArrayOfOffsetDateTimesBenchmark.writeUPickle:·gc.time                                               128  thrpt    5         6.000                    ms
[info] ArrayOfOffsetTimesBenchmark.readCirce                                                               128  thrpt    5     13438.733 ±     604.049   ops/s
[info] ArrayOfOffsetTimesBenchmark.readCirce:·gc.alloc.rate                                                128  thrpt    5      1320.703 ±      77.028  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readCirce:·gc.alloc.rate.norm                                           128  thrpt    5    154677.040 ±    2877.494    B/op
[info] ArrayOfOffsetTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space                                       128  thrpt    5         0.029 ±       0.091  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5         3.439 ±      10.885    B/op
[info] ArrayOfOffsetTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                   128  thrpt    5      1350.571 ±       6.253  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5    158196.064 ±    6805.008    B/op
[info] ArrayOfOffsetTimesBenchmark.readCirce:·gc.count                                                     128  thrpt    5        10.000                counts
[info] ArrayOfOffsetTimesBenchmark.readCirce:·gc.time                                                      128  thrpt    5        10.000                    ms
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala                                                        128  thrpt    5     13134.307 ±     120.376   ops/s
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.alloc.rate                                         128  thrpt    5      1164.421 ±      42.952  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm                                    128  thrpt    5    139548.629 ±    4134.907    B/op
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                128  thrpt    5         0.012 ±       0.044  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5         1.494 ±       5.253    B/op
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5      1079.425 ±    1423.310  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5    129288.452 ±  169644.495    B/op
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.count                                              128  thrpt    5         8.000                counts
[info] ArrayOfOffsetTimesBenchmark.readJacksonScala:·gc.time                                               128  thrpt    5         8.000                    ms
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala                                                       128  thrpt    5    266797.515 ±    9872.497   ops/s
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.alloc.rate                                        128  thrpt    5      1595.874 ±      90.551  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                   128  thrpt    5      9414.651 ±     371.280    B/op
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                               128  thrpt    5         0.042 ±       0.080  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5         0.246 ±       0.478    B/op
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5      1617.127 ±    1419.959  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5      9551.458 ±    8626.960    B/op
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.count                                             128  thrpt    5        12.000                counts
[info] ArrayOfOffsetTimesBenchmark.readJsoniterScala:·gc.time                                              128  thrpt    5        12.000                    ms
[info] ArrayOfOffsetTimesBenchmark.readPlayJson                                                            128  thrpt    5     11979.434 ±     240.048   ops/s
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.alloc.rate                                             128  thrpt    5      1467.913 ±      50.829  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.alloc.rate.norm                                        128  thrpt    5    192861.787 ±    6234.838    B/op
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                    128  thrpt    5         0.021 ±       0.080  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5         2.738 ±      10.555    B/op
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                128  thrpt    5      1482.794 ±    1168.588  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5    194842.838 ±  154259.979    B/op
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.count                                                  128  thrpt    5        11.000                counts
[info] ArrayOfOffsetTimesBenchmark.readPlayJson:·gc.time                                                   128  thrpt    5        11.000                    ms
[info] ArrayOfOffsetTimesBenchmark.readUPickle                                                             128  thrpt    5     12195.901 ±     178.063   ops/s
[info] ArrayOfOffsetTimesBenchmark.readUPickle:·gc.alloc.rate                                              128  thrpt    5      1097.690 ±      56.493  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readUPickle:·gc.alloc.rate.norm                                         128  thrpt    5    141641.737 ±    5857.132    B/op
[info] ArrayOfOffsetTimesBenchmark.readUPickle:·gc.churn.PS_Eden_Space                                     128  thrpt    5         0.021 ±       0.098  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5         2.687 ±      12.662    B/op
[info] ArrayOfOffsetTimesBenchmark.readUPickle:·gc.churn.PS_Survivor_Space                                 128  thrpt    5      1073.975 ±    1416.134  MB/sec
[info] ArrayOfOffsetTimesBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5    138494.148 ±  181611.268    B/op
[info] ArrayOfOffsetTimesBenchmark.readUPickle:·gc.count                                                   128  thrpt    5         8.000                counts
[info] ArrayOfOffsetTimesBenchmark.readUPickle:·gc.time                                                    128  thrpt    5         7.000                    ms
[info] ArrayOfOffsetTimesBenchmark.writeCirce                                                              128  thrpt    5     31341.769 ±    2280.615   ops/s
[info] ArrayOfOffsetTimesBenchmark.writeCirce:·gc.alloc.rate                                               128  thrpt    5      1059.016 ±      92.662  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeCirce:·gc.alloc.rate.norm                                          128  thrpt    5     53172.535 ±    1506.474    B/op
[info] ArrayOfOffsetTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                      128  thrpt    5         0.025 ±       0.105  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5         1.242 ±       5.186    B/op
[info] ArrayOfOffsetTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                  128  thrpt    5      1080.396 ±    1424.279  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5     54054.977 ±   69007.733    B/op
[info] ArrayOfOffsetTimesBenchmark.writeCirce:·gc.count                                                    128  thrpt    5         8.000                counts
[info] ArrayOfOffsetTimesBenchmark.writeCirce:·gc.time                                                     128  thrpt    5         8.000                    ms
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala                                                       128  thrpt    5     70535.137 ±    4040.134   ops/s
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.alloc.rate                                        128  thrpt    5      1583.050 ±      92.545  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                   128  thrpt    5     35326.256 ±     844.240    B/op
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                               128  thrpt    5         0.042 ±       0.150  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5         0.922 ±       3.275    B/op
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5      1486.999 ±    1164.973  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5     33125.536 ±   24132.338    B/op
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.count                                             128  thrpt    5        11.000                counts
[info] ArrayOfOffsetTimesBenchmark.writeJacksonScala:·gc.time                                              128  thrpt    5        10.000                    ms
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala                                                      128  thrpt    5    581281.951 ±   43603.084   ops/s
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.alloc.rate                                       128  thrpt    5       820.863 ±      58.498  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                  128  thrpt    5      2222.766 ±      66.728    B/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                              128  thrpt    5         0.021 ±       0.113  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5         0.056 ±       0.305    B/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5       807.567 ±    1160.623  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5      2190.478 ±    3206.942    B/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.count                                            128  thrpt    5         6.000                counts
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScala:·gc.time                                             128  thrpt    5         6.000                    ms
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc                                              128  thrpt    5    677474.237 ±    3838.487   ops/s
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                               128  thrpt    5         0.517 ±       4.448  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                          128  thrpt    5         1.204 ±      10.358    B/op
[info] ArrayOfOffsetTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count                                    128  thrpt    5           ≈ 0                counts
[info] ArrayOfOffsetTimesBenchmark.writePlayJson                                                           128  thrpt    5     68394.014 ±    5911.956   ops/s
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.alloc.rate                                            128  thrpt    5      1516.452 ±     140.536  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.alloc.rate.norm                                       128  thrpt    5     34893.217 ±     392.305    B/op
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                   128  thrpt    5         0.033 ±       0.091  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5         0.774 ±       2.173    B/op
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                               128  thrpt    5      1486.758 ±    1157.599  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5     34164.142 ±   24922.654    B/op
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.count                                                 128  thrpt    5        11.000                counts
[info] ArrayOfOffsetTimesBenchmark.writePlayJson:·gc.time                                                  128  thrpt    5        10.000                    ms
[info] ArrayOfOffsetTimesBenchmark.writeUPickle                                                            128  thrpt    5     21957.489 ±     666.850   ops/s
[info] ArrayOfOffsetTimesBenchmark.writeUPickle:·gc.alloc.rate                                             128  thrpt    5       539.531 ±      30.690  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeUPickle:·gc.alloc.rate.norm                                        128  thrpt    5     38677.489 ±    3063.581    B/op
[info] ArrayOfOffsetTimesBenchmark.writeUPickle:·gc.churn.PS_Eden_Space                                    128  thrpt    5         0.587 ±       5.054  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5        42.672 ±     367.421    B/op
[info] ArrayOfOffsetTimesBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space                                128  thrpt    5       403.802 ±    1419.420  MB/sec
[info] ArrayOfOffsetTimesBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5     29011.630 ±  101989.851    B/op
[info] ArrayOfOffsetTimesBenchmark.writeUPickle:·gc.count                                                  128  thrpt    5         3.000                counts
[info] ArrayOfOffsetTimesBenchmark.writeUPickle:·gc.time                                                   128  thrpt    5         5.000                    ms
[info] ArrayOfPeriodsBenchmark.readCirce                                                                   128  thrpt    5     18510.814 ±     324.775   ops/s
[info] ArrayOfPeriodsBenchmark.readCirce:·gc.alloc.rate                                                    128  thrpt    5       669.010 ±      14.188  MB/sec
[info] ArrayOfPeriodsBenchmark.readCirce:·gc.alloc.rate.norm                                               128  thrpt    5     56885.400 ±    1999.044    B/op
[info] ArrayOfPeriodsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                           128  thrpt    5         0.112 ±       0.834  MB/sec
[info] ArrayOfPeriodsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                      128  thrpt    5         9.557 ±      70.946    B/op
[info] ArrayOfPeriodsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                       128  thrpt    5       673.931 ±       1.413  MB/sec
[info] ArrayOfPeriodsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                  128  thrpt    5     57303.099 ±    1012.056    B/op
[info] ArrayOfPeriodsBenchmark.readCirce:·gc.count                                                         128  thrpt    5         5.000                counts
[info] ArrayOfPeriodsBenchmark.readCirce:·gc.time                                                          128  thrpt    5         6.000                    ms
[info] ArrayOfPeriodsBenchmark.readJacksonScala                                                            128  thrpt    5     19396.194 ±     304.073   ops/s
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.alloc.rate                                             128  thrpt    5       557.868 ±      19.776  MB/sec
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                        128  thrpt    5     45272.958 ±    2239.453    B/op
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5         0.191 ±       1.604  MB/sec
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5        15.575 ±     130.499    B/op
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5       539.160 ±    1160.582  MB/sec
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5     43801.601 ±   94288.715    B/op
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.count                                                  128  thrpt    5         4.000                counts
[info] ArrayOfPeriodsBenchmark.readJacksonScala:·gc.time                                                   128  thrpt    5         5.000                    ms
[info] ArrayOfPeriodsBenchmark.readJsoniterScala                                                           128  thrpt    5    115761.448 ±    7095.273   ops/s
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.alloc.rate                                            128  thrpt    5       297.205 ±      26.770  MB/sec
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                       128  thrpt    5      4042.061 ±     474.847    B/op
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5         0.006 ±       0.054  MB/sec
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5         0.084 ±       0.727    B/op
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5       237.124 ±    1269.685  MB/sec
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5      3254.976 ±   17368.182    B/op
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.count                                                 128  thrpt    5         2.000                counts
[info] ArrayOfPeriodsBenchmark.readJsoniterScala:·gc.time                                                  128  thrpt    5         6.000                    ms
[info] ArrayOfPeriodsBenchmark.readPlayJson                                                                128  thrpt    5     16363.916 ±    1118.009   ops/s
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.alloc.rate                                                 128  thrpt    5      1017.800 ±      45.783  MB/sec
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.alloc.rate.norm                                            128  thrpt    5     97913.816 ±    3901.246    B/op
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                        128  thrpt    5         0.012 ±       0.044  MB/sec
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5         1.202 ±       4.226    B/op
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                    128  thrpt    5       943.940 ±    1422.243  MB/sec
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5     90969.293 ±  139108.882    B/op
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.count                                                      128  thrpt    5         7.000                counts
[info] ArrayOfPeriodsBenchmark.readPlayJson:·gc.time                                                       128  thrpt    5         7.000                    ms
[info] ArrayOfPeriodsBenchmark.readUPickle                                                                 128  thrpt    5     19408.223 ±     926.549   ops/s
[info] ArrayOfPeriodsBenchmark.readUPickle:·gc.alloc.rate                                                  128  thrpt    5       592.242 ±      30.829  MB/sec
[info] ArrayOfPeriodsBenchmark.readUPickle:·gc.alloc.rate.norm                                             128  thrpt    5     48037.156 ±    3140.822    B/op
[info] ArrayOfPeriodsBenchmark.readUPickle:·gc.churn.PS_Eden_Space                                         128  thrpt    5         0.626 ±       5.349  MB/sec
[info] ArrayOfPeriodsBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5        51.946 ±     443.666    B/op
[info] ArrayOfPeriodsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space                                     128  thrpt    5       537.768 ±    1157.590  MB/sec
[info] ArrayOfPeriodsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5     43702.001 ±   94110.985    B/op
[info] ArrayOfPeriodsBenchmark.readUPickle:·gc.count                                                       128  thrpt    5         4.000                counts
[info] ArrayOfPeriodsBenchmark.readUPickle:·gc.time                                                        128  thrpt    5         6.000                    ms
[info] ArrayOfPeriodsBenchmark.writeCirce                                                                  128  thrpt    5     47144.903 ±     505.279   ops/s
[info] ArrayOfPeriodsBenchmark.writeCirce:·gc.alloc.rate                                                   128  thrpt    5       862.581 ±      34.333  MB/sec
[info] ArrayOfPeriodsBenchmark.writeCirce:·gc.alloc.rate.norm                                              128  thrpt    5     28798.535 ±    1374.978    B/op
[info] ArrayOfPeriodsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                          128  thrpt    5         0.029 ±       0.166  MB/sec
[info] ArrayOfPeriodsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                     128  thrpt    5         0.975 ±       5.575    B/op
[info] ArrayOfPeriodsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                      128  thrpt    5       809.671 ±    1161.604  MB/sec
[info] ArrayOfPeriodsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5     27052.089 ±   39177.414    B/op
[info] ArrayOfPeriodsBenchmark.writeCirce:·gc.count                                                        128  thrpt    5         6.000                counts
[info] ArrayOfPeriodsBenchmark.writeCirce:·gc.time                                                         128  thrpt    5         7.000                    ms
[info] ArrayOfPeriodsBenchmark.writeJacksonScala                                                           128  thrpt    5     66348.186 ±     432.828   ops/s
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.alloc.rate                                            128  thrpt    5      1098.569 ±      48.397  MB/sec
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                       128  thrpt    5     26061.669 ±    1116.195    B/op
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5         0.025 ±       0.132  MB/sec
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5         0.593 ±       3.125    B/op
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5       944.110 ±    1422.931  MB/sec
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5     22398.652 ±   33773.381    B/op
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.count                                                 128  thrpt    5         7.000                counts
[info] ArrayOfPeriodsBenchmark.writeJacksonScala:·gc.time                                                  128  thrpt    5         7.000                    ms
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala                                                          128  thrpt    5    300308.609 ±    1823.073   ops/s
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.alloc.rate                                           128  thrpt    5       590.093 ±      34.142  MB/sec
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                      128  thrpt    5      3092.802 ±     167.249    B/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5         0.522 ±       4.188  MB/sec
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5         2.738 ±      21.948    B/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5       539.782 ±    1161.923  MB/sec
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5      2827.725 ±    6086.909    B/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.count                                                128  thrpt    5         4.000                counts
[info] ArrayOfPeriodsBenchmark.writeJsoniterScala:·gc.time                                                 128  thrpt    5         6.000                    ms
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc                                                  128  thrpt    5    329229.726 ±    1614.451   ops/s
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                   128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                              128  thrpt    5         0.001 ±       0.001    B/op
[info] ArrayOfPeriodsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                        128  thrpt    5           ≈ 0                counts
[info] ArrayOfPeriodsBenchmark.writePlayJson                                                               128  thrpt    5     63283.279 ±     598.276   ops/s
[info] ArrayOfPeriodsBenchmark.writePlayJson:·gc.alloc.rate                                                128  thrpt    5      1165.037 ±      31.677  MB/sec
[info] ArrayOfPeriodsBenchmark.writePlayJson:·gc.alloc.rate.norm                                           128  thrpt    5     28979.134 ±     906.573    B/op
[info] ArrayOfPeriodsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                       128  thrpt    5         0.012 ±       0.072  MB/sec
[info] ArrayOfPeriodsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5         0.312 ±       1.789    B/op
[info] ArrayOfPeriodsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                   128  thrpt    5      1079.193 ±    1421.256  MB/sec
[info] ArrayOfPeriodsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5     26854.030 ±   35480.159    B/op
[info] ArrayOfPeriodsBenchmark.writePlayJson:·gc.count                                                     128  thrpt    5         8.000                counts
[info] ArrayOfPeriodsBenchmark.writePlayJson:·gc.time                                                      128  thrpt    5         9.000                    ms
[info] ArrayOfPeriodsBenchmark.writeUPickle                                                                128  thrpt    5     16751.817 ±     221.851   ops/s
[info] ArrayOfPeriodsBenchmark.writeUPickle:·gc.alloc.rate                                                 128  thrpt    5       379.315 ±      41.436  MB/sec
[info] ArrayOfPeriodsBenchmark.writeUPickle:·gc.alloc.rate.norm                                            128  thrpt    5     35642.116 ±    4312.526    B/op
[info] ArrayOfPeriodsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space                                        128  thrpt    5         0.566 ±       4.875  MB/sec
[info] ArrayOfPeriodsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5        53.275 ±     458.715    B/op
[info] ArrayOfPeriodsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space                                    128  thrpt    5       371.941 ±    1332.164  MB/sec
[info] ArrayOfPeriodsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5     35020.049 ±  125487.037    B/op
[info] ArrayOfPeriodsBenchmark.writeUPickle:·gc.count                                                      128  thrpt    5         3.000                counts
[info] ArrayOfPeriodsBenchmark.writeUPickle:·gc.time                                                       128  thrpt    5         9.000                    ms
[info] ArrayOfShortsBenchmark.readCirce                                                                    128  thrpt    5    151739.425 ±    5325.548   ops/s
[info] ArrayOfShortsBenchmark.readCirce:·gc.alloc.rate                                                     128  thrpt    5      1919.127 ±      23.330  MB/sec
[info] ArrayOfShortsBenchmark.readCirce:·gc.alloc.rate.norm                                                128  thrpt    5     19905.728 ±     499.534    B/op
[info] ArrayOfShortsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                            128  thrpt    5         0.037 ±       0.105  MB/sec
[info] ArrayOfShortsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                       128  thrpt    5         0.390 ±       1.090    B/op
[info] ArrayOfShortsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                        128  thrpt    5      1888.241 ±    1157.144  MB/sec
[info] ArrayOfShortsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                   128  thrpt    5     19594.882 ±   12240.674    B/op
[info] ArrayOfShortsBenchmark.readCirce:·gc.count                                                          128  thrpt    5        14.000                counts
[info] ArrayOfShortsBenchmark.readCirce:·gc.time                                                           128  thrpt    5        13.000                    ms
[info] ArrayOfShortsBenchmark.readDslJsonJava                                                              128  thrpt    5    752702.900 ±   43096.478   ops/s
[info] ArrayOfShortsBenchmark.readDslJsonJava:·gc.alloc.rate                                               128  thrpt    5       426.775 ±      31.434  MB/sec
[info] ArrayOfShortsBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                          128  thrpt    5       892.555 ±      76.610    B/op
[info] ArrayOfShortsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                                      128  thrpt    5         0.792 ±       6.822  MB/sec
[info] ArrayOfShortsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5         1.685 ±      14.506    B/op
[info] ArrayOfShortsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                                  128  thrpt    5       402.334 ±    1414.262  MB/sec
[info] ArrayOfShortsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5       844.370 ±    2968.665    B/op
[info] ArrayOfShortsBenchmark.readDslJsonJava:·gc.count                                                    128  thrpt    5         3.000                counts
[info] ArrayOfShortsBenchmark.readDslJsonJava:·gc.time                                                     128  thrpt    5         7.000                    ms
[info] ArrayOfShortsBenchmark.readJacksonScala                                                             128  thrpt    5    380589.441 ±   26253.581   ops/s
[info] ArrayOfShortsBenchmark.readJacksonScala:·gc.alloc.rate                                              128  thrpt    5       379.127 ±      30.211  MB/sec
[info] ArrayOfShortsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                         128  thrpt    5      1568.626 ±     190.250    B/op
[info] ArrayOfShortsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                     128  thrpt    5         0.196 ±       1.685  MB/sec
[info] ArrayOfShortsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5         0.802 ±       6.904    B/op
[info] ArrayOfShortsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                 128  thrpt    5       404.273 ±    1421.076  MB/sec
[info] ArrayOfShortsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5      1688.590 ±    5937.158    B/op
[info] ArrayOfShortsBenchmark.readJacksonScala:·gc.count                                                   128  thrpt    5         3.000                counts
[info] ArrayOfShortsBenchmark.readJacksonScala:·gc.time                                                    128  thrpt    5         5.000                    ms
[info] ArrayOfShortsBenchmark.readJsoniterScala                                                            128  thrpt    5   1081625.875 ±   39120.101   ops/s
[info] ArrayOfShortsBenchmark.readJsoniterScala:·gc.alloc.rate                                             128  thrpt    5       384.871 ±      47.126  MB/sec
[info] ArrayOfShortsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                        128  thrpt    5       560.024 ±      62.772    B/op
[info] ArrayOfShortsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5         0.548 ±       4.692  MB/sec
[info] ArrayOfShortsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5         0.793 ±       6.792    B/op
[info] ArrayOfShortsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5       371.950 ±    1332.197  MB/sec
[info] ArrayOfShortsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5       541.468 ±    1934.740    B/op
[info] ArrayOfShortsBenchmark.readJsoniterScala:·gc.count                                                  128  thrpt    5         3.000                counts
[info] ArrayOfShortsBenchmark.readJsoniterScala:·gc.time                                                   128  thrpt    5         9.000                    ms
[info] ArrayOfShortsBenchmark.readPlayJson                                                                 128  thrpt    5     75016.973 ±    2628.710   ops/s
[info] ArrayOfShortsBenchmark.readPlayJson:·gc.alloc.rate                                                  128  thrpt    5      3019.871 ±     138.533  MB/sec
[info] ArrayOfShortsBenchmark.readPlayJson:·gc.alloc.rate.norm                                             128  thrpt    5     63354.535 ±    2122.409    B/op
[info] ArrayOfShortsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                         128  thrpt    5         0.075 ±       0.091  MB/sec
[info] ArrayOfShortsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5         1.576 ±       1.969    B/op
[info] ArrayOfShortsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                     128  thrpt    5      2849.555 ±    1180.242  MB/sec
[info] ArrayOfShortsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5     59781.169 ±   24647.598    B/op
[info] ArrayOfShortsBenchmark.readPlayJson:·gc.count                                                       128  thrpt    5        21.000                counts
[info] ArrayOfShortsBenchmark.readPlayJson:·gc.time                                                        128  thrpt    5        20.000                    ms
[info] ArrayOfShortsBenchmark.readUPickle                                                                  128  thrpt    5    248068.366 ±   14549.801   ops/s
[info] ArrayOfShortsBenchmark.readUPickle:·gc.alloc.rate                                                   128  thrpt    5      1199.636 ±      50.700  MB/sec
[info] ArrayOfShortsBenchmark.readUPickle:·gc.alloc.rate.norm                                              128  thrpt    5      7611.728 ±     208.206    B/op
[info] ArrayOfShortsBenchmark.readUPickle:·gc.churn.PS_Eden_Space                                          128  thrpt    5         0.033 ±       0.122  MB/sec
[info] ArrayOfShortsBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm                                     128  thrpt    5         0.213 ±       0.776    B/op
[info] ArrayOfShortsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space                                      128  thrpt    5      1077.253 ±    1418.229  MB/sec
[info] ArrayOfShortsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5      6851.140 ±    9195.730    B/op
[info] ArrayOfShortsBenchmark.readUPickle:·gc.count                                                        128  thrpt    5         8.000                counts
[info] ArrayOfShortsBenchmark.readUPickle:·gc.time                                                         128  thrpt    5         8.000                    ms
[info] ArrayOfShortsBenchmark.writeCirce                                                                   128  thrpt    5    251060.279 ±   15718.069   ops/s
[info] ArrayOfShortsBenchmark.writeCirce:·gc.alloc.rate                                                    128  thrpt    5      1175.175 ±      77.936  MB/sec
[info] ArrayOfShortsBenchmark.writeCirce:·gc.alloc.rate.norm                                               128  thrpt    5      7366.539 ±      87.504    B/op
[info] ArrayOfShortsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                           128  thrpt    5         0.046 ±       0.143  MB/sec
[info] ArrayOfShortsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                      128  thrpt    5         0.286 ±       0.891    B/op
[info] ArrayOfShortsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                       128  thrpt    5      1080.395 ±    1424.174  MB/sec
[info] ArrayOfShortsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                  128  thrpt    5      6756.274 ±    8715.418    B/op
[info] ArrayOfShortsBenchmark.writeCirce:·gc.count                                                         128  thrpt    5         8.000                counts
[info] ArrayOfShortsBenchmark.writeCirce:·gc.time                                                          128  thrpt    5         8.000                    ms
[info] ArrayOfShortsBenchmark.writeDslJsonJava                                                             128  thrpt    5   1157889.791 ±   28765.593   ops/s
[info] ArrayOfShortsBenchmark.writeDslJsonJava:·gc.alloc.rate                                              128  thrpt    5       404.725 ±      30.097  MB/sec
[info] ArrayOfShortsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                         128  thrpt    5       550.193 ±      52.376    B/op
[info] ArrayOfShortsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                                     128  thrpt    5         0.795 ±       6.808  MB/sec
[info] ArrayOfShortsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5         1.085 ±       9.295    B/op
[info] ArrayOfShortsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                                 128  thrpt    5       402.288 ±    1414.099  MB/sec
[info] ArrayOfShortsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5       548.824 ±    1929.263    B/op
[info] ArrayOfShortsBenchmark.writeDslJsonJava:·gc.count                                                   128  thrpt    5         3.000                counts
[info] ArrayOfShortsBenchmark.writeDslJsonJava:·gc.time                                                    128  thrpt    5         7.000                    ms
[info] ArrayOfShortsBenchmark.writeJacksonScala                                                            128  thrpt    5    900883.939 ±   18411.466   ops/s
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.alloc.rate                                             128  thrpt    5       539.574 ±      25.728  MB/sec
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                        128  thrpt    5       942.733 ±      56.060    B/op
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5         0.117 ±       0.875  MB/sec
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5         0.205 ±       1.541    B/op
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5       539.189 ±    1160.644  MB/sec
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5       943.225 ±    2030.460    B/op
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.count                                                  128  thrpt    5         4.000                counts
[info] ArrayOfShortsBenchmark.writeJacksonScala:·gc.time                                                   128  thrpt    5         5.000                    ms
[info] ArrayOfShortsBenchmark.writeJsoniterScala                                                           128  thrpt    5   1765422.352 ±   39987.709   ops/s
[info] ArrayOfShortsBenchmark.writeJsoniterScala:·gc.alloc.rate                                            128  thrpt    5       616.623 ±      36.706  MB/sec
[info] ArrayOfShortsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                       128  thrpt    5       549.720 ±      31.466    B/op
[info] ArrayOfShortsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5         0.570 ±       4.822  MB/sec
[info] ArrayOfShortsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5         0.514 ±       4.343    B/op
[info] ArrayOfShortsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5       538.764 ±    1159.731  MB/sec
[info] ArrayOfShortsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5       480.591 ±    1034.615    B/op
[info] ArrayOfShortsBenchmark.writeJsoniterScala:·gc.count                                                 128  thrpt    5         4.000                counts
[info] ArrayOfShortsBenchmark.writeJsoniterScala:·gc.time                                                  128  thrpt    5         5.000                    ms
[info] ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc                                                   128  thrpt    5   1919590.546 ±    4524.121   ops/s
[info] ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                    128  thrpt    5         0.119 ±       0.764  MB/sec
[info] ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                               128  thrpt    5         0.098 ±       0.627    B/op
[info] ArrayOfShortsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                         128  thrpt    5           ≈ 0                counts
[info] ArrayOfShortsBenchmark.writePlayJson                                                                128  thrpt    5     40980.211 ±     656.274   ops/s
[info] ArrayOfShortsBenchmark.writePlayJson:·gc.alloc.rate                                                 128  thrpt    5      1898.029 ±      64.316  MB/sec
[info] ArrayOfShortsBenchmark.writePlayJson:·gc.alloc.rate.norm                                            128  thrpt    5     72904.002 ±    1699.531    B/op
[info] ArrayOfShortsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                        128  thrpt    5         0.042 ±       0.127  MB/sec
[info] ArrayOfShortsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5         1.596 ±       4.860    B/op
[info] ArrayOfShortsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                    128  thrpt    5      1894.020 ±    1161.098  MB/sec
[info] ArrayOfShortsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5     72728.637 ±   44060.369    B/op
[info] ArrayOfShortsBenchmark.writePlayJson:·gc.count                                                      128  thrpt    5        14.000                counts
[info] ArrayOfShortsBenchmark.writePlayJson:·gc.time                                                       128  thrpt    5        15.000                    ms
[info] ArrayOfShortsBenchmark.writeUPickle                                                                 128  thrpt    5    150577.583 ±    2226.100   ops/s
[info] ArrayOfShortsBenchmark.writeUPickle:·gc.alloc.rate                                                  128  thrpt    5       848.322 ±      45.766  MB/sec
[info] ArrayOfShortsBenchmark.writeUPickle:·gc.alloc.rate.norm                                             128  thrpt    5      8867.178 ±     427.181    B/op
[info] ArrayOfShortsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space                                         128  thrpt    5         0.046 ±       0.143  MB/sec
[info] ArrayOfShortsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5         0.479 ±       1.503    B/op
[info] ArrayOfShortsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space                                     128  thrpt    5       941.221 ±    1418.813  MB/sec
[info] ArrayOfShortsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5      9835.238 ±   14786.168    B/op
[info] ArrayOfShortsBenchmark.writeUPickle:·gc.count                                                       128  thrpt    5         7.000                counts
[info] ArrayOfShortsBenchmark.writeUPickle:·gc.time                                                        128  thrpt    5         7.000                    ms
[info] ArrayOfUUIDsBenchmark.readCirce                                                                     128  thrpt    5     38893.329 ±    1417.849   ops/s
[info] ArrayOfUUIDsBenchmark.readCirce:·gc.alloc.rate                                                      128  thrpt    5       748.334 ±      53.750  MB/sec
[info] ArrayOfUUIDsBenchmark.readCirce:·gc.alloc.rate.norm                                                 128  thrpt    5     30279.863 ±    1639.718    B/op
[info] ArrayOfUUIDsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                             128  thrpt    5         0.096 ±       0.625  MB/sec
[info] ArrayOfUUIDsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                        128  thrpt    5         3.888 ±      25.288    B/op
[info] ArrayOfUUIDsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                         128  thrpt    5       807.789 ±    1157.617  MB/sec
[info] ArrayOfUUIDsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                    128  thrpt    5     32686.929 ±   46819.623    B/op
[info] ArrayOfUUIDsBenchmark.readCirce:·gc.count                                                           128  thrpt    5         6.000                counts
[info] ArrayOfUUIDsBenchmark.readCirce:·gc.time                                                            128  thrpt    5         5.000                    ms
[info] ArrayOfUUIDsBenchmark.readJacksonScala                                                              128  thrpt    5     62127.712 ±    1097.972   ops/s
[info] ArrayOfUUIDsBenchmark.readJacksonScala:·gc.alloc.rate                                               128  thrpt    5       671.910 ±      15.794  MB/sec
[info] ArrayOfUUIDsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                          128  thrpt    5     17023.488 ±     216.414    B/op
[info] ArrayOfUUIDsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                      128  thrpt    5         0.021 ±       0.113  MB/sec
[info] ArrayOfUUIDsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5         0.528 ±       2.873    B/op
[info] ArrayOfUUIDsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                  128  thrpt    5       674.025 ±       0.107  MB/sec
[info] ArrayOfUUIDsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5     17077.415 ±     303.646    B/op
[info] ArrayOfUUIDsBenchmark.readJacksonScala:·gc.count                                                    128  thrpt    5         5.000                counts
[info] ArrayOfUUIDsBenchmark.readJacksonScala:·gc.time                                                     128  thrpt    5         5.000                    ms
[info] ArrayOfUUIDsBenchmark.readJsoniterScala                                                             128  thrpt    5    203460.561 ±   10515.763   ops/s
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.alloc.rate                                              128  thrpt    5       686.495 ±      23.532  MB/sec
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                         128  thrpt    5      5310.148 ±     163.707    B/op
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                     128  thrpt    5         0.568 ±       4.760  MB/sec
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5         4.447 ±      37.266    B/op
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                 128  thrpt    5       673.395 ±       2.126  MB/sec
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5      5209.266 ±     283.553    B/op
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.count                                                   128  thrpt    5         5.000                counts
[info] ArrayOfUUIDsBenchmark.readJsoniterScala:·gc.time                                                    128  thrpt    5         7.000                    ms
[info] ArrayOfUUIDsBenchmark.readPlayJson                                                                  128  thrpt    5     23815.993 ±     314.302   ops/s
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.alloc.rate                                                   128  thrpt    5      1216.237 ±      22.870  MB/sec
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.alloc.rate.norm                                              128  thrpt    5     80374.616 ±    1740.129    B/op
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                          128  thrpt    5         0.029 ±       0.122  MB/sec
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                     128  thrpt    5         1.931 ±       8.084    B/op
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                      128  thrpt    5      1214.668 ±    1161.484  MB/sec
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5     80282.311 ±   76911.894    B/op
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.count                                                        128  thrpt    5         9.000                counts
[info] ArrayOfUUIDsBenchmark.readPlayJson:·gc.time                                                         128  thrpt    5         9.000                    ms
[info] ArrayOfUUIDsBenchmark.readUPickle                                                                   128  thrpt    5     36479.239 ±    1508.038   ops/s
[info] ArrayOfUUIDsBenchmark.readUPickle:·gc.alloc.rate                                                    128  thrpt    5       458.821 ±      46.744  MB/sec
[info] ArrayOfUUIDsBenchmark.readUPickle:·gc.alloc.rate.norm                                               128  thrpt    5     19800.875 ±    2602.380    B/op
[info] ArrayOfUUIDsBenchmark.readUPickle:·gc.churn.PS_Eden_Space                                           128  thrpt    5         0.587 ±       5.009  MB/sec
[info] ArrayOfUUIDsBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm                                      128  thrpt    5        25.814 ±     220.338    B/op
[info] ArrayOfUUIDsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space                                       128  thrpt    5       403.955 ±    1419.958  MB/sec
[info] ArrayOfUUIDsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm                                  128  thrpt    5     17494.322 ±   61504.962    B/op
[info] ArrayOfUUIDsBenchmark.readUPickle:·gc.count                                                         128  thrpt    5         3.000                counts
[info] ArrayOfUUIDsBenchmark.readUPickle:·gc.time                                                          128  thrpt    5         8.000                    ms
[info] ArrayOfUUIDsBenchmark.writeCirce                                                                    128  thrpt    5     46351.966 ±     839.342   ops/s
[info] ArrayOfUUIDsBenchmark.writeCirce:·gc.alloc.rate                                                     128  thrpt    5       707.539 ±      18.071  MB/sec
[info] ArrayOfUUIDsBenchmark.writeCirce:·gc.alloc.rate.norm                                                128  thrpt    5     24025.217 ±     727.598    B/op
[info] ArrayOfUUIDsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                            128  thrpt    5         0.008 ±       0.044  MB/sec
[info] ArrayOfUUIDsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                       128  thrpt    5         0.282 ±       1.488    B/op
[info] ArrayOfUUIDsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                        128  thrpt    5       674.238 ±       1.054  MB/sec
[info] ArrayOfUUIDsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                   128  thrpt    5     22894.456 ±     406.120    B/op
[info] ArrayOfUUIDsBenchmark.writeCirce:·gc.count                                                          128  thrpt    5         5.000                counts
[info] ArrayOfUUIDsBenchmark.writeCirce:·gc.time                                                           128  thrpt    5         5.000                    ms
[info] ArrayOfUUIDsBenchmark.writeJacksonScala                                                             128  thrpt    5     99890.440 ±     626.683   ops/s
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.alloc.rate                                              128  thrpt    5      1403.104 ±      37.555  MB/sec
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                         128  thrpt    5     22109.500 ±     658.734    B/op
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                     128  thrpt    5         0.029 ±       0.091  MB/sec
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5         0.459 ±       1.438    B/op
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                 128  thrpt    5      1350.790 ±       5.948  MB/sec
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5     21285.108 ±     204.539    B/op
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.count                                                   128  thrpt    5        10.000                counts
[info] ArrayOfUUIDsBenchmark.writeJacksonScala:·gc.time                                                    128  thrpt    5        10.000                    ms
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala                                                            128  thrpt    5    178743.032 ±    1862.621   ops/s
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.alloc.rate                                             128  thrpt    5       584.729 ±      35.926  MB/sec
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                        128  thrpt    5      5148.279 ±     309.217    B/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5         0.575 ±       4.770  MB/sec
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5         5.083 ±      42.206    B/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5       538.837 ±    1159.888  MB/sec
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5      4745.519 ±   10215.356    B/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.count                                                  128  thrpt    5         4.000                counts
[info] ArrayOfUUIDsBenchmark.writeJsoniterScala:·gc.time                                                   128  thrpt    5         5.000                    ms
[info] ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc                                                    128  thrpt    5    192461.659 ±    4758.957   ops/s
[info] ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                     128  thrpt    5         0.096 ±       0.790  MB/sec
[info] ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                128  thrpt    5         0.783 ±       6.448    B/op
[info] ArrayOfUUIDsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                          128  thrpt    5           ≈ 0                counts
[info] ArrayOfUUIDsBenchmark.writePlayJson                                                                 128  thrpt    5     65314.327 ±    6339.233   ops/s
[info] ArrayOfUUIDsBenchmark.writePlayJson:·gc.alloc.rate                                                  128  thrpt    5       991.122 ±      81.229  MB/sec
[info] ArrayOfUUIDsBenchmark.writePlayJson:·gc.alloc.rate.norm                                             128  thrpt    5     23887.545 ±     828.825    B/op
[info] ArrayOfUUIDsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                         128  thrpt    5         0.025 ±       0.132  MB/sec
[info] ArrayOfUUIDsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5         0.595 ±       3.135    B/op
[info] ArrayOfUUIDsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                     128  thrpt    5       944.333 ±    1421.484  MB/sec
[info] ArrayOfUUIDsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5     22883.340 ±   35968.401    B/op
[info] ArrayOfUUIDsBenchmark.writePlayJson:·gc.count                                                       128  thrpt    5         7.000                counts
[info] ArrayOfUUIDsBenchmark.writePlayJson:·gc.time                                                        128  thrpt    5         7.000                    ms
[info] ArrayOfUUIDsBenchmark.writeUPickle                                                                  128  thrpt    5     11048.157 ±     178.037   ops/s
[info] ArrayOfUUIDsBenchmark.writeUPickle:·gc.alloc.rate                                                   128  thrpt    5       282.217 ±      27.596  MB/sec
[info] ArrayOfUUIDsBenchmark.writeUPickle:·gc.alloc.rate.norm                                              128  thrpt    5     40203.902 ±    4454.754    B/op
[info] ArrayOfUUIDsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space                                          128  thrpt    5         0.004 ±       0.036  MB/sec
[info] ArrayOfUUIDsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm                                     128  thrpt    5         0.593 ±       5.106    B/op
[info] ArrayOfUUIDsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space                                      128  thrpt    5       339.490 ±    1220.310  MB/sec
[info] ArrayOfUUIDsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5     48493.066 ±  174504.468    B/op
[info] ArrayOfUUIDsBenchmark.writeUPickle:·gc.count                                                        128  thrpt    5         3.000                counts
[info] ArrayOfUUIDsBenchmark.writeUPickle:·gc.time                                                         128  thrpt    5         7.000                    ms
[info] ArrayOfYearMonthsBenchmark.readCirce                                                                128  thrpt    5     23731.431 ±     948.426   ops/s
[info] ArrayOfYearMonthsBenchmark.readCirce:·gc.alloc.rate                                                 128  thrpt    5      1238.911 ±      68.099  MB/sec
[info] ArrayOfYearMonthsBenchmark.readCirce:·gc.alloc.rate.norm                                            128  thrpt    5     82165.020 ±    2001.625    B/op
[info] ArrayOfYearMonthsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                        128  thrpt    5         0.017 ±       0.036  MB/sec
[info] ArrayOfYearMonthsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5         1.104 ±       2.377    B/op
[info] ArrayOfYearMonthsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                    128  thrpt    5      1215.829 ±    1161.080  MB/sec
[info] ArrayOfYearMonthsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5     80626.819 ±   76890.686    B/op
[info] ArrayOfYearMonthsBenchmark.readCirce:·gc.count                                                      128  thrpt    5         9.000                counts
[info] ArrayOfYearMonthsBenchmark.readCirce:·gc.time                                                       128  thrpt    5         7.000                    ms
[info] ArrayOfYearMonthsBenchmark.readJacksonScala                                                         128  thrpt    5     26534.468 ±    1652.253   ops/s
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.alloc.rate                                          128  thrpt    5      1071.122 ±      91.263  MB/sec
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                     128  thrpt    5     63533.577 ±    2330.322    B/op
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5         0.037 ±       0.215  MB/sec
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5         2.208 ±      12.673    B/op
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5      1078.094 ±    1420.943  MB/sec
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5     63797.058 ±   82274.699    B/op
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.count                                               128  thrpt    5         8.000                counts
[info] ArrayOfYearMonthsBenchmark.readJacksonScala:·gc.time                                                128  thrpt    5         9.000                    ms
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala                                                        128  thrpt    5    539250.459 ±    2192.213   ops/s
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.alloc.rate                                         128  thrpt    5      1446.781 ±      39.885  MB/sec
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                    128  thrpt    5      4223.001 ±     124.019    B/op
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                128  thrpt    5         0.033 ±       0.122  MB/sec
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5         0.097 ±       0.355    B/op
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5      1483.989 ±    1158.474  MB/sec
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5      4331.652 ±    3383.178    B/op
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.count                                              128  thrpt    5        11.000                counts
[info] ArrayOfYearMonthsBenchmark.readJsoniterScala:·gc.time                                               128  thrpt    5        10.000                    ms
[info] ArrayOfYearMonthsBenchmark.readPlayJson                                                             128  thrpt    5     22963.525 ±    1271.825   ops/s
[info] ArrayOfYearMonthsBenchmark.readPlayJson:·gc.alloc.rate                                              128  thrpt    5      1709.064 ±      49.023  MB/sec
[info] ArrayOfYearMonthsBenchmark.readPlayJson:·gc.alloc.rate.norm                                         128  thrpt    5    117146.834 ±    4045.758    B/op
[info] ArrayOfYearMonthsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                     128  thrpt    5         0.029 ±       0.091  MB/sec
[info] ArrayOfYearMonthsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5         1.992 ±       6.171    B/op
[info] ArrayOfYearMonthsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                 128  thrpt    5      1756.026 ±    1424.451  MB/sec
[info] ArrayOfYearMonthsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5    120557.518 ±  101684.710    B/op
[info] ArrayOfYearMonthsBenchmark.readPlayJson:·gc.count                                                   128  thrpt    5        13.000                counts
[info] ArrayOfYearMonthsBenchmark.readPlayJson:·gc.time                                                    128  thrpt    5        11.000                    ms
[info] ArrayOfYearMonthsBenchmark.readUPickle                                                              128  thrpt    5     27212.763 ±     273.089   ops/s
[info] ArrayOfYearMonthsBenchmark.readUPickle:·gc.alloc.rate                                               128  thrpt    5      1228.236 ±      35.120  MB/sec
[info] ArrayOfYearMonthsBenchmark.readUPickle:·gc.alloc.rate.norm                                          128  thrpt    5     71043.259 ±    1381.763    B/op
[info] ArrayOfYearMonthsBenchmark.readUPickle:·gc.churn.PS_Eden_Space                                      128  thrpt    5         0.025 ±       0.105  MB/sec
[info] ArrayOfYearMonthsBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5         1.446 ±       6.054    B/op
[info] ArrayOfYearMonthsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space                                  128  thrpt    5      1209.277 ±    1157.889  MB/sec
[info] ArrayOfYearMonthsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5     69933.971 ±   66802.987    B/op
[info] ArrayOfYearMonthsBenchmark.readUPickle:·gc.count                                                    128  thrpt    5         9.000                counts
[info] ArrayOfYearMonthsBenchmark.readUPickle:·gc.time                                                     128  thrpt    5         9.000                    ms
[info] ArrayOfYearMonthsBenchmark.writeCirce                                                               128  thrpt    5     70983.108 ±    3191.090   ops/s
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.alloc.rate                                                128  thrpt    5      1400.392 ±      78.796  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.alloc.rate.norm                                           128  thrpt    5     31052.479 ±     825.154    B/op
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                       128  thrpt    5         0.025 ±       0.067  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5         0.554 ±       1.483    B/op
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                   128  thrpt    5      1351.858 ±       6.644  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5     29979.614 ±    1239.321    B/op
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.count                                                     128  thrpt    5        10.000                counts
[info] ArrayOfYearMonthsBenchmark.writeCirce:·gc.time                                                      128  thrpt    5         9.000                    ms
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala                                                        128  thrpt    5    132283.441 ±    4313.309   ops/s
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.alloc.rate                                         128  thrpt    5      1294.556 ±      53.687  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                    128  thrpt    5     15404.182 ±     621.840    B/op
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                128  thrpt    5         0.046 ±       0.215  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5         0.547 ±       2.562    B/op
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5      1214.411 ±    1160.274  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5     14456.033 ±   13881.094    B/op
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.count                                              128  thrpt    5         9.000                counts
[info] ArrayOfYearMonthsBenchmark.writeJacksonScala:·gc.time                                               128  thrpt    5         9.000                    ms
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala                                                       128  thrpt    5   1056428.386 ±   26493.446   ops/s
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.alloc.rate                                        128  thrpt    5       901.650 ±      48.211  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                   128  thrpt    5      1343.446 ±      55.361    B/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                               128  thrpt    5         0.042 ±       0.127  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5         0.062 ±       0.190    B/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5       942.187 ±    1418.941  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5      1403.961 ±    2115.305    B/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.count                                             128  thrpt    5         7.000                counts
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScala:·gc.time                                              128  thrpt    5         7.000                    ms
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc                                               128  thrpt    5   1182850.987 ±    4140.560   ops/s
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                128  thrpt    5         0.021 ±       0.179  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                           128  thrpt    5         0.028 ±       0.238    B/op
[info] ArrayOfYearMonthsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                     128  thrpt    5           ≈ 0                counts
[info] ArrayOfYearMonthsBenchmark.writePlayJson                                                            128  thrpt    5    135748.293 ±    1039.292   ops/s
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.alloc.rate                                             128  thrpt    5      1298.523 ±      43.248  MB/sec
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.alloc.rate.norm                                        128  thrpt    5     15056.761 ±     544.086    B/op
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                    128  thrpt    5         0.021 ±       0.080  MB/sec
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5         0.242 ±       0.931    B/op
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                128  thrpt    5      1215.038 ±    1162.485  MB/sec
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5     14092.435 ±   13528.221    B/op
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.count                                                  128  thrpt    5         9.000                counts
[info] ArrayOfYearMonthsBenchmark.writePlayJson:·gc.time                                                   128  thrpt    5        10.000                    ms
[info] ArrayOfYearMonthsBenchmark.writeUPickle                                                             128  thrpt    5     39095.380 ±    1847.035   ops/s
[info] ArrayOfYearMonthsBenchmark.writeUPickle:·gc.alloc.rate                                              128  thrpt    5       528.162 ±      23.834  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeUPickle:·gc.alloc.rate.norm                                         128  thrpt    5     21266.496 ±    1101.339    B/op
[info] ArrayOfYearMonthsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space                                     128  thrpt    5         0.012 ±       0.072  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5         0.505 ±       2.885    B/op
[info] ArrayOfYearMonthsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space                                 128  thrpt    5       538.286 ±    1158.701  MB/sec
[info] ArrayOfYearMonthsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5     21712.808 ±   46754.605    B/op
[info] ArrayOfYearMonthsBenchmark.writeUPickle:·gc.count                                                   128  thrpt    5         4.000                counts
[info] ArrayOfYearMonthsBenchmark.writeUPickle:·gc.time                                                    128  thrpt    5         4.000                    ms
[info] ArrayOfYearsBenchmark.readJacksonScala                                                              128  thrpt    5     39010.285 ±     734.466   ops/s
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.alloc.rate                                               128  thrpt    5      1442.533 ±      26.060  MB/sec
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                          128  thrpt    5     58207.030 ±    1574.991    B/op
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                      128  thrpt    5         0.050 ±       0.122  MB/sec
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5         2.016 ±       4.898    B/op
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                  128  thrpt    5      1485.290 ±    1159.267  MB/sec
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5     59936.608 ±   46919.858    B/op
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.count                                                    128  thrpt    5        11.000                counts
[info] ArrayOfYearsBenchmark.readJacksonScala:·gc.time                                                     128  thrpt    5        10.000                    ms
[info] ArrayOfYearsBenchmark.readJsoniterScala                                                             128  thrpt    5    724805.949 ±   47675.697   ops/s
[info] ArrayOfYearsBenchmark.readJsoniterScala:·gc.alloc.rate                                              128  thrpt    5      1459.147 ±      75.258  MB/sec
[info] ArrayOfYearsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                         128  thrpt    5      3168.781 ±      89.219    B/op
[info] ArrayOfYearsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                     128  thrpt    5         0.046 ±       0.200  MB/sec
[info] ArrayOfYearsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5         0.099 ±       0.431    B/op
[info] ArrayOfYearsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                 128  thrpt    5      1347.664 ±       7.235  MB/sec
[info] ArrayOfYearsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5      2927.219 ±     209.098    B/op
[info] ArrayOfYearsBenchmark.readJsoniterScala:·gc.count                                                   128  thrpt    5        10.000                counts
[info] ArrayOfYearsBenchmark.readJsoniterScala:·gc.time                                                    128  thrpt    5        10.000                    ms
[info] ArrayOfYearsBenchmark.readPlayJson                                                                  128  thrpt    5     29639.086 ±     117.906   ops/s
[info] ArrayOfYearsBenchmark.readPlayJson:·gc.alloc.rate                                                   128  thrpt    5      2102.491 ±      47.367  MB/sec
[info] ArrayOfYearsBenchmark.readPlayJson:·gc.alloc.rate.norm                                              128  thrpt    5    111664.493 ±    2338.356    B/op
[info] ArrayOfYearsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                          128  thrpt    5         0.058 ±       0.036  MB/sec
[info] ArrayOfYearsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                     128  thrpt    5         3.095 ±       1.907    B/op
[info] ArrayOfYearsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                      128  thrpt    5      2029.229 ±      15.571  MB/sec
[info] ArrayOfYearsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5    107773.633 ±     711.711    B/op
[info] ArrayOfYearsBenchmark.readPlayJson:·gc.count                                                        128  thrpt    5        15.000                counts
[info] ArrayOfYearsBenchmark.readPlayJson:·gc.time                                                         128  thrpt    5        15.000                    ms
[info] ArrayOfYearsBenchmark.readUPickle                                                                   128  thrpt    5     40036.699 ±    1233.277   ops/s
[info] ArrayOfYearsBenchmark.readUPickle:·gc.alloc.rate                                                    128  thrpt    5      1678.590 ±      28.193  MB/sec
[info] ArrayOfYearsBenchmark.readUPickle:·gc.alloc.rate.norm                                               128  thrpt    5     65988.589 ±    2149.730    B/op
[info] ArrayOfYearsBenchmark.readUPickle:·gc.churn.PS_Eden_Space                                           128  thrpt    5         0.058 ±       0.154  MB/sec
[info] ArrayOfYearsBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm                                      128  thrpt    5         2.291 ±       6.047    B/op
[info] ArrayOfYearsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space                                       128  thrpt    5      1755.527 ±    1423.005  MB/sec
[info] ArrayOfYearsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm                                  128  thrpt    5     69051.293 ±   56788.320    B/op
[info] ArrayOfYearsBenchmark.readUPickle:·gc.count                                                         128  thrpt    5        13.000                counts
[info] ArrayOfYearsBenchmark.readUPickle:·gc.time                                                          128  thrpt    5        12.000                    ms
[info] ArrayOfYearsBenchmark.writeJacksonScala                                                             128  thrpt    5    267780.419 ±    1368.930   ops/s
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.alloc.rate                                              128  thrpt    5      1300.326 ±      30.419  MB/sec
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                         128  thrpt    5      7643.847 ±     169.453    B/op
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                     128  thrpt    5         0.046 ±       0.132  MB/sec
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5         0.269 ±       0.774    B/op
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                 128  thrpt    5      1215.509 ±    1162.792  MB/sec
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5      7145.780 ±    6842.012    B/op
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.count                                                   128  thrpt    5         9.000                counts
[info] ArrayOfYearsBenchmark.writeJacksonScala:·gc.time                                                    128  thrpt    5         9.000                    ms
[info] ArrayOfYearsBenchmark.writeJsoniterScala                                                            128  thrpt    5   1459936.623 ±   76662.097   ops/s
[info] ArrayOfYearsBenchmark.writeJsoniterScala:·gc.alloc.rate                                             128  thrpt    5       876.655 ±      29.290  MB/sec
[info] ArrayOfYearsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                        128  thrpt    5       945.220 ±      59.296    B/op
[info] ArrayOfYearsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5         0.033 ±       0.209  MB/sec
[info] ArrayOfYearsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5         0.037 ±       0.231    B/op
[info] ArrayOfYearsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5       807.467 ±    1158.357  MB/sec
[info] ArrayOfYearsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5       874.054 ±    1315.518    B/op
[info] ArrayOfYearsBenchmark.writeJsoniterScala:·gc.count                                                  128  thrpt    5         6.000                counts
[info] ArrayOfYearsBenchmark.writeJsoniterScala:·gc.time                                                   128  thrpt    5         5.000                    ms
[info] ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc                                                    128  thrpt    5   1631717.167 ±    2294.327   ops/s
[info] ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                     128  thrpt    5         0.012 ±       0.101  MB/sec
[info] ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                128  thrpt    5         0.012 ±       0.098    B/op
[info] ArrayOfYearsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                          128  thrpt    5           ≈ 0                counts
[info] ArrayOfYearsBenchmark.writePlayJson                                                                 128  thrpt    5    220678.811 ±   15936.646   ops/s
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.alloc.rate                                                  128  thrpt    5      1464.120 ±      97.078  MB/sec
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.alloc.rate.norm                                             128  thrpt    5     10442.041 ±     224.827    B/op
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                         128  thrpt    5         0.033 ±       0.091  MB/sec
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5         0.239 ±       0.664    B/op
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                     128  thrpt    5      1350.939 ±       5.179  MB/sec
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5      9637.112 ±     668.166    B/op
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.count                                                       128  thrpt    5        10.000                counts
[info] ArrayOfYearsBenchmark.writePlayJson:·gc.time                                                        128  thrpt    5        10.000                    ms
[info] ArrayOfYearsBenchmark.writeUPickle                                                                  128  thrpt    5     58318.197 ±     633.600   ops/s
[info] ArrayOfYearsBenchmark.writeUPickle:·gc.alloc.rate                                                   128  thrpt    5       396.136 ±      28.787  MB/sec
[info] ArrayOfYearsBenchmark.writeUPickle:·gc.alloc.rate.norm                                              128  thrpt    5     10692.307 ±     884.170    B/op
[info] ArrayOfYearsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space                                          128  thrpt    5         0.602 ±       5.179  MB/sec
[info] ArrayOfYearsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm                                     128  thrpt    5        16.279 ±     140.165    B/op
[info] ArrayOfYearsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space                                      128  thrpt    5       269.351 ±    1420.210  MB/sec
[info] ArrayOfYearsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5      7291.558 ±   38446.282    B/op
[info] ArrayOfYearsBenchmark.writeUPickle:·gc.count                                                        128  thrpt    5         2.000                counts
[info] ArrayOfYearsBenchmark.writeUPickle:·gc.time                                                         128  thrpt    5         6.000                    ms
[info] ArrayOfZoneIdsBenchmark.readCirce                                                                   128  thrpt    5     59073.980 ±     587.375   ops/s
[info] ArrayOfZoneIdsBenchmark.readCirce:·gc.alloc.rate                                                    128  thrpt    5      1157.963 ±      34.598  MB/sec
[info] ArrayOfZoneIdsBenchmark.readCirce:·gc.alloc.rate.norm                                               128  thrpt    5     30851.308 ±     909.572    B/op
[info] ArrayOfZoneIdsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                           128  thrpt    5         0.033 ±       0.201  MB/sec
[info] ArrayOfZoneIdsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                      128  thrpt    5         0.885 ±       5.345    B/op
[info] ArrayOfZoneIdsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                       128  thrpt    5      1211.972 ±    1160.218  MB/sec
[info] ArrayOfZoneIdsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                  128  thrpt    5     32290.224 ±   30911.612    B/op
[info] ArrayOfZoneIdsBenchmark.readCirce:·gc.count                                                         128  thrpt    5         9.000                counts
[info] ArrayOfZoneIdsBenchmark.readCirce:·gc.time                                                          128  thrpt    5         9.000                    ms
[info] ArrayOfZoneIdsBenchmark.readJacksonScala                                                            128  thrpt    5     58345.988 ±    1474.393   ops/s
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.alloc.rate                                             128  thrpt    5       693.933 ±      19.752  MB/sec
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                        128  thrpt    5     18721.701 ±     351.498    B/op
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5         0.012 ±       0.072  MB/sec
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5         0.337 ±       1.929    B/op
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5       673.417 ±       0.531  MB/sec
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5     18168.738 ±     453.095    B/op
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.count                                                  128  thrpt    5         5.000                counts
[info] ArrayOfZoneIdsBenchmark.readJacksonScala:·gc.time                                                   128  thrpt    5         6.000                    ms
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala                                                           128  thrpt    5     68423.876 ±     805.465   ops/s
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.alloc.rate                                            128  thrpt    5       764.457 ±      37.001  MB/sec
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                       128  thrpt    5     17586.619 ±     961.951    B/op
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5         0.012 ±       0.072  MB/sec
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5         0.288 ±       1.655    B/op
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5       805.777 ±    1154.556  MB/sec
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5     18549.922 ±   26812.133    B/op
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.count                                                 128  thrpt    5         6.000                counts
[info] ArrayOfZoneIdsBenchmark.readJsoniterScala:·gc.time                                                  128  thrpt    5         6.000                    ms
[info] ArrayOfZoneIdsBenchmark.readPlayJson                                                                128  thrpt    5     36471.163 ±     575.399   ops/s
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.alloc.rate                                                 128  thrpt    5      1658.302 ±      31.771  MB/sec
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.alloc.rate.norm                                            128  thrpt    5     71565.607 ±    1590.772    B/op
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                        128  thrpt    5         0.071 ±       0.072  MB/sec
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5         3.054 ±       3.097    B/op
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                    128  thrpt    5      1621.077 ±    1424.461  MB/sec
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5     69964.040 ±   61588.850    B/op
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.count                                                      128  thrpt    5        12.000                counts
[info] ArrayOfZoneIdsBenchmark.readPlayJson:·gc.time                                                       128  thrpt    5        12.000                    ms
[info] ArrayOfZoneIdsBenchmark.readUPickle                                                                 128  thrpt    5     65415.030 ±    1735.990   ops/s
[info] ArrayOfZoneIdsBenchmark.readUPickle:·gc.alloc.rate                                                  128  thrpt    5       899.567 ±      59.576  MB/sec
[info] ArrayOfZoneIdsBenchmark.readUPickle:·gc.alloc.rate.norm                                             128  thrpt    5     21644.075 ±    1558.314    B/op
[info] ArrayOfZoneIdsBenchmark.readUPickle:·gc.churn.PS_Eden_Space                                         128  thrpt    5         0.029 ±       0.134  MB/sec
[info] ArrayOfZoneIdsBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5         0.702 ±       3.216    B/op
[info] ArrayOfZoneIdsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space                                     128  thrpt    5       941.642 ±    1418.551  MB/sec
[info] ArrayOfZoneIdsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5     22661.235 ±   34202.889    B/op
[info] ArrayOfZoneIdsBenchmark.readUPickle:·gc.count                                                       128  thrpt    5         7.000                counts
[info] ArrayOfZoneIdsBenchmark.readUPickle:·gc.time                                                        128  thrpt    5         6.000                    ms
[info] ArrayOfZoneIdsBenchmark.writeCirce                                                                  128  thrpt    5    115122.308 ±    1810.749   ops/s
[info] ArrayOfZoneIdsBenchmark.writeCirce:·gc.alloc.rate                                                   128  thrpt    5       523.235 ±      29.252  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeCirce:·gc.alloc.rate.norm                                              128  thrpt    5      7153.710 ±     379.263    B/op
[info] ArrayOfZoneIdsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                          128  thrpt    5         0.171 ±       1.339  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                     128  thrpt    5         2.340 ±      18.379    B/op
[info] ArrayOfZoneIdsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                      128  thrpt    5       539.124 ±    1160.507  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5      7366.351 ±   15857.127    B/op
[info] ArrayOfZoneIdsBenchmark.writeCirce:·gc.count                                                        128  thrpt    5         4.000                counts
[info] ArrayOfZoneIdsBenchmark.writeCirce:·gc.time                                                         128  thrpt    5         5.000                    ms
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala                                                           128  thrpt    5    236937.546 ±   12438.885   ops/s
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.alloc.rate                                            128  thrpt    5       358.949 ±      31.960  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                       128  thrpt    5      2385.016 ±     257.532    B/op
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5         0.167 ±       1.434  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5         1.105 ±       9.516    B/op
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5       269.357 ±    1420.244  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5      1802.342 ±    9503.755    B/op
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.count                                                 128  thrpt    5         2.000                counts
[info] ArrayOfZoneIdsBenchmark.writeJacksonScala:·gc.time                                                  128  thrpt    5         3.000                    ms
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala                                                          128  thrpt    5    741551.733 ±    6447.730   ops/s
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.alloc.rate                                           128  thrpt    5       947.451 ±      41.468  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                      128  thrpt    5      2011.010 ±      92.622    B/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5         0.037 ±       0.200  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5         0.080 ±       0.424    B/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5       942.257 ±    1418.750  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5      2000.664 ±    3021.011    B/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.count                                                128  thrpt    5         7.000                counts
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScala:·gc.time                                                 128  thrpt    5         7.000                    ms
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc                                                  128  thrpt    5    760443.292 ±    6481.855   ops/s
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                   128  thrpt    5         0.193 ±       1.660  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                              128  thrpt    5         0.400 ±       3.442    B/op
[info] ArrayOfZoneIdsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                        128  thrpt    5           ≈ 0                counts
[info] ArrayOfZoneIdsBenchmark.writePlayJson                                                               128  thrpt    5    185858.184 ±    3049.016   ops/s
[info] ArrayOfZoneIdsBenchmark.writePlayJson:·gc.alloc.rate                                                128  thrpt    5       618.231 ±      20.229  MB/sec
[info] ArrayOfZoneIdsBenchmark.writePlayJson:·gc.alloc.rate.norm                                           128  thrpt    5      5235.974 ±     131.422    B/op
[info] ArrayOfZoneIdsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                       128  thrpt    5         0.208 ±       1.615  MB/sec
[info] ArrayOfZoneIdsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5         1.771 ±      13.752    B/op
[info] ArrayOfZoneIdsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                   128  thrpt    5       673.291 ±       0.650  MB/sec
[info] ArrayOfZoneIdsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5      5702.401 ±      90.466    B/op
[info] ArrayOfZoneIdsBenchmark.writePlayJson:·gc.count                                                     128  thrpt    5         5.000                counts
[info] ArrayOfZoneIdsBenchmark.writePlayJson:·gc.time                                                      128  thrpt    5         5.000                    ms
[info] ArrayOfZoneIdsBenchmark.writeUPickle                                                                128  thrpt    5     29631.260 ±    2558.059   ops/s
[info] ArrayOfZoneIdsBenchmark.writeUPickle:·gc.alloc.rate                                                 128  thrpt    5       171.588 ±      25.790  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeUPickle:·gc.alloc.rate.norm                                            128  thrpt    5      9119.052 ±    1638.272    B/op
[info] ArrayOfZoneIdsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space                                    128  thrpt    5       204.610 ±    1078.850  MB/sec
[info] ArrayOfZoneIdsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5     11069.779 ±   58391.505    B/op
[info] ArrayOfZoneIdsBenchmark.writeUPickle:·gc.count                                                      128  thrpt    5         2.000                counts
[info] ArrayOfZoneIdsBenchmark.writeUPickle:·gc.time                                                       128  thrpt    5         5.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.readCirce                                                               128  thrpt    5    115965.065 ±    6228.743   ops/s
[info] ArrayOfZoneOffsetsBenchmark.readCirce:·gc.alloc.rate                                                128  thrpt    5      1317.649 ±      75.862  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readCirce:·gc.alloc.rate.norm                                           128  thrpt    5     17884.058 ±     148.839    B/op
[info] ArrayOfZoneOffsetsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                       128  thrpt    5         0.021 ±       0.113  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5         0.281 ±       1.524    B/op
[info] ArrayOfZoneOffsetsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                   128  thrpt    5      1216.281 ±    1162.157  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5     16471.961 ±   15281.184    B/op
[info] ArrayOfZoneOffsetsBenchmark.readCirce:·gc.count                                                     128  thrpt    5         9.000                counts
[info] ArrayOfZoneOffsetsBenchmark.readCirce:·gc.time                                                      128  thrpt    5         9.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala                                                        128  thrpt    5    155272.866 ±     977.273   ops/s
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.alloc.rate                                         128  thrpt    5       842.694 ±      48.580  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                    128  thrpt    5      8542.438 ±     523.586    B/op
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                128  thrpt    5         0.017 ±       0.105  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5         0.169 ±       1.061    B/op
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5       809.402 ±    1162.460  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5      8206.976 ±   11824.578    B/op
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.count                                              128  thrpt    5         6.000                counts
[info] ArrayOfZoneOffsetsBenchmark.readJacksonScala:·gc.time                                               128  thrpt    5         5.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala                                                       128  thrpt    5    446204.154 ±   16307.016   ops/s
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.alloc.rate                                        128  thrpt    5       889.135 ±      34.600  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                   128  thrpt    5      3136.524 ±     127.381    B/op
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                               128  thrpt    5         0.025 ±       0.143  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5         0.089 ±       0.509    B/op
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5       806.670 ±    1156.671  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5      2851.634 ±    4195.616    B/op
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.count                                             128  thrpt    5         6.000                counts
[info] ArrayOfZoneOffsetsBenchmark.readJsoniterScala:·gc.time                                              128  thrpt    5         5.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson                                                            128  thrpt    5     64275.012 ±    2083.804   ops/s
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.alloc.rate                                             128  thrpt    5      2532.711 ±      96.238  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.alloc.rate.norm                                        128  thrpt    5     62008.991 ±    1851.230    B/op
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                    128  thrpt    5         0.046 ±       0.088  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5         1.121 ±       2.168    B/op
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                128  thrpt    5      2438.945 ±    1419.995  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5     59706.905 ±   34542.971    B/op
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.count                                                  128  thrpt    5        18.000                counts
[info] ArrayOfZoneOffsetsBenchmark.readPlayJson:·gc.time                                                   128  thrpt    5        17.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.readUPickle                                                             128  thrpt    5    151750.705 ±    7612.391   ops/s
[info] ArrayOfZoneOffsetsBenchmark.readUPickle:·gc.alloc.rate                                              128  thrpt    5      1086.818 ±      85.731  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readUPickle:·gc.alloc.rate.norm                                         128  thrpt    5     11271.685 ±     438.275    B/op
[info] ArrayOfZoneOffsetsBenchmark.readUPickle:·gc.churn.PS_Eden_Space                                     128  thrpt    5         0.025 ±       0.143  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5         0.258 ±       1.481    B/op
[info] ArrayOfZoneOffsetsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space                                 128  thrpt    5       943.623 ±    1421.481  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5      9770.257 ±   14493.016    B/op
[info] ArrayOfZoneOffsetsBenchmark.readUPickle:·gc.count                                                   128  thrpt    5         7.000                counts
[info] ArrayOfZoneOffsetsBenchmark.readUPickle:·gc.time                                                    128  thrpt    5         6.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.writeCirce                                                              128  thrpt    5    172271.788 ±    4916.623   ops/s
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.alloc.rate                                               128  thrpt    5       608.755 ±      14.391  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.alloc.rate.norm                                          128  thrpt    5      5562.377 ±     185.624    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                      128  thrpt    5         0.204 ±       1.667  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5         1.877 ±      15.345    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                  128  thrpt    5       674.736 ±       0.512  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5      6165.307 ±     175.544    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.count                                                    128  thrpt    5         5.000                counts
[info] ArrayOfZoneOffsetsBenchmark.writeCirce:·gc.time                                                     128  thrpt    5         6.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala                                                       128  thrpt    5    394652.951 ±    8168.455   ops/s
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.alloc.rate                                        128  thrpt    5       400.516 ±      39.056  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                   128  thrpt    5      1597.580 ±     161.455    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                               128  thrpt    5         0.204 ±       1.668  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5         0.819 ±       6.702    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5       404.271 ±    1421.070  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5      1614.067 ±    5673.932    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.count                                             128  thrpt    5         3.000                counts
[info] ArrayOfZoneOffsetsBenchmark.writeJacksonScala:·gc.time                                              128  thrpt    5         5.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala                                                      128  thrpt    5   1063223.123 ±   14404.557   ops/s
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.alloc.rate                                       128  thrpt    5       813.484 ±      32.710  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                  128  thrpt    5      1204.307 ±      55.192    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                              128  thrpt    5         0.033 ±       0.166  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5         0.049 ±       0.247    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5       807.565 ±    1159.768  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5      1196.321 ±    1732.185    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.count                                            128  thrpt    5         6.000                counts
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScala:·gc.time                                             128  thrpt    5         6.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc                                              128  thrpt    5   1129700.579 ±   75651.870   ops/s
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                               128  thrpt    5         0.034 ±       0.293  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                          128  thrpt    5         0.047 ±       0.405    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                    128  thrpt    5           ≈ 0                counts
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson                                                           128  thrpt    5    298048.041 ±   11934.939   ops/s
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.alloc.rate                                            128  thrpt    5       832.982 ±      40.011  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.alloc.rate.norm                                       128  thrpt    5      4399.203 ±     270.712    B/op
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                   128  thrpt    5         0.029 ±       0.166  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5         0.155 ±       0.888    B/op
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                               128  thrpt    5       809.038 ±    1160.515  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5      4280.543 ±    6280.657    B/op
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.count                                                 128  thrpt    5         6.000                counts
[info] ArrayOfZoneOffsetsBenchmark.writePlayJson:·gc.time                                                  128  thrpt    5         7.000                    ms
[info] ArrayOfZoneOffsetsBenchmark.writeUPickle                                                            128  thrpt    5     49784.890 ±     273.891   ops/s
[info] ArrayOfZoneOffsetsBenchmark.writeUPickle:·gc.alloc.rate                                             128  thrpt    5       158.447 ±      18.714  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeUPickle:·gc.alloc.rate.norm                                        128  thrpt    5      5008.822 ±     596.407    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space                                    128  thrpt    5         0.008 ±       0.072  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5         0.263 ±       2.264    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space                                128  thrpt    5       204.631 ±    1078.959  MB/sec
[info] ArrayOfZoneOffsetsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5      6470.350 ±   34116.344    B/op
[info] ArrayOfZoneOffsetsBenchmark.writeUPickle:·gc.count                                                  128  thrpt    5         2.000                counts
[info] ArrayOfZoneOffsetsBenchmark.writeUPickle:·gc.time                                                   128  thrpt    5         5.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.readCirce                                                            128  thrpt    5      4780.956 ±     102.251   ops/s
[info] ArrayOfZonedDateTimesBenchmark.readCirce:·gc.alloc.rate                                             128  thrpt    5       876.747 ±      46.391  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readCirce:·gc.alloc.rate.norm                                        128  thrpt    5    288586.860 ±   13756.975    B/op
[info] ArrayOfZonedDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space                                    128  thrpt    5         0.037 ±       0.191  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5        12.313 ±      62.719    B/op
[info] ArrayOfZonedDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                128  thrpt    5       807.479 ±    1158.499  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5    265709.643 ±  379732.181    B/op
[info] ArrayOfZonedDateTimesBenchmark.readCirce:·gc.count                                                  128  thrpt    5         6.000                counts
[info] ArrayOfZonedDateTimesBenchmark.readCirce:·gc.time                                                   128  thrpt    5         7.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala                                                     128  thrpt    5      4148.942 ±      48.233   ops/s
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.alloc.rate                                      128  thrpt    5       733.399 ±      21.116  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.alloc.rate.norm                                 128  thrpt    5    278213.983 ±    6495.859    B/op
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                             128  thrpt    5         0.033 ±       0.201  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5        12.672 ±      76.709    B/op
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5       671.486 ±       1.256  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5    254730.234 ±    2756.812    B/op
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.count                                           128  thrpt    5         5.000                counts
[info] ArrayOfZonedDateTimesBenchmark.readJacksonScala:·gc.time                                            128  thrpt    5         6.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala                                                    128  thrpt    5     32987.851 ±     346.034   ops/s
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate                                     128  thrpt    5       559.120 ±       7.811  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                128  thrpt    5     26691.164 ±     353.563    B/op
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                            128  thrpt    5         0.008 ±       0.044  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5         0.396 ±       2.090    B/op
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5       666.013 ±       4.244  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5     31794.096 ±     353.028    B/op
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.count                                          128  thrpt    5         5.000                counts
[info] ArrayOfZonedDateTimesBenchmark.readJsoniterScala:·gc.time                                           128  thrpt    5         7.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson                                                         128  thrpt    5      3942.176 ±      11.462   ops/s
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.alloc.rate                                          128  thrpt    5       948.296 ±      44.296  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.alloc.rate.norm                                     128  thrpt    5    378590.419 ±   18095.252    B/op
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                 128  thrpt    5         0.029 ±       0.209  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5        11.639 ±      83.490    B/op
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                             128  thrpt    5       940.286 ±    1415.214  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5    375431.386 ±  565556.879    B/op
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.count                                               128  thrpt    5         7.000                counts
[info] ArrayOfZonedDateTimesBenchmark.readPlayJson:·gc.time                                                128  thrpt    5         7.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.readUPickle                                                          128  thrpt    5      4790.469 ±      29.674   ops/s
[info] ArrayOfZonedDateTimesBenchmark.readUPickle:·gc.alloc.rate                                           128  thrpt    5       843.358 ±      42.063  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readUPickle:·gc.alloc.rate.norm                                      128  thrpt    5    277097.365 ±   14607.323    B/op
[info] ArrayOfZonedDateTimesBenchmark.readUPickle:·gc.churn.PS_Eden_Space                                  128  thrpt    5         0.008 ±       0.044  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5         2.735 ±      14.419    B/op
[info] ArrayOfZonedDateTimesBenchmark.readUPickle:·gc.churn.PS_Survivor_Space                              128  thrpt    5       805.712 ±    1156.584  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5    264787.518 ±  381196.193    B/op
[info] ArrayOfZonedDateTimesBenchmark.readUPickle:·gc.count                                                128  thrpt    5         6.000                counts
[info] ArrayOfZonedDateTimesBenchmark.readUPickle:·gc.time                                                 128  thrpt    5         6.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.writeCirce                                                           128  thrpt    5     13907.413 ±     827.881   ops/s
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.alloc.rate                                            128  thrpt    5       751.699 ±      66.443  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.alloc.rate.norm                                       128  thrpt    5     85077.266 ±    5461.674    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                   128  thrpt    5         0.021 ±       0.098  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5         2.348 ±      11.050    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                               128  thrpt    5       806.187 ±    1156.394  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5     91176.654 ±  129328.049    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.count                                                 128  thrpt    5         6.000                counts
[info] ArrayOfZonedDateTimesBenchmark.writeCirce:·gc.time                                                  128  thrpt    5         5.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala                                                    128  thrpt    5     17048.982 ±     164.386   ops/s
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate                                     128  thrpt    5       844.363 ±      21.420  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                128  thrpt    5     77962.675 ±    2703.391    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                            128  thrpt    5         0.017 ±       0.067  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5         1.537 ±       6.185    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5       805.853 ±    1156.952  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5     74448.990 ±  107656.819    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.count                                          128  thrpt    5         6.000                counts
[info] ArrayOfZonedDateTimesBenchmark.writeJacksonScala:·gc.time                                           128  thrpt    5         6.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala                                                   128  thrpt    5    232546.436 ±   10009.235   ops/s
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate                                    128  thrpt    5       865.035 ±      69.627  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                               128  thrpt    5      5855.337 ±     334.236    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                           128  thrpt    5         0.025 ±       0.132  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5         0.169 ±       0.886    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5       803.081 ±    1152.374  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5      5431.452 ±    7702.178    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.count                                         128  thrpt    5         6.000                counts
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScala:·gc.time                                          128  thrpt    5         5.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc                                           128  thrpt    5    261197.884 ±    3838.480   ops/s
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                            128  thrpt    5         0.026 ±       0.221  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                       128  thrpt    5         0.160 ±       1.338    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeJsoniterScalaPrealloc:·gc.count                                 128  thrpt    5           ≈ 0                counts
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson                                                        128  thrpt    5     15856.822 ±     225.193   ops/s
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.alloc.rate                                         128  thrpt    5       848.827 ±      28.899  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.alloc.rate.norm                                    128  thrpt    5     84254.879 ±    3961.548    B/op
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                128  thrpt    5         0.008 ±       0.044  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5         0.828 ±       4.366    B/op
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                            128  thrpt    5       806.139 ±    1155.992  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5     80097.816 ±  116332.341    B/op
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.count                                              128  thrpt    5         6.000                counts
[info] ArrayOfZonedDateTimesBenchmark.writePlayJson:·gc.time                                               128  thrpt    5         6.000                    ms
[info] ArrayOfZonedDateTimesBenchmark.writeUPickle                                                         128  thrpt    5      7796.688 ±     320.990   ops/s
[info] ArrayOfZonedDateTimesBenchmark.writeUPickle:·gc.alloc.rate                                          128  thrpt    5       630.497 ±      25.634  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeUPickle:·gc.alloc.rate.norm                                     128  thrpt    5    127271.307 ±    1294.423    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeUPickle:·gc.churn.PS_Eden_Space                                 128  thrpt    5         0.924 ±       7.822  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5       190.071 ±    1609.644    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space                             128  thrpt    5       667.395 ±       2.830  MB/sec
[info] ArrayOfZonedDateTimesBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5    134732.824 ±    6235.916    B/op
[info] ArrayOfZonedDateTimesBenchmark.writeUPickle:·gc.count                                               128  thrpt    5         5.000                counts
[info] ArrayOfZonedDateTimesBenchmark.writeUPickle:·gc.time                                                128  thrpt    5         8.000                    ms
[info] BitSetBenchmark.readJsoniterScala                                                                   128  thrpt    5   1359939.563 ±   22696.297   ops/s
[info] BitSetBenchmark.readJsoniterScala:·gc.alloc.rate                                                    128  thrpt    5        58.492 ±      26.553  MB/sec
[info] BitSetBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                               128  thrpt    5        67.722 ±      32.047    B/op
[info] BitSetBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                       128  thrpt    5       102.314 ±     880.952  MB/sec
[info] BitSetBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                                  128  thrpt    5       119.334 ±    1027.502    B/op
[info] BitSetBenchmark.readJsoniterScala:·gc.count                                                         128  thrpt    5         1.000                counts
[info] BitSetBenchmark.readJsoniterScala:·gc.time                                                          128  thrpt    5         3.000                    ms
[info] BitSetBenchmark.readPlayJson                                                                        128  thrpt    5     81836.768 ±    1944.983   ops/s
[info] BitSetBenchmark.readPlayJson:·gc.alloc.rate                                                         128  thrpt    5      3500.237 ±     122.486  MB/sec
[info] BitSetBenchmark.readPlayJson:·gc.alloc.rate.norm                                                    128  thrpt    5     67317.126 ±     945.169    B/op
[info] BitSetBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                                128  thrpt    5         0.071 ±       0.122  MB/sec
[info] BitSetBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                           128  thrpt    5         1.360 ±       2.325    B/op
[info] BitSetBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                            128  thrpt    5      3396.649 ±      23.221  MB/sec
[info] BitSetBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                       128  thrpt    5     65327.588 ±    1505.450    B/op
[info] BitSetBenchmark.readPlayJson:·gc.count                                                              128  thrpt    5        25.000                counts
[info] BitSetBenchmark.readPlayJson:·gc.time                                                               128  thrpt    5        23.000                    ms
[info] BitSetBenchmark.writeJacksonScala                                                                   128  thrpt    5   1664428.478 ±   42994.780   ops/s
[info] BitSetBenchmark.writeJacksonScala:·gc.alloc.rate                                                    128  thrpt    5       897.130 ±      42.610  MB/sec
[info] BitSetBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                               128  thrpt    5       848.419 ±      34.574    B/op
[info] BitSetBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                           128  thrpt    5         0.046 ±       0.143  MB/sec
[info] BitSetBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                      128  thrpt    5         0.043 ±       0.135    B/op
[info] BitSetBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                       128  thrpt    5       943.919 ±    1422.897  MB/sec
[info] BitSetBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                                  128  thrpt    5       892.291 ±    1340.186    B/op
[info] BitSetBenchmark.writeJacksonScala:·gc.count                                                         128  thrpt    5         7.000                counts
[info] BitSetBenchmark.writeJacksonScala:·gc.time                                                          128  thrpt    5         7.000                    ms
[info] BitSetBenchmark.writeJsoniterScala                                                                  128  thrpt    5   2024540.054 ±   70311.784   ops/s
[info] BitSetBenchmark.writeJsoniterScala:·gc.alloc.rate                                                   128  thrpt    5       557.922 ±      26.200  MB/sec
[info] BitSetBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                              128  thrpt    5       433.746 ±      21.081    B/op
[info] BitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                          128  thrpt    5         0.518 ±       4.374  MB/sec
[info] BitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                                     128  thrpt    5         0.401 ±       3.380    B/op
[info] BitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                      128  thrpt    5       539.723 ±    1161.797  MB/sec
[info] BitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5       420.176 ±     904.589    B/op
[info] BitSetBenchmark.writeJsoniterScala:·gc.count                                                        128  thrpt    5         4.000                counts
[info] BitSetBenchmark.writeJsoniterScala:·gc.time                                                         128  thrpt    5         6.000                    ms
[info] BitSetBenchmark.writeJsoniterScalaPrealloc                                                          128  thrpt    5    988965.017 ±   11045.997   ops/s
[info] BitSetBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                           128  thrpt    5        10.254 ±       1.282  MB/sec
[info] BitSetBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                      128  thrpt    5        16.321 ±       2.228    B/op
[info] BitSetBenchmark.writeJsoniterScalaPrealloc:·gc.count                                                128  thrpt    5           ≈ 0                counts
[info] BitSetBenchmark.writePlayJson                                                                       128  thrpt    5     48513.885 ±     448.822   ops/s
[info] BitSetBenchmark.writePlayJson:·gc.alloc.rate                                                        128  thrpt    5      2013.915 ±      55.378  MB/sec
[info] BitSetBenchmark.writePlayJson:·gc.alloc.rate.norm                                                   128  thrpt    5     65336.732 ±    1889.292    B/op
[info] BitSetBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                               128  thrpt    5         0.037 ±       0.088  MB/sec
[info] BitSetBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                          128  thrpt    5         1.216 ±       2.846    B/op
[info] BitSetBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                           128  thrpt    5      1893.861 ±    1162.029  MB/sec
[info] BitSetBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                                      128  thrpt    5     61449.652 ±   37887.913    B/op
[info] BitSetBenchmark.writePlayJson:·gc.count                                                             128  thrpt    5        14.000                counts
[info] BitSetBenchmark.writePlayJson:·gc.time                                                              128  thrpt    5        12.000                    ms
[info] ExtractFieldsBenchmark.readCirce                                                                    N/A  thrpt    5    862602.670 ±   27533.572   ops/s
[info] ExtractFieldsBenchmark.readCirce:·gc.alloc.rate                                                     N/A  thrpt    5      2656.178 ±      62.096  MB/sec
[info] ExtractFieldsBenchmark.readCirce:·gc.alloc.rate.norm                                                N/A  thrpt    5      4846.368 ±     106.621    B/op
[info] ExtractFieldsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                            N/A  thrpt    5         0.054 ±       0.108  MB/sec
[info] ExtractFieldsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                       N/A  thrpt    5         0.099 ±       0.194    B/op
[info] ExtractFieldsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                        N/A  thrpt    5      2569.050 ±    1181.823  MB/sec
[info] ExtractFieldsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                   N/A  thrpt    5      4690.668 ±    2263.848    B/op
[info] ExtractFieldsBenchmark.readCirce:·gc.count                                                          N/A  thrpt    5        19.000                counts
[info] ExtractFieldsBenchmark.readCirce:·gc.time                                                           N/A  thrpt    5        17.000                    ms
[info] ExtractFieldsBenchmark.readDslJsonJava                                                              N/A  thrpt    5   4731649.310 ±  422176.593   ops/s
[info] ExtractFieldsBenchmark.readDslJsonJava:·gc.alloc.rate                                               N/A  thrpt    5       298.873 ±      39.866  MB/sec
[info] ExtractFieldsBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                          N/A  thrpt    5        99.426 ±       9.749    B/op
[info] ExtractFieldsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                                      N/A  thrpt    5         0.820 ±       7.064  MB/sec
[info] ExtractFieldsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                                 N/A  thrpt    5         0.267 ±       2.303    B/op
[info] ExtractFieldsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                                  N/A  thrpt    5       370.568 ±    1326.406  MB/sec
[info] ExtractFieldsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                             N/A  thrpt    5       123.102 ±     438.953    B/op
[info] ExtractFieldsBenchmark.readDslJsonJava:·gc.count                                                    N/A  thrpt    5         3.000                counts
[info] ExtractFieldsBenchmark.readDslJsonJava:·gc.time                                                     N/A  thrpt    5         9.000                    ms
[info] ExtractFieldsBenchmark.readJacksonScala                                                             N/A  thrpt    5    993556.089 ±    4323.196   ops/s
[info] ExtractFieldsBenchmark.readJacksonScala:·gc.alloc.rate                                              N/A  thrpt    5      1156.738 ±      40.122  MB/sec
[info] ExtractFieldsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                         N/A  thrpt    5      1832.459 ±      64.065    B/op
[info] ExtractFieldsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                     N/A  thrpt    5         0.029 ±       0.122  MB/sec
[info] ExtractFieldsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                N/A  thrpt    5         0.046 ±       0.193    B/op
[info] ExtractFieldsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                 N/A  thrpt    5      1079.222 ±    1422.316  MB/sec
[info] ExtractFieldsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                            N/A  thrpt    5      1709.857 ±    2255.607    B/op
[info] ExtractFieldsBenchmark.readJacksonScala:·gc.count                                                   N/A  thrpt    5         8.000                counts
[info] ExtractFieldsBenchmark.readJacksonScala:·gc.time                                                    N/A  thrpt    5         8.000                    ms
[info] ExtractFieldsBenchmark.readJsoniterScala                                                            N/A  thrpt    5   8611425.247 ±  328549.667   ops/s
[info] ExtractFieldsBenchmark.readJsoniterScala:·gc.alloc.rate                                             N/A  thrpt    5       403.058 ±      33.653  MB/sec
[info] ExtractFieldsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                        N/A  thrpt    5        73.667 ±       6.245    B/op
[info] ExtractFieldsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                    N/A  thrpt    5         0.556 ±       4.762  MB/sec
[info] ExtractFieldsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                               N/A  thrpt    5         0.101 ±       0.869    B/op
[info] ExtractFieldsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                N/A  thrpt    5       371.950 ±    1332.174  MB/sec
[info] ExtractFieldsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                           N/A  thrpt    5        68.192 ±     243.640    B/op
[info] ExtractFieldsBenchmark.readJsoniterScala:·gc.count                                                  N/A  thrpt    5         3.000                counts
[info] ExtractFieldsBenchmark.readJsoniterScala:·gc.time                                                   N/A  thrpt    5         8.000                    ms
[info] ExtractFieldsBenchmark.readPlayJson                                                                 N/A  thrpt    5    495458.666 ±   11320.222   ops/s
[info] ExtractFieldsBenchmark.readPlayJson:·gc.alloc.rate                                                  N/A  thrpt    5      2415.340 ±      65.218  MB/sec
[info] ExtractFieldsBenchmark.readPlayJson:·gc.alloc.rate.norm                                             N/A  thrpt    5      7672.699 ±     241.900    B/op
[info] ExtractFieldsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                         N/A  thrpt    5         0.075 ±       0.166  MB/sec
[info] ExtractFieldsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                    N/A  thrpt    5         0.238 ±       0.524    B/op
[info] ExtractFieldsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                     N/A  thrpt    5      2300.956 ±    1428.009  MB/sec
[info] ExtractFieldsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                N/A  thrpt    5      7307.646 ±    4483.070    B/op
[info] ExtractFieldsBenchmark.readPlayJson:·gc.count                                                       N/A  thrpt    5        17.000                counts
[info] ExtractFieldsBenchmark.readPlayJson:·gc.time                                                        N/A  thrpt    5        18.000                    ms
[info] ExtractFieldsBenchmark.readUPickle                                                                  N/A  thrpt    5   1215610.581 ±   29614.232   ops/s
[info] ExtractFieldsBenchmark.readUPickle:·gc.alloc.rate                                                   N/A  thrpt    5      1875.089 ±      44.389  MB/sec
[info] ExtractFieldsBenchmark.readUPickle:·gc.alloc.rate.norm                                              N/A  thrpt    5      2427.874 ±      73.926    B/op
[info] ExtractFieldsBenchmark.readUPickle:·gc.churn.PS_Eden_Space                                          N/A  thrpt    5         0.054 ±       0.193  MB/sec
[info] ExtractFieldsBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm                                     N/A  thrpt    5         0.070 ±       0.250    B/op
[info] ExtractFieldsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space                                      N/A  thrpt    5      1887.311 ±    1165.829  MB/sec
[info] ExtractFieldsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm                                 N/A  thrpt    5      2444.715 ±    1534.280    B/op
[info] ExtractFieldsBenchmark.readUPickle:·gc.count                                                        N/A  thrpt    5        14.000                counts
[info] ExtractFieldsBenchmark.readUPickle:·gc.time                                                         N/A  thrpt    5        14.000                    ms
[info] GeoJSONBenchmark.readCirce                                                                          N/A  thrpt    5      4636.070 ±     112.615   ops/s
[info] GeoJSONBenchmark.readCirce:·gc.alloc.rate                                                           N/A  thrpt    5      2196.319 ±     109.019  MB/sec
[info] GeoJSONBenchmark.readCirce:·gc.alloc.rate.norm                                                      N/A  thrpt    5    745488.740 ±   29717.554    B/op
[info] GeoJSONBenchmark.readCirce:·gc.churn.PS_Eden_Space                                                  N/A  thrpt    5         0.104 ±       0.362  MB/sec
[info] GeoJSONBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                             N/A  thrpt    5        35.310 ±     122.755    B/op
[info] GeoJSONBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                              N/A  thrpt    5      2167.225 ±    1172.359  MB/sec
[info] GeoJSONBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                         N/A  thrpt    5    735478.555 ±  391558.885    B/op
[info] GeoJSONBenchmark.readCirce:·gc.count                                                                N/A  thrpt    5        16.000                counts
[info] GeoJSONBenchmark.readCirce:·gc.time                                                                 N/A  thrpt    5        18.000                    ms
[info] GeoJSONBenchmark.readJacksonScala                                                                   N/A  thrpt    5      6176.699 ±     217.319   ops/s
[info] GeoJSONBenchmark.readJacksonScala:·gc.alloc.rate                                                    N/A  thrpt    5      2347.683 ±      69.982  MB/sec
[info] GeoJSONBenchmark.readJacksonScala:·gc.alloc.rate.norm                                               N/A  thrpt    5    598278.916 ±   14821.595    B/op
[info] GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                           N/A  thrpt    5         0.021 ±       0.057  MB/sec
[info] GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                      N/A  thrpt    5         5.282 ±      14.372    B/op
[info] GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                       N/A  thrpt    5      2164.683 ±    1165.238  MB/sec
[info] GeoJSONBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                                  N/A  thrpt    5    551526.170 ±  291725.473    B/op
[info] GeoJSONBenchmark.readJacksonScala:·gc.count                                                         N/A  thrpt    5        16.000                counts
[info] GeoJSONBenchmark.readJacksonScala:·gc.time                                                          N/A  thrpt    5        16.000                    ms
[info] GeoJSONBenchmark.readJsoniterScala                                                                  N/A  thrpt    5     47311.018 ±     198.640   ops/s
[info] GeoJSONBenchmark.readJsoniterScala:·gc.alloc.rate                                                   N/A  thrpt    5       785.976 ±      46.876  MB/sec
[info] GeoJSONBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                              N/A  thrpt    5     26149.435 ±    1634.657    B/op
[info] GeoJSONBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                          N/A  thrpt    5         0.021 ±       0.098  MB/sec
[info] GeoJSONBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                                     N/A  thrpt    5         0.693 ±       3.270    B/op
[info] GeoJSONBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                      N/A  thrpt    5       806.730 ±    1156.819  MB/sec
[info] GeoJSONBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                                 N/A  thrpt    5     26845.171 ±   38593.524    B/op
[info] GeoJSONBenchmark.readJsoniterScala:·gc.count                                                        N/A  thrpt    5         6.000                counts
[info] GeoJSONBenchmark.readJsoniterScala:·gc.time                                                         N/A  thrpt    5         6.000                    ms
[info] GeoJSONBenchmark.writeCirce                                                                         N/A  thrpt    5      4491.178 ±      88.732   ops/s
[info] GeoJSONBenchmark.writeCirce:·gc.alloc.rate                                                          N/A  thrpt    5       850.069 ±      34.654  MB/sec
[info] GeoJSONBenchmark.writeCirce:·gc.alloc.rate.norm                                                     N/A  thrpt    5    297863.514 ±   10232.617    B/op
[info] GeoJSONBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                                 N/A  thrpt    5         0.029 ±       0.091  MB/sec
[info] GeoJSONBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                            N/A  thrpt    5        10.237 ±      32.275    B/op
[info] GeoJSONBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                             N/A  thrpt    5       809.047 ±    1161.274  MB/sec
[info] GeoJSONBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                        N/A  thrpt    5    283394.639 ±  404980.554    B/op
[info] GeoJSONBenchmark.writeCirce:·gc.count                                                               N/A  thrpt    5         6.000                counts
[info] GeoJSONBenchmark.writeCirce:·gc.time                                                                N/A  thrpt    5         6.000                    ms
[info] GeoJSONBenchmark.writeJacksonScala                                                                  N/A  thrpt    5      4861.349 ±     105.043   ops/s
[info] GeoJSONBenchmark.writeJacksonScala:·gc.alloc.rate                                                   N/A  thrpt    5       587.213 ±      28.094  MB/sec
[info] GeoJSONBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                              N/A  thrpt    5    190113.863 ±    5371.146    B/op
[info] GeoJSONBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                          N/A  thrpt    5         0.389 ±       3.039  MB/sec
[info] GeoJSONBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                     N/A  thrpt    5       127.167 ±     994.421    B/op
[info] GeoJSONBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                      N/A  thrpt    5       673.740 ±       1.690  MB/sec
[info] GeoJSONBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                                 N/A  thrpt    5    218139.249 ±    4959.793    B/op
[info] GeoJSONBenchmark.writeJacksonScala:·gc.count                                                        N/A  thrpt    5         5.000                counts
[info] GeoJSONBenchmark.writeJacksonScala:·gc.time                                                         N/A  thrpt    5         7.000                    ms
[info] GeoJSONBenchmark.writeJsoniterScala                                                                 N/A  thrpt    5      6510.319 ±     207.515   ops/s
[info] GeoJSONBenchmark.writeJsoniterScala:·gc.alloc.rate                                                  N/A  thrpt    5       177.141 ±      12.720  MB/sec
[info] GeoJSONBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                             N/A  thrpt    5     42830.972 ±    4480.913    B/op
[info] GeoJSONBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                     N/A  thrpt    5       102.305 ±     880.874  MB/sec
[info] GeoJSONBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                                N/A  thrpt    5     25083.519 ±  215976.661    B/op
[info] GeoJSONBenchmark.writeJsoniterScala:·gc.count                                                       N/A  thrpt    5         1.000                counts
[info] GeoJSONBenchmark.writeJsoniterScala:·gc.time                                                        N/A  thrpt    5         2.000                    ms
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc                                                         N/A  thrpt    5      6573.263 ±     215.768   ops/s
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                          N/A  thrpt    5       130.745 ±      14.601  MB/sec
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                     N/A  thrpt    5     31307.391 ±    3920.827    B/op
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space                             N/A  thrpt    5       102.320 ±     881.004  MB/sec
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm                        N/A  thrpt    5     24645.949 ±  212209.050    B/op
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.count                                               N/A  thrpt    5         1.000                counts
[info] GeoJSONBenchmark.writeJsoniterScalaPrealloc:·gc.time                                                N/A  thrpt    5         2.000                    ms
[info] GoogleMapsAPIBenchmark.readCirce                                                                    N/A  thrpt    5      7559.613 ±     143.255   ops/s
[info] GoogleMapsAPIBenchmark.readCirce:·gc.alloc.rate                                                     N/A  thrpt    5      1434.664 ±      62.915  MB/sec
[info] GoogleMapsAPIBenchmark.readCirce:·gc.alloc.rate.norm                                                N/A  thrpt    5    298733.225 ±   13670.604    B/op
[info] GoogleMapsAPIBenchmark.readCirce:·gc.churn.PS_Eden_Space                                            N/A  thrpt    5         0.037 ±       0.212  MB/sec
[info] GoogleMapsAPIBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                       N/A  thrpt    5         7.659 ±      44.248    B/op
[info] GoogleMapsAPIBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                        N/A  thrpt    5      1486.835 ±    1159.123  MB/sec
[info] GoogleMapsAPIBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                   N/A  thrpt    5    309569.761 ±  240556.714    B/op
[info] GoogleMapsAPIBenchmark.readCirce:·gc.count                                                          N/A  thrpt    5        11.000                counts
[info] GoogleMapsAPIBenchmark.readCirce:·gc.time                                                           N/A  thrpt    5        11.000                    ms
[info] GoogleMapsAPIBenchmark.readDslJsonJava                                                              N/A  thrpt    5     16955.657 ±    1527.469   ops/s
[info] GoogleMapsAPIBenchmark.readDslJsonJava:·gc.alloc.rate                                               N/A  thrpt    5       403.262 ±      30.276  MB/sec
[info] GoogleMapsAPIBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                          N/A  thrpt    5     37441.046 ±    3819.545    B/op
[info] GoogleMapsAPIBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                                      N/A  thrpt    5         0.822 ±       7.000  MB/sec
[info] GoogleMapsAPIBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                                 N/A  thrpt    5        79.534 ±     678.019    B/op
[info] GoogleMapsAPIBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                                  N/A  thrpt    5       402.011 ±    1413.125  MB/sec
[info] GoogleMapsAPIBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                             N/A  thrpt    5     37606.421 ±  132297.368    B/op
[info] GoogleMapsAPIBenchmark.readDslJsonJava:·gc.count                                                    N/A  thrpt    5         3.000                counts
[info] GoogleMapsAPIBenchmark.readDslJsonJava:·gc.time                                                     N/A  thrpt    5         7.000                    ms
[info] GoogleMapsAPIBenchmark.readJacksonScala                                                             N/A  thrpt    5     14243.967 ±     475.985   ops/s
[info] GoogleMapsAPIBenchmark.readJacksonScala:·gc.alloc.rate                                              N/A  thrpt    5       370.242 ±      38.876  MB/sec
[info] GoogleMapsAPIBenchmark.readJacksonScala:·gc.alloc.rate.norm                                         N/A  thrpt    5     40912.731 ±    4515.635    B/op
[info] GoogleMapsAPIBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                     N/A  thrpt    5         0.287 ±       2.474  MB/sec
[info] GoogleMapsAPIBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                N/A  thrpt    5        31.890 ±     274.581    B/op
[info] GoogleMapsAPIBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                 N/A  thrpt    5       404.363 ±    1421.393  MB/sec
[info] GoogleMapsAPIBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                            N/A  thrpt    5     44697.862 ±  157127.687    B/op
[info] GoogleMapsAPIBenchmark.readJacksonScala:·gc.count                                                   N/A  thrpt    5         3.000                counts
[info] GoogleMapsAPIBenchmark.readJacksonScala:·gc.time                                                    N/A  thrpt    5         6.000                    ms
[info] GoogleMapsAPIBenchmark.readJsoniterScala                                                            N/A  thrpt    5     23564.931 ±     311.503   ops/s
[info] GoogleMapsAPIBenchmark.readJsoniterScala:·gc.alloc.rate                                             N/A  thrpt    5       406.681 ±      28.442  MB/sec
[info] GoogleMapsAPIBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                        N/A  thrpt    5     27164.506 ±    1968.019    B/op
[info] GoogleMapsAPIBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                    N/A  thrpt    5         0.611 ±       5.262  MB/sec
[info] GoogleMapsAPIBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                               N/A  thrpt    5        40.829 ±     351.552    B/op
[info] GoogleMapsAPIBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                N/A  thrpt    5       403.910 ±    1419.801  MB/sec
[info] GoogleMapsAPIBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                           N/A  thrpt    5     26960.610 ±   94770.445    B/op
[info] GoogleMapsAPIBenchmark.readJsoniterScala:·gc.count                                                  N/A  thrpt    5         3.000                counts
[info] GoogleMapsAPIBenchmark.readJsoniterScala:·gc.time                                                   N/A  thrpt    5         6.000                    ms
[info] GoogleMapsAPIBenchmark.readPlayJson                                                                 N/A  thrpt    5      3343.497 ±     131.888   ops/s
[info] GoogleMapsAPIBenchmark.readPlayJson:·gc.alloc.rate                                                  N/A  thrpt    5      2011.123 ±     132.553  MB/sec
[info] GoogleMapsAPIBenchmark.readPlayJson:·gc.alloc.rate.norm                                             N/A  thrpt    5    946681.477 ±   27483.909    B/op
[info] GoogleMapsAPIBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                         N/A  thrpt    5         0.033 ±       0.108  MB/sec
[info] GoogleMapsAPIBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                    N/A  thrpt    5        15.699 ±      50.922    B/op
[info] GoogleMapsAPIBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                     N/A  thrpt    5      2028.343 ±      17.019  MB/sec
[info] GoogleMapsAPIBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                N/A  thrpt    5    954904.334 ±   32654.502    B/op
[info] GoogleMapsAPIBenchmark.readPlayJson:·gc.count                                                       N/A  thrpt    5        15.000                counts
[info] GoogleMapsAPIBenchmark.readPlayJson:·gc.time                                                        N/A  thrpt    5        16.000                    ms
[info] GoogleMapsAPIBenchmark.readUPickle                                                                  N/A  thrpt    5      8507.550 ±     679.734   ops/s
[info] GoogleMapsAPIBenchmark.readUPickle:·gc.alloc.rate                                                   N/A  thrpt    5      1033.937 ±      98.730  MB/sec
[info] GoogleMapsAPIBenchmark.readUPickle:·gc.alloc.rate.norm                                              N/A  thrpt    5    191283.452 ±    6300.731    B/op
[info] GoogleMapsAPIBenchmark.readUPickle:·gc.churn.PS_Eden_Space                                          N/A  thrpt    5         0.008 ±       0.044  MB/sec
[info] GoogleMapsAPIBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm                                     N/A  thrpt    5         1.537 ±       8.103    B/op
[info] GoogleMapsAPIBenchmark.readUPickle:·gc.churn.PS_Survivor_Space                                      N/A  thrpt    5      1078.622 ±    1421.676  MB/sec
[info] GoogleMapsAPIBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm                                 N/A  thrpt    5    199237.684 ±  258510.422    B/op
[info] GoogleMapsAPIBenchmark.readUPickle:·gc.count                                                        N/A  thrpt    5         8.000                counts
[info] GoogleMapsAPIBenchmark.readUPickle:·gc.time                                                         N/A  thrpt    5         8.000                    ms
[info] GoogleMapsAPIBenchmark.writeCirce                                                                   N/A  thrpt    5      9922.629 ±     258.164   ops/s
[info] GoogleMapsAPIBenchmark.writeCirce:·gc.alloc.rate                                                    N/A  thrpt    5      1803.194 ±      78.172  MB/sec
[info] GoogleMapsAPIBenchmark.writeCirce:·gc.alloc.rate.norm                                               N/A  thrpt    5    286059.288 ±   12824.312    B/op
[info] GoogleMapsAPIBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                           N/A  thrpt    5         0.021 ±       0.001  MB/sec
[info] GoogleMapsAPIBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                      N/A  thrpt    5         3.302 ±       0.086    B/op
[info] GoogleMapsAPIBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                       N/A  thrpt    5      1759.537 ±    1429.245  MB/sec
[info] GoogleMapsAPIBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                  N/A  thrpt    5    279305.848 ±  230382.941    B/op
[info] GoogleMapsAPIBenchmark.writeCirce:·gc.count                                                         N/A  thrpt    5        13.000                counts
[info] GoogleMapsAPIBenchmark.writeCirce:·gc.time                                                          N/A  thrpt    5        13.000                    ms
[info] GoogleMapsAPIBenchmark.writeDslJsonJava                                                             N/A  thrpt    5     52275.140 ±    1654.371   ops/s
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.alloc.rate                                              N/A  thrpt    5       498.444 ±      36.717  MB/sec
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                         N/A  thrpt    5     15008.314 ±    1041.788    B/op
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                                     N/A  thrpt    5         0.774 ±       6.615  MB/sec
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                                N/A  thrpt    5        23.564 ±     201.557    B/op
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                                 N/A  thrpt    5       402.311 ±    1414.181  MB/sec
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                            N/A  thrpt    5     12131.500 ±   42648.202    B/op
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.count                                                   N/A  thrpt    5         3.000                counts
[info] GoogleMapsAPIBenchmark.writeDslJsonJava:·gc.time                                                    N/A  thrpt    5         5.000                    ms
[info] GoogleMapsAPIBenchmark.writeJacksonScala                                                            N/A  thrpt    5     40067.163 ±    2350.234   ops/s
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.alloc.rate                                             N/A  thrpt    5       594.760 ±      35.641  MB/sec
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                        N/A  thrpt    5     23366.074 ±     644.714    B/op
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                    N/A  thrpt    5         0.266 ±       2.294  MB/sec
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                               N/A  thrpt    5        10.747 ±      92.532    B/op
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                N/A  thrpt    5       539.168 ±    1160.601  MB/sec
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                           N/A  thrpt    5     21235.280 ±   45734.037    B/op
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.count                                                  N/A  thrpt    5         4.000                counts
[info] GoogleMapsAPIBenchmark.writeJacksonScala:·gc.time                                                   N/A  thrpt    5         5.000                    ms
[info] GoogleMapsAPIBenchmark.writeJsoniterScala                                                           N/A  thrpt    5     85922.921 ±    1512.520   ops/s
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.alloc.rate                                            N/A  thrpt    5       665.487 ±      14.795  MB/sec
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                       N/A  thrpt    5     12191.097 ±     307.785    B/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                   N/A  thrpt    5         0.008 ±       0.072  MB/sec
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                              N/A  thrpt    5         0.152 ±       1.310    B/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                               N/A  thrpt    5       671.464 ±       0.985  MB/sec
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                          N/A  thrpt    5     12300.648 ±     228.620    B/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.count                                                 N/A  thrpt    5         5.000                counts
[info] GoogleMapsAPIBenchmark.writeJsoniterScala:·gc.time                                                  N/A  thrpt    5         5.000                    ms
[info] GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc                                                   N/A  thrpt    5     94052.514 ±     518.107   ops/s
[info] GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                    N/A  thrpt    5         0.276 ±       2.094  MB/sec
[info] GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                               N/A  thrpt    5         4.618 ±      35.102    B/op
[info] GoogleMapsAPIBenchmark.writeJsoniterScalaPrealloc:·gc.count                                         N/A  thrpt    5           ≈ 0                counts
[info] GoogleMapsAPIBenchmark.writePlayJson                                                                N/A  thrpt    5      7425.226 ±      95.179   ops/s
[info] GoogleMapsAPIBenchmark.writePlayJson:·gc.alloc.rate                                                 N/A  thrpt    5      2199.611 ±      25.371  MB/sec
[info] GoogleMapsAPIBenchmark.writePlayJson:·gc.alloc.rate.norm                                            N/A  thrpt    5    466253.983 ±    7207.840    B/op
[info] GoogleMapsAPIBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                        N/A  thrpt    5         0.021 ±       0.080  MB/sec
[info] GoogleMapsAPIBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                   N/A  thrpt    5         4.413 ±      16.998    B/op
[info] GoogleMapsAPIBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                    N/A  thrpt    5      2164.903 ±    1158.022  MB/sec
[info] GoogleMapsAPIBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                               N/A  thrpt    5    459022.318 ±  250608.635    B/op
[info] GoogleMapsAPIBenchmark.writePlayJson:·gc.count                                                      N/A  thrpt    5        16.000                counts
[info] GoogleMapsAPIBenchmark.writePlayJson:·gc.time                                                       N/A  thrpt    5        16.000                    ms
[info] GoogleMapsAPIBenchmark.writeUPickle                                                                 N/A  thrpt    5      4924.104 ±      84.219   ops/s
[info] GoogleMapsAPIBenchmark.writeUPickle:·gc.alloc.rate                                                  N/A  thrpt    5       235.199 ±      25.214  MB/sec
[info] GoogleMapsAPIBenchmark.writeUPickle:·gc.alloc.rate.norm                                             N/A  thrpt    5     75176.646 ±    7309.166    B/op
[info] GoogleMapsAPIBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space                                     N/A  thrpt    5       204.581 ±    1078.696  MB/sec
[info] GoogleMapsAPIBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm                                N/A  thrpt    5     65260.907 ±  344106.632    B/op
[info] GoogleMapsAPIBenchmark.writeUPickle:·gc.count                                                       N/A  thrpt    5         2.000                counts
[info] GoogleMapsAPIBenchmark.writeUPickle:·gc.time                                                        N/A  thrpt    5         7.000                    ms
[info] IntBenchmark.readCirce                                                                              N/A  thrpt    5   8659855.541 ±  280117.157   ops/s
[info] IntBenchmark.readCirce:·gc.alloc.rate                                                               N/A  thrpt    5      4712.601 ±     134.906  MB/sec
[info] IntBenchmark.readCirce:·gc.alloc.rate.norm                                                          N/A  thrpt    5       856.454 ±      11.186    B/op
[info] IntBenchmark.readCirce:·gc.churn.PS_Eden_Space                                                      N/A  thrpt    5         0.125 ±       0.160  MB/sec
[info] IntBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                                 N/A  thrpt    5         0.023 ±       0.029    B/op
[info] IntBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                                  N/A  thrpt    5      4488.701 ±    1425.406  MB/sec
[info] IntBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                             N/A  thrpt    5       815.887 ±     265.288    B/op
[info] IntBenchmark.readCirce:·gc.count                                                                    N/A  thrpt    5        33.000                counts
[info] IntBenchmark.readCirce:·gc.time                                                                     N/A  thrpt    5        28.000                    ms
[info] IntBenchmark.readDslJsonJava                                                                        N/A  thrpt    5  37469252.130 ±   79826.942   ops/s
[info] IntBenchmark.readDslJsonJava:·gc.alloc.rate                                                         N/A  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] IntBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                                    N/A  thrpt    5        ≈ 10⁻⁵                  B/op
[info] IntBenchmark.readDslJsonJava:·gc.count                                                              N/A  thrpt    5           ≈ 0                counts
[info] IntBenchmark.readJacksonScala                                                                       N/A  thrpt    5  10329697.447 ± 1341399.212   ops/s
[info] IntBenchmark.readJacksonScala:·gc.alloc.rate                                                        N/A  thrpt    5      3431.334 ±     459.074  MB/sec
[info] IntBenchmark.readJacksonScala:·gc.alloc.rate.norm                                                   N/A  thrpt    5       522.784 ±       9.014    B/op
[info] IntBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                               N/A  thrpt    5         0.117 ±       0.134  MB/sec
[info] IntBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                          N/A  thrpt    5         0.018 ±       0.022    B/op
[info] IntBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                           N/A  thrpt    5      3261.862 ±    1163.476  MB/sec
[info] IntBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                                      N/A  thrpt    5       496.902 ±     165.064    B/op
[info] IntBenchmark.readJacksonScala:·gc.count                                                             N/A  thrpt    5        24.000                counts
[info] IntBenchmark.readJacksonScala:·gc.time                                                              N/A  thrpt    5        23.000                    ms
[info] IntBenchmark.readJsoniterScala                                                                      N/A  thrpt    5  45869123.350 ±  175053.676   ops/s
[info] IntBenchmark.readJsoniterScala:·gc.alloc.rate                                                       N/A  thrpt    5         0.287 ±       1.580  MB/sec
[info] IntBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                                  N/A  thrpt    5         0.010 ±       0.054    B/op
[info] IntBenchmark.readJsoniterScala:·gc.count                                                            N/A  thrpt    5           ≈ 0                counts
[info] IntBenchmark.readNaiveScala                                                                         N/A  thrpt    5  24820266.981 ±  262486.179   ops/s
[info] IntBenchmark.readNaiveScala:·gc.alloc.rate                                                          N/A  thrpt    5       905.663 ±      44.935  MB/sec
[info] IntBenchmark.readNaiveScala:·gc.alloc.rate.norm                                                     N/A  thrpt    5        57.439 ±       3.265    B/op
[info] IntBenchmark.readNaiveScala:·gc.churn.PS_Eden_Space                                                 N/A  thrpt    5         0.025 ±       0.174  MB/sec
[info] IntBenchmark.readNaiveScala:·gc.churn.PS_Eden_Space.norm                                            N/A  thrpt    5         0.002 ±       0.011    B/op
[info] IntBenchmark.readNaiveScala:·gc.churn.PS_Survivor_Space                                             N/A  thrpt    5       807.889 ±    1158.315  MB/sec
[info] IntBenchmark.readNaiveScala:·gc.churn.PS_Survivor_Space.norm                                        N/A  thrpt    5        51.273 ±      74.153    B/op
[info] IntBenchmark.readNaiveScala:·gc.count                                                               N/A  thrpt    5         6.000                counts
[info] IntBenchmark.readNaiveScala:·gc.time                                                                N/A  thrpt    5         5.000                    ms
[info] IntBenchmark.readPlayJson                                                                           N/A  thrpt    5   8722443.865 ±  256339.994   ops/s
[info] IntBenchmark.readPlayJson:·gc.alloc.rate                                                            N/A  thrpt    5      3683.697 ±      94.585  MB/sec
[info] IntBenchmark.readPlayJson:·gc.alloc.rate.norm                                                       N/A  thrpt    5       664.738 ±       5.091    B/op
[info] IntBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                                   N/A  thrpt    5         0.117 ±       0.134  MB/sec
[info] IntBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                              N/A  thrpt    5         0.021 ±       0.024    B/op
[info] IntBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                               N/A  thrpt    5      3533.920 ±    1176.303  MB/sec
[info] IntBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                          N/A  thrpt    5       637.871 ±     221.292    B/op
[info] IntBenchmark.readPlayJson:·gc.count                                                                 N/A  thrpt    5        26.000                counts
[info] IntBenchmark.readPlayJson:·gc.time                                                                  N/A  thrpt    5        23.000                    ms
[info] IntBenchmark.readUPickle                                                                            N/A  thrpt    5  11578703.616 ±  536418.496   ops/s
[info] IntBenchmark.readUPickle:·gc.alloc.rate                                                             N/A  thrpt    5      4897.200 ±     218.133  MB/sec
[info] IntBenchmark.readUPickle:·gc.alloc.rate.norm                                                        N/A  thrpt    5       665.760 ±       1.224    B/op
[info] IntBenchmark.readUPickle:·gc.churn.PS_Eden_Space                                                    N/A  thrpt    5         0.150 ±       0.183  MB/sec
[info] IntBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm                                               N/A  thrpt    5         0.020 ±       0.026    B/op
[info] IntBenchmark.readUPickle:·gc.churn.PS_Survivor_Space                                                N/A  thrpt    5      4763.061 ±      24.590  MB/sec
[info] IntBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm                                           N/A  thrpt    5       647.598 ±      30.757    B/op
[info] IntBenchmark.readUPickle:·gc.count                                                                  N/A  thrpt    5        35.000                counts
[info] IntBenchmark.readUPickle:·gc.time                                                                   N/A  thrpt    5        32.000                    ms
[info] IntBenchmark.writeCirce                                                                             N/A  thrpt    5  14853079.996 ±  336603.213   ops/s
[info] IntBenchmark.writeCirce:·gc.alloc.rate                                                              N/A  thrpt    5      1245.962 ±      16.717  MB/sec
[info] IntBenchmark.writeCirce:·gc.alloc.rate.norm                                                         N/A  thrpt    5       132.026 ±       3.436    B/op
[info] IntBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                                     N/A  thrpt    5         0.058 ±       0.207  MB/sec
[info] IntBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                                N/A  thrpt    5         0.006 ±       0.022    B/op
[info] IntBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                                 N/A  thrpt    5      1215.486 ±    1161.870  MB/sec
[info] IntBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                            N/A  thrpt    5       128.864 ±     124.017    B/op
[info] IntBenchmark.writeCirce:·gc.count                                                                   N/A  thrpt    5         9.000                counts
[info] IntBenchmark.writeCirce:·gc.time                                                                    N/A  thrpt    5         9.000                    ms
[info] IntBenchmark.writeDslJsonJava                                                                       N/A  thrpt    5  43771433.640 ±  211522.228   ops/s
[info] IntBenchmark.writeDslJsonJava:·gc.alloc.rate                                                        N/A  thrpt    5       916.558 ±      39.632  MB/sec
[info] IntBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                                   N/A  thrpt    5        32.959 ±       1.447    B/op
[info] IntBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                                               N/A  thrpt    5         0.050 ±       0.209  MB/sec
[info] IntBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                                          N/A  thrpt    5         0.002 ±       0.008    B/op
[info] IntBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                                           N/A  thrpt    5       936.798 ±    1410.878  MB/sec
[info] IntBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                                      N/A  thrpt    5        33.694 ±      50.836    B/op
[info] IntBenchmark.writeDslJsonJava:·gc.count                                                             N/A  thrpt    5         7.000                counts
[info] IntBenchmark.writeDslJsonJava:·gc.time                                                              N/A  thrpt    5         7.000                    ms
[info] IntBenchmark.writeJacksonScala                                                                      N/A  thrpt    5  12646469.355 ±  425999.710   ops/s
[info] IntBenchmark.writeJacksonScala:·gc.alloc.rate                                                       N/A  thrpt    5      2592.180 ±      75.726  MB/sec
[info] IntBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                                  N/A  thrpt    5       322.645 ±      10.300    B/op
[info] IntBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                              N/A  thrpt    5         0.108 ±       0.088  MB/sec
[info] IntBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                         N/A  thrpt    5         0.013 ±       0.011    B/op
[info] IntBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                          N/A  thrpt    5      2576.099 ±    1167.422  MB/sec
[info] IntBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                                     N/A  thrpt    5       320.755 ±     149.248    B/op
[info] IntBenchmark.writeJacksonScala:·gc.count                                                            N/A  thrpt    5        19.000                counts
[info] IntBenchmark.writeJacksonScala:·gc.time                                                             N/A  thrpt    5        19.000                    ms
[info] IntBenchmark.writeJsoniterScala                                                                     N/A  thrpt    5  47988567.723 ± 1132334.198   ops/s
[info] IntBenchmark.writeJsoniterScala:·gc.alloc.rate                                                      N/A  thrpt    5      1006.466 ±      27.433  MB/sec
[info] IntBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                                 N/A  thrpt    5        33.014 ±       1.531    B/op
[info] IntBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                             N/A  thrpt    5         0.037 ±       0.164  MB/sec
[info] IntBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                                        N/A  thrpt    5         0.001 ±       0.005    B/op
[info] IntBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                         N/A  thrpt    5      1076.751 ±    1419.802  MB/sec
[info] IntBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                                    N/A  thrpt    5        35.350 ±      46.958    B/op
[info] IntBenchmark.writeJsoniterScala:·gc.count                                                           N/A  thrpt    5         8.000                counts
[info] IntBenchmark.writeJsoniterScala:·gc.time                                                            N/A  thrpt    5         7.000                    ms
[info] IntBenchmark.writeJsoniterScalaPrealloc                                                             N/A  thrpt    5  56201760.468 ±  111889.851   ops/s
[info] IntBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                              N/A  thrpt    5         0.049 ±       0.289  MB/sec
[info] IntBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                         N/A  thrpt    5         0.001 ±       0.008    B/op
[info] IntBenchmark.writeJsoniterScalaPrealloc:·gc.count                                                   N/A  thrpt    5           ≈ 0                counts
[info] IntBenchmark.writeNaiveScala                                                                        N/A  thrpt    5  23022510.632 ±  236314.328   ops/s
[info] IntBenchmark.writeNaiveScala:·gc.alloc.rate                                                         N/A  thrpt    5       964.885 ±      29.468  MB/sec
[info] IntBenchmark.writeNaiveScala:·gc.alloc.rate.norm                                                    N/A  thrpt    5        65.973 ±       2.094    B/op
[info] IntBenchmark.writeNaiveScala:·gc.churn.PS_Eden_Space                                                N/A  thrpt    5         0.046 ±       0.200  MB/sec
[info] IntBenchmark.writeNaiveScala:·gc.churn.PS_Eden_Space.norm                                           N/A  thrpt    5         0.003 ±       0.014    B/op
[info] IntBenchmark.writeNaiveScala:·gc.churn.PS_Survivor_Space                                            N/A  thrpt    5       942.811 ±    1420.696  MB/sec
[info] IntBenchmark.writeNaiveScala:·gc.churn.PS_Survivor_Space.norm                                       N/A  thrpt    5        64.486 ±      97.459    B/op
[info] IntBenchmark.writeNaiveScala:·gc.count                                                              N/A  thrpt    5         7.000                counts
[info] IntBenchmark.writeNaiveScala:·gc.time                                                               N/A  thrpt    5         7.000                    ms
[info] IntBenchmark.writePlayJson                                                                          N/A  thrpt    5   2512303.767 ±   78576.102   ops/s
[info] IntBenchmark.writePlayJson:·gc.alloc.rate                                                           N/A  thrpt    5      1892.063 ±      46.318  MB/sec
[info] IntBenchmark.writePlayJson:·gc.alloc.rate.norm                                                      N/A  thrpt    5      1185.393 ±      20.050    B/op
[info] IntBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                                  N/A  thrpt    5         0.067 ±       0.200  MB/sec
[info] IntBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                             N/A  thrpt    5         0.042 ±       0.126    B/op
[info] IntBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                              N/A  thrpt    5      1749.220 ±    1419.686  MB/sec
[info] IntBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                                         N/A  thrpt    5      1096.384 ±     899.451    B/op
[info] IntBenchmark.writePlayJson:·gc.count                                                                N/A  thrpt    5        13.000                counts
[info] IntBenchmark.writePlayJson:·gc.time                                                                 N/A  thrpt    5        13.000                    ms
[info] IntBenchmark.writeUPickle                                                                           N/A  thrpt    5  16716121.873 ±  120961.867   ops/s
[info] IntBenchmark.writeUPickle:·gc.alloc.rate                                                            N/A  thrpt    5      1841.522 ±      54.472  MB/sec
[info] IntBenchmark.writeUPickle:·gc.alloc.rate.norm                                                       N/A  thrpt    5       173.389 ±       5.861    B/op
[info] IntBenchmark.writeUPickle:·gc.churn.PS_Eden_Space                                                   N/A  thrpt    5         0.058 ±       0.105  MB/sec
[info] IntBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm                                              N/A  thrpt    5         0.005 ±       0.010    B/op
[info] IntBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space                                               N/A  thrpt    5      1888.188 ±    1162.348  MB/sec
[info] IntBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm                                          N/A  thrpt    5       177.796 ±     109.768    B/op
[info] IntBenchmark.writeUPickle:·gc.count                                                                 N/A  thrpt    5        14.000                counts
[info] IntBenchmark.writeUPickle:·gc.time                                                                  N/A  thrpt    5        13.000                    ms
[info] IntMapOfBooleansBenchmark.readJsoniterScala                                                         128  thrpt    5    167464.035 ±    2800.732   ops/s
[info] IntMapOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate                                          128  thrpt    5      3188.321 ±      49.078  MB/sec
[info] IntMapOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                     128  thrpt    5     29962.852 ±     676.399    B/op
[info] IntMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5         0.083 ±       0.098  MB/sec
[info] IntMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5         0.782 ±       0.920    B/op
[info] IntMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5      2985.561 ±    1432.001  MB/sec
[info] IntMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5     28063.974 ±   13728.132    B/op
[info] IntMapOfBooleansBenchmark.readJsoniterScala:·gc.count                                               128  thrpt    5        22.000                counts
[info] IntMapOfBooleansBenchmark.readJsoniterScala:·gc.time                                                128  thrpt    5        20.000                    ms
[info] IntMapOfBooleansBenchmark.readPlayJson                                                              128  thrpt    5     33327.799 ±    1438.460   ops/s
[info] IntMapOfBooleansBenchmark.readPlayJson:·gc.alloc.rate                                               128  thrpt    5      2509.047 ±     160.100  MB/sec
[info] IntMapOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm                                          128  thrpt    5    118485.462 ±    3482.609    B/op
[info] IntMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                      128  thrpt    5         0.067 ±       0.067  MB/sec
[info] IntMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5         3.150 ±       3.235    B/op
[info] IntMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                  128  thrpt    5      2438.281 ±    1427.310  MB/sec
[info] IntMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5    115178.459 ±   68147.662    B/op
[info] IntMapOfBooleansBenchmark.readPlayJson:·gc.count                                                    128  thrpt    5        18.000                counts
[info] IntMapOfBooleansBenchmark.readPlayJson:·gc.time                                                     128  thrpt    5        18.000                    ms
[info] IntMapOfBooleansBenchmark.writeJacksonScala                                                         128  thrpt    5    122294.521 ±    2084.298   ops/s
[info] IntMapOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate                                          128  thrpt    5      1014.730 ±      53.834  MB/sec
[info] IntMapOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                     128  thrpt    5     13061.565 ±     732.276    B/op
[info] IntMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5         0.021 ±       0.098  MB/sec
[info] IntMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5         0.268 ±       1.265    B/op
[info] IntMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5       943.344 ±    1420.716  MB/sec
[info] IntMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5     12144.380 ±   18311.913    B/op
[info] IntMapOfBooleansBenchmark.writeJacksonScala:·gc.count                                               128  thrpt    5         7.000                counts
[info] IntMapOfBooleansBenchmark.writeJacksonScala:·gc.time                                                128  thrpt    5         8.000                    ms
[info] IntMapOfBooleansBenchmark.writeJsoniterScala                                                        128  thrpt    5    403898.193 ±   43337.989   ops/s
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate                                         128  thrpt    5      1617.250 ±     198.584  MB/sec
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                    128  thrpt    5      6301.695 ±     242.062    B/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.CodeHeap_'non-profiled_nmethods'             128  thrpt    5         0.102 ±       0.878  MB/sec
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm        128  thrpt    5         0.417 ±       3.593    B/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.Compressed_Class_Space                       128  thrpt    5         0.003 ±       0.024  MB/sec
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.Compressed_Class_Space.norm                  128  thrpt    5         0.011 ±       0.099    B/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                128  thrpt    5         0.054 ±       0.176  MB/sec
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5         0.215 ±       0.722    B/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Old_Gen                                   128  thrpt    5         0.009 ±       0.079  MB/sec
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Old_Gen.norm                              128  thrpt    5         0.038 ±       0.324    B/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5      1486.913 ±    1151.662  MB/sec
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5      5792.431 ±    4358.250    B/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.count                                              128  thrpt    5        13.000                counts
[info] IntMapOfBooleansBenchmark.writeJsoniterScala:·gc.time                                               128  thrpt    5        61.000                    ms
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc                                                128  thrpt    5    455152.612 ±   13966.559   ops/s
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                 128  thrpt    5      1307.267 ±      40.324  MB/sec
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                            128  thrpt    5      4520.161 ±     192.321    B/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space                        128  thrpt    5         0.042 ±       0.204  MB/sec
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5         0.144 ±       0.705    B/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space                    128  thrpt    5      1211.592 ±    1159.633  MB/sec
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5      4191.494 ±    4039.684    B/op
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count                                      128  thrpt    5         9.000                counts
[info] IntMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.time                                       128  thrpt    5         9.000                    ms
[info] IntMapOfBooleansBenchmark.writePlayJson                                                             128  thrpt    5     61130.028 ±     239.840   ops/s
[info] IntMapOfBooleansBenchmark.writePlayJson:·gc.alloc.rate                                              128  thrpt    5      1424.855 ±      29.842  MB/sec
[info] IntMapOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm                                         128  thrpt    5     36687.361 ±     736.248    B/op
[info] IntMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                     128  thrpt    5         0.025 ±       0.088  MB/sec
[info] IntMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5         0.643 ±       2.263    B/op
[info] IntMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                 128  thrpt    5      1350.919 ±       6.272  MB/sec
[info] IntMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5     34783.686 ±     183.886    B/op
[info] IntMapOfBooleansBenchmark.writePlayJson:·gc.count                                                   128  thrpt    5        10.000                counts
[info] IntMapOfBooleansBenchmark.writePlayJson:·gc.time                                                    128  thrpt    5        11.000                    ms
[info] ListOfBooleansBenchmark.readCirce                                                                   128  thrpt    5    314600.796 ±    5096.382   ops/s
[info] ListOfBooleansBenchmark.readCirce:·gc.alloc.rate                                                    128  thrpt    5      2203.339 ±      58.054  MB/sec
[info] ListOfBooleansBenchmark.readCirce:·gc.alloc.rate.norm                                               128  thrpt    5     11024.460 ±     339.094    B/op
[info] ListOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space                                           128  thrpt    5         0.054 ±       0.072  MB/sec
[info] ListOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                      128  thrpt    5         0.271 ±       0.356    B/op
[info] ListOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                       128  thrpt    5      2168.421 ±    1167.513  MB/sec
[info] ListOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                  128  thrpt    5     10849.194 ±    5820.797    B/op
[info] ListOfBooleansBenchmark.readCirce:·gc.count                                                         128  thrpt    5        16.000                counts
[info] ListOfBooleansBenchmark.readCirce:·gc.time                                                          128  thrpt    5        14.000                    ms
[info] ListOfBooleansBenchmark.readJacksonScala                                                            128  thrpt    5    486471.181 ±    9123.623   ops/s
[info] ListOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate                                             128  thrpt    5      1301.234 ±      51.900  MB/sec
[info] ListOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm                                        128  thrpt    5      4210.111 ±      99.249    B/op
[info] ListOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5         0.025 ±       0.105  MB/sec
[info] ListOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5         0.081 ±       0.337    B/op
[info] ListOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5      1214.452 ±    1163.278  MB/sec
[info] ListOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5      3926.031 ±    3719.658    B/op
[info] ListOfBooleansBenchmark.readJacksonScala:·gc.count                                                  128  thrpt    5         9.000                counts
[info] ListOfBooleansBenchmark.readJacksonScala:·gc.time                                                   128  thrpt    5         9.000                    ms
[info] ListOfBooleansBenchmark.readJsoniterScala                                                           128  thrpt    5   1325601.175 ±   25467.166   ops/s
[info] ListOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate                                            128  thrpt    5      2684.153 ±      91.598  MB/sec
[info] ListOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                       128  thrpt    5      3186.855 ±      69.749    B/op
[info] ListOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5         0.092 ±       0.122  MB/sec
[info] ListOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5         0.109 ±       0.147    B/op
[info] ListOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5      2573.817 ±    1174.272  MB/sec
[info] ListOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5      3054.956 ±    1361.322    B/op
[info] ListOfBooleansBenchmark.readJsoniterScala:·gc.count                                                 128  thrpt    5        19.000                counts
[info] ListOfBooleansBenchmark.readJsoniterScala:·gc.time                                                  128  thrpt    5        16.000                    ms
[info] ListOfBooleansBenchmark.readPlayJson                                                                128  thrpt    5    101628.160 ±    1977.065   ops/s
[info] ListOfBooleansBenchmark.readPlayJson:·gc.alloc.rate                                                 128  thrpt    5      3403.803 ±      79.334  MB/sec
[info] ListOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm                                            128  thrpt    5     52716.643 ±     941.013    B/op
[info] ListOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                        128  thrpt    5         0.062 ±       0.057  MB/sec
[info] ListOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5         0.966 ±       0.862    B/op
[info] ListOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                    128  thrpt    5      3260.252 ±    1169.011  MB/sec
[info] ListOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5     50502.608 ±   18508.829    B/op
[info] ListOfBooleansBenchmark.readPlayJson:·gc.count                                                      128  thrpt    5        24.000                counts
[info] ListOfBooleansBenchmark.readPlayJson:·gc.time                                                       128  thrpt    5        22.000                    ms
[info] ListOfBooleansBenchmark.readUPickle                                                                 128  thrpt    5    583708.727 ±    7386.339   ops/s
[info] ListOfBooleansBenchmark.readUPickle:·gc.alloc.rate                                                  128  thrpt    5      2636.484 ±      87.656  MB/sec
[info] ListOfBooleansBenchmark.readUPickle:·gc.alloc.rate.norm                                             128  thrpt    5      7109.029 ±     204.261    B/op
[info] ListOfBooleansBenchmark.readUPickle:·gc.churn.PS_Eden_Space                                         128  thrpt    5         0.071 ±       0.156  MB/sec
[info] ListOfBooleansBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5         0.191 ±       0.423    B/op
[info] ListOfBooleansBenchmark.readUPickle:·gc.churn.PS_Survivor_Space                                     128  thrpt    5      2573.494 ±    1170.933  MB/sec
[info] ListOfBooleansBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5      6938.061 ±    3116.982    B/op
[info] ListOfBooleansBenchmark.readUPickle:·gc.count                                                       128  thrpt    5        19.000                counts
[info] ListOfBooleansBenchmark.readUPickle:·gc.time                                                        128  thrpt    5        17.000                    ms
[info] ListOfBooleansBenchmark.writeCirce                                                                  128  thrpt    5    333928.826 ±   44236.733   ops/s
[info] ListOfBooleansBenchmark.writeCirce:·gc.alloc.rate                                                   128  thrpt    5       537.491 ±     100.731  MB/sec
[info] ListOfBooleansBenchmark.writeCirce:·gc.alloc.rate.norm                                              128  thrpt    5      2532.345 ±     150.286    B/op
[info] ListOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                          128  thrpt    5         0.062 ±       0.409  MB/sec
[info] ListOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                     128  thrpt    5         0.290 ±       1.897    B/op
[info] ListOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                      128  thrpt    5       538.948 ±    1160.126  MB/sec
[info] ListOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                 128  thrpt    5      2502.189 ±    5386.286    B/op
[info] ListOfBooleansBenchmark.writeCirce:·gc.count                                                        128  thrpt    5         4.000                counts
[info] ListOfBooleansBenchmark.writeCirce:·gc.time                                                         128  thrpt    5         5.000                    ms
[info] ListOfBooleansBenchmark.writeJacksonScala                                                           128  thrpt    5    780892.942 ±    4209.930   ops/s
[info] ListOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate                                            128  thrpt    5       578.785 ±      34.907  MB/sec
[info] ListOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                       128  thrpt    5      1166.663 ±      74.812    B/op
[info] ListOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5         0.246 ±       2.025  MB/sec
[info] ListOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5         0.495 ±       4.079    B/op
[info] ListOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5       539.269 ±    1160.817  MB/sec
[info] ListOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5      1087.329 ±    2340.566    B/op
[info] ListOfBooleansBenchmark.writeJacksonScala:·gc.count                                                 128  thrpt    5         4.000                counts
[info] ListOfBooleansBenchmark.writeJacksonScala:·gc.time                                                  128  thrpt    5         5.000                    ms
[info] ListOfBooleansBenchmark.writeJsoniterScala                                                          128  thrpt    5   1997859.196 ±   24673.093   ops/s
[info] ListOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate                                           128  thrpt    5       951.367 ±      22.464  MB/sec
[info] ListOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                      128  thrpt    5       749.502 ±      18.835    B/op
[info] ListOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5         0.021 ±       0.139  MB/sec
[info] ListOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5         0.016 ±       0.109    B/op
[info] ListOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5       941.980 ±    1419.105  MB/sec
[info] ListOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5       742.162 ±    1118.755    B/op
[info] ListOfBooleansBenchmark.writeJsoniterScala:·gc.count                                                128  thrpt    5         7.000                counts
[info] ListOfBooleansBenchmark.writeJsoniterScala:·gc.time                                                 128  thrpt    5         8.000                    ms
[info] ListOfBooleansBenchmark.writeJsoniterScalaPrealloc                                                  128  thrpt    5   2170548.219 ±     938.983   ops/s
[info] ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                   128  thrpt    5        ≈ 10⁻⁴                MB/sec
[info] ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                              128  thrpt    5        ≈ 10⁻⁴                  B/op
[info] ListOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count                                        128  thrpt    5           ≈ 0                counts
[info] ListOfBooleansBenchmark.writePlayJson                                                               128  thrpt    5    445562.705 ±   20132.360   ops/s
[info] ListOfBooleansBenchmark.writePlayJson:·gc.alloc.rate                                                128  thrpt    5       661.753 ±      22.167  MB/sec
[info] ListOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm                                           128  thrpt    5      2337.973 ±      79.961    B/op
[info] ListOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                       128  thrpt    5         0.025 ±       0.104  MB/sec
[info] ListOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5         0.088 ±       0.371    B/op
[info] ListOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                   128  thrpt    5       538.711 ±    1159.617  MB/sec
[info] ListOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5      1902.294 ±    4096.243    B/op
[info] ListOfBooleansBenchmark.writePlayJson:·gc.count                                                     128  thrpt    5         4.000                counts
[info] ListOfBooleansBenchmark.writePlayJson:·gc.time                                                      128  thrpt    5         4.000                    ms
[info] ListOfBooleansBenchmark.writeUPickle                                                                128  thrpt    5    192302.754 ±    1033.382   ops/s
[info] ListOfBooleansBenchmark.writeUPickle:·gc.alloc.rate                                                 128  thrpt    5       504.916 ±      38.060  MB/sec
[info] ListOfBooleansBenchmark.writeUPickle:·gc.alloc.rate.norm                                            128  thrpt    5      4132.883 ±     315.306    B/op
[info] ListOfBooleansBenchmark.writeUPickle:·gc.churn.PS_Eden_Space                                        128  thrpt    5         0.593 ±       5.063  MB/sec
[info] ListOfBooleansBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5         4.866 ±      41.530    B/op
[info] ListOfBooleansBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space                                    128  thrpt    5       538.717 ±    1159.633  MB/sec
[info] ListOfBooleansBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5      4409.924 ±    9492.778    B/op
[info] ListOfBooleansBenchmark.writeUPickle:·gc.count                                                      128  thrpt    5         4.000                counts
[info] ListOfBooleansBenchmark.writeUPickle:·gc.time                                                       128  thrpt    5         7.000                    ms
[info] MapOfIntsToBooleansBenchmark.readCirce                                                              128  thrpt    5     59003.879 ±     593.763   ops/s
[info] MapOfIntsToBooleansBenchmark.readCirce:·gc.alloc.rate                                               128  thrpt    5      1975.070 ±      61.692  MB/sec
[info] MapOfIntsToBooleansBenchmark.readCirce:·gc.alloc.rate.norm                                          128  thrpt    5     52689.580 ±    1810.727    B/op
[info] MapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space                                      128  thrpt    5         0.046 ±       0.154  MB/sec
[info] MapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5         1.222 ±       4.121    B/op
[info] MapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                  128  thrpt    5      1895.324 ±    1172.325  MB/sec
[info] MapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5     50569.665 ±   31456.935    B/op
[info] MapOfIntsToBooleansBenchmark.readCirce:·gc.count                                                    128  thrpt    5        14.000                counts
[info] MapOfIntsToBooleansBenchmark.readCirce:·gc.time                                                     128  thrpt    5        13.000                    ms
[info] MapOfIntsToBooleansBenchmark.readJacksonScala                                                       128  thrpt    5     87170.769 ±    4387.307   ops/s
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.alloc.rate                                        128  thrpt    5      1600.903 ±     106.428  MB/sec
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm                                   128  thrpt    5     28907.373 ±     570.086    B/op
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                               128  thrpt    5         0.025 ±       0.067  MB/sec
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5         0.451 ±       1.223    B/op
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5      1485.550 ±    1166.955  MB/sec
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5     26807.634 ±   20462.362    B/op
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.count                                             128  thrpt    5        11.000                counts
[info] MapOfIntsToBooleansBenchmark.readJacksonScala:·gc.time                                              128  thrpt    5        10.000                    ms
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala                                                      128  thrpt    5    160560.991 ±    5831.770   ops/s
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.alloc.rate                                       128  thrpt    5      2548.787 ±     117.575  MB/sec
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                  128  thrpt    5     24986.216 ±     449.341    B/op
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                              128  thrpt    5         0.079 ±       0.104  MB/sec
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5         0.775 ±       1.025    B/op
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5      2436.154 ±    1414.887  MB/sec
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5     23884.385 ±   13905.762    B/op
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.count                                            128  thrpt    5        18.000                counts
[info] MapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.time                                             128  thrpt    5        16.000                    ms
[info] MapOfIntsToBooleansBenchmark.readPlayJson                                                           128  thrpt    5     33233.235 ±     617.022   ops/s
[info] MapOfIntsToBooleansBenchmark.readPlayJson:·gc.alloc.rate                                            128  thrpt    5      2223.940 ±      86.393  MB/sec
[info] MapOfIntsToBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm                                       128  thrpt    5    105325.499 ±    3214.643    B/op
[info] MapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                   128  thrpt    5         0.050 ±       0.122  MB/sec
[info] MapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5         2.365 ±       5.747    B/op
[info] MapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                               128  thrpt    5      2165.483 ±    1173.415  MB/sec
[info] MapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5    102552.804 ±   55329.176    B/op
[info] MapOfIntsToBooleansBenchmark.readPlayJson:·gc.count                                                 128  thrpt    5        16.000                counts
[info] MapOfIntsToBooleansBenchmark.readPlayJson:·gc.time                                                  128  thrpt    5        16.000                    ms
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala                                                      128  thrpt    5    133033.469 ±     554.632   ops/s
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.alloc.rate                                       128  thrpt    5       839.892 ±      46.993  MB/sec
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                  128  thrpt    5      9937.284 ±     572.620    B/op
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                              128  thrpt    5         0.012 ±       0.072  MB/sec
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5         0.148 ±       0.849    B/op
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5       808.980 ±    1161.455  MB/sec
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5      9572.488 ±   13761.086    B/op
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.count                                            128  thrpt    5         6.000                counts
[info] MapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.time                                             128  thrpt    5         6.000                    ms
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala                                                     128  thrpt    5    427068.474 ±   28556.277   ops/s
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate                                      128  thrpt    5       483.500 ±      67.895  MB/sec
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                 128  thrpt    5      1781.737 ±     151.317    B/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.Compressed_Class_Space                    128  thrpt    5         0.001 ±       0.005  MB/sec
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.Compressed_Class_Space.norm               128  thrpt    5         0.002 ±       0.017    B/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                             128  thrpt    5         0.624 ±       5.376  MB/sec
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5         2.367 ±      20.383    B/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Old_Gen                                128  thrpt    5         0.002 ±       0.015  MB/sec
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Old_Gen.norm                           128  thrpt    5         0.007 ±       0.056    B/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5       479.286 ±    1143.053  MB/sec
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5      1761.246 ±    4159.563    B/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.count                                           128  thrpt    5         5.000                counts
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.time                                            128  thrpt    5        45.000                    ms
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc                                             128  thrpt    5    451034.127 ±    3732.804   ops/s
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                              128  thrpt    5         4.607 ±       0.186  MB/sec
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                         128  thrpt    5        16.076 ±       0.639    B/op
[info] MapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count                                   128  thrpt    5           ≈ 0                counts
[info] MapOfIntsToBooleansBenchmark.writePlayJson                                                          128  thrpt    5     62329.663 ±    2993.833   ops/s
[info] MapOfIntsToBooleansBenchmark.writePlayJson:·gc.alloc.rate                                           128  thrpt    5      1273.177 ±      73.804  MB/sec
[info] MapOfIntsToBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm                                      128  thrpt    5     32149.448 ±    1374.441    B/op
[info] MapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                  128  thrpt    5         0.042 ±       0.057  MB/sec
[info] MapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5         1.048 ±       1.404    B/op
[info] MapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                              128  thrpt    5      1214.309 ±    1159.555  MB/sec
[info] MapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5     30690.239 ±   29636.785    B/op
[info] MapOfIntsToBooleansBenchmark.writePlayJson:·gc.count                                                128  thrpt    5         9.000                counts
[info] MapOfIntsToBooleansBenchmark.writePlayJson:·gc.time                                                 128  thrpt    5         9.000                    ms
[info] MissingReqFieldBenchmark.readCirce                                                                  N/A  thrpt    5   2918838.247 ±   68596.268   ops/s
[info] MissingReqFieldBenchmark.readCirce:·gc.alloc.rate                                                   N/A  thrpt    5      3559.510 ±     109.223  MB/sec
[info] MissingReqFieldBenchmark.readCirce:·gc.alloc.rate.norm                                              N/A  thrpt    5      1919.578 ±      15.709    B/op
[info] MissingReqFieldBenchmark.readCirce:·gc.churn.PS_Eden_Space                                          N/A  thrpt    5         0.092 ±       0.072  MB/sec
[info] MissingReqFieldBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                     N/A  thrpt    5         0.049 ±       0.039    B/op
[info] MissingReqFieldBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                      N/A  thrpt    5      3398.700 ±      19.202  MB/sec
[info] MissingReqFieldBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                 N/A  thrpt    5      1832.920 ±      38.573    B/op
[info] MissingReqFieldBenchmark.readCirce:·gc.count                                                        N/A  thrpt    5        25.000                counts
[info] MissingReqFieldBenchmark.readCirce:·gc.time                                                         N/A  thrpt    5        21.000                    ms
[info] MissingReqFieldBenchmark.readDslJsonJava                                                            N/A  thrpt    5    807100.192 ±   60434.917   ops/s
[info] MissingReqFieldBenchmark.readDslJsonJava:·gc.alloc.rate                                             N/A  thrpt    5       496.654 ±      37.862  MB/sec
[info] MissingReqFieldBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                        N/A  thrpt    5       968.522 ±       4.486    B/op
[info] MissingReqFieldBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                                    N/A  thrpt    5         0.836 ±       7.105  MB/sec
[info] MissingReqFieldBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                               N/A  thrpt    5         1.608 ±      13.668    B/op
[info] MissingReqFieldBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                                N/A  thrpt    5       401.813 ±    1412.430  MB/sec
[info] MissingReqFieldBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                           N/A  thrpt    5       789.378 ±    2775.987    B/op
[info] MissingReqFieldBenchmark.readDslJsonJava:·gc.count                                                  N/A  thrpt    5         3.000                counts
[info] MissingReqFieldBenchmark.readDslJsonJava:·gc.time                                                   N/A  thrpt    5         5.000                    ms
[info] MissingReqFieldBenchmark.readJacksonScala                                                           N/A  thrpt    5    325342.072 ±    5055.395   ops/s
[info] MissingReqFieldBenchmark.readJacksonScala:·gc.alloc.rate                                            N/A  thrpt    5       627.871 ±      27.070  MB/sec
[info] MissingReqFieldBenchmark.readJacksonScala:·gc.alloc.rate.norm                                       N/A  thrpt    5      3037.632 ±     166.721    B/op
[info] MissingReqFieldBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                   N/A  thrpt    5         0.308 ±       2.519  MB/sec
[info] MissingReqFieldBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                              N/A  thrpt    5         1.495 ±      12.224    B/op
[info] MissingReqFieldBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                               N/A  thrpt    5       674.486 ±       1.702  MB/sec
[info] MissingReqFieldBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                          N/A  thrpt    5      3263.078 ±      56.869    B/op
[info] MissingReqFieldBenchmark.readJacksonScala:·gc.count                                                 N/A  thrpt    5         5.000                counts
[info] MissingReqFieldBenchmark.readJacksonScala:·gc.time                                                  N/A  thrpt    5         7.000                    ms
[info] MissingReqFieldBenchmark.readJsoniterScala                                                          N/A  thrpt    5    575541.887 ±    9561.623   ops/s
[info] MissingReqFieldBenchmark.readJsoniterScala:·gc.alloc.rate                                           N/A  thrpt    5       440.743 ±      26.999  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                      N/A  thrpt    5      1205.362 ±      85.457    B/op
[info] MissingReqFieldBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                  N/A  thrpt    5         0.562 ±       4.706  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                             N/A  thrpt    5         1.539 ±      12.888    B/op
[info] MissingReqFieldBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                              N/A  thrpt    5       404.315 ±    1421.223  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                         N/A  thrpt    5      1108.944 ±    3898.113    B/op
[info] MissingReqFieldBenchmark.readJsoniterScala:·gc.count                                                N/A  thrpt    5         3.000                counts
[info] MissingReqFieldBenchmark.readJsoniterScala:·gc.time                                                 N/A  thrpt    5         5.000                    ms
[info] MissingReqFieldBenchmark.readJsoniterStackless                                                      N/A  thrpt    5   1552277.317 ±   20503.597   ops/s
[info] MissingReqFieldBenchmark.readJsoniterStackless:·gc.alloc.rate                                       N/A  thrpt    5       513.593 ±      37.066  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterStackless:·gc.alloc.rate.norm                                  N/A  thrpt    5       520.790 ±      40.004    B/op
[info] MissingReqFieldBenchmark.readJsoniterStackless:·gc.churn.PS_Eden_Space                              N/A  thrpt    5         0.504 ±       4.292  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterStackless:·gc.churn.PS_Eden_Space.norm                         N/A  thrpt    5         0.510 ±       4.347    B/op
[info] MissingReqFieldBenchmark.readJsoniterStackless:·gc.churn.PS_Survivor_Space                          N/A  thrpt    5       540.041 ±    1162.479  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterStackless:·gc.churn.PS_Survivor_Space.norm                     N/A  thrpt    5       548.111 ±    1179.879    B/op
[info] MissingReqFieldBenchmark.readJsoniterStackless:·gc.count                                            N/A  thrpt    5         4.000                counts
[info] MissingReqFieldBenchmark.readJsoniterStackless:·gc.time                                             N/A  thrpt    5         8.000                    ms
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump                                                N/A  thrpt    5   6207902.838 ±  375625.304   ops/s
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.alloc.rate                                 N/A  thrpt    5       521.160 ±      55.608  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.alloc.rate.norm                            N/A  thrpt    5       132.138 ±      10.774    B/op
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space                        N/A  thrpt    5         0.516 ±       4.289  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space.norm                   N/A  thrpt    5         0.134 ±       1.111    B/op
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space                    N/A  thrpt    5       539.667 ±    1161.676  MB/sec
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space.norm               N/A  thrpt    5       136.502 ±     294.003    B/op
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.count                                      N/A  thrpt    5         4.000                counts
[info] MissingReqFieldBenchmark.readJsoniterStacklessNoDump:·gc.time                                       N/A  thrpt    5         6.000                    ms
[info] MissingReqFieldBenchmark.readPlayJson                                                               N/A  thrpt    5    249668.488 ±    1947.599   ops/s
[info] MissingReqFieldBenchmark.readPlayJson:·gc.alloc.rate                                                N/A  thrpt    5      1659.355 ±      55.023  MB/sec
[info] MissingReqFieldBenchmark.readPlayJson:·gc.alloc.rate.norm                                           N/A  thrpt    5     10459.497 ±     383.204    B/op
[info] MissingReqFieldBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                       N/A  thrpt    5         0.042 ±       0.160  MB/sec
[info] MissingReqFieldBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                  N/A  thrpt    5         0.262 ±       1.008    B/op
[info] MissingReqFieldBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                   N/A  thrpt    5      1619.433 ±    1417.928  MB/sec
[info] MissingReqFieldBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                              N/A  thrpt    5     10208.961 ±    8964.645    B/op
[info] MissingReqFieldBenchmark.readPlayJson:·gc.count                                                     N/A  thrpt    5        12.000                counts
[info] MissingReqFieldBenchmark.readPlayJson:·gc.time                                                      N/A  thrpt    5        13.000                    ms
[info] MissingReqFieldBenchmark.readUPickle                                                                N/A  thrpt    5    319241.451 ±    6895.050   ops/s
[info] MissingReqFieldBenchmark.readUPickle:·gc.alloc.rate                                                 N/A  thrpt    5       647.240 ±      20.992  MB/sec
[info] MissingReqFieldBenchmark.readUPickle:·gc.alloc.rate.norm                                            N/A  thrpt    5      3191.042 ±      40.870    B/op
[info] MissingReqFieldBenchmark.readUPickle:·gc.churn.PS_Eden_Space                                        N/A  thrpt    5         0.635 ±       5.334  MB/sec
[info] MissingReqFieldBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm                                   N/A  thrpt    5         3.116 ±      26.173    B/op
[info] MissingReqFieldBenchmark.readUPickle:·gc.churn.PS_Survivor_Space                                    N/A  thrpt    5       537.690 ±    1157.421  MB/sec
[info] MissingReqFieldBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm                               N/A  thrpt    5      2646.968 ±    5698.025    B/op
[info] MissingReqFieldBenchmark.readUPickle:·gc.count                                                      N/A  thrpt    5         5.000                counts
[info] MissingReqFieldBenchmark.readUPickle:·gc.time                                                       N/A  thrpt    5         7.000                    ms
[info] MutableBitSetBenchmark.readJsoniterScala                                                            128  thrpt    5   1356382.542 ±  113033.849   ops/s
[info] MutableBitSetBenchmark.readJsoniterScala:·gc.alloc.rate                                             128  thrpt    5        82.693 ±      52.766  MB/sec
[info] MutableBitSetBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                        128  thrpt    5        96.283 ±      71.317    B/op
[info] MutableBitSetBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5       102.307 ±     880.890  MB/sec
[info] MutableBitSetBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5       123.500 ±    1063.375    B/op
[info] MutableBitSetBenchmark.readJsoniterScala:·gc.count                                                  128  thrpt    5         1.000                counts
[info] MutableBitSetBenchmark.readJsoniterScala:·gc.time                                                   128  thrpt    5         3.000                    ms
[info] MutableBitSetBenchmark.readPlayJson                                                                 128  thrpt    5     73822.205 ±    2438.149   ops/s
[info] MutableBitSetBenchmark.readPlayJson:·gc.alloc.rate                                                  128  thrpt    5      3252.028 ±     132.560  MB/sec
[info] MutableBitSetBenchmark.readPlayJson:·gc.alloc.rate.norm                                             128  thrpt    5     69343.404 ±    1510.021    B/op
[info] MutableBitSetBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                         128  thrpt    5         0.071 ±       0.091  MB/sec
[info] MutableBitSetBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5         1.512 ±       2.000    B/op
[info] MutableBitSetBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                     128  thrpt    5      3122.821 ±    1419.617  MB/sec
[info] MutableBitSetBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5     66584.800 ±   30044.098    B/op
[info] MutableBitSetBenchmark.readPlayJson:·gc.count                                                       128  thrpt    5        23.000                counts
[info] MutableBitSetBenchmark.readPlayJson:·gc.time                                                        128  thrpt    5        22.000                    ms
[info] MutableBitSetBenchmark.writeJacksonScala                                                            128  thrpt    5   1480372.063 ±  107961.414   ops/s
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.alloc.rate                                             128  thrpt    5       794.849 ±      73.169  MB/sec
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                        128  thrpt    5       845.001 ±      22.101    B/op
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5         0.017 ±       0.067  MB/sec
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5         0.018 ±       0.071    B/op
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5       673.298 ±       1.581  MB/sec
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5       716.035 ±      52.258    B/op
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.count                                                  128  thrpt    5         5.000                counts
[info] MutableBitSetBenchmark.writeJacksonScala:·gc.time                                                   128  thrpt    5         5.000                    ms
[info] MutableBitSetBenchmark.writeJsoniterScala                                                           128  thrpt    5    952842.713 ±   30544.168   ops/s
[info] MutableBitSetBenchmark.writeJsoniterScala:·gc.alloc.rate                                            128  thrpt    5       274.751 ±      26.126  MB/sec
[info] MutableBitSetBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                       128  thrpt    5       453.984 ±      56.235    B/op
[info] MutableBitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5         0.012 ±       0.066  MB/sec
[info] MutableBitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5         0.021 ±       0.109    B/op
[info] MutableBitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5       339.665 ±    1221.439  MB/sec
[info] MutableBitSetBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5       563.767 ±    2033.101    B/op
[info] MutableBitSetBenchmark.writeJsoniterScala:·gc.count                                                 128  thrpt    5         3.000                counts
[info] MutableBitSetBenchmark.writeJsoniterScala:·gc.time                                                  128  thrpt    5         8.000                    ms
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc                                                   128  thrpt    5   1669187.076 ±   92538.503   ops/s
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                    128  thrpt    5        16.971 ±       0.937  MB/sec
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                               128  thrpt    5        16.000 ±       0.001    B/op
[info] MutableBitSetBenchmark.writeJsoniterScalaPrealloc:·gc.count                                         128  thrpt    5           ≈ 0                counts
[info] MutableBitSetBenchmark.writePlayJson                                                                128  thrpt    5     48482.807 ±    1953.063   ops/s
[info] MutableBitSetBenchmark.writePlayJson:·gc.alloc.rate                                                 128  thrpt    5      2017.699 ±      88.300  MB/sec
[info] MutableBitSetBenchmark.writePlayJson:·gc.alloc.rate.norm                                            128  thrpt    5     65501.286 ±     787.348    B/op
[info] MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                        128  thrpt    5         0.037 ±       0.154  MB/sec
[info] MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5         1.221 ±       5.076    B/op
[info] MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                    128  thrpt    5      1894.145 ±    1158.490  MB/sec
[info] MutableBitSetBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5     61442.106 ±   36388.078    B/op
[info] MutableBitSetBenchmark.writePlayJson:·gc.count                                                      128  thrpt    5        14.000                counts
[info] MutableBitSetBenchmark.writePlayJson:·gc.time                                                       128  thrpt    5        13.000                    ms
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala                                                 128  thrpt    5    254139.671 ±    1170.026   ops/s
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate                                  128  thrpt    5      1021.878 ±      43.988  MB/sec
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm                             128  thrpt    5      6328.703 ±     284.399    B/op
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                         128  thrpt    5         0.037 ±       0.164  MB/sec
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5         0.232 ±       1.018    B/op
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                     128  thrpt    5       942.936 ±    1419.767  MB/sec
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5      5841.454 ±    8816.527    B/op
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.count                                       128  thrpt    5         7.000                counts
[info] MutableLongMapOfBooleansBenchmark.readJsoniterScala:·gc.time                                        128  thrpt    5         6.000                    ms
[info] MutableLongMapOfBooleansBenchmark.readPlayJson                                                      128  thrpt    5     37925.520 ±    1277.194   ops/s
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.alloc.rate                                       128  thrpt    5      1948.059 ±      39.700  MB/sec
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm                                  128  thrpt    5     80850.995 ±    2552.091    B/op
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                              128  thrpt    5         0.037 ±       0.088  MB/sec
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5         1.548 ±       3.620    B/op
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                          128  thrpt    5      1892.342 ±    1166.423  MB/sec
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5     78586.871 ±   49586.320    B/op
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.count                                            128  thrpt    5        14.000                counts
[info] MutableLongMapOfBooleansBenchmark.readPlayJson:·gc.time                                             128  thrpt    5        14.000                    ms
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala                                                 128  thrpt    5     98259.950 ±    4826.886   ops/s
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate                                  128  thrpt    5       922.260 ±      74.492  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm                             128  thrpt    5     14774.407 ±     713.344    B/op
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                         128  thrpt    5         0.037 ±       0.200  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                    128  thrpt    5         0.597 ±       3.180    B/op
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                     128  thrpt    5       943.741 ±    1421.571  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                128  thrpt    5     15097.251 ±   22445.201    B/op
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.count                                       128  thrpt    5         7.000                counts
[info] MutableLongMapOfBooleansBenchmark.writeJacksonScala:·gc.time                                        128  thrpt    5         7.000                    ms
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala                                                128  thrpt    5    314647.066 ±   25558.138   ops/s
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate                                 128  thrpt    5       434.560 ±      59.919  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                            128  thrpt    5      2173.191 ±     188.326    B/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                        128  thrpt    5         0.591 ±       5.003  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5         2.989 ±      25.300    B/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                    128  thrpt    5       404.012 ±    1420.161  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5      2011.214 ±    7070.889    B/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.count                                      128  thrpt    5         3.000                counts
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScala:·gc.time                                       128  thrpt    5         7.000                    ms
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc                                        128  thrpt    5    341933.449 ±    3974.547   ops/s
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                         128  thrpt    5         4.563 ±       9.311  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                    128  thrpt    5        21.030 ±      43.257    B/op
[info] MutableLongMapOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count                              128  thrpt    5           ≈ 0                counts
[info] MutableLongMapOfBooleansBenchmark.writePlayJson                                                     128  thrpt    5     49201.173 ±     936.305   ops/s
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.alloc.rate                                      128  thrpt    5      1271.834 ±      42.092  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm                                 128  thrpt    5     40685.624 ±    1237.229    B/op
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                             128  thrpt    5         0.029 ±       0.122  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5         0.934 ±       3.900    B/op
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                         128  thrpt    5      1214.413 ±    1161.292  MB/sec
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5     38867.738 ±   37394.126    B/op
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.count                                           128  thrpt    5         9.000                counts
[info] MutableLongMapOfBooleansBenchmark.writePlayJson:·gc.time                                            128  thrpt    5        10.000                    ms
[info] MutableMapOfIntsToBooleansBenchmark.readCirce                                                       128  thrpt    5     72743.382 ±    1950.048   ops/s
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.alloc.rate                                        128  thrpt    5      1356.861 ±      64.770  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.alloc.rate.norm                                   128  thrpt    5     29358.312 ±     905.538    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space                               128  thrpt    5         0.029 ±       0.176  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5         0.631 ±       3.797    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space                           128  thrpt    5      1210.107 ±    1156.107  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5     26159.620 ±   24701.152    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.count                                             128  thrpt    5         9.000                counts
[info] MutableMapOfIntsToBooleansBenchmark.readCirce:·gc.time                                              128  thrpt    5         8.000                    ms
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala                                                128  thrpt    5    119337.568 ±    2797.532   ops/s
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.alloc.rate                                 128  thrpt    5       601.545 ±      19.487  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm                            128  thrpt    5      7934.532 ±     401.873    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                        128  thrpt    5         0.266 ±       1.940  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                   128  thrpt    5         3.522 ±      25.641    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                    128  thrpt    5       673.343 ±       0.705  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm               128  thrpt    5      8881.331 ±     206.804    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.count                                      128  thrpt    5         5.000                counts
[info] MutableMapOfIntsToBooleansBenchmark.readJacksonScala:·gc.time                                       128  thrpt    5         6.000                    ms
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala                                               128  thrpt    5    251047.342 ±   13599.321   ops/s
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.alloc.rate                                128  thrpt    5      1061.315 ±      84.904  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm                           128  thrpt    5      6653.171 ±     277.282    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                       128  thrpt    5         0.017 ±       0.143  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                  128  thrpt    5         0.104 ±       0.893    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                   128  thrpt    5      1076.309 ±    1418.765  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm              128  thrpt    5      6734.188 ±    8721.339    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.count                                     128  thrpt    5         8.000                counts
[info] MutableMapOfIntsToBooleansBenchmark.readJsoniterScala:·gc.time                                      128  thrpt    5         8.000                    ms
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson                                                    128  thrpt    5     27655.268 ±     876.462   ops/s
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.alloc.rate                                     128  thrpt    5      1492.005 ±      60.299  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm                                128  thrpt    5     84906.369 ±    3309.674    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                            128  thrpt    5         0.029 ±       0.134  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5         1.662 ±       7.661    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                        128  thrpt    5      1485.470 ±    1157.530  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5     84554.180 ±   66434.620    B/op
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.count                                          128  thrpt    5        11.000                counts
[info] MutableMapOfIntsToBooleansBenchmark.readPlayJson:·gc.time                                           128  thrpt    5        11.000                    ms
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala                                               128  thrpt    5    146151.989 ±    5010.782   ops/s
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.alloc.rate                                128  thrpt    5       775.482 ±      40.687  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm                           128  thrpt    5      8351.221 ±     389.245    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                       128  thrpt    5         0.037 ±       0.215  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                  128  thrpt    5         0.405 ±       2.317    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                   128  thrpt    5       808.922 ±    1160.414  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm              128  thrpt    5      8709.438 ±   12454.923    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.count                                     128  thrpt    5         6.000                counts
[info] MutableMapOfIntsToBooleansBenchmark.writeJacksonScala:·gc.time                                      128  thrpt    5         5.000                    ms
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala                                              128  thrpt    5    434265.063 ±   27411.878   ops/s
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate                               128  thrpt    5      1300.944 ±      88.910  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                          128  thrpt    5      4715.179 ±     121.070    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                      128  thrpt    5         0.054 ±       0.201  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                 128  thrpt    5         0.196 ±       0.729    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                  128  thrpt    5      1211.814 ±    1160.569  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm             128  thrpt    5      4389.199 ±    4167.356    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.count                                    128  thrpt    5         9.000                counts
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScala:·gc.time                                     128  thrpt    5         8.000                    ms
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc                                      128  thrpt    5    479570.507 ±    7467.356   ops/s
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                       128  thrpt    5       905.561 ±      61.694  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                  128  thrpt    5      2971.975 ±     183.391    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space              128  thrpt    5         0.025 ±       0.174  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm         128  thrpt    5         0.082 ±       0.570    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space          128  thrpt    5       807.127 ±    1158.568  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm     128  thrpt    5      2648.727 ±    3797.270    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count                            128  thrpt    5         6.000                counts
[info] MutableMapOfIntsToBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.time                             128  thrpt    5         6.000                    ms
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson                                                   128  thrpt    5     62989.165 ±     517.482   ops/s
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.alloc.rate                                    128  thrpt    5      1381.094 ±      30.630  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm                               128  thrpt    5     34512.220 ±     925.220    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                           128  thrpt    5         0.017 ±       0.088  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5         0.416 ±       2.191    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                       128  thrpt    5      1349.845 ±       6.340  MB/sec
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5     33731.180 ±     285.528    B/op
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.count                                         128  thrpt    5        10.000                counts
[info] MutableMapOfIntsToBooleansBenchmark.writePlayJson:·gc.time                                          128  thrpt    5        11.000                    ms
[info] MutableSetOfIntsBenchmark.readCirce                                                                 128  thrpt    5     98678.135 ±     739.939   ops/s
[info] MutableSetOfIntsBenchmark.readCirce:·gc.alloc.rate                                                  128  thrpt    5      1521.160 ±      27.971  MB/sec
[info] MutableSetOfIntsBenchmark.readCirce:·gc.alloc.rate.norm                                             128  thrpt    5     24262.134 ±     310.486    B/op
[info] MutableSetOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                         128  thrpt    5         0.050 ±       0.072  MB/sec
[info] MutableSetOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5         0.797 ±       1.145    B/op
[info] MutableSetOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                     128  thrpt    5      1479.819 ±    1161.608  MB/sec
[info] MutableSetOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5     23600.824 ±   18466.205    B/op
[info] MutableSetOfIntsBenchmark.readCirce:·gc.count                                                       128  thrpt    5        11.000                counts
[info] MutableSetOfIntsBenchmark.readCirce:·gc.time                                                        128  thrpt    5         9.000                    ms
[info] MutableSetOfIntsBenchmark.readJacksonScala                                                          128  thrpt    5    171718.513 ±    3750.334   ops/s
[info] MutableSetOfIntsBenchmark.readJacksonScala:·gc.alloc.rate                                           128  thrpt    5       737.902 ±      14.456  MB/sec
[info] MutableSetOfIntsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                      128  thrpt    5      6763.981 ±     132.942    B/op
[info] MutableSetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5         0.017 ±       0.067  MB/sec
[info] MutableSetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5         0.153 ±       0.613    B/op
[info] MutableSetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5       674.041 ±       0.210  MB/sec
[info] MutableSetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5      6178.676 ±     135.990    B/op
[info] MutableSetOfIntsBenchmark.readJacksonScala:·gc.count                                                128  thrpt    5         5.000                counts
[info] MutableSetOfIntsBenchmark.readJacksonScala:·gc.time                                                 128  thrpt    5         6.000                    ms
[info] MutableSetOfIntsBenchmark.readJsoniterScala                                                         128  thrpt    5    268271.675 ±    2518.654   ops/s
[info] MutableSetOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate                                          128  thrpt    5       985.633 ±      44.767  MB/sec
[info] MutableSetOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                     128  thrpt    5      5783.428 ±     244.490    B/op
[info] MutableSetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5         0.029 ±       0.134  MB/sec
[info] MutableSetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5         0.171 ±       0.786    B/op
[info] MutableSetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5      1076.521 ±    1419.476  MB/sec
[info] MutableSetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5      6315.782 ±    8316.838    B/op
[info] MutableSetOfIntsBenchmark.readJsoniterScala:·gc.count                                               128  thrpt    5         8.000                counts
[info] MutableSetOfIntsBenchmark.readJsoniterScala:·gc.time                                                128  thrpt    5         7.000                    ms
[info] MutableSetOfIntsBenchmark.readPlayJson                                                              128  thrpt    5     65768.243 ±     383.017   ops/s
[info] MutableSetOfIntsBenchmark.readPlayJson:·gc.alloc.rate                                               128  thrpt    5      2566.624 ±      84.847  MB/sec
[info] MutableSetOfIntsBenchmark.readPlayJson:·gc.alloc.rate.norm                                          128  thrpt    5     61423.913 ±    2016.835    B/op
[info] MutableSetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                      128  thrpt    5         0.046 ±       0.105  MB/sec
[info] MutableSetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5         1.096 ±       2.496    B/op
[info] MutableSetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                  128  thrpt    5      2440.906 ±    1426.627  MB/sec
[info] MutableSetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5     58419.626 ±   34271.924    B/op
[info] MutableSetOfIntsBenchmark.readPlayJson:·gc.count                                                    128  thrpt    5        18.000                counts
[info] MutableSetOfIntsBenchmark.readPlayJson:·gc.time                                                     128  thrpt    5        17.000                    ms
[info] MutableSetOfIntsBenchmark.readUPickle                                                               128  thrpt    5    140788.642 ±    4132.685   ops/s
[info] MutableSetOfIntsBenchmark.readUPickle:·gc.alloc.rate                                                128  thrpt    5      1129.650 ±      74.338  MB/sec
[info] MutableSetOfIntsBenchmark.readUPickle:·gc.alloc.rate.norm                                           128  thrpt    5     12628.564 ±     464.826    B/op
[info] MutableSetOfIntsBenchmark.readUPickle:·gc.churn.PS_Eden_Space                                       128  thrpt    5         0.029 ±       0.122  MB/sec
[info] MutableSetOfIntsBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5         0.325 ±       1.359    B/op
[info] MutableSetOfIntsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space                                   128  thrpt    5      1210.024 ±    1158.016  MB/sec
[info] MutableSetOfIntsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5     13513.549 ±   12758.010    B/op
[info] MutableSetOfIntsBenchmark.readUPickle:·gc.count                                                     128  thrpt    5         9.000                counts
[info] MutableSetOfIntsBenchmark.readUPickle:·gc.time                                                      128  thrpt    5         8.000                    ms
[info] MutableSetOfIntsBenchmark.writeCirce                                                                128  thrpt    5    186981.651 ±    1555.947   ops/s
[info] MutableSetOfIntsBenchmark.writeCirce:·gc.alloc.rate                                                 128  thrpt    5       904.079 ±      28.201  MB/sec
[info] MutableSetOfIntsBenchmark.writeCirce:·gc.alloc.rate.norm                                            128  thrpt    5      7610.421 ±     249.522    B/op
[info] MutableSetOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                        128  thrpt    5         0.033 ±       0.134  MB/sec
[info] MutableSetOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5         0.280 ±       1.127    B/op
[info] MutableSetOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                    128  thrpt    5       944.656 ±    1423.890  MB/sec
[info] MutableSetOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5      7952.763 ±   11997.347    B/op
[info] MutableSetOfIntsBenchmark.writeCirce:·gc.count                                                      128  thrpt    5         7.000                counts
[info] MutableSetOfIntsBenchmark.writeCirce:·gc.time                                                       128  thrpt    5         6.000                    ms
[info] MutableSetOfIntsBenchmark.writeJacksonScala                                                         128  thrpt    5    475169.311 ±    4495.636   ops/s
[info] MutableSetOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate                                          128  thrpt    5       385.807 ±      43.307  MB/sec
[info] MutableSetOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                     128  thrpt    5      1278.030 ±     138.104    B/op
[info] MutableSetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5         0.221 ±       1.900  MB/sec
[info] MutableSetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5         0.731 ±       6.294    B/op
[info] MutableSetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5       404.401 ±    1421.525  MB/sec
[info] MutableSetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5      1339.853 ±    4709.808    B/op
[info] MutableSetOfIntsBenchmark.writeJacksonScala:·gc.count                                               128  thrpt    5         3.000                counts
[info] MutableSetOfIntsBenchmark.writeJacksonScala:·gc.time                                                128  thrpt    5         6.000                    ms
[info] MutableSetOfIntsBenchmark.writeJsoniterScala                                                        128  thrpt    5    585787.516 ±    8454.986   ops/s
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate                                         128  thrpt    5       321.431 ±      27.744  MB/sec
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                    128  thrpt    5       863.804 ±      84.015    B/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5       237.100 ±    1269.584  MB/sec
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5       639.209 ±    3422.852    B/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.count                                              128  thrpt    5         2.000                counts
[info] MutableSetOfIntsBenchmark.writeJsoniterScala:·gc.time                                               128  thrpt    5         5.000                    ms
[info] MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc                                                128  thrpt    5    617776.599 ±   10703.461   ops/s
[info] MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                 128  thrpt    5         6.293 ±       0.112  MB/sec
[info] MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                            128  thrpt    5        16.033 ±       0.274    B/op
[info] MutableSetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                      128  thrpt    5           ≈ 0                counts
[info] MutableSetOfIntsBenchmark.writePlayJson                                                             128  thrpt    5     34182.441 ±     136.074   ops/s
[info] MutableSetOfIntsBenchmark.writePlayJson:·gc.alloc.rate                                              128  thrpt    5      1694.226 ±      25.843  MB/sec
[info] MutableSetOfIntsBenchmark.writePlayJson:·gc.alloc.rate.norm                                         128  thrpt    5     78015.301 ±    1181.082    B/op
[info] MutableSetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                     128  thrpt    5         0.050 ±       0.146  MB/sec
[info] MutableSetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5         2.300 ±       6.707    B/op
[info] MutableSetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                 128  thrpt    5      1622.532 ±    1421.278  MB/sec
[info] MutableSetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5     74720.105 ±   65587.390    B/op
[info] MutableSetOfIntsBenchmark.writePlayJson:·gc.count                                                   128  thrpt    5        12.000                counts
[info] MutableSetOfIntsBenchmark.writePlayJson:·gc.time                                                    128  thrpt    5        11.000                    ms
[info] MutableSetOfIntsBenchmark.writeUPickle                                                              128  thrpt    5    124553.007 ±    6208.282   ops/s
[info] MutableSetOfIntsBenchmark.writeUPickle:·gc.alloc.rate                                               128  thrpt    5       826.226 ±      56.489  MB/sec
[info] MutableSetOfIntsBenchmark.writeUPickle:·gc.alloc.rate.norm                                          128  thrpt    5     10439.948 ±     371.824    B/op
[info] MutableSetOfIntsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space                                      128  thrpt    5         0.025 ±       0.143  MB/sec
[info] MutableSetOfIntsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5         0.313 ±       1.796    B/op
[info] MutableSetOfIntsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space                                  128  thrpt    5       808.408 ±    1161.631  MB/sec
[info] MutableSetOfIntsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5     10201.941 ±   14405.318    B/op
[info] MutableSetOfIntsBenchmark.writeUPickle:·gc.count                                                    128  thrpt    5         6.000                counts
[info] MutableSetOfIntsBenchmark.writeUPickle:·gc.time                                                     128  thrpt    5         6.000                    ms
[info] NestedStructsBenchmark.readCirce                                                                    128  thrpt    5     64830.411 ±    2992.306   ops/s
[info] NestedStructsBenchmark.readCirce:·gc.alloc.rate                                                     128  thrpt    5      2624.524 ±     138.902  MB/sec
[info] NestedStructsBenchmark.readCirce:·gc.alloc.rate.norm                                                128  thrpt    5     63719.501 ±    1595.899    B/op
[info] NestedStructsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                            128  thrpt    5         0.046 ±       0.104  MB/sec
[info] NestedStructsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                       128  thrpt    5         1.110 ±       2.507    B/op
[info] NestedStructsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                        128  thrpt    5      2578.446 ±    1163.747  MB/sec
[info] NestedStructsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                   128  thrpt    5     62548.812 ±   26258.783    B/op
[info] NestedStructsBenchmark.readCirce:·gc.count                                                          128  thrpt    5        19.000                counts
[info] NestedStructsBenchmark.readCirce:·gc.time                                                           128  thrpt    5        18.000                    ms
[info] NestedStructsBenchmark.readJacksonScala                                                             128  thrpt    5    131508.473 ±    1206.905   ops/s
[info] NestedStructsBenchmark.readJacksonScala:·gc.alloc.rate                                              128  thrpt    5      1738.491 ±      30.077  MB/sec
[info] NestedStructsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                         128  thrpt    5     20807.484 ±     449.349    B/op
[info] NestedStructsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                     128  thrpt    5         0.042 ±       0.113  MB/sec
[info] NestedStructsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5         0.498 ±       1.352    B/op
[info] NestedStructsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                 128  thrpt    5      1758.102 ±    1426.235  MB/sec
[info] NestedStructsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5     21041.908 ±   17066.907    B/op
[info] NestedStructsBenchmark.readJacksonScala:·gc.count                                                   128  thrpt    5        13.000                counts
[info] NestedStructsBenchmark.readJacksonScala:·gc.time                                                    128  thrpt    5        12.000                    ms
[info] NestedStructsBenchmark.readJsoniterScala                                                            128  thrpt    5    640405.297 ±   10399.429   ops/s
[info] NestedStructsBenchmark.readJsoniterScala:·gc.alloc.rate                                             128  thrpt    5      1723.755 ±      65.142  MB/sec
[info] NestedStructsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                        128  thrpt    5      4237.030 ±     177.581    B/op
[info] NestedStructsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5         0.054 ±       0.134  MB/sec
[info] NestedStructsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5         0.133 ±       0.331    B/op
[info] NestedStructsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5      1618.657 ±    1422.565  MB/sec
[info] NestedStructsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5      3980.444 ±    3537.258    B/op
[info] NestedStructsBenchmark.readJsoniterScala:·gc.count                                                  128  thrpt    5        12.000                counts
[info] NestedStructsBenchmark.readJsoniterScala:·gc.time                                                   128  thrpt    5        11.000                    ms
[info] NestedStructsBenchmark.readPlayJson                                                                 128  thrpt    5     19559.927 ±    1590.926   ops/s
[info] NestedStructsBenchmark.readPlayJson:·gc.alloc.rate                                                  128  thrpt    5      2605.364 ±      35.743  MB/sec
[info] NestedStructsBenchmark.readPlayJson:·gc.alloc.rate.norm                                             128  thrpt    5    209730.301 ±   19486.934    B/op
[info] NestedStructsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                         128  thrpt    5         0.071 ±       0.156  MB/sec
[info] NestedStructsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5         5.741 ±      13.099    B/op
[info] NestedStructsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                     128  thrpt    5      2571.926 ±    1159.376  MB/sec
[info] NestedStructsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5    207108.031 ±   97677.018    B/op
[info] NestedStructsBenchmark.readPlayJson:·gc.count                                                       128  thrpt    5        19.000                counts
[info] NestedStructsBenchmark.readPlayJson:·gc.time                                                        128  thrpt    5        22.000                    ms
[info] NestedStructsBenchmark.writeCirce                                                                   128  thrpt    5     74427.121 ±    1093.323   ops/s
[info] NestedStructsBenchmark.writeCirce:·gc.alloc.rate                                                    128  thrpt    5      3077.806 ±     124.471  MB/sec
[info] NestedStructsBenchmark.writeCirce:·gc.alloc.rate.norm                                               128  thrpt    5     65086.395 ±    2013.516    B/op
[info] NestedStructsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                           128  thrpt    5         0.104 ±       0.057  MB/sec
[info] NestedStructsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                      128  thrpt    5         2.201 ±       1.204    B/op
[info] NestedStructsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                       128  thrpt    5      2989.243 ±    1437.179  MB/sec
[info] NestedStructsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                  128  thrpt    5     63206.431 ±   30059.367    B/op
[info] NestedStructsBenchmark.writeCirce:·gc.count                                                         128  thrpt    5        22.000                counts
[info] NestedStructsBenchmark.writeCirce:·gc.time                                                          128  thrpt    5        19.000                    ms
[info] NestedStructsBenchmark.writeJacksonScala                                                            128  thrpt    5    286181.659 ±    6723.284   ops/s
[info] NestedStructsBenchmark.writeJacksonScala:·gc.alloc.rate                                             128  thrpt    5      1370.414 ±      36.045  MB/sec
[info] NestedStructsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                        128  thrpt    5      7537.327 ±     270.961    B/op
[info] NestedStructsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                    128  thrpt    5         0.042 ±       0.204  MB/sec
[info] NestedStructsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5         0.228 ±       1.117    B/op
[info] NestedStructsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                128  thrpt    5      1349.926 ±       5.722  MB/sec
[info] NestedStructsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5      7424.602 ±     148.911    B/op
[info] NestedStructsBenchmark.writeJacksonScala:·gc.count                                                  128  thrpt    5        10.000                counts
[info] NestedStructsBenchmark.writeJacksonScala:·gc.time                                                   128  thrpt    5        10.000                    ms
[info] NestedStructsBenchmark.writeJsoniterScala                                                           128  thrpt    5   1225621.712 ±   62149.391   ops/s
[info] NestedStructsBenchmark.writeJsoniterScala:·gc.alloc.rate                                            128  thrpt    5       635.515 ±      34.097  MB/sec
[info] NestedStructsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                       128  thrpt    5       816.150 ±      21.009    B/op
[info] NestedStructsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                   128  thrpt    5         0.562 ±       4.615  MB/sec
[info] NestedStructsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5         0.714 ±       5.860    B/op
[info] NestedStructsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                               128  thrpt    5       673.275 ±       1.936  MB/sec
[info] NestedStructsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5       864.748 ±      41.516    B/op
[info] NestedStructsBenchmark.writeJsoniterScala:·gc.count                                                 128  thrpt    5         5.000                counts
[info] NestedStructsBenchmark.writeJsoniterScala:·gc.time                                                  128  thrpt    5         6.000                    ms
[info] NestedStructsBenchmark.writeJsoniterScalaPrealloc                                                   128  thrpt    5   1329613.761 ±    8398.938   ops/s
[info] NestedStructsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                    128  thrpt    5         0.034 ±       0.293  MB/sec
[info] NestedStructsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                               128  thrpt    5         0.041 ±       0.347    B/op
[info] NestedStructsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                         128  thrpt    5           ≈ 0                counts
[info] NestedStructsBenchmark.writePlayJson                                                                128  thrpt    5     46281.398 ±    1819.983   ops/s
[info] NestedStructsBenchmark.writePlayJson:·gc.alloc.rate                                                 128  thrpt    5      2530.738 ±     165.190  MB/sec
[info] NestedStructsBenchmark.writePlayJson:·gc.alloc.rate.norm                                            128  thrpt    5     86071.400 ±    3553.031    B/op
[info] NestedStructsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                        128  thrpt    5         0.021 ±       0.139  MB/sec
[info] NestedStructsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5         0.700 ±       4.653    B/op
[info] NestedStructsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                    128  thrpt    5      2438.226 ±    1424.238  MB/sec
[info] NestedStructsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5     82868.390 ±   46551.497    B/op
[info] NestedStructsBenchmark.writePlayJson:·gc.count                                                      128  thrpt    5        18.000                counts
[info] NestedStructsBenchmark.writePlayJson:·gc.time                                                       128  thrpt    5        21.000                    ms
[info] PrimitivesBenchmark.readCirce                                                                       N/A  thrpt    5    844034.974 ±   28017.601   ops/s
[info] PrimitivesBenchmark.readCirce:·gc.alloc.rate                                                        N/A  thrpt    5      2210.577 ±      53.825  MB/sec
[info] PrimitivesBenchmark.readCirce:·gc.alloc.rate.norm                                                   N/A  thrpt    5      4122.412 ±      79.321    B/op
[info] PrimitivesBenchmark.readCirce:·gc.churn.PS_Eden_Space                                               N/A  thrpt    5         0.058 ±       0.174  MB/sec
[info] PrimitivesBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                          N/A  thrpt    5         0.108 ±       0.319    B/op
[info] PrimitivesBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                           N/A  thrpt    5      2168.685 ±    1169.503  MB/sec
[info] PrimitivesBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                      N/A  thrpt    5      4045.918 ±    2244.302    B/op
[info] PrimitivesBenchmark.readCirce:·gc.count                                                             N/A  thrpt    5        16.000                counts
[info] PrimitivesBenchmark.readCirce:·gc.time                                                              N/A  thrpt    5        14.000                    ms
[info] PrimitivesBenchmark.readJacksonScala                                                                N/A  thrpt    5   1789831.995 ±   44260.645   ops/s
[info] PrimitivesBenchmark.readJacksonScala:·gc.alloc.rate                                                 N/A  thrpt    5      1121.929 ±      58.272  MB/sec
[info] PrimitivesBenchmark.readJacksonScala:·gc.alloc.rate.norm                                            N/A  thrpt    5       986.592 ±      37.723    B/op
[info] PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                        N/A  thrpt    5         0.037 ±       0.164  MB/sec
[info] PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                   N/A  thrpt    5         0.033 ±       0.144    B/op
[info] PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                    N/A  thrpt    5      1077.072 ±    1420.595  MB/sec
[info] PrimitivesBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                               N/A  thrpt    5       946.702 ±    1243.359    B/op
[info] PrimitivesBenchmark.readJacksonScala:·gc.count                                                      N/A  thrpt    5         8.000                counts
[info] PrimitivesBenchmark.readJacksonScala:·gc.time                                                       N/A  thrpt    5         8.000                    ms
[info] PrimitivesBenchmark.readJsoniterScala                                                               N/A  thrpt    5   7753858.345 ±  151205.315   ops/s
[info] PrimitivesBenchmark.readJsoniterScala:·gc.alloc.rate                                                N/A  thrpt    5       241.159 ±      24.020  MB/sec
[info] PrimitivesBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                           N/A  thrpt    5        48.957 ±       5.090    B/op
[info] PrimitivesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                   N/A  thrpt    5       204.624 ±    1078.924  MB/sec
[info] PrimitivesBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                              N/A  thrpt    5        41.597 ±     219.331    B/op
[info] PrimitivesBenchmark.readJsoniterScala:·gc.count                                                     N/A  thrpt    5         2.000                counts
[info] PrimitivesBenchmark.readJsoniterScala:·gc.time                                                      N/A  thrpt    5         5.000                    ms
[info] PrimitivesBenchmark.readPlayJson                                                                    N/A  thrpt    5    308435.826 ±    8914.976   ops/s
[info] PrimitivesBenchmark.readPlayJson:·gc.alloc.rate                                                     N/A  thrpt    5      2038.376 ±      89.636  MB/sec
[info] PrimitivesBenchmark.readPlayJson:·gc.alloc.rate.norm                                                N/A  thrpt    5     10401.030 ±     224.153    B/op
[info] PrimitivesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                            N/A  thrpt    5         0.033 ±       0.091  MB/sec
[info] PrimitivesBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                       N/A  thrpt    5         0.170 ±       0.469    B/op
[info] PrimitivesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                        N/A  thrpt    5      2027.057 ±      14.858  MB/sec
[info] PrimitivesBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                   N/A  thrpt    5     10343.851 ±     267.412    B/op
[info] PrimitivesBenchmark.readPlayJson:·gc.count                                                          N/A  thrpt    5        15.000                counts
[info] PrimitivesBenchmark.readPlayJson:·gc.time                                                           N/A  thrpt    5        16.000                    ms
[info] PrimitivesBenchmark.writeCirce                                                                      N/A  thrpt    5   1124577.973 ±   25799.201   ops/s
[info] PrimitivesBenchmark.writeCirce:·gc.alloc.rate                                                       N/A  thrpt    5      1606.158 ±      47.740  MB/sec
[info] PrimitivesBenchmark.writeCirce:·gc.alloc.rate.norm                                                  N/A  thrpt    5      2248.079 ±      67.602    B/op
[info] PrimitivesBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                              N/A  thrpt    5         0.025 ±       0.105  MB/sec
[info] PrimitivesBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                         N/A  thrpt    5         0.035 ±       0.146    B/op
[info] PrimitivesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                          N/A  thrpt    5      1622.363 ±    1428.796  MB/sec
[info] PrimitivesBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                     N/A  thrpt    5      2270.638 ±    1997.208    B/op
[info] PrimitivesBenchmark.writeCirce:·gc.count                                                            N/A  thrpt    5        12.000                counts
[info] PrimitivesBenchmark.writeCirce:·gc.time                                                             N/A  thrpt    5        10.000                    ms
[info] PrimitivesBenchmark.writeJacksonScala                                                               N/A  thrpt    5   2576166.929 ±   48802.497   ops/s
[info] PrimitivesBenchmark.writeJacksonScala:·gc.alloc.rate                                                N/A  thrpt    5      1128.578 ±      50.193  MB/sec
[info] PrimitivesBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                           N/A  thrpt    5       689.518 ±      23.454    B/op
[info] PrimitivesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                       N/A  thrpt    5         0.042 ±       0.170  MB/sec
[info] PrimitivesBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                  N/A  thrpt    5         0.025 ±       0.104    B/op
[info] PrimitivesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                   N/A  thrpt    5      1078.918 ±    1421.713  MB/sec
[info] PrimitivesBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                              N/A  thrpt    5       659.017 ±     866.446    B/op
[info] PrimitivesBenchmark.writeJacksonScala:·gc.count                                                     N/A  thrpt    5         8.000                counts
[info] PrimitivesBenchmark.writeJacksonScala:·gc.time                                                      N/A  thrpt    5         8.000                    ms
[info] PrimitivesBenchmark.writeJsoniterScala                                                              N/A  thrpt    5   5801031.150 ±  191877.542   ops/s
[info] PrimitivesBenchmark.writeJsoniterScala:·gc.alloc.rate                                               N/A  thrpt    5       669.821 ±      19.839  MB/sec
[info] PrimitivesBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                          N/A  thrpt    5       181.742 ±       1.908    B/op
[info] PrimitivesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                      N/A  thrpt    5         0.597 ±       4.965  MB/sec
[info] PrimitivesBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                                 N/A  thrpt    5         0.162 ±       1.344    B/op
[info] PrimitivesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                  N/A  thrpt    5       672.616 ±       1.990  MB/sec
[info] PrimitivesBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                             N/A  thrpt    5       182.509 ±       5.783    B/op
[info] PrimitivesBenchmark.writeJsoniterScala:·gc.count                                                    N/A  thrpt    5         5.000                counts
[info] PrimitivesBenchmark.writeJsoniterScala:·gc.time                                                     N/A  thrpt    5         6.000                    ms
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc                                                      N/A  thrpt    5   6180182.370 ±  261104.981   ops/s
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                       N/A  thrpt    5       385.353 ±      23.351  MB/sec
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                  N/A  thrpt    5        98.157 ±       8.119    B/op
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space                              N/A  thrpt    5         0.504 ±       4.337  MB/sec
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Eden_Space.norm                         N/A  thrpt    5         0.127 ±       1.096    B/op
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space                          N/A  thrpt    5       372.330 ±    1333.824  MB/sec
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.churn.PS_Survivor_Space.norm                     N/A  thrpt    5        95.304 ±     341.183    B/op
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.count                                            N/A  thrpt    5         3.000                counts
[info] PrimitivesBenchmark.writeJsoniterScalaPrealloc:·gc.time                                             N/A  thrpt    5         9.000                    ms
[info] PrimitivesBenchmark.writePlayJson                                                                   N/A  thrpt    5    424915.401 ±   16929.159   ops/s
[info] PrimitivesBenchmark.writePlayJson:·gc.alloc.rate                                                    N/A  thrpt    5      2305.312 ±      64.084  MB/sec
[info] PrimitivesBenchmark.writePlayJson:·gc.alloc.rate.norm                                               N/A  thrpt    5      8539.827 ±     209.995    B/op
[info] PrimitivesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                           N/A  thrpt    5         0.037 ±       0.143  MB/sec
[info] PrimitivesBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                      N/A  thrpt    5         0.138 ±       0.528    B/op
[info] PrimitivesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                       N/A  thrpt    5      2165.658 ±    1165.538  MB/sec
[info] PrimitivesBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                                  N/A  thrpt    5      8021.879 ±    4286.619    B/op
[info] PrimitivesBenchmark.writePlayJson:·gc.count                                                         N/A  thrpt    5        16.000                counts
[info] PrimitivesBenchmark.writePlayJson:·gc.time                                                          N/A  thrpt    5        15.000                    ms
[info] SetOfIntsBenchmark.readCirce                                                                        128  thrpt    5     84755.825 ±    2131.849   ops/s
[info] SetOfIntsBenchmark.readCirce:·gc.alloc.rate                                                         128  thrpt    5      2300.776 ±      67.825  MB/sec
[info] SetOfIntsBenchmark.readCirce:·gc.alloc.rate.norm                                                    128  thrpt    5     42724.395 ±    1076.834    B/op
[info] SetOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                                128  thrpt    5         0.067 ±       0.088  MB/sec
[info] SetOfIntsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                           128  thrpt    5         1.238 ±       1.641    B/op
[info] SetOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                            128  thrpt    5      2300.285 ±    1426.070  MB/sec
[info] SetOfIntsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                       128  thrpt    5     42744.550 ±   27384.647    B/op
[info] SetOfIntsBenchmark.readCirce:·gc.count                                                              128  thrpt    5        17.000                counts
[info] SetOfIntsBenchmark.readCirce:·gc.time                                                               128  thrpt    5        15.000                    ms
[info] SetOfIntsBenchmark.readJacksonScala                                                                 128  thrpt    5    121153.630 ±    3756.970   ops/s
[info] SetOfIntsBenchmark.readJacksonScala:·gc.alloc.rate                                                  128  thrpt    5      1911.876 ±      73.227  MB/sec
[info] SetOfIntsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                             128  thrpt    5     24837.988 ±     415.834    B/op
[info] SetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                         128  thrpt    5         0.046 ±       0.067  MB/sec
[info] SetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5         0.595 ±       0.864    B/op
[info] SetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                     128  thrpt    5      1893.036 ±    1160.051  MB/sec
[info] SetOfIntsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5     24569.419 ±   14470.985    B/op
[info] SetOfIntsBenchmark.readJacksonScala:·gc.count                                                       128  thrpt    5        14.000                counts
[info] SetOfIntsBenchmark.readJacksonScala:·gc.time                                                        128  thrpt    5        15.000                    ms
[info] SetOfIntsBenchmark.readJsoniterScala                                                                128  thrpt    5    177417.959 ±    7421.835   ops/s
[info] SetOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate                                                 128  thrpt    5      2711.193 ±     105.255  MB/sec
[info] SetOfIntsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                            128  thrpt    5     24050.637 ±     231.174    B/op
[info] SetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                        128  thrpt    5         0.067 ±       0.067  MB/sec
[info] SetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5         0.592 ±       0.606    B/op
[info] SetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                    128  thrpt    5      2708.986 ±      26.786  MB/sec
[info] SetOfIntsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5     24032.996 ±     981.952    B/op
[info] SetOfIntsBenchmark.readJsoniterScala:·gc.count                                                      128  thrpt    5        20.000                counts
[info] SetOfIntsBenchmark.readJsoniterScala:·gc.time                                                       128  thrpt    5        18.000                    ms
[info] SetOfIntsBenchmark.readPlayJson                                                                     128  thrpt    5     60973.822 ±    1057.097   ops/s
[info] SetOfIntsBenchmark.readPlayJson:·gc.alloc.rate                                                      128  thrpt    5      3008.160 ±      94.609  MB/sec
[info] SetOfIntsBenchmark.readPlayJson:·gc.alloc.rate.norm                                                 128  thrpt    5     77655.148 ±    2662.132    B/op
[info] SetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                             128  thrpt    5         0.050 ±       0.156  MB/sec
[info] SetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                        128  thrpt    5         1.293 ±       4.058    B/op
[info] SetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                         128  thrpt    5      2850.217 ±    1169.553  MB/sec
[info] SetOfIntsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                    128  thrpt    5     73596.288 ±   31145.295    B/op
[info] SetOfIntsBenchmark.readPlayJson:·gc.count                                                           128  thrpt    5        21.000                counts
[info] SetOfIntsBenchmark.readPlayJson:·gc.time                                                            128  thrpt    5        20.000                    ms
[info] SetOfIntsBenchmark.readUPickle                                                                      128  thrpt    5    100319.021 ±    4083.957   ops/s
[info] SetOfIntsBenchmark.readUPickle:·gc.alloc.rate                                                       128  thrpt    5      1966.725 ±     119.040  MB/sec
[info] SetOfIntsBenchmark.readUPickle:·gc.alloc.rate.norm                                                  128  thrpt    5     30853.688 ±     780.256    B/op
[info] SetOfIntsBenchmark.readUPickle:·gc.churn.PS_Eden_Space                                              128  thrpt    5         0.046 ±       0.119  MB/sec
[info] SetOfIntsBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm                                         128  thrpt    5         0.715 ±       1.850    B/op
[info] SetOfIntsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space                                          128  thrpt    5      1889.437 ±    1166.575  MB/sec
[info] SetOfIntsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm                                     128  thrpt    5     29637.065 ±   18158.207    B/op
[info] SetOfIntsBenchmark.readUPickle:·gc.count                                                            128  thrpt    5        14.000                counts
[info] SetOfIntsBenchmark.readUPickle:·gc.time                                                             128  thrpt    5        14.000                    ms
[info] SetOfIntsBenchmark.writeCirce                                                                       128  thrpt    5    173005.999 ±    1748.686   ops/s
[info] SetOfIntsBenchmark.writeCirce:·gc.alloc.rate                                                        128  thrpt    5       850.819 ±      33.096  MB/sec
[info] SetOfIntsBenchmark.writeCirce:·gc.alloc.rate.norm                                                   128  thrpt    5      7740.408 ±     290.954    B/op
[info] SetOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                               128  thrpt    5         0.025 ±       0.174  MB/sec
[info] SetOfIntsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                          128  thrpt    5         0.227 ±       1.579    B/op
[info] SetOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                           128  thrpt    5       809.377 ±    1161.058  MB/sec
[info] SetOfIntsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                                      128  thrpt    5      7362.303 ±   10541.379    B/op
[info] SetOfIntsBenchmark.writeCirce:·gc.count                                                             128  thrpt    5         6.000                counts
[info] SetOfIntsBenchmark.writeCirce:·gc.time                                                              128  thrpt    5         5.000                    ms
[info] SetOfIntsBenchmark.writeJacksonScala                                                                128  thrpt    5    406135.886 ±    6750.824   ops/s
[info] SetOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate                                                 128  thrpt    5       365.882 ±      40.184  MB/sec
[info] SetOfIntsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                            128  thrpt    5      1418.230 ±     173.031    B/op
[info] SetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                        128  thrpt    5         0.204 ±       1.756  MB/sec
[info] SetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5         0.792 ±       6.817    B/op
[info] SetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                    128  thrpt    5       269.633 ±    1421.699  MB/sec
[info] SetOfIntsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5      1048.908 ±    5530.611    B/op
[info] SetOfIntsBenchmark.writeJacksonScala:·gc.count                                                      128  thrpt    5         2.000                counts
[info] SetOfIntsBenchmark.writeJacksonScala:·gc.time                                                       128  thrpt    5         4.000                    ms
[info] SetOfIntsBenchmark.writeJsoniterScala                                                               128  thrpt    5    625172.828 ±   62651.359   ops/s
[info] SetOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate                                                128  thrpt    5       346.226 ±      45.111  MB/sec
[info] SetOfIntsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                           128  thrpt    5       871.582 ±      67.184    B/op
[info] SetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                       128  thrpt    5         0.577 ±       4.876  MB/sec
[info] SetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5         1.435 ±      12.135    B/op
[info] SetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                   128  thrpt    5       371.958 ±    1332.227  MB/sec
[info] SetOfIntsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5       928.605 ±    3331.310    B/op
[info] SetOfIntsBenchmark.writeJsoniterScala:·gc.count                                                     128  thrpt    5         3.000                counts
[info] SetOfIntsBenchmark.writeJsoniterScala:·gc.time                                                      128  thrpt    5         8.000                    ms
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc                                                       128  thrpt    5    665640.793 ±    5613.230   ops/s
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                        128  thrpt    5         7.063 ±       1.784  MB/sec
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                   128  thrpt    5        16.700 ±       4.127    B/op
[info] SetOfIntsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                             128  thrpt    5           ≈ 0                counts
[info] SetOfIntsBenchmark.writePlayJson                                                                    128  thrpt    5     33268.050 ±     446.856   ops/s
[info] SetOfIntsBenchmark.writePlayJson:·gc.alloc.rate                                                     128  thrpt    5      1653.874 ±      59.720  MB/sec
[info] SetOfIntsBenchmark.writePlayJson:·gc.alloc.rate.norm                                                128  thrpt    5     78243.604 ±    2988.992    B/op
[info] SetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                            128  thrpt    5         0.017 ±       0.067  MB/sec
[info] SetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                       128  thrpt    5         0.788 ±       3.174    B/op
[info] SetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                        128  thrpt    5      1622.204 ±    1429.345  MB/sec
[info] SetOfIntsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                                   128  thrpt    5     76764.729 ±   68068.289    B/op
[info] SetOfIntsBenchmark.writePlayJson:·gc.count                                                          128  thrpt    5        12.000                counts
[info] SetOfIntsBenchmark.writePlayJson:·gc.time                                                           128  thrpt    5        11.000                    ms
[info] SetOfIntsBenchmark.writeUPickle                                                                     128  thrpt    5    122999.406 ±    1070.393   ops/s
[info] SetOfIntsBenchmark.writeUPickle:·gc.alloc.rate                                                      128  thrpt    5       826.471 ±      30.656  MB/sec
[info] SetOfIntsBenchmark.writeUPickle:·gc.alloc.rate.norm                                                 128  thrpt    5     10575.742 ±     444.473    B/op
[info] SetOfIntsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space                                             128  thrpt    5         0.021 ±       0.139  MB/sec
[info] SetOfIntsBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm                                        128  thrpt    5         0.267 ±       1.783    B/op
[info] SetOfIntsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space                                         128  thrpt    5       806.822 ±    1159.856  MB/sec
[info] SetOfIntsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm                                    128  thrpt    5     10325.809 ±   14872.624    B/op
[info] SetOfIntsBenchmark.writeUPickle:·gc.count                                                           128  thrpt    5         6.000                counts
[info] SetOfIntsBenchmark.writeUPickle:·gc.time                                                            128  thrpt    5         5.000                    ms
[info] StringOfAsciiCharsBenchmark.readCirce                                                               128  thrpt    5   3679796.866 ±   55163.808   ops/s
[info] StringOfAsciiCharsBenchmark.readCirce:·gc.alloc.rate                                                128  thrpt    5      2473.015 ±      57.903  MB/sec
[info] StringOfAsciiCharsBenchmark.readCirce:·gc.alloc.rate.norm                                           128  thrpt    5      1057.891 ±      31.757    B/op
[info] StringOfAsciiCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                       128  thrpt    5         0.092 ±       0.146  MB/sec
[info] StringOfAsciiCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5         0.039 ±       0.062    B/op
[info] StringOfAsciiCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                   128  thrpt    5      2301.382 ±    1430.191  MB/sec
[info] StringOfAsciiCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5       984.556 ±     614.687    B/op
[info] StringOfAsciiCharsBenchmark.readCirce:·gc.count                                                     128  thrpt    5        17.000                counts
[info] StringOfAsciiCharsBenchmark.readCirce:·gc.time                                                      128  thrpt    5        16.000                    ms
[info] StringOfAsciiCharsBenchmark.readDslJsonJava                                                         128  thrpt    5   3751743.661 ±  268524.333   ops/s
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.alloc.rate                                          128  thrpt    5       411.029 ±      46.143  MB/sec
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                     128  thrpt    5       172.410 ±      16.577    B/op
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                                 128  thrpt    5         0.800 ±       6.845  MB/sec
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5         0.347 ±       2.969    B/op
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                             128  thrpt    5       402.266 ±    1414.025  MB/sec
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5       169.893 ±     597.489    B/op
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.count                                               128  thrpt    5         3.000                counts
[info] StringOfAsciiCharsBenchmark.readDslJsonJava:·gc.time                                                128  thrpt    5         7.000                    ms
[info] StringOfAsciiCharsBenchmark.readJacksonScala                                                        128  thrpt    5   2846461.267 ±   49762.348   ops/s
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.alloc.rate                                         128  thrpt    5      1294.810 ±      47.777  MB/sec
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                    128  thrpt    5       715.998 ±      30.962    B/op
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                128  thrpt    5         0.071 ±       0.231  MB/sec
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5         0.039 ±       0.128    B/op
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5      1215.530 ±    1162.809  MB/sec
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5       672.249 ±     644.326    B/op
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.count                                              128  thrpt    5         9.000                counts
[info] StringOfAsciiCharsBenchmark.readJacksonScala:·gc.time                                               128  thrpt    5         9.000                    ms
[info] StringOfAsciiCharsBenchmark.readJsoniterScala                                                       128  thrpt    5   3951532.742 ±   75140.306   ops/s
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.alloc.rate                                        128  thrpt    5       434.591 ±      41.834  MB/sec
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                   128  thrpt    5       173.110 ±      18.324    B/op
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                               128  thrpt    5         0.537 ±       4.602  MB/sec
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5         0.216 ±       1.847    B/op
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5       404.347 ±    1421.338  MB/sec
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5       161.335 ±     567.129    B/op
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.count                                             128  thrpt    5         3.000                counts
[info] StringOfAsciiCharsBenchmark.readJsoniterScala:·gc.time                                              128  thrpt    5         7.000                    ms
[info] StringOfAsciiCharsBenchmark.readPlayJson                                                            128  thrpt    5   2933979.037 ±   34917.577   ops/s
[info] StringOfAsciiCharsBenchmark.readPlayJson:·gc.alloc.rate                                             128  thrpt    5      1506.024 ±      29.256  MB/sec
[info] StringOfAsciiCharsBenchmark.readPlayJson:·gc.alloc.rate.norm                                        128  thrpt    5       807.990 ±      19.521    B/op
[info] StringOfAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                    128  thrpt    5         0.067 ±       0.104  MB/sec
[info] StringOfAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5         0.036 ±       0.056    B/op
[info] StringOfAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                128  thrpt    5      1486.189 ±    1159.375  MB/sec
[info] StringOfAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5       797.471 ±     625.824    B/op
[info] StringOfAsciiCharsBenchmark.readPlayJson:·gc.count                                                  128  thrpt    5        11.000                counts
[info] StringOfAsciiCharsBenchmark.readPlayJson:·gc.time                                                   128  thrpt    5        10.000                    ms
[info] StringOfAsciiCharsBenchmark.readUPickle                                                             128  thrpt    5   4109816.248 ±  106989.773   ops/s
[info] StringOfAsciiCharsBenchmark.readUPickle:·gc.alloc.rate                                              128  thrpt    5      1981.397 ±      40.263  MB/sec
[info] StringOfAsciiCharsBenchmark.readUPickle:·gc.alloc.rate.norm                                         128  thrpt    5       758.846 ±      13.289    B/op
[info] StringOfAsciiCharsBenchmark.readUPickle:·gc.churn.PS_Eden_Space                                     128  thrpt    5         0.133 ±       0.445  MB/sec
[info] StringOfAsciiCharsBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5         0.051 ±       0.170    B/op
[info] StringOfAsciiCharsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space                                 128  thrpt    5      1891.460 ±    1159.760  MB/sec
[info] StringOfAsciiCharsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5       724.446 ±     445.302    B/op
[info] StringOfAsciiCharsBenchmark.readUPickle:·gc.count                                                   128  thrpt    5        14.000                counts
[info] StringOfAsciiCharsBenchmark.readUPickle:·gc.time                                                    128  thrpt    5        13.000                    ms
[info] StringOfAsciiCharsBenchmark.writeCirce                                                              128  thrpt    5   2275963.793 ±   30257.843   ops/s
[info] StringOfAsciiCharsBenchmark.writeCirce:·gc.alloc.rate                                               128  thrpt    5       558.676 ±      29.322  MB/sec
[info] StringOfAsciiCharsBenchmark.writeCirce:·gc.alloc.rate.norm                                          128  thrpt    5       386.410 ±      23.381    B/op
[info] StringOfAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                      128  thrpt    5         0.042 ±       0.272  MB/sec
[info] StringOfAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5         0.029 ±       0.188    B/op
[info] StringOfAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                  128  thrpt    5       539.335 ±    1160.959  MB/sec
[info] StringOfAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5       373.290 ±     803.561    B/op
[info] StringOfAsciiCharsBenchmark.writeCirce:·gc.count                                                    128  thrpt    5         4.000                counts
[info] StringOfAsciiCharsBenchmark.writeCirce:·gc.time                                                     128  thrpt    5         4.000                    ms
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava                                                        128  thrpt    5   5957402.033 ±  149443.645   ops/s
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.alloc.rate                                         128  thrpt    5       587.870 ±      22.649  MB/sec
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                    128  thrpt    5       155.327 ±       7.693    B/op
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space                                128  thrpt    5         0.806 ±       6.804  MB/sec
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5         0.212 ±       1.791    B/op
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                            128  thrpt    5       536.076 ±    1153.945  MB/sec
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5       141.903 ±     305.475    B/op
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.count                                              128  thrpt    5         4.000                counts
[info] StringOfAsciiCharsBenchmark.writeDslJsonJava:·gc.time                                               128  thrpt    5         6.000                    ms
[info] StringOfAsciiCharsBenchmark.writeJacksonScala                                                       128  thrpt    5   3398695.771 ±  317566.202   ops/s
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.alloc.rate                                        128  thrpt    5       920.632 ±      60.358  MB/sec
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                   128  thrpt    5       426.392 ±      19.056    B/op
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                               128  thrpt    5         0.017 ±       0.143  MB/sec
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                          128  thrpt    5         0.008 ±       0.069    B/op
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                           128  thrpt    5       808.834 ±    1160.783  MB/sec
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                      128  thrpt    5       377.212 ±     586.062    B/op
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.count                                             128  thrpt    5         6.000                counts
[info] StringOfAsciiCharsBenchmark.writeJacksonScala:·gc.time                                              128  thrpt    5         6.000                    ms
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala                                                      128  thrpt    5   5426670.906 ±  200588.833   ops/s
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.alloc.rate                                       128  thrpt    5       541.508 ±      34.643  MB/sec
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                  128  thrpt    5       157.075 ±      11.520    B/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                              128  thrpt    5         0.543 ±       4.633  MB/sec
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5         0.157 ±       1.341    B/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                          128  thrpt    5       539.549 ±    1161.420  MB/sec
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5       156.803 ±     337.592    B/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.count                                            128  thrpt    5         4.000                counts
[info] StringOfAsciiCharsBenchmark.writeJsoniterScala:·gc.time                                             128  thrpt    5         7.000                    ms
[info] StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc                                              128  thrpt    5   6505085.345 ±   89054.378   ops/s
[info] StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                               128  thrpt    5         0.091 ±       0.774  MB/sec
[info] StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                          128  thrpt    5         0.022 ±       0.187    B/op
[info] StringOfAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                    128  thrpt    5           ≈ 0                counts
[info] StringOfAsciiCharsBenchmark.writePlayJson                                                           128  thrpt    5   3657901.522 ±  167011.106   ops/s
[info] StringOfAsciiCharsBenchmark.writePlayJson:·gc.alloc.rate                                            128  thrpt    5      1032.607 ±      75.020  MB/sec
[info] StringOfAsciiCharsBenchmark.writePlayJson:·gc.alloc.rate.norm                                       128  thrpt    5       444.311 ±      16.245    B/op
[info] StringOfAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                   128  thrpt    5         0.050 ±       0.263  MB/sec
[info] StringOfAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5         0.022 ±       0.113    B/op
[info] StringOfAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                               128  thrpt    5      1079.334 ±    1423.331  MB/sec
[info] StringOfAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5       463.981 ±     606.457    B/op
[info] StringOfAsciiCharsBenchmark.writePlayJson:·gc.count                                                 128  thrpt    5         8.000                counts
[info] StringOfAsciiCharsBenchmark.writePlayJson:·gc.time                                                  128  thrpt    5         8.000                    ms
[info] StringOfAsciiCharsBenchmark.writeUPickle                                                            128  thrpt    5    437889.448 ±    8766.214   ops/s
[info] StringOfAsciiCharsBenchmark.writeUPickle:·gc.alloc.rate                                             128  thrpt    5       204.950 ±      16.088  MB/sec
[info] StringOfAsciiCharsBenchmark.writeUPickle:·gc.alloc.rate.norm                                        128  thrpt    5       736.690 ±      64.018    B/op
[info] StringOfAsciiCharsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space                                128  thrpt    5       204.673 ±    1079.179  MB/sec
[info] StringOfAsciiCharsBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5       737.200 ±    3887.150    B/op
[info] StringOfAsciiCharsBenchmark.writeUPickle:·gc.count                                                  128  thrpt    5         2.000                counts
[info] StringOfAsciiCharsBenchmark.writeUPickle:·gc.time                                                   128  thrpt    5         5.000                    ms
[info] StringOfNonAsciiCharsBenchmark.readCirce                                                            128  thrpt    5    889067.477 ±   27791.564   ops/s
[info] StringOfNonAsciiCharsBenchmark.readCirce:·gc.alloc.rate                                             128  thrpt    5      1465.250 ±      42.849  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readCirce:·gc.alloc.rate.norm                                        128  thrpt    5      2593.961 ±      33.347    B/op
[info] StringOfNonAsciiCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space                                    128  thrpt    5         0.050 ±       0.122  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                               128  thrpt    5         0.088 ±       0.215    B/op
[info] StringOfNonAsciiCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                128  thrpt    5      1345.923 ±       6.099  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                           128  thrpt    5      2382.814 ±      70.975    B/op
[info] StringOfNonAsciiCharsBenchmark.readCirce:·gc.count                                                  128  thrpt    5        10.000                counts
[info] StringOfNonAsciiCharsBenchmark.readCirce:·gc.time                                                   128  thrpt    5         9.000                    ms
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava                                                      128  thrpt    5   1804396.868 ±   14477.980   ops/s
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.alloc.rate                                       128  thrpt    5       514.850 ±      34.858  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.alloc.rate.norm                                  128  thrpt    5       449.154 ±      33.652    B/op
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space                              128  thrpt    5         0.778 ±       6.650  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Eden_Space.norm                         128  thrpt    5         0.679 ±       5.812    B/op
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space                          128  thrpt    5       402.287 ±    1414.095  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.churn.PS_Survivor_Space.norm                     128  thrpt    5       351.470 ±    1235.469    B/op
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.count                                            128  thrpt    5         3.000                counts
[info] StringOfNonAsciiCharsBenchmark.readDslJsonJava:·gc.time                                             128  thrpt    5         5.000                    ms
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala                                                     128  thrpt    5   1209731.103 ±   42106.643   ops/s
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.alloc.rate                                      128  thrpt    5       771.185 ±      37.955  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.alloc.rate.norm                                 128  thrpt    5      1003.517 ±      70.907    B/op
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                             128  thrpt    5         0.058 ±       0.250  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                        128  thrpt    5         0.076 ±       0.328    B/op
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                         128  thrpt    5       808.865 ±    1160.510  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5      1054.254 ±    1544.021    B/op
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.count                                           128  thrpt    5         6.000                counts
[info] StringOfNonAsciiCharsBenchmark.readJacksonScala:·gc.time                                            128  thrpt    5         6.000                    ms
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala                                                    128  thrpt    5   1663769.013 ±   19844.587   ops/s
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.alloc.rate                                     128  thrpt    5       477.184 ±      37.039  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                128  thrpt    5       451.492 ±      38.620    B/op
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                            128  thrpt    5         0.518 ±       4.374  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5         0.492 ±       4.155    B/op
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5       404.676 ±    1422.492  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5       383.522 ±    1348.141    B/op
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.count                                          128  thrpt    5         3.000                counts
[info] StringOfNonAsciiCharsBenchmark.readJsoniterScala:·gc.time                                           128  thrpt    5         6.000                    ms
[info] StringOfNonAsciiCharsBenchmark.readPlayJson                                                         128  thrpt    5   1242663.861 ±   20350.441   ops/s
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.alloc.rate                                          128  thrpt    5       824.752 ±      26.544  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.alloc.rate.norm                                     128  thrpt    5      1044.663 ±      36.025    B/op
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                 128  thrpt    5         0.021 ±       0.057  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5         0.026 ±       0.072    B/op
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                             128  thrpt    5       808.517 ±    1161.860  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5      1023.769 ±    1465.258    B/op
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.count                                               128  thrpt    5         6.000                counts
[info] StringOfNonAsciiCharsBenchmark.readPlayJson:·gc.time                                                128  thrpt    5         6.000                    ms
[info] StringOfNonAsciiCharsBenchmark.readUPickle                                                          128  thrpt    5   1140570.894 ±   52375.148   ops/s
[info] StringOfNonAsciiCharsBenchmark.readUPickle:·gc.alloc.rate                                           128  thrpt    5      1225.414 ±      58.232  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readUPickle:·gc.alloc.rate.norm                                      128  thrpt    5      1691.260 ±      59.732    B/op
[info] StringOfNonAsciiCharsBenchmark.readUPickle:·gc.churn.PS_Eden_Space                                  128  thrpt    5         0.062 ±       0.170  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5         0.086 ±       0.234    B/op
[info] StringOfNonAsciiCharsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space                              128  thrpt    5      1211.389 ±    1159.650  MB/sec
[info] StringOfNonAsciiCharsBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5      1672.220 ±    1605.155    B/op
[info] StringOfNonAsciiCharsBenchmark.readUPickle:·gc.count                                                128  thrpt    5         9.000                counts
[info] StringOfNonAsciiCharsBenchmark.readUPickle:·gc.time                                                 128  thrpt    5         8.000                    ms
[info] StringOfNonAsciiCharsBenchmark.writeCirce                                                           128  thrpt    5   1051344.444 ±    5680.908   ops/s
[info] StringOfNonAsciiCharsBenchmark.writeCirce:·gc.alloc.rate                                            128  thrpt    5       893.346 ±      31.451  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeCirce:·gc.alloc.rate.norm                                       128  thrpt    5      1337.364 ±      50.064    B/op
[info] StringOfNonAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                   128  thrpt    5         0.025 ±       0.215  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                              128  thrpt    5         0.037 ±       0.322    B/op
[info] StringOfNonAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                               128  thrpt    5       809.645 ±    1162.125  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                          128  thrpt    5      1212.249 ±    1743.466    B/op
[info] StringOfNonAsciiCharsBenchmark.writeCirce:·gc.count                                                 128  thrpt    5         6.000                counts
[info] StringOfNonAsciiCharsBenchmark.writeCirce:·gc.time                                                  128  thrpt    5         5.000                    ms
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava                                                     128  thrpt    5    817706.177 ±    9395.854   ops/s
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.alloc.rate                                      128  thrpt    5       216.510 ±      21.233  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.alloc.rate.norm                                 128  thrpt    5       416.743 ±      45.221    B/op
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space                         128  thrpt    5       236.490 ±    1265.652  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.churn.PS_Survivor_Space.norm                    128  thrpt    5       456.547 ±    2443.011    B/op
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.count                                           128  thrpt    5         2.000                counts
[info] StringOfNonAsciiCharsBenchmark.writeDslJsonJava:·gc.time                                            128  thrpt    5         6.000                    ms
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala                                                    128  thrpt    5   2032368.379 ±  204794.842   ops/s
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.alloc.rate                                     128  thrpt    5       990.023 ±      53.224  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                128  thrpt    5       766.874 ±      47.201    B/op
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                            128  thrpt    5         0.037 ±       0.143  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                       128  thrpt    5         0.029 ±       0.112    B/op
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                        128  thrpt    5       944.608 ±    1422.645  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                   128  thrpt    5       735.802 ±    1160.535    B/op
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.count                                          128  thrpt    5         7.000                counts
[info] StringOfNonAsciiCharsBenchmark.writeJacksonScala:·gc.time                                           128  thrpt    5         8.000                    ms
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala                                                   128  thrpt    5   2188359.502 ±   46358.046   ops/s
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.alloc.rate                                    128  thrpt    5       582.713 ±      30.048  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                               128  thrpt    5       419.145 ±      27.445    B/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                           128  thrpt    5         0.554 ±       4.678  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                      128  thrpt    5         0.401 ±       3.392    B/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                       128  thrpt    5       538.712 ±    1159.620  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                  128  thrpt    5       388.066 ±     835.396    B/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.count                                         128  thrpt    5         4.000                counts
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScala:·gc.time                                          128  thrpt    5         6.000                    ms
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc                                           128  thrpt    5   2317990.050 ±    8181.550   ops/s
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                            128  thrpt    5         0.066 ±       0.424  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                       128  thrpt    5         0.045 ±       0.288    B/op
[info] StringOfNonAsciiCharsBenchmark.writeJsoniterScalaPrealloc:·gc.count                                 128  thrpt    5           ≈ 0                counts
[info] StringOfNonAsciiCharsBenchmark.writePlayJson                                                        128  thrpt    5   2018630.691 ±   43394.248   ops/s
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.alloc.rate                                         128  thrpt    5       904.917 ±      38.672  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.alloc.rate.norm                                    128  thrpt    5       705.604 ±      40.821    B/op
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                128  thrpt    5         0.017 ±       0.067  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5         0.013 ±       0.053    B/op
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                            128  thrpt    5       805.105 ±    1155.723  MB/sec
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5       628.680 ±     918.995    B/op
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.count                                              128  thrpt    5         6.000                counts
[info] StringOfNonAsciiCharsBenchmark.writePlayJson:·gc.time                                               128  thrpt    5         6.000                    ms
[info] TwitterAPIBenchmark.readCirce                                                                       N/A  thrpt    5      6071.264 ±      60.195   ops/s
[info] TwitterAPIBenchmark.readCirce:·gc.alloc.rate                                                        N/A  thrpt    5       747.036 ±      23.870  MB/sec
[info] TwitterAPIBenchmark.readCirce:·gc.alloc.rate.norm                                                   N/A  thrpt    5    193665.998 ±    6974.951    B/op
[info] TwitterAPIBenchmark.readCirce:·gc.churn.PS_Eden_Space                                               N/A  thrpt    5         0.041 ±       0.199  MB/sec
[info] TwitterAPIBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                          N/A  thrpt    5        10.692 ±      51.369    B/op
[info] TwitterAPIBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                           N/A  thrpt    5       809.208 ±    1159.647  MB/sec
[info] TwitterAPIBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                      N/A  thrpt    5    209837.030 ±  301686.696    B/op
[info] TwitterAPIBenchmark.readCirce:·gc.count                                                             N/A  thrpt    5         6.000                counts
[info] TwitterAPIBenchmark.readCirce:·gc.time                                                              N/A  thrpt    5         6.000                    ms
[info] TwitterAPIBenchmark.readJacksonScala                                                                N/A  thrpt    5     18659.313 ±     718.532   ops/s
[info] TwitterAPIBenchmark.readJacksonScala:·gc.alloc.rate                                                 N/A  thrpt    5       254.399 ±      30.172  MB/sec
[info] TwitterAPIBenchmark.readJacksonScala:·gc.alloc.rate.norm                                            N/A  thrpt    5     21466.173 ±    3363.396    B/op
[info] TwitterAPIBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                        N/A  thrpt    5         0.004 ±       0.036  MB/sec
[info] TwitterAPIBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                                   N/A  thrpt    5         0.350 ±       3.015    B/op
[info] TwitterAPIBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                                    N/A  thrpt    5       237.261 ±    1270.623  MB/sec
[info] TwitterAPIBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                               N/A  thrpt    5     20126.723 ±  107965.781    B/op
[info] TwitterAPIBenchmark.readJacksonScala:·gc.count                                                      N/A  thrpt    5         2.000                counts
[info] TwitterAPIBenchmark.readJacksonScala:·gc.time                                                       N/A  thrpt    5         6.000                    ms
[info] TwitterAPIBenchmark.readJsoniterScala                                                               N/A  thrpt    5     19955.105 ±     429.383   ops/s
[info] TwitterAPIBenchmark.readJsoniterScala:·gc.alloc.rate                                                N/A  thrpt    5       186.065 ±      16.501  MB/sec
[info] TwitterAPIBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                           N/A  thrpt    5     14677.112 ±    1375.955    B/op
[info] TwitterAPIBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                       N/A  thrpt    5         0.004 ±       0.036  MB/sec
[info] TwitterAPIBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                                  N/A  thrpt    5         0.328 ±       2.826    B/op
[info] TwitterAPIBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                                   N/A  thrpt    5       102.300 ±     880.832  MB/sec
[info] TwitterAPIBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                              N/A  thrpt    5      8065.565 ±   69446.950    B/op
[info] TwitterAPIBenchmark.readJsoniterScala:·gc.count                                                     N/A  thrpt    5         1.000                counts
[info] TwitterAPIBenchmark.readJsoniterScala:·gc.time                                                      N/A  thrpt    5         2.000                    ms
[info] TwitterAPIBenchmark.readPlayJson                                                                    N/A  thrpt    5      7296.712 ±     131.459   ops/s
[info] TwitterAPIBenchmark.readPlayJson:·gc.alloc.rate                                                     N/A  thrpt    5      2006.918 ±      45.078  MB/sec
[info] TwitterAPIBenchmark.readPlayJson:·gc.alloc.rate.norm                                                N/A  thrpt    5    432906.735 ±    7066.840    B/op
[info] TwitterAPIBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                            N/A  thrpt    5         0.017 ±       0.104  MB/sec
[info] TwitterAPIBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                       N/A  thrpt    5         3.609 ±      22.665    B/op
[info] TwitterAPIBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                        N/A  thrpt    5      2011.157 ±      26.902  MB/sec
[info] TwitterAPIBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                                   N/A  thrpt    5    433830.217 ±   11599.724    B/op
[info] TwitterAPIBenchmark.readPlayJson:·gc.count                                                          N/A  thrpt    5        15.000                counts
[info] TwitterAPIBenchmark.readPlayJson:·gc.time                                                           N/A  thrpt    5        17.000                    ms
[info] TwitterAPIBenchmark.writeJacksonScala                                                               N/A  thrpt    5     53745.403 ±     663.565   ops/s
[info] TwitterAPIBenchmark.writeJacksonScala:·gc.alloc.rate                                                N/A  thrpt    5       690.939 ±      13.108  MB/sec
[info] TwitterAPIBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                           N/A  thrpt    5     20235.595 ±     416.055    B/op
[info] TwitterAPIBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                       N/A  thrpt    5         0.012 ±       0.044  MB/sec
[info] TwitterAPIBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                                  N/A  thrpt    5         0.365 ±       1.284    B/op
[info] TwitterAPIBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                                   N/A  thrpt    5       673.390 ±       0.266  MB/sec
[info] TwitterAPIBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                              N/A  thrpt    5     19721.676 ±     242.323    B/op
[info] TwitterAPIBenchmark.writeJacksonScala:·gc.count                                                     N/A  thrpt    5         5.000                counts
[info] TwitterAPIBenchmark.writeJacksonScala:·gc.time                                                      N/A  thrpt    5         5.000                    ms
[info] TwitterAPIBenchmark.writeJsoniterScala                                                              N/A  thrpt    5     79795.713 ±    1647.324   ops/s
[info] TwitterAPIBenchmark.writeJsoniterScala:·gc.alloc.rate                                               N/A  thrpt    5       548.036 ±      35.546  MB/sec
[info] TwitterAPIBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                          N/A  thrpt    5     10810.349 ±     710.599    B/op
[info] TwitterAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                      N/A  thrpt    5         0.643 ±       5.450  MB/sec
[info] TwitterAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                                 N/A  thrpt    5        12.805 ±     108.492    B/op
[info] TwitterAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                                  N/A  thrpt    5       535.336 ±    1152.351  MB/sec
[info] TwitterAPIBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                             N/A  thrpt    5     10569.991 ±   22754.127    B/op
[info] TwitterAPIBenchmark.writeJsoniterScala:·gc.count                                                    N/A  thrpt    5         4.000                counts
[info] TwitterAPIBenchmark.writeJsoniterScala:·gc.time                                                     N/A  thrpt    5         6.000                    ms
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc                                                      N/A  thrpt    5     78555.032 ±     571.342   ops/s
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                       N/A  thrpt    5         7.986 ±       0.061  MB/sec
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                                  N/A  thrpt    5       160.005 ±       0.001    B/op
[info] TwitterAPIBenchmark.writeJsoniterScalaPrealloc:·gc.count                                            N/A  thrpt    5           ≈ 0                counts
[info] VectorOfBooleansBenchmark.readCirce                                                                 128  thrpt    5    303921.031 ±    5868.128   ops/s
[info] VectorOfBooleansBenchmark.readCirce:·gc.alloc.rate                                                  128  thrpt    5      1669.824 ±      30.547  MB/sec
[info] VectorOfBooleansBenchmark.readCirce:·gc.alloc.rate.norm                                             128  thrpt    5      8648.035 ±     255.906    B/op
[info] VectorOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space                                         128  thrpt    5         0.050 ±       0.146  MB/sec
[info] VectorOfBooleansBenchmark.readCirce:·gc.churn.PS_Eden_Space.norm                                    128  thrpt    5         0.259 ±       0.756    B/op
[info] VectorOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space                                     128  thrpt    5      1618.714 ±    1425.409  MB/sec
[info] VectorOfBooleansBenchmark.readCirce:·gc.churn.PS_Survivor_Space.norm                                128  thrpt    5      8384.556 ±    7412.196    B/op
[info] VectorOfBooleansBenchmark.readCirce:·gc.count                                                       128  thrpt    5        12.000                counts
[info] VectorOfBooleansBenchmark.readCirce:·gc.time                                                        128  thrpt    5        11.000                    ms
[info] VectorOfBooleansBenchmark.readJacksonScala                                                          128  thrpt    5    481594.142 ±   20096.695   ops/s
[info] VectorOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate                                           128  thrpt    5       549.599 ±      58.049  MB/sec
[info] VectorOfBooleansBenchmark.readJacksonScala:·gc.alloc.rate.norm                                      128  thrpt    5      1796.377 ±     185.232    B/op
[info] VectorOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space                                  128  thrpt    5         0.254 ±       2.053  MB/sec
[info] VectorOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Eden_Space.norm                             128  thrpt    5         0.833 ±       6.742    B/op
[info] VectorOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space                              128  thrpt    5       539.161 ±    1160.584  MB/sec
[info] VectorOfBooleansBenchmark.readJacksonScala:·gc.churn.PS_Survivor_Space.norm                         128  thrpt    5      1758.764 ±    3786.745    B/op
[info] VectorOfBooleansBenchmark.readJacksonScala:·gc.count                                                128  thrpt    5         4.000                counts
[info] VectorOfBooleansBenchmark.readJacksonScala:·gc.time                                                 128  thrpt    5         5.000                    ms
[info] VectorOfBooleansBenchmark.readJsoniterScala                                                         128  thrpt    5   1211115.494 ±   25470.848   ops/s
[info] VectorOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate                                          128  thrpt    5       659.675 ±      12.286  MB/sec
[info] VectorOfBooleansBenchmark.readJsoniterScala:·gc.alloc.rate.norm                                     128  thrpt    5       857.365 ±      18.116    B/op
[info] VectorOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5         0.585 ±       4.902  MB/sec
[info] VectorOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5         0.760 ±       6.367    B/op
[info] VectorOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5       672.584 ±       2.109  MB/sec
[info] VectorOfBooleansBenchmark.readJsoniterScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5       874.149 ±      17.388    B/op
[info] VectorOfBooleansBenchmark.readJsoniterScala:·gc.count                                               128  thrpt    5         5.000                counts
[info] VectorOfBooleansBenchmark.readJsoniterScala:·gc.time                                                128  thrpt    5         6.000                    ms
[info] VectorOfBooleansBenchmark.readPlayJson                                                              128  thrpt    5    104388.995 ±    4008.110   ops/s
[info] VectorOfBooleansBenchmark.readPlayJson:·gc.alloc.rate                                               128  thrpt    5      3342.755 ±     105.141  MB/sec
[info] VectorOfBooleansBenchmark.readPlayJson:·gc.alloc.rate.norm                                          128  thrpt    5     50400.373 ±     929.413    B/op
[info] VectorOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space                                      128  thrpt    5         0.062 ±       0.150  MB/sec
[info] VectorOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5         0.942 ±       2.281    B/op
[info] VectorOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space                                  128  thrpt    5      3261.044 ±    1173.877  MB/sec
[info] VectorOfBooleansBenchmark.readPlayJson:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5     49176.664 ±   18054.277    B/op
[info] VectorOfBooleansBenchmark.readPlayJson:·gc.count                                                    128  thrpt    5        24.000                counts
[info] VectorOfBooleansBenchmark.readPlayJson:·gc.time                                                     128  thrpt    5        23.000                    ms
[info] VectorOfBooleansBenchmark.readUPickle                                                               128  thrpt    5    600603.059 ±    8457.768   ops/s
[info] VectorOfBooleansBenchmark.readUPickle:·gc.alloc.rate                                                128  thrpt    5      1805.796 ±      43.874  MB/sec
[info] VectorOfBooleansBenchmark.readUPickle:·gc.alloc.rate.norm                                           128  thrpt    5      4731.550 ±     134.307    B/op
[info] VectorOfBooleansBenchmark.readUPickle:·gc.churn.PS_Eden_Space                                       128  thrpt    5         0.071 ±       0.146  MB/sec
[info] VectorOfBooleansBenchmark.readUPickle:·gc.churn.PS_Eden_Space.norm                                  128  thrpt    5         0.186 ±       0.384    B/op
[info] VectorOfBooleansBenchmark.readUPickle:·gc.churn.PS_Survivor_Space                                   128  thrpt    5      1753.556 ±    1416.329  MB/sec
[info] VectorOfBooleansBenchmark.readUPickle:·gc.churn.PS_Survivor_Space.norm                              128  thrpt    5      4597.176 ±    3764.330    B/op
[info] VectorOfBooleansBenchmark.readUPickle:·gc.count                                                     128  thrpt    5        13.000                counts
[info] VectorOfBooleansBenchmark.readUPickle:·gc.time                                                      128  thrpt    5        12.000                    ms
[info] VectorOfBooleansBenchmark.writeCirce                                                                128  thrpt    5    337562.568 ±    5259.756   ops/s
[info] VectorOfBooleansBenchmark.writeCirce:·gc.alloc.rate                                                 128  thrpt    5       552.297 ±      35.849  MB/sec
[info] VectorOfBooleansBenchmark.writeCirce:·gc.alloc.rate.norm                                            128  thrpt    5      2575.494 ±     185.477    B/op
[info] VectorOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space                                        128  thrpt    5         0.162 ±       1.310  MB/sec
[info] VectorOfBooleansBenchmark.writeCirce:·gc.churn.PS_Eden_Space.norm                                   128  thrpt    5         0.757 ±       6.110    B/op
[info] VectorOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space                                    128  thrpt    5       539.696 ±    1161.737  MB/sec
[info] VectorOfBooleansBenchmark.writeCirce:·gc.churn.PS_Survivor_Space.norm                               128  thrpt    5      2518.554 ±    5421.566    B/op
[info] VectorOfBooleansBenchmark.writeCirce:·gc.count                                                      128  thrpt    5         4.000                counts
[info] VectorOfBooleansBenchmark.writeCirce:·gc.time                                                       128  thrpt    5         4.000                    ms
[info] VectorOfBooleansBenchmark.writeJacksonScala                                                         128  thrpt    5    691601.391 ±   23677.804   ops/s
[info] VectorOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate                                          128  thrpt    5       545.404 ±      46.023  MB/sec
[info] VectorOfBooleansBenchmark.writeJacksonScala:·gc.alloc.rate.norm                                     128  thrpt    5      1241.226 ±      94.013    B/op
[info] VectorOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space                                 128  thrpt    5         0.167 ±       1.390  MB/sec
[info] VectorOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Eden_Space.norm                            128  thrpt    5         0.380 ±       3.168    B/op
[info] VectorOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space                             128  thrpt    5       538.908 ±    1160.041  MB/sec
[info] VectorOfBooleansBenchmark.writeJacksonScala:·gc.churn.PS_Survivor_Space.norm                        128  thrpt    5      1226.059 ±    2639.729    B/op
[info] VectorOfBooleansBenchmark.writeJacksonScala:·gc.count                                               128  thrpt    5         4.000                counts
[info] VectorOfBooleansBenchmark.writeJacksonScala:·gc.time                                                128  thrpt    5         5.000                    ms
[info] VectorOfBooleansBenchmark.writeJsoniterScala                                                        128  thrpt    5   1394254.800 ±   47820.512   ops/s
[info] VectorOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate                                         128  thrpt    5       664.242 ±      19.238  MB/sec
[info] VectorOfBooleansBenchmark.writeJsoniterScala:·gc.alloc.rate.norm                                    128  thrpt    5       749.900 ±      25.144    B/op
[info] VectorOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space                                128  thrpt    5         0.577 ±       4.786  MB/sec
[info] VectorOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Eden_Space.norm                           128  thrpt    5         0.646 ±       5.361    B/op
[info] VectorOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space                            128  thrpt    5       673.300 ±       2.263  MB/sec
[info] VectorOfBooleansBenchmark.writeJsoniterScala:·gc.churn.PS_Survivor_Space.norm                       128  thrpt    5       760.140 ±      24.197    B/op
[info] VectorOfBooleansBenchmark.writeJsoniterScala:·gc.count                                              128  thrpt    5         5.000                counts
[info] VectorOfBooleansBenchmark.writeJsoniterScala:·gc.time                                               128  thrpt    5         7.000                    ms
[info] VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc                                                128  thrpt    5   1490013.827 ±   26857.346   ops/s
[info] VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate                                 128  thrpt    5         1.095 ±       9.264  MB/sec
[info] VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.alloc.rate.norm                            128  thrpt    5         1.167 ±       9.869    B/op
[info] VectorOfBooleansBenchmark.writeJsoniterScalaPrealloc:·gc.count                                      128  thrpt    5           ≈ 0                counts
[info] VectorOfBooleansBenchmark.writePlayJson                                                             128  thrpt    5    441394.292 ±    8253.478   ops/s
[info] VectorOfBooleansBenchmark.writePlayJson:·gc.alloc.rate                                              128  thrpt    5       676.320 ±      16.757  MB/sec
[info] VectorOfBooleansBenchmark.writePlayJson:·gc.alloc.rate.norm                                         128  thrpt    5      2411.869 ±      67.226    B/op
[info] VectorOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space                                     128  thrpt    5         0.021 ±       0.080  MB/sec
[info] VectorOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Eden_Space.norm                                128  thrpt    5         0.074 ±       0.285    B/op
[info] VectorOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space                                 128  thrpt    5       673.638 ±       1.104  MB/sec
[info] VectorOfBooleansBenchmark.writePlayJson:·gc.churn.PS_Survivor_Space.norm                            128  thrpt    5      2402.320 ±      46.905    B/op
[info] VectorOfBooleansBenchmark.writePlayJson:·gc.count                                                   128  thrpt    5         5.000                counts
[info] VectorOfBooleansBenchmark.writePlayJson:·gc.time                                                    128  thrpt    5         4.000                    ms
[info] VectorOfBooleansBenchmark.writeUPickle                                                              128  thrpt    5    182760.012 ±    4742.599   ops/s
[info] VectorOfBooleansBenchmark.writeUPickle:·gc.alloc.rate                                               128  thrpt    5       489.649 ±      36.177  MB/sec
[info] VectorOfBooleansBenchmark.writeUPickle:·gc.alloc.rate.norm                                          128  thrpt    5      4216.702 ±     213.798    B/op
[info] VectorOfBooleansBenchmark.writeUPickle:·gc.churn.PS_Eden_Space                                      128  thrpt    5         0.585 ±       4.992  MB/sec
[info] VectorOfBooleansBenchmark.writeUPickle:·gc.churn.PS_Eden_Space.norm                                 128  thrpt    5         5.044 ±      43.050    B/op
[info] VectorOfBooleansBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space                                  128  thrpt    5       538.725 ±    1159.648  MB/sec
[info] VectorOfBooleansBenchmark.writeUPickle:·gc.churn.PS_Survivor_Space.norm                             128  thrpt    5      4627.493 ±    9961.373    B/op
[info] VectorOfBooleansBenchmark.writeUPickle:·gc.count                                                    128  thrpt    5         4.000                counts
[info] VectorOfBooleansBenchmark.writeUPickle:·gc.time                                                     128  thrpt    5         7.000                    ms
[info] Benchmark result is saved to jdk10graal.json
[success] Total time: 8368 s, completed Jun 3, 2018 5:47:01 AM
